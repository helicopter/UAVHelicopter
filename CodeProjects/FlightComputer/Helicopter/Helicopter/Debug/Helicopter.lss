
Helicopter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009a  00800200  00009804  00009898  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00009804  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080029a  0080029a  00009932  2**0
                  ALLOC
  3 .stab         000043e0  00000000  00000000  00009934  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000011bd  00000000  00000000  0000dd14  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000eed1  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000d98  00000000  00000000  0000ef00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00014c29  00000000  00000000  0000fc98  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000030c4  00000000  00000000  000248c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00003225  00000000  00000000  00027985  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00003518  00000000  00000000  0002abac  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00006577  00000000  00000000  0002e0c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00007914  00000000  00000000  0003463b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000c20  00000000  00000000  0003bf4f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
	//TODO should this be delete[]?
	delete this->records;
}

void Buffer::enqueue(Record *record)
{
       0:	0c 94 14 01 	jmp	0x228	; 0x228 <__ctors_end>
       4:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
       8:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
       c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      10:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
	if (record != NULL)
      14:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      18:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      1c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
	{
		//Copy the record
		//TODO danger not deep copy. 
		Record *newRecord = record->Copy();
      20:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      24:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      28:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
		
		//Add the record to the linked list.
		if (this->records == NULL)
      2c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      30:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      34:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
		{
			records = newRecord;
      38:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      3c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      40:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      44:	0c 94 f4 37 	jmp	0x6fe8	; 0x6fe8 <__vector_17>
			firstRecord = newRecord;
      48:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      4c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      50:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
			lastRecord = newRecord;
      54:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      58:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      5c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      60:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
		}else
		{
			lastRecord->setNextRecord(newRecord);
      64:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      68:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      6c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      70:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      74:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
			newRecord->setPreviousRecord(lastRecord);
      78:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      7c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      80:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      84:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      88:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
			lastRecord = newRecord;
      8c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      90:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      94:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      98:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
		}
		
		bufferSize++;
      9c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      a0:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      a4:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      a8:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      ac:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      b0:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
	}
}
      b4:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      b8:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      bc:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      c0:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      c4:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
 * This method uses Euler angle rotations.
 */
double MagnetometerSensor::getFRDY()
{
	return (rawMagX * (cos(theta)*sin(sai))) + (rawMagY * (sin(phi)*sin(theta)*sin(sai) + cos(phi)*cos(sai))) + (rawMagZ * (cos(phi)*sin(theta)*sin(sai) - sin(phi)*cos(sai)));
}
      c8:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      cc:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      d0:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      d4:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      d8:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      dc:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      e0:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      e4:	05 a8       	ldd	r0, Z+53	; 0x35
      e6:	4c cd       	rjmp	.-1384   	; 0xfffffb80 <__eeprom_end+0xff7efb80>
      e8:	b2 d4       	rcall	.+2404   	; 0xa4e <_ZN10helicopter5model11SystemModel25YLateralOuterLoopSetpointEf+0x3a>
      ea:	4e b9       	out	0x0e, r20	; 14
      ec:	38 36       	cpi	r19, 0x68	; 104
      ee:	a9 02       	muls	r26, r25
      f0:	0c 50       	subi	r16, 0x0C	; 12
      f2:	b9 91       	ld	r27, Y+
      f4:	86 88       	ldd	r8, Z+22	; 0x16
      f6:	08 3c       	cpi	r16, 0xC8	; 200
      f8:	a6 aa       	std	Z+54, r10	; 0x36
      fa:	aa 2a       	or	r10, r26
      fc:	be 00       	.word	0x00be	; ????
      fe:	00 00       	nop
     100:	80 3f       	cpi	r24, 0xF0	; 240
     102:	07 63       	ori	r16, 0x37	; 55
     104:	42 36       	cpi	r20, 0x62	; 98
     106:	b7 9b       	sbis	0x16, 7	; 22
     108:	d8 a7       	std	Y+40, r29	; 0x28
     10a:	1a 39       	cpi	r17, 0x9A	; 154
     10c:	68 56       	subi	r22, 0x68	; 104
     10e:	18 ae       	std	Y+56, r1	; 0x38
     110:	ba ab       	std	Y+50, r27	; 0x32
     112:	55 8c       	ldd	r5, Z+29	; 0x1d
     114:	1d 3c       	cpi	r17, 0xCD	; 205
     116:	b7 cc       	rjmp	.-1682   	; 0xfffffa86 <__eeprom_end+0xff7efa86>
     118:	57 63       	ori	r21, 0x37	; 55
     11a:	bd 6d       	ori	r27, 0xDD	; 221
     11c:	ed fd       	.word	0xfded	; ????
     11e:	75 3e       	cpi	r23, 0xE5	; 229
     120:	f6 17       	cp	r31, r22
     122:	72 31       	cpi	r23, 0x12	; 18
     124:	bf 00       	.word	0x00bf	; ????
     126:	00 00       	nop
     128:	80 3f       	cpi	r24, 0xF0	; 240
     12a:	08 00       	.word	0x0008	; ????
     12c:	00 00       	nop
     12e:	be 92       	st	-X, r11
     130:	24 49       	sbci	r18, 0x94	; 148
     132:	12 3e       	cpi	r17, 0xE2	; 226
     134:	ab aa       	std	Y+51, r10	; 0x33
     136:	aa 2a       	or	r10, r26
     138:	be cd       	rjmp	.-1156   	; 0xfffffcb6 <__eeprom_end+0xff7efcb6>
     13a:	cc cc       	rjmp	.-1640   	; 0xfffffad4 <__eeprom_end+0xff7efad4>
     13c:	4c 3e       	cpi	r20, 0xEC	; 236
     13e:	00 00       	nop
     140:	00 80       	ld	r0, Z
     142:	be ab       	std	Y+54, r27	; 0x36
     144:	aa aa       	std	Y+50, r10	; 0x32
     146:	aa 3e       	cpi	r26, 0xEA	; 234
     148:	00 00       	nop
     14a:	00 00       	nop
     14c:	bf 00       	.word	0x00bf	; ????
     14e:	00 00       	nop
     150:	80 3f       	cpi	r24, 0xF0	; 240
     152:	00 00       	nop
     154:	00 00       	nop
     156:	00 08       	sbc	r0, r0
     158:	41 78       	andi	r20, 0x81	; 129
     15a:	d3 bb       	out	0x13, r29	; 19
     15c:	43 87       	std	Z+11, r20	; 0x0b
     15e:	d1 13       	cpse	r29, r17
     160:	3d 19       	sub	r19, r13
     162:	0e 3c       	cpi	r16, 0xCE	; 206
     164:	c3 bd       	out	0x23, r28	; 35
     166:	42 82       	std	Z+2, r4	; 0x02
     168:	ad 2b       	or	r26, r29
     16a:	3e 68       	ori	r19, 0x8E	; 142
     16c:	ec 82       	std	Y+4, r14	; 0x04
     16e:	76 be       	out	0x36, r7	; 54
     170:	d9 8f       	std	Y+25, r29	; 0x19
     172:	e1 a9       	ldd	r30, Z+49	; 0x31
     174:	3e 4c       	sbci	r19, 0xCE	; 206
     176:	80 ef       	ldi	r24, 0xF0	; 240
     178:	ff be       	out	0x3f, r15	; 63
     17a:	01 c4       	rjmp	.+2050   	; 0x97e <_ZN10helicopter5model11SystemModel14LateralControlEf+0x40>
     17c:	ff 7f       	andi	r31, 0xFF	; 255
     17e:	3f 00       	.word	0x003f	; ????
     180:	00 00       	nop
	...

00000184 <__trampolines_start>:
     184:	0c 94 1d 15 	jmp	0x2a3a	; 0x2a3a <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv>
     188:	0c 94 87 25 	jmp	0x4b0e	; 0x4b0e <_ZN10helicopter8messages11SyncMessage12buildMessageEPh>
     18c:	0c 94 dc 3e 	jmp	0x7db8	; 0x7db8 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>
     190:	0c 94 bd 2b 	jmp	0x577a	; 0x577a <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>
     194:	0c 94 2b 25 	jmp	0x4a56	; 0x4a56 <_ZN10helicopter8messages11SyncMessageD1Ev>
     198:	0c 94 48 39 	jmp	0x7290	; 0x7290 <_ZN10helicopter5tasks16PIDOuterLoopTask11runTaskImplEv>
     19c:	0c 94 aa 21 	jmp	0x4354	; 0x4354 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>
     1a0:	0c 94 df 2b 	jmp	0x57be	; 0x57be <_ZN10helicopter8messages22SystemTelemetryMessageD0Ev>
     1a4:	0c 94 4e 3f 	jmp	0x7e9c	; 0x7e9c <_ZN10helicopter5tasks4Task7runTaskEv>
     1a8:	0c 94 d8 24 	jmp	0x49b0	; 0x49b0 <_ZN10helicopter8messages7Message12buildMessageEPh>
     1ac:	0c 94 a3 3c 	jmp	0x7946	; 0x7946 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv>
     1b0:	0c 94 cc 21 	jmp	0x4398	; 0x4398 <_ZN10helicopter5tasks12FlashLEDTaskD0Ev>
     1b4:	0c 94 94 3b 	jmp	0x7728	; 0x7728 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>
     1b8:	0c 94 03 2f 	jmp	0x5e06	; 0x5e06 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh>
     1bc:	0c 94 13 3f 	jmp	0x7e26	; 0x7e26 <_ZN10helicopter5tasks4Task11runTaskImplEv>
     1c0:	0c 94 fe 3e 	jmp	0x7dfc	; 0x7dfc <_ZN10helicopter5tasks16SimTelemetryTaskD0Ev>
     1c4:	0c 94 b6 3b 	jmp	0x776c	; 0x776c <_ZN10helicopter5tasks20SensorProcessingTaskD0Ev>
     1c8:	0c 94 df 38 	jmp	0x71be	; 0x71be <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>
     1cc:	0c 94 e9 12 	jmp	0x25d2	; 0x25d2 <_ZN10helicopter7drivers12SerialDriverD1Ev>
     1d0:	0c 94 4d 25 	jmp	0x4a9a	; 0x4a9a <_ZN10helicopter8messages11SyncMessageD0Ev>
     1d4:	0c 94 a2 24 	jmp	0x4944	; 0x4944 <_ZN10helicopter8messages7MessageD0Ev>
     1d8:	0c 94 71 39 	jmp	0x72e2	; 0x72e2 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>
     1dc:	0c 94 db 3f 	jmp	0x7fb6	; 0x7fb6 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>
     1e0:	0c 94 9a 3a 	jmp	0x7534	; 0x7534 <_ZN10helicopter5tasks20SensorProcessingTask11runTaskImplEv>
     1e4:	0c 94 01 39 	jmp	0x7202	; 0x7202 <_ZN10helicopter5tasks16PIDInnerLoopTaskD0Ev>
     1e8:	0c 94 84 24 	jmp	0x4908	; 0x4908 <_ZN10helicopter8messages7MessageD1Ev>
     1ec:	0c 94 2b 14 	jmp	0x2856	; 0x2856 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh>
     1f0:	0c 94 f4 2b 	jmp	0x57e8	; 0x57e8 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv>
     1f4:	0c 94 90 14 	jmp	0x2920	; 0x2920 <_ZN10helicopter5tasks4TaskD1Ev>
     1f8:	0c 94 62 25 	jmp	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages11SyncMessage8getBytesEv>
     1fc:	0c 94 07 13 	jmp	0x260e	; 0x260e <_ZN10helicopter7drivers12SerialDriverD0Ev>
     200:	0c 94 c9 24 	jmp	0x4992	; 0x4992 <_ZN10helicopter8messages7Message8getBytesEv>
     204:	0c 94 c4 38 	jmp	0x7188	; 0x7188 <_ZN10helicopter5tasks16PIDInnerLoopTask11runTaskImplEv>
     208:	0c 94 93 39 	jmp	0x7326	; 0x7326 <_ZN10helicopter5tasks16PIDOuterLoopTaskD0Ev>
     20c:	0c 94 a8 3f 	jmp	0x7f50	; 0x7f50 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv>
     210:	0c 94 1c 13 	jmp	0x2638	; 0x2638 <_ZN10helicopter7drivers12SerialDriver10initializeEv>
     214:	0c 94 d2 13 	jmp	0x27a4	; 0x27a4 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh>
     218:	0c 94 85 38 	jmp	0x710a	; 0x710a <_ZN10helicopter5tasks4Task4initEv>
     21c:	0c 94 ae 14 	jmp	0x295c	; 0x295c <_ZN10helicopter5tasks4TaskD0Ev>
     220:	0c 94 fd 3f 	jmp	0x7ffa	; 0x7ffa <_ZN10helicopter5tasks21TransmitTelemetryTaskD0Ev>
     224:	0c 94 f9 14 	jmp	0x29f2	; 0x29f2 <_ZN10helicopter5tasks12FlashLEDTask4initEv>

00000228 <__ctors_end>:
     228:	11 24       	eor	r1, r1
     22a:	1f be       	out	0x3f, r1	; 63
     22c:	cf ef       	ldi	r28, 0xFF	; 255
     22e:	d1 e2       	ldi	r29, 0x21	; 33
     230:	de bf       	out	0x3e, r29	; 62
     232:	cd bf       	out	0x3d, r28	; 61
     234:	00 e0       	ldi	r16, 0x00	; 0
     236:	0c bf       	out	0x3c, r16	; 60

00000238 <__do_copy_data>:
     238:	12 e0       	ldi	r17, 0x02	; 2
     23a:	a0 e0       	ldi	r26, 0x00	; 0
     23c:	b2 e0       	ldi	r27, 0x02	; 2
     23e:	e4 e0       	ldi	r30, 0x04	; 4
     240:	f8 e9       	ldi	r31, 0x98	; 152
     242:	00 e0       	ldi	r16, 0x00	; 0
     244:	0b bf       	out	0x3b, r16	; 59
     246:	02 c0       	rjmp	.+4      	; 0x24c <__do_copy_data+0x14>
     248:	07 90       	elpm	r0, Z+
     24a:	0d 92       	st	X+, r0
     24c:	aa 39       	cpi	r26, 0x9A	; 154
     24e:	b1 07       	cpc	r27, r17
     250:	d9 f7       	brne	.-10     	; 0x248 <__do_copy_data+0x10>

00000252 <__do_clear_bss>:
     252:	22 e0       	ldi	r18, 0x02	; 2
     254:	aa e9       	ldi	r26, 0x9A	; 154
     256:	b2 e0       	ldi	r27, 0x02	; 2
     258:	01 c0       	rjmp	.+2      	; 0x25c <.do_clear_bss_start>

0000025a <.do_clear_bss_loop>:
     25a:	1d 92       	st	X+, r1

0000025c <.do_clear_bss_start>:
     25c:	a0 3a       	cpi	r26, 0xA0	; 160
     25e:	b2 07       	cpc	r27, r18
     260:	e1 f7       	brne	.-8      	; 0x25a <.do_clear_bss_loop>
     262:	0e 94 45 1f 	call	0x3e8a	; 0x3e8a <main>
     266:	0c 94 00 4c 	jmp	0x9800	; 0x9800 <_exit>

0000026a <__bad_interrupt>:
     26a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000026e <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>:
			 * Y axis is pointing behind the FC
			 * Z axis is pointing up out of the FC
			 */
			

			float MagYawDegrees() const { return magYawDegrees; }
     26e:	cf 93       	push	r28
     270:	df 93       	push	r29
     272:	1f 92       	push	r1
     274:	1f 92       	push	r1
     276:	cd b7       	in	r28, 0x3d	; 61
     278:	de b7       	in	r29, 0x3e	; 62
     27a:	9a 83       	std	Y+2, r25	; 0x02
     27c:	89 83       	std	Y+1, r24	; 0x01
     27e:	89 81       	ldd	r24, Y+1	; 0x01
     280:	9a 81       	ldd	r25, Y+2	; 0x02
     282:	fc 01       	movw	r30, r24
     284:	80 81       	ld	r24, Z
     286:	91 81       	ldd	r25, Z+1	; 0x01
     288:	a2 81       	ldd	r26, Z+2	; 0x02
     28a:	b3 81       	ldd	r27, Z+3	; 0x03
     28c:	bc 01       	movw	r22, r24
     28e:	cd 01       	movw	r24, r26
     290:	0f 90       	pop	r0
     292:	0f 90       	pop	r0
     294:	df 91       	pop	r29
     296:	cf 91       	pop	r28
     298:	08 95       	ret

0000029a <_ZNK10helicopter5model11SystemModel22ReferenceMagYawDegreesEv>:
			void MagYawDegrees(float val) { magYawDegrees = val; }	
				
				
				
			float ReferenceMagYawDegrees() const {return referenceMagYawDegrees;}
     29a:	cf 93       	push	r28
     29c:	df 93       	push	r29
     29e:	1f 92       	push	r1
     2a0:	1f 92       	push	r1
     2a2:	cd b7       	in	r28, 0x3d	; 61
     2a4:	de b7       	in	r29, 0x3e	; 62
     2a6:	9a 83       	std	Y+2, r25	; 0x02
     2a8:	89 83       	std	Y+1, r24	; 0x01
     2aa:	89 81       	ldd	r24, Y+1	; 0x01
     2ac:	9a 81       	ldd	r25, Y+2	; 0x02
     2ae:	fc 01       	movw	r30, r24
     2b0:	84 81       	ldd	r24, Z+4	; 0x04
     2b2:	95 81       	ldd	r25, Z+5	; 0x05
     2b4:	a6 81       	ldd	r26, Z+6	; 0x06
     2b6:	b7 81       	ldd	r27, Z+7	; 0x07
     2b8:	bc 01       	movw	r22, r24
     2ba:	cd 01       	movw	r24, r26
     2bc:	0f 90       	pop	r0
     2be:	0f 90       	pop	r0
     2c0:	df 91       	pop	r29
     2c2:	cf 91       	pop	r28
     2c4:	08 95       	ret

000002c6 <_ZNK10helicopter5model11SystemModel10YawControlEv>:
			void ReferenceMagYawDegrees(float val) { referenceMagYawDegrees = val;}
				
				
			float YawControl() const {return yawControl;}
     2c6:	cf 93       	push	r28
     2c8:	df 93       	push	r29
     2ca:	1f 92       	push	r1
     2cc:	1f 92       	push	r1
     2ce:	cd b7       	in	r28, 0x3d	; 61
     2d0:	de b7       	in	r29, 0x3e	; 62
     2d2:	9a 83       	std	Y+2, r25	; 0x02
     2d4:	89 83       	std	Y+1, r24	; 0x01
     2d6:	89 81       	ldd	r24, Y+1	; 0x01
     2d8:	9a 81       	ldd	r25, Y+2	; 0x02
     2da:	fc 01       	movw	r30, r24
     2dc:	80 85       	ldd	r24, Z+8	; 0x08
     2de:	91 85       	ldd	r25, Z+9	; 0x09
     2e0:	a2 85       	ldd	r26, Z+10	; 0x0a
     2e2:	b3 85       	ldd	r27, Z+11	; 0x0b
     2e4:	bc 01       	movw	r22, r24
     2e6:	cd 01       	movw	r24, r26
     2e8:	0f 90       	pop	r0
     2ea:	0f 90       	pop	r0
     2ec:	df 91       	pop	r29
     2ee:	cf 91       	pop	r28
     2f0:	08 95       	ret

000002f2 <_ZN10helicopter5model11SystemModel10YawControlEf>:
			void YawControl(float val) { yawControl = val;}
     2f2:	cf 93       	push	r28
     2f4:	df 93       	push	r29
     2f6:	00 d0       	rcall	.+0      	; 0x2f8 <_ZN10helicopter5model11SystemModel10YawControlEf+0x6>
     2f8:	00 d0       	rcall	.+0      	; 0x2fa <_ZN10helicopter5model11SystemModel10YawControlEf+0x8>
     2fa:	cd b7       	in	r28, 0x3d	; 61
     2fc:	de b7       	in	r29, 0x3e	; 62
     2fe:	9a 83       	std	Y+2, r25	; 0x02
     300:	89 83       	std	Y+1, r24	; 0x01
     302:	4b 83       	std	Y+3, r20	; 0x03
     304:	5c 83       	std	Y+4, r21	; 0x04
     306:	6d 83       	std	Y+5, r22	; 0x05
     308:	7e 83       	std	Y+6, r23	; 0x06
     30a:	29 81       	ldd	r18, Y+1	; 0x01
     30c:	3a 81       	ldd	r19, Y+2	; 0x02
     30e:	8b 81       	ldd	r24, Y+3	; 0x03
     310:	9c 81       	ldd	r25, Y+4	; 0x04
     312:	ad 81       	ldd	r26, Y+5	; 0x05
     314:	be 81       	ldd	r27, Y+6	; 0x06
     316:	f9 01       	movw	r30, r18
     318:	80 87       	std	Z+8, r24	; 0x08
     31a:	91 87       	std	Z+9, r25	; 0x09
     31c:	a2 87       	std	Z+10, r26	; 0x0a
     31e:	b3 87       	std	Z+11, r27	; 0x0b
     320:	26 96       	adiw	r28, 0x06	; 6
     322:	0f b6       	in	r0, 0x3f	; 63
     324:	f8 94       	cli
     326:	de bf       	out	0x3e, r29	; 62
     328:	0f be       	out	0x3f, r0	; 63
     32a:	cd bf       	out	0x3d, r28	; 61
     32c:	df 91       	pop	r29
     32e:	cf 91       	pop	r28
     330:	08 95       	ret

00000332 <_ZNK10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEv>:
				
			float YawControlBeforeServoLimitsAdjustment() const {return yawControlBeforeServoLimitsAdjustment;}
     332:	cf 93       	push	r28
     334:	df 93       	push	r29
     336:	1f 92       	push	r1
     338:	1f 92       	push	r1
     33a:	cd b7       	in	r28, 0x3d	; 61
     33c:	de b7       	in	r29, 0x3e	; 62
     33e:	9a 83       	std	Y+2, r25	; 0x02
     340:	89 83       	std	Y+1, r24	; 0x01
     342:	89 81       	ldd	r24, Y+1	; 0x01
     344:	9a 81       	ldd	r25, Y+2	; 0x02
     346:	fc 01       	movw	r30, r24
     348:	84 85       	ldd	r24, Z+12	; 0x0c
     34a:	95 85       	ldd	r25, Z+13	; 0x0d
     34c:	a6 85       	ldd	r26, Z+14	; 0x0e
     34e:	b7 85       	ldd	r27, Z+15	; 0x0f
     350:	bc 01       	movw	r22, r24
     352:	cd 01       	movw	r24, r26
     354:	0f 90       	pop	r0
     356:	0f 90       	pop	r0
     358:	df 91       	pop	r29
     35a:	cf 91       	pop	r28
     35c:	08 95       	ret

0000035e <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf>:
			void YawControlBeforeServoLimitsAdjustment(float val) { yawControlBeforeServoLimitsAdjustment = val;}
     35e:	cf 93       	push	r28
     360:	df 93       	push	r29
     362:	00 d0       	rcall	.+0      	; 0x364 <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf+0x6>
     364:	00 d0       	rcall	.+0      	; 0x366 <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf+0x8>
     366:	cd b7       	in	r28, 0x3d	; 61
     368:	de b7       	in	r29, 0x3e	; 62
     36a:	9a 83       	std	Y+2, r25	; 0x02
     36c:	89 83       	std	Y+1, r24	; 0x01
     36e:	4b 83       	std	Y+3, r20	; 0x03
     370:	5c 83       	std	Y+4, r21	; 0x04
     372:	6d 83       	std	Y+5, r22	; 0x05
     374:	7e 83       	std	Y+6, r23	; 0x06
     376:	29 81       	ldd	r18, Y+1	; 0x01
     378:	3a 81       	ldd	r19, Y+2	; 0x02
     37a:	8b 81       	ldd	r24, Y+3	; 0x03
     37c:	9c 81       	ldd	r25, Y+4	; 0x04
     37e:	ad 81       	ldd	r26, Y+5	; 0x05
     380:	be 81       	ldd	r27, Y+6	; 0x06
     382:	f9 01       	movw	r30, r18
     384:	84 87       	std	Z+12, r24	; 0x0c
     386:	95 87       	std	Z+13, r25	; 0x0d
     388:	a6 87       	std	Z+14, r26	; 0x0e
     38a:	b7 87       	std	Z+15, r27	; 0x0f
     38c:	26 96       	adiw	r28, 0x06	; 6
     38e:	0f b6       	in	r0, 0x3f	; 63
     390:	f8 94       	cli
     392:	de bf       	out	0x3e, r29	; 62
     394:	0f be       	out	0x3f, r0	; 63
     396:	cd bf       	out	0x3d, r28	; 61
     398:	df 91       	pop	r29
     39a:	cf 91       	pop	r28
     39c:	08 95       	ret

0000039e <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>:
				
			float YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
     39e:	cf 93       	push	r28
     3a0:	df 93       	push	r29
     3a2:	1f 92       	push	r1
     3a4:	1f 92       	push	r1
     3a6:	cd b7       	in	r28, 0x3d	; 61
     3a8:	de b7       	in	r29, 0x3e	; 62
     3aa:	9a 83       	std	Y+2, r25	; 0x02
     3ac:	89 83       	std	Y+1, r24	; 0x01
     3ae:	89 81       	ldd	r24, Y+1	; 0x01
     3b0:	9a 81       	ldd	r25, Y+2	; 0x02
     3b2:	fc 01       	movw	r30, r24
     3b4:	80 89       	ldd	r24, Z+16	; 0x10
     3b6:	91 89       	ldd	r25, Z+17	; 0x11
     3b8:	a2 89       	ldd	r26, Z+18	; 0x12
     3ba:	b3 89       	ldd	r27, Z+19	; 0x13
     3bc:	bc 01       	movw	r22, r24
     3be:	cd 01       	movw	r24, r26
     3c0:	0f 90       	pop	r0
     3c2:	0f 90       	pop	r0
     3c4:	df 91       	pop	r29
     3c6:	cf 91       	pop	r28
     3c8:	08 95       	ret

000003ca <_ZNK10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEv>:
			void YawVelocityDegreesPerSecond(float val) { yawVelocityDegreesPerSecond = val;}
				
			float ReferenceYawVelocityDegreesPerSecond() const {return referenceYawVelocityDegreesPerSecond;}
     3ca:	cf 93       	push	r28
     3cc:	df 93       	push	r29
     3ce:	1f 92       	push	r1
     3d0:	1f 92       	push	r1
     3d2:	cd b7       	in	r28, 0x3d	; 61
     3d4:	de b7       	in	r29, 0x3e	; 62
     3d6:	9a 83       	std	Y+2, r25	; 0x02
     3d8:	89 83       	std	Y+1, r24	; 0x01
     3da:	89 81       	ldd	r24, Y+1	; 0x01
     3dc:	9a 81       	ldd	r25, Y+2	; 0x02
     3de:	fc 01       	movw	r30, r24
     3e0:	84 89       	ldd	r24, Z+20	; 0x14
     3e2:	95 89       	ldd	r25, Z+21	; 0x15
     3e4:	a6 89       	ldd	r26, Z+22	; 0x16
     3e6:	b7 89       	ldd	r27, Z+23	; 0x17
     3e8:	bc 01       	movw	r22, r24
     3ea:	cd 01       	movw	r24, r26
     3ec:	0f 90       	pop	r0
     3ee:	0f 90       	pop	r0
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	08 95       	ret

000003f6 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>:
			void ReferenceYawVelocityDegreesPerSecond(float val) { referenceYawVelocityDegreesPerSecond = val;}
				
			float YawIntegral() const {return yawIntegral;}
     3f6:	cf 93       	push	r28
     3f8:	df 93       	push	r29
     3fa:	1f 92       	push	r1
     3fc:	1f 92       	push	r1
     3fe:	cd b7       	in	r28, 0x3d	; 61
     400:	de b7       	in	r29, 0x3e	; 62
     402:	9a 83       	std	Y+2, r25	; 0x02
     404:	89 83       	std	Y+1, r24	; 0x01
     406:	89 81       	ldd	r24, Y+1	; 0x01
     408:	9a 81       	ldd	r25, Y+2	; 0x02
     40a:	fc 01       	movw	r30, r24
     40c:	80 8d       	ldd	r24, Z+24	; 0x18
     40e:	91 8d       	ldd	r25, Z+25	; 0x19
     410:	a2 8d       	ldd	r26, Z+26	; 0x1a
     412:	b3 8d       	ldd	r27, Z+27	; 0x1b
     414:	bc 01       	movw	r22, r24
     416:	cd 01       	movw	r24, r26
     418:	0f 90       	pop	r0
     41a:	0f 90       	pop	r0
     41c:	df 91       	pop	r29
     41e:	cf 91       	pop	r28
     420:	08 95       	ret

00000422 <_ZN10helicopter5model11SystemModel11YawIntegralEf>:
			void YawIntegral(float val) { yawIntegral = val;}
     422:	cf 93       	push	r28
     424:	df 93       	push	r29
     426:	00 d0       	rcall	.+0      	; 0x428 <_ZN10helicopter5model11SystemModel11YawIntegralEf+0x6>
     428:	00 d0       	rcall	.+0      	; 0x42a <_ZN10helicopter5model11SystemModel11YawIntegralEf+0x8>
     42a:	cd b7       	in	r28, 0x3d	; 61
     42c:	de b7       	in	r29, 0x3e	; 62
     42e:	9a 83       	std	Y+2, r25	; 0x02
     430:	89 83       	std	Y+1, r24	; 0x01
     432:	4b 83       	std	Y+3, r20	; 0x03
     434:	5c 83       	std	Y+4, r21	; 0x04
     436:	6d 83       	std	Y+5, r22	; 0x05
     438:	7e 83       	std	Y+6, r23	; 0x06
     43a:	29 81       	ldd	r18, Y+1	; 0x01
     43c:	3a 81       	ldd	r19, Y+2	; 0x02
     43e:	8b 81       	ldd	r24, Y+3	; 0x03
     440:	9c 81       	ldd	r25, Y+4	; 0x04
     442:	ad 81       	ldd	r26, Y+5	; 0x05
     444:	be 81       	ldd	r27, Y+6	; 0x06
     446:	f9 01       	movw	r30, r18
     448:	80 8f       	std	Z+24, r24	; 0x18
     44a:	91 8f       	std	Z+25, r25	; 0x19
     44c:	a2 8f       	std	Z+26, r26	; 0x1a
     44e:	b3 8f       	std	Z+27, r27	; 0x1b
     450:	26 96       	adiw	r28, 0x06	; 6
     452:	0f b6       	in	r0, 0x3f	; 63
     454:	f8 94       	cli
     456:	de bf       	out	0x3e, r29	; 62
     458:	0f be       	out	0x3f, r0	; 63
     45a:	cd bf       	out	0x3d, r28	; 61
     45c:	df 91       	pop	r29
     45e:	cf 91       	pop	r28
     460:	08 95       	ret

00000462 <_ZN10helicopter5model11SystemModel15YawProportionalEf>:

			float YawProportional() const {return yawProportional;}
			void YawProportional(float val) { yawProportional = val;}
     462:	cf 93       	push	r28
     464:	df 93       	push	r29
     466:	00 d0       	rcall	.+0      	; 0x468 <_ZN10helicopter5model11SystemModel15YawProportionalEf+0x6>
     468:	00 d0       	rcall	.+0      	; 0x46a <_ZN10helicopter5model11SystemModel15YawProportionalEf+0x8>
     46a:	cd b7       	in	r28, 0x3d	; 61
     46c:	de b7       	in	r29, 0x3e	; 62
     46e:	9a 83       	std	Y+2, r25	; 0x02
     470:	89 83       	std	Y+1, r24	; 0x01
     472:	4b 83       	std	Y+3, r20	; 0x03
     474:	5c 83       	std	Y+4, r21	; 0x04
     476:	6d 83       	std	Y+5, r22	; 0x05
     478:	7e 83       	std	Y+6, r23	; 0x06
     47a:	29 81       	ldd	r18, Y+1	; 0x01
     47c:	3a 81       	ldd	r19, Y+2	; 0x02
     47e:	8b 81       	ldd	r24, Y+3	; 0x03
     480:	9c 81       	ldd	r25, Y+4	; 0x04
     482:	ad 81       	ldd	r26, Y+5	; 0x05
     484:	be 81       	ldd	r27, Y+6	; 0x06
     486:	f9 01       	movw	r30, r18
     488:	84 8f       	std	Z+28, r24	; 0x1c
     48a:	95 8f       	std	Z+29, r25	; 0x1d
     48c:	a6 8f       	std	Z+30, r26	; 0x1e
     48e:	b7 8f       	std	Z+31, r27	; 0x1f
     490:	26 96       	adiw	r28, 0x06	; 6
     492:	0f b6       	in	r0, 0x3f	; 63
     494:	f8 94       	cli
     496:	de bf       	out	0x3e, r29	; 62
     498:	0f be       	out	0x3f, r0	; 63
     49a:	cd bf       	out	0x3d, r28	; 61
     49c:	df 91       	pop	r29
     49e:	cf 91       	pop	r28
     4a0:	08 95       	ret

000004a2 <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf>:

			float YawDerivativeError() const {return yawDerivativeError;}
			void YawDerivativeError(float val) { yawDerivativeError = val;}								
     4a2:	cf 93       	push	r28
     4a4:	df 93       	push	r29
     4a6:	00 d0       	rcall	.+0      	; 0x4a8 <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf+0x6>
     4a8:	00 d0       	rcall	.+0      	; 0x4aa <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf+0x8>
     4aa:	cd b7       	in	r28, 0x3d	; 61
     4ac:	de b7       	in	r29, 0x3e	; 62
     4ae:	9a 83       	std	Y+2, r25	; 0x02
     4b0:	89 83       	std	Y+1, r24	; 0x01
     4b2:	4b 83       	std	Y+3, r20	; 0x03
     4b4:	5c 83       	std	Y+4, r21	; 0x04
     4b6:	6d 83       	std	Y+5, r22	; 0x05
     4b8:	7e 83       	std	Y+6, r23	; 0x06
     4ba:	29 81       	ldd	r18, Y+1	; 0x01
     4bc:	3a 81       	ldd	r19, Y+2	; 0x02
     4be:	8b 81       	ldd	r24, Y+3	; 0x03
     4c0:	9c 81       	ldd	r25, Y+4	; 0x04
     4c2:	ad 81       	ldd	r26, Y+5	; 0x05
     4c4:	be 81       	ldd	r27, Y+6	; 0x06
     4c6:	f9 01       	movw	r30, r18
     4c8:	80 a3       	std	Z+32, r24	; 0x20
     4ca:	91 a3       	std	Z+33, r25	; 0x21
     4cc:	a2 a3       	std	Z+34, r26	; 0x22
     4ce:	b3 a3       	std	Z+35, r27	; 0x23
     4d0:	26 96       	adiw	r28, 0x06	; 6
     4d2:	0f b6       	in	r0, 0x3f	; 63
     4d4:	f8 94       	cli
     4d6:	de bf       	out	0x3e, r29	; 62
     4d8:	0f be       	out	0x3f, r0	; 63
     4da:	cd bf       	out	0x3d, r28	; 61
     4dc:	df 91       	pop	r29
     4de:	cf 91       	pop	r28
     4e0:	08 95       	ret

000004e2 <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>:
																							
		
		
		
			float XNEDBodyFrame() const {return xNEDBodyFrame;}
     4e2:	cf 93       	push	r28
     4e4:	df 93       	push	r29
     4e6:	1f 92       	push	r1
     4e8:	1f 92       	push	r1
     4ea:	cd b7       	in	r28, 0x3d	; 61
     4ec:	de b7       	in	r29, 0x3e	; 62
     4ee:	9a 83       	std	Y+2, r25	; 0x02
     4f0:	89 83       	std	Y+1, r24	; 0x01
     4f2:	89 81       	ldd	r24, Y+1	; 0x01
     4f4:	9a 81       	ldd	r25, Y+2	; 0x02
     4f6:	fc 01       	movw	r30, r24
     4f8:	84 a1       	ldd	r24, Z+36	; 0x24
     4fa:	95 a1       	ldd	r25, Z+37	; 0x25
     4fc:	a6 a1       	ldd	r26, Z+38	; 0x26
     4fe:	b7 a1       	ldd	r27, Z+39	; 0x27
     500:	bc 01       	movw	r22, r24
     502:	cd 01       	movw	r24, r26
     504:	0f 90       	pop	r0
     506:	0f 90       	pop	r0
     508:	df 91       	pop	r29
     50a:	cf 91       	pop	r28
     50c:	08 95       	ret

0000050e <_ZNK10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEv>:
			void XNEDBodyFrame(float val) { xNEDBodyFrame = val;}
						
			float ReferenceXNEDBodyFrame() const {return referenceXNEDBodyFrame;}
     50e:	cf 93       	push	r28
     510:	df 93       	push	r29
     512:	1f 92       	push	r1
     514:	1f 92       	push	r1
     516:	cd b7       	in	r28, 0x3d	; 61
     518:	de b7       	in	r29, 0x3e	; 62
     51a:	9a 83       	std	Y+2, r25	; 0x02
     51c:	89 83       	std	Y+1, r24	; 0x01
     51e:	89 81       	ldd	r24, Y+1	; 0x01
     520:	9a 81       	ldd	r25, Y+2	; 0x02
     522:	fc 01       	movw	r30, r24
     524:	80 a5       	ldd	r24, Z+40	; 0x28
     526:	91 a5       	ldd	r25, Z+41	; 0x29
     528:	a2 a5       	ldd	r26, Z+42	; 0x2a
     52a:	b3 a5       	ldd	r27, Z+43	; 0x2b
     52c:	bc 01       	movw	r22, r24
     52e:	cd 01       	movw	r24, r26
     530:	0f 90       	pop	r0
     532:	0f 90       	pop	r0
     534:	df 91       	pop	r29
     536:	cf 91       	pop	r28
     538:	08 95       	ret

0000053a <_ZNK10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEv>:
			void ReferenceXNEDBodyFrame(float val) { referenceXNEDBodyFrame = val;}

			float LongitudeControlBeforeServoLimitsAdjustment() const {return longitudeControlBeforeServoLimitsAdjustment;}
     53a:	cf 93       	push	r28
     53c:	df 93       	push	r29
     53e:	1f 92       	push	r1
     540:	1f 92       	push	r1
     542:	cd b7       	in	r28, 0x3d	; 61
     544:	de b7       	in	r29, 0x3e	; 62
     546:	9a 83       	std	Y+2, r25	; 0x02
     548:	89 83       	std	Y+1, r24	; 0x01
     54a:	89 81       	ldd	r24, Y+1	; 0x01
     54c:	9a 81       	ldd	r25, Y+2	; 0x02
     54e:	fc 01       	movw	r30, r24
     550:	84 a5       	ldd	r24, Z+44	; 0x2c
     552:	95 a5       	ldd	r25, Z+45	; 0x2d
     554:	a6 a5       	ldd	r26, Z+46	; 0x2e
     556:	b7 a5       	ldd	r27, Z+47	; 0x2f
     558:	bc 01       	movw	r22, r24
     55a:	cd 01       	movw	r24, r26
     55c:	0f 90       	pop	r0
     55e:	0f 90       	pop	r0
     560:	df 91       	pop	r29
     562:	cf 91       	pop	r28
     564:	08 95       	ret

00000566 <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf>:
			void LongitudeControlBeforeServoLimitsAdjustment(float val) { longitudeControlBeforeServoLimitsAdjustment = val;}
     566:	cf 93       	push	r28
     568:	df 93       	push	r29
     56a:	00 d0       	rcall	.+0      	; 0x56c <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf+0x6>
     56c:	00 d0       	rcall	.+0      	; 0x56e <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf+0x8>
     56e:	cd b7       	in	r28, 0x3d	; 61
     570:	de b7       	in	r29, 0x3e	; 62
     572:	9a 83       	std	Y+2, r25	; 0x02
     574:	89 83       	std	Y+1, r24	; 0x01
     576:	4b 83       	std	Y+3, r20	; 0x03
     578:	5c 83       	std	Y+4, r21	; 0x04
     57a:	6d 83       	std	Y+5, r22	; 0x05
     57c:	7e 83       	std	Y+6, r23	; 0x06
     57e:	29 81       	ldd	r18, Y+1	; 0x01
     580:	3a 81       	ldd	r19, Y+2	; 0x02
     582:	8b 81       	ldd	r24, Y+3	; 0x03
     584:	9c 81       	ldd	r25, Y+4	; 0x04
     586:	ad 81       	ldd	r26, Y+5	; 0x05
     588:	be 81       	ldd	r27, Y+6	; 0x06
     58a:	f9 01       	movw	r30, r18
     58c:	84 a7       	std	Z+44, r24	; 0x2c
     58e:	95 a7       	std	Z+45, r25	; 0x2d
     590:	a6 a7       	std	Z+46, r26	; 0x2e
     592:	b7 a7       	std	Z+47, r27	; 0x2f
     594:	26 96       	adiw	r28, 0x06	; 6
     596:	0f b6       	in	r0, 0x3f	; 63
     598:	f8 94       	cli
     59a:	de bf       	out	0x3e, r29	; 62
     59c:	0f be       	out	0x3f, r0	; 63
     59e:	cd bf       	out	0x3d, r28	; 61
     5a0:	df 91       	pop	r29
     5a2:	cf 91       	pop	r28
     5a4:	08 95       	ret

000005a6 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>:

			float LongitudeControl() const {return longitudeControl;}
     5a6:	cf 93       	push	r28
     5a8:	df 93       	push	r29
     5aa:	1f 92       	push	r1
     5ac:	1f 92       	push	r1
     5ae:	cd b7       	in	r28, 0x3d	; 61
     5b0:	de b7       	in	r29, 0x3e	; 62
     5b2:	9a 83       	std	Y+2, r25	; 0x02
     5b4:	89 83       	std	Y+1, r24	; 0x01
     5b6:	89 81       	ldd	r24, Y+1	; 0x01
     5b8:	9a 81       	ldd	r25, Y+2	; 0x02
     5ba:	fc 01       	movw	r30, r24
     5bc:	80 a9       	ldd	r24, Z+48	; 0x30
     5be:	91 a9       	ldd	r25, Z+49	; 0x31
     5c0:	a2 a9       	ldd	r26, Z+50	; 0x32
     5c2:	b3 a9       	ldd	r27, Z+51	; 0x33
     5c4:	bc 01       	movw	r22, r24
     5c6:	cd 01       	movw	r24, r26
     5c8:	0f 90       	pop	r0
     5ca:	0f 90       	pop	r0
     5cc:	df 91       	pop	r29
     5ce:	cf 91       	pop	r28
     5d0:	08 95       	ret

000005d2 <_ZN10helicopter5model11SystemModel16LongitudeControlEf>:
			void LongitudeControl(float val) { longitudeControl = val;}
     5d2:	cf 93       	push	r28
     5d4:	df 93       	push	r29
     5d6:	00 d0       	rcall	.+0      	; 0x5d8 <_ZN10helicopter5model11SystemModel16LongitudeControlEf+0x6>
     5d8:	00 d0       	rcall	.+0      	; 0x5da <_ZN10helicopter5model11SystemModel16LongitudeControlEf+0x8>
     5da:	cd b7       	in	r28, 0x3d	; 61
     5dc:	de b7       	in	r29, 0x3e	; 62
     5de:	9a 83       	std	Y+2, r25	; 0x02
     5e0:	89 83       	std	Y+1, r24	; 0x01
     5e2:	4b 83       	std	Y+3, r20	; 0x03
     5e4:	5c 83       	std	Y+4, r21	; 0x04
     5e6:	6d 83       	std	Y+5, r22	; 0x05
     5e8:	7e 83       	std	Y+6, r23	; 0x06
     5ea:	29 81       	ldd	r18, Y+1	; 0x01
     5ec:	3a 81       	ldd	r19, Y+2	; 0x02
     5ee:	8b 81       	ldd	r24, Y+3	; 0x03
     5f0:	9c 81       	ldd	r25, Y+4	; 0x04
     5f2:	ad 81       	ldd	r26, Y+5	; 0x05
     5f4:	be 81       	ldd	r27, Y+6	; 0x06
     5f6:	f9 01       	movw	r30, r18
     5f8:	80 ab       	std	Z+48, r24	; 0x30
     5fa:	91 ab       	std	Z+49, r25	; 0x31
     5fc:	a2 ab       	std	Z+50, r26	; 0x32
     5fe:	b3 ab       	std	Z+51, r27	; 0x33
     600:	26 96       	adiw	r28, 0x06	; 6
     602:	0f b6       	in	r0, 0x3f	; 63
     604:	f8 94       	cli
     606:	de bf       	out	0x3e, r29	; 62
     608:	0f be       	out	0x3f, r0	; 63
     60a:	cd bf       	out	0x3d, r28	; 61
     60c:	df 91       	pop	r29
     60e:	cf 91       	pop	r28
     610:	08 95       	ret

00000612 <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>:
				
			float XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
     612:	cf 93       	push	r28
     614:	df 93       	push	r29
     616:	1f 92       	push	r1
     618:	1f 92       	push	r1
     61a:	cd b7       	in	r28, 0x3d	; 61
     61c:	de b7       	in	r29, 0x3e	; 62
     61e:	9a 83       	std	Y+2, r25	; 0x02
     620:	89 83       	std	Y+1, r24	; 0x01
     622:	89 81       	ldd	r24, Y+1	; 0x01
     624:	9a 81       	ldd	r25, Y+2	; 0x02
     626:	fc 01       	movw	r30, r24
     628:	84 a9       	ldd	r24, Z+52	; 0x34
     62a:	95 a9       	ldd	r25, Z+53	; 0x35
     62c:	a6 a9       	ldd	r26, Z+54	; 0x36
     62e:	b7 a9       	ldd	r27, Z+55	; 0x37
     630:	bc 01       	movw	r22, r24
     632:	cd 01       	movw	r24, r26
     634:	0f 90       	pop	r0
     636:	0f 90       	pop	r0
     638:	df 91       	pop	r29
     63a:	cf 91       	pop	r28
     63c:	08 95       	ret

0000063e <_ZNK10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEv>:
			void XVelocityMetersPerSecond(float val) { xVelocityMetersPerSecond = val;}
				
			float ReferenceXVelocityMetersPerSecond() const {return referenceXVelocityMetersPerSecond;}
     63e:	cf 93       	push	r28
     640:	df 93       	push	r29
     642:	1f 92       	push	r1
     644:	1f 92       	push	r1
     646:	cd b7       	in	r28, 0x3d	; 61
     648:	de b7       	in	r29, 0x3e	; 62
     64a:	9a 83       	std	Y+2, r25	; 0x02
     64c:	89 83       	std	Y+1, r24	; 0x01
     64e:	89 81       	ldd	r24, Y+1	; 0x01
     650:	9a 81       	ldd	r25, Y+2	; 0x02
     652:	fc 01       	movw	r30, r24
     654:	80 ad       	ldd	r24, Z+56	; 0x38
     656:	91 ad       	ldd	r25, Z+57	; 0x39
     658:	a2 ad       	ldd	r26, Z+58	; 0x3a
     65a:	b3 ad       	ldd	r27, Z+59	; 0x3b
     65c:	bc 01       	movw	r22, r24
     65e:	cd 01       	movw	r24, r26
     660:	0f 90       	pop	r0
     662:	0f 90       	pop	r0
     664:	df 91       	pop	r29
     666:	cf 91       	pop	r28
     668:	08 95       	ret

0000066a <_ZNK10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEv>:
			void ReferenceXVelocityMetersPerSecond(float val) { referenceXVelocityMetersPerSecond = val;}
				
			float XLongitudeOuterLoopSetpoint() const {return xLongitudeOuterLoopSetpoint;}
     66a:	cf 93       	push	r28
     66c:	df 93       	push	r29
     66e:	1f 92       	push	r1
     670:	1f 92       	push	r1
     672:	cd b7       	in	r28, 0x3d	; 61
     674:	de b7       	in	r29, 0x3e	; 62
     676:	9a 83       	std	Y+2, r25	; 0x02
     678:	89 83       	std	Y+1, r24	; 0x01
     67a:	89 81       	ldd	r24, Y+1	; 0x01
     67c:	9a 81       	ldd	r25, Y+2	; 0x02
     67e:	fc 01       	movw	r30, r24
     680:	84 ad       	ldd	r24, Z+60	; 0x3c
     682:	95 ad       	ldd	r25, Z+61	; 0x3d
     684:	a6 ad       	ldd	r26, Z+62	; 0x3e
     686:	b7 ad       	ldd	r27, Z+63	; 0x3f
     688:	bc 01       	movw	r22, r24
     68a:	cd 01       	movw	r24, r26
     68c:	0f 90       	pop	r0
     68e:	0f 90       	pop	r0
     690:	df 91       	pop	r29
     692:	cf 91       	pop	r28
     694:	08 95       	ret

00000696 <_ZN10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEf>:
			void XLongitudeOuterLoopSetpoint(float val) { xLongitudeOuterLoopSetpoint = val;}
     696:	cf 93       	push	r28
     698:	df 93       	push	r29
     69a:	00 d0       	rcall	.+0      	; 0x69c <_ZN10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEf+0x6>
     69c:	00 d0       	rcall	.+0      	; 0x69e <_ZN10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEf+0x8>
     69e:	cd b7       	in	r28, 0x3d	; 61
     6a0:	de b7       	in	r29, 0x3e	; 62
     6a2:	9a 83       	std	Y+2, r25	; 0x02
     6a4:	89 83       	std	Y+1, r24	; 0x01
     6a6:	4b 83       	std	Y+3, r20	; 0x03
     6a8:	5c 83       	std	Y+4, r21	; 0x04
     6aa:	6d 83       	std	Y+5, r22	; 0x05
     6ac:	7e 83       	std	Y+6, r23	; 0x06
     6ae:	29 81       	ldd	r18, Y+1	; 0x01
     6b0:	3a 81       	ldd	r19, Y+2	; 0x02
     6b2:	8b 81       	ldd	r24, Y+3	; 0x03
     6b4:	9c 81       	ldd	r25, Y+4	; 0x04
     6b6:	ad 81       	ldd	r26, Y+5	; 0x05
     6b8:	be 81       	ldd	r27, Y+6	; 0x06
     6ba:	f9 01       	movw	r30, r18
     6bc:	84 af       	std	Z+60, r24	; 0x3c
     6be:	95 af       	std	Z+61, r25	; 0x3d
     6c0:	a6 af       	std	Z+62, r26	; 0x3e
     6c2:	b7 af       	std	Z+63, r27	; 0x3f
     6c4:	26 96       	adiw	r28, 0x06	; 6
     6c6:	0f b6       	in	r0, 0x3f	; 63
     6c8:	f8 94       	cli
     6ca:	de bf       	out	0x3e, r29	; 62
     6cc:	0f be       	out	0x3f, r0	; 63
     6ce:	cd bf       	out	0x3d, r28	; 61
     6d0:	df 91       	pop	r29
     6d2:	cf 91       	pop	r28
     6d4:	08 95       	ret

000006d6 <_ZN10helicopter5model11SystemModel13XProportionalEf>:
				
			float XProportional() const {return xProportional;}
			void XProportional(float val) { xProportional = val;}
     6d6:	cf 93       	push	r28
     6d8:	df 93       	push	r29
     6da:	00 d0       	rcall	.+0      	; 0x6dc <_ZN10helicopter5model11SystemModel13XProportionalEf+0x6>
     6dc:	00 d0       	rcall	.+0      	; 0x6de <_ZN10helicopter5model11SystemModel13XProportionalEf+0x8>
     6de:	cd b7       	in	r28, 0x3d	; 61
     6e0:	de b7       	in	r29, 0x3e	; 62
     6e2:	9a 83       	std	Y+2, r25	; 0x02
     6e4:	89 83       	std	Y+1, r24	; 0x01
     6e6:	4b 83       	std	Y+3, r20	; 0x03
     6e8:	5c 83       	std	Y+4, r21	; 0x04
     6ea:	6d 83       	std	Y+5, r22	; 0x05
     6ec:	7e 83       	std	Y+6, r23	; 0x06
     6ee:	89 81       	ldd	r24, Y+1	; 0x01
     6f0:	9a 81       	ldd	r25, Y+2	; 0x02
     6f2:	9c 01       	movw	r18, r24
     6f4:	20 5c       	subi	r18, 0xC0	; 192
     6f6:	3f 4f       	sbci	r19, 0xFF	; 255
     6f8:	8b 81       	ldd	r24, Y+3	; 0x03
     6fa:	9c 81       	ldd	r25, Y+4	; 0x04
     6fc:	ad 81       	ldd	r26, Y+5	; 0x05
     6fe:	be 81       	ldd	r27, Y+6	; 0x06
     700:	f9 01       	movw	r30, r18
     702:	80 83       	st	Z, r24
     704:	91 83       	std	Z+1, r25	; 0x01
     706:	a2 83       	std	Z+2, r26	; 0x02
     708:	b3 83       	std	Z+3, r27	; 0x03
     70a:	26 96       	adiw	r28, 0x06	; 6
     70c:	0f b6       	in	r0, 0x3f	; 63
     70e:	f8 94       	cli
     710:	de bf       	out	0x3e, r29	; 62
     712:	0f be       	out	0x3f, r0	; 63
     714:	cd bf       	out	0x3d, r28	; 61
     716:	df 91       	pop	r29
     718:	cf 91       	pop	r28
     71a:	08 95       	ret

0000071c <_ZNK10helicopter5model11SystemModel9XIntegralEv>:
				
			float XIntegral() const {return xIntegral;}
     71c:	cf 93       	push	r28
     71e:	df 93       	push	r29
     720:	1f 92       	push	r1
     722:	1f 92       	push	r1
     724:	cd b7       	in	r28, 0x3d	; 61
     726:	de b7       	in	r29, 0x3e	; 62
     728:	9a 83       	std	Y+2, r25	; 0x02
     72a:	89 83       	std	Y+1, r24	; 0x01
     72c:	89 81       	ldd	r24, Y+1	; 0x01
     72e:	9a 81       	ldd	r25, Y+2	; 0x02
     730:	8c 5b       	subi	r24, 0xBC	; 188
     732:	9f 4f       	sbci	r25, 0xFF	; 255
     734:	fc 01       	movw	r30, r24
     736:	80 81       	ld	r24, Z
     738:	91 81       	ldd	r25, Z+1	; 0x01
     73a:	a2 81       	ldd	r26, Z+2	; 0x02
     73c:	b3 81       	ldd	r27, Z+3	; 0x03
     73e:	bc 01       	movw	r22, r24
     740:	cd 01       	movw	r24, r26
     742:	0f 90       	pop	r0
     744:	0f 90       	pop	r0
     746:	df 91       	pop	r29
     748:	cf 91       	pop	r28
     74a:	08 95       	ret

0000074c <_ZN10helicopter5model11SystemModel9XIntegralEf>:
			void XIntegral(float val) { xIntegral = val;}
     74c:	cf 93       	push	r28
     74e:	df 93       	push	r29
     750:	00 d0       	rcall	.+0      	; 0x752 <_ZN10helicopter5model11SystemModel9XIntegralEf+0x6>
     752:	00 d0       	rcall	.+0      	; 0x754 <_ZN10helicopter5model11SystemModel9XIntegralEf+0x8>
     754:	cd b7       	in	r28, 0x3d	; 61
     756:	de b7       	in	r29, 0x3e	; 62
     758:	9a 83       	std	Y+2, r25	; 0x02
     75a:	89 83       	std	Y+1, r24	; 0x01
     75c:	4b 83       	std	Y+3, r20	; 0x03
     75e:	5c 83       	std	Y+4, r21	; 0x04
     760:	6d 83       	std	Y+5, r22	; 0x05
     762:	7e 83       	std	Y+6, r23	; 0x06
     764:	89 81       	ldd	r24, Y+1	; 0x01
     766:	9a 81       	ldd	r25, Y+2	; 0x02
     768:	9c 01       	movw	r18, r24
     76a:	2c 5b       	subi	r18, 0xBC	; 188
     76c:	3f 4f       	sbci	r19, 0xFF	; 255
     76e:	8b 81       	ldd	r24, Y+3	; 0x03
     770:	9c 81       	ldd	r25, Y+4	; 0x04
     772:	ad 81       	ldd	r26, Y+5	; 0x05
     774:	be 81       	ldd	r27, Y+6	; 0x06
     776:	f9 01       	movw	r30, r18
     778:	80 83       	st	Z, r24
     77a:	91 83       	std	Z+1, r25	; 0x01
     77c:	a2 83       	std	Z+2, r26	; 0x02
     77e:	b3 83       	std	Z+3, r27	; 0x03
     780:	26 96       	adiw	r28, 0x06	; 6
     782:	0f b6       	in	r0, 0x3f	; 63
     784:	f8 94       	cli
     786:	de bf       	out	0x3e, r29	; 62
     788:	0f be       	out	0x3f, r0	; 63
     78a:	cd bf       	out	0x3d, r28	; 61
     78c:	df 91       	pop	r29
     78e:	cf 91       	pop	r28
     790:	08 95       	ret

00000792 <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf>:
				
			float XDerivativeError() const {return xDerivativeError;}
			void XDerivativeError(float val) { xDerivativeError = val;}
     792:	cf 93       	push	r28
     794:	df 93       	push	r29
     796:	00 d0       	rcall	.+0      	; 0x798 <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf+0x6>
     798:	00 d0       	rcall	.+0      	; 0x79a <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf+0x8>
     79a:	cd b7       	in	r28, 0x3d	; 61
     79c:	de b7       	in	r29, 0x3e	; 62
     79e:	9a 83       	std	Y+2, r25	; 0x02
     7a0:	89 83       	std	Y+1, r24	; 0x01
     7a2:	4b 83       	std	Y+3, r20	; 0x03
     7a4:	5c 83       	std	Y+4, r21	; 0x04
     7a6:	6d 83       	std	Y+5, r22	; 0x05
     7a8:	7e 83       	std	Y+6, r23	; 0x06
     7aa:	89 81       	ldd	r24, Y+1	; 0x01
     7ac:	9a 81       	ldd	r25, Y+2	; 0x02
     7ae:	9c 01       	movw	r18, r24
     7b0:	28 5b       	subi	r18, 0xB8	; 184
     7b2:	3f 4f       	sbci	r19, 0xFF	; 255
     7b4:	8b 81       	ldd	r24, Y+3	; 0x03
     7b6:	9c 81       	ldd	r25, Y+4	; 0x04
     7b8:	ad 81       	ldd	r26, Y+5	; 0x05
     7ba:	be 81       	ldd	r27, Y+6	; 0x06
     7bc:	f9 01       	movw	r30, r18
     7be:	80 83       	st	Z, r24
     7c0:	91 83       	std	Z+1, r25	; 0x01
     7c2:	a2 83       	std	Z+2, r26	; 0x02
     7c4:	b3 83       	std	Z+3, r27	; 0x03
     7c6:	26 96       	adiw	r28, 0x06	; 6
     7c8:	0f b6       	in	r0, 0x3f	; 63
     7ca:	f8 94       	cli
     7cc:	de bf       	out	0x3e, r29	; 62
     7ce:	0f be       	out	0x3f, r0	; 63
     7d0:	cd bf       	out	0x3d, r28	; 61
     7d2:	df 91       	pop	r29
     7d4:	cf 91       	pop	r28
     7d6:	08 95       	ret

000007d8 <_ZNK10helicopter5model11SystemModel17ThetaPitchDegreesEv>:
				
		
			float ThetaPitchDegrees() const {return thetaPitchDegrees;}
     7d8:	cf 93       	push	r28
     7da:	df 93       	push	r29
     7dc:	1f 92       	push	r1
     7de:	1f 92       	push	r1
     7e0:	cd b7       	in	r28, 0x3d	; 61
     7e2:	de b7       	in	r29, 0x3e	; 62
     7e4:	9a 83       	std	Y+2, r25	; 0x02
     7e6:	89 83       	std	Y+1, r24	; 0x01
     7e8:	89 81       	ldd	r24, Y+1	; 0x01
     7ea:	9a 81       	ldd	r25, Y+2	; 0x02
     7ec:	84 5b       	subi	r24, 0xB4	; 180
     7ee:	9f 4f       	sbci	r25, 0xFF	; 255
     7f0:	fc 01       	movw	r30, r24
     7f2:	80 81       	ld	r24, Z
     7f4:	91 81       	ldd	r25, Z+1	; 0x01
     7f6:	a2 81       	ldd	r26, Z+2	; 0x02
     7f8:	b3 81       	ldd	r27, Z+3	; 0x03
     7fa:	bc 01       	movw	r22, r24
     7fc:	cd 01       	movw	r24, r26
     7fe:	0f 90       	pop	r0
     800:	0f 90       	pop	r0
     802:	df 91       	pop	r29
     804:	cf 91       	pop	r28
     806:	08 95       	ret

00000808 <_ZNK10helicopter5model11SystemModel33PitchAngularVelocityRadsPerSecondEv>:
			void ThetaPitchDegrees(float val) {thetaPitchDegrees = val;}
		
			float PitchAngularVelocityRadsPerSecond() const {return pitchAngularVelocityRadsPerSecond;}
     808:	cf 93       	push	r28
     80a:	df 93       	push	r29
     80c:	1f 92       	push	r1
     80e:	1f 92       	push	r1
     810:	cd b7       	in	r28, 0x3d	; 61
     812:	de b7       	in	r29, 0x3e	; 62
     814:	9a 83       	std	Y+2, r25	; 0x02
     816:	89 83       	std	Y+1, r24	; 0x01
     818:	89 81       	ldd	r24, Y+1	; 0x01
     81a:	9a 81       	ldd	r25, Y+2	; 0x02
     81c:	80 5b       	subi	r24, 0xB0	; 176
     81e:	9f 4f       	sbci	r25, 0xFF	; 255
     820:	fc 01       	movw	r30, r24
     822:	80 81       	ld	r24, Z
     824:	91 81       	ldd	r25, Z+1	; 0x01
     826:	a2 81       	ldd	r26, Z+2	; 0x02
     828:	b3 81       	ldd	r27, Z+3	; 0x03
     82a:	bc 01       	movw	r22, r24
     82c:	cd 01       	movw	r24, r26
     82e:	0f 90       	pop	r0
     830:	0f 90       	pop	r0
     832:	df 91       	pop	r29
     834:	cf 91       	pop	r28
     836:	08 95       	ret

00000838 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>:
						
						
						


			float YNEDBodyFrame() const {return yNEDBodyFrame;}
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	1f 92       	push	r1
     83e:	1f 92       	push	r1
     840:	cd b7       	in	r28, 0x3d	; 61
     842:	de b7       	in	r29, 0x3e	; 62
     844:	9a 83       	std	Y+2, r25	; 0x02
     846:	89 83       	std	Y+1, r24	; 0x01
     848:	89 81       	ldd	r24, Y+1	; 0x01
     84a:	9a 81       	ldd	r25, Y+2	; 0x02
     84c:	8c 5a       	subi	r24, 0xAC	; 172
     84e:	9f 4f       	sbci	r25, 0xFF	; 255
     850:	fc 01       	movw	r30, r24
     852:	80 81       	ld	r24, Z
     854:	91 81       	ldd	r25, Z+1	; 0x01
     856:	a2 81       	ldd	r26, Z+2	; 0x02
     858:	b3 81       	ldd	r27, Z+3	; 0x03
     85a:	bc 01       	movw	r22, r24
     85c:	cd 01       	movw	r24, r26
     85e:	0f 90       	pop	r0
     860:	0f 90       	pop	r0
     862:	df 91       	pop	r29
     864:	cf 91       	pop	r28
     866:	08 95       	ret

00000868 <_ZNK10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEv>:
			void YNEDBodyFrame(float val) { yNEDBodyFrame = val;}

			float ReferenceYNEDBodyFrame() const {return referenceYNEDBodyFrame;}
     868:	cf 93       	push	r28
     86a:	df 93       	push	r29
     86c:	1f 92       	push	r1
     86e:	1f 92       	push	r1
     870:	cd b7       	in	r28, 0x3d	; 61
     872:	de b7       	in	r29, 0x3e	; 62
     874:	9a 83       	std	Y+2, r25	; 0x02
     876:	89 83       	std	Y+1, r24	; 0x01
     878:	89 81       	ldd	r24, Y+1	; 0x01
     87a:	9a 81       	ldd	r25, Y+2	; 0x02
     87c:	88 5a       	subi	r24, 0xA8	; 168
     87e:	9f 4f       	sbci	r25, 0xFF	; 255
     880:	fc 01       	movw	r30, r24
     882:	80 81       	ld	r24, Z
     884:	91 81       	ldd	r25, Z+1	; 0x01
     886:	a2 81       	ldd	r26, Z+2	; 0x02
     888:	b3 81       	ldd	r27, Z+3	; 0x03
     88a:	bc 01       	movw	r22, r24
     88c:	cd 01       	movw	r24, r26
     88e:	0f 90       	pop	r0
     890:	0f 90       	pop	r0
     892:	df 91       	pop	r29
     894:	cf 91       	pop	r28
     896:	08 95       	ret

00000898 <_ZNK10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEv>:
			void ReferenceYNEDBodyFrame(float val) { referenceYNEDBodyFrame = val;}

			float LateralControlBeforeServoLimitsAdjustment() const {return lateralControlBeforeServoLimitsAdjustment;}
     898:	cf 93       	push	r28
     89a:	df 93       	push	r29
     89c:	1f 92       	push	r1
     89e:	1f 92       	push	r1
     8a0:	cd b7       	in	r28, 0x3d	; 61
     8a2:	de b7       	in	r29, 0x3e	; 62
     8a4:	9a 83       	std	Y+2, r25	; 0x02
     8a6:	89 83       	std	Y+1, r24	; 0x01
     8a8:	89 81       	ldd	r24, Y+1	; 0x01
     8aa:	9a 81       	ldd	r25, Y+2	; 0x02
     8ac:	84 5a       	subi	r24, 0xA4	; 164
     8ae:	9f 4f       	sbci	r25, 0xFF	; 255
     8b0:	fc 01       	movw	r30, r24
     8b2:	80 81       	ld	r24, Z
     8b4:	91 81       	ldd	r25, Z+1	; 0x01
     8b6:	a2 81       	ldd	r26, Z+2	; 0x02
     8b8:	b3 81       	ldd	r27, Z+3	; 0x03
     8ba:	bc 01       	movw	r22, r24
     8bc:	cd 01       	movw	r24, r26
     8be:	0f 90       	pop	r0
     8c0:	0f 90       	pop	r0
     8c2:	df 91       	pop	r29
     8c4:	cf 91       	pop	r28
     8c6:	08 95       	ret

000008c8 <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf>:
			void LateralControlBeforeServoLimitsAdjustment(float val) { lateralControlBeforeServoLimitsAdjustment = val;}
     8c8:	cf 93       	push	r28
     8ca:	df 93       	push	r29
     8cc:	00 d0       	rcall	.+0      	; 0x8ce <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf+0x6>
     8ce:	00 d0       	rcall	.+0      	; 0x8d0 <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf+0x8>
     8d0:	cd b7       	in	r28, 0x3d	; 61
     8d2:	de b7       	in	r29, 0x3e	; 62
     8d4:	9a 83       	std	Y+2, r25	; 0x02
     8d6:	89 83       	std	Y+1, r24	; 0x01
     8d8:	4b 83       	std	Y+3, r20	; 0x03
     8da:	5c 83       	std	Y+4, r21	; 0x04
     8dc:	6d 83       	std	Y+5, r22	; 0x05
     8de:	7e 83       	std	Y+6, r23	; 0x06
     8e0:	89 81       	ldd	r24, Y+1	; 0x01
     8e2:	9a 81       	ldd	r25, Y+2	; 0x02
     8e4:	9c 01       	movw	r18, r24
     8e6:	24 5a       	subi	r18, 0xA4	; 164
     8e8:	3f 4f       	sbci	r19, 0xFF	; 255
     8ea:	8b 81       	ldd	r24, Y+3	; 0x03
     8ec:	9c 81       	ldd	r25, Y+4	; 0x04
     8ee:	ad 81       	ldd	r26, Y+5	; 0x05
     8f0:	be 81       	ldd	r27, Y+6	; 0x06
     8f2:	f9 01       	movw	r30, r18
     8f4:	80 83       	st	Z, r24
     8f6:	91 83       	std	Z+1, r25	; 0x01
     8f8:	a2 83       	std	Z+2, r26	; 0x02
     8fa:	b3 83       	std	Z+3, r27	; 0x03
     8fc:	26 96       	adiw	r28, 0x06	; 6
     8fe:	0f b6       	in	r0, 0x3f	; 63
     900:	f8 94       	cli
     902:	de bf       	out	0x3e, r29	; 62
     904:	0f be       	out	0x3f, r0	; 63
     906:	cd bf       	out	0x3d, r28	; 61
     908:	df 91       	pop	r29
     90a:	cf 91       	pop	r28
     90c:	08 95       	ret

0000090e <_ZNK10helicopter5model11SystemModel14LateralControlEv>:

			float LateralControl() const {return lateralControl;}
     90e:	cf 93       	push	r28
     910:	df 93       	push	r29
     912:	1f 92       	push	r1
     914:	1f 92       	push	r1
     916:	cd b7       	in	r28, 0x3d	; 61
     918:	de b7       	in	r29, 0x3e	; 62
     91a:	9a 83       	std	Y+2, r25	; 0x02
     91c:	89 83       	std	Y+1, r24	; 0x01
     91e:	89 81       	ldd	r24, Y+1	; 0x01
     920:	9a 81       	ldd	r25, Y+2	; 0x02
     922:	80 5a       	subi	r24, 0xA0	; 160
     924:	9f 4f       	sbci	r25, 0xFF	; 255
     926:	fc 01       	movw	r30, r24
     928:	80 81       	ld	r24, Z
     92a:	91 81       	ldd	r25, Z+1	; 0x01
     92c:	a2 81       	ldd	r26, Z+2	; 0x02
     92e:	b3 81       	ldd	r27, Z+3	; 0x03
     930:	bc 01       	movw	r22, r24
     932:	cd 01       	movw	r24, r26
     934:	0f 90       	pop	r0
     936:	0f 90       	pop	r0
     938:	df 91       	pop	r29
     93a:	cf 91       	pop	r28
     93c:	08 95       	ret

0000093e <_ZN10helicopter5model11SystemModel14LateralControlEf>:
			void LateralControl(float val) { lateralControl = val;}
     93e:	cf 93       	push	r28
     940:	df 93       	push	r29
     942:	00 d0       	rcall	.+0      	; 0x944 <_ZN10helicopter5model11SystemModel14LateralControlEf+0x6>
     944:	00 d0       	rcall	.+0      	; 0x946 <_ZN10helicopter5model11SystemModel14LateralControlEf+0x8>
     946:	cd b7       	in	r28, 0x3d	; 61
     948:	de b7       	in	r29, 0x3e	; 62
     94a:	9a 83       	std	Y+2, r25	; 0x02
     94c:	89 83       	std	Y+1, r24	; 0x01
     94e:	4b 83       	std	Y+3, r20	; 0x03
     950:	5c 83       	std	Y+4, r21	; 0x04
     952:	6d 83       	std	Y+5, r22	; 0x05
     954:	7e 83       	std	Y+6, r23	; 0x06
     956:	89 81       	ldd	r24, Y+1	; 0x01
     958:	9a 81       	ldd	r25, Y+2	; 0x02
     95a:	9c 01       	movw	r18, r24
     95c:	20 5a       	subi	r18, 0xA0	; 160
     95e:	3f 4f       	sbci	r19, 0xFF	; 255
     960:	8b 81       	ldd	r24, Y+3	; 0x03
     962:	9c 81       	ldd	r25, Y+4	; 0x04
     964:	ad 81       	ldd	r26, Y+5	; 0x05
     966:	be 81       	ldd	r27, Y+6	; 0x06
     968:	f9 01       	movw	r30, r18
     96a:	80 83       	st	Z, r24
     96c:	91 83       	std	Z+1, r25	; 0x01
     96e:	a2 83       	std	Z+2, r26	; 0x02
     970:	b3 83       	std	Z+3, r27	; 0x03
     972:	26 96       	adiw	r28, 0x06	; 6
     974:	0f b6       	in	r0, 0x3f	; 63
     976:	f8 94       	cli
     978:	de bf       	out	0x3e, r29	; 62
     97a:	0f be       	out	0x3f, r0	; 63
     97c:	cd bf       	out	0x3d, r28	; 61
     97e:	df 91       	pop	r29
     980:	cf 91       	pop	r28
     982:	08 95       	ret

00000984 <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>:

			float YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
     984:	cf 93       	push	r28
     986:	df 93       	push	r29
     988:	1f 92       	push	r1
     98a:	1f 92       	push	r1
     98c:	cd b7       	in	r28, 0x3d	; 61
     98e:	de b7       	in	r29, 0x3e	; 62
     990:	9a 83       	std	Y+2, r25	; 0x02
     992:	89 83       	std	Y+1, r24	; 0x01
     994:	89 81       	ldd	r24, Y+1	; 0x01
     996:	9a 81       	ldd	r25, Y+2	; 0x02
     998:	8c 59       	subi	r24, 0x9C	; 156
     99a:	9f 4f       	sbci	r25, 0xFF	; 255
     99c:	fc 01       	movw	r30, r24
     99e:	80 81       	ld	r24, Z
     9a0:	91 81       	ldd	r25, Z+1	; 0x01
     9a2:	a2 81       	ldd	r26, Z+2	; 0x02
     9a4:	b3 81       	ldd	r27, Z+3	; 0x03
     9a6:	bc 01       	movw	r22, r24
     9a8:	cd 01       	movw	r24, r26
     9aa:	0f 90       	pop	r0
     9ac:	0f 90       	pop	r0
     9ae:	df 91       	pop	r29
     9b0:	cf 91       	pop	r28
     9b2:	08 95       	ret

000009b4 <_ZNK10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEv>:
			void YVelocityMetersPerSecond(float val) { yVelocityMetersPerSecond = val;}

			float ReferenceYVelocityMetersPerSecond() const {return referenceYVelocityMetersPerSecond;}
     9b4:	cf 93       	push	r28
     9b6:	df 93       	push	r29
     9b8:	1f 92       	push	r1
     9ba:	1f 92       	push	r1
     9bc:	cd b7       	in	r28, 0x3d	; 61
     9be:	de b7       	in	r29, 0x3e	; 62
     9c0:	9a 83       	std	Y+2, r25	; 0x02
     9c2:	89 83       	std	Y+1, r24	; 0x01
     9c4:	89 81       	ldd	r24, Y+1	; 0x01
     9c6:	9a 81       	ldd	r25, Y+2	; 0x02
     9c8:	88 59       	subi	r24, 0x98	; 152
     9ca:	9f 4f       	sbci	r25, 0xFF	; 255
     9cc:	fc 01       	movw	r30, r24
     9ce:	80 81       	ld	r24, Z
     9d0:	91 81       	ldd	r25, Z+1	; 0x01
     9d2:	a2 81       	ldd	r26, Z+2	; 0x02
     9d4:	b3 81       	ldd	r27, Z+3	; 0x03
     9d6:	bc 01       	movw	r22, r24
     9d8:	cd 01       	movw	r24, r26
     9da:	0f 90       	pop	r0
     9dc:	0f 90       	pop	r0
     9de:	df 91       	pop	r29
     9e0:	cf 91       	pop	r28
     9e2:	08 95       	ret

000009e4 <_ZNK10helicopter5model11SystemModel25YLateralOuterLoopSetpointEv>:
			void ReferenceYVelocityMetersPerSecond(float val) { referenceYVelocityMetersPerSecond = val;}

			float YLateralOuterLoopSetpoint() const {return yLateralOuterLoopSetpoint;}
     9e4:	cf 93       	push	r28
     9e6:	df 93       	push	r29
     9e8:	1f 92       	push	r1
     9ea:	1f 92       	push	r1
     9ec:	cd b7       	in	r28, 0x3d	; 61
     9ee:	de b7       	in	r29, 0x3e	; 62
     9f0:	9a 83       	std	Y+2, r25	; 0x02
     9f2:	89 83       	std	Y+1, r24	; 0x01
     9f4:	89 81       	ldd	r24, Y+1	; 0x01
     9f6:	9a 81       	ldd	r25, Y+2	; 0x02
     9f8:	84 59       	subi	r24, 0x94	; 148
     9fa:	9f 4f       	sbci	r25, 0xFF	; 255
     9fc:	fc 01       	movw	r30, r24
     9fe:	80 81       	ld	r24, Z
     a00:	91 81       	ldd	r25, Z+1	; 0x01
     a02:	a2 81       	ldd	r26, Z+2	; 0x02
     a04:	b3 81       	ldd	r27, Z+3	; 0x03
     a06:	bc 01       	movw	r22, r24
     a08:	cd 01       	movw	r24, r26
     a0a:	0f 90       	pop	r0
     a0c:	0f 90       	pop	r0
     a0e:	df 91       	pop	r29
     a10:	cf 91       	pop	r28
     a12:	08 95       	ret

00000a14 <_ZN10helicopter5model11SystemModel25YLateralOuterLoopSetpointEf>:
			void YLateralOuterLoopSetpoint(float val) { yLateralOuterLoopSetpoint = val;}
     a14:	cf 93       	push	r28
     a16:	df 93       	push	r29
     a18:	00 d0       	rcall	.+0      	; 0xa1a <_ZN10helicopter5model11SystemModel25YLateralOuterLoopSetpointEf+0x6>
     a1a:	00 d0       	rcall	.+0      	; 0xa1c <_ZN10helicopter5model11SystemModel25YLateralOuterLoopSetpointEf+0x8>
     a1c:	cd b7       	in	r28, 0x3d	; 61
     a1e:	de b7       	in	r29, 0x3e	; 62
     a20:	9a 83       	std	Y+2, r25	; 0x02
     a22:	89 83       	std	Y+1, r24	; 0x01
     a24:	4b 83       	std	Y+3, r20	; 0x03
     a26:	5c 83       	std	Y+4, r21	; 0x04
     a28:	6d 83       	std	Y+5, r22	; 0x05
     a2a:	7e 83       	std	Y+6, r23	; 0x06
     a2c:	89 81       	ldd	r24, Y+1	; 0x01
     a2e:	9a 81       	ldd	r25, Y+2	; 0x02
     a30:	9c 01       	movw	r18, r24
     a32:	24 59       	subi	r18, 0x94	; 148
     a34:	3f 4f       	sbci	r19, 0xFF	; 255
     a36:	8b 81       	ldd	r24, Y+3	; 0x03
     a38:	9c 81       	ldd	r25, Y+4	; 0x04
     a3a:	ad 81       	ldd	r26, Y+5	; 0x05
     a3c:	be 81       	ldd	r27, Y+6	; 0x06
     a3e:	f9 01       	movw	r30, r18
     a40:	80 83       	st	Z, r24
     a42:	91 83       	std	Z+1, r25	; 0x01
     a44:	a2 83       	std	Z+2, r26	; 0x02
     a46:	b3 83       	std	Z+3, r27	; 0x03
     a48:	26 96       	adiw	r28, 0x06	; 6
     a4a:	0f b6       	in	r0, 0x3f	; 63
     a4c:	f8 94       	cli
     a4e:	de bf       	out	0x3e, r29	; 62
     a50:	0f be       	out	0x3f, r0	; 63
     a52:	cd bf       	out	0x3d, r28	; 61
     a54:	df 91       	pop	r29
     a56:	cf 91       	pop	r28
     a58:	08 95       	ret

00000a5a <_ZN10helicopter5model11SystemModel13YProportionalEf>:

			float YProportional() const {return yProportional;}
			void YProportional(float val) { yProportional = val;}
     a5a:	cf 93       	push	r28
     a5c:	df 93       	push	r29
     a5e:	00 d0       	rcall	.+0      	; 0xa60 <_ZN10helicopter5model11SystemModel13YProportionalEf+0x6>
     a60:	00 d0       	rcall	.+0      	; 0xa62 <_ZN10helicopter5model11SystemModel13YProportionalEf+0x8>
     a62:	cd b7       	in	r28, 0x3d	; 61
     a64:	de b7       	in	r29, 0x3e	; 62
     a66:	9a 83       	std	Y+2, r25	; 0x02
     a68:	89 83       	std	Y+1, r24	; 0x01
     a6a:	4b 83       	std	Y+3, r20	; 0x03
     a6c:	5c 83       	std	Y+4, r21	; 0x04
     a6e:	6d 83       	std	Y+5, r22	; 0x05
     a70:	7e 83       	std	Y+6, r23	; 0x06
     a72:	89 81       	ldd	r24, Y+1	; 0x01
     a74:	9a 81       	ldd	r25, Y+2	; 0x02
     a76:	9c 01       	movw	r18, r24
     a78:	20 59       	subi	r18, 0x90	; 144
     a7a:	3f 4f       	sbci	r19, 0xFF	; 255
     a7c:	8b 81       	ldd	r24, Y+3	; 0x03
     a7e:	9c 81       	ldd	r25, Y+4	; 0x04
     a80:	ad 81       	ldd	r26, Y+5	; 0x05
     a82:	be 81       	ldd	r27, Y+6	; 0x06
     a84:	f9 01       	movw	r30, r18
     a86:	80 83       	st	Z, r24
     a88:	91 83       	std	Z+1, r25	; 0x01
     a8a:	a2 83       	std	Z+2, r26	; 0x02
     a8c:	b3 83       	std	Z+3, r27	; 0x03
     a8e:	26 96       	adiw	r28, 0x06	; 6
     a90:	0f b6       	in	r0, 0x3f	; 63
     a92:	f8 94       	cli
     a94:	de bf       	out	0x3e, r29	; 62
     a96:	0f be       	out	0x3f, r0	; 63
     a98:	cd bf       	out	0x3d, r28	; 61
     a9a:	df 91       	pop	r29
     a9c:	cf 91       	pop	r28
     a9e:	08 95       	ret

00000aa0 <_ZNK10helicopter5model11SystemModel9YIntegralEv>:

			float YIntegral() const {return yIntegral;}
     aa0:	cf 93       	push	r28
     aa2:	df 93       	push	r29
     aa4:	1f 92       	push	r1
     aa6:	1f 92       	push	r1
     aa8:	cd b7       	in	r28, 0x3d	; 61
     aaa:	de b7       	in	r29, 0x3e	; 62
     aac:	9a 83       	std	Y+2, r25	; 0x02
     aae:	89 83       	std	Y+1, r24	; 0x01
     ab0:	89 81       	ldd	r24, Y+1	; 0x01
     ab2:	9a 81       	ldd	r25, Y+2	; 0x02
     ab4:	8c 58       	subi	r24, 0x8C	; 140
     ab6:	9f 4f       	sbci	r25, 0xFF	; 255
     ab8:	fc 01       	movw	r30, r24
     aba:	80 81       	ld	r24, Z
     abc:	91 81       	ldd	r25, Z+1	; 0x01
     abe:	a2 81       	ldd	r26, Z+2	; 0x02
     ac0:	b3 81       	ldd	r27, Z+3	; 0x03
     ac2:	bc 01       	movw	r22, r24
     ac4:	cd 01       	movw	r24, r26
     ac6:	0f 90       	pop	r0
     ac8:	0f 90       	pop	r0
     aca:	df 91       	pop	r29
     acc:	cf 91       	pop	r28
     ace:	08 95       	ret

00000ad0 <_ZN10helicopter5model11SystemModel9YIntegralEf>:
			void YIntegral(float val) { yIntegral = val;}
     ad0:	cf 93       	push	r28
     ad2:	df 93       	push	r29
     ad4:	00 d0       	rcall	.+0      	; 0xad6 <_ZN10helicopter5model11SystemModel9YIntegralEf+0x6>
     ad6:	00 d0       	rcall	.+0      	; 0xad8 <_ZN10helicopter5model11SystemModel9YIntegralEf+0x8>
     ad8:	cd b7       	in	r28, 0x3d	; 61
     ada:	de b7       	in	r29, 0x3e	; 62
     adc:	9a 83       	std	Y+2, r25	; 0x02
     ade:	89 83       	std	Y+1, r24	; 0x01
     ae0:	4b 83       	std	Y+3, r20	; 0x03
     ae2:	5c 83       	std	Y+4, r21	; 0x04
     ae4:	6d 83       	std	Y+5, r22	; 0x05
     ae6:	7e 83       	std	Y+6, r23	; 0x06
     ae8:	89 81       	ldd	r24, Y+1	; 0x01
     aea:	9a 81       	ldd	r25, Y+2	; 0x02
     aec:	9c 01       	movw	r18, r24
     aee:	2c 58       	subi	r18, 0x8C	; 140
     af0:	3f 4f       	sbci	r19, 0xFF	; 255
     af2:	8b 81       	ldd	r24, Y+3	; 0x03
     af4:	9c 81       	ldd	r25, Y+4	; 0x04
     af6:	ad 81       	ldd	r26, Y+5	; 0x05
     af8:	be 81       	ldd	r27, Y+6	; 0x06
     afa:	f9 01       	movw	r30, r18
     afc:	80 83       	st	Z, r24
     afe:	91 83       	std	Z+1, r25	; 0x01
     b00:	a2 83       	std	Z+2, r26	; 0x02
     b02:	b3 83       	std	Z+3, r27	; 0x03
     b04:	26 96       	adiw	r28, 0x06	; 6
     b06:	0f b6       	in	r0, 0x3f	; 63
     b08:	f8 94       	cli
     b0a:	de bf       	out	0x3e, r29	; 62
     b0c:	0f be       	out	0x3f, r0	; 63
     b0e:	cd bf       	out	0x3d, r28	; 61
     b10:	df 91       	pop	r29
     b12:	cf 91       	pop	r28
     b14:	08 95       	ret

00000b16 <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf>:

			float YDerivativeError() const {return yDerivativeError;}
			void YDerivativeError(float val) { yDerivativeError = val;}
     b16:	cf 93       	push	r28
     b18:	df 93       	push	r29
     b1a:	00 d0       	rcall	.+0      	; 0xb1c <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf+0x6>
     b1c:	00 d0       	rcall	.+0      	; 0xb1e <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf+0x8>
     b1e:	cd b7       	in	r28, 0x3d	; 61
     b20:	de b7       	in	r29, 0x3e	; 62
     b22:	9a 83       	std	Y+2, r25	; 0x02
     b24:	89 83       	std	Y+1, r24	; 0x01
     b26:	4b 83       	std	Y+3, r20	; 0x03
     b28:	5c 83       	std	Y+4, r21	; 0x04
     b2a:	6d 83       	std	Y+5, r22	; 0x05
     b2c:	7e 83       	std	Y+6, r23	; 0x06
     b2e:	89 81       	ldd	r24, Y+1	; 0x01
     b30:	9a 81       	ldd	r25, Y+2	; 0x02
     b32:	9c 01       	movw	r18, r24
     b34:	28 58       	subi	r18, 0x88	; 136
     b36:	3f 4f       	sbci	r19, 0xFF	; 255
     b38:	8b 81       	ldd	r24, Y+3	; 0x03
     b3a:	9c 81       	ldd	r25, Y+4	; 0x04
     b3c:	ad 81       	ldd	r26, Y+5	; 0x05
     b3e:	be 81       	ldd	r27, Y+6	; 0x06
     b40:	f9 01       	movw	r30, r18
     b42:	80 83       	st	Z, r24
     b44:	91 83       	std	Z+1, r25	; 0x01
     b46:	a2 83       	std	Z+2, r26	; 0x02
     b48:	b3 83       	std	Z+3, r27	; 0x03
     b4a:	26 96       	adiw	r28, 0x06	; 6
     b4c:	0f b6       	in	r0, 0x3f	; 63
     b4e:	f8 94       	cli
     b50:	de bf       	out	0x3e, r29	; 62
     b52:	0f be       	out	0x3f, r0	; 63
     b54:	cd bf       	out	0x3d, r28	; 61
     b56:	df 91       	pop	r29
     b58:	cf 91       	pop	r28
     b5a:	08 95       	ret

00000b5c <_ZNK10helicopter5model11SystemModel14PhiRollDegreesEv>:


			float PhiRollDegrees() const {return phiRollDegrees;}
     b5c:	cf 93       	push	r28
     b5e:	df 93       	push	r29
     b60:	1f 92       	push	r1
     b62:	1f 92       	push	r1
     b64:	cd b7       	in	r28, 0x3d	; 61
     b66:	de b7       	in	r29, 0x3e	; 62
     b68:	9a 83       	std	Y+2, r25	; 0x02
     b6a:	89 83       	std	Y+1, r24	; 0x01
     b6c:	89 81       	ldd	r24, Y+1	; 0x01
     b6e:	9a 81       	ldd	r25, Y+2	; 0x02
     b70:	84 58       	subi	r24, 0x84	; 132
     b72:	9f 4f       	sbci	r25, 0xFF	; 255
     b74:	fc 01       	movw	r30, r24
     b76:	80 81       	ld	r24, Z
     b78:	91 81       	ldd	r25, Z+1	; 0x01
     b7a:	a2 81       	ldd	r26, Z+2	; 0x02
     b7c:	b3 81       	ldd	r27, Z+3	; 0x03
     b7e:	bc 01       	movw	r22, r24
     b80:	cd 01       	movw	r24, r26
     b82:	0f 90       	pop	r0
     b84:	0f 90       	pop	r0
     b86:	df 91       	pop	r29
     b88:	cf 91       	pop	r28
     b8a:	08 95       	ret

00000b8c <_ZNK10helicopter5model11SystemModel32RollAngularVelocityRadsPerSecondEv>:
			void PhiRollDegrees(float val) {phiRollDegrees = val;}

			float RollAngularVelocityRadsPerSecond() const {return rollAngularVelocityRadsPerSecond;}
     b8c:	cf 93       	push	r28
     b8e:	df 93       	push	r29
     b90:	1f 92       	push	r1
     b92:	1f 92       	push	r1
     b94:	cd b7       	in	r28, 0x3d	; 61
     b96:	de b7       	in	r29, 0x3e	; 62
     b98:	9a 83       	std	Y+2, r25	; 0x02
     b9a:	89 83       	std	Y+1, r24	; 0x01
     b9c:	89 81       	ldd	r24, Y+1	; 0x01
     b9e:	9a 81       	ldd	r25, Y+2	; 0x02
     ba0:	80 58       	subi	r24, 0x80	; 128
     ba2:	9f 4f       	sbci	r25, 0xFF	; 255
     ba4:	fc 01       	movw	r30, r24
     ba6:	80 81       	ld	r24, Z
     ba8:	91 81       	ldd	r25, Z+1	; 0x01
     baa:	a2 81       	ldd	r26, Z+2	; 0x02
     bac:	b3 81       	ldd	r27, Z+3	; 0x03
     bae:	bc 01       	movw	r22, r24
     bb0:	cd 01       	movw	r24, r26
     bb2:	0f 90       	pop	r0
     bb4:	0f 90       	pop	r0
     bb6:	df 91       	pop	r29
     bb8:	cf 91       	pop	r28
     bba:	08 95       	ret

00000bbc <_ZNK10helicopter5model11SystemModel13ZNEDBodyFrameEv>:
						

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
			void AltitudeFeetAgl(float val) { altitudeFeetAgl = val; }

			float ZNEDBodyFrame() const { return zNEDBodyFrame; }
     bbc:	cf 93       	push	r28
     bbe:	df 93       	push	r29
     bc0:	1f 92       	push	r1
     bc2:	1f 92       	push	r1
     bc4:	cd b7       	in	r28, 0x3d	; 61
     bc6:	de b7       	in	r29, 0x3e	; 62
     bc8:	9a 83       	std	Y+2, r25	; 0x02
     bca:	89 83       	std	Y+1, r24	; 0x01
     bcc:	89 81       	ldd	r24, Y+1	; 0x01
     bce:	9a 81       	ldd	r25, Y+2	; 0x02
     bd0:	88 57       	subi	r24, 0x78	; 120
     bd2:	9f 4f       	sbci	r25, 0xFF	; 255
     bd4:	fc 01       	movw	r30, r24
     bd6:	80 81       	ld	r24, Z
     bd8:	91 81       	ldd	r25, Z+1	; 0x01
     bda:	a2 81       	ldd	r26, Z+2	; 0x02
     bdc:	b3 81       	ldd	r27, Z+3	; 0x03
     bde:	bc 01       	movw	r22, r24
     be0:	cd 01       	movw	r24, r26
     be2:	0f 90       	pop	r0
     be4:	0f 90       	pop	r0
     be6:	df 91       	pop	r29
     be8:	cf 91       	pop	r28
     bea:	08 95       	ret

00000bec <_ZNK10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEv>:
			void ZNEDBodyFrame(float val) { zNEDBodyFrame = val; }


			float ReferenceZNEDBodyFrameFeet() const {return referenceAltitudeFeet;}
     bec:	cf 93       	push	r28
     bee:	df 93       	push	r29
     bf0:	1f 92       	push	r1
     bf2:	1f 92       	push	r1
     bf4:	cd b7       	in	r28, 0x3d	; 61
     bf6:	de b7       	in	r29, 0x3e	; 62
     bf8:	9a 83       	std	Y+2, r25	; 0x02
     bfa:	89 83       	std	Y+1, r24	; 0x01
     bfc:	89 81       	ldd	r24, Y+1	; 0x01
     bfe:	9a 81       	ldd	r25, Y+2	; 0x02
     c00:	84 57       	subi	r24, 0x74	; 116
     c02:	9f 4f       	sbci	r25, 0xFF	; 255
     c04:	fc 01       	movw	r30, r24
     c06:	80 81       	ld	r24, Z
     c08:	91 81       	ldd	r25, Z+1	; 0x01
     c0a:	a2 81       	ldd	r26, Z+2	; 0x02
     c0c:	b3 81       	ldd	r27, Z+3	; 0x03
     c0e:	bc 01       	movw	r22, r24
     c10:	cd 01       	movw	r24, r26
     c12:	0f 90       	pop	r0
     c14:	0f 90       	pop	r0
     c16:	df 91       	pop	r29
     c18:	cf 91       	pop	r28
     c1a:	08 95       	ret

00000c1c <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>:
			void ReferenceZNEDBodyFrameFeet(float val) { referenceAltitudeFeet = val;}


			float MainRotorCollectiveControl() const {return mainRotorControl;}
     c1c:	cf 93       	push	r28
     c1e:	df 93       	push	r29
     c20:	1f 92       	push	r1
     c22:	1f 92       	push	r1
     c24:	cd b7       	in	r28, 0x3d	; 61
     c26:	de b7       	in	r29, 0x3e	; 62
     c28:	9a 83       	std	Y+2, r25	; 0x02
     c2a:	89 83       	std	Y+1, r24	; 0x01
     c2c:	89 81       	ldd	r24, Y+1	; 0x01
     c2e:	9a 81       	ldd	r25, Y+2	; 0x02
     c30:	80 57       	subi	r24, 0x70	; 112
     c32:	9f 4f       	sbci	r25, 0xFF	; 255
     c34:	fc 01       	movw	r30, r24
     c36:	80 81       	ld	r24, Z
     c38:	91 81       	ldd	r25, Z+1	; 0x01
     c3a:	a2 81       	ldd	r26, Z+2	; 0x02
     c3c:	b3 81       	ldd	r27, Z+3	; 0x03
     c3e:	bc 01       	movw	r22, r24
     c40:	cd 01       	movw	r24, r26
     c42:	0f 90       	pop	r0
     c44:	0f 90       	pop	r0
     c46:	df 91       	pop	r29
     c48:	cf 91       	pop	r28
     c4a:	08 95       	ret

00000c4c <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf>:
			void MainRotorCollectiveControl(float val) { mainRotorControl = val;}
     c4c:	cf 93       	push	r28
     c4e:	df 93       	push	r29
     c50:	00 d0       	rcall	.+0      	; 0xc52 <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf+0x6>
     c52:	00 d0       	rcall	.+0      	; 0xc54 <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf+0x8>
     c54:	cd b7       	in	r28, 0x3d	; 61
     c56:	de b7       	in	r29, 0x3e	; 62
     c58:	9a 83       	std	Y+2, r25	; 0x02
     c5a:	89 83       	std	Y+1, r24	; 0x01
     c5c:	4b 83       	std	Y+3, r20	; 0x03
     c5e:	5c 83       	std	Y+4, r21	; 0x04
     c60:	6d 83       	std	Y+5, r22	; 0x05
     c62:	7e 83       	std	Y+6, r23	; 0x06
     c64:	89 81       	ldd	r24, Y+1	; 0x01
     c66:	9a 81       	ldd	r25, Y+2	; 0x02
     c68:	9c 01       	movw	r18, r24
     c6a:	20 57       	subi	r18, 0x70	; 112
     c6c:	3f 4f       	sbci	r19, 0xFF	; 255
     c6e:	8b 81       	ldd	r24, Y+3	; 0x03
     c70:	9c 81       	ldd	r25, Y+4	; 0x04
     c72:	ad 81       	ldd	r26, Y+5	; 0x05
     c74:	be 81       	ldd	r27, Y+6	; 0x06
     c76:	f9 01       	movw	r30, r18
     c78:	80 83       	st	Z, r24
     c7a:	91 83       	std	Z+1, r25	; 0x01
     c7c:	a2 83       	std	Z+2, r26	; 0x02
     c7e:	b3 83       	std	Z+3, r27	; 0x03
     c80:	26 96       	adiw	r28, 0x06	; 6
     c82:	0f b6       	in	r0, 0x3f	; 63
     c84:	f8 94       	cli
     c86:	de bf       	out	0x3e, r29	; 62
     c88:	0f be       	out	0x3f, r0	; 63
     c8a:	cd bf       	out	0x3d, r28	; 61
     c8c:	df 91       	pop	r29
     c8e:	cf 91       	pop	r28
     c90:	08 95       	ret

00000c92 <_ZNK10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEv>:

			float MainRotorControlBeforeServoLimitsAdjustment() const {return mainRotorControlBeforeServoLimitsAdjustment;}
     c92:	cf 93       	push	r28
     c94:	df 93       	push	r29
     c96:	1f 92       	push	r1
     c98:	1f 92       	push	r1
     c9a:	cd b7       	in	r28, 0x3d	; 61
     c9c:	de b7       	in	r29, 0x3e	; 62
     c9e:	9a 83       	std	Y+2, r25	; 0x02
     ca0:	89 83       	std	Y+1, r24	; 0x01
     ca2:	89 81       	ldd	r24, Y+1	; 0x01
     ca4:	9a 81       	ldd	r25, Y+2	; 0x02
     ca6:	8c 56       	subi	r24, 0x6C	; 108
     ca8:	9f 4f       	sbci	r25, 0xFF	; 255
     caa:	fc 01       	movw	r30, r24
     cac:	80 81       	ld	r24, Z
     cae:	91 81       	ldd	r25, Z+1	; 0x01
     cb0:	a2 81       	ldd	r26, Z+2	; 0x02
     cb2:	b3 81       	ldd	r27, Z+3	; 0x03
     cb4:	bc 01       	movw	r22, r24
     cb6:	cd 01       	movw	r24, r26
     cb8:	0f 90       	pop	r0
     cba:	0f 90       	pop	r0
     cbc:	df 91       	pop	r29
     cbe:	cf 91       	pop	r28
     cc0:	08 95       	ret

00000cc2 <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf>:
			void MainRotorControlBeforeServoLimitsAdjustment(float val) { mainRotorControlBeforeServoLimitsAdjustment = val;}
     cc2:	cf 93       	push	r28
     cc4:	df 93       	push	r29
     cc6:	00 d0       	rcall	.+0      	; 0xcc8 <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf+0x6>
     cc8:	00 d0       	rcall	.+0      	; 0xcca <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf+0x8>
     cca:	cd b7       	in	r28, 0x3d	; 61
     ccc:	de b7       	in	r29, 0x3e	; 62
     cce:	9a 83       	std	Y+2, r25	; 0x02
     cd0:	89 83       	std	Y+1, r24	; 0x01
     cd2:	4b 83       	std	Y+3, r20	; 0x03
     cd4:	5c 83       	std	Y+4, r21	; 0x04
     cd6:	6d 83       	std	Y+5, r22	; 0x05
     cd8:	7e 83       	std	Y+6, r23	; 0x06
     cda:	89 81       	ldd	r24, Y+1	; 0x01
     cdc:	9a 81       	ldd	r25, Y+2	; 0x02
     cde:	9c 01       	movw	r18, r24
     ce0:	2c 56       	subi	r18, 0x6C	; 108
     ce2:	3f 4f       	sbci	r19, 0xFF	; 255
     ce4:	8b 81       	ldd	r24, Y+3	; 0x03
     ce6:	9c 81       	ldd	r25, Y+4	; 0x04
     ce8:	ad 81       	ldd	r26, Y+5	; 0x05
     cea:	be 81       	ldd	r27, Y+6	; 0x06
     cec:	f9 01       	movw	r30, r18
     cee:	80 83       	st	Z, r24
     cf0:	91 83       	std	Z+1, r25	; 0x01
     cf2:	a2 83       	std	Z+2, r26	; 0x02
     cf4:	b3 83       	std	Z+3, r27	; 0x03
     cf6:	26 96       	adiw	r28, 0x06	; 6
     cf8:	0f b6       	in	r0, 0x3f	; 63
     cfa:	f8 94       	cli
     cfc:	de bf       	out	0x3e, r29	; 62
     cfe:	0f be       	out	0x3f, r0	; 63
     d00:	cd bf       	out	0x3d, r28	; 61
     d02:	df 91       	pop	r29
     d04:	cf 91       	pop	r28
     d06:	08 95       	ret

00000d08 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>:

			float ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
     d08:	cf 93       	push	r28
     d0a:	df 93       	push	r29
     d0c:	1f 92       	push	r1
     d0e:	1f 92       	push	r1
     d10:	cd b7       	in	r28, 0x3d	; 61
     d12:	de b7       	in	r29, 0x3e	; 62
     d14:	9a 83       	std	Y+2, r25	; 0x02
     d16:	89 83       	std	Y+1, r24	; 0x01
     d18:	89 81       	ldd	r24, Y+1	; 0x01
     d1a:	9a 81       	ldd	r25, Y+2	; 0x02
     d1c:	88 56       	subi	r24, 0x68	; 104
     d1e:	9f 4f       	sbci	r25, 0xFF	; 255
     d20:	fc 01       	movw	r30, r24
     d22:	80 81       	ld	r24, Z
     d24:	91 81       	ldd	r25, Z+1	; 0x01
     d26:	a2 81       	ldd	r26, Z+2	; 0x02
     d28:	b3 81       	ldd	r27, Z+3	; 0x03
     d2a:	bc 01       	movw	r22, r24
     d2c:	cd 01       	movw	r24, r26
     d2e:	0f 90       	pop	r0
     d30:	0f 90       	pop	r0
     d32:	df 91       	pop	r29
     d34:	cf 91       	pop	r28
     d36:	08 95       	ret

00000d38 <_ZNK10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEv>:
			void ZVelocityFeetPerSecond(float val) { zVelocityFeetPerSecond = val;}

			float ReferenceZVelocityFeetPerSecond() const {return referenceZVelocityFeetPerSecond;}
     d38:	cf 93       	push	r28
     d3a:	df 93       	push	r29
     d3c:	1f 92       	push	r1
     d3e:	1f 92       	push	r1
     d40:	cd b7       	in	r28, 0x3d	; 61
     d42:	de b7       	in	r29, 0x3e	; 62
     d44:	9a 83       	std	Y+2, r25	; 0x02
     d46:	89 83       	std	Y+1, r24	; 0x01
     d48:	89 81       	ldd	r24, Y+1	; 0x01
     d4a:	9a 81       	ldd	r25, Y+2	; 0x02
     d4c:	84 56       	subi	r24, 0x64	; 100
     d4e:	9f 4f       	sbci	r25, 0xFF	; 255
     d50:	fc 01       	movw	r30, r24
     d52:	80 81       	ld	r24, Z
     d54:	91 81       	ldd	r25, Z+1	; 0x01
     d56:	a2 81       	ldd	r26, Z+2	; 0x02
     d58:	b3 81       	ldd	r27, Z+3	; 0x03
     d5a:	bc 01       	movw	r22, r24
     d5c:	cd 01       	movw	r24, r26
     d5e:	0f 90       	pop	r0
     d60:	0f 90       	pop	r0
     d62:	df 91       	pop	r29
     d64:	cf 91       	pop	r28
     d66:	08 95       	ret

00000d68 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>:
			void ReferenceZVelocityFeetPerSecond(float val) { referenceZVelocityFeetPerSecond = val;}

			float ZIntegral() const {return zIntegral;}
     d68:	cf 93       	push	r28
     d6a:	df 93       	push	r29
     d6c:	1f 92       	push	r1
     d6e:	1f 92       	push	r1
     d70:	cd b7       	in	r28, 0x3d	; 61
     d72:	de b7       	in	r29, 0x3e	; 62
     d74:	9a 83       	std	Y+2, r25	; 0x02
     d76:	89 83       	std	Y+1, r24	; 0x01
     d78:	89 81       	ldd	r24, Y+1	; 0x01
     d7a:	9a 81       	ldd	r25, Y+2	; 0x02
     d7c:	80 56       	subi	r24, 0x60	; 96
     d7e:	9f 4f       	sbci	r25, 0xFF	; 255
     d80:	fc 01       	movw	r30, r24
     d82:	80 81       	ld	r24, Z
     d84:	91 81       	ldd	r25, Z+1	; 0x01
     d86:	a2 81       	ldd	r26, Z+2	; 0x02
     d88:	b3 81       	ldd	r27, Z+3	; 0x03
     d8a:	bc 01       	movw	r22, r24
     d8c:	cd 01       	movw	r24, r26
     d8e:	0f 90       	pop	r0
     d90:	0f 90       	pop	r0
     d92:	df 91       	pop	r29
     d94:	cf 91       	pop	r28
     d96:	08 95       	ret

00000d98 <_ZN10helicopter5model11SystemModel9ZIntegralEf>:
			void ZIntegral(float val) { zIntegral = val;}
     d98:	cf 93       	push	r28
     d9a:	df 93       	push	r29
     d9c:	00 d0       	rcall	.+0      	; 0xd9e <_ZN10helicopter5model11SystemModel9ZIntegralEf+0x6>
     d9e:	00 d0       	rcall	.+0      	; 0xda0 <_ZN10helicopter5model11SystemModel9ZIntegralEf+0x8>
     da0:	cd b7       	in	r28, 0x3d	; 61
     da2:	de b7       	in	r29, 0x3e	; 62
     da4:	9a 83       	std	Y+2, r25	; 0x02
     da6:	89 83       	std	Y+1, r24	; 0x01
     da8:	4b 83       	std	Y+3, r20	; 0x03
     daa:	5c 83       	std	Y+4, r21	; 0x04
     dac:	6d 83       	std	Y+5, r22	; 0x05
     dae:	7e 83       	std	Y+6, r23	; 0x06
     db0:	89 81       	ldd	r24, Y+1	; 0x01
     db2:	9a 81       	ldd	r25, Y+2	; 0x02
     db4:	9c 01       	movw	r18, r24
     db6:	20 56       	subi	r18, 0x60	; 96
     db8:	3f 4f       	sbci	r19, 0xFF	; 255
     dba:	8b 81       	ldd	r24, Y+3	; 0x03
     dbc:	9c 81       	ldd	r25, Y+4	; 0x04
     dbe:	ad 81       	ldd	r26, Y+5	; 0x05
     dc0:	be 81       	ldd	r27, Y+6	; 0x06
     dc2:	f9 01       	movw	r30, r18
     dc4:	80 83       	st	Z, r24
     dc6:	91 83       	std	Z+1, r25	; 0x01
     dc8:	a2 83       	std	Z+2, r26	; 0x02
     dca:	b3 83       	std	Z+3, r27	; 0x03
     dcc:	26 96       	adiw	r28, 0x06	; 6
     dce:	0f b6       	in	r0, 0x3f	; 63
     dd0:	f8 94       	cli
     dd2:	de bf       	out	0x3e, r29	; 62
     dd4:	0f be       	out	0x3f, r0	; 63
     dd6:	cd bf       	out	0x3d, r28	; 61
     dd8:	df 91       	pop	r29
     dda:	cf 91       	pop	r28
     ddc:	08 95       	ret

00000dde <_ZN10helicopter5model11SystemModel13ZProportionalEf>:

			float ZProportional() const {return zProportional;}
			void ZProportional(float val) { zProportional = val;}
     dde:	cf 93       	push	r28
     de0:	df 93       	push	r29
     de2:	00 d0       	rcall	.+0      	; 0xde4 <_ZN10helicopter5model11SystemModel13ZProportionalEf+0x6>
     de4:	00 d0       	rcall	.+0      	; 0xde6 <_ZN10helicopter5model11SystemModel13ZProportionalEf+0x8>
     de6:	cd b7       	in	r28, 0x3d	; 61
     de8:	de b7       	in	r29, 0x3e	; 62
     dea:	9a 83       	std	Y+2, r25	; 0x02
     dec:	89 83       	std	Y+1, r24	; 0x01
     dee:	4b 83       	std	Y+3, r20	; 0x03
     df0:	5c 83       	std	Y+4, r21	; 0x04
     df2:	6d 83       	std	Y+5, r22	; 0x05
     df4:	7e 83       	std	Y+6, r23	; 0x06
     df6:	89 81       	ldd	r24, Y+1	; 0x01
     df8:	9a 81       	ldd	r25, Y+2	; 0x02
     dfa:	9c 01       	movw	r18, r24
     dfc:	2c 55       	subi	r18, 0x5C	; 92
     dfe:	3f 4f       	sbci	r19, 0xFF	; 255
     e00:	8b 81       	ldd	r24, Y+3	; 0x03
     e02:	9c 81       	ldd	r25, Y+4	; 0x04
     e04:	ad 81       	ldd	r26, Y+5	; 0x05
     e06:	be 81       	ldd	r27, Y+6	; 0x06
     e08:	f9 01       	movw	r30, r18
     e0a:	80 83       	st	Z, r24
     e0c:	91 83       	std	Z+1, r25	; 0x01
     e0e:	a2 83       	std	Z+2, r26	; 0x02
     e10:	b3 83       	std	Z+3, r27	; 0x03
     e12:	26 96       	adiw	r28, 0x06	; 6
     e14:	0f b6       	in	r0, 0x3f	; 63
     e16:	f8 94       	cli
     e18:	de bf       	out	0x3e, r29	; 62
     e1a:	0f be       	out	0x3f, r0	; 63
     e1c:	cd bf       	out	0x3d, r28	; 61
     e1e:	df 91       	pop	r29
     e20:	cf 91       	pop	r28
     e22:	08 95       	ret

00000e24 <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf>:

			float ZDerivativeError() const {return zDerivativeError;}
			void ZDerivativeError(float val) { zDerivativeError = val;}						
     e24:	cf 93       	push	r28
     e26:	df 93       	push	r29
     e28:	00 d0       	rcall	.+0      	; 0xe2a <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf+0x6>
     e2a:	00 d0       	rcall	.+0      	; 0xe2c <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf+0x8>
     e2c:	cd b7       	in	r28, 0x3d	; 61
     e2e:	de b7       	in	r29, 0x3e	; 62
     e30:	9a 83       	std	Y+2, r25	; 0x02
     e32:	89 83       	std	Y+1, r24	; 0x01
     e34:	4b 83       	std	Y+3, r20	; 0x03
     e36:	5c 83       	std	Y+4, r21	; 0x04
     e38:	6d 83       	std	Y+5, r22	; 0x05
     e3a:	7e 83       	std	Y+6, r23	; 0x06
     e3c:	89 81       	ldd	r24, Y+1	; 0x01
     e3e:	9a 81       	ldd	r25, Y+2	; 0x02
     e40:	9c 01       	movw	r18, r24
     e42:	28 55       	subi	r18, 0x58	; 88
     e44:	3f 4f       	sbci	r19, 0xFF	; 255
     e46:	8b 81       	ldd	r24, Y+3	; 0x03
     e48:	9c 81       	ldd	r25, Y+4	; 0x04
     e4a:	ad 81       	ldd	r26, Y+5	; 0x05
     e4c:	be 81       	ldd	r27, Y+6	; 0x06
     e4e:	f9 01       	movw	r30, r18
     e50:	80 83       	st	Z, r24
     e52:	91 83       	std	Z+1, r25	; 0x01
     e54:	a2 83       	std	Z+2, r26	; 0x02
     e56:	b3 83       	std	Z+3, r27	; 0x03
     e58:	26 96       	adiw	r28, 0x06	; 6
     e5a:	0f b6       	in	r0, 0x3f	; 63
     e5c:	f8 94       	cli
     e5e:	de bf       	out	0x3e, r29	; 62
     e60:	0f be       	out	0x3f, r0	; 63
     e62:	cd bf       	out	0x3d, r28	; 61
     e64:	df 91       	pop	r29
     e66:	cf 91       	pop	r28
     e68:	08 95       	ret

00000e6a <_ZNK10helicopter5model11SystemModel11BlownFramesEv>:
			void UnrecognizedMsgTypes(long val) { unrecognizedMsgTypes = val; }
			
			long ChecksumErrors() const {return checksumErrors; }
			void ChecksumErrors(long val) { checksumErrors = val; }
			
			long  BlownFrames() const {return numOfFramesBlown;}
     e6a:	cf 93       	push	r28
     e6c:	df 93       	push	r29
     e6e:	1f 92       	push	r1
     e70:	1f 92       	push	r1
     e72:	cd b7       	in	r28, 0x3d	; 61
     e74:	de b7       	in	r29, 0x3e	; 62
     e76:	9a 83       	std	Y+2, r25	; 0x02
     e78:	89 83       	std	Y+1, r24	; 0x01
     e7a:	89 81       	ldd	r24, Y+1	; 0x01
     e7c:	9a 81       	ldd	r25, Y+2	; 0x02
     e7e:	80 54       	subi	r24, 0x40	; 64
     e80:	9f 4f       	sbci	r25, 0xFF	; 255
     e82:	fc 01       	movw	r30, r24
     e84:	80 81       	ld	r24, Z
     e86:	91 81       	ldd	r25, Z+1	; 0x01
     e88:	a2 81       	ldd	r26, Z+2	; 0x02
     e8a:	b3 81       	ldd	r27, Z+3	; 0x03
     e8c:	bc 01       	movw	r22, r24
     e8e:	cd 01       	movw	r24, r26
     e90:	0f 90       	pop	r0
     e92:	0f 90       	pop	r0
     e94:	df 91       	pop	r29
     e96:	cf 91       	pop	r28
     e98:	08 95       	ret

00000e9a <_ZN10helicopter5model11SystemModel11BlownFramesEl>:
			void BlownFrames( long val ) { numOfFramesBlown = val;}
     e9a:	cf 93       	push	r28
     e9c:	df 93       	push	r29
     e9e:	00 d0       	rcall	.+0      	; 0xea0 <_ZN10helicopter5model11SystemModel11BlownFramesEl+0x6>
     ea0:	00 d0       	rcall	.+0      	; 0xea2 <_ZN10helicopter5model11SystemModel11BlownFramesEl+0x8>
     ea2:	cd b7       	in	r28, 0x3d	; 61
     ea4:	de b7       	in	r29, 0x3e	; 62
     ea6:	9a 83       	std	Y+2, r25	; 0x02
     ea8:	89 83       	std	Y+1, r24	; 0x01
     eaa:	4b 83       	std	Y+3, r20	; 0x03
     eac:	5c 83       	std	Y+4, r21	; 0x04
     eae:	6d 83       	std	Y+5, r22	; 0x05
     eb0:	7e 83       	std	Y+6, r23	; 0x06
     eb2:	89 81       	ldd	r24, Y+1	; 0x01
     eb4:	9a 81       	ldd	r25, Y+2	; 0x02
     eb6:	9c 01       	movw	r18, r24
     eb8:	20 54       	subi	r18, 0x40	; 64
     eba:	3f 4f       	sbci	r19, 0xFF	; 255
     ebc:	8b 81       	ldd	r24, Y+3	; 0x03
     ebe:	9c 81       	ldd	r25, Y+4	; 0x04
     ec0:	ad 81       	ldd	r26, Y+5	; 0x05
     ec2:	be 81       	ldd	r27, Y+6	; 0x06
     ec4:	f9 01       	movw	r30, r18
     ec6:	80 83       	st	Z, r24
     ec8:	91 83       	std	Z+1, r25	; 0x01
     eca:	a2 83       	std	Z+2, r26	; 0x02
     ecc:	b3 83       	std	Z+3, r27	; 0x03
     ece:	26 96       	adiw	r28, 0x06	; 6
     ed0:	0f b6       	in	r0, 0x3f	; 63
     ed2:	f8 94       	cli
     ed4:	de bf       	out	0x3e, r29	; 62
     ed6:	0f be       	out	0x3f, r0	; 63
     ed8:	cd bf       	out	0x3d, r28	; 61
     eda:	df 91       	pop	r29
     edc:	cf 91       	pop	r28
     ede:	08 95       	ret

00000ee0 <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelE>:

#include "PIDController.h"

using namespace helicopter::controller;

PIDController::PIDController(SystemModel *model): 
     ee0:	cf 93       	push	r28
     ee2:	df 93       	push	r29
     ee4:	00 d0       	rcall	.+0      	; 0xee6 <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelE+0x6>
     ee6:	1f 92       	push	r1
     ee8:	cd b7       	in	r28, 0x3d	; 61
     eea:	de b7       	in	r29, 0x3e	; 62
     eec:	9a 83       	std	Y+2, r25	; 0x02
     eee:	89 83       	std	Y+1, r24	; 0x01
     ef0:	7c 83       	std	Y+4, r23	; 0x04
     ef2:	6b 83       	std	Y+3, r22	; 0x03
minMainRotorServoControlValue(0),
maxMainRotorServoControlValue(0),

intervalPeriodSecs(0),
controlMaxValue(0),
controlMinValue(0)
     ef4:	89 81       	ldd	r24, Y+1	; 0x01
     ef6:	9a 81       	ldd	r25, Y+2	; 0x02
     ef8:	2b 81       	ldd	r18, Y+3	; 0x03
     efa:	3c 81       	ldd	r19, Y+4	; 0x04
     efc:	fc 01       	movw	r30, r24
     efe:	31 83       	std	Z+1, r19	; 0x01
     f00:	20 83       	st	Z, r18
     f02:	89 81       	ldd	r24, Y+1	; 0x01
     f04:	9a 81       	ldd	r25, Y+2	; 0x02
     f06:	fc 01       	movw	r30, r24
     f08:	12 82       	std	Z+2, r1	; 0x02
     f0a:	13 82       	std	Z+3, r1	; 0x03
     f0c:	14 82       	std	Z+4, r1	; 0x04
     f0e:	15 82       	std	Z+5, r1	; 0x05
     f10:	89 81       	ldd	r24, Y+1	; 0x01
     f12:	9a 81       	ldd	r25, Y+2	; 0x02
     f14:	fc 01       	movw	r30, r24
     f16:	16 82       	std	Z+6, r1	; 0x06
     f18:	17 82       	std	Z+7, r1	; 0x07
     f1a:	10 86       	std	Z+8, r1	; 0x08
     f1c:	11 86       	std	Z+9, r1	; 0x09
     f1e:	89 81       	ldd	r24, Y+1	; 0x01
     f20:	9a 81       	ldd	r25, Y+2	; 0x02
     f22:	fc 01       	movw	r30, r24
     f24:	12 86       	std	Z+10, r1	; 0x0a
     f26:	13 86       	std	Z+11, r1	; 0x0b
     f28:	14 86       	std	Z+12, r1	; 0x0c
     f2a:	15 86       	std	Z+13, r1	; 0x0d
     f2c:	89 81       	ldd	r24, Y+1	; 0x01
     f2e:	9a 81       	ldd	r25, Y+2	; 0x02
     f30:	fc 01       	movw	r30, r24
     f32:	16 86       	std	Z+14, r1	; 0x0e
     f34:	17 86       	std	Z+15, r1	; 0x0f
     f36:	10 8a       	std	Z+16, r1	; 0x10
     f38:	11 8a       	std	Z+17, r1	; 0x11
     f3a:	89 81       	ldd	r24, Y+1	; 0x01
     f3c:	9a 81       	ldd	r25, Y+2	; 0x02
     f3e:	fc 01       	movw	r30, r24
     f40:	12 8a       	std	Z+18, r1	; 0x12
     f42:	13 8a       	std	Z+19, r1	; 0x13
     f44:	14 8a       	std	Z+20, r1	; 0x14
     f46:	15 8a       	std	Z+21, r1	; 0x15
     f48:	89 81       	ldd	r24, Y+1	; 0x01
     f4a:	9a 81       	ldd	r25, Y+2	; 0x02
     f4c:	fc 01       	movw	r30, r24
     f4e:	16 8a       	std	Z+22, r1	; 0x16
     f50:	17 8a       	std	Z+23, r1	; 0x17
     f52:	10 8e       	std	Z+24, r1	; 0x18
     f54:	11 8e       	std	Z+25, r1	; 0x19
     f56:	89 81       	ldd	r24, Y+1	; 0x01
     f58:	9a 81       	ldd	r25, Y+2	; 0x02
     f5a:	fc 01       	movw	r30, r24
     f5c:	12 8e       	std	Z+26, r1	; 0x1a
     f5e:	13 8e       	std	Z+27, r1	; 0x1b
     f60:	14 8e       	std	Z+28, r1	; 0x1c
     f62:	15 8e       	std	Z+29, r1	; 0x1d
     f64:	89 81       	ldd	r24, Y+1	; 0x01
     f66:	9a 81       	ldd	r25, Y+2	; 0x02
     f68:	fc 01       	movw	r30, r24
     f6a:	16 8e       	std	Z+30, r1	; 0x1e
     f6c:	17 8e       	std	Z+31, r1	; 0x1f
     f6e:	10 a2       	std	Z+32, r1	; 0x20
     f70:	11 a2       	std	Z+33, r1	; 0x21
     f72:	89 81       	ldd	r24, Y+1	; 0x01
     f74:	9a 81       	ldd	r25, Y+2	; 0x02
     f76:	fc 01       	movw	r30, r24
     f78:	12 a2       	std	Z+34, r1	; 0x22
     f7a:	13 a2       	std	Z+35, r1	; 0x23
     f7c:	14 a2       	std	Z+36, r1	; 0x24
     f7e:	15 a2       	std	Z+37, r1	; 0x25
     f80:	89 81       	ldd	r24, Y+1	; 0x01
     f82:	9a 81       	ldd	r25, Y+2	; 0x02
     f84:	fc 01       	movw	r30, r24
     f86:	12 a6       	std	Z+42, r1	; 0x2a
     f88:	13 a6       	std	Z+43, r1	; 0x2b
     f8a:	14 a6       	std	Z+44, r1	; 0x2c
     f8c:	15 a6       	std	Z+45, r1	; 0x2d
     f8e:	89 81       	ldd	r24, Y+1	; 0x01
     f90:	9a 81       	ldd	r25, Y+2	; 0x02
     f92:	fc 01       	movw	r30, r24
     f94:	16 a6       	std	Z+46, r1	; 0x2e
     f96:	17 a6       	std	Z+47, r1	; 0x2f
     f98:	10 aa       	std	Z+48, r1	; 0x30
     f9a:	11 aa       	std	Z+49, r1	; 0x31
     f9c:	89 81       	ldd	r24, Y+1	; 0x01
     f9e:	9a 81       	ldd	r25, Y+2	; 0x02
     fa0:	fc 01       	movw	r30, r24
     fa2:	12 aa       	std	Z+50, r1	; 0x32
     fa4:	13 aa       	std	Z+51, r1	; 0x33
     fa6:	14 aa       	std	Z+52, r1	; 0x34
     fa8:	15 aa       	std	Z+53, r1	; 0x35
     faa:	89 81       	ldd	r24, Y+1	; 0x01
     fac:	9a 81       	ldd	r25, Y+2	; 0x02
     fae:	fc 01       	movw	r30, r24
     fb0:	16 aa       	std	Z+54, r1	; 0x36
     fb2:	17 aa       	std	Z+55, r1	; 0x37
     fb4:	10 ae       	std	Z+56, r1	; 0x38
     fb6:	11 ae       	std	Z+57, r1	; 0x39
     fb8:	89 81       	ldd	r24, Y+1	; 0x01
     fba:	9a 81       	ldd	r25, Y+2	; 0x02
     fbc:	fc 01       	movw	r30, r24
     fbe:	12 ae       	std	Z+58, r1	; 0x3a
     fc0:	13 ae       	std	Z+59, r1	; 0x3b
     fc2:	14 ae       	std	Z+60, r1	; 0x3c
     fc4:	15 ae       	std	Z+61, r1	; 0x3d
     fc6:	89 81       	ldd	r24, Y+1	; 0x01
     fc8:	9a 81       	ldd	r25, Y+2	; 0x02
     fca:	8e 5b       	subi	r24, 0xBE	; 190
     fcc:	9f 4f       	sbci	r25, 0xFF	; 255
     fce:	fc 01       	movw	r30, r24
     fd0:	10 82       	st	Z, r1
     fd2:	11 82       	std	Z+1, r1	; 0x01
     fd4:	12 82       	std	Z+2, r1	; 0x02
     fd6:	13 82       	std	Z+3, r1	; 0x03
     fd8:	89 81       	ldd	r24, Y+1	; 0x01
     fda:	9a 81       	ldd	r25, Y+2	; 0x02
     fdc:	8a 5b       	subi	r24, 0xBA	; 186
     fde:	9f 4f       	sbci	r25, 0xFF	; 255
     fe0:	fc 01       	movw	r30, r24
     fe2:	10 82       	st	Z, r1
     fe4:	11 82       	std	Z+1, r1	; 0x01
     fe6:	12 82       	std	Z+2, r1	; 0x02
     fe8:	13 82       	std	Z+3, r1	; 0x03
     fea:	89 81       	ldd	r24, Y+1	; 0x01
     fec:	9a 81       	ldd	r25, Y+2	; 0x02
     fee:	86 5b       	subi	r24, 0xB6	; 182
     ff0:	9f 4f       	sbci	r25, 0xFF	; 255
     ff2:	fc 01       	movw	r30, r24
     ff4:	10 82       	st	Z, r1
     ff6:	11 82       	std	Z+1, r1	; 0x01
     ff8:	12 82       	std	Z+2, r1	; 0x02
     ffa:	13 82       	std	Z+3, r1	; 0x03
     ffc:	89 81       	ldd	r24, Y+1	; 0x01
     ffe:	9a 81       	ldd	r25, Y+2	; 0x02
    1000:	82 5b       	subi	r24, 0xB2	; 178
    1002:	9f 4f       	sbci	r25, 0xFF	; 255
    1004:	fc 01       	movw	r30, r24
    1006:	10 82       	st	Z, r1
    1008:	11 82       	std	Z+1, r1	; 0x01
    100a:	12 82       	std	Z+2, r1	; 0x02
    100c:	13 82       	std	Z+3, r1	; 0x03
    100e:	89 81       	ldd	r24, Y+1	; 0x01
    1010:	9a 81       	ldd	r25, Y+2	; 0x02
    1012:	8e 5a       	subi	r24, 0xAE	; 174
    1014:	9f 4f       	sbci	r25, 0xFF	; 255
    1016:	fc 01       	movw	r30, r24
    1018:	10 82       	st	Z, r1
    101a:	11 82       	std	Z+1, r1	; 0x01
    101c:	12 82       	std	Z+2, r1	; 0x02
    101e:	13 82       	std	Z+3, r1	; 0x03
    1020:	89 81       	ldd	r24, Y+1	; 0x01
    1022:	9a 81       	ldd	r25, Y+2	; 0x02
    1024:	8a 5a       	subi	r24, 0xAA	; 170
    1026:	9f 4f       	sbci	r25, 0xFF	; 255
    1028:	fc 01       	movw	r30, r24
    102a:	10 82       	st	Z, r1
    102c:	11 82       	std	Z+1, r1	; 0x01
    102e:	12 82       	std	Z+2, r1	; 0x02
    1030:	13 82       	std	Z+3, r1	; 0x03
    1032:	89 81       	ldd	r24, Y+1	; 0x01
    1034:	9a 81       	ldd	r25, Y+2	; 0x02
    1036:	86 5a       	subi	r24, 0xA6	; 166
    1038:	9f 4f       	sbci	r25, 0xFF	; 255
    103a:	fc 01       	movw	r30, r24
    103c:	10 82       	st	Z, r1
    103e:	11 82       	std	Z+1, r1	; 0x01
    1040:	12 82       	std	Z+2, r1	; 0x02
    1042:	13 82       	std	Z+3, r1	; 0x03
    1044:	89 81       	ldd	r24, Y+1	; 0x01
    1046:	9a 81       	ldd	r25, Y+2	; 0x02
    1048:	82 5a       	subi	r24, 0xA2	; 162
    104a:	9f 4f       	sbci	r25, 0xFF	; 255
    104c:	fc 01       	movw	r30, r24
    104e:	10 82       	st	Z, r1
    1050:	11 82       	std	Z+1, r1	; 0x01
    1052:	12 82       	std	Z+2, r1	; 0x02
    1054:	13 82       	std	Z+3, r1	; 0x03
    1056:	89 81       	ldd	r24, Y+1	; 0x01
    1058:	9a 81       	ldd	r25, Y+2	; 0x02
    105a:	8e 59       	subi	r24, 0x9E	; 158
    105c:	9f 4f       	sbci	r25, 0xFF	; 255
    105e:	fc 01       	movw	r30, r24
    1060:	10 82       	st	Z, r1
    1062:	11 82       	std	Z+1, r1	; 0x01
    1064:	12 82       	std	Z+2, r1	; 0x02
    1066:	13 82       	std	Z+3, r1	; 0x03
    1068:	89 81       	ldd	r24, Y+1	; 0x01
    106a:	9a 81       	ldd	r25, Y+2	; 0x02
    106c:	8a 59       	subi	r24, 0x9A	; 154
    106e:	9f 4f       	sbci	r25, 0xFF	; 255
    1070:	fc 01       	movw	r30, r24
    1072:	10 82       	st	Z, r1
    1074:	11 82       	std	Z+1, r1	; 0x01
    1076:	12 82       	std	Z+2, r1	; 0x02
    1078:	13 82       	std	Z+3, r1	; 0x03
    107a:	89 81       	ldd	r24, Y+1	; 0x01
    107c:	9a 81       	ldd	r25, Y+2	; 0x02
    107e:	86 59       	subi	r24, 0x96	; 150
    1080:	9f 4f       	sbci	r25, 0xFF	; 255
    1082:	fc 01       	movw	r30, r24
    1084:	10 82       	st	Z, r1
    1086:	11 82       	std	Z+1, r1	; 0x01
    1088:	12 82       	std	Z+2, r1	; 0x02
    108a:	13 82       	std	Z+3, r1	; 0x03
    108c:	89 81       	ldd	r24, Y+1	; 0x01
    108e:	9a 81       	ldd	r25, Y+2	; 0x02
    1090:	82 59       	subi	r24, 0x92	; 146
    1092:	9f 4f       	sbci	r25, 0xFF	; 255
    1094:	fc 01       	movw	r30, r24
    1096:	10 82       	st	Z, r1
    1098:	11 82       	std	Z+1, r1	; 0x01
    109a:	12 82       	std	Z+2, r1	; 0x02
    109c:	13 82       	std	Z+3, r1	; 0x03
    109e:	89 81       	ldd	r24, Y+1	; 0x01
    10a0:	9a 81       	ldd	r25, Y+2	; 0x02
    10a2:	8e 57       	subi	r24, 0x7E	; 126
    10a4:	9f 4f       	sbci	r25, 0xFF	; 255
    10a6:	fc 01       	movw	r30, r24
    10a8:	10 82       	st	Z, r1
    10aa:	11 82       	std	Z+1, r1	; 0x01
    10ac:	12 82       	std	Z+2, r1	; 0x02
    10ae:	13 82       	std	Z+3, r1	; 0x03
    10b0:	89 81       	ldd	r24, Y+1	; 0x01
    10b2:	9a 81       	ldd	r25, Y+2	; 0x02
    10b4:	8a 57       	subi	r24, 0x7A	; 122
    10b6:	9f 4f       	sbci	r25, 0xFF	; 255
    10b8:	fc 01       	movw	r30, r24
    10ba:	10 82       	st	Z, r1
    10bc:	11 82       	std	Z+1, r1	; 0x01
    10be:	12 82       	std	Z+2, r1	; 0x02
    10c0:	13 82       	std	Z+3, r1	; 0x03
    10c2:	89 81       	ldd	r24, Y+1	; 0x01
    10c4:	9a 81       	ldd	r25, Y+2	; 0x02
    10c6:	86 57       	subi	r24, 0x76	; 118
    10c8:	9f 4f       	sbci	r25, 0xFF	; 255
    10ca:	fc 01       	movw	r30, r24
    10cc:	10 82       	st	Z, r1
    10ce:	11 82       	std	Z+1, r1	; 0x01
    10d0:	12 82       	std	Z+2, r1	; 0x02
    10d2:	13 82       	std	Z+3, r1	; 0x03
{
	
}
    10d4:	0f 90       	pop	r0
    10d6:	0f 90       	pop	r0
    10d8:	0f 90       	pop	r0
    10da:	0f 90       	pop	r0
    10dc:	df 91       	pop	r29
    10de:	cf 91       	pop	r28
    10e0:	08 95       	ret

000010e2 <_ZN10helicopter10controller13PIDController21calculateProportionalEff>:
{
	delete model;
}

float PIDController::calculateProportional(float currentValue, float referenceValue)
{
    10e2:	0f 93       	push	r16
    10e4:	1f 93       	push	r17
    10e6:	cf 93       	push	r28
    10e8:	df 93       	push	r29
    10ea:	cd b7       	in	r28, 0x3d	; 61
    10ec:	de b7       	in	r29, 0x3e	; 62
    10ee:	2a 97       	sbiw	r28, 0x0a	; 10
    10f0:	0f b6       	in	r0, 0x3f	; 63
    10f2:	f8 94       	cli
    10f4:	de bf       	out	0x3e, r29	; 62
    10f6:	0f be       	out	0x3f, r0	; 63
    10f8:	cd bf       	out	0x3d, r28	; 61
    10fa:	9a 83       	std	Y+2, r25	; 0x02
    10fc:	89 83       	std	Y+1, r24	; 0x01
    10fe:	4b 83       	std	Y+3, r20	; 0x03
    1100:	5c 83       	std	Y+4, r21	; 0x04
    1102:	6d 83       	std	Y+5, r22	; 0x05
    1104:	7e 83       	std	Y+6, r23	; 0x06
    1106:	0f 83       	std	Y+7, r16	; 0x07
    1108:	18 87       	std	Y+8, r17	; 0x08
    110a:	29 87       	std	Y+9, r18	; 0x09
    110c:	3a 87       	std	Y+10, r19	; 0x0a
	return currentValue - referenceValue;
    110e:	2f 81       	ldd	r18, Y+7	; 0x07
    1110:	38 85       	ldd	r19, Y+8	; 0x08
    1112:	49 85       	ldd	r20, Y+9	; 0x09
    1114:	5a 85       	ldd	r21, Y+10	; 0x0a
    1116:	6b 81       	ldd	r22, Y+3	; 0x03
    1118:	7c 81       	ldd	r23, Y+4	; 0x04
    111a:	8d 81       	ldd	r24, Y+5	; 0x05
    111c:	9e 81       	ldd	r25, Y+6	; 0x06
    111e:	0e 94 12 46 	call	0x8c24	; 0x8c24 <__subsf3>
    1122:	dc 01       	movw	r26, r24
    1124:	cb 01       	movw	r24, r22
}
    1126:	bc 01       	movw	r22, r24
    1128:	cd 01       	movw	r24, r26
    112a:	2a 96       	adiw	r28, 0x0a	; 10
    112c:	0f b6       	in	r0, 0x3f	; 63
    112e:	f8 94       	cli
    1130:	de bf       	out	0x3e, r29	; 62
    1132:	0f be       	out	0x3f, r0	; 63
    1134:	cd bf       	out	0x3d, r28	; 61
    1136:	df 91       	pop	r29
    1138:	cf 91       	pop	r28
    113a:	1f 91       	pop	r17
    113c:	0f 91       	pop	r16
    113e:	08 95       	ret

00001140 <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>:

//TODO refactor to make this common for all PID calculations. I'll want to include the specific
//variables max values as parameters so I can 'generalize' it.
float PIDController::calculateIntegralAntiWindup(float oldControlPreServoAdj, float oldControl, float antiWindupGain)
{
    1140:	cf 92       	push	r12
    1142:	df 92       	push	r13
    1144:	ef 92       	push	r14
    1146:	ff 92       	push	r15
    1148:	0f 93       	push	r16
    114a:	1f 93       	push	r17
    114c:	cf 93       	push	r28
    114e:	df 93       	push	r29
    1150:	cd b7       	in	r28, 0x3d	; 61
    1152:	de b7       	in	r29, 0x3e	; 62
    1154:	62 97       	sbiw	r28, 0x12	; 18
    1156:	0f b6       	in	r0, 0x3f	; 63
    1158:	f8 94       	cli
    115a:	de bf       	out	0x3e, r29	; 62
    115c:	0f be       	out	0x3f, r0	; 63
    115e:	cd bf       	out	0x3d, r28	; 61
    1160:	9e 83       	std	Y+6, r25	; 0x06
    1162:	8d 83       	std	Y+5, r24	; 0x05
    1164:	4f 83       	std	Y+7, r20	; 0x07
    1166:	58 87       	std	Y+8, r21	; 0x08
    1168:	69 87       	std	Y+9, r22	; 0x09
    116a:	7a 87       	std	Y+10, r23	; 0x0a
    116c:	0b 87       	std	Y+11, r16	; 0x0b
    116e:	1c 87       	std	Y+12, r17	; 0x0c
    1170:	2d 87       	std	Y+13, r18	; 0x0d
    1172:	3e 87       	std	Y+14, r19	; 0x0e
    1174:	cf 86       	std	Y+15, r12	; 0x0f
    1176:	d8 8a       	std	Y+16, r13	; 0x10
    1178:	e9 8a       	std	Y+17, r14	; 0x11
    117a:	fa 8a       	std	Y+18, r15	; 0x12
	float antiWindup = 0;
    117c:	19 82       	std	Y+1, r1	; 0x01
    117e:	1a 82       	std	Y+2, r1	; 0x02
    1180:	1b 82       	std	Y+3, r1	; 0x03
    1182:	1c 82       	std	Y+4, r1	; 0x04
	
	antiWindup = antiWindupGain * (oldControlPreServoAdj - oldControl);
    1184:	2b 85       	ldd	r18, Y+11	; 0x0b
    1186:	3c 85       	ldd	r19, Y+12	; 0x0c
    1188:	4d 85       	ldd	r20, Y+13	; 0x0d
    118a:	5e 85       	ldd	r21, Y+14	; 0x0e
    118c:	6f 81       	ldd	r22, Y+7	; 0x07
    118e:	78 85       	ldd	r23, Y+8	; 0x08
    1190:	89 85       	ldd	r24, Y+9	; 0x09
    1192:	9a 85       	ldd	r25, Y+10	; 0x0a
    1194:	0e 94 12 46 	call	0x8c24	; 0x8c24 <__subsf3>
    1198:	dc 01       	movw	r26, r24
    119a:	cb 01       	movw	r24, r22
    119c:	2f 85       	ldd	r18, Y+15	; 0x0f
    119e:	38 89       	ldd	r19, Y+16	; 0x10
    11a0:	49 89       	ldd	r20, Y+17	; 0x11
    11a2:	5a 89       	ldd	r21, Y+18	; 0x12
    11a4:	bc 01       	movw	r22, r24
    11a6:	cd 01       	movw	r24, r26
    11a8:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    11ac:	dc 01       	movw	r26, r24
    11ae:	cb 01       	movw	r24, r22
    11b0:	89 83       	std	Y+1, r24	; 0x01
    11b2:	9a 83       	std	Y+2, r25	; 0x02
    11b4:	ab 83       	std	Y+3, r26	; 0x03
    11b6:	bc 83       	std	Y+4, r27	; 0x04
	
	return antiWindup;
    11b8:	89 81       	ldd	r24, Y+1	; 0x01
    11ba:	9a 81       	ldd	r25, Y+2	; 0x02
    11bc:	ab 81       	ldd	r26, Y+3	; 0x03
    11be:	bc 81       	ldd	r27, Y+4	; 0x04
}
    11c0:	bc 01       	movw	r22, r24
    11c2:	cd 01       	movw	r24, r26
    11c4:	62 96       	adiw	r28, 0x12	; 18
    11c6:	0f b6       	in	r0, 0x3f	; 63
    11c8:	f8 94       	cli
    11ca:	de bf       	out	0x3e, r29	; 62
    11cc:	0f be       	out	0x3f, r0	; 63
    11ce:	cd bf       	out	0x3d, r28	; 61
    11d0:	df 91       	pop	r29
    11d2:	cf 91       	pop	r28
    11d4:	1f 91       	pop	r17
    11d6:	0f 91       	pop	r16
    11d8:	ff 90       	pop	r15
    11da:	ef 90       	pop	r14
    11dc:	df 90       	pop	r13
    11de:	cf 90       	pop	r12
    11e0:	08 95       	ret

000011e2 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>:

/**
 * Anti-windup algorithm provided by Control Systems Design by Karl Johan Astrom 2002. chapter 6
 */
float PIDController::calculateIntegral(float proportional, float oldIntegral, float antiWindup, float integralGain)
{
    11e2:	8f 92       	push	r8
    11e4:	9f 92       	push	r9
    11e6:	af 92       	push	r10
    11e8:	bf 92       	push	r11
    11ea:	cf 92       	push	r12
    11ec:	df 92       	push	r13
    11ee:	ef 92       	push	r14
    11f0:	ff 92       	push	r15
    11f2:	0f 93       	push	r16
    11f4:	1f 93       	push	r17
    11f6:	cf 93       	push	r28
    11f8:	df 93       	push	r29
    11fa:	cd b7       	in	r28, 0x3d	; 61
    11fc:	de b7       	in	r29, 0x3e	; 62
    11fe:	66 97       	sbiw	r28, 0x16	; 22
    1200:	0f b6       	in	r0, 0x3f	; 63
    1202:	f8 94       	cli
    1204:	de bf       	out	0x3e, r29	; 62
    1206:	0f be       	out	0x3f, r0	; 63
    1208:	cd bf       	out	0x3d, r28	; 61
    120a:	9e 83       	std	Y+6, r25	; 0x06
    120c:	8d 83       	std	Y+5, r24	; 0x05
    120e:	4f 83       	std	Y+7, r20	; 0x07
    1210:	58 87       	std	Y+8, r21	; 0x08
    1212:	69 87       	std	Y+9, r22	; 0x09
    1214:	7a 87       	std	Y+10, r23	; 0x0a
    1216:	0b 87       	std	Y+11, r16	; 0x0b
    1218:	1c 87       	std	Y+12, r17	; 0x0c
    121a:	2d 87       	std	Y+13, r18	; 0x0d
    121c:	3e 87       	std	Y+14, r19	; 0x0e
    121e:	cf 86       	std	Y+15, r12	; 0x0f
    1220:	d8 8a       	std	Y+16, r13	; 0x10
    1222:	e9 8a       	std	Y+17, r14	; 0x11
    1224:	fa 8a       	std	Y+18, r15	; 0x12
    1226:	8b 8a       	std	Y+19, r8	; 0x13
    1228:	9c 8a       	std	Y+20, r9	; 0x14
    122a:	ad 8a       	std	Y+21, r10	; 0x15
    122c:	be 8a       	std	Y+22, r11	; 0x16
	
	float workingIntegral = 0;
    122e:	19 82       	std	Y+1, r1	; 0x01
    1230:	1a 82       	std	Y+2, r1	; 0x02
    1232:	1b 82       	std	Y+3, r1	; 0x03
    1234:	1c 82       	std	Y+4, r1	; 0x04
	
	workingIntegral = proportional * intervalPeriodSecs * integralGain;
    1236:	8d 81       	ldd	r24, Y+5	; 0x05
    1238:	9e 81       	ldd	r25, Y+6	; 0x06
    123a:	8e 57       	subi	r24, 0x7E	; 126
    123c:	9f 4f       	sbci	r25, 0xFF	; 255
    123e:	fc 01       	movw	r30, r24
    1240:	80 81       	ld	r24, Z
    1242:	91 81       	ldd	r25, Z+1	; 0x01
    1244:	a2 81       	ldd	r26, Z+2	; 0x02
    1246:	b3 81       	ldd	r27, Z+3	; 0x03
    1248:	2f 81       	ldd	r18, Y+7	; 0x07
    124a:	38 85       	ldd	r19, Y+8	; 0x08
    124c:	49 85       	ldd	r20, Y+9	; 0x09
    124e:	5a 85       	ldd	r21, Y+10	; 0x0a
    1250:	bc 01       	movw	r22, r24
    1252:	cd 01       	movw	r24, r26
    1254:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    1258:	dc 01       	movw	r26, r24
    125a:	cb 01       	movw	r24, r22
    125c:	2b 89       	ldd	r18, Y+19	; 0x13
    125e:	3c 89       	ldd	r19, Y+20	; 0x14
    1260:	4d 89       	ldd	r20, Y+21	; 0x15
    1262:	5e 89       	ldd	r21, Y+22	; 0x16
    1264:	bc 01       	movw	r22, r24
    1266:	cd 01       	movw	r24, r26
    1268:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    126c:	dc 01       	movw	r26, r24
    126e:	cb 01       	movw	r24, r22
    1270:	89 83       	std	Y+1, r24	; 0x01
    1272:	9a 83       	std	Y+2, r25	; 0x02
    1274:	ab 83       	std	Y+3, r26	; 0x03
    1276:	bc 83       	std	Y+4, r27	; 0x04
	//Integrate (i.e. sum this working value with the current integral value).
	//Note: i'm going out of order from what is defined in the book referenced above.
	//I am summing before subtracting the antiwindup value to make it easier.
	//I also find it odd that the integral 'gain' is being applied before 
	//accounting for the anti-windup. But this could be to compensate for large errors.
	workingIntegral = workingIntegral + oldIntegral;
    1278:	2b 85       	ldd	r18, Y+11	; 0x0b
    127a:	3c 85       	ldd	r19, Y+12	; 0x0c
    127c:	4d 85       	ldd	r20, Y+13	; 0x0d
    127e:	5e 85       	ldd	r21, Y+14	; 0x0e
    1280:	69 81       	ldd	r22, Y+1	; 0x01
    1282:	7a 81       	ldd	r23, Y+2	; 0x02
    1284:	8b 81       	ldd	r24, Y+3	; 0x03
    1286:	9c 81       	ldd	r25, Y+4	; 0x04
    1288:	0e 94 13 46 	call	0x8c26	; 0x8c26 <__addsf3>
    128c:	dc 01       	movw	r26, r24
    128e:	cb 01       	movw	r24, r22
    1290:	89 83       	std	Y+1, r24	; 0x01
    1292:	9a 83       	std	Y+2, r25	; 0x02
    1294:	ab 83       	std	Y+3, r26	; 0x03
    1296:	bc 83       	std	Y+4, r27	; 0x04
	
	if (antiWindup != 0)
    1298:	20 e0       	ldi	r18, 0x00	; 0
    129a:	30 e0       	ldi	r19, 0x00	; 0
    129c:	a9 01       	movw	r20, r18
    129e:	6f 85       	ldd	r22, Y+15	; 0x0f
    12a0:	78 89       	ldd	r23, Y+16	; 0x10
    12a2:	89 89       	ldd	r24, Y+17	; 0x11
    12a4:	9a 89       	ldd	r25, Y+18	; 0x12
    12a6:	0e 94 77 46 	call	0x8cee	; 0x8cee <__cmpsf2>
    12aa:	88 23       	and	r24, r24
    12ac:	09 f4       	brne	.+2      	; 0x12b0 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0xce>
    12ae:	52 c0       	rjmp	.+164    	; 0x1354 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x172>
	{
		//We want to know if the integral is greater than 0 or less than 0 so that when we subtract
		//the antiwindup value, we get closer to 0, and don't exceed 0.
		if (workingIntegral > 0 && antiWindup > workingIntegral)
    12b0:	20 e0       	ldi	r18, 0x00	; 0
    12b2:	30 e0       	ldi	r19, 0x00	; 0
    12b4:	a9 01       	movw	r20, r18
    12b6:	69 81       	ldd	r22, Y+1	; 0x01
    12b8:	7a 81       	ldd	r23, Y+2	; 0x02
    12ba:	8b 81       	ldd	r24, Y+3	; 0x03
    12bc:	9c 81       	ldd	r25, Y+4	; 0x04
    12be:	0e 94 55 48 	call	0x90aa	; 0x90aa <__gesf2>
    12c2:	18 16       	cp	r1, r24
    12c4:	8c f4       	brge	.+34     	; 0x12e8 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x106>
    12c6:	29 81       	ldd	r18, Y+1	; 0x01
    12c8:	3a 81       	ldd	r19, Y+2	; 0x02
    12ca:	4b 81       	ldd	r20, Y+3	; 0x03
    12cc:	5c 81       	ldd	r21, Y+4	; 0x04
    12ce:	6f 85       	ldd	r22, Y+15	; 0x0f
    12d0:	78 89       	ldd	r23, Y+16	; 0x10
    12d2:	89 89       	ldd	r24, Y+17	; 0x11
    12d4:	9a 89       	ldd	r25, Y+18	; 0x12
    12d6:	0e 94 55 48 	call	0x90aa	; 0x90aa <__gesf2>
    12da:	18 16       	cp	r1, r24
    12dc:	2c f4       	brge	.+10     	; 0x12e8 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x106>
		{
			workingIntegral = 0;
    12de:	19 82       	std	Y+1, r1	; 0x01
    12e0:	1a 82       	std	Y+2, r1	; 0x02
    12e2:	1b 82       	std	Y+3, r1	; 0x03
    12e4:	1c 82       	std	Y+4, r1	; 0x04
    12e6:	1b c0       	rjmp	.+54     	; 0x131e <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x13c>
		}else if (workingIntegral < 0 && antiWindup < workingIntegral)
    12e8:	20 e0       	ldi	r18, 0x00	; 0
    12ea:	30 e0       	ldi	r19, 0x00	; 0
    12ec:	a9 01       	movw	r20, r18
    12ee:	69 81       	ldd	r22, Y+1	; 0x01
    12f0:	7a 81       	ldd	r23, Y+2	; 0x02
    12f2:	8b 81       	ldd	r24, Y+3	; 0x03
    12f4:	9c 81       	ldd	r25, Y+4	; 0x04
    12f6:	0e 94 77 46 	call	0x8cee	; 0x8cee <__cmpsf2>
    12fa:	88 23       	and	r24, r24
    12fc:	84 f4       	brge	.+32     	; 0x131e <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x13c>
    12fe:	29 81       	ldd	r18, Y+1	; 0x01
    1300:	3a 81       	ldd	r19, Y+2	; 0x02
    1302:	4b 81       	ldd	r20, Y+3	; 0x03
    1304:	5c 81       	ldd	r21, Y+4	; 0x04
    1306:	6f 85       	ldd	r22, Y+15	; 0x0f
    1308:	78 89       	ldd	r23, Y+16	; 0x10
    130a:	89 89       	ldd	r24, Y+17	; 0x11
    130c:	9a 89       	ldd	r25, Y+18	; 0x12
    130e:	0e 94 77 46 	call	0x8cee	; 0x8cee <__cmpsf2>
    1312:	88 23       	and	r24, r24
    1314:	24 f4       	brge	.+8      	; 0x131e <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x13c>
		{
			workingIntegral = 0;
    1316:	19 82       	std	Y+1, r1	; 0x01
    1318:	1a 82       	std	Y+2, r1	; 0x02
    131a:	1b 82       	std	Y+3, r1	; 0x03
    131c:	1c 82       	std	Y+4, r1	; 0x04
		}
		
		if (workingIntegral != 0)
    131e:	20 e0       	ldi	r18, 0x00	; 0
    1320:	30 e0       	ldi	r19, 0x00	; 0
    1322:	a9 01       	movw	r20, r18
    1324:	69 81       	ldd	r22, Y+1	; 0x01
    1326:	7a 81       	ldd	r23, Y+2	; 0x02
    1328:	8b 81       	ldd	r24, Y+3	; 0x03
    132a:	9c 81       	ldd	r25, Y+4	; 0x04
    132c:	0e 94 77 46 	call	0x8cee	; 0x8cee <__cmpsf2>
    1330:	88 23       	and	r24, r24
    1332:	81 f0       	breq	.+32     	; 0x1354 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x172>
		{
				//Subtract the anti-windup value from the working integral. 
			workingIntegral = workingIntegral - antiWindup;
    1334:	2f 85       	ldd	r18, Y+15	; 0x0f
    1336:	38 89       	ldd	r19, Y+16	; 0x10
    1338:	49 89       	ldd	r20, Y+17	; 0x11
    133a:	5a 89       	ldd	r21, Y+18	; 0x12
    133c:	69 81       	ldd	r22, Y+1	; 0x01
    133e:	7a 81       	ldd	r23, Y+2	; 0x02
    1340:	8b 81       	ldd	r24, Y+3	; 0x03
    1342:	9c 81       	ldd	r25, Y+4	; 0x04
    1344:	0e 94 12 46 	call	0x8c24	; 0x8c24 <__subsf3>
    1348:	dc 01       	movw	r26, r24
    134a:	cb 01       	movw	r24, r22
    134c:	89 83       	std	Y+1, r24	; 0x01
    134e:	9a 83       	std	Y+2, r25	; 0x02
    1350:	ab 83       	std	Y+3, r26	; 0x03
    1352:	bc 83       	std	Y+4, r27	; 0x04
		}
	}
	
	return workingIntegral;
    1354:	89 81       	ldd	r24, Y+1	; 0x01
    1356:	9a 81       	ldd	r25, Y+2	; 0x02
    1358:	ab 81       	ldd	r26, Y+3	; 0x03
    135a:	bc 81       	ldd	r27, Y+4	; 0x04
}
    135c:	bc 01       	movw	r22, r24
    135e:	cd 01       	movw	r24, r26
    1360:	66 96       	adiw	r28, 0x16	; 22
    1362:	0f b6       	in	r0, 0x3f	; 63
    1364:	f8 94       	cli
    1366:	de bf       	out	0x3e, r29	; 62
    1368:	0f be       	out	0x3f, r0	; 63
    136a:	cd bf       	out	0x3d, r28	; 61
    136c:	df 91       	pop	r29
    136e:	cf 91       	pop	r28
    1370:	1f 91       	pop	r17
    1372:	0f 91       	pop	r16
    1374:	ff 90       	pop	r15
    1376:	ef 90       	pop	r14
    1378:	df 90       	pop	r13
    137a:	cf 90       	pop	r12
    137c:	bf 90       	pop	r11
    137e:	af 90       	pop	r10
    1380:	9f 90       	pop	r9
    1382:	8f 90       	pop	r8
    1384:	08 95       	ret

00001386 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>:
	//return integral;
//}


float PIDController::calculateVelocityError(float currentVelocity, float referenceVelocity)
{
    1386:	0f 93       	push	r16
    1388:	1f 93       	push	r17
    138a:	cf 93       	push	r28
    138c:	df 93       	push	r29
    138e:	cd b7       	in	r28, 0x3d	; 61
    1390:	de b7       	in	r29, 0x3e	; 62
    1392:	2a 97       	sbiw	r28, 0x0a	; 10
    1394:	0f b6       	in	r0, 0x3f	; 63
    1396:	f8 94       	cli
    1398:	de bf       	out	0x3e, r29	; 62
    139a:	0f be       	out	0x3f, r0	; 63
    139c:	cd bf       	out	0x3d, r28	; 61
    139e:	9a 83       	std	Y+2, r25	; 0x02
    13a0:	89 83       	std	Y+1, r24	; 0x01
    13a2:	4b 83       	std	Y+3, r20	; 0x03
    13a4:	5c 83       	std	Y+4, r21	; 0x04
    13a6:	6d 83       	std	Y+5, r22	; 0x05
    13a8:	7e 83       	std	Y+6, r23	; 0x06
    13aa:	0f 83       	std	Y+7, r16	; 0x07
    13ac:	18 87       	std	Y+8, r17	; 0x08
    13ae:	29 87       	std	Y+9, r18	; 0x09
    13b0:	3a 87       	std	Y+10, r19	; 0x0a
	return currentVelocity - referenceVelocity;
    13b2:	2f 81       	ldd	r18, Y+7	; 0x07
    13b4:	38 85       	ldd	r19, Y+8	; 0x08
    13b6:	49 85       	ldd	r20, Y+9	; 0x09
    13b8:	5a 85       	ldd	r21, Y+10	; 0x0a
    13ba:	6b 81       	ldd	r22, Y+3	; 0x03
    13bc:	7c 81       	ldd	r23, Y+4	; 0x04
    13be:	8d 81       	ldd	r24, Y+5	; 0x05
    13c0:	9e 81       	ldd	r25, Y+6	; 0x06
    13c2:	0e 94 12 46 	call	0x8c24	; 0x8c24 <__subsf3>
    13c6:	dc 01       	movw	r26, r24
    13c8:	cb 01       	movw	r24, r22
}
    13ca:	bc 01       	movw	r22, r24
    13cc:	cd 01       	movw	r24, r26
    13ce:	2a 96       	adiw	r28, 0x0a	; 10
    13d0:	0f b6       	in	r0, 0x3f	; 63
    13d2:	f8 94       	cli
    13d4:	de bf       	out	0x3e, r29	; 62
    13d6:	0f be       	out	0x3f, r0	; 63
    13d8:	cd bf       	out	0x3d, r28	; 61
    13da:	df 91       	pop	r29
    13dc:	cf 91       	pop	r28
    13de:	1f 91       	pop	r17
    13e0:	0f 91       	pop	r16
    13e2:	08 95       	ret

000013e4 <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>:

float PIDController::calculateOuterLoopControlValue(float proportionalError, float velocityError, float integral, float proportionalGain, float derivativeGain)
{
    13e4:	8f 92       	push	r8
    13e6:	9f 92       	push	r9
    13e8:	af 92       	push	r10
    13ea:	bf 92       	push	r11
    13ec:	cf 92       	push	r12
    13ee:	df 92       	push	r13
    13f0:	ef 92       	push	r14
    13f2:	ff 92       	push	r15
    13f4:	0f 93       	push	r16
    13f6:	1f 93       	push	r17
    13f8:	cf 93       	push	r28
    13fa:	df 93       	push	r29
    13fc:	cd b7       	in	r28, 0x3d	; 61
    13fe:	de b7       	in	r29, 0x3e	; 62
    1400:	66 97       	sbiw	r28, 0x16	; 22
    1402:	0f b6       	in	r0, 0x3f	; 63
    1404:	f8 94       	cli
    1406:	de bf       	out	0x3e, r29	; 62
    1408:	0f be       	out	0x3f, r0	; 63
    140a:	cd bf       	out	0x3d, r28	; 61
    140c:	9e 83       	std	Y+6, r25	; 0x06
    140e:	8d 83       	std	Y+5, r24	; 0x05
    1410:	4f 83       	std	Y+7, r20	; 0x07
    1412:	58 87       	std	Y+8, r21	; 0x08
    1414:	69 87       	std	Y+9, r22	; 0x09
    1416:	7a 87       	std	Y+10, r23	; 0x0a
    1418:	0b 87       	std	Y+11, r16	; 0x0b
    141a:	1c 87       	std	Y+12, r17	; 0x0c
    141c:	2d 87       	std	Y+13, r18	; 0x0d
    141e:	3e 87       	std	Y+14, r19	; 0x0e
    1420:	cf 86       	std	Y+15, r12	; 0x0f
    1422:	d8 8a       	std	Y+16, r13	; 0x10
    1424:	e9 8a       	std	Y+17, r14	; 0x11
    1426:	fa 8a       	std	Y+18, r15	; 0x12
    1428:	8b 8a       	std	Y+19, r8	; 0x13
    142a:	9c 8a       	std	Y+20, r9	; 0x14
    142c:	ad 8a       	std	Y+21, r10	; 0x15
    142e:	be 8a       	std	Y+22, r11	; 0x16
	float controlValue = 0;
    1430:	19 82       	std	Y+1, r1	; 0x01
    1432:	1a 82       	std	Y+2, r1	; 0x02
    1434:	1b 82       	std	Y+3, r1	; 0x03
    1436:	1c 82       	std	Y+4, r1	; 0x04
	
	controlValue = integral  + proportionalError * proportionalGain + velocityError * derivativeGain;
    1438:	2b 89       	ldd	r18, Y+19	; 0x13
    143a:	3c 89       	ldd	r19, Y+20	; 0x14
    143c:	4d 89       	ldd	r20, Y+21	; 0x15
    143e:	5e 89       	ldd	r21, Y+22	; 0x16
    1440:	6f 81       	ldd	r22, Y+7	; 0x07
    1442:	78 85       	ldd	r23, Y+8	; 0x08
    1444:	89 85       	ldd	r24, Y+9	; 0x09
    1446:	9a 85       	ldd	r25, Y+10	; 0x0a
    1448:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    144c:	dc 01       	movw	r26, r24
    144e:	cb 01       	movw	r24, r22
    1450:	2f 85       	ldd	r18, Y+15	; 0x0f
    1452:	38 89       	ldd	r19, Y+16	; 0x10
    1454:	49 89       	ldd	r20, Y+17	; 0x11
    1456:	5a 89       	ldd	r21, Y+18	; 0x12
    1458:	bc 01       	movw	r22, r24
    145a:	cd 01       	movw	r24, r26
    145c:	0e 94 13 46 	call	0x8c26	; 0x8c26 <__addsf3>
    1460:	dc 01       	movw	r26, r24
    1462:	cb 01       	movw	r24, r22
    1464:	6c 01       	movw	r12, r24
    1466:	7d 01       	movw	r14, r26
    1468:	2e a1       	ldd	r18, Y+38	; 0x26
    146a:	3f a1       	ldd	r19, Y+39	; 0x27
    146c:	48 a5       	ldd	r20, Y+40	; 0x28
    146e:	59 a5       	ldd	r21, Y+41	; 0x29
    1470:	6b 85       	ldd	r22, Y+11	; 0x0b
    1472:	7c 85       	ldd	r23, Y+12	; 0x0c
    1474:	8d 85       	ldd	r24, Y+13	; 0x0d
    1476:	9e 85       	ldd	r25, Y+14	; 0x0e
    1478:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    147c:	dc 01       	movw	r26, r24
    147e:	cb 01       	movw	r24, r22
    1480:	9c 01       	movw	r18, r24
    1482:	ad 01       	movw	r20, r26
    1484:	c7 01       	movw	r24, r14
    1486:	b6 01       	movw	r22, r12
    1488:	0e 94 13 46 	call	0x8c26	; 0x8c26 <__addsf3>
    148c:	dc 01       	movw	r26, r24
    148e:	cb 01       	movw	r24, r22
    1490:	89 83       	std	Y+1, r24	; 0x01
    1492:	9a 83       	std	Y+2, r25	; 0x02
    1494:	ab 83       	std	Y+3, r26	; 0x03
    1496:	bc 83       	std	Y+4, r27	; 0x04
	{
		controlValue = controlMinValue;
	}
	*/
	
	return controlValue;
    1498:	89 81       	ldd	r24, Y+1	; 0x01
    149a:	9a 81       	ldd	r25, Y+2	; 0x02
    149c:	ab 81       	ldd	r26, Y+3	; 0x03
    149e:	bc 81       	ldd	r27, Y+4	; 0x04
}
    14a0:	bc 01       	movw	r22, r24
    14a2:	cd 01       	movw	r24, r26
    14a4:	66 96       	adiw	r28, 0x16	; 22
    14a6:	0f b6       	in	r0, 0x3f	; 63
    14a8:	f8 94       	cli
    14aa:	de bf       	out	0x3e, r29	; 62
    14ac:	0f be       	out	0x3f, r0	; 63
    14ae:	cd bf       	out	0x3d, r28	; 61
    14b0:	df 91       	pop	r29
    14b2:	cf 91       	pop	r28
    14b4:	1f 91       	pop	r17
    14b6:	0f 91       	pop	r16
    14b8:	ff 90       	pop	r15
    14ba:	ef 90       	pop	r14
    14bc:	df 90       	pop	r13
    14be:	cf 90       	pop	r12
    14c0:	bf 90       	pop	r11
    14c2:	af 90       	pop	r10
    14c4:	9f 90       	pop	r9
    14c6:	8f 90       	pop	r8
    14c8:	08 95       	ret

000014ca <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>:


float PIDController::adjustControlForServoLimits( float controlValueToAdjust, float minServoControlValue, float maxServoControlValue )
{
    14ca:	cf 92       	push	r12
    14cc:	df 92       	push	r13
    14ce:	ef 92       	push	r14
    14d0:	ff 92       	push	r15
    14d2:	0f 93       	push	r16
    14d4:	1f 93       	push	r17
    14d6:	cf 93       	push	r28
    14d8:	df 93       	push	r29
    14da:	cd b7       	in	r28, 0x3d	; 61
    14dc:	de b7       	in	r29, 0x3e	; 62
    14de:	2e 97       	sbiw	r28, 0x0e	; 14
    14e0:	0f b6       	in	r0, 0x3f	; 63
    14e2:	f8 94       	cli
    14e4:	de bf       	out	0x3e, r29	; 62
    14e6:	0f be       	out	0x3f, r0	; 63
    14e8:	cd bf       	out	0x3d, r28	; 61
    14ea:	9a 83       	std	Y+2, r25	; 0x02
    14ec:	89 83       	std	Y+1, r24	; 0x01
    14ee:	4b 83       	std	Y+3, r20	; 0x03
    14f0:	5c 83       	std	Y+4, r21	; 0x04
    14f2:	6d 83       	std	Y+5, r22	; 0x05
    14f4:	7e 83       	std	Y+6, r23	; 0x06
    14f6:	0f 83       	std	Y+7, r16	; 0x07
    14f8:	18 87       	std	Y+8, r17	; 0x08
    14fa:	29 87       	std	Y+9, r18	; 0x09
    14fc:	3a 87       	std	Y+10, r19	; 0x0a
    14fe:	cb 86       	std	Y+11, r12	; 0x0b
    1500:	dc 86       	std	Y+12, r13	; 0x0c
    1502:	ed 86       	std	Y+13, r14	; 0x0d
    1504:	fe 86       	std	Y+14, r15	; 0x0e

	//TODO: when generalizing ensure to change this value. 
	//Todo revisit including trim.
	//controlValue += yawServoTrim;
	
	if (controlValueToAdjust > maxServoControlValue)
    1506:	2b 85       	ldd	r18, Y+11	; 0x0b
    1508:	3c 85       	ldd	r19, Y+12	; 0x0c
    150a:	4d 85       	ldd	r20, Y+13	; 0x0d
    150c:	5e 85       	ldd	r21, Y+14	; 0x0e
    150e:	6b 81       	ldd	r22, Y+3	; 0x03
    1510:	7c 81       	ldd	r23, Y+4	; 0x04
    1512:	8d 81       	ldd	r24, Y+5	; 0x05
    1514:	9e 81       	ldd	r25, Y+6	; 0x06
    1516:	0e 94 55 48 	call	0x90aa	; 0x90aa <__gesf2>
    151a:	18 16       	cp	r1, r24
    151c:	4c f4       	brge	.+18     	; 0x1530 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff+0x66>
	{
		controlValueToAdjust = maxServoControlValue;
    151e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1520:	9c 85       	ldd	r25, Y+12	; 0x0c
    1522:	ad 85       	ldd	r26, Y+13	; 0x0d
    1524:	be 85       	ldd	r27, Y+14	; 0x0e
    1526:	8b 83       	std	Y+3, r24	; 0x03
    1528:	9c 83       	std	Y+4, r25	; 0x04
    152a:	ad 83       	std	Y+5, r26	; 0x05
    152c:	be 83       	std	Y+6, r27	; 0x06
    152e:	14 c0       	rjmp	.+40     	; 0x1558 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff+0x8e>
	}else if (controlValueToAdjust < minServoControlValue)
    1530:	2f 81       	ldd	r18, Y+7	; 0x07
    1532:	38 85       	ldd	r19, Y+8	; 0x08
    1534:	49 85       	ldd	r20, Y+9	; 0x09
    1536:	5a 85       	ldd	r21, Y+10	; 0x0a
    1538:	6b 81       	ldd	r22, Y+3	; 0x03
    153a:	7c 81       	ldd	r23, Y+4	; 0x04
    153c:	8d 81       	ldd	r24, Y+5	; 0x05
    153e:	9e 81       	ldd	r25, Y+6	; 0x06
    1540:	0e 94 77 46 	call	0x8cee	; 0x8cee <__cmpsf2>
    1544:	88 23       	and	r24, r24
    1546:	44 f4       	brge	.+16     	; 0x1558 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff+0x8e>
	{
		controlValueToAdjust = minServoControlValue;
    1548:	8f 81       	ldd	r24, Y+7	; 0x07
    154a:	98 85       	ldd	r25, Y+8	; 0x08
    154c:	a9 85       	ldd	r26, Y+9	; 0x09
    154e:	ba 85       	ldd	r27, Y+10	; 0x0a
    1550:	8b 83       	std	Y+3, r24	; 0x03
    1552:	9c 83       	std	Y+4, r25	; 0x04
    1554:	ad 83       	std	Y+5, r26	; 0x05
    1556:	be 83       	std	Y+6, r27	; 0x06
	}
	
	return controlValueToAdjust;
    1558:	8b 81       	ldd	r24, Y+3	; 0x03
    155a:	9c 81       	ldd	r25, Y+4	; 0x04
    155c:	ad 81       	ldd	r26, Y+5	; 0x05
    155e:	be 81       	ldd	r27, Y+6	; 0x06
}
    1560:	bc 01       	movw	r22, r24
    1562:	cd 01       	movw	r24, r26
    1564:	2e 96       	adiw	r28, 0x0e	; 14
    1566:	0f b6       	in	r0, 0x3f	; 63
    1568:	f8 94       	cli
    156a:	de bf       	out	0x3e, r29	; 62
    156c:	0f be       	out	0x3f, r0	; 63
    156e:	cd bf       	out	0x3d, r28	; 61
    1570:	df 91       	pop	r29
    1572:	cf 91       	pop	r28
    1574:	1f 91       	pop	r17
    1576:	0f 91       	pop	r16
    1578:	ff 90       	pop	r15
    157a:	ef 90       	pop	r14
    157c:	df 90       	pop	r13
    157e:	cf 90       	pop	r12
    1580:	08 95       	ret

00001582 <_Z30calculateInnerLoopControlValuefffff>:


float calculateInnerLoopControlValue( float outerLoopSetpoint, float measuredValue, float gain, float angularVelocity, float angularVelocityGain )
{
    1582:	af 92       	push	r10
    1584:	bf 92       	push	r11
    1586:	cf 92       	push	r12
    1588:	df 92       	push	r13
    158a:	ef 92       	push	r14
    158c:	ff 92       	push	r15
    158e:	0f 93       	push	r16
    1590:	1f 93       	push	r17
    1592:	cf 93       	push	r28
    1594:	df 93       	push	r29
    1596:	cd b7       	in	r28, 0x3d	; 61
    1598:	de b7       	in	r29, 0x3e	; 62
    159a:	60 97       	sbiw	r28, 0x10	; 16
    159c:	0f b6       	in	r0, 0x3f	; 63
    159e:	f8 94       	cli
    15a0:	de bf       	out	0x3e, r29	; 62
    15a2:	0f be       	out	0x3f, r0	; 63
    15a4:	cd bf       	out	0x3d, r28	; 61
    15a6:	69 83       	std	Y+1, r22	; 0x01
    15a8:	7a 83       	std	Y+2, r23	; 0x02
    15aa:	8b 83       	std	Y+3, r24	; 0x03
    15ac:	9c 83       	std	Y+4, r25	; 0x04
    15ae:	2d 83       	std	Y+5, r18	; 0x05
    15b0:	3e 83       	std	Y+6, r19	; 0x06
    15b2:	4f 83       	std	Y+7, r20	; 0x07
    15b4:	58 87       	std	Y+8, r21	; 0x08
    15b6:	e9 86       	std	Y+9, r14	; 0x09
    15b8:	fa 86       	std	Y+10, r15	; 0x0a
    15ba:	0b 87       	std	Y+11, r16	; 0x0b
    15bc:	1c 87       	std	Y+12, r17	; 0x0c
    15be:	ad 86       	std	Y+13, r10	; 0x0d
    15c0:	be 86       	std	Y+14, r11	; 0x0e
    15c2:	cf 86       	std	Y+15, r12	; 0x0f
    15c4:	d8 8a       	std	Y+16, r13	; 0x10
	//NOTE: IN MY OTHER IMPLEMENTATION I SUBTRACT THE VELOCITY (YES VELOCITY) OF THE ANGULAR MOTION.
	//return gain * (measuredValue - outerLoopSetpoint);
	
	///************* I JUST CHANGED THIS
	return (gain * (outerLoopSetpoint - measuredValue)) - (angularVelocity * angularVelocityGain);
    15c6:	2d 81       	ldd	r18, Y+5	; 0x05
    15c8:	3e 81       	ldd	r19, Y+6	; 0x06
    15ca:	4f 81       	ldd	r20, Y+7	; 0x07
    15cc:	58 85       	ldd	r21, Y+8	; 0x08
    15ce:	69 81       	ldd	r22, Y+1	; 0x01
    15d0:	7a 81       	ldd	r23, Y+2	; 0x02
    15d2:	8b 81       	ldd	r24, Y+3	; 0x03
    15d4:	9c 81       	ldd	r25, Y+4	; 0x04
    15d6:	0e 94 12 46 	call	0x8c24	; 0x8c24 <__subsf3>
    15da:	dc 01       	movw	r26, r24
    15dc:	cb 01       	movw	r24, r22
    15de:	29 85       	ldd	r18, Y+9	; 0x09
    15e0:	3a 85       	ldd	r19, Y+10	; 0x0a
    15e2:	4b 85       	ldd	r20, Y+11	; 0x0b
    15e4:	5c 85       	ldd	r21, Y+12	; 0x0c
    15e6:	bc 01       	movw	r22, r24
    15e8:	cd 01       	movw	r24, r26
    15ea:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    15ee:	dc 01       	movw	r26, r24
    15f0:	cb 01       	movw	r24, r22
    15f2:	6c 01       	movw	r12, r24
    15f4:	7d 01       	movw	r14, r26
    15f6:	2e 8d       	ldd	r18, Y+30	; 0x1e
    15f8:	3f 8d       	ldd	r19, Y+31	; 0x1f
    15fa:	48 a1       	ldd	r20, Y+32	; 0x20
    15fc:	59 a1       	ldd	r21, Y+33	; 0x21
    15fe:	6d 85       	ldd	r22, Y+13	; 0x0d
    1600:	7e 85       	ldd	r23, Y+14	; 0x0e
    1602:	8f 85       	ldd	r24, Y+15	; 0x0f
    1604:	98 89       	ldd	r25, Y+16	; 0x10
    1606:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    160a:	dc 01       	movw	r26, r24
    160c:	cb 01       	movw	r24, r22
    160e:	9c 01       	movw	r18, r24
    1610:	ad 01       	movw	r20, r26
    1612:	c7 01       	movw	r24, r14
    1614:	b6 01       	movw	r22, r12
    1616:	0e 94 12 46 	call	0x8c24	; 0x8c24 <__subsf3>
    161a:	dc 01       	movw	r26, r24
    161c:	cb 01       	movw	r24, r22
}
    161e:	bc 01       	movw	r22, r24
    1620:	cd 01       	movw	r24, r26
    1622:	60 96       	adiw	r28, 0x10	; 16
    1624:	0f b6       	in	r0, 0x3f	; 63
    1626:	f8 94       	cli
    1628:	de bf       	out	0x3e, r29	; 62
    162a:	0f be       	out	0x3f, r0	; 63
    162c:	cd bf       	out	0x3d, r28	; 61
    162e:	df 91       	pop	r29
    1630:	cf 91       	pop	r28
    1632:	1f 91       	pop	r17
    1634:	0f 91       	pop	r16
    1636:	ff 90       	pop	r15
    1638:	ef 90       	pop	r14
    163a:	df 90       	pop	r13
    163c:	cf 90       	pop	r12
    163e:	bf 90       	pop	r11
    1640:	af 90       	pop	r10
    1642:	08 95       	ret

00001644 <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff>:


float PIDController::adjustForSetpointLimits( float outerLoopControlSetpoint, float minSetpointLimitDegrees, float maxSetpointLimitDegrees )
{
    1644:	cf 92       	push	r12
    1646:	df 92       	push	r13
    1648:	ef 92       	push	r14
    164a:	ff 92       	push	r15
    164c:	0f 93       	push	r16
    164e:	1f 93       	push	r17
    1650:	cf 93       	push	r28
    1652:	df 93       	push	r29
    1654:	cd b7       	in	r28, 0x3d	; 61
    1656:	de b7       	in	r29, 0x3e	; 62
    1658:	2e 97       	sbiw	r28, 0x0e	; 14
    165a:	0f b6       	in	r0, 0x3f	; 63
    165c:	f8 94       	cli
    165e:	de bf       	out	0x3e, r29	; 62
    1660:	0f be       	out	0x3f, r0	; 63
    1662:	cd bf       	out	0x3d, r28	; 61
    1664:	9a 83       	std	Y+2, r25	; 0x02
    1666:	89 83       	std	Y+1, r24	; 0x01
    1668:	4b 83       	std	Y+3, r20	; 0x03
    166a:	5c 83       	std	Y+4, r21	; 0x04
    166c:	6d 83       	std	Y+5, r22	; 0x05
    166e:	7e 83       	std	Y+6, r23	; 0x06
    1670:	0f 83       	std	Y+7, r16	; 0x07
    1672:	18 87       	std	Y+8, r17	; 0x08
    1674:	29 87       	std	Y+9, r18	; 0x09
    1676:	3a 87       	std	Y+10, r19	; 0x0a
    1678:	cb 86       	std	Y+11, r12	; 0x0b
    167a:	dc 86       	std	Y+12, r13	; 0x0c
    167c:	ed 86       	std	Y+13, r14	; 0x0d
    167e:	fe 86       	std	Y+14, r15	; 0x0e
	if (outerLoopControlSetpoint < minSetpointLimitDegrees)
    1680:	2f 81       	ldd	r18, Y+7	; 0x07
    1682:	38 85       	ldd	r19, Y+8	; 0x08
    1684:	49 85       	ldd	r20, Y+9	; 0x09
    1686:	5a 85       	ldd	r21, Y+10	; 0x0a
    1688:	6b 81       	ldd	r22, Y+3	; 0x03
    168a:	7c 81       	ldd	r23, Y+4	; 0x04
    168c:	8d 81       	ldd	r24, Y+5	; 0x05
    168e:	9e 81       	ldd	r25, Y+6	; 0x06
    1690:	0e 94 77 46 	call	0x8cee	; 0x8cee <__cmpsf2>
    1694:	88 23       	and	r24, r24
    1696:	4c f4       	brge	.+18     	; 0x16aa <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff+0x66>
	{
		outerLoopControlSetpoint = minSetpointLimitDegrees;
    1698:	8f 81       	ldd	r24, Y+7	; 0x07
    169a:	98 85       	ldd	r25, Y+8	; 0x08
    169c:	a9 85       	ldd	r26, Y+9	; 0x09
    169e:	ba 85       	ldd	r27, Y+10	; 0x0a
    16a0:	8b 83       	std	Y+3, r24	; 0x03
    16a2:	9c 83       	std	Y+4, r25	; 0x04
    16a4:	ad 83       	std	Y+5, r26	; 0x05
    16a6:	be 83       	std	Y+6, r27	; 0x06
    16a8:	14 c0       	rjmp	.+40     	; 0x16d2 <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff+0x8e>
	}else if (outerLoopControlSetpoint > maxSetpointLimitDegrees)
    16aa:	2b 85       	ldd	r18, Y+11	; 0x0b
    16ac:	3c 85       	ldd	r19, Y+12	; 0x0c
    16ae:	4d 85       	ldd	r20, Y+13	; 0x0d
    16b0:	5e 85       	ldd	r21, Y+14	; 0x0e
    16b2:	6b 81       	ldd	r22, Y+3	; 0x03
    16b4:	7c 81       	ldd	r23, Y+4	; 0x04
    16b6:	8d 81       	ldd	r24, Y+5	; 0x05
    16b8:	9e 81       	ldd	r25, Y+6	; 0x06
    16ba:	0e 94 55 48 	call	0x90aa	; 0x90aa <__gesf2>
    16be:	18 16       	cp	r1, r24
    16c0:	44 f4       	brge	.+16     	; 0x16d2 <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff+0x8e>
	{
		outerLoopControlSetpoint = maxSetpointLimitDegrees;
    16c2:	8b 85       	ldd	r24, Y+11	; 0x0b
    16c4:	9c 85       	ldd	r25, Y+12	; 0x0c
    16c6:	ad 85       	ldd	r26, Y+13	; 0x0d
    16c8:	be 85       	ldd	r27, Y+14	; 0x0e
    16ca:	8b 83       	std	Y+3, r24	; 0x03
    16cc:	9c 83       	std	Y+4, r25	; 0x04
    16ce:	ad 83       	std	Y+5, r26	; 0x05
    16d0:	be 83       	std	Y+6, r27	; 0x06
	}
	
	return outerLoopControlSetpoint;
    16d2:	8b 81       	ldd	r24, Y+3	; 0x03
    16d4:	9c 81       	ldd	r25, Y+4	; 0x04
    16d6:	ad 81       	ldd	r26, Y+5	; 0x05
    16d8:	be 81       	ldd	r27, Y+6	; 0x06
}
    16da:	bc 01       	movw	r22, r24
    16dc:	cd 01       	movw	r24, r26
    16de:	2e 96       	adiw	r28, 0x0e	; 14
    16e0:	0f b6       	in	r0, 0x3f	; 63
    16e2:	f8 94       	cli
    16e4:	de bf       	out	0x3e, r29	; 62
    16e6:	0f be       	out	0x3f, r0	; 63
    16e8:	cd bf       	out	0x3d, r28	; 61
    16ea:	df 91       	pop	r29
    16ec:	cf 91       	pop	r28
    16ee:	1f 91       	pop	r17
    16f0:	0f 91       	pop	r16
    16f2:	ff 90       	pop	r15
    16f4:	ef 90       	pop	r14
    16f6:	df 90       	pop	r13
    16f8:	cf 90       	pop	r12
    16fa:	08 95       	ret

000016fc <_ZN10helicopter10controller13PIDController13addBlownFrameEv>:



//TODO WTF IS THIS DOING HERE?? THIS IS THE WRONG CONTROLLER!!
void PIDController::addBlownFrame()
{
    16fc:	cf 93       	push	r28
    16fe:	df 93       	push	r29
    1700:	1f 92       	push	r1
    1702:	1f 92       	push	r1
    1704:	cd b7       	in	r28, 0x3d	; 61
    1706:	de b7       	in	r29, 0x3e	; 62
    1708:	9a 83       	std	Y+2, r25	; 0x02
    170a:	89 83       	std	Y+1, r24	; 0x01
	model->BlownFrames(model->BlownFrames() + 1);
    170c:	89 81       	ldd	r24, Y+1	; 0x01
    170e:	9a 81       	ldd	r25, Y+2	; 0x02
    1710:	fc 01       	movw	r30, r24
    1712:	80 81       	ld	r24, Z
    1714:	91 81       	ldd	r25, Z+1	; 0x01
    1716:	0e 94 35 07 	call	0xe6a	; 0xe6a <_ZNK10helicopter5model11SystemModel11BlownFramesEv>
    171a:	dc 01       	movw	r26, r24
    171c:	cb 01       	movw	r24, r22
    171e:	01 96       	adiw	r24, 0x01	; 1
    1720:	a1 1d       	adc	r26, r1
    1722:	b1 1d       	adc	r27, r1
    1724:	29 81       	ldd	r18, Y+1	; 0x01
    1726:	3a 81       	ldd	r19, Y+2	; 0x02
    1728:	f9 01       	movw	r30, r18
    172a:	20 81       	ld	r18, Z
    172c:	31 81       	ldd	r19, Z+1	; 0x01
    172e:	ac 01       	movw	r20, r24
    1730:	bd 01       	movw	r22, r26
    1732:	c9 01       	movw	r24, r18
    1734:	0e 94 4d 07 	call	0xe9a	; 0xe9a <_ZN10helicopter5model11SystemModel11BlownFramesEl>
}
    1738:	0f 90       	pop	r0
    173a:	0f 90       	pop	r0
    173c:	df 91       	pop	r29
    173e:	cf 91       	pop	r28
    1740:	08 95       	ret

00001742 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef>:

float PIDController::convertYawErrorFrom360to180( float yawError )
{
    1742:	cf 93       	push	r28
    1744:	df 93       	push	r29
    1746:	00 d0       	rcall	.+0      	; 0x1748 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x6>
    1748:	00 d0       	rcall	.+0      	; 0x174a <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x8>
    174a:	cd b7       	in	r28, 0x3d	; 61
    174c:	de b7       	in	r29, 0x3e	; 62
    174e:	9a 83       	std	Y+2, r25	; 0x02
    1750:	89 83       	std	Y+1, r24	; 0x01
    1752:	4b 83       	std	Y+3, r20	; 0x03
    1754:	5c 83       	std	Y+4, r21	; 0x04
    1756:	6d 83       	std	Y+5, r22	; 0x05
    1758:	7e 83       	std	Y+6, r23	; 0x06
	if (yawError >= 180)
    175a:	20 e0       	ldi	r18, 0x00	; 0
    175c:	30 e0       	ldi	r19, 0x00	; 0
    175e:	44 e3       	ldi	r20, 0x34	; 52
    1760:	53 e4       	ldi	r21, 0x43	; 67
    1762:	6b 81       	ldd	r22, Y+3	; 0x03
    1764:	7c 81       	ldd	r23, Y+4	; 0x04
    1766:	8d 81       	ldd	r24, Y+5	; 0x05
    1768:	9e 81       	ldd	r25, Y+6	; 0x06
    176a:	0e 94 55 48 	call	0x90aa	; 0x90aa <__gesf2>
    176e:	88 23       	and	r24, r24
    1770:	8c f0       	brlt	.+34     	; 0x1794 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x52>
	{
		yawError = yawError - 360;
    1772:	20 e0       	ldi	r18, 0x00	; 0
    1774:	30 e0       	ldi	r19, 0x00	; 0
    1776:	44 eb       	ldi	r20, 0xB4	; 180
    1778:	53 e4       	ldi	r21, 0x43	; 67
    177a:	6b 81       	ldd	r22, Y+3	; 0x03
    177c:	7c 81       	ldd	r23, Y+4	; 0x04
    177e:	8d 81       	ldd	r24, Y+5	; 0x05
    1780:	9e 81       	ldd	r25, Y+6	; 0x06
    1782:	0e 94 12 46 	call	0x8c24	; 0x8c24 <__subsf3>
    1786:	dc 01       	movw	r26, r24
    1788:	cb 01       	movw	r24, r22
    178a:	8b 83       	std	Y+3, r24	; 0x03
    178c:	9c 83       	std	Y+4, r25	; 0x04
    178e:	ad 83       	std	Y+5, r26	; 0x05
    1790:	be 83       	std	Y+6, r27	; 0x06
    1792:	1c c0       	rjmp	.+56     	; 0x17cc <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x8a>
	}
	else if (yawError < -180)
    1794:	20 e0       	ldi	r18, 0x00	; 0
    1796:	30 e0       	ldi	r19, 0x00	; 0
    1798:	44 e3       	ldi	r20, 0x34	; 52
    179a:	53 ec       	ldi	r21, 0xC3	; 195
    179c:	6b 81       	ldd	r22, Y+3	; 0x03
    179e:	7c 81       	ldd	r23, Y+4	; 0x04
    17a0:	8d 81       	ldd	r24, Y+5	; 0x05
    17a2:	9e 81       	ldd	r25, Y+6	; 0x06
    17a4:	0e 94 77 46 	call	0x8cee	; 0x8cee <__cmpsf2>
    17a8:	88 23       	and	r24, r24
    17aa:	84 f4       	brge	.+32     	; 0x17cc <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x8a>
	{
		yawError = yawError + 360;
    17ac:	20 e0       	ldi	r18, 0x00	; 0
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	44 eb       	ldi	r20, 0xB4	; 180
    17b2:	53 e4       	ldi	r21, 0x43	; 67
    17b4:	6b 81       	ldd	r22, Y+3	; 0x03
    17b6:	7c 81       	ldd	r23, Y+4	; 0x04
    17b8:	8d 81       	ldd	r24, Y+5	; 0x05
    17ba:	9e 81       	ldd	r25, Y+6	; 0x06
    17bc:	0e 94 13 46 	call	0x8c26	; 0x8c26 <__addsf3>
    17c0:	dc 01       	movw	r26, r24
    17c2:	cb 01       	movw	r24, r22
    17c4:	8b 83       	std	Y+3, r24	; 0x03
    17c6:	9c 83       	std	Y+4, r25	; 0x04
    17c8:	ad 83       	std	Y+5, r26	; 0x05
    17ca:	be 83       	std	Y+6, r27	; 0x06
	}
	
	return yawError;
    17cc:	8b 81       	ldd	r24, Y+3	; 0x03
    17ce:	9c 81       	ldd	r25, Y+4	; 0x04
    17d0:	ad 81       	ldd	r26, Y+5	; 0x05
    17d2:	be 81       	ldd	r27, Y+6	; 0x06
}
    17d4:	bc 01       	movw	r22, r24
    17d6:	cd 01       	movw	r24, r26
    17d8:	26 96       	adiw	r28, 0x06	; 6
    17da:	0f b6       	in	r0, 0x3f	; 63
    17dc:	f8 94       	cli
    17de:	de bf       	out	0x3e, r29	; 62
    17e0:	0f be       	out	0x3f, r0	; 63
    17e2:	cd bf       	out	0x3d, r28	; 61
    17e4:	df 91       	pop	r29
    17e6:	cf 91       	pop	r28
    17e8:	08 95       	ret

000017ea <_ZN10helicopter10controller13PIDController34tailRotorCollectiveOuterLoopUpdateEv>:


void PIDController::tailRotorCollectiveOuterLoopUpdate()
{
    17ea:	7f 92       	push	r7
    17ec:	8f 92       	push	r8
    17ee:	9f 92       	push	r9
    17f0:	af 92       	push	r10
    17f2:	bf 92       	push	r11
    17f4:	cf 92       	push	r12
    17f6:	df 92       	push	r13
    17f8:	ef 92       	push	r14
    17fa:	ff 92       	push	r15
    17fc:	0f 93       	push	r16
    17fe:	1f 93       	push	r17
    1800:	cf 93       	push	r28
    1802:	df 93       	push	r29
    1804:	cd b7       	in	r28, 0x3d	; 61
    1806:	de b7       	in	r29, 0x3e	; 62
    1808:	6a 97       	sbiw	r28, 0x1a	; 26
    180a:	0f b6       	in	r0, 0x3f	; 63
    180c:	f8 94       	cli
    180e:	de bf       	out	0x3e, r29	; 62
    1810:	0f be       	out	0x3f, r0	; 63
    1812:	cd bf       	out	0x3d, r28	; 61
    1814:	9a 8f       	std	Y+26, r25	; 0x1a
    1816:	89 8f       	std	Y+25, r24	; 0x19
	float yawProportional = calculateProportional(model->MagYawDegrees(), model->ReferenceMagYawDegrees());
    1818:	89 8d       	ldd	r24, Y+25	; 0x19
    181a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    181c:	fc 01       	movw	r30, r24
    181e:	80 81       	ld	r24, Z
    1820:	91 81       	ldd	r25, Z+1	; 0x01
    1822:	0e 94 4d 01 	call	0x29a	; 0x29a <_ZNK10helicopter5model11SystemModel22ReferenceMagYawDegreesEv>
    1826:	6b 01       	movw	r12, r22
    1828:	7c 01       	movw	r14, r24
    182a:	89 8d       	ldd	r24, Y+25	; 0x19
    182c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    182e:	fc 01       	movw	r30, r24
    1830:	80 81       	ld	r24, Z
    1832:	91 81       	ldd	r25, Z+1	; 0x01
    1834:	0e 94 37 01 	call	0x26e	; 0x26e <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>
    1838:	dc 01       	movw	r26, r24
    183a:	cb 01       	movw	r24, r22
    183c:	e9 8d       	ldd	r30, Y+25	; 0x19
    183e:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1840:	97 01       	movw	r18, r14
    1842:	86 01       	movw	r16, r12
    1844:	ac 01       	movw	r20, r24
    1846:	bd 01       	movw	r22, r26
    1848:	cf 01       	movw	r24, r30
    184a:	0e 94 71 08 	call	0x10e2	; 0x10e2 <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    184e:	dc 01       	movw	r26, r24
    1850:	cb 01       	movw	r24, r22
    1852:	89 83       	std	Y+1, r24	; 0x01
    1854:	9a 83       	std	Y+2, r25	; 0x02
    1856:	ab 83       	std	Y+3, r26	; 0x03
    1858:	bc 83       	std	Y+4, r27	; 0x04
	
	yawProportional = convertYawErrorFrom360to180(yawProportional);
    185a:	89 81       	ldd	r24, Y+1	; 0x01
    185c:	9a 81       	ldd	r25, Y+2	; 0x02
    185e:	ab 81       	ldd	r26, Y+3	; 0x03
    1860:	bc 81       	ldd	r27, Y+4	; 0x04
    1862:	29 8d       	ldd	r18, Y+25	; 0x19
    1864:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1866:	ac 01       	movw	r20, r24
    1868:	bd 01       	movw	r22, r26
    186a:	c9 01       	movw	r24, r18
    186c:	0e 94 a1 0b 	call	0x1742	; 0x1742 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef>
    1870:	dc 01       	movw	r26, r24
    1872:	cb 01       	movw	r24, r22
    1874:	89 83       	std	Y+1, r24	; 0x01
    1876:	9a 83       	std	Y+2, r25	; 0x02
    1878:	ab 83       	std	Y+3, r26	; 0x03
    187a:	bc 83       	std	Y+4, r27	; 0x04
	
	float yawIntegralAntiWindup = calculateIntegralAntiWindup(model->YawControlBeforeServoLimitsAdjustment(), model->YawControl(), yawAntiWindupGain);
    187c:	89 8d       	ldd	r24, Y+25	; 0x19
    187e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1880:	fc 01       	movw	r30, r24
    1882:	c6 84       	ldd	r12, Z+14	; 0x0e
    1884:	d7 84       	ldd	r13, Z+15	; 0x0f
    1886:	e0 88       	ldd	r14, Z+16	; 0x10
    1888:	f1 88       	ldd	r15, Z+17	; 0x11
    188a:	89 8d       	ldd	r24, Y+25	; 0x19
    188c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    188e:	fc 01       	movw	r30, r24
    1890:	80 81       	ld	r24, Z
    1892:	91 81       	ldd	r25, Z+1	; 0x01
    1894:	0e 94 63 01 	call	0x2c6	; 0x2c6 <_ZNK10helicopter5model11SystemModel10YawControlEv>
    1898:	4b 01       	movw	r8, r22
    189a:	5c 01       	movw	r10, r24
    189c:	89 8d       	ldd	r24, Y+25	; 0x19
    189e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    18a0:	fc 01       	movw	r30, r24
    18a2:	80 81       	ld	r24, Z
    18a4:	91 81       	ldd	r25, Z+1	; 0x01
    18a6:	0e 94 99 01 	call	0x332	; 0x332 <_ZNK10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEv>
    18aa:	dc 01       	movw	r26, r24
    18ac:	cb 01       	movw	r24, r22
    18ae:	e9 8d       	ldd	r30, Y+25	; 0x19
    18b0:	fa 8d       	ldd	r31, Y+26	; 0x1a
    18b2:	95 01       	movw	r18, r10
    18b4:	84 01       	movw	r16, r8
    18b6:	ac 01       	movw	r20, r24
    18b8:	bd 01       	movw	r22, r26
    18ba:	cf 01       	movw	r24, r30
    18bc:	0e 94 a0 08 	call	0x1140	; 0x1140 <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    18c0:	dc 01       	movw	r26, r24
    18c2:	cb 01       	movw	r24, r22
    18c4:	8d 83       	std	Y+5, r24	; 0x05
    18c6:	9e 83       	std	Y+6, r25	; 0x06
    18c8:	af 83       	std	Y+7, r26	; 0x07
    18ca:	b8 87       	std	Y+8, r27	; 0x08
	float weightedYawIntegral = calculateIntegral(yawProportional, model->YawIntegral(), yawIntegralAntiWindup, yawIntegralGain);
    18cc:	89 8d       	ldd	r24, Y+25	; 0x19
    18ce:	9a 8d       	ldd	r25, Y+26	; 0x1a
    18d0:	fc 01       	movw	r30, r24
    18d2:	a2 80       	ldd	r10, Z+2	; 0x02
    18d4:	b3 80       	ldd	r11, Z+3	; 0x03
    18d6:	c4 80       	ldd	r12, Z+4	; 0x04
    18d8:	d5 80       	ldd	r13, Z+5	; 0x05
    18da:	89 8d       	ldd	r24, Y+25	; 0x19
    18dc:	9a 8d       	ldd	r25, Y+26	; 0x1a
    18de:	fc 01       	movw	r30, r24
    18e0:	80 81       	ld	r24, Z
    18e2:	91 81       	ldd	r25, Z+1	; 0x01
    18e4:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>
    18e8:	9b 01       	movw	r18, r22
    18ea:	ac 01       	movw	r20, r24
    18ec:	ed 80       	ldd	r14, Y+5	; 0x05
    18ee:	fe 80       	ldd	r15, Y+6	; 0x06
    18f0:	0f 81       	ldd	r16, Y+7	; 0x07
    18f2:	18 85       	ldd	r17, Y+8	; 0x08
    18f4:	89 81       	ldd	r24, Y+1	; 0x01
    18f6:	9a 81       	ldd	r25, Y+2	; 0x02
    18f8:	ab 81       	ldd	r26, Y+3	; 0x03
    18fa:	bc 81       	ldd	r27, Y+4	; 0x04
    18fc:	e9 8d       	ldd	r30, Y+25	; 0x19
    18fe:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1900:	45 01       	movw	r8, r10
    1902:	56 01       	movw	r10, r12
    1904:	67 01       	movw	r12, r14
    1906:	78 01       	movw	r14, r16
    1908:	89 01       	movw	r16, r18
    190a:	9a 01       	movw	r18, r20
    190c:	ac 01       	movw	r20, r24
    190e:	bd 01       	movw	r22, r26
    1910:	cf 01       	movw	r24, r30
    1912:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    1916:	dc 01       	movw	r26, r24
    1918:	cb 01       	movw	r24, r22
    191a:	89 87       	std	Y+9, r24	; 0x09
    191c:	9a 87       	std	Y+10, r25	; 0x0a
    191e:	ab 87       	std	Y+11, r26	; 0x0b
    1920:	bc 87       	std	Y+12, r27	; 0x0c
	float yawDerivativeError = calculateVelocityError(model->YawVelocityDegreesPerSecond(), model->ReferenceYawVelocityDegreesPerSecond());
    1922:	89 8d       	ldd	r24, Y+25	; 0x19
    1924:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1926:	fc 01       	movw	r30, r24
    1928:	80 81       	ld	r24, Z
    192a:	91 81       	ldd	r25, Z+1	; 0x01
    192c:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_ZNK10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEv>
    1930:	6b 01       	movw	r12, r22
    1932:	7c 01       	movw	r14, r24
    1934:	89 8d       	ldd	r24, Y+25	; 0x19
    1936:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1938:	fc 01       	movw	r30, r24
    193a:	80 81       	ld	r24, Z
    193c:	91 81       	ldd	r25, Z+1	; 0x01
    193e:	0e 94 cf 01 	call	0x39e	; 0x39e <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>
    1942:	dc 01       	movw	r26, r24
    1944:	cb 01       	movw	r24, r22
    1946:	e9 8d       	ldd	r30, Y+25	; 0x19
    1948:	fa 8d       	ldd	r31, Y+26	; 0x1a
    194a:	97 01       	movw	r18, r14
    194c:	86 01       	movw	r16, r12
    194e:	ac 01       	movw	r20, r24
    1950:	bd 01       	movw	r22, r26
    1952:	cf 01       	movw	r24, r30
    1954:	0e 94 c3 09 	call	0x1386	; 0x1386 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    1958:	dc 01       	movw	r26, r24
    195a:	cb 01       	movw	r24, r22
    195c:	8d 87       	std	Y+13, r24	; 0x0d
    195e:	9e 87       	std	Y+14, r25	; 0x0e
    1960:	af 87       	std	Y+15, r26	; 0x0f
    1962:	b8 8b       	std	Y+16, r27	; 0x10
	float yawControlBeforeServoLimitsAdjustment = calculateOuterLoopControlValue(yawProportional, yawDerivativeError, weightedYawIntegral, yawProportionalGain, yawDerivativeGain);
    1964:	89 8d       	ldd	r24, Y+25	; 0x19
    1966:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1968:	fc 01       	movw	r30, r24
    196a:	86 81       	ldd	r24, Z+6	; 0x06
    196c:	97 81       	ldd	r25, Z+7	; 0x07
    196e:	a0 85       	ldd	r26, Z+8	; 0x08
    1970:	b1 85       	ldd	r27, Z+9	; 0x09
    1972:	29 8d       	ldd	r18, Y+25	; 0x19
    1974:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1976:	f9 01       	movw	r30, r18
    1978:	82 84       	ldd	r8, Z+10	; 0x0a
    197a:	93 84       	ldd	r9, Z+11	; 0x0b
    197c:	a4 84       	ldd	r10, Z+12	; 0x0c
    197e:	b5 84       	ldd	r11, Z+13	; 0x0d
    1980:	c9 84       	ldd	r12, Y+9	; 0x09
    1982:	da 84       	ldd	r13, Y+10	; 0x0a
    1984:	eb 84       	ldd	r14, Y+11	; 0x0b
    1986:	fc 84       	ldd	r15, Y+12	; 0x0c
    1988:	0d 85       	ldd	r16, Y+13	; 0x0d
    198a:	1e 85       	ldd	r17, Y+14	; 0x0e
    198c:	2f 85       	ldd	r18, Y+15	; 0x0f
    198e:	38 89       	ldd	r19, Y+16	; 0x10
    1990:	49 81       	ldd	r20, Y+1	; 0x01
    1992:	5a 81       	ldd	r21, Y+2	; 0x02
    1994:	6b 81       	ldd	r22, Y+3	; 0x03
    1996:	7c 81       	ldd	r23, Y+4	; 0x04
    1998:	e9 8d       	ldd	r30, Y+25	; 0x19
    199a:	fa 8d       	ldd	r31, Y+26	; 0x1a
    199c:	7b 2e       	mov	r7, r27
    199e:	7f 92       	push	r7
    19a0:	7a 2e       	mov	r7, r26
    19a2:	7f 92       	push	r7
    19a4:	79 2e       	mov	r7, r25
    19a6:	7f 92       	push	r7
    19a8:	8f 93       	push	r24
    19aa:	cf 01       	movw	r24, r30
    19ac:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>
    19b0:	0f 90       	pop	r0
    19b2:	0f 90       	pop	r0
    19b4:	0f 90       	pop	r0
    19b6:	0f 90       	pop	r0
    19b8:	dc 01       	movw	r26, r24
    19ba:	cb 01       	movw	r24, r22
    19bc:	89 8b       	std	Y+17, r24	; 0x11
    19be:	9a 8b       	std	Y+18, r25	; 0x12
    19c0:	ab 8b       	std	Y+19, r26	; 0x13
    19c2:	bc 8b       	std	Y+20, r27	; 0x14
	float yawControl = adjustControlForServoLimits(yawControlBeforeServoLimitsAdjustment, minYawServoControlValue, maxYawServoControlValue);
    19c4:	89 8d       	ldd	r24, Y+25	; 0x19
    19c6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    19c8:	8a 5a       	subi	r24, 0xAA	; 170
    19ca:	9f 4f       	sbci	r25, 0xFF	; 255
    19cc:	fc 01       	movw	r30, r24
    19ce:	e0 80       	ld	r14, Z
    19d0:	f1 80       	ldd	r15, Z+1	; 0x01
    19d2:	02 81       	ldd	r16, Z+2	; 0x02
    19d4:	13 81       	ldd	r17, Z+3	; 0x03
    19d6:	89 8d       	ldd	r24, Y+25	; 0x19
    19d8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    19da:	8e 5a       	subi	r24, 0xAE	; 174
    19dc:	9f 4f       	sbci	r25, 0xFF	; 255
    19de:	fc 01       	movw	r30, r24
    19e0:	20 81       	ld	r18, Z
    19e2:	31 81       	ldd	r19, Z+1	; 0x01
    19e4:	42 81       	ldd	r20, Z+2	; 0x02
    19e6:	53 81       	ldd	r21, Z+3	; 0x03
    19e8:	89 89       	ldd	r24, Y+17	; 0x11
    19ea:	9a 89       	ldd	r25, Y+18	; 0x12
    19ec:	ab 89       	ldd	r26, Y+19	; 0x13
    19ee:	bc 89       	ldd	r27, Y+20	; 0x14
    19f0:	e9 8d       	ldd	r30, Y+25	; 0x19
    19f2:	fa 8d       	ldd	r31, Y+26	; 0x1a
    19f4:	67 01       	movw	r12, r14
    19f6:	78 01       	movw	r14, r16
    19f8:	89 01       	movw	r16, r18
    19fa:	9a 01       	movw	r18, r20
    19fc:	ac 01       	movw	r20, r24
    19fe:	bd 01       	movw	r22, r26
    1a00:	cf 01       	movw	r24, r30
    1a02:	0e 94 65 0a 	call	0x14ca	; 0x14ca <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    1a06:	dc 01       	movw	r26, r24
    1a08:	cb 01       	movw	r24, r22
    1a0a:	8d 8b       	std	Y+21, r24	; 0x15
    1a0c:	9e 8b       	std	Y+22, r25	; 0x16
    1a0e:	af 8b       	std	Y+23, r26	; 0x17
    1a10:	b8 8f       	std	Y+24, r27	; 0x18
	
	model->YawControl(yawControl);
    1a12:	89 8d       	ldd	r24, Y+25	; 0x19
    1a14:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a16:	fc 01       	movw	r30, r24
    1a18:	20 81       	ld	r18, Z
    1a1a:	31 81       	ldd	r19, Z+1	; 0x01
    1a1c:	8d 89       	ldd	r24, Y+21	; 0x15
    1a1e:	9e 89       	ldd	r25, Y+22	; 0x16
    1a20:	af 89       	ldd	r26, Y+23	; 0x17
    1a22:	b8 8d       	ldd	r27, Y+24	; 0x18
    1a24:	ac 01       	movw	r20, r24
    1a26:	bd 01       	movw	r22, r26
    1a28:	c9 01       	movw	r24, r18
    1a2a:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_ZN10helicopter5model11SystemModel10YawControlEf>
	model->YawControlBeforeServoLimitsAdjustment(yawControlBeforeServoLimitsAdjustment);
    1a2e:	89 8d       	ldd	r24, Y+25	; 0x19
    1a30:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a32:	fc 01       	movw	r30, r24
    1a34:	20 81       	ld	r18, Z
    1a36:	31 81       	ldd	r19, Z+1	; 0x01
    1a38:	89 89       	ldd	r24, Y+17	; 0x11
    1a3a:	9a 89       	ldd	r25, Y+18	; 0x12
    1a3c:	ab 89       	ldd	r26, Y+19	; 0x13
    1a3e:	bc 89       	ldd	r27, Y+20	; 0x14
    1a40:	ac 01       	movw	r20, r24
    1a42:	bd 01       	movw	r22, r26
    1a44:	c9 01       	movw	r24, r18
    1a46:	0e 94 af 01 	call	0x35e	; 0x35e <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf>
	model->YawIntegral(weightedYawIntegral);
    1a4a:	89 8d       	ldd	r24, Y+25	; 0x19
    1a4c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a4e:	fc 01       	movw	r30, r24
    1a50:	20 81       	ld	r18, Z
    1a52:	31 81       	ldd	r19, Z+1	; 0x01
    1a54:	89 85       	ldd	r24, Y+9	; 0x09
    1a56:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a58:	ab 85       	ldd	r26, Y+11	; 0x0b
    1a5a:	bc 85       	ldd	r27, Y+12	; 0x0c
    1a5c:	ac 01       	movw	r20, r24
    1a5e:	bd 01       	movw	r22, r26
    1a60:	c9 01       	movw	r24, r18
    1a62:	0e 94 11 02 	call	0x422	; 0x422 <_ZN10helicopter5model11SystemModel11YawIntegralEf>
	model->YawProportional(yawProportional);
    1a66:	89 8d       	ldd	r24, Y+25	; 0x19
    1a68:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a6a:	fc 01       	movw	r30, r24
    1a6c:	20 81       	ld	r18, Z
    1a6e:	31 81       	ldd	r19, Z+1	; 0x01
    1a70:	89 81       	ldd	r24, Y+1	; 0x01
    1a72:	9a 81       	ldd	r25, Y+2	; 0x02
    1a74:	ab 81       	ldd	r26, Y+3	; 0x03
    1a76:	bc 81       	ldd	r27, Y+4	; 0x04
    1a78:	ac 01       	movw	r20, r24
    1a7a:	bd 01       	movw	r22, r26
    1a7c:	c9 01       	movw	r24, r18
    1a7e:	0e 94 31 02 	call	0x462	; 0x462 <_ZN10helicopter5model11SystemModel15YawProportionalEf>
	model->YawDerivativeError(yawDerivativeError);
    1a82:	89 8d       	ldd	r24, Y+25	; 0x19
    1a84:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a86:	fc 01       	movw	r30, r24
    1a88:	20 81       	ld	r18, Z
    1a8a:	31 81       	ldd	r19, Z+1	; 0x01
    1a8c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a8e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a90:	af 85       	ldd	r26, Y+15	; 0x0f
    1a92:	b8 89       	ldd	r27, Y+16	; 0x10
    1a94:	ac 01       	movw	r20, r24
    1a96:	bd 01       	movw	r22, r26
    1a98:	c9 01       	movw	r24, r18
    1a9a:	0e 94 51 02 	call	0x4a2	; 0x4a2 <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf>
}
    1a9e:	6a 96       	adiw	r28, 0x1a	; 26
    1aa0:	0f b6       	in	r0, 0x3f	; 63
    1aa2:	f8 94       	cli
    1aa4:	de bf       	out	0x3e, r29	; 62
    1aa6:	0f be       	out	0x3f, r0	; 63
    1aa8:	cd bf       	out	0x3d, r28	; 61
    1aaa:	df 91       	pop	r29
    1aac:	cf 91       	pop	r28
    1aae:	1f 91       	pop	r17
    1ab0:	0f 91       	pop	r16
    1ab2:	ff 90       	pop	r15
    1ab4:	ef 90       	pop	r14
    1ab6:	df 90       	pop	r13
    1ab8:	cf 90       	pop	r12
    1aba:	bf 90       	pop	r11
    1abc:	af 90       	pop	r10
    1abe:	9f 90       	pop	r9
    1ac0:	8f 90       	pop	r8
    1ac2:	7f 90       	pop	r7
    1ac4:	08 95       	ret

00001ac6 <_ZN10helicopter10controller13PIDController34mainRotorCollectiveOuterLoopUpdateEv>:

void PIDController::mainRotorCollectiveOuterLoopUpdate()
{
    1ac6:	7f 92       	push	r7
    1ac8:	8f 92       	push	r8
    1aca:	9f 92       	push	r9
    1acc:	af 92       	push	r10
    1ace:	bf 92       	push	r11
    1ad0:	cf 92       	push	r12
    1ad2:	df 92       	push	r13
    1ad4:	ef 92       	push	r14
    1ad6:	ff 92       	push	r15
    1ad8:	0f 93       	push	r16
    1ada:	1f 93       	push	r17
    1adc:	cf 93       	push	r28
    1ade:	df 93       	push	r29
    1ae0:	cd b7       	in	r28, 0x3d	; 61
    1ae2:	de b7       	in	r29, 0x3e	; 62
    1ae4:	6a 97       	sbiw	r28, 0x1a	; 26
    1ae6:	0f b6       	in	r0, 0x3f	; 63
    1ae8:	f8 94       	cli
    1aea:	de bf       	out	0x3e, r29	; 62
    1aec:	0f be       	out	0x3f, r0	; 63
    1aee:	cd bf       	out	0x3d, r28	; 61
    1af0:	9a 8f       	std	Y+26, r25	; 0x1a
    1af2:	89 8f       	std	Y+25, r24	; 0x19
	//I JUST CHANGED THIS
	//float zProportional = calculateProportional(model->AltitudeFeetAgl(), model->ReferenceAltitudeFeet());
	float zProportional = calculateProportional(model->ZNEDBodyFrame(), model->ReferenceZNEDBodyFrameFeet());
    1af4:	89 8d       	ldd	r24, Y+25	; 0x19
    1af6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1af8:	fc 01       	movw	r30, r24
    1afa:	80 81       	ld	r24, Z
    1afc:	91 81       	ldd	r25, Z+1	; 0x01
    1afe:	0e 94 f6 05 	call	0xbec	; 0xbec <_ZNK10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEv>
    1b02:	6b 01       	movw	r12, r22
    1b04:	7c 01       	movw	r14, r24
    1b06:	89 8d       	ldd	r24, Y+25	; 0x19
    1b08:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1b0a:	fc 01       	movw	r30, r24
    1b0c:	80 81       	ld	r24, Z
    1b0e:	91 81       	ldd	r25, Z+1	; 0x01
    1b10:	0e 94 de 05 	call	0xbbc	; 0xbbc <_ZNK10helicopter5model11SystemModel13ZNEDBodyFrameEv>
    1b14:	dc 01       	movw	r26, r24
    1b16:	cb 01       	movw	r24, r22
    1b18:	e9 8d       	ldd	r30, Y+25	; 0x19
    1b1a:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1b1c:	97 01       	movw	r18, r14
    1b1e:	86 01       	movw	r16, r12
    1b20:	ac 01       	movw	r20, r24
    1b22:	bd 01       	movw	r22, r26
    1b24:	cf 01       	movw	r24, r30
    1b26:	0e 94 71 08 	call	0x10e2	; 0x10e2 <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    1b2a:	dc 01       	movw	r26, r24
    1b2c:	cb 01       	movw	r24, r22
    1b2e:	89 83       	std	Y+1, r24	; 0x01
    1b30:	9a 83       	std	Y+2, r25	; 0x02
    1b32:	ab 83       	std	Y+3, r26	; 0x03
    1b34:	bc 83       	std	Y+4, r27	; 0x04
	
	float zIntegralAntiWindup = calculateIntegralAntiWindup(model->MainRotorControlBeforeServoLimitsAdjustment(), model->MainRotorCollectiveControl(), zAntiWindupGain);
    1b36:	89 8d       	ldd	r24, Y+25	; 0x19
    1b38:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1b3a:	82 5b       	subi	r24, 0xB2	; 178
    1b3c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b3e:	fc 01       	movw	r30, r24
    1b40:	c0 80       	ld	r12, Z
    1b42:	d1 80       	ldd	r13, Z+1	; 0x01
    1b44:	e2 80       	ldd	r14, Z+2	; 0x02
    1b46:	f3 80       	ldd	r15, Z+3	; 0x03
    1b48:	89 8d       	ldd	r24, Y+25	; 0x19
    1b4a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1b4c:	fc 01       	movw	r30, r24
    1b4e:	80 81       	ld	r24, Z
    1b50:	91 81       	ldd	r25, Z+1	; 0x01
    1b52:	0e 94 0e 06 	call	0xc1c	; 0xc1c <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>
    1b56:	4b 01       	movw	r8, r22
    1b58:	5c 01       	movw	r10, r24
    1b5a:	89 8d       	ldd	r24, Y+25	; 0x19
    1b5c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1b5e:	fc 01       	movw	r30, r24
    1b60:	80 81       	ld	r24, Z
    1b62:	91 81       	ldd	r25, Z+1	; 0x01
    1b64:	0e 94 49 06 	call	0xc92	; 0xc92 <_ZNK10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEv>
    1b68:	dc 01       	movw	r26, r24
    1b6a:	cb 01       	movw	r24, r22
    1b6c:	e9 8d       	ldd	r30, Y+25	; 0x19
    1b6e:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1b70:	95 01       	movw	r18, r10
    1b72:	84 01       	movw	r16, r8
    1b74:	ac 01       	movw	r20, r24
    1b76:	bd 01       	movw	r22, r26
    1b78:	cf 01       	movw	r24, r30
    1b7a:	0e 94 a0 08 	call	0x1140	; 0x1140 <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    1b7e:	dc 01       	movw	r26, r24
    1b80:	cb 01       	movw	r24, r22
    1b82:	8d 83       	std	Y+5, r24	; 0x05
    1b84:	9e 83       	std	Y+6, r25	; 0x06
    1b86:	af 83       	std	Y+7, r26	; 0x07
    1b88:	b8 87       	std	Y+8, r27	; 0x08
	float weightedZIntegral = calculateIntegral(zProportional, model->ZIntegral(), zIntegralAntiWindup, zIntegralGain);
    1b8a:	89 8d       	ldd	r24, Y+25	; 0x19
    1b8c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1b8e:	8e 5b       	subi	r24, 0xBE	; 190
    1b90:	9f 4f       	sbci	r25, 0xFF	; 255
    1b92:	fc 01       	movw	r30, r24
    1b94:	a0 80       	ld	r10, Z
    1b96:	b1 80       	ldd	r11, Z+1	; 0x01
    1b98:	c2 80       	ldd	r12, Z+2	; 0x02
    1b9a:	d3 80       	ldd	r13, Z+3	; 0x03
    1b9c:	89 8d       	ldd	r24, Y+25	; 0x19
    1b9e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1ba0:	fc 01       	movw	r30, r24
    1ba2:	80 81       	ld	r24, Z
    1ba4:	91 81       	ldd	r25, Z+1	; 0x01
    1ba6:	0e 94 b4 06 	call	0xd68	; 0xd68 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>
    1baa:	9b 01       	movw	r18, r22
    1bac:	ac 01       	movw	r20, r24
    1bae:	ed 80       	ldd	r14, Y+5	; 0x05
    1bb0:	fe 80       	ldd	r15, Y+6	; 0x06
    1bb2:	0f 81       	ldd	r16, Y+7	; 0x07
    1bb4:	18 85       	ldd	r17, Y+8	; 0x08
    1bb6:	89 81       	ldd	r24, Y+1	; 0x01
    1bb8:	9a 81       	ldd	r25, Y+2	; 0x02
    1bba:	ab 81       	ldd	r26, Y+3	; 0x03
    1bbc:	bc 81       	ldd	r27, Y+4	; 0x04
    1bbe:	e9 8d       	ldd	r30, Y+25	; 0x19
    1bc0:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1bc2:	45 01       	movw	r8, r10
    1bc4:	56 01       	movw	r10, r12
    1bc6:	67 01       	movw	r12, r14
    1bc8:	78 01       	movw	r14, r16
    1bca:	89 01       	movw	r16, r18
    1bcc:	9a 01       	movw	r18, r20
    1bce:	ac 01       	movw	r20, r24
    1bd0:	bd 01       	movw	r22, r26
    1bd2:	cf 01       	movw	r24, r30
    1bd4:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    1bd8:	dc 01       	movw	r26, r24
    1bda:	cb 01       	movw	r24, r22
    1bdc:	89 87       	std	Y+9, r24	; 0x09
    1bde:	9a 87       	std	Y+10, r25	; 0x0a
    1be0:	ab 87       	std	Y+11, r26	; 0x0b
    1be2:	bc 87       	std	Y+12, r27	; 0x0c
	float zDerivativeError = calculateVelocityError(model->ZVelocityFeetPerSecond(), model->ReferenceZVelocityFeetPerSecond());
    1be4:	89 8d       	ldd	r24, Y+25	; 0x19
    1be6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1be8:	fc 01       	movw	r30, r24
    1bea:	80 81       	ld	r24, Z
    1bec:	91 81       	ldd	r25, Z+1	; 0x01
    1bee:	0e 94 9c 06 	call	0xd38	; 0xd38 <_ZNK10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEv>
    1bf2:	6b 01       	movw	r12, r22
    1bf4:	7c 01       	movw	r14, r24
    1bf6:	89 8d       	ldd	r24, Y+25	; 0x19
    1bf8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1bfa:	fc 01       	movw	r30, r24
    1bfc:	80 81       	ld	r24, Z
    1bfe:	91 81       	ldd	r25, Z+1	; 0x01
    1c00:	0e 94 84 06 	call	0xd08	; 0xd08 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>
    1c04:	dc 01       	movw	r26, r24
    1c06:	cb 01       	movw	r24, r22
    1c08:	e9 8d       	ldd	r30, Y+25	; 0x19
    1c0a:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1c0c:	97 01       	movw	r18, r14
    1c0e:	86 01       	movw	r16, r12
    1c10:	ac 01       	movw	r20, r24
    1c12:	bd 01       	movw	r22, r26
    1c14:	cf 01       	movw	r24, r30
    1c16:	0e 94 c3 09 	call	0x1386	; 0x1386 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    1c1a:	dc 01       	movw	r26, r24
    1c1c:	cb 01       	movw	r24, r22
    1c1e:	8d 87       	std	Y+13, r24	; 0x0d
    1c20:	9e 87       	std	Y+14, r25	; 0x0e
    1c22:	af 87       	std	Y+15, r26	; 0x0f
    1c24:	b8 8b       	std	Y+16, r27	; 0x10
	float mainRotorControlBeforeServoLimitsAdjustment = calculateOuterLoopControlValue(zProportional, zDerivativeError, weightedZIntegral, zProportionalGain, zDerivativeGain);
    1c26:	89 8d       	ldd	r24, Y+25	; 0x19
    1c28:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c2a:	8a 5b       	subi	r24, 0xBA	; 186
    1c2c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c2e:	fc 01       	movw	r30, r24
    1c30:	80 81       	ld	r24, Z
    1c32:	91 81       	ldd	r25, Z+1	; 0x01
    1c34:	a2 81       	ldd	r26, Z+2	; 0x02
    1c36:	b3 81       	ldd	r27, Z+3	; 0x03
    1c38:	29 8d       	ldd	r18, Y+25	; 0x19
    1c3a:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1c3c:	26 5b       	subi	r18, 0xB6	; 182
    1c3e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c40:	f9 01       	movw	r30, r18
    1c42:	80 80       	ld	r8, Z
    1c44:	91 80       	ldd	r9, Z+1	; 0x01
    1c46:	a2 80       	ldd	r10, Z+2	; 0x02
    1c48:	b3 80       	ldd	r11, Z+3	; 0x03
    1c4a:	c9 84       	ldd	r12, Y+9	; 0x09
    1c4c:	da 84       	ldd	r13, Y+10	; 0x0a
    1c4e:	eb 84       	ldd	r14, Y+11	; 0x0b
    1c50:	fc 84       	ldd	r15, Y+12	; 0x0c
    1c52:	0d 85       	ldd	r16, Y+13	; 0x0d
    1c54:	1e 85       	ldd	r17, Y+14	; 0x0e
    1c56:	2f 85       	ldd	r18, Y+15	; 0x0f
    1c58:	38 89       	ldd	r19, Y+16	; 0x10
    1c5a:	49 81       	ldd	r20, Y+1	; 0x01
    1c5c:	5a 81       	ldd	r21, Y+2	; 0x02
    1c5e:	6b 81       	ldd	r22, Y+3	; 0x03
    1c60:	7c 81       	ldd	r23, Y+4	; 0x04
    1c62:	e9 8d       	ldd	r30, Y+25	; 0x19
    1c64:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1c66:	7b 2e       	mov	r7, r27
    1c68:	7f 92       	push	r7
    1c6a:	7a 2e       	mov	r7, r26
    1c6c:	7f 92       	push	r7
    1c6e:	79 2e       	mov	r7, r25
    1c70:	7f 92       	push	r7
    1c72:	8f 93       	push	r24
    1c74:	cf 01       	movw	r24, r30
    1c76:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>
    1c7a:	0f 90       	pop	r0
    1c7c:	0f 90       	pop	r0
    1c7e:	0f 90       	pop	r0
    1c80:	0f 90       	pop	r0
    1c82:	dc 01       	movw	r26, r24
    1c84:	cb 01       	movw	r24, r22
    1c86:	89 8b       	std	Y+17, r24	; 0x11
    1c88:	9a 8b       	std	Y+18, r25	; 0x12
    1c8a:	ab 8b       	std	Y+19, r26	; 0x13
    1c8c:	bc 8b       	std	Y+20, r27	; 0x14
	float mainRotorControl = adjustControlForServoLimits(mainRotorControlBeforeServoLimitsAdjustment, minMainRotorServoControlValue, maxMainRotorServoControlValue);
    1c8e:	89 8d       	ldd	r24, Y+25	; 0x19
    1c90:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c92:	82 59       	subi	r24, 0x92	; 146
    1c94:	9f 4f       	sbci	r25, 0xFF	; 255
    1c96:	fc 01       	movw	r30, r24
    1c98:	e0 80       	ld	r14, Z
    1c9a:	f1 80       	ldd	r15, Z+1	; 0x01
    1c9c:	02 81       	ldd	r16, Z+2	; 0x02
    1c9e:	13 81       	ldd	r17, Z+3	; 0x03
    1ca0:	89 8d       	ldd	r24, Y+25	; 0x19
    1ca2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1ca4:	86 59       	subi	r24, 0x96	; 150
    1ca6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ca8:	fc 01       	movw	r30, r24
    1caa:	20 81       	ld	r18, Z
    1cac:	31 81       	ldd	r19, Z+1	; 0x01
    1cae:	42 81       	ldd	r20, Z+2	; 0x02
    1cb0:	53 81       	ldd	r21, Z+3	; 0x03
    1cb2:	89 89       	ldd	r24, Y+17	; 0x11
    1cb4:	9a 89       	ldd	r25, Y+18	; 0x12
    1cb6:	ab 89       	ldd	r26, Y+19	; 0x13
    1cb8:	bc 89       	ldd	r27, Y+20	; 0x14
    1cba:	e9 8d       	ldd	r30, Y+25	; 0x19
    1cbc:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1cbe:	67 01       	movw	r12, r14
    1cc0:	78 01       	movw	r14, r16
    1cc2:	89 01       	movw	r16, r18
    1cc4:	9a 01       	movw	r18, r20
    1cc6:	ac 01       	movw	r20, r24
    1cc8:	bd 01       	movw	r22, r26
    1cca:	cf 01       	movw	r24, r30
    1ccc:	0e 94 65 0a 	call	0x14ca	; 0x14ca <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    1cd0:	dc 01       	movw	r26, r24
    1cd2:	cb 01       	movw	r24, r22
    1cd4:	8d 8b       	std	Y+21, r24	; 0x15
    1cd6:	9e 8b       	std	Y+22, r25	; 0x16
    1cd8:	af 8b       	std	Y+23, r26	; 0x17
    1cda:	b8 8f       	std	Y+24, r27	; 0x18
	
	model->MainRotorCollectiveControl(mainRotorControl);
    1cdc:	89 8d       	ldd	r24, Y+25	; 0x19
    1cde:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1ce0:	fc 01       	movw	r30, r24
    1ce2:	20 81       	ld	r18, Z
    1ce4:	31 81       	ldd	r19, Z+1	; 0x01
    1ce6:	8d 89       	ldd	r24, Y+21	; 0x15
    1ce8:	9e 89       	ldd	r25, Y+22	; 0x16
    1cea:	af 89       	ldd	r26, Y+23	; 0x17
    1cec:	b8 8d       	ldd	r27, Y+24	; 0x18
    1cee:	ac 01       	movw	r20, r24
    1cf0:	bd 01       	movw	r22, r26
    1cf2:	c9 01       	movw	r24, r18
    1cf4:	0e 94 26 06 	call	0xc4c	; 0xc4c <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf>
	model->MainRotorControlBeforeServoLimitsAdjustment(mainRotorControlBeforeServoLimitsAdjustment);
    1cf8:	89 8d       	ldd	r24, Y+25	; 0x19
    1cfa:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1cfc:	fc 01       	movw	r30, r24
    1cfe:	20 81       	ld	r18, Z
    1d00:	31 81       	ldd	r19, Z+1	; 0x01
    1d02:	89 89       	ldd	r24, Y+17	; 0x11
    1d04:	9a 89       	ldd	r25, Y+18	; 0x12
    1d06:	ab 89       	ldd	r26, Y+19	; 0x13
    1d08:	bc 89       	ldd	r27, Y+20	; 0x14
    1d0a:	ac 01       	movw	r20, r24
    1d0c:	bd 01       	movw	r22, r26
    1d0e:	c9 01       	movw	r24, r18
    1d10:	0e 94 61 06 	call	0xcc2	; 0xcc2 <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf>
	model->ZIntegral(weightedZIntegral);
    1d14:	89 8d       	ldd	r24, Y+25	; 0x19
    1d16:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1d18:	fc 01       	movw	r30, r24
    1d1a:	20 81       	ld	r18, Z
    1d1c:	31 81       	ldd	r19, Z+1	; 0x01
    1d1e:	89 85       	ldd	r24, Y+9	; 0x09
    1d20:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d22:	ab 85       	ldd	r26, Y+11	; 0x0b
    1d24:	bc 85       	ldd	r27, Y+12	; 0x0c
    1d26:	ac 01       	movw	r20, r24
    1d28:	bd 01       	movw	r22, r26
    1d2a:	c9 01       	movw	r24, r18
    1d2c:	0e 94 cc 06 	call	0xd98	; 0xd98 <_ZN10helicopter5model11SystemModel9ZIntegralEf>
	model->ZProportional(zProportional);
    1d30:	89 8d       	ldd	r24, Y+25	; 0x19
    1d32:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1d34:	fc 01       	movw	r30, r24
    1d36:	20 81       	ld	r18, Z
    1d38:	31 81       	ldd	r19, Z+1	; 0x01
    1d3a:	89 81       	ldd	r24, Y+1	; 0x01
    1d3c:	9a 81       	ldd	r25, Y+2	; 0x02
    1d3e:	ab 81       	ldd	r26, Y+3	; 0x03
    1d40:	bc 81       	ldd	r27, Y+4	; 0x04
    1d42:	ac 01       	movw	r20, r24
    1d44:	bd 01       	movw	r22, r26
    1d46:	c9 01       	movw	r24, r18
    1d48:	0e 94 ef 06 	call	0xdde	; 0xdde <_ZN10helicopter5model11SystemModel13ZProportionalEf>
	model->ZDerivativeError(zDerivativeError);
    1d4c:	89 8d       	ldd	r24, Y+25	; 0x19
    1d4e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1d50:	fc 01       	movw	r30, r24
    1d52:	20 81       	ld	r18, Z
    1d54:	31 81       	ldd	r19, Z+1	; 0x01
    1d56:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d58:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d5a:	af 85       	ldd	r26, Y+15	; 0x0f
    1d5c:	b8 89       	ldd	r27, Y+16	; 0x10
    1d5e:	ac 01       	movw	r20, r24
    1d60:	bd 01       	movw	r22, r26
    1d62:	c9 01       	movw	r24, r18
    1d64:	0e 94 12 07 	call	0xe24	; 0xe24 <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf>
}
    1d68:	6a 96       	adiw	r28, 0x1a	; 26
    1d6a:	0f b6       	in	r0, 0x3f	; 63
    1d6c:	f8 94       	cli
    1d6e:	de bf       	out	0x3e, r29	; 62
    1d70:	0f be       	out	0x3f, r0	; 63
    1d72:	cd bf       	out	0x3d, r28	; 61
    1d74:	df 91       	pop	r29
    1d76:	cf 91       	pop	r28
    1d78:	1f 91       	pop	r17
    1d7a:	0f 91       	pop	r16
    1d7c:	ff 90       	pop	r15
    1d7e:	ef 90       	pop	r14
    1d80:	df 90       	pop	r13
    1d82:	cf 90       	pop	r12
    1d84:	bf 90       	pop	r11
    1d86:	af 90       	pop	r10
    1d88:	9f 90       	pop	r9
    1d8a:	8f 90       	pop	r8
    1d8c:	7f 90       	pop	r7
    1d8e:	08 95       	ret

00001d90 <_ZN10helicopter10controller13PIDController30cyclicLongitudeOuterLoopUpdateEv>:

void PIDController::cyclicLongitudeOuterLoopUpdate()
{
    1d90:	7f 92       	push	r7
    1d92:	8f 92       	push	r8
    1d94:	9f 92       	push	r9
    1d96:	af 92       	push	r10
    1d98:	bf 92       	push	r11
    1d9a:	cf 92       	push	r12
    1d9c:	df 92       	push	r13
    1d9e:	ef 92       	push	r14
    1da0:	ff 92       	push	r15
    1da2:	0f 93       	push	r16
    1da4:	1f 93       	push	r17
    1da6:	cf 93       	push	r28
    1da8:	df 93       	push	r29
    1daa:	cd b7       	in	r28, 0x3d	; 61
    1dac:	de b7       	in	r29, 0x3e	; 62
    1dae:	66 97       	sbiw	r28, 0x16	; 22
    1db0:	0f b6       	in	r0, 0x3f	; 63
    1db2:	f8 94       	cli
    1db4:	de bf       	out	0x3e, r29	; 62
    1db6:	0f be       	out	0x3f, r0	; 63
    1db8:	cd bf       	out	0x3d, r28	; 61
    1dba:	9e 8b       	std	Y+22, r25	; 0x16
    1dbc:	8d 8b       	std	Y+21, r24	; 0x15
	float xProportional = calculateProportional(model->XNEDBodyFrame(), model->ReferenceXNEDBodyFrame());
    1dbe:	8d 89       	ldd	r24, Y+21	; 0x15
    1dc0:	9e 89       	ldd	r25, Y+22	; 0x16
    1dc2:	fc 01       	movw	r30, r24
    1dc4:	80 81       	ld	r24, Z
    1dc6:	91 81       	ldd	r25, Z+1	; 0x01
    1dc8:	0e 94 87 02 	call	0x50e	; 0x50e <_ZNK10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEv>
    1dcc:	6b 01       	movw	r12, r22
    1dce:	7c 01       	movw	r14, r24
    1dd0:	8d 89       	ldd	r24, Y+21	; 0x15
    1dd2:	9e 89       	ldd	r25, Y+22	; 0x16
    1dd4:	fc 01       	movw	r30, r24
    1dd6:	80 81       	ld	r24, Z
    1dd8:	91 81       	ldd	r25, Z+1	; 0x01
    1dda:	0e 94 71 02 	call	0x4e2	; 0x4e2 <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>
    1dde:	dc 01       	movw	r26, r24
    1de0:	cb 01       	movw	r24, r22
    1de2:	ed 89       	ldd	r30, Y+21	; 0x15
    1de4:	fe 89       	ldd	r31, Y+22	; 0x16
    1de6:	97 01       	movw	r18, r14
    1de8:	86 01       	movw	r16, r12
    1dea:	ac 01       	movw	r20, r24
    1dec:	bd 01       	movw	r22, r26
    1dee:	cf 01       	movw	r24, r30
    1df0:	0e 94 71 08 	call	0x10e2	; 0x10e2 <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    1df4:	dc 01       	movw	r26, r24
    1df6:	cb 01       	movw	r24, r22
    1df8:	89 83       	std	Y+1, r24	; 0x01
    1dfa:	9a 83       	std	Y+2, r25	; 0x02
    1dfc:	ab 83       	std	Y+3, r26	; 0x03
    1dfe:	bc 83       	std	Y+4, r27	; 0x04
	float xIntegralAntiWindup = calculateIntegralAntiWindup(model->LongitudeControlBeforeServoLimitsAdjustment(), model->LongitudeControl(), xAntiWindupGain);
    1e00:	8d 89       	ldd	r24, Y+21	; 0x15
    1e02:	9e 89       	ldd	r25, Y+22	; 0x16
    1e04:	fc 01       	movw	r30, r24
    1e06:	c6 8c       	ldd	r12, Z+30	; 0x1e
    1e08:	d7 8c       	ldd	r13, Z+31	; 0x1f
    1e0a:	e0 a0       	ldd	r14, Z+32	; 0x20
    1e0c:	f1 a0       	ldd	r15, Z+33	; 0x21
    1e0e:	8d 89       	ldd	r24, Y+21	; 0x15
    1e10:	9e 89       	ldd	r25, Y+22	; 0x16
    1e12:	fc 01       	movw	r30, r24
    1e14:	80 81       	ld	r24, Z
    1e16:	91 81       	ldd	r25, Z+1	; 0x01
    1e18:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>
    1e1c:	4b 01       	movw	r8, r22
    1e1e:	5c 01       	movw	r10, r24
    1e20:	8d 89       	ldd	r24, Y+21	; 0x15
    1e22:	9e 89       	ldd	r25, Y+22	; 0x16
    1e24:	fc 01       	movw	r30, r24
    1e26:	80 81       	ld	r24, Z
    1e28:	91 81       	ldd	r25, Z+1	; 0x01
    1e2a:	0e 94 9d 02 	call	0x53a	; 0x53a <_ZNK10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEv>
    1e2e:	dc 01       	movw	r26, r24
    1e30:	cb 01       	movw	r24, r22
    1e32:	ed 89       	ldd	r30, Y+21	; 0x15
    1e34:	fe 89       	ldd	r31, Y+22	; 0x16
    1e36:	95 01       	movw	r18, r10
    1e38:	84 01       	movw	r16, r8
    1e3a:	ac 01       	movw	r20, r24
    1e3c:	bd 01       	movw	r22, r26
    1e3e:	cf 01       	movw	r24, r30
    1e40:	0e 94 a0 08 	call	0x1140	; 0x1140 <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    1e44:	dc 01       	movw	r26, r24
    1e46:	cb 01       	movw	r24, r22
    1e48:	8d 83       	std	Y+5, r24	; 0x05
    1e4a:	9e 83       	std	Y+6, r25	; 0x06
    1e4c:	af 83       	std	Y+7, r26	; 0x07
    1e4e:	b8 87       	std	Y+8, r27	; 0x08
	float weightedXIntegral = calculateIntegral(xProportional, model->XIntegral(), xIntegralAntiWindup, xIntegralGain);
    1e50:	8d 89       	ldd	r24, Y+21	; 0x15
    1e52:	9e 89       	ldd	r25, Y+22	; 0x16
    1e54:	fc 01       	movw	r30, r24
    1e56:	a2 88       	ldd	r10, Z+18	; 0x12
    1e58:	b3 88       	ldd	r11, Z+19	; 0x13
    1e5a:	c4 88       	ldd	r12, Z+20	; 0x14
    1e5c:	d5 88       	ldd	r13, Z+21	; 0x15
    1e5e:	8d 89       	ldd	r24, Y+21	; 0x15
    1e60:	9e 89       	ldd	r25, Y+22	; 0x16
    1e62:	fc 01       	movw	r30, r24
    1e64:	80 81       	ld	r24, Z
    1e66:	91 81       	ldd	r25, Z+1	; 0x01
    1e68:	0e 94 8e 03 	call	0x71c	; 0x71c <_ZNK10helicopter5model11SystemModel9XIntegralEv>
    1e6c:	9b 01       	movw	r18, r22
    1e6e:	ac 01       	movw	r20, r24
    1e70:	ed 80       	ldd	r14, Y+5	; 0x05
    1e72:	fe 80       	ldd	r15, Y+6	; 0x06
    1e74:	0f 81       	ldd	r16, Y+7	; 0x07
    1e76:	18 85       	ldd	r17, Y+8	; 0x08
    1e78:	89 81       	ldd	r24, Y+1	; 0x01
    1e7a:	9a 81       	ldd	r25, Y+2	; 0x02
    1e7c:	ab 81       	ldd	r26, Y+3	; 0x03
    1e7e:	bc 81       	ldd	r27, Y+4	; 0x04
    1e80:	ed 89       	ldd	r30, Y+21	; 0x15
    1e82:	fe 89       	ldd	r31, Y+22	; 0x16
    1e84:	45 01       	movw	r8, r10
    1e86:	56 01       	movw	r10, r12
    1e88:	67 01       	movw	r12, r14
    1e8a:	78 01       	movw	r14, r16
    1e8c:	89 01       	movw	r16, r18
    1e8e:	9a 01       	movw	r18, r20
    1e90:	ac 01       	movw	r20, r24
    1e92:	bd 01       	movw	r22, r26
    1e94:	cf 01       	movw	r24, r30
    1e96:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    1e9a:	dc 01       	movw	r26, r24
    1e9c:	cb 01       	movw	r24, r22
    1e9e:	89 87       	std	Y+9, r24	; 0x09
    1ea0:	9a 87       	std	Y+10, r25	; 0x0a
    1ea2:	ab 87       	std	Y+11, r26	; 0x0b
    1ea4:	bc 87       	std	Y+12, r27	; 0x0c
	float xDerivativeError = calculateVelocityError(model->XVelocityMetersPerSecond(), model->ReferenceXVelocityMetersPerSecond());
    1ea6:	8d 89       	ldd	r24, Y+21	; 0x15
    1ea8:	9e 89       	ldd	r25, Y+22	; 0x16
    1eaa:	fc 01       	movw	r30, r24
    1eac:	80 81       	ld	r24, Z
    1eae:	91 81       	ldd	r25, Z+1	; 0x01
    1eb0:	0e 94 1f 03 	call	0x63e	; 0x63e <_ZNK10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEv>
    1eb4:	6b 01       	movw	r12, r22
    1eb6:	7c 01       	movw	r14, r24
    1eb8:	8d 89       	ldd	r24, Y+21	; 0x15
    1eba:	9e 89       	ldd	r25, Y+22	; 0x16
    1ebc:	fc 01       	movw	r30, r24
    1ebe:	80 81       	ld	r24, Z
    1ec0:	91 81       	ldd	r25, Z+1	; 0x01
    1ec2:	0e 94 09 03 	call	0x612	; 0x612 <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>
    1ec6:	dc 01       	movw	r26, r24
    1ec8:	cb 01       	movw	r24, r22
    1eca:	ed 89       	ldd	r30, Y+21	; 0x15
    1ecc:	fe 89       	ldd	r31, Y+22	; 0x16
    1ece:	97 01       	movw	r18, r14
    1ed0:	86 01       	movw	r16, r12
    1ed2:	ac 01       	movw	r20, r24
    1ed4:	bd 01       	movw	r22, r26
    1ed6:	cf 01       	movw	r24, r30
    1ed8:	0e 94 c3 09 	call	0x1386	; 0x1386 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    1edc:	dc 01       	movw	r26, r24
    1ede:	cb 01       	movw	r24, r22
    1ee0:	8d 87       	std	Y+13, r24	; 0x0d
    1ee2:	9e 87       	std	Y+14, r25	; 0x0e
    1ee4:	af 87       	std	Y+15, r26	; 0x0f
    1ee6:	b8 8b       	std	Y+16, r27	; 0x10
	float xLongitudinalOuterLoopSetpoint = calculateOuterLoopControlValue(xProportional, xDerivativeError, weightedXIntegral, xProportionalGain, xDerivativeGain);
    1ee8:	8d 89       	ldd	r24, Y+21	; 0x15
    1eea:	9e 89       	ldd	r25, Y+22	; 0x16
    1eec:	fc 01       	movw	r30, r24
    1eee:	86 89       	ldd	r24, Z+22	; 0x16
    1ef0:	97 89       	ldd	r25, Z+23	; 0x17
    1ef2:	a0 8d       	ldd	r26, Z+24	; 0x18
    1ef4:	b1 8d       	ldd	r27, Z+25	; 0x19
    1ef6:	2d 89       	ldd	r18, Y+21	; 0x15
    1ef8:	3e 89       	ldd	r19, Y+22	; 0x16
    1efa:	f9 01       	movw	r30, r18
    1efc:	82 8c       	ldd	r8, Z+26	; 0x1a
    1efe:	93 8c       	ldd	r9, Z+27	; 0x1b
    1f00:	a4 8c       	ldd	r10, Z+28	; 0x1c
    1f02:	b5 8c       	ldd	r11, Z+29	; 0x1d
    1f04:	c9 84       	ldd	r12, Y+9	; 0x09
    1f06:	da 84       	ldd	r13, Y+10	; 0x0a
    1f08:	eb 84       	ldd	r14, Y+11	; 0x0b
    1f0a:	fc 84       	ldd	r15, Y+12	; 0x0c
    1f0c:	0d 85       	ldd	r16, Y+13	; 0x0d
    1f0e:	1e 85       	ldd	r17, Y+14	; 0x0e
    1f10:	2f 85       	ldd	r18, Y+15	; 0x0f
    1f12:	38 89       	ldd	r19, Y+16	; 0x10
    1f14:	49 81       	ldd	r20, Y+1	; 0x01
    1f16:	5a 81       	ldd	r21, Y+2	; 0x02
    1f18:	6b 81       	ldd	r22, Y+3	; 0x03
    1f1a:	7c 81       	ldd	r23, Y+4	; 0x04
    1f1c:	ed 89       	ldd	r30, Y+21	; 0x15
    1f1e:	fe 89       	ldd	r31, Y+22	; 0x16
    1f20:	7b 2e       	mov	r7, r27
    1f22:	7f 92       	push	r7
    1f24:	7a 2e       	mov	r7, r26
    1f26:	7f 92       	push	r7
    1f28:	79 2e       	mov	r7, r25
    1f2a:	7f 92       	push	r7
    1f2c:	8f 93       	push	r24
    1f2e:	cf 01       	movw	r24, r30
    1f30:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>
    1f34:	0f 90       	pop	r0
    1f36:	0f 90       	pop	r0
    1f38:	0f 90       	pop	r0
    1f3a:	0f 90       	pop	r0
    1f3c:	dc 01       	movw	r26, r24
    1f3e:	cb 01       	movw	r24, r22
    1f40:	89 8b       	std	Y+17, r24	; 0x11
    1f42:	9a 8b       	std	Y+18, r25	; 0x12
    1f44:	ab 8b       	std	Y+19, r26	; 0x13
    1f46:	bc 8b       	std	Y+20, r27	; 0x14
	
	xLongitudinalOuterLoopSetpoint = adjustForSetpointLimits(xLongitudinalOuterLoopSetpoint, minPitchSetpointDegrees, maxPitchSetpointDegrees);
    1f48:	8d 89       	ldd	r24, Y+21	; 0x15
    1f4a:	9e 89       	ldd	r25, Y+22	; 0x16
    1f4c:	8a 58       	subi	r24, 0x8A	; 138
    1f4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1f50:	fc 01       	movw	r30, r24
    1f52:	e0 80       	ld	r14, Z
    1f54:	f1 80       	ldd	r15, Z+1	; 0x01
    1f56:	02 81       	ldd	r16, Z+2	; 0x02
    1f58:	13 81       	ldd	r17, Z+3	; 0x03
    1f5a:	8d 89       	ldd	r24, Y+21	; 0x15
    1f5c:	9e 89       	ldd	r25, Y+22	; 0x16
    1f5e:	8e 58       	subi	r24, 0x8E	; 142
    1f60:	9f 4f       	sbci	r25, 0xFF	; 255
    1f62:	fc 01       	movw	r30, r24
    1f64:	20 81       	ld	r18, Z
    1f66:	31 81       	ldd	r19, Z+1	; 0x01
    1f68:	42 81       	ldd	r20, Z+2	; 0x02
    1f6a:	53 81       	ldd	r21, Z+3	; 0x03
    1f6c:	89 89       	ldd	r24, Y+17	; 0x11
    1f6e:	9a 89       	ldd	r25, Y+18	; 0x12
    1f70:	ab 89       	ldd	r26, Y+19	; 0x13
    1f72:	bc 89       	ldd	r27, Y+20	; 0x14
    1f74:	ed 89       	ldd	r30, Y+21	; 0x15
    1f76:	fe 89       	ldd	r31, Y+22	; 0x16
    1f78:	67 01       	movw	r12, r14
    1f7a:	78 01       	movw	r14, r16
    1f7c:	89 01       	movw	r16, r18
    1f7e:	9a 01       	movw	r18, r20
    1f80:	ac 01       	movw	r20, r24
    1f82:	bd 01       	movw	r22, r26
    1f84:	cf 01       	movw	r24, r30
    1f86:	0e 94 22 0b 	call	0x1644	; 0x1644 <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff>
    1f8a:	dc 01       	movw	r26, r24
    1f8c:	cb 01       	movw	r24, r22
    1f8e:	89 8b       	std	Y+17, r24	; 0x11
    1f90:	9a 8b       	std	Y+18, r25	; 0x12
    1f92:	ab 8b       	std	Y+19, r26	; 0x13
    1f94:	bc 8b       	std	Y+20, r27	; 0x14

	model->XLongitudeOuterLoopSetpoint(xLongitudinalOuterLoopSetpoint);
    1f96:	8d 89       	ldd	r24, Y+21	; 0x15
    1f98:	9e 89       	ldd	r25, Y+22	; 0x16
    1f9a:	fc 01       	movw	r30, r24
    1f9c:	20 81       	ld	r18, Z
    1f9e:	31 81       	ldd	r19, Z+1	; 0x01
    1fa0:	89 89       	ldd	r24, Y+17	; 0x11
    1fa2:	9a 89       	ldd	r25, Y+18	; 0x12
    1fa4:	ab 89       	ldd	r26, Y+19	; 0x13
    1fa6:	bc 89       	ldd	r27, Y+20	; 0x14
    1fa8:	ac 01       	movw	r20, r24
    1faa:	bd 01       	movw	r22, r26
    1fac:	c9 01       	movw	r24, r18
    1fae:	0e 94 4b 03 	call	0x696	; 0x696 <_ZN10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEf>
	model->XIntegral(weightedXIntegral);
    1fb2:	8d 89       	ldd	r24, Y+21	; 0x15
    1fb4:	9e 89       	ldd	r25, Y+22	; 0x16
    1fb6:	fc 01       	movw	r30, r24
    1fb8:	20 81       	ld	r18, Z
    1fba:	31 81       	ldd	r19, Z+1	; 0x01
    1fbc:	89 85       	ldd	r24, Y+9	; 0x09
    1fbe:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fc0:	ab 85       	ldd	r26, Y+11	; 0x0b
    1fc2:	bc 85       	ldd	r27, Y+12	; 0x0c
    1fc4:	ac 01       	movw	r20, r24
    1fc6:	bd 01       	movw	r22, r26
    1fc8:	c9 01       	movw	r24, r18
    1fca:	0e 94 a6 03 	call	0x74c	; 0x74c <_ZN10helicopter5model11SystemModel9XIntegralEf>
	model->XProportional(xProportional);
    1fce:	8d 89       	ldd	r24, Y+21	; 0x15
    1fd0:	9e 89       	ldd	r25, Y+22	; 0x16
    1fd2:	fc 01       	movw	r30, r24
    1fd4:	20 81       	ld	r18, Z
    1fd6:	31 81       	ldd	r19, Z+1	; 0x01
    1fd8:	89 81       	ldd	r24, Y+1	; 0x01
    1fda:	9a 81       	ldd	r25, Y+2	; 0x02
    1fdc:	ab 81       	ldd	r26, Y+3	; 0x03
    1fde:	bc 81       	ldd	r27, Y+4	; 0x04
    1fe0:	ac 01       	movw	r20, r24
    1fe2:	bd 01       	movw	r22, r26
    1fe4:	c9 01       	movw	r24, r18
    1fe6:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <_ZN10helicopter5model11SystemModel13XProportionalEf>
	model->XDerivativeError(xDerivativeError);
    1fea:	8d 89       	ldd	r24, Y+21	; 0x15
    1fec:	9e 89       	ldd	r25, Y+22	; 0x16
    1fee:	fc 01       	movw	r30, r24
    1ff0:	20 81       	ld	r18, Z
    1ff2:	31 81       	ldd	r19, Z+1	; 0x01
    1ff4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ff6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ff8:	af 85       	ldd	r26, Y+15	; 0x0f
    1ffa:	b8 89       	ldd	r27, Y+16	; 0x10
    1ffc:	ac 01       	movw	r20, r24
    1ffe:	bd 01       	movw	r22, r26
    2000:	c9 01       	movw	r24, r18
    2002:	0e 94 c9 03 	call	0x792	; 0x792 <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf>
}
    2006:	66 96       	adiw	r28, 0x16	; 22
    2008:	0f b6       	in	r0, 0x3f	; 63
    200a:	f8 94       	cli
    200c:	de bf       	out	0x3e, r29	; 62
    200e:	0f be       	out	0x3f, r0	; 63
    2010:	cd bf       	out	0x3d, r28	; 61
    2012:	df 91       	pop	r29
    2014:	cf 91       	pop	r28
    2016:	1f 91       	pop	r17
    2018:	0f 91       	pop	r16
    201a:	ff 90       	pop	r15
    201c:	ef 90       	pop	r14
    201e:	df 90       	pop	r13
    2020:	cf 90       	pop	r12
    2022:	bf 90       	pop	r11
    2024:	af 90       	pop	r10
    2026:	9f 90       	pop	r9
    2028:	8f 90       	pop	r8
    202a:	7f 90       	pop	r7
    202c:	08 95       	ret

0000202e <_ZN10helicopter10controller13PIDController28cyclicLateralOuterLoopUpdateEv>:

void PIDController::cyclicLateralOuterLoopUpdate()
{
    202e:	7f 92       	push	r7
    2030:	8f 92       	push	r8
    2032:	9f 92       	push	r9
    2034:	af 92       	push	r10
    2036:	bf 92       	push	r11
    2038:	cf 92       	push	r12
    203a:	df 92       	push	r13
    203c:	ef 92       	push	r14
    203e:	ff 92       	push	r15
    2040:	0f 93       	push	r16
    2042:	1f 93       	push	r17
    2044:	cf 93       	push	r28
    2046:	df 93       	push	r29
    2048:	cd b7       	in	r28, 0x3d	; 61
    204a:	de b7       	in	r29, 0x3e	; 62
    204c:	66 97       	sbiw	r28, 0x16	; 22
    204e:	0f b6       	in	r0, 0x3f	; 63
    2050:	f8 94       	cli
    2052:	de bf       	out	0x3e, r29	; 62
    2054:	0f be       	out	0x3f, r0	; 63
    2056:	cd bf       	out	0x3d, r28	; 61
    2058:	9e 8b       	std	Y+22, r25	; 0x16
    205a:	8d 8b       	std	Y+21, r24	; 0x15
	float yProportional = calculateProportional(model->YNEDBodyFrame(), model->ReferenceYNEDBodyFrame());
    205c:	8d 89       	ldd	r24, Y+21	; 0x15
    205e:	9e 89       	ldd	r25, Y+22	; 0x16
    2060:	fc 01       	movw	r30, r24
    2062:	80 81       	ld	r24, Z
    2064:	91 81       	ldd	r25, Z+1	; 0x01
    2066:	0e 94 34 04 	call	0x868	; 0x868 <_ZNK10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEv>
    206a:	6b 01       	movw	r12, r22
    206c:	7c 01       	movw	r14, r24
    206e:	8d 89       	ldd	r24, Y+21	; 0x15
    2070:	9e 89       	ldd	r25, Y+22	; 0x16
    2072:	fc 01       	movw	r30, r24
    2074:	80 81       	ld	r24, Z
    2076:	91 81       	ldd	r25, Z+1	; 0x01
    2078:	0e 94 1c 04 	call	0x838	; 0x838 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>
    207c:	dc 01       	movw	r26, r24
    207e:	cb 01       	movw	r24, r22
    2080:	ed 89       	ldd	r30, Y+21	; 0x15
    2082:	fe 89       	ldd	r31, Y+22	; 0x16
    2084:	97 01       	movw	r18, r14
    2086:	86 01       	movw	r16, r12
    2088:	ac 01       	movw	r20, r24
    208a:	bd 01       	movw	r22, r26
    208c:	cf 01       	movw	r24, r30
    208e:	0e 94 71 08 	call	0x10e2	; 0x10e2 <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    2092:	dc 01       	movw	r26, r24
    2094:	cb 01       	movw	r24, r22
    2096:	89 83       	std	Y+1, r24	; 0x01
    2098:	9a 83       	std	Y+2, r25	; 0x02
    209a:	ab 83       	std	Y+3, r26	; 0x03
    209c:	bc 83       	std	Y+4, r27	; 0x04
	float yIntegralAntiWindup = calculateIntegralAntiWindup(model->LateralControlBeforeServoLimitsAdjustment(), model->LateralControl(), yAntiWindupGain);
    209e:	8d 89       	ldd	r24, Y+21	; 0x15
    20a0:	9e 89       	ldd	r25, Y+22	; 0x16
    20a2:	fc 01       	movw	r30, r24
    20a4:	c6 a8       	ldd	r12, Z+54	; 0x36
    20a6:	d7 a8       	ldd	r13, Z+55	; 0x37
    20a8:	e0 ac       	ldd	r14, Z+56	; 0x38
    20aa:	f1 ac       	ldd	r15, Z+57	; 0x39
    20ac:	8d 89       	ldd	r24, Y+21	; 0x15
    20ae:	9e 89       	ldd	r25, Y+22	; 0x16
    20b0:	fc 01       	movw	r30, r24
    20b2:	80 81       	ld	r24, Z
    20b4:	91 81       	ldd	r25, Z+1	; 0x01
    20b6:	0e 94 87 04 	call	0x90e	; 0x90e <_ZNK10helicopter5model11SystemModel14LateralControlEv>
    20ba:	4b 01       	movw	r8, r22
    20bc:	5c 01       	movw	r10, r24
    20be:	8d 89       	ldd	r24, Y+21	; 0x15
    20c0:	9e 89       	ldd	r25, Y+22	; 0x16
    20c2:	fc 01       	movw	r30, r24
    20c4:	80 81       	ld	r24, Z
    20c6:	91 81       	ldd	r25, Z+1	; 0x01
    20c8:	0e 94 4c 04 	call	0x898	; 0x898 <_ZNK10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEv>
    20cc:	dc 01       	movw	r26, r24
    20ce:	cb 01       	movw	r24, r22
    20d0:	ed 89       	ldd	r30, Y+21	; 0x15
    20d2:	fe 89       	ldd	r31, Y+22	; 0x16
    20d4:	95 01       	movw	r18, r10
    20d6:	84 01       	movw	r16, r8
    20d8:	ac 01       	movw	r20, r24
    20da:	bd 01       	movw	r22, r26
    20dc:	cf 01       	movw	r24, r30
    20de:	0e 94 a0 08 	call	0x1140	; 0x1140 <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    20e2:	dc 01       	movw	r26, r24
    20e4:	cb 01       	movw	r24, r22
    20e6:	8d 83       	std	Y+5, r24	; 0x05
    20e8:	9e 83       	std	Y+6, r25	; 0x06
    20ea:	af 83       	std	Y+7, r26	; 0x07
    20ec:	b8 87       	std	Y+8, r27	; 0x08
	float weightedYIntegral = calculateIntegral(yProportional, model->YIntegral(), yIntegralAntiWindup, yIntegralGain);
    20ee:	8d 89       	ldd	r24, Y+21	; 0x15
    20f0:	9e 89       	ldd	r25, Y+22	; 0x16
    20f2:	fc 01       	movw	r30, r24
    20f4:	a2 a4       	ldd	r10, Z+42	; 0x2a
    20f6:	b3 a4       	ldd	r11, Z+43	; 0x2b
    20f8:	c4 a4       	ldd	r12, Z+44	; 0x2c
    20fa:	d5 a4       	ldd	r13, Z+45	; 0x2d
    20fc:	8d 89       	ldd	r24, Y+21	; 0x15
    20fe:	9e 89       	ldd	r25, Y+22	; 0x16
    2100:	fc 01       	movw	r30, r24
    2102:	80 81       	ld	r24, Z
    2104:	91 81       	ldd	r25, Z+1	; 0x01
    2106:	0e 94 50 05 	call	0xaa0	; 0xaa0 <_ZNK10helicopter5model11SystemModel9YIntegralEv>
    210a:	9b 01       	movw	r18, r22
    210c:	ac 01       	movw	r20, r24
    210e:	ed 80       	ldd	r14, Y+5	; 0x05
    2110:	fe 80       	ldd	r15, Y+6	; 0x06
    2112:	0f 81       	ldd	r16, Y+7	; 0x07
    2114:	18 85       	ldd	r17, Y+8	; 0x08
    2116:	89 81       	ldd	r24, Y+1	; 0x01
    2118:	9a 81       	ldd	r25, Y+2	; 0x02
    211a:	ab 81       	ldd	r26, Y+3	; 0x03
    211c:	bc 81       	ldd	r27, Y+4	; 0x04
    211e:	ed 89       	ldd	r30, Y+21	; 0x15
    2120:	fe 89       	ldd	r31, Y+22	; 0x16
    2122:	45 01       	movw	r8, r10
    2124:	56 01       	movw	r10, r12
    2126:	67 01       	movw	r12, r14
    2128:	78 01       	movw	r14, r16
    212a:	89 01       	movw	r16, r18
    212c:	9a 01       	movw	r18, r20
    212e:	ac 01       	movw	r20, r24
    2130:	bd 01       	movw	r22, r26
    2132:	cf 01       	movw	r24, r30
    2134:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    2138:	dc 01       	movw	r26, r24
    213a:	cb 01       	movw	r24, r22
    213c:	89 87       	std	Y+9, r24	; 0x09
    213e:	9a 87       	std	Y+10, r25	; 0x0a
    2140:	ab 87       	std	Y+11, r26	; 0x0b
    2142:	bc 87       	std	Y+12, r27	; 0x0c
	float yDerivativeError = calculateVelocityError(model->YVelocityMetersPerSecond(), model->ReferenceYVelocityMetersPerSecond());
    2144:	8d 89       	ldd	r24, Y+21	; 0x15
    2146:	9e 89       	ldd	r25, Y+22	; 0x16
    2148:	fc 01       	movw	r30, r24
    214a:	80 81       	ld	r24, Z
    214c:	91 81       	ldd	r25, Z+1	; 0x01
    214e:	0e 94 da 04 	call	0x9b4	; 0x9b4 <_ZNK10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEv>
    2152:	6b 01       	movw	r12, r22
    2154:	7c 01       	movw	r14, r24
    2156:	8d 89       	ldd	r24, Y+21	; 0x15
    2158:	9e 89       	ldd	r25, Y+22	; 0x16
    215a:	fc 01       	movw	r30, r24
    215c:	80 81       	ld	r24, Z
    215e:	91 81       	ldd	r25, Z+1	; 0x01
    2160:	0e 94 c2 04 	call	0x984	; 0x984 <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>
    2164:	dc 01       	movw	r26, r24
    2166:	cb 01       	movw	r24, r22
    2168:	ed 89       	ldd	r30, Y+21	; 0x15
    216a:	fe 89       	ldd	r31, Y+22	; 0x16
    216c:	97 01       	movw	r18, r14
    216e:	86 01       	movw	r16, r12
    2170:	ac 01       	movw	r20, r24
    2172:	bd 01       	movw	r22, r26
    2174:	cf 01       	movw	r24, r30
    2176:	0e 94 c3 09 	call	0x1386	; 0x1386 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    217a:	dc 01       	movw	r26, r24
    217c:	cb 01       	movw	r24, r22
    217e:	8d 87       	std	Y+13, r24	; 0x0d
    2180:	9e 87       	std	Y+14, r25	; 0x0e
    2182:	af 87       	std	Y+15, r26	; 0x0f
    2184:	b8 8b       	std	Y+16, r27	; 0x10
	float yLateralOuterLoopSetpoint = calculateOuterLoopControlValue(yProportional, yDerivativeError, weightedYIntegral, yProportionalGain, yDerivativeGain);
    2186:	8d 89       	ldd	r24, Y+21	; 0x15
    2188:	9e 89       	ldd	r25, Y+22	; 0x16
    218a:	fc 01       	movw	r30, r24
    218c:	86 a5       	ldd	r24, Z+46	; 0x2e
    218e:	97 a5       	ldd	r25, Z+47	; 0x2f
    2190:	a0 a9       	ldd	r26, Z+48	; 0x30
    2192:	b1 a9       	ldd	r27, Z+49	; 0x31
    2194:	2d 89       	ldd	r18, Y+21	; 0x15
    2196:	3e 89       	ldd	r19, Y+22	; 0x16
    2198:	f9 01       	movw	r30, r18
    219a:	82 a8       	ldd	r8, Z+50	; 0x32
    219c:	93 a8       	ldd	r9, Z+51	; 0x33
    219e:	a4 a8       	ldd	r10, Z+52	; 0x34
    21a0:	b5 a8       	ldd	r11, Z+53	; 0x35
    21a2:	c9 84       	ldd	r12, Y+9	; 0x09
    21a4:	da 84       	ldd	r13, Y+10	; 0x0a
    21a6:	eb 84       	ldd	r14, Y+11	; 0x0b
    21a8:	fc 84       	ldd	r15, Y+12	; 0x0c
    21aa:	0d 85       	ldd	r16, Y+13	; 0x0d
    21ac:	1e 85       	ldd	r17, Y+14	; 0x0e
    21ae:	2f 85       	ldd	r18, Y+15	; 0x0f
    21b0:	38 89       	ldd	r19, Y+16	; 0x10
    21b2:	49 81       	ldd	r20, Y+1	; 0x01
    21b4:	5a 81       	ldd	r21, Y+2	; 0x02
    21b6:	6b 81       	ldd	r22, Y+3	; 0x03
    21b8:	7c 81       	ldd	r23, Y+4	; 0x04
    21ba:	ed 89       	ldd	r30, Y+21	; 0x15
    21bc:	fe 89       	ldd	r31, Y+22	; 0x16
    21be:	7b 2e       	mov	r7, r27
    21c0:	7f 92       	push	r7
    21c2:	7a 2e       	mov	r7, r26
    21c4:	7f 92       	push	r7
    21c6:	79 2e       	mov	r7, r25
    21c8:	7f 92       	push	r7
    21ca:	8f 93       	push	r24
    21cc:	cf 01       	movw	r24, r30
    21ce:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>
    21d2:	0f 90       	pop	r0
    21d4:	0f 90       	pop	r0
    21d6:	0f 90       	pop	r0
    21d8:	0f 90       	pop	r0
    21da:	dc 01       	movw	r26, r24
    21dc:	cb 01       	movw	r24, r22
    21de:	89 8b       	std	Y+17, r24	; 0x11
    21e0:	9a 8b       	std	Y+18, r25	; 0x12
    21e2:	ab 8b       	std	Y+19, r26	; 0x13
    21e4:	bc 8b       	std	Y+20, r27	; 0x14

	yLateralOuterLoopSetpoint = adjustForSetpointLimits(yLateralOuterLoopSetpoint, minRollSetpointDegrees, maxRollSetpointDegrees);
    21e6:	8d 89       	ldd	r24, Y+21	; 0x15
    21e8:	9e 89       	ldd	r25, Y+22	; 0x16
    21ea:	82 58       	subi	r24, 0x82	; 130
    21ec:	9f 4f       	sbci	r25, 0xFF	; 255
    21ee:	fc 01       	movw	r30, r24
    21f0:	e0 80       	ld	r14, Z
    21f2:	f1 80       	ldd	r15, Z+1	; 0x01
    21f4:	02 81       	ldd	r16, Z+2	; 0x02
    21f6:	13 81       	ldd	r17, Z+3	; 0x03
    21f8:	8d 89       	ldd	r24, Y+21	; 0x15
    21fa:	9e 89       	ldd	r25, Y+22	; 0x16
    21fc:	86 58       	subi	r24, 0x86	; 134
    21fe:	9f 4f       	sbci	r25, 0xFF	; 255
    2200:	fc 01       	movw	r30, r24
    2202:	20 81       	ld	r18, Z
    2204:	31 81       	ldd	r19, Z+1	; 0x01
    2206:	42 81       	ldd	r20, Z+2	; 0x02
    2208:	53 81       	ldd	r21, Z+3	; 0x03
    220a:	89 89       	ldd	r24, Y+17	; 0x11
    220c:	9a 89       	ldd	r25, Y+18	; 0x12
    220e:	ab 89       	ldd	r26, Y+19	; 0x13
    2210:	bc 89       	ldd	r27, Y+20	; 0x14
    2212:	ed 89       	ldd	r30, Y+21	; 0x15
    2214:	fe 89       	ldd	r31, Y+22	; 0x16
    2216:	67 01       	movw	r12, r14
    2218:	78 01       	movw	r14, r16
    221a:	89 01       	movw	r16, r18
    221c:	9a 01       	movw	r18, r20
    221e:	ac 01       	movw	r20, r24
    2220:	bd 01       	movw	r22, r26
    2222:	cf 01       	movw	r24, r30
    2224:	0e 94 22 0b 	call	0x1644	; 0x1644 <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff>
    2228:	dc 01       	movw	r26, r24
    222a:	cb 01       	movw	r24, r22
    222c:	89 8b       	std	Y+17, r24	; 0x11
    222e:	9a 8b       	std	Y+18, r25	; 0x12
    2230:	ab 8b       	std	Y+19, r26	; 0x13
    2232:	bc 8b       	std	Y+20, r27	; 0x14
	
	model->YLateralOuterLoopSetpoint(yLateralOuterLoopSetpoint);
    2234:	8d 89       	ldd	r24, Y+21	; 0x15
    2236:	9e 89       	ldd	r25, Y+22	; 0x16
    2238:	fc 01       	movw	r30, r24
    223a:	20 81       	ld	r18, Z
    223c:	31 81       	ldd	r19, Z+1	; 0x01
    223e:	89 89       	ldd	r24, Y+17	; 0x11
    2240:	9a 89       	ldd	r25, Y+18	; 0x12
    2242:	ab 89       	ldd	r26, Y+19	; 0x13
    2244:	bc 89       	ldd	r27, Y+20	; 0x14
    2246:	ac 01       	movw	r20, r24
    2248:	bd 01       	movw	r22, r26
    224a:	c9 01       	movw	r24, r18
    224c:	0e 94 0a 05 	call	0xa14	; 0xa14 <_ZN10helicopter5model11SystemModel25YLateralOuterLoopSetpointEf>
	model->YIntegral(weightedYIntegral);
    2250:	8d 89       	ldd	r24, Y+21	; 0x15
    2252:	9e 89       	ldd	r25, Y+22	; 0x16
    2254:	fc 01       	movw	r30, r24
    2256:	20 81       	ld	r18, Z
    2258:	31 81       	ldd	r19, Z+1	; 0x01
    225a:	89 85       	ldd	r24, Y+9	; 0x09
    225c:	9a 85       	ldd	r25, Y+10	; 0x0a
    225e:	ab 85       	ldd	r26, Y+11	; 0x0b
    2260:	bc 85       	ldd	r27, Y+12	; 0x0c
    2262:	ac 01       	movw	r20, r24
    2264:	bd 01       	movw	r22, r26
    2266:	c9 01       	movw	r24, r18
    2268:	0e 94 68 05 	call	0xad0	; 0xad0 <_ZN10helicopter5model11SystemModel9YIntegralEf>
	model->YProportional(yProportional);
    226c:	8d 89       	ldd	r24, Y+21	; 0x15
    226e:	9e 89       	ldd	r25, Y+22	; 0x16
    2270:	fc 01       	movw	r30, r24
    2272:	20 81       	ld	r18, Z
    2274:	31 81       	ldd	r19, Z+1	; 0x01
    2276:	89 81       	ldd	r24, Y+1	; 0x01
    2278:	9a 81       	ldd	r25, Y+2	; 0x02
    227a:	ab 81       	ldd	r26, Y+3	; 0x03
    227c:	bc 81       	ldd	r27, Y+4	; 0x04
    227e:	ac 01       	movw	r20, r24
    2280:	bd 01       	movw	r22, r26
    2282:	c9 01       	movw	r24, r18
    2284:	0e 94 2d 05 	call	0xa5a	; 0xa5a <_ZN10helicopter5model11SystemModel13YProportionalEf>
	model->YDerivativeError(yDerivativeError);
    2288:	8d 89       	ldd	r24, Y+21	; 0x15
    228a:	9e 89       	ldd	r25, Y+22	; 0x16
    228c:	fc 01       	movw	r30, r24
    228e:	20 81       	ld	r18, Z
    2290:	31 81       	ldd	r19, Z+1	; 0x01
    2292:	8d 85       	ldd	r24, Y+13	; 0x0d
    2294:	9e 85       	ldd	r25, Y+14	; 0x0e
    2296:	af 85       	ldd	r26, Y+15	; 0x0f
    2298:	b8 89       	ldd	r27, Y+16	; 0x10
    229a:	ac 01       	movw	r20, r24
    229c:	bd 01       	movw	r22, r26
    229e:	c9 01       	movw	r24, r18
    22a0:	0e 94 8b 05 	call	0xb16	; 0xb16 <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf>
}
    22a4:	66 96       	adiw	r28, 0x16	; 22
    22a6:	0f b6       	in	r0, 0x3f	; 63
    22a8:	f8 94       	cli
    22aa:	de bf       	out	0x3e, r29	; 62
    22ac:	0f be       	out	0x3f, r0	; 63
    22ae:	cd bf       	out	0x3d, r28	; 61
    22b0:	df 91       	pop	r29
    22b2:	cf 91       	pop	r28
    22b4:	1f 91       	pop	r17
    22b6:	0f 91       	pop	r16
    22b8:	ff 90       	pop	r15
    22ba:	ef 90       	pop	r14
    22bc:	df 90       	pop	r13
    22be:	cf 90       	pop	r12
    22c0:	bf 90       	pop	r11
    22c2:	af 90       	pop	r10
    22c4:	9f 90       	pop	r9
    22c6:	8f 90       	pop	r8
    22c8:	7f 90       	pop	r7
    22ca:	08 95       	ret

000022cc <_ZN10helicopter10controller13PIDController30cyclicLongitudeInnerLoopUpdateEv>:

void PIDController::cyclicLongitudeInnerLoopUpdate()
{
    22cc:	2f 92       	push	r2
    22ce:	3f 92       	push	r3
    22d0:	4f 92       	push	r4
    22d2:	5f 92       	push	r5
    22d4:	6f 92       	push	r6
    22d6:	7f 92       	push	r7
    22d8:	8f 92       	push	r8
    22da:	9f 92       	push	r9
    22dc:	af 92       	push	r10
    22de:	bf 92       	push	r11
    22e0:	cf 92       	push	r12
    22e2:	df 92       	push	r13
    22e4:	ef 92       	push	r14
    22e6:	ff 92       	push	r15
    22e8:	0f 93       	push	r16
    22ea:	1f 93       	push	r17
    22ec:	cf 93       	push	r28
    22ee:	df 93       	push	r29
    22f0:	cd b7       	in	r28, 0x3d	; 61
    22f2:	de b7       	in	r29, 0x3e	; 62
    22f4:	2e 97       	sbiw	r28, 0x0e	; 14
    22f6:	0f b6       	in	r0, 0x3f	; 63
    22f8:	f8 94       	cli
    22fa:	de bf       	out	0x3e, r29	; 62
    22fc:	0f be       	out	0x3f, r0	; 63
    22fe:	cd bf       	out	0x3d, r28	; 61
    2300:	9a 87       	std	Y+10, r25	; 0x0a
    2302:	89 87       	std	Y+9, r24	; 0x09
	float xLongitudinalInnerLoopControlBeforeServoLimits = calculateInnerLoopControlValue(model->XLongitudeOuterLoopSetpoint(), model->ThetaPitchDegrees(), longitudeInnerLoopGain, model->PitchAngularVelocityRadsPerSecond(), pitchAngularVelocityGain);
    2304:	89 85       	ldd	r24, Y+9	; 0x09
    2306:	9a 85       	ldd	r25, Y+10	; 0x0a
    2308:	fc 01       	movw	r30, r24
    230a:	c6 a0       	ldd	r12, Z+38	; 0x26
    230c:	d7 a0       	ldd	r13, Z+39	; 0x27
    230e:	e0 a4       	ldd	r14, Z+40	; 0x28
    2310:	f1 a4       	ldd	r15, Z+41	; 0x29
    2312:	89 85       	ldd	r24, Y+9	; 0x09
    2314:	9a 85       	ldd	r25, Y+10	; 0x0a
    2316:	fc 01       	movw	r30, r24
    2318:	80 81       	ld	r24, Z
    231a:	91 81       	ldd	r25, Z+1	; 0x01
    231c:	0e 94 04 04 	call	0x808	; 0x808 <_ZNK10helicopter5model11SystemModel33PitchAngularVelocityRadsPerSecondEv>
    2320:	6b 87       	std	Y+11, r22	; 0x0b
    2322:	7c 87       	std	Y+12, r23	; 0x0c
    2324:	8d 87       	std	Y+13, r24	; 0x0d
    2326:	9e 87       	std	Y+14, r25	; 0x0e
    2328:	89 85       	ldd	r24, Y+9	; 0x09
    232a:	9a 85       	ldd	r25, Y+10	; 0x0a
    232c:	fc 01       	movw	r30, r24
    232e:	22 a0       	ldd	r2, Z+34	; 0x22
    2330:	33 a0       	ldd	r3, Z+35	; 0x23
    2332:	44 a0       	ldd	r4, Z+36	; 0x24
    2334:	55 a0       	ldd	r5, Z+37	; 0x25
    2336:	89 85       	ldd	r24, Y+9	; 0x09
    2338:	9a 85       	ldd	r25, Y+10	; 0x0a
    233a:	fc 01       	movw	r30, r24
    233c:	80 81       	ld	r24, Z
    233e:	91 81       	ldd	r25, Z+1	; 0x01
    2340:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <_ZNK10helicopter5model11SystemModel17ThetaPitchDegreesEv>
    2344:	3b 01       	movw	r6, r22
    2346:	4c 01       	movw	r8, r24
    2348:	89 85       	ldd	r24, Y+9	; 0x09
    234a:	9a 85       	ldd	r25, Y+10	; 0x0a
    234c:	fc 01       	movw	r30, r24
    234e:	80 81       	ld	r24, Z
    2350:	91 81       	ldd	r25, Z+1	; 0x01
    2352:	0e 94 35 03 	call	0x66a	; 0x66a <_ZNK10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEv>
    2356:	dc 01       	movw	r26, r24
    2358:	cb 01       	movw	r24, r22
    235a:	2f 2d       	mov	r18, r15
    235c:	2f 93       	push	r18
    235e:	2e 2d       	mov	r18, r14
    2360:	2f 93       	push	r18
    2362:	2d 2d       	mov	r18, r13
    2364:	2f 93       	push	r18
    2366:	2c 2d       	mov	r18, r12
    2368:	2f 93       	push	r18
    236a:	ab 84       	ldd	r10, Y+11	; 0x0b
    236c:	bc 84       	ldd	r11, Y+12	; 0x0c
    236e:	cd 84       	ldd	r12, Y+13	; 0x0d
    2370:	de 84       	ldd	r13, Y+14	; 0x0e
    2372:	82 01       	movw	r16, r4
    2374:	71 01       	movw	r14, r2
    2376:	a4 01       	movw	r20, r8
    2378:	93 01       	movw	r18, r6
    237a:	bc 01       	movw	r22, r24
    237c:	cd 01       	movw	r24, r26
    237e:	0e 94 c1 0a 	call	0x1582	; 0x1582 <_Z30calculateInnerLoopControlValuefffff>
    2382:	0f 90       	pop	r0
    2384:	0f 90       	pop	r0
    2386:	0f 90       	pop	r0
    2388:	0f 90       	pop	r0
    238a:	dc 01       	movw	r26, r24
    238c:	cb 01       	movw	r24, r22
    238e:	89 83       	std	Y+1, r24	; 0x01
    2390:	9a 83       	std	Y+2, r25	; 0x02
    2392:	ab 83       	std	Y+3, r26	; 0x03
    2394:	bc 83       	std	Y+4, r27	; 0x04
	
	float xLongitudinalInnerLoopControl = adjustControlForServoLimits(xLongitudinalInnerLoopControlBeforeServoLimits, minLongitudeServoControlValue, maxLongitudeServoControlValue);
    2396:	89 85       	ldd	r24, Y+9	; 0x09
    2398:	9a 85       	ldd	r25, Y+10	; 0x0a
    239a:	82 5a       	subi	r24, 0xA2	; 162
    239c:	9f 4f       	sbci	r25, 0xFF	; 255
    239e:	fc 01       	movw	r30, r24
    23a0:	e0 80       	ld	r14, Z
    23a2:	f1 80       	ldd	r15, Z+1	; 0x01
    23a4:	02 81       	ldd	r16, Z+2	; 0x02
    23a6:	13 81       	ldd	r17, Z+3	; 0x03
    23a8:	89 85       	ldd	r24, Y+9	; 0x09
    23aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    23ac:	86 5a       	subi	r24, 0xA6	; 166
    23ae:	9f 4f       	sbci	r25, 0xFF	; 255
    23b0:	fc 01       	movw	r30, r24
    23b2:	20 81       	ld	r18, Z
    23b4:	31 81       	ldd	r19, Z+1	; 0x01
    23b6:	42 81       	ldd	r20, Z+2	; 0x02
    23b8:	53 81       	ldd	r21, Z+3	; 0x03
    23ba:	89 81       	ldd	r24, Y+1	; 0x01
    23bc:	9a 81       	ldd	r25, Y+2	; 0x02
    23be:	ab 81       	ldd	r26, Y+3	; 0x03
    23c0:	bc 81       	ldd	r27, Y+4	; 0x04
    23c2:	e9 85       	ldd	r30, Y+9	; 0x09
    23c4:	fa 85       	ldd	r31, Y+10	; 0x0a
    23c6:	67 01       	movw	r12, r14
    23c8:	78 01       	movw	r14, r16
    23ca:	89 01       	movw	r16, r18
    23cc:	9a 01       	movw	r18, r20
    23ce:	ac 01       	movw	r20, r24
    23d0:	bd 01       	movw	r22, r26
    23d2:	cf 01       	movw	r24, r30
    23d4:	0e 94 65 0a 	call	0x14ca	; 0x14ca <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    23d8:	dc 01       	movw	r26, r24
    23da:	cb 01       	movw	r24, r22
    23dc:	8d 83       	std	Y+5, r24	; 0x05
    23de:	9e 83       	std	Y+6, r25	; 0x06
    23e0:	af 83       	std	Y+7, r26	; 0x07
    23e2:	b8 87       	std	Y+8, r27	; 0x08
	
	model->LongitudeControlBeforeServoLimitsAdjustment(xLongitudinalInnerLoopControlBeforeServoLimits);
    23e4:	89 85       	ldd	r24, Y+9	; 0x09
    23e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    23e8:	fc 01       	movw	r30, r24
    23ea:	20 81       	ld	r18, Z
    23ec:	31 81       	ldd	r19, Z+1	; 0x01
    23ee:	89 81       	ldd	r24, Y+1	; 0x01
    23f0:	9a 81       	ldd	r25, Y+2	; 0x02
    23f2:	ab 81       	ldd	r26, Y+3	; 0x03
    23f4:	bc 81       	ldd	r27, Y+4	; 0x04
    23f6:	ac 01       	movw	r20, r24
    23f8:	bd 01       	movw	r22, r26
    23fa:	c9 01       	movw	r24, r18
    23fc:	0e 94 b3 02 	call	0x566	; 0x566 <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf>
	
	model->LongitudeControl(xLongitudinalInnerLoopControl);
    2400:	89 85       	ldd	r24, Y+9	; 0x09
    2402:	9a 85       	ldd	r25, Y+10	; 0x0a
    2404:	fc 01       	movw	r30, r24
    2406:	20 81       	ld	r18, Z
    2408:	31 81       	ldd	r19, Z+1	; 0x01
    240a:	8d 81       	ldd	r24, Y+5	; 0x05
    240c:	9e 81       	ldd	r25, Y+6	; 0x06
    240e:	af 81       	ldd	r26, Y+7	; 0x07
    2410:	b8 85       	ldd	r27, Y+8	; 0x08
    2412:	ac 01       	movw	r20, r24
    2414:	bd 01       	movw	r22, r26
    2416:	c9 01       	movw	r24, r18
    2418:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <_ZN10helicopter5model11SystemModel16LongitudeControlEf>
}
    241c:	2e 96       	adiw	r28, 0x0e	; 14
    241e:	0f b6       	in	r0, 0x3f	; 63
    2420:	f8 94       	cli
    2422:	de bf       	out	0x3e, r29	; 62
    2424:	0f be       	out	0x3f, r0	; 63
    2426:	cd bf       	out	0x3d, r28	; 61
    2428:	df 91       	pop	r29
    242a:	cf 91       	pop	r28
    242c:	1f 91       	pop	r17
    242e:	0f 91       	pop	r16
    2430:	ff 90       	pop	r15
    2432:	ef 90       	pop	r14
    2434:	df 90       	pop	r13
    2436:	cf 90       	pop	r12
    2438:	bf 90       	pop	r11
    243a:	af 90       	pop	r10
    243c:	9f 90       	pop	r9
    243e:	8f 90       	pop	r8
    2440:	7f 90       	pop	r7
    2442:	6f 90       	pop	r6
    2444:	5f 90       	pop	r5
    2446:	4f 90       	pop	r4
    2448:	3f 90       	pop	r3
    244a:	2f 90       	pop	r2
    244c:	08 95       	ret

0000244e <_ZN10helicopter10controller13PIDController28cyclicLateralInnerLoopUpdateEv>:

void PIDController::cyclicLateralInnerLoopUpdate()
{
    244e:	2f 92       	push	r2
    2450:	3f 92       	push	r3
    2452:	4f 92       	push	r4
    2454:	5f 92       	push	r5
    2456:	6f 92       	push	r6
    2458:	7f 92       	push	r7
    245a:	8f 92       	push	r8
    245c:	9f 92       	push	r9
    245e:	af 92       	push	r10
    2460:	bf 92       	push	r11
    2462:	cf 92       	push	r12
    2464:	df 92       	push	r13
    2466:	ef 92       	push	r14
    2468:	ff 92       	push	r15
    246a:	0f 93       	push	r16
    246c:	1f 93       	push	r17
    246e:	cf 93       	push	r28
    2470:	df 93       	push	r29
    2472:	cd b7       	in	r28, 0x3d	; 61
    2474:	de b7       	in	r29, 0x3e	; 62
    2476:	2e 97       	sbiw	r28, 0x0e	; 14
    2478:	0f b6       	in	r0, 0x3f	; 63
    247a:	f8 94       	cli
    247c:	de bf       	out	0x3e, r29	; 62
    247e:	0f be       	out	0x3f, r0	; 63
    2480:	cd bf       	out	0x3d, r28	; 61
    2482:	9a 87       	std	Y+10, r25	; 0x0a
    2484:	89 87       	std	Y+9, r24	; 0x09
	float yLateralInnerLoopControlBeforeServoLimits = calculateInnerLoopControlValue(model->YLateralOuterLoopSetpoint(), model->PhiRollDegrees(), lateralInnerLoopGain, model->RollAngularVelocityRadsPerSecond(), rollAngularVelocityGain);
    2486:	89 85       	ldd	r24, Y+9	; 0x09
    2488:	9a 85       	ldd	r25, Y+10	; 0x0a
    248a:	ce 96       	adiw	r24, 0x3e	; 62
    248c:	fc 01       	movw	r30, r24
    248e:	c0 80       	ld	r12, Z
    2490:	d1 80       	ldd	r13, Z+1	; 0x01
    2492:	e2 80       	ldd	r14, Z+2	; 0x02
    2494:	f3 80       	ldd	r15, Z+3	; 0x03
    2496:	89 85       	ldd	r24, Y+9	; 0x09
    2498:	9a 85       	ldd	r25, Y+10	; 0x0a
    249a:	fc 01       	movw	r30, r24
    249c:	80 81       	ld	r24, Z
    249e:	91 81       	ldd	r25, Z+1	; 0x01
    24a0:	0e 94 c6 05 	call	0xb8c	; 0xb8c <_ZNK10helicopter5model11SystemModel32RollAngularVelocityRadsPerSecondEv>
    24a4:	6b 87       	std	Y+11, r22	; 0x0b
    24a6:	7c 87       	std	Y+12, r23	; 0x0c
    24a8:	8d 87       	std	Y+13, r24	; 0x0d
    24aa:	9e 87       	std	Y+14, r25	; 0x0e
    24ac:	89 85       	ldd	r24, Y+9	; 0x09
    24ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    24b0:	fc 01       	movw	r30, r24
    24b2:	22 ac       	ldd	r2, Z+58	; 0x3a
    24b4:	33 ac       	ldd	r3, Z+59	; 0x3b
    24b6:	44 ac       	ldd	r4, Z+60	; 0x3c
    24b8:	55 ac       	ldd	r5, Z+61	; 0x3d
    24ba:	89 85       	ldd	r24, Y+9	; 0x09
    24bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    24be:	fc 01       	movw	r30, r24
    24c0:	80 81       	ld	r24, Z
    24c2:	91 81       	ldd	r25, Z+1	; 0x01
    24c4:	0e 94 ae 05 	call	0xb5c	; 0xb5c <_ZNK10helicopter5model11SystemModel14PhiRollDegreesEv>
    24c8:	3b 01       	movw	r6, r22
    24ca:	4c 01       	movw	r8, r24
    24cc:	89 85       	ldd	r24, Y+9	; 0x09
    24ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    24d0:	fc 01       	movw	r30, r24
    24d2:	80 81       	ld	r24, Z
    24d4:	91 81       	ldd	r25, Z+1	; 0x01
    24d6:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZNK10helicopter5model11SystemModel25YLateralOuterLoopSetpointEv>
    24da:	dc 01       	movw	r26, r24
    24dc:	cb 01       	movw	r24, r22
    24de:	2f 2d       	mov	r18, r15
    24e0:	2f 93       	push	r18
    24e2:	2e 2d       	mov	r18, r14
    24e4:	2f 93       	push	r18
    24e6:	2d 2d       	mov	r18, r13
    24e8:	2f 93       	push	r18
    24ea:	2c 2d       	mov	r18, r12
    24ec:	2f 93       	push	r18
    24ee:	ab 84       	ldd	r10, Y+11	; 0x0b
    24f0:	bc 84       	ldd	r11, Y+12	; 0x0c
    24f2:	cd 84       	ldd	r12, Y+13	; 0x0d
    24f4:	de 84       	ldd	r13, Y+14	; 0x0e
    24f6:	82 01       	movw	r16, r4
    24f8:	71 01       	movw	r14, r2
    24fa:	a4 01       	movw	r20, r8
    24fc:	93 01       	movw	r18, r6
    24fe:	bc 01       	movw	r22, r24
    2500:	cd 01       	movw	r24, r26
    2502:	0e 94 c1 0a 	call	0x1582	; 0x1582 <_Z30calculateInnerLoopControlValuefffff>
    2506:	0f 90       	pop	r0
    2508:	0f 90       	pop	r0
    250a:	0f 90       	pop	r0
    250c:	0f 90       	pop	r0
    250e:	dc 01       	movw	r26, r24
    2510:	cb 01       	movw	r24, r22
    2512:	89 83       	std	Y+1, r24	; 0x01
    2514:	9a 83       	std	Y+2, r25	; 0x02
    2516:	ab 83       	std	Y+3, r26	; 0x03
    2518:	bc 83       	std	Y+4, r27	; 0x04
	
	float yLateralInnerLoopControl = adjustControlForServoLimits(yLateralInnerLoopControlBeforeServoLimits, minLateralServoControlValue, maxLateralServoControlValue);
    251a:	89 85       	ldd	r24, Y+9	; 0x09
    251c:	9a 85       	ldd	r25, Y+10	; 0x0a
    251e:	8a 59       	subi	r24, 0x9A	; 154
    2520:	9f 4f       	sbci	r25, 0xFF	; 255
    2522:	fc 01       	movw	r30, r24
    2524:	e0 80       	ld	r14, Z
    2526:	f1 80       	ldd	r15, Z+1	; 0x01
    2528:	02 81       	ldd	r16, Z+2	; 0x02
    252a:	13 81       	ldd	r17, Z+3	; 0x03
    252c:	89 85       	ldd	r24, Y+9	; 0x09
    252e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2530:	8e 59       	subi	r24, 0x9E	; 158
    2532:	9f 4f       	sbci	r25, 0xFF	; 255
    2534:	fc 01       	movw	r30, r24
    2536:	20 81       	ld	r18, Z
    2538:	31 81       	ldd	r19, Z+1	; 0x01
    253a:	42 81       	ldd	r20, Z+2	; 0x02
    253c:	53 81       	ldd	r21, Z+3	; 0x03
    253e:	89 81       	ldd	r24, Y+1	; 0x01
    2540:	9a 81       	ldd	r25, Y+2	; 0x02
    2542:	ab 81       	ldd	r26, Y+3	; 0x03
    2544:	bc 81       	ldd	r27, Y+4	; 0x04
    2546:	e9 85       	ldd	r30, Y+9	; 0x09
    2548:	fa 85       	ldd	r31, Y+10	; 0x0a
    254a:	67 01       	movw	r12, r14
    254c:	78 01       	movw	r14, r16
    254e:	89 01       	movw	r16, r18
    2550:	9a 01       	movw	r18, r20
    2552:	ac 01       	movw	r20, r24
    2554:	bd 01       	movw	r22, r26
    2556:	cf 01       	movw	r24, r30
    2558:	0e 94 65 0a 	call	0x14ca	; 0x14ca <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    255c:	dc 01       	movw	r26, r24
    255e:	cb 01       	movw	r24, r22
    2560:	8d 83       	std	Y+5, r24	; 0x05
    2562:	9e 83       	std	Y+6, r25	; 0x06
    2564:	af 83       	std	Y+7, r26	; 0x07
    2566:	b8 87       	std	Y+8, r27	; 0x08
	
	model->LateralControlBeforeServoLimitsAdjustment(yLateralInnerLoopControlBeforeServoLimits);
    2568:	89 85       	ldd	r24, Y+9	; 0x09
    256a:	9a 85       	ldd	r25, Y+10	; 0x0a
    256c:	fc 01       	movw	r30, r24
    256e:	20 81       	ld	r18, Z
    2570:	31 81       	ldd	r19, Z+1	; 0x01
    2572:	89 81       	ldd	r24, Y+1	; 0x01
    2574:	9a 81       	ldd	r25, Y+2	; 0x02
    2576:	ab 81       	ldd	r26, Y+3	; 0x03
    2578:	bc 81       	ldd	r27, Y+4	; 0x04
    257a:	ac 01       	movw	r20, r24
    257c:	bd 01       	movw	r22, r26
    257e:	c9 01       	movw	r24, r18
    2580:	0e 94 64 04 	call	0x8c8	; 0x8c8 <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf>
	
	model->LateralControl(yLateralInnerLoopControl);
    2584:	89 85       	ldd	r24, Y+9	; 0x09
    2586:	9a 85       	ldd	r25, Y+10	; 0x0a
    2588:	fc 01       	movw	r30, r24
    258a:	20 81       	ld	r18, Z
    258c:	31 81       	ldd	r19, Z+1	; 0x01
    258e:	8d 81       	ldd	r24, Y+5	; 0x05
    2590:	9e 81       	ldd	r25, Y+6	; 0x06
    2592:	af 81       	ldd	r26, Y+7	; 0x07
    2594:	b8 85       	ldd	r27, Y+8	; 0x08
    2596:	ac 01       	movw	r20, r24
    2598:	bd 01       	movw	r22, r26
    259a:	c9 01       	movw	r24, r18
    259c:	0e 94 9f 04 	call	0x93e	; 0x93e <_ZN10helicopter5model11SystemModel14LateralControlEf>
}
    25a0:	2e 96       	adiw	r28, 0x0e	; 14
    25a2:	0f b6       	in	r0, 0x3f	; 63
    25a4:	f8 94       	cli
    25a6:	de bf       	out	0x3e, r29	; 62
    25a8:	0f be       	out	0x3f, r0	; 63
    25aa:	cd bf       	out	0x3d, r28	; 61
    25ac:	df 91       	pop	r29
    25ae:	cf 91       	pop	r28
    25b0:	1f 91       	pop	r17
    25b2:	0f 91       	pop	r16
    25b4:	ff 90       	pop	r15
    25b6:	ef 90       	pop	r14
    25b8:	df 90       	pop	r13
    25ba:	cf 90       	pop	r12
    25bc:	bf 90       	pop	r11
    25be:	af 90       	pop	r10
    25c0:	9f 90       	pop	r9
    25c2:	8f 90       	pop	r8
    25c4:	7f 90       	pop	r7
    25c6:	6f 90       	pop	r6
    25c8:	5f 90       	pop	r5
    25ca:	4f 90       	pop	r4
    25cc:	3f 90       	pop	r3
    25ce:	2f 90       	pop	r2
    25d0:	08 95       	ret

000025d2 <_ZN10helicopter7drivers12SerialDriverD1Ev>:
				useDoubleSpeedMode(useDoubleSpeedMode)
				{
					
				}
						
				virtual ~SerialDriver()
    25d2:	cf 93       	push	r28
    25d4:	df 93       	push	r29
    25d6:	1f 92       	push	r1
    25d8:	1f 92       	push	r1
    25da:	cd b7       	in	r28, 0x3d	; 61
    25dc:	de b7       	in	r29, 0x3e	; 62
    25de:	9a 83       	std	Y+2, r25	; 0x02
    25e0:	89 83       	std	Y+1, r24	; 0x01
				{
    25e2:	89 81       	ldd	r24, Y+1	; 0x01
    25e4:	9a 81       	ldd	r25, Y+2	; 0x02
    25e6:	2a e0       	ldi	r18, 0x0A	; 10
    25e8:	32 e0       	ldi	r19, 0x02	; 2
    25ea:	fc 01       	movw	r30, r24
    25ec:	31 83       	std	Z+1, r19	; 0x01
    25ee:	20 83       	st	Z, r18
					
				}
    25f0:	80 e0       	ldi	r24, 0x00	; 0
    25f2:	90 e0       	ldi	r25, 0x00	; 0
    25f4:	81 70       	andi	r24, 0x01	; 1
    25f6:	99 27       	eor	r25, r25
    25f8:	00 97       	sbiw	r24, 0x00	; 0
    25fa:	21 f0       	breq	.+8      	; 0x2604 <_ZN10helicopter7drivers12SerialDriverD1Ev+0x32>
    25fc:	89 81       	ldd	r24, Y+1	; 0x01
    25fe:	9a 81       	ldd	r25, Y+2	; 0x02
    2600:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    2604:	0f 90       	pop	r0
    2606:	0f 90       	pop	r0
    2608:	df 91       	pop	r29
    260a:	cf 91       	pop	r28
    260c:	08 95       	ret

0000260e <_ZN10helicopter7drivers12SerialDriverD0Ev>:
				useDoubleSpeedMode(useDoubleSpeedMode)
				{
					
				}
						
				virtual ~SerialDriver()
    260e:	cf 93       	push	r28
    2610:	df 93       	push	r29
    2612:	1f 92       	push	r1
    2614:	1f 92       	push	r1
    2616:	cd b7       	in	r28, 0x3d	; 61
    2618:	de b7       	in	r29, 0x3e	; 62
    261a:	9a 83       	std	Y+2, r25	; 0x02
    261c:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    261e:	89 81       	ldd	r24, Y+1	; 0x01
    2620:	9a 81       	ldd	r25, Y+2	; 0x02
    2622:	0e 94 e9 12 	call	0x25d2	; 0x25d2 <_ZN10helicopter7drivers12SerialDriverD1Ev>
    2626:	89 81       	ldd	r24, Y+1	; 0x01
    2628:	9a 81       	ldd	r25, Y+2	; 0x02
    262a:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    262e:	0f 90       	pop	r0
    2630:	0f 90       	pop	r0
    2632:	df 91       	pop	r29
    2634:	cf 91       	pop	r28
    2636:	08 95       	ret

00002638 <_ZN10helicopter7drivers12SerialDriver10initializeEv>:
#include "CommonHeader.h"

using namespace helicopter::drivers;

void SerialDriver::initialize()
{
    2638:	cf 93       	push	r28
    263a:	df 93       	push	r29
    263c:	00 d0       	rcall	.+0      	; 0x263e <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x6>
    263e:	1f 92       	push	r1
    2640:	cd b7       	in	r28, 0x3d	; 61
    2642:	de b7       	in	r29, 0x3e	; 62
    2644:	9c 83       	std	Y+4, r25	; 0x04
    2646:	8b 83       	std	Y+3, r24	; 0x03
	unsigned int baudPrescaller = 0;
    2648:	1a 82       	std	Y+2, r1	; 0x02
    264a:	19 82       	std	Y+1, r1	; 0x01
	
	if (useDoubleSpeedMode)
    264c:	8b 81       	ldd	r24, Y+3	; 0x03
    264e:	9c 81       	ldd	r25, Y+4	; 0x04
    2650:	fc 01       	movw	r30, r24
    2652:	82 85       	ldd	r24, Z+10	; 0x0a
    2654:	88 23       	and	r24, r24
    2656:	b9 f1       	breq	.+110    	; 0x26c6 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x8e>
	{
		baudPrescaller = floor((((F_CPU / (baudRate * 8UL))) - 1UL));
    2658:	8b 81       	ldd	r24, Y+3	; 0x03
    265a:	9c 81       	ldd	r25, Y+4	; 0x04
    265c:	fc 01       	movw	r30, r24
    265e:	82 81       	ldd	r24, Z+2	; 0x02
    2660:	93 81       	ldd	r25, Z+3	; 0x03
    2662:	a4 81       	ldd	r26, Z+4	; 0x04
    2664:	b5 81       	ldd	r27, Z+5	; 0x05
    2666:	88 0f       	add	r24, r24
    2668:	99 1f       	adc	r25, r25
    266a:	aa 1f       	adc	r26, r26
    266c:	bb 1f       	adc	r27, r27
    266e:	88 0f       	add	r24, r24
    2670:	99 1f       	adc	r25, r25
    2672:	aa 1f       	adc	r26, r26
    2674:	bb 1f       	adc	r27, r27
    2676:	88 0f       	add	r24, r24
    2678:	99 1f       	adc	r25, r25
    267a:	aa 1f       	adc	r26, r26
    267c:	bb 1f       	adc	r27, r27
    267e:	9c 01       	movw	r18, r24
    2680:	ad 01       	movw	r20, r26
    2682:	80 e0       	ldi	r24, 0x00	; 0
    2684:	94 e2       	ldi	r25, 0x24	; 36
    2686:	a4 ef       	ldi	r26, 0xF4	; 244
    2688:	b0 e0       	ldi	r27, 0x00	; 0
    268a:	bc 01       	movw	r22, r24
    268c:	cd 01       	movw	r24, r26
    268e:	0e 94 87 4a 	call	0x950e	; 0x950e <__udivmodsi4>
    2692:	da 01       	movw	r26, r20
    2694:	c9 01       	movw	r24, r18
    2696:	01 97       	sbiw	r24, 0x01	; 1
    2698:	a1 09       	sbc	r26, r1
    269a:	b1 09       	sbc	r27, r1
    269c:	bc 01       	movw	r22, r24
    269e:	cd 01       	movw	r24, r26
    26a0:	0e 94 17 47 	call	0x8e2e	; 0x8e2e <__floatunsisf>
    26a4:	dc 01       	movw	r26, r24
    26a6:	cb 01       	movw	r24, r22
    26a8:	bc 01       	movw	r22, r24
    26aa:	cd 01       	movw	r24, r26
    26ac:	0e 94 54 47 	call	0x8ea8	; 0x8ea8 <floor>
    26b0:	dc 01       	movw	r26, r24
    26b2:	cb 01       	movw	r24, r22
    26b4:	bc 01       	movw	r22, r24
    26b6:	cd 01       	movw	r24, r26
    26b8:	0e 94 eb 46 	call	0x8dd6	; 0x8dd6 <__fixunssfsi>
    26bc:	dc 01       	movw	r26, r24
    26be:	cb 01       	movw	r24, r22
    26c0:	9a 83       	std	Y+2, r25	; 0x02
    26c2:	89 83       	std	Y+1, r24	; 0x01
    26c4:	3a c0       	rjmp	.+116    	; 0x273a <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x102>
	}else
	{
		//Calculation for the baud prescaller 
		baudPrescaller = floor((((F_CPU / (baudRate * 16UL))) - 1UL));
    26c6:	8b 81       	ldd	r24, Y+3	; 0x03
    26c8:	9c 81       	ldd	r25, Y+4	; 0x04
    26ca:	fc 01       	movw	r30, r24
    26cc:	82 81       	ldd	r24, Z+2	; 0x02
    26ce:	93 81       	ldd	r25, Z+3	; 0x03
    26d0:	a4 81       	ldd	r26, Z+4	; 0x04
    26d2:	b5 81       	ldd	r27, Z+5	; 0x05
    26d4:	88 0f       	add	r24, r24
    26d6:	99 1f       	adc	r25, r25
    26d8:	aa 1f       	adc	r26, r26
    26da:	bb 1f       	adc	r27, r27
    26dc:	88 0f       	add	r24, r24
    26de:	99 1f       	adc	r25, r25
    26e0:	aa 1f       	adc	r26, r26
    26e2:	bb 1f       	adc	r27, r27
    26e4:	88 0f       	add	r24, r24
    26e6:	99 1f       	adc	r25, r25
    26e8:	aa 1f       	adc	r26, r26
    26ea:	bb 1f       	adc	r27, r27
    26ec:	88 0f       	add	r24, r24
    26ee:	99 1f       	adc	r25, r25
    26f0:	aa 1f       	adc	r26, r26
    26f2:	bb 1f       	adc	r27, r27
    26f4:	9c 01       	movw	r18, r24
    26f6:	ad 01       	movw	r20, r26
    26f8:	80 e0       	ldi	r24, 0x00	; 0
    26fa:	94 e2       	ldi	r25, 0x24	; 36
    26fc:	a4 ef       	ldi	r26, 0xF4	; 244
    26fe:	b0 e0       	ldi	r27, 0x00	; 0
    2700:	bc 01       	movw	r22, r24
    2702:	cd 01       	movw	r24, r26
    2704:	0e 94 87 4a 	call	0x950e	; 0x950e <__udivmodsi4>
    2708:	da 01       	movw	r26, r20
    270a:	c9 01       	movw	r24, r18
    270c:	01 97       	sbiw	r24, 0x01	; 1
    270e:	a1 09       	sbc	r26, r1
    2710:	b1 09       	sbc	r27, r1
    2712:	bc 01       	movw	r22, r24
    2714:	cd 01       	movw	r24, r26
    2716:	0e 94 17 47 	call	0x8e2e	; 0x8e2e <__floatunsisf>
    271a:	dc 01       	movw	r26, r24
    271c:	cb 01       	movw	r24, r22
    271e:	bc 01       	movw	r22, r24
    2720:	cd 01       	movw	r24, r26
    2722:	0e 94 54 47 	call	0x8ea8	; 0x8ea8 <floor>
    2726:	dc 01       	movw	r26, r24
    2728:	cb 01       	movw	r24, r22
    272a:	bc 01       	movw	r22, r24
    272c:	cd 01       	movw	r24, r26
    272e:	0e 94 eb 46 	call	0x8dd6	; 0x8dd6 <__fixunssfsi>
    2732:	dc 01       	movw	r26, r24
    2734:	cb 01       	movw	r24, r22
    2736:	9a 83       	std	Y+2, r25	; 0x02
    2738:	89 83       	std	Y+1, r24	; 0x01
	}
	
	
	if (uartPort == Zero)
    273a:	8b 81       	ldd	r24, Y+3	; 0x03
    273c:	9c 81       	ldd	r25, Y+4	; 0x04
    273e:	fc 01       	movw	r30, r24
    2740:	86 81       	ldd	r24, Z+6	; 0x06
    2742:	88 23       	and	r24, r24
    2744:	41 f5       	brne	.+80     	; 0x2796 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x15e>
	{
		/* Set baud rate */
		UBRR0 = baudPrescaller;
    2746:	84 ec       	ldi	r24, 0xC4	; 196
    2748:	90 e0       	ldi	r25, 0x00	; 0
    274a:	29 81       	ldd	r18, Y+1	; 0x01
    274c:	3a 81       	ldd	r19, Y+2	; 0x02
    274e:	fc 01       	movw	r30, r24
    2750:	31 83       	std	Z+1, r19	; 0x01
    2752:	20 83       	st	Z, r18
		
		/* Set frame format: asynchronous usart, no parity 1stop bit, 8 bits of data, */
		UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);
    2754:	82 ec       	ldi	r24, 0xC2	; 194
    2756:	90 e0       	ldi	r25, 0x00	; 0
    2758:	22 ec       	ldi	r18, 0xC2	; 194
    275a:	30 e0       	ldi	r19, 0x00	; 0
    275c:	f9 01       	movw	r30, r18
    275e:	20 81       	ld	r18, Z
    2760:	26 60       	ori	r18, 0x06	; 6
    2762:	fc 01       	movw	r30, r24
    2764:	20 83       	st	Z, r18
		
		//If double speed mode flag was set, set the U2X0 flag to enable double speed mode.
		if (useDoubleSpeedMode)
    2766:	8b 81       	ldd	r24, Y+3	; 0x03
    2768:	9c 81       	ldd	r25, Y+4	; 0x04
    276a:	fc 01       	movw	r30, r24
    276c:	82 85       	ldd	r24, Z+10	; 0x0a
    276e:	88 23       	and	r24, r24
    2770:	49 f0       	breq	.+18     	; 0x2784 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x14c>
		{
			UCSR0A |= (1<<U2X0);
    2772:	80 ec       	ldi	r24, 0xC0	; 192
    2774:	90 e0       	ldi	r25, 0x00	; 0
    2776:	20 ec       	ldi	r18, 0xC0	; 192
    2778:	30 e0       	ldi	r19, 0x00	; 0
    277a:	f9 01       	movw	r30, r18
    277c:	20 81       	ld	r18, Z
    277e:	22 60       	ori	r18, 0x02	; 2
    2780:	fc 01       	movw	r30, r24
    2782:	20 83       	st	Z, r18
		}
		
			
			
		/* Enable receiver and transmitter */
		UCSR0B |= (1<<RXEN0) | (1<<TXEN0);
    2784:	81 ec       	ldi	r24, 0xC1	; 193
    2786:	90 e0       	ldi	r25, 0x00	; 0
    2788:	21 ec       	ldi	r18, 0xC1	; 193
    278a:	30 e0       	ldi	r19, 0x00	; 0
    278c:	f9 01       	movw	r30, r18
    278e:	20 81       	ld	r18, Z
    2790:	28 61       	ori	r18, 0x18	; 24
    2792:	fc 01       	movw	r30, r24
    2794:	20 83       	st	Z, r18
	}
}
    2796:	0f 90       	pop	r0
    2798:	0f 90       	pop	r0
    279a:	0f 90       	pop	r0
    279c:	0f 90       	pop	r0
    279e:	df 91       	pop	r29
    27a0:	cf 91       	pop	r28
    27a2:	08 95       	ret

000027a4 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh>:

int SerialDriver::transmitByte(byte byteToSend)
{
    27a4:	cf 93       	push	r28
    27a6:	df 93       	push	r29
    27a8:	00 d0       	rcall	.+0      	; 0x27aa <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6>
    27aa:	cd b7       	in	r28, 0x3d	; 61
    27ac:	de b7       	in	r29, 0x3e	; 62
    27ae:	9a 83       	std	Y+2, r25	; 0x02
    27b0:	89 83       	std	Y+1, r24	; 0x01
    27b2:	6b 83       	std	Y+3, r22	; 0x03
	if (uartPort == Zero)
    27b4:	89 81       	ldd	r24, Y+1	; 0x01
    27b6:	9a 81       	ldd	r25, Y+2	; 0x02
    27b8:	fc 01       	movw	r30, r24
    27ba:	86 81       	ldd	r24, Z+6	; 0x06
    27bc:	88 23       	and	r24, r24
    27be:	09 f0       	breq	.+2      	; 0x27c2 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x1e>
    27c0:	42 c0       	rjmp	.+132    	; 0x2846 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0xa2>
	{
		if (isTimeoutEnabled)
    27c2:	89 81       	ldd	r24, Y+1	; 0x01
    27c4:	9a 81       	ldd	r25, Y+2	; 0x02
    27c6:	fc 01       	movw	r30, r24
    27c8:	81 85       	ldd	r24, Z+9	; 0x09
    27ca:	88 23       	and	r24, r24
    27cc:	09 f1       	breq	.+66     	; 0x2810 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6c>
		{
			timer->startTimer();
    27ce:	89 81       	ldd	r24, Y+1	; 0x01
    27d0:	9a 81       	ldd	r25, Y+2	; 0x02
    27d2:	fc 01       	movw	r30, r24
    27d4:	87 81       	ldd	r24, Z+7	; 0x07
    27d6:	90 85       	ldd	r25, Z+8	; 0x08
    27d8:	0e 94 1f 45 	call	0x8a3e	; 0x8a3e <_ZN10helicopter4util5Timer10startTimerEv>
		}
		
		/* Wait for empty transmit buffer */
		while ( !( UCSR0A & (1<<UDRE0)) )
    27dc:	19 c0       	rjmp	.+50     	; 0x2810 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6c>
		{
			//Check for timeout
			if (isTimeoutEnabled)
    27de:	89 81       	ldd	r24, Y+1	; 0x01
    27e0:	9a 81       	ldd	r25, Y+2	; 0x02
    27e2:	fc 01       	movw	r30, r24
    27e4:	81 85       	ldd	r24, Z+9	; 0x09
    27e6:	88 23       	and	r24, r24
    27e8:	a1 f0       	breq	.+40     	; 0x2812 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6e>
			{
				if (timer->hasTimedout())
    27ea:	89 81       	ldd	r24, Y+1	; 0x01
    27ec:	9a 81       	ldd	r25, Y+2	; 0x02
    27ee:	fc 01       	movw	r30, r24
    27f0:	87 81       	ldd	r24, Z+7	; 0x07
    27f2:	90 85       	ldd	r25, Z+8	; 0x08
    27f4:	0e 94 d9 45 	call	0x8bb2	; 0x8bb2 <_ZN10helicopter4util5Timer11hasTimedoutEv>
    27f8:	88 23       	and	r24, r24
    27fa:	59 f0       	breq	.+22     	; 0x2812 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6e>
				{
					timer->stopTimer();
    27fc:	89 81       	ldd	r24, Y+1	; 0x01
    27fe:	9a 81       	ldd	r25, Y+2	; 0x02
    2800:	fc 01       	movw	r30, r24
    2802:	87 81       	ldd	r24, Z+7	; 0x07
    2804:	90 85       	ldd	r25, Z+8	; 0x08
    2806:	0e 94 f3 45 	call	0x8be6	; 0x8be6 <_ZN10helicopter4util5Timer9stopTimerEv>
					return -1;
    280a:	8f ef       	ldi	r24, 0xFF	; 255
    280c:	9f ef       	ldi	r25, 0xFF	; 255
    280e:	1d c0       	rjmp	.+58     	; 0x284a <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0xa6>
		{
			timer->startTimer();
		}
		
		/* Wait for empty transmit buffer */
		while ( !( UCSR0A & (1<<UDRE0)) )
    2810:	00 00       	nop
    2812:	80 ec       	ldi	r24, 0xC0	; 192
    2814:	90 e0       	ldi	r25, 0x00	; 0
    2816:	fc 01       	movw	r30, r24
    2818:	80 81       	ld	r24, Z
    281a:	88 2f       	mov	r24, r24
    281c:	90 e0       	ldi	r25, 0x00	; 0
    281e:	80 72       	andi	r24, 0x20	; 32
    2820:	99 27       	eor	r25, r25
    2822:	21 e0       	ldi	r18, 0x01	; 1
    2824:	00 97       	sbiw	r24, 0x00	; 0
    2826:	09 f0       	breq	.+2      	; 0x282a <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x86>
    2828:	20 e0       	ldi	r18, 0x00	; 0
    282a:	22 23       	and	r18, r18
    282c:	c1 f6       	brne	.-80     	; 0x27de <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x3a>
			}
		}
				
				
		/* Put data into buffer, sends the data */
		UDR0 = byteToSend;
    282e:	86 ec       	ldi	r24, 0xC6	; 198
    2830:	90 e0       	ldi	r25, 0x00	; 0
    2832:	2b 81       	ldd	r18, Y+3	; 0x03
    2834:	fc 01       	movw	r30, r24
    2836:	20 83       	st	Z, r18
		
		timer->stopTimer();
    2838:	89 81       	ldd	r24, Y+1	; 0x01
    283a:	9a 81       	ldd	r25, Y+2	; 0x02
    283c:	fc 01       	movw	r30, r24
    283e:	87 81       	ldd	r24, Z+7	; 0x07
    2840:	90 85       	ldd	r25, Z+8	; 0x08
    2842:	0e 94 f3 45 	call	0x8be6	; 0x8be6 <_ZN10helicopter4util5Timer9stopTimerEv>
	}
	
	return 0;
    2846:	80 e0       	ldi	r24, 0x00	; 0
    2848:	90 e0       	ldi	r25, 0x00	; 0
}
    284a:	0f 90       	pop	r0
    284c:	0f 90       	pop	r0
    284e:	0f 90       	pop	r0
    2850:	df 91       	pop	r29
    2852:	cf 91       	pop	r28
    2854:	08 95       	ret

00002856 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh>:

int SerialDriver::receiveByte(byte &receivedByte)
{
    2856:	cf 93       	push	r28
    2858:	df 93       	push	r29
    285a:	00 d0       	rcall	.+0      	; 0x285c <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x6>
    285c:	1f 92       	push	r1
    285e:	1f 92       	push	r1
    2860:	cd b7       	in	r28, 0x3d	; 61
    2862:	de b7       	in	r29, 0x3e	; 62
    2864:	9b 83       	std	Y+3, r25	; 0x03
    2866:	8a 83       	std	Y+2, r24	; 0x02
    2868:	7d 83       	std	Y+5, r23	; 0x05
    286a:	6c 83       	std	Y+4, r22	; 0x04
	bool hasDataOverrun = false;
    286c:	19 82       	std	Y+1, r1	; 0x01
	
	if (uartPort == Zero)
    286e:	8a 81       	ldd	r24, Y+2	; 0x02
    2870:	9b 81       	ldd	r25, Y+3	; 0x03
    2872:	fc 01       	movw	r30, r24
    2874:	86 81       	ldd	r24, Z+6	; 0x06
    2876:	88 23       	and	r24, r24
    2878:	09 f0       	breq	.+2      	; 0x287c <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x26>
    287a:	41 c0       	rjmp	.+130    	; 0x28fe <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0xa8>
	{
		
		if (isTimeoutEnabled)
    287c:	8a 81       	ldd	r24, Y+2	; 0x02
    287e:	9b 81       	ldd	r25, Y+3	; 0x03
    2880:	fc 01       	movw	r30, r24
    2882:	81 85       	ldd	r24, Z+9	; 0x09
    2884:	88 23       	and	r24, r24
    2886:	d9 f0       	breq	.+54     	; 0x28be <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x68>
		{
			timer->startTimer();
    2888:	8a 81       	ldd	r24, Y+2	; 0x02
    288a:	9b 81       	ldd	r25, Y+3	; 0x03
    288c:	fc 01       	movw	r30, r24
    288e:	87 81       	ldd	r24, Z+7	; 0x07
    2890:	90 85       	ldd	r25, Z+8	; 0x08
    2892:	0e 94 1f 45 	call	0x8a3e	; 0x8a3e <_ZN10helicopter4util5Timer10startTimerEv>
		}
		//int counter = 0;
		
		/* Wait for data on the receive buffer */
		while ( !(UCSR0A & (1<<RXC0)) )
    2896:	13 c0       	rjmp	.+38     	; 0x28be <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x68>
		{
			if (timer->hasTimedout())
    2898:	8a 81       	ldd	r24, Y+2	; 0x02
    289a:	9b 81       	ldd	r25, Y+3	; 0x03
    289c:	fc 01       	movw	r30, r24
    289e:	87 81       	ldd	r24, Z+7	; 0x07
    28a0:	90 85       	ldd	r25, Z+8	; 0x08
    28a2:	0e 94 d9 45 	call	0x8bb2	; 0x8bb2 <_ZN10helicopter4util5Timer11hasTimedoutEv>
    28a6:	88 23       	and	r24, r24
    28a8:	59 f0       	breq	.+22     	; 0x28c0 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x6a>
			{
				timer->stopTimer();
    28aa:	8a 81       	ldd	r24, Y+2	; 0x02
    28ac:	9b 81       	ldd	r25, Y+3	; 0x03
    28ae:	fc 01       	movw	r30, r24
    28b0:	87 81       	ldd	r24, Z+7	; 0x07
    28b2:	90 85       	ldd	r25, Z+8	; 0x08
    28b4:	0e 94 f3 45 	call	0x8be6	; 0x8be6 <_ZN10helicopter4util5Timer9stopTimerEv>
				return -1;
    28b8:	8f ef       	ldi	r24, 0xFF	; 255
    28ba:	9f ef       	ldi	r25, 0xFF	; 255
    28bc:	29 c0       	rjmp	.+82     	; 0x2910 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0xba>
			timer->startTimer();
		}
		//int counter = 0;
		
		/* Wait for data on the receive buffer */
		while ( !(UCSR0A & (1<<RXC0)) )
    28be:	00 00       	nop
    28c0:	80 ec       	ldi	r24, 0xC0	; 192
    28c2:	90 e0       	ldi	r25, 0x00	; 0
    28c4:	fc 01       	movw	r30, r24
    28c6:	80 81       	ld	r24, Z
    28c8:	80 95       	com	r24
    28ca:	88 1f       	adc	r24, r24
    28cc:	88 27       	eor	r24, r24
    28ce:	88 1f       	adc	r24, r24
    28d0:	88 23       	and	r24, r24
    28d2:	11 f7       	brne	.-60     	; 0x2898 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x42>
			}*/
		}
		
		//determine if there has been a data overrun.
		//Swallow the overrun because nothing can be done.
		hasDataOverrun = (UCSR0A & (1 << DOR0)) != 0;
    28d4:	80 ec       	ldi	r24, 0xC0	; 192
    28d6:	90 e0       	ldi	r25, 0x00	; 0
    28d8:	fc 01       	movw	r30, r24
    28da:	80 81       	ld	r24, Z
    28dc:	88 2f       	mov	r24, r24
    28de:	90 e0       	ldi	r25, 0x00	; 0
    28e0:	88 70       	andi	r24, 0x08	; 8
    28e2:	99 27       	eor	r25, r25
    28e4:	21 e0       	ldi	r18, 0x01	; 1
    28e6:	00 97       	sbiw	r24, 0x00	; 0
    28e8:	09 f4       	brne	.+2      	; 0x28ec <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x96>
    28ea:	20 e0       	ldi	r18, 0x00	; 0
    28ec:	29 83       	std	Y+1, r18	; 0x01
		
		/* Read the data from the serial port buffer */
		receivedByte = UDR0;
    28ee:	86 ec       	ldi	r24, 0xC6	; 198
    28f0:	90 e0       	ldi	r25, 0x00	; 0
    28f2:	fc 01       	movw	r30, r24
    28f4:	20 81       	ld	r18, Z
    28f6:	8c 81       	ldd	r24, Y+4	; 0x04
    28f8:	9d 81       	ldd	r25, Y+5	; 0x05
    28fa:	fc 01       	movw	r30, r24
    28fc:	20 83       	st	Z, r18
	}
	
	timer->stopTimer();
    28fe:	8a 81       	ldd	r24, Y+2	; 0x02
    2900:	9b 81       	ldd	r25, Y+3	; 0x03
    2902:	fc 01       	movw	r30, r24
    2904:	87 81       	ldd	r24, Z+7	; 0x07
    2906:	90 85       	ldd	r25, Z+8	; 0x08
    2908:	0e 94 f3 45 	call	0x8be6	; 0x8be6 <_ZN10helicopter4util5Timer9stopTimerEv>
	
	return 0;
    290c:	80 e0       	ldi	r24, 0x00	; 0
    290e:	90 e0       	ldi	r25, 0x00	; 0
    2910:	0f 90       	pop	r0
    2912:	0f 90       	pop	r0
    2914:	0f 90       	pop	r0
    2916:	0f 90       	pop	r0
    2918:	0f 90       	pop	r0
    291a:	df 91       	pop	r29
    291c:	cf 91       	pop	r28
    291e:	08 95       	ret

00002920 <_ZN10helicopter5tasks4TaskD1Ev>:
				 * @param period The number of scheduler 'ticks' to be executed before
				 * this task is ready to run.
				 */
				Task (int delay, int period);
				
				virtual ~Task(){}
    2920:	cf 93       	push	r28
    2922:	df 93       	push	r29
    2924:	1f 92       	push	r1
    2926:	1f 92       	push	r1
    2928:	cd b7       	in	r28, 0x3d	; 61
    292a:	de b7       	in	r29, 0x3e	; 62
    292c:	9a 83       	std	Y+2, r25	; 0x02
    292e:	89 83       	std	Y+1, r24	; 0x01
    2930:	89 81       	ldd	r24, Y+1	; 0x01
    2932:	9a 81       	ldd	r25, Y+2	; 0x02
    2934:	22 e8       	ldi	r18, 0x82	; 130
    2936:	32 e0       	ldi	r19, 0x02	; 2
    2938:	fc 01       	movw	r30, r24
    293a:	31 83       	std	Z+1, r19	; 0x01
    293c:	20 83       	st	Z, r18
    293e:	80 e0       	ldi	r24, 0x00	; 0
    2940:	90 e0       	ldi	r25, 0x00	; 0
    2942:	81 70       	andi	r24, 0x01	; 1
    2944:	99 27       	eor	r25, r25
    2946:	00 97       	sbiw	r24, 0x00	; 0
    2948:	21 f0       	breq	.+8      	; 0x2952 <_ZN10helicopter5tasks4TaskD1Ev+0x32>
    294a:	89 81       	ldd	r24, Y+1	; 0x01
    294c:	9a 81       	ldd	r25, Y+2	; 0x02
    294e:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    2952:	0f 90       	pop	r0
    2954:	0f 90       	pop	r0
    2956:	df 91       	pop	r29
    2958:	cf 91       	pop	r28
    295a:	08 95       	ret

0000295c <_ZN10helicopter5tasks4TaskD0Ev>:
    295c:	cf 93       	push	r28
    295e:	df 93       	push	r29
    2960:	1f 92       	push	r1
    2962:	1f 92       	push	r1
    2964:	cd b7       	in	r28, 0x3d	; 61
    2966:	de b7       	in	r29, 0x3e	; 62
    2968:	9a 83       	std	Y+2, r25	; 0x02
    296a:	89 83       	std	Y+1, r24	; 0x01
    296c:	89 81       	ldd	r24, Y+1	; 0x01
    296e:	9a 81       	ldd	r25, Y+2	; 0x02
    2970:	0e 94 90 14 	call	0x2920	; 0x2920 <_ZN10helicopter5tasks4TaskD1Ev>
    2974:	89 81       	ldd	r24, Y+1	; 0x01
    2976:	9a 81       	ldd	r25, Y+2	; 0x02
    2978:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    297c:	0f 90       	pop	r0
    297e:	0f 90       	pop	r0
    2980:	df 91       	pop	r29
    2982:	cf 91       	pop	r28
    2984:	08 95       	ret

00002986 <_ZN10helicopter5tasks12FlashLEDTaskC1Eiii>:
					
				int ledToBlink;
				
			public:

			FlashLEDTask (int delay, int period, int ledToBlink = BLUELED) : 
    2986:	cf 93       	push	r28
    2988:	df 93       	push	r29
    298a:	cd b7       	in	r28, 0x3d	; 61
    298c:	de b7       	in	r29, 0x3e	; 62
    298e:	28 97       	sbiw	r28, 0x08	; 8
    2990:	0f b6       	in	r0, 0x3f	; 63
    2992:	f8 94       	cli
    2994:	de bf       	out	0x3e, r29	; 62
    2996:	0f be       	out	0x3f, r0	; 63
    2998:	cd bf       	out	0x3d, r28	; 61
    299a:	9a 83       	std	Y+2, r25	; 0x02
    299c:	89 83       	std	Y+1, r24	; 0x01
    299e:	7c 83       	std	Y+4, r23	; 0x04
    29a0:	6b 83       	std	Y+3, r22	; 0x03
    29a2:	5e 83       	std	Y+6, r21	; 0x06
    29a4:	4d 83       	std	Y+5, r20	; 0x05
    29a6:	38 87       	std	Y+8, r19	; 0x08
    29a8:	2f 83       	std	Y+7, r18	; 0x07
				Task(delay, period),
				isOff(false),
				ledToBlink(ledToBlink)
    29aa:	89 81       	ldd	r24, Y+1	; 0x01
    29ac:	9a 81       	ldd	r25, Y+2	; 0x02
    29ae:	4d 81       	ldd	r20, Y+5	; 0x05
    29b0:	5e 81       	ldd	r21, Y+6	; 0x06
    29b2:	2b 81       	ldd	r18, Y+3	; 0x03
    29b4:	3c 81       	ldd	r19, Y+4	; 0x04
    29b6:	b9 01       	movw	r22, r18
    29b8:	0e 94 20 3f 	call	0x7e40	; 0x7e40 <_ZN10helicopter5tasks4TaskC1Eii>
    29bc:	89 81       	ldd	r24, Y+1	; 0x01
    29be:	9a 81       	ldd	r25, Y+2	; 0x02
    29c0:	28 e1       	ldi	r18, 0x18	; 24
    29c2:	32 e0       	ldi	r19, 0x02	; 2
    29c4:	fc 01       	movw	r30, r24
    29c6:	31 83       	std	Z+1, r19	; 0x01
    29c8:	20 83       	st	Z, r18
    29ca:	89 81       	ldd	r24, Y+1	; 0x01
    29cc:	9a 81       	ldd	r25, Y+2	; 0x02
    29ce:	fc 01       	movw	r30, r24
    29d0:	17 82       	std	Z+7, r1	; 0x07
    29d2:	89 81       	ldd	r24, Y+1	; 0x01
    29d4:	9a 81       	ldd	r25, Y+2	; 0x02
    29d6:	2f 81       	ldd	r18, Y+7	; 0x07
    29d8:	38 85       	ldd	r19, Y+8	; 0x08
    29da:	fc 01       	movw	r30, r24
    29dc:	31 87       	std	Z+9, r19	; 0x09
    29de:	20 87       	std	Z+8, r18	; 0x08
			{
					
			}
    29e0:	28 96       	adiw	r28, 0x08	; 8
    29e2:	0f b6       	in	r0, 0x3f	; 63
    29e4:	f8 94       	cli
    29e6:	de bf       	out	0x3e, r29	; 62
    29e8:	0f be       	out	0x3f, r0	; 63
    29ea:	cd bf       	out	0x3d, r28	; 61
    29ec:	df 91       	pop	r29
    29ee:	cf 91       	pop	r28
    29f0:	08 95       	ret

000029f2 <_ZN10helicopter5tasks12FlashLEDTask4initEv>:
	
			void init()
    29f2:	cf 93       	push	r28
    29f4:	df 93       	push	r29
    29f6:	1f 92       	push	r1
    29f8:	1f 92       	push	r1
    29fa:	cd b7       	in	r28, 0x3d	; 61
    29fc:	de b7       	in	r29, 0x3e	; 62
    29fe:	9a 83       	std	Y+2, r25	; 0x02
    2a00:	89 83       	std	Y+1, r24	; 0x01
			{
				DDRA |= (1<<ledToBlink);
    2a02:	81 e2       	ldi	r24, 0x21	; 33
    2a04:	90 e0       	ldi	r25, 0x00	; 0
    2a06:	21 e2       	ldi	r18, 0x21	; 33
    2a08:	30 e0       	ldi	r19, 0x00	; 0
    2a0a:	f9 01       	movw	r30, r18
    2a0c:	20 81       	ld	r18, Z
    2a0e:	62 2f       	mov	r22, r18
    2a10:	29 81       	ldd	r18, Y+1	; 0x01
    2a12:	3a 81       	ldd	r19, Y+2	; 0x02
    2a14:	f9 01       	movw	r30, r18
    2a16:	40 85       	ldd	r20, Z+8	; 0x08
    2a18:	51 85       	ldd	r21, Z+9	; 0x09
    2a1a:	21 e0       	ldi	r18, 0x01	; 1
    2a1c:	30 e0       	ldi	r19, 0x00	; 0
    2a1e:	04 2e       	mov	r0, r20
    2a20:	02 c0       	rjmp	.+4      	; 0x2a26 <_ZN10helicopter5tasks12FlashLEDTask4initEv+0x34>
    2a22:	22 0f       	add	r18, r18
    2a24:	33 1f       	adc	r19, r19
    2a26:	0a 94       	dec	r0
    2a28:	e2 f7       	brpl	.-8      	; 0x2a22 <_ZN10helicopter5tasks12FlashLEDTask4initEv+0x30>
    2a2a:	26 2b       	or	r18, r22
    2a2c:	fc 01       	movw	r30, r24
    2a2e:	20 83       	st	Z, r18
			}
    2a30:	0f 90       	pop	r0
    2a32:	0f 90       	pop	r0
    2a34:	df 91       	pop	r29
    2a36:	cf 91       	pop	r28
    2a38:	08 95       	ret

00002a3a <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv>:
	
			/**
				* Flashes the LED
				*/
			void runTaskImpl() {
    2a3a:	cf 93       	push	r28
    2a3c:	df 93       	push	r29
    2a3e:	1f 92       	push	r1
    2a40:	1f 92       	push	r1
    2a42:	cd b7       	in	r28, 0x3d	; 61
    2a44:	de b7       	in	r29, 0x3e	; 62
    2a46:	9a 83       	std	Y+2, r25	; 0x02
    2a48:	89 83       	std	Y+1, r24	; 0x01
				if (isOff)
    2a4a:	89 81       	ldd	r24, Y+1	; 0x01
    2a4c:	9a 81       	ldd	r25, Y+2	; 0x02
    2a4e:	fc 01       	movw	r30, r24
    2a50:	87 81       	ldd	r24, Z+7	; 0x07
    2a52:	88 23       	and	r24, r24
    2a54:	e9 f0       	breq	.+58     	; 0x2a90 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x56>
				{
					//Turn On the LED
					PORTA &= ~(1<<ledToBlink);
    2a56:	82 e2       	ldi	r24, 0x22	; 34
    2a58:	90 e0       	ldi	r25, 0x00	; 0
    2a5a:	22 e2       	ldi	r18, 0x22	; 34
    2a5c:	30 e0       	ldi	r19, 0x00	; 0
    2a5e:	f9 01       	movw	r30, r18
    2a60:	20 81       	ld	r18, Z
    2a62:	62 2f       	mov	r22, r18
    2a64:	29 81       	ldd	r18, Y+1	; 0x01
    2a66:	3a 81       	ldd	r19, Y+2	; 0x02
    2a68:	f9 01       	movw	r30, r18
    2a6a:	40 85       	ldd	r20, Z+8	; 0x08
    2a6c:	51 85       	ldd	r21, Z+9	; 0x09
    2a6e:	21 e0       	ldi	r18, 0x01	; 1
    2a70:	30 e0       	ldi	r19, 0x00	; 0
    2a72:	04 2e       	mov	r0, r20
    2a74:	02 c0       	rjmp	.+4      	; 0x2a7a <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x40>
    2a76:	22 0f       	add	r18, r18
    2a78:	33 1f       	adc	r19, r19
    2a7a:	0a 94       	dec	r0
    2a7c:	e2 f7       	brpl	.-8      	; 0x2a76 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x3c>
    2a7e:	20 95       	com	r18
    2a80:	26 23       	and	r18, r22
    2a82:	fc 01       	movw	r30, r24
    2a84:	20 83       	st	Z, r18
					isOff = false;
    2a86:	89 81       	ldd	r24, Y+1	; 0x01
    2a88:	9a 81       	ldd	r25, Y+2	; 0x02
    2a8a:	fc 01       	movw	r30, r24
    2a8c:	17 82       	std	Z+7, r1	; 0x07
    2a8e:	1c c0       	rjmp	.+56     	; 0x2ac8 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x8e>
				}else
				{
					//Turn Off the LED
					PORTA |= (1<<ledToBlink);
    2a90:	82 e2       	ldi	r24, 0x22	; 34
    2a92:	90 e0       	ldi	r25, 0x00	; 0
    2a94:	22 e2       	ldi	r18, 0x22	; 34
    2a96:	30 e0       	ldi	r19, 0x00	; 0
    2a98:	f9 01       	movw	r30, r18
    2a9a:	20 81       	ld	r18, Z
    2a9c:	62 2f       	mov	r22, r18
    2a9e:	29 81       	ldd	r18, Y+1	; 0x01
    2aa0:	3a 81       	ldd	r19, Y+2	; 0x02
    2aa2:	f9 01       	movw	r30, r18
    2aa4:	40 85       	ldd	r20, Z+8	; 0x08
    2aa6:	51 85       	ldd	r21, Z+9	; 0x09
    2aa8:	21 e0       	ldi	r18, 0x01	; 1
    2aaa:	30 e0       	ldi	r19, 0x00	; 0
    2aac:	04 2e       	mov	r0, r20
    2aae:	02 c0       	rjmp	.+4      	; 0x2ab4 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x7a>
    2ab0:	22 0f       	add	r18, r18
    2ab2:	33 1f       	adc	r19, r19
    2ab4:	0a 94       	dec	r0
    2ab6:	e2 f7       	brpl	.-8      	; 0x2ab0 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x76>
    2ab8:	26 2b       	or	r18, r22
    2aba:	fc 01       	movw	r30, r24
    2abc:	20 83       	st	Z, r18
					isOff = true;
    2abe:	89 81       	ldd	r24, Y+1	; 0x01
    2ac0:	9a 81       	ldd	r25, Y+2	; 0x02
    2ac2:	21 e0       	ldi	r18, 0x01	; 1
    2ac4:	fc 01       	movw	r30, r24
    2ac6:	27 83       	std	Z+7, r18	; 0x07
				}
			}
    2ac8:	0f 90       	pop	r0
    2aca:	0f 90       	pop	r0
    2acc:	df 91       	pop	r29
    2ace:	cf 91       	pop	r28
    2ad0:	08 95       	ret

00002ad2 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEv>:
				 * Detects if the processing was completed before the next scheduler triggered.
				 * @return True if the scheduler timer triggered again before the tasks were fully processes,
				 * False if all the tasks were finished processing (i.e. the dispatch method finished) before
				 * the timer triggered again.
				 */
				bool hasBlownFrame()
    2ad2:	cf 93       	push	r28
    2ad4:	df 93       	push	r29
    2ad6:	1f 92       	push	r1
    2ad8:	1f 92       	push	r1
    2ada:	cd b7       	in	r28, 0x3d	; 61
    2adc:	de b7       	in	r29, 0x3e	; 62
    2ade:	9a 83       	std	Y+2, r25	; 0x02
    2ae0:	89 83       	std	Y+1, r24	; 0x01
				{
					return blowFrameDetected;
    2ae2:	89 81       	ldd	r24, Y+1	; 0x01
    2ae4:	9a 81       	ldd	r25, Y+2	; 0x02
    2ae6:	fc 01       	movw	r30, r24
    2ae8:	82 8d       	ldd	r24, Z+26	; 0x1a
				}
    2aea:	0f 90       	pop	r0
    2aec:	0f 90       	pop	r0
    2aee:	df 91       	pop	r29
    2af0:	cf 91       	pop	r28
    2af2:	08 95       	ret

00002af4 <_ZN10helicopter4util5TimerC1Em9PRESCALERm>:
				 * @timeoutMilliseconds the milliseconds that should go by before the
				 * timer times out. This value must be under 1000.
				 * These variables will have to adhere to this equation:
				 * OCR = ((cpuSpeed /  timerPrescaler) / frequency)
				 */
				Timer (unsigned long cpuSpeed, PRESCALER timerPrescaler, unsigned long timeoutMilliseconds):
    2af4:	ef 92       	push	r14
    2af6:	ff 92       	push	r15
    2af8:	0f 93       	push	r16
    2afa:	1f 93       	push	r17
    2afc:	cf 93       	push	r28
    2afe:	df 93       	push	r29
    2b00:	cd b7       	in	r28, 0x3d	; 61
    2b02:	de b7       	in	r29, 0x3e	; 62
    2b04:	2c 97       	sbiw	r28, 0x0c	; 12
    2b06:	0f b6       	in	r0, 0x3f	; 63
    2b08:	f8 94       	cli
    2b0a:	de bf       	out	0x3e, r29	; 62
    2b0c:	0f be       	out	0x3f, r0	; 63
    2b0e:	cd bf       	out	0x3d, r28	; 61
    2b10:	9a 83       	std	Y+2, r25	; 0x02
    2b12:	89 83       	std	Y+1, r24	; 0x01
    2b14:	4b 83       	std	Y+3, r20	; 0x03
    2b16:	5c 83       	std	Y+4, r21	; 0x04
    2b18:	6d 83       	std	Y+5, r22	; 0x05
    2b1a:	7e 83       	std	Y+6, r23	; 0x06
    2b1c:	38 87       	std	Y+8, r19	; 0x08
    2b1e:	2f 83       	std	Y+7, r18	; 0x07
    2b20:	e9 86       	std	Y+9, r14	; 0x09
    2b22:	fa 86       	std	Y+10, r15	; 0x0a
    2b24:	0b 87       	std	Y+11, r16	; 0x0b
    2b26:	1c 87       	std	Y+12, r17	; 0x0c
					cpuSpeed(cpuSpeed), timerPrescaler(timerPrescaler), timeoutMilliseconds(timeoutMilliseconds)
    2b28:	29 81       	ldd	r18, Y+1	; 0x01
    2b2a:	3a 81       	ldd	r19, Y+2	; 0x02
    2b2c:	8b 81       	ldd	r24, Y+3	; 0x03
    2b2e:	9c 81       	ldd	r25, Y+4	; 0x04
    2b30:	ad 81       	ldd	r26, Y+5	; 0x05
    2b32:	be 81       	ldd	r27, Y+6	; 0x06
    2b34:	f9 01       	movw	r30, r18
    2b36:	80 83       	st	Z, r24
    2b38:	91 83       	std	Z+1, r25	; 0x01
    2b3a:	a2 83       	std	Z+2, r26	; 0x02
    2b3c:	b3 83       	std	Z+3, r27	; 0x03
    2b3e:	89 81       	ldd	r24, Y+1	; 0x01
    2b40:	9a 81       	ldd	r25, Y+2	; 0x02
    2b42:	2f 81       	ldd	r18, Y+7	; 0x07
    2b44:	38 85       	ldd	r19, Y+8	; 0x08
    2b46:	fc 01       	movw	r30, r24
    2b48:	35 83       	std	Z+5, r19	; 0x05
    2b4a:	24 83       	std	Z+4, r18	; 0x04
    2b4c:	29 85       	ldd	r18, Y+9	; 0x09
    2b4e:	3a 85       	ldd	r19, Y+10	; 0x0a
    2b50:	89 81       	ldd	r24, Y+1	; 0x01
    2b52:	9a 81       	ldd	r25, Y+2	; 0x02
    2b54:	fc 01       	movw	r30, r24
    2b56:	37 83       	std	Z+7, r19	; 0x07
    2b58:	26 83       	std	Z+6, r18	; 0x06
					{
						
					}
    2b5a:	2c 96       	adiw	r28, 0x0c	; 12
    2b5c:	0f b6       	in	r0, 0x3f	; 63
    2b5e:	f8 94       	cli
    2b60:	de bf       	out	0x3e, r29	; 62
    2b62:	0f be       	out	0x3f, r0	; 63
    2b64:	cd bf       	out	0x3d, r28	; 61
    2b66:	df 91       	pop	r29
    2b68:	cf 91       	pop	r28
    2b6a:	1f 91       	pop	r17
    2b6c:	0f 91       	pop	r16
    2b6e:	ff 90       	pop	r15
    2b70:	ef 90       	pop	r14
    2b72:	08 95       	ret

00002b74 <_ZN10helicopter7drivers12SerialDriverC1EmNS1_8UartPortEPNS_4util5TimerEbb>:
				 * only used when enableTimeout = true.
				 * @param enableTimeout Bool indicating if the system should timeout
				 * while waiting to send or receive data. True by default so that the
				 * driver will timeout if it can't send or receive data after a short timeout period.
				 */		
				SerialDriver(
    2b74:	cf 92       	push	r12
    2b76:	ef 92       	push	r14
    2b78:	0f 93       	push	r16
    2b7a:	1f 93       	push	r17
    2b7c:	cf 93       	push	r28
    2b7e:	df 93       	push	r29
    2b80:	cd b7       	in	r28, 0x3d	; 61
    2b82:	de b7       	in	r29, 0x3e	; 62
    2b84:	2b 97       	sbiw	r28, 0x0b	; 11
    2b86:	0f b6       	in	r0, 0x3f	; 63
    2b88:	f8 94       	cli
    2b8a:	de bf       	out	0x3e, r29	; 62
    2b8c:	0f be       	out	0x3f, r0	; 63
    2b8e:	cd bf       	out	0x3d, r28	; 61
    2b90:	9a 83       	std	Y+2, r25	; 0x02
    2b92:	89 83       	std	Y+1, r24	; 0x01
    2b94:	4b 83       	std	Y+3, r20	; 0x03
    2b96:	5c 83       	std	Y+4, r21	; 0x04
    2b98:	6d 83       	std	Y+5, r22	; 0x05
    2b9a:	7e 83       	std	Y+6, r23	; 0x06
    2b9c:	2f 83       	std	Y+7, r18	; 0x07
    2b9e:	19 87       	std	Y+9, r17	; 0x09
    2ba0:	08 87       	std	Y+8, r16	; 0x08
    2ba2:	ea 86       	std	Y+10, r14	; 0x0a
    2ba4:	cb 86       	std	Y+11, r12	; 0x0b
					bool useDoubleSpeedMode = false) :
				baudRate(baudRate),
				uartPort(uartPort),
				timer(timer),
				isTimeoutEnabled(enableTimeout),
				useDoubleSpeedMode(useDoubleSpeedMode)
    2ba6:	89 81       	ldd	r24, Y+1	; 0x01
    2ba8:	9a 81       	ldd	r25, Y+2	; 0x02
    2baa:	2a e0       	ldi	r18, 0x0A	; 10
    2bac:	32 e0       	ldi	r19, 0x02	; 2
    2bae:	fc 01       	movw	r30, r24
    2bb0:	31 83       	std	Z+1, r19	; 0x01
    2bb2:	20 83       	st	Z, r18
    2bb4:	29 81       	ldd	r18, Y+1	; 0x01
    2bb6:	3a 81       	ldd	r19, Y+2	; 0x02
    2bb8:	8b 81       	ldd	r24, Y+3	; 0x03
    2bba:	9c 81       	ldd	r25, Y+4	; 0x04
    2bbc:	ad 81       	ldd	r26, Y+5	; 0x05
    2bbe:	be 81       	ldd	r27, Y+6	; 0x06
    2bc0:	f9 01       	movw	r30, r18
    2bc2:	82 83       	std	Z+2, r24	; 0x02
    2bc4:	93 83       	std	Z+3, r25	; 0x03
    2bc6:	a4 83       	std	Z+4, r26	; 0x04
    2bc8:	b5 83       	std	Z+5, r27	; 0x05
    2bca:	89 81       	ldd	r24, Y+1	; 0x01
    2bcc:	9a 81       	ldd	r25, Y+2	; 0x02
    2bce:	2f 81       	ldd	r18, Y+7	; 0x07
    2bd0:	fc 01       	movw	r30, r24
    2bd2:	26 83       	std	Z+6, r18	; 0x06
    2bd4:	89 81       	ldd	r24, Y+1	; 0x01
    2bd6:	9a 81       	ldd	r25, Y+2	; 0x02
    2bd8:	28 85       	ldd	r18, Y+8	; 0x08
    2bda:	39 85       	ldd	r19, Y+9	; 0x09
    2bdc:	fc 01       	movw	r30, r24
    2bde:	30 87       	std	Z+8, r19	; 0x08
    2be0:	27 83       	std	Z+7, r18	; 0x07
    2be2:	89 81       	ldd	r24, Y+1	; 0x01
    2be4:	9a 81       	ldd	r25, Y+2	; 0x02
    2be6:	2a 85       	ldd	r18, Y+10	; 0x0a
    2be8:	fc 01       	movw	r30, r24
    2bea:	21 87       	std	Z+9, r18	; 0x09
    2bec:	89 81       	ldd	r24, Y+1	; 0x01
    2bee:	9a 81       	ldd	r25, Y+2	; 0x02
    2bf0:	2b 85       	ldd	r18, Y+11	; 0x0b
    2bf2:	fc 01       	movw	r30, r24
    2bf4:	22 87       	std	Z+10, r18	; 0x0a
				{
					
				}
    2bf6:	2b 96       	adiw	r28, 0x0b	; 11
    2bf8:	0f b6       	in	r0, 0x3f	; 63
    2bfa:	f8 94       	cli
    2bfc:	de bf       	out	0x3e, r29	; 62
    2bfe:	0f be       	out	0x3f, r0	; 63
    2c00:	cd bf       	out	0x3d, r28	; 61
    2c02:	df 91       	pop	r29
    2c04:	cf 91       	pop	r28
    2c06:	1f 91       	pop	r17
    2c08:	0f 91       	pop	r16
    2c0a:	ef 90       	pop	r14
    2c0c:	cf 90       	pop	r12
    2c0e:	08 95       	ret

00002c10 <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverE>:
				 * at the same time interval (i.e. 20 milliseconds) for both transmitting a byte as well
				 * as receiving a byte.
				 * @param serialDriver the driver used to communicate with the serial port
				 * which is used to communicate with the Ground Control Station.
				 */
				GroundControlStationInterface(SerialDriver *serialDriver):
    2c10:	cf 93       	push	r28
    2c12:	df 93       	push	r29
    2c14:	00 d0       	rcall	.+0      	; 0x2c16 <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverE+0x6>
    2c16:	1f 92       	push	r1
    2c18:	cd b7       	in	r28, 0x3d	; 61
    2c1a:	de b7       	in	r29, 0x3e	; 62
    2c1c:	9a 83       	std	Y+2, r25	; 0x02
    2c1e:	89 83       	std	Y+1, r24	; 0x01
    2c20:	7c 83       	std	Y+4, r23	; 0x04
    2c22:	6b 83       	std	Y+3, r22	; 0x03
					serialDriver(serialDriver)
    2c24:	89 81       	ldd	r24, Y+1	; 0x01
    2c26:	9a 81       	ldd	r25, Y+2	; 0x02
    2c28:	2b 81       	ldd	r18, Y+3	; 0x03
    2c2a:	3c 81       	ldd	r19, Y+4	; 0x04
    2c2c:	fc 01       	movw	r30, r24
    2c2e:	31 83       	std	Z+1, r19	; 0x01
    2c30:	20 83       	st	Z, r18
					{}
    2c32:	0f 90       	pop	r0
    2c34:	0f 90       	pop	r0
    2c36:	0f 90       	pop	r0
    2c38:	0f 90       	pop	r0
    2c3a:	df 91       	pop	r29
    2c3c:	cf 91       	pop	r28
    2c3e:	08 95       	ret

00002c40 <_ZN10helicopter5model11SystemModelC1Ev>:
			
			public:
			
			float EcefToLocalNEDRotationMatrix[3][3];
			
			SystemModel():
    2c40:	cf 93       	push	r28
    2c42:	df 93       	push	r29
    2c44:	1f 92       	push	r1
    2c46:	1f 92       	push	r1
    2c48:	cd b7       	in	r28, 0x3d	; 61
    2c4a:	de b7       	in	r29, 0x3e	; 62
    2c4c:	9a 83       	std	Y+2, r25	; 0x02
    2c4e:	89 83       	std	Y+1, r24	; 0x01
				checksumErrors(0),
				numOfFramesBlown(0),
				
				initialXPositionEcef(0),
				initialYPositionEcef(0),
				initialZPositionEcef(0)
    2c50:	89 81       	ldd	r24, Y+1	; 0x01
    2c52:	9a 81       	ldd	r25, Y+2	; 0x02
    2c54:	fc 01       	movw	r30, r24
    2c56:	10 82       	st	Z, r1
    2c58:	11 82       	std	Z+1, r1	; 0x01
    2c5a:	12 82       	std	Z+2, r1	; 0x02
    2c5c:	13 82       	std	Z+3, r1	; 0x03
    2c5e:	89 81       	ldd	r24, Y+1	; 0x01
    2c60:	9a 81       	ldd	r25, Y+2	; 0x02
    2c62:	fc 01       	movw	r30, r24
    2c64:	14 82       	std	Z+4, r1	; 0x04
    2c66:	15 82       	std	Z+5, r1	; 0x05
    2c68:	16 82       	std	Z+6, r1	; 0x06
    2c6a:	17 82       	std	Z+7, r1	; 0x07
    2c6c:	89 81       	ldd	r24, Y+1	; 0x01
    2c6e:	9a 81       	ldd	r25, Y+2	; 0x02
    2c70:	fc 01       	movw	r30, r24
    2c72:	10 86       	std	Z+8, r1	; 0x08
    2c74:	11 86       	std	Z+9, r1	; 0x09
    2c76:	12 86       	std	Z+10, r1	; 0x0a
    2c78:	13 86       	std	Z+11, r1	; 0x0b
    2c7a:	89 81       	ldd	r24, Y+1	; 0x01
    2c7c:	9a 81       	ldd	r25, Y+2	; 0x02
    2c7e:	fc 01       	movw	r30, r24
    2c80:	14 86       	std	Z+12, r1	; 0x0c
    2c82:	15 86       	std	Z+13, r1	; 0x0d
    2c84:	16 86       	std	Z+14, r1	; 0x0e
    2c86:	17 86       	std	Z+15, r1	; 0x0f
    2c88:	89 81       	ldd	r24, Y+1	; 0x01
    2c8a:	9a 81       	ldd	r25, Y+2	; 0x02
    2c8c:	fc 01       	movw	r30, r24
    2c8e:	10 8a       	std	Z+16, r1	; 0x10
    2c90:	11 8a       	std	Z+17, r1	; 0x11
    2c92:	12 8a       	std	Z+18, r1	; 0x12
    2c94:	13 8a       	std	Z+19, r1	; 0x13
    2c96:	89 81       	ldd	r24, Y+1	; 0x01
    2c98:	9a 81       	ldd	r25, Y+2	; 0x02
    2c9a:	fc 01       	movw	r30, r24
    2c9c:	14 8a       	std	Z+20, r1	; 0x14
    2c9e:	15 8a       	std	Z+21, r1	; 0x15
    2ca0:	16 8a       	std	Z+22, r1	; 0x16
    2ca2:	17 8a       	std	Z+23, r1	; 0x17
    2ca4:	89 81       	ldd	r24, Y+1	; 0x01
    2ca6:	9a 81       	ldd	r25, Y+2	; 0x02
    2ca8:	fc 01       	movw	r30, r24
    2caa:	10 8e       	std	Z+24, r1	; 0x18
    2cac:	11 8e       	std	Z+25, r1	; 0x19
    2cae:	12 8e       	std	Z+26, r1	; 0x1a
    2cb0:	13 8e       	std	Z+27, r1	; 0x1b
    2cb2:	89 81       	ldd	r24, Y+1	; 0x01
    2cb4:	9a 81       	ldd	r25, Y+2	; 0x02
    2cb6:	fc 01       	movw	r30, r24
    2cb8:	14 8e       	std	Z+28, r1	; 0x1c
    2cba:	15 8e       	std	Z+29, r1	; 0x1d
    2cbc:	16 8e       	std	Z+30, r1	; 0x1e
    2cbe:	17 8e       	std	Z+31, r1	; 0x1f
    2cc0:	89 81       	ldd	r24, Y+1	; 0x01
    2cc2:	9a 81       	ldd	r25, Y+2	; 0x02
    2cc4:	fc 01       	movw	r30, r24
    2cc6:	10 a2       	std	Z+32, r1	; 0x20
    2cc8:	11 a2       	std	Z+33, r1	; 0x21
    2cca:	12 a2       	std	Z+34, r1	; 0x22
    2ccc:	13 a2       	std	Z+35, r1	; 0x23
    2cce:	89 81       	ldd	r24, Y+1	; 0x01
    2cd0:	9a 81       	ldd	r25, Y+2	; 0x02
    2cd2:	fc 01       	movw	r30, r24
    2cd4:	14 a2       	std	Z+36, r1	; 0x24
    2cd6:	15 a2       	std	Z+37, r1	; 0x25
    2cd8:	16 a2       	std	Z+38, r1	; 0x26
    2cda:	17 a2       	std	Z+39, r1	; 0x27
    2cdc:	89 81       	ldd	r24, Y+1	; 0x01
    2cde:	9a 81       	ldd	r25, Y+2	; 0x02
    2ce0:	fc 01       	movw	r30, r24
    2ce2:	10 a6       	std	Z+40, r1	; 0x28
    2ce4:	11 a6       	std	Z+41, r1	; 0x29
    2ce6:	12 a6       	std	Z+42, r1	; 0x2a
    2ce8:	13 a6       	std	Z+43, r1	; 0x2b
    2cea:	89 81       	ldd	r24, Y+1	; 0x01
    2cec:	9a 81       	ldd	r25, Y+2	; 0x02
    2cee:	fc 01       	movw	r30, r24
    2cf0:	14 a6       	std	Z+44, r1	; 0x2c
    2cf2:	15 a6       	std	Z+45, r1	; 0x2d
    2cf4:	16 a6       	std	Z+46, r1	; 0x2e
    2cf6:	17 a6       	std	Z+47, r1	; 0x2f
    2cf8:	89 81       	ldd	r24, Y+1	; 0x01
    2cfa:	9a 81       	ldd	r25, Y+2	; 0x02
    2cfc:	fc 01       	movw	r30, r24
    2cfe:	10 aa       	std	Z+48, r1	; 0x30
    2d00:	11 aa       	std	Z+49, r1	; 0x31
    2d02:	12 aa       	std	Z+50, r1	; 0x32
    2d04:	13 aa       	std	Z+51, r1	; 0x33
    2d06:	89 81       	ldd	r24, Y+1	; 0x01
    2d08:	9a 81       	ldd	r25, Y+2	; 0x02
    2d0a:	fc 01       	movw	r30, r24
    2d0c:	14 aa       	std	Z+52, r1	; 0x34
    2d0e:	15 aa       	std	Z+53, r1	; 0x35
    2d10:	16 aa       	std	Z+54, r1	; 0x36
    2d12:	17 aa       	std	Z+55, r1	; 0x37
    2d14:	89 81       	ldd	r24, Y+1	; 0x01
    2d16:	9a 81       	ldd	r25, Y+2	; 0x02
    2d18:	fc 01       	movw	r30, r24
    2d1a:	10 ae       	std	Z+56, r1	; 0x38
    2d1c:	11 ae       	std	Z+57, r1	; 0x39
    2d1e:	12 ae       	std	Z+58, r1	; 0x3a
    2d20:	13 ae       	std	Z+59, r1	; 0x3b
    2d22:	89 81       	ldd	r24, Y+1	; 0x01
    2d24:	9a 81       	ldd	r25, Y+2	; 0x02
    2d26:	fc 01       	movw	r30, r24
    2d28:	14 ae       	std	Z+60, r1	; 0x3c
    2d2a:	15 ae       	std	Z+61, r1	; 0x3d
    2d2c:	16 ae       	std	Z+62, r1	; 0x3e
    2d2e:	17 ae       	std	Z+63, r1	; 0x3f
    2d30:	89 81       	ldd	r24, Y+1	; 0x01
    2d32:	9a 81       	ldd	r25, Y+2	; 0x02
    2d34:	80 5c       	subi	r24, 0xC0	; 192
    2d36:	9f 4f       	sbci	r25, 0xFF	; 255
    2d38:	fc 01       	movw	r30, r24
    2d3a:	10 82       	st	Z, r1
    2d3c:	11 82       	std	Z+1, r1	; 0x01
    2d3e:	12 82       	std	Z+2, r1	; 0x02
    2d40:	13 82       	std	Z+3, r1	; 0x03
    2d42:	89 81       	ldd	r24, Y+1	; 0x01
    2d44:	9a 81       	ldd	r25, Y+2	; 0x02
    2d46:	8c 5b       	subi	r24, 0xBC	; 188
    2d48:	9f 4f       	sbci	r25, 0xFF	; 255
    2d4a:	fc 01       	movw	r30, r24
    2d4c:	10 82       	st	Z, r1
    2d4e:	11 82       	std	Z+1, r1	; 0x01
    2d50:	12 82       	std	Z+2, r1	; 0x02
    2d52:	13 82       	std	Z+3, r1	; 0x03
    2d54:	89 81       	ldd	r24, Y+1	; 0x01
    2d56:	9a 81       	ldd	r25, Y+2	; 0x02
    2d58:	88 5b       	subi	r24, 0xB8	; 184
    2d5a:	9f 4f       	sbci	r25, 0xFF	; 255
    2d5c:	fc 01       	movw	r30, r24
    2d5e:	10 82       	st	Z, r1
    2d60:	11 82       	std	Z+1, r1	; 0x01
    2d62:	12 82       	std	Z+2, r1	; 0x02
    2d64:	13 82       	std	Z+3, r1	; 0x03
    2d66:	89 81       	ldd	r24, Y+1	; 0x01
    2d68:	9a 81       	ldd	r25, Y+2	; 0x02
    2d6a:	84 5b       	subi	r24, 0xB4	; 180
    2d6c:	9f 4f       	sbci	r25, 0xFF	; 255
    2d6e:	fc 01       	movw	r30, r24
    2d70:	10 82       	st	Z, r1
    2d72:	11 82       	std	Z+1, r1	; 0x01
    2d74:	12 82       	std	Z+2, r1	; 0x02
    2d76:	13 82       	std	Z+3, r1	; 0x03
    2d78:	89 81       	ldd	r24, Y+1	; 0x01
    2d7a:	9a 81       	ldd	r25, Y+2	; 0x02
    2d7c:	80 5b       	subi	r24, 0xB0	; 176
    2d7e:	9f 4f       	sbci	r25, 0xFF	; 255
    2d80:	fc 01       	movw	r30, r24
    2d82:	10 82       	st	Z, r1
    2d84:	11 82       	std	Z+1, r1	; 0x01
    2d86:	12 82       	std	Z+2, r1	; 0x02
    2d88:	13 82       	std	Z+3, r1	; 0x03
    2d8a:	89 81       	ldd	r24, Y+1	; 0x01
    2d8c:	9a 81       	ldd	r25, Y+2	; 0x02
    2d8e:	8c 5a       	subi	r24, 0xAC	; 172
    2d90:	9f 4f       	sbci	r25, 0xFF	; 255
    2d92:	fc 01       	movw	r30, r24
    2d94:	10 82       	st	Z, r1
    2d96:	11 82       	std	Z+1, r1	; 0x01
    2d98:	12 82       	std	Z+2, r1	; 0x02
    2d9a:	13 82       	std	Z+3, r1	; 0x03
    2d9c:	89 81       	ldd	r24, Y+1	; 0x01
    2d9e:	9a 81       	ldd	r25, Y+2	; 0x02
    2da0:	88 5a       	subi	r24, 0xA8	; 168
    2da2:	9f 4f       	sbci	r25, 0xFF	; 255
    2da4:	fc 01       	movw	r30, r24
    2da6:	10 82       	st	Z, r1
    2da8:	11 82       	std	Z+1, r1	; 0x01
    2daa:	12 82       	std	Z+2, r1	; 0x02
    2dac:	13 82       	std	Z+3, r1	; 0x03
    2dae:	89 81       	ldd	r24, Y+1	; 0x01
    2db0:	9a 81       	ldd	r25, Y+2	; 0x02
    2db2:	84 5a       	subi	r24, 0xA4	; 164
    2db4:	9f 4f       	sbci	r25, 0xFF	; 255
    2db6:	fc 01       	movw	r30, r24
    2db8:	10 82       	st	Z, r1
    2dba:	11 82       	std	Z+1, r1	; 0x01
    2dbc:	12 82       	std	Z+2, r1	; 0x02
    2dbe:	13 82       	std	Z+3, r1	; 0x03
    2dc0:	89 81       	ldd	r24, Y+1	; 0x01
    2dc2:	9a 81       	ldd	r25, Y+2	; 0x02
    2dc4:	80 5a       	subi	r24, 0xA0	; 160
    2dc6:	9f 4f       	sbci	r25, 0xFF	; 255
    2dc8:	fc 01       	movw	r30, r24
    2dca:	10 82       	st	Z, r1
    2dcc:	11 82       	std	Z+1, r1	; 0x01
    2dce:	12 82       	std	Z+2, r1	; 0x02
    2dd0:	13 82       	std	Z+3, r1	; 0x03
    2dd2:	89 81       	ldd	r24, Y+1	; 0x01
    2dd4:	9a 81       	ldd	r25, Y+2	; 0x02
    2dd6:	8c 59       	subi	r24, 0x9C	; 156
    2dd8:	9f 4f       	sbci	r25, 0xFF	; 255
    2dda:	fc 01       	movw	r30, r24
    2ddc:	10 82       	st	Z, r1
    2dde:	11 82       	std	Z+1, r1	; 0x01
    2de0:	12 82       	std	Z+2, r1	; 0x02
    2de2:	13 82       	std	Z+3, r1	; 0x03
    2de4:	89 81       	ldd	r24, Y+1	; 0x01
    2de6:	9a 81       	ldd	r25, Y+2	; 0x02
    2de8:	88 59       	subi	r24, 0x98	; 152
    2dea:	9f 4f       	sbci	r25, 0xFF	; 255
    2dec:	fc 01       	movw	r30, r24
    2dee:	10 82       	st	Z, r1
    2df0:	11 82       	std	Z+1, r1	; 0x01
    2df2:	12 82       	std	Z+2, r1	; 0x02
    2df4:	13 82       	std	Z+3, r1	; 0x03
    2df6:	89 81       	ldd	r24, Y+1	; 0x01
    2df8:	9a 81       	ldd	r25, Y+2	; 0x02
    2dfa:	84 59       	subi	r24, 0x94	; 148
    2dfc:	9f 4f       	sbci	r25, 0xFF	; 255
    2dfe:	fc 01       	movw	r30, r24
    2e00:	10 82       	st	Z, r1
    2e02:	11 82       	std	Z+1, r1	; 0x01
    2e04:	12 82       	std	Z+2, r1	; 0x02
    2e06:	13 82       	std	Z+3, r1	; 0x03
    2e08:	89 81       	ldd	r24, Y+1	; 0x01
    2e0a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e0c:	80 59       	subi	r24, 0x90	; 144
    2e0e:	9f 4f       	sbci	r25, 0xFF	; 255
    2e10:	fc 01       	movw	r30, r24
    2e12:	10 82       	st	Z, r1
    2e14:	11 82       	std	Z+1, r1	; 0x01
    2e16:	12 82       	std	Z+2, r1	; 0x02
    2e18:	13 82       	std	Z+3, r1	; 0x03
    2e1a:	89 81       	ldd	r24, Y+1	; 0x01
    2e1c:	9a 81       	ldd	r25, Y+2	; 0x02
    2e1e:	8c 58       	subi	r24, 0x8C	; 140
    2e20:	9f 4f       	sbci	r25, 0xFF	; 255
    2e22:	fc 01       	movw	r30, r24
    2e24:	10 82       	st	Z, r1
    2e26:	11 82       	std	Z+1, r1	; 0x01
    2e28:	12 82       	std	Z+2, r1	; 0x02
    2e2a:	13 82       	std	Z+3, r1	; 0x03
    2e2c:	89 81       	ldd	r24, Y+1	; 0x01
    2e2e:	9a 81       	ldd	r25, Y+2	; 0x02
    2e30:	88 58       	subi	r24, 0x88	; 136
    2e32:	9f 4f       	sbci	r25, 0xFF	; 255
    2e34:	fc 01       	movw	r30, r24
    2e36:	10 82       	st	Z, r1
    2e38:	11 82       	std	Z+1, r1	; 0x01
    2e3a:	12 82       	std	Z+2, r1	; 0x02
    2e3c:	13 82       	std	Z+3, r1	; 0x03
    2e3e:	89 81       	ldd	r24, Y+1	; 0x01
    2e40:	9a 81       	ldd	r25, Y+2	; 0x02
    2e42:	84 58       	subi	r24, 0x84	; 132
    2e44:	9f 4f       	sbci	r25, 0xFF	; 255
    2e46:	fc 01       	movw	r30, r24
    2e48:	10 82       	st	Z, r1
    2e4a:	11 82       	std	Z+1, r1	; 0x01
    2e4c:	12 82       	std	Z+2, r1	; 0x02
    2e4e:	13 82       	std	Z+3, r1	; 0x03
    2e50:	89 81       	ldd	r24, Y+1	; 0x01
    2e52:	9a 81       	ldd	r25, Y+2	; 0x02
    2e54:	80 58       	subi	r24, 0x80	; 128
    2e56:	9f 4f       	sbci	r25, 0xFF	; 255
    2e58:	fc 01       	movw	r30, r24
    2e5a:	10 82       	st	Z, r1
    2e5c:	11 82       	std	Z+1, r1	; 0x01
    2e5e:	12 82       	std	Z+2, r1	; 0x02
    2e60:	13 82       	std	Z+3, r1	; 0x03
    2e62:	89 81       	ldd	r24, Y+1	; 0x01
    2e64:	9a 81       	ldd	r25, Y+2	; 0x02
    2e66:	8c 57       	subi	r24, 0x7C	; 124
    2e68:	9f 4f       	sbci	r25, 0xFF	; 255
    2e6a:	fc 01       	movw	r30, r24
    2e6c:	10 82       	st	Z, r1
    2e6e:	11 82       	std	Z+1, r1	; 0x01
    2e70:	12 82       	std	Z+2, r1	; 0x02
    2e72:	13 82       	std	Z+3, r1	; 0x03
    2e74:	89 81       	ldd	r24, Y+1	; 0x01
    2e76:	9a 81       	ldd	r25, Y+2	; 0x02
    2e78:	88 57       	subi	r24, 0x78	; 120
    2e7a:	9f 4f       	sbci	r25, 0xFF	; 255
    2e7c:	fc 01       	movw	r30, r24
    2e7e:	10 82       	st	Z, r1
    2e80:	11 82       	std	Z+1, r1	; 0x01
    2e82:	12 82       	std	Z+2, r1	; 0x02
    2e84:	13 82       	std	Z+3, r1	; 0x03
    2e86:	89 81       	ldd	r24, Y+1	; 0x01
    2e88:	9a 81       	ldd	r25, Y+2	; 0x02
    2e8a:	84 57       	subi	r24, 0x74	; 116
    2e8c:	9f 4f       	sbci	r25, 0xFF	; 255
    2e8e:	fc 01       	movw	r30, r24
    2e90:	10 82       	st	Z, r1
    2e92:	11 82       	std	Z+1, r1	; 0x01
    2e94:	12 82       	std	Z+2, r1	; 0x02
    2e96:	13 82       	std	Z+3, r1	; 0x03
    2e98:	89 81       	ldd	r24, Y+1	; 0x01
    2e9a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e9c:	80 57       	subi	r24, 0x70	; 112
    2e9e:	9f 4f       	sbci	r25, 0xFF	; 255
    2ea0:	fc 01       	movw	r30, r24
    2ea2:	10 82       	st	Z, r1
    2ea4:	11 82       	std	Z+1, r1	; 0x01
    2ea6:	12 82       	std	Z+2, r1	; 0x02
    2ea8:	13 82       	std	Z+3, r1	; 0x03
    2eaa:	89 81       	ldd	r24, Y+1	; 0x01
    2eac:	9a 81       	ldd	r25, Y+2	; 0x02
    2eae:	8c 56       	subi	r24, 0x6C	; 108
    2eb0:	9f 4f       	sbci	r25, 0xFF	; 255
    2eb2:	fc 01       	movw	r30, r24
    2eb4:	10 82       	st	Z, r1
    2eb6:	11 82       	std	Z+1, r1	; 0x01
    2eb8:	12 82       	std	Z+2, r1	; 0x02
    2eba:	13 82       	std	Z+3, r1	; 0x03
    2ebc:	89 81       	ldd	r24, Y+1	; 0x01
    2ebe:	9a 81       	ldd	r25, Y+2	; 0x02
    2ec0:	88 56       	subi	r24, 0x68	; 104
    2ec2:	9f 4f       	sbci	r25, 0xFF	; 255
    2ec4:	fc 01       	movw	r30, r24
    2ec6:	10 82       	st	Z, r1
    2ec8:	11 82       	std	Z+1, r1	; 0x01
    2eca:	12 82       	std	Z+2, r1	; 0x02
    2ecc:	13 82       	std	Z+3, r1	; 0x03
    2ece:	89 81       	ldd	r24, Y+1	; 0x01
    2ed0:	9a 81       	ldd	r25, Y+2	; 0x02
    2ed2:	84 56       	subi	r24, 0x64	; 100
    2ed4:	9f 4f       	sbci	r25, 0xFF	; 255
    2ed6:	fc 01       	movw	r30, r24
    2ed8:	10 82       	st	Z, r1
    2eda:	11 82       	std	Z+1, r1	; 0x01
    2edc:	12 82       	std	Z+2, r1	; 0x02
    2ede:	13 82       	std	Z+3, r1	; 0x03
    2ee0:	89 81       	ldd	r24, Y+1	; 0x01
    2ee2:	9a 81       	ldd	r25, Y+2	; 0x02
    2ee4:	80 56       	subi	r24, 0x60	; 96
    2ee6:	9f 4f       	sbci	r25, 0xFF	; 255
    2ee8:	fc 01       	movw	r30, r24
    2eea:	10 82       	st	Z, r1
    2eec:	11 82       	std	Z+1, r1	; 0x01
    2eee:	12 82       	std	Z+2, r1	; 0x02
    2ef0:	13 82       	std	Z+3, r1	; 0x03
    2ef2:	89 81       	ldd	r24, Y+1	; 0x01
    2ef4:	9a 81       	ldd	r25, Y+2	; 0x02
    2ef6:	8c 55       	subi	r24, 0x5C	; 92
    2ef8:	9f 4f       	sbci	r25, 0xFF	; 255
    2efa:	fc 01       	movw	r30, r24
    2efc:	10 82       	st	Z, r1
    2efe:	11 82       	std	Z+1, r1	; 0x01
    2f00:	12 82       	std	Z+2, r1	; 0x02
    2f02:	13 82       	std	Z+3, r1	; 0x03
    2f04:	89 81       	ldd	r24, Y+1	; 0x01
    2f06:	9a 81       	ldd	r25, Y+2	; 0x02
    2f08:	88 55       	subi	r24, 0x58	; 88
    2f0a:	9f 4f       	sbci	r25, 0xFF	; 255
    2f0c:	fc 01       	movw	r30, r24
    2f0e:	10 82       	st	Z, r1
    2f10:	11 82       	std	Z+1, r1	; 0x01
    2f12:	12 82       	std	Z+2, r1	; 0x02
    2f14:	13 82       	std	Z+3, r1	; 0x03
    2f16:	89 81       	ldd	r24, Y+1	; 0x01
    2f18:	9a 81       	ldd	r25, Y+2	; 0x02
    2f1a:	84 55       	subi	r24, 0x54	; 84
    2f1c:	9f 4f       	sbci	r25, 0xFF	; 255
    2f1e:	fc 01       	movw	r30, r24
    2f20:	10 82       	st	Z, r1
    2f22:	11 82       	std	Z+1, r1	; 0x01
    2f24:	12 82       	std	Z+2, r1	; 0x02
    2f26:	13 82       	std	Z+3, r1	; 0x03
    2f28:	89 81       	ldd	r24, Y+1	; 0x01
    2f2a:	9a 81       	ldd	r25, Y+2	; 0x02
    2f2c:	80 55       	subi	r24, 0x50	; 80
    2f2e:	9f 4f       	sbci	r25, 0xFF	; 255
    2f30:	fc 01       	movw	r30, r24
    2f32:	10 82       	st	Z, r1
    2f34:	11 82       	std	Z+1, r1	; 0x01
    2f36:	12 82       	std	Z+2, r1	; 0x02
    2f38:	13 82       	std	Z+3, r1	; 0x03
    2f3a:	89 81       	ldd	r24, Y+1	; 0x01
    2f3c:	9a 81       	ldd	r25, Y+2	; 0x02
    2f3e:	8c 54       	subi	r24, 0x4C	; 76
    2f40:	9f 4f       	sbci	r25, 0xFF	; 255
    2f42:	fc 01       	movw	r30, r24
    2f44:	10 82       	st	Z, r1
    2f46:	11 82       	std	Z+1, r1	; 0x01
    2f48:	12 82       	std	Z+2, r1	; 0x02
    2f4a:	13 82       	std	Z+3, r1	; 0x03
    2f4c:	89 81       	ldd	r24, Y+1	; 0x01
    2f4e:	9a 81       	ldd	r25, Y+2	; 0x02
    2f50:	88 54       	subi	r24, 0x48	; 72
    2f52:	9f 4f       	sbci	r25, 0xFF	; 255
    2f54:	fc 01       	movw	r30, r24
    2f56:	10 82       	st	Z, r1
    2f58:	11 82       	std	Z+1, r1	; 0x01
    2f5a:	12 82       	std	Z+2, r1	; 0x02
    2f5c:	13 82       	std	Z+3, r1	; 0x03
    2f5e:	89 81       	ldd	r24, Y+1	; 0x01
    2f60:	9a 81       	ldd	r25, Y+2	; 0x02
    2f62:	84 54       	subi	r24, 0x44	; 68
    2f64:	9f 4f       	sbci	r25, 0xFF	; 255
    2f66:	fc 01       	movw	r30, r24
    2f68:	10 82       	st	Z, r1
    2f6a:	11 82       	std	Z+1, r1	; 0x01
    2f6c:	12 82       	std	Z+2, r1	; 0x02
    2f6e:	13 82       	std	Z+3, r1	; 0x03
    2f70:	89 81       	ldd	r24, Y+1	; 0x01
    2f72:	9a 81       	ldd	r25, Y+2	; 0x02
    2f74:	80 54       	subi	r24, 0x40	; 64
    2f76:	9f 4f       	sbci	r25, 0xFF	; 255
    2f78:	fc 01       	movw	r30, r24
    2f7a:	10 82       	st	Z, r1
    2f7c:	11 82       	std	Z+1, r1	; 0x01
    2f7e:	12 82       	std	Z+2, r1	; 0x02
    2f80:	13 82       	std	Z+3, r1	; 0x03
    2f82:	89 81       	ldd	r24, Y+1	; 0x01
    2f84:	9a 81       	ldd	r25, Y+2	; 0x02
    2f86:	8c 53       	subi	r24, 0x3C	; 60
    2f88:	9f 4f       	sbci	r25, 0xFF	; 255
    2f8a:	fc 01       	movw	r30, r24
    2f8c:	10 82       	st	Z, r1
    2f8e:	11 82       	std	Z+1, r1	; 0x01
    2f90:	12 82       	std	Z+2, r1	; 0x02
    2f92:	13 82       	std	Z+3, r1	; 0x03
    2f94:	89 81       	ldd	r24, Y+1	; 0x01
    2f96:	9a 81       	ldd	r25, Y+2	; 0x02
    2f98:	88 53       	subi	r24, 0x38	; 56
    2f9a:	9f 4f       	sbci	r25, 0xFF	; 255
    2f9c:	fc 01       	movw	r30, r24
    2f9e:	10 82       	st	Z, r1
    2fa0:	11 82       	std	Z+1, r1	; 0x01
    2fa2:	12 82       	std	Z+2, r1	; 0x02
    2fa4:	13 82       	std	Z+3, r1	; 0x03
    2fa6:	89 81       	ldd	r24, Y+1	; 0x01
    2fa8:	9a 81       	ldd	r25, Y+2	; 0x02
    2faa:	84 53       	subi	r24, 0x34	; 52
    2fac:	9f 4f       	sbci	r25, 0xFF	; 255
    2fae:	fc 01       	movw	r30, r24
    2fb0:	10 82       	st	Z, r1
    2fb2:	11 82       	std	Z+1, r1	; 0x01
    2fb4:	12 82       	std	Z+2, r1	; 0x02
    2fb6:	13 82       	std	Z+3, r1	; 0x03
			{
				EcefToLocalNEDRotationMatrix[0][0] = 0;
    2fb8:	89 81       	ldd	r24, Y+1	; 0x01
    2fba:	9a 81       	ldd	r25, Y+2	; 0x02
    2fbc:	80 53       	subi	r24, 0x30	; 48
    2fbe:	9f 4f       	sbci	r25, 0xFF	; 255
    2fc0:	fc 01       	movw	r30, r24
    2fc2:	10 82       	st	Z, r1
    2fc4:	11 82       	std	Z+1, r1	; 0x01
    2fc6:	12 82       	std	Z+2, r1	; 0x02
    2fc8:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[0][1] = 0;
    2fca:	89 81       	ldd	r24, Y+1	; 0x01
    2fcc:	9a 81       	ldd	r25, Y+2	; 0x02
    2fce:	8c 52       	subi	r24, 0x2C	; 44
    2fd0:	9f 4f       	sbci	r25, 0xFF	; 255
    2fd2:	fc 01       	movw	r30, r24
    2fd4:	10 82       	st	Z, r1
    2fd6:	11 82       	std	Z+1, r1	; 0x01
    2fd8:	12 82       	std	Z+2, r1	; 0x02
    2fda:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[0][2] = 0;
    2fdc:	89 81       	ldd	r24, Y+1	; 0x01
    2fde:	9a 81       	ldd	r25, Y+2	; 0x02
    2fe0:	88 52       	subi	r24, 0x28	; 40
    2fe2:	9f 4f       	sbci	r25, 0xFF	; 255
    2fe4:	fc 01       	movw	r30, r24
    2fe6:	10 82       	st	Z, r1
    2fe8:	11 82       	std	Z+1, r1	; 0x01
    2fea:	12 82       	std	Z+2, r1	; 0x02
    2fec:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][0] = 0;
    2fee:	89 81       	ldd	r24, Y+1	; 0x01
    2ff0:	9a 81       	ldd	r25, Y+2	; 0x02
    2ff2:	84 52       	subi	r24, 0x24	; 36
    2ff4:	9f 4f       	sbci	r25, 0xFF	; 255
    2ff6:	fc 01       	movw	r30, r24
    2ff8:	10 82       	st	Z, r1
    2ffa:	11 82       	std	Z+1, r1	; 0x01
    2ffc:	12 82       	std	Z+2, r1	; 0x02
    2ffe:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][1] = 0;
    3000:	89 81       	ldd	r24, Y+1	; 0x01
    3002:	9a 81       	ldd	r25, Y+2	; 0x02
    3004:	80 52       	subi	r24, 0x20	; 32
    3006:	9f 4f       	sbci	r25, 0xFF	; 255
    3008:	fc 01       	movw	r30, r24
    300a:	10 82       	st	Z, r1
    300c:	11 82       	std	Z+1, r1	; 0x01
    300e:	12 82       	std	Z+2, r1	; 0x02
    3010:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][2] = 0;
    3012:	89 81       	ldd	r24, Y+1	; 0x01
    3014:	9a 81       	ldd	r25, Y+2	; 0x02
    3016:	8c 51       	subi	r24, 0x1C	; 28
    3018:	9f 4f       	sbci	r25, 0xFF	; 255
    301a:	fc 01       	movw	r30, r24
    301c:	10 82       	st	Z, r1
    301e:	11 82       	std	Z+1, r1	; 0x01
    3020:	12 82       	std	Z+2, r1	; 0x02
    3022:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][0] = 0;
    3024:	89 81       	ldd	r24, Y+1	; 0x01
    3026:	9a 81       	ldd	r25, Y+2	; 0x02
    3028:	88 51       	subi	r24, 0x18	; 24
    302a:	9f 4f       	sbci	r25, 0xFF	; 255
    302c:	fc 01       	movw	r30, r24
    302e:	10 82       	st	Z, r1
    3030:	11 82       	std	Z+1, r1	; 0x01
    3032:	12 82       	std	Z+2, r1	; 0x02
    3034:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][1] = 0;
    3036:	89 81       	ldd	r24, Y+1	; 0x01
    3038:	9a 81       	ldd	r25, Y+2	; 0x02
    303a:	84 51       	subi	r24, 0x14	; 20
    303c:	9f 4f       	sbci	r25, 0xFF	; 255
    303e:	fc 01       	movw	r30, r24
    3040:	10 82       	st	Z, r1
    3042:	11 82       	std	Z+1, r1	; 0x01
    3044:	12 82       	std	Z+2, r1	; 0x02
    3046:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][2] = 0;								
    3048:	89 81       	ldd	r24, Y+1	; 0x01
    304a:	9a 81       	ldd	r25, Y+2	; 0x02
    304c:	80 51       	subi	r24, 0x10	; 16
    304e:	9f 4f       	sbci	r25, 0xFF	; 255
    3050:	fc 01       	movw	r30, r24
    3052:	10 82       	st	Z, r1
    3054:	11 82       	std	Z+1, r1	; 0x01
    3056:	12 82       	std	Z+2, r1	; 0x02
    3058:	13 82       	std	Z+3, r1	; 0x03
			}
    305a:	0f 90       	pop	r0
    305c:	0f 90       	pop	r0
    305e:	df 91       	pop	r29
    3060:	cf 91       	pop	r28
    3062:	08 95       	ret

00003064 <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf>:
			void MagYawDegrees(float val) { magYawDegrees = val; }	
				
				
				
			float ReferenceMagYawDegrees() const {return referenceMagYawDegrees;}
			void ReferenceMagYawDegrees(float val) { referenceMagYawDegrees = val;}
    3064:	cf 93       	push	r28
    3066:	df 93       	push	r29
    3068:	00 d0       	rcall	.+0      	; 0x306a <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf+0x6>
    306a:	00 d0       	rcall	.+0      	; 0x306c <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf+0x8>
    306c:	cd b7       	in	r28, 0x3d	; 61
    306e:	de b7       	in	r29, 0x3e	; 62
    3070:	9a 83       	std	Y+2, r25	; 0x02
    3072:	89 83       	std	Y+1, r24	; 0x01
    3074:	4b 83       	std	Y+3, r20	; 0x03
    3076:	5c 83       	std	Y+4, r21	; 0x04
    3078:	6d 83       	std	Y+5, r22	; 0x05
    307a:	7e 83       	std	Y+6, r23	; 0x06
    307c:	29 81       	ldd	r18, Y+1	; 0x01
    307e:	3a 81       	ldd	r19, Y+2	; 0x02
    3080:	8b 81       	ldd	r24, Y+3	; 0x03
    3082:	9c 81       	ldd	r25, Y+4	; 0x04
    3084:	ad 81       	ldd	r26, Y+5	; 0x05
    3086:	be 81       	ldd	r27, Y+6	; 0x06
    3088:	f9 01       	movw	r30, r18
    308a:	84 83       	std	Z+4, r24	; 0x04
    308c:	95 83       	std	Z+5, r25	; 0x05
    308e:	a6 83       	std	Z+6, r26	; 0x06
    3090:	b7 83       	std	Z+7, r27	; 0x07
    3092:	26 96       	adiw	r28, 0x06	; 6
    3094:	0f b6       	in	r0, 0x3f	; 63
    3096:	f8 94       	cli
    3098:	de bf       	out	0x3e, r29	; 62
    309a:	0f be       	out	0x3f, r0	; 63
    309c:	cd bf       	out	0x3d, r28	; 61
    309e:	df 91       	pop	r29
    30a0:	cf 91       	pop	r28
    30a2:	08 95       	ret

000030a4 <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf>:
				
			float YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
			void YawVelocityDegreesPerSecond(float val) { yawVelocityDegreesPerSecond = val;}
				
			float ReferenceYawVelocityDegreesPerSecond() const {return referenceYawVelocityDegreesPerSecond;}
			void ReferenceYawVelocityDegreesPerSecond(float val) { referenceYawVelocityDegreesPerSecond = val;}
    30a4:	cf 93       	push	r28
    30a6:	df 93       	push	r29
    30a8:	00 d0       	rcall	.+0      	; 0x30aa <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf+0x6>
    30aa:	00 d0       	rcall	.+0      	; 0x30ac <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf+0x8>
    30ac:	cd b7       	in	r28, 0x3d	; 61
    30ae:	de b7       	in	r29, 0x3e	; 62
    30b0:	9a 83       	std	Y+2, r25	; 0x02
    30b2:	89 83       	std	Y+1, r24	; 0x01
    30b4:	4b 83       	std	Y+3, r20	; 0x03
    30b6:	5c 83       	std	Y+4, r21	; 0x04
    30b8:	6d 83       	std	Y+5, r22	; 0x05
    30ba:	7e 83       	std	Y+6, r23	; 0x06
    30bc:	29 81       	ldd	r18, Y+1	; 0x01
    30be:	3a 81       	ldd	r19, Y+2	; 0x02
    30c0:	8b 81       	ldd	r24, Y+3	; 0x03
    30c2:	9c 81       	ldd	r25, Y+4	; 0x04
    30c4:	ad 81       	ldd	r26, Y+5	; 0x05
    30c6:	be 81       	ldd	r27, Y+6	; 0x06
    30c8:	f9 01       	movw	r30, r18
    30ca:	84 8b       	std	Z+20, r24	; 0x14
    30cc:	95 8b       	std	Z+21, r25	; 0x15
    30ce:	a6 8b       	std	Z+22, r26	; 0x16
    30d0:	b7 8b       	std	Z+23, r27	; 0x17
    30d2:	26 96       	adiw	r28, 0x06	; 6
    30d4:	0f b6       	in	r0, 0x3f	; 63
    30d6:	f8 94       	cli
    30d8:	de bf       	out	0x3e, r29	; 62
    30da:	0f be       	out	0x3f, r0	; 63
    30dc:	cd bf       	out	0x3d, r28	; 61
    30de:	df 91       	pop	r29
    30e0:	cf 91       	pop	r28
    30e2:	08 95       	ret

000030e4 <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf>:
		
			float XNEDBodyFrame() const {return xNEDBodyFrame;}
			void XNEDBodyFrame(float val) { xNEDBodyFrame = val;}
						
			float ReferenceXNEDBodyFrame() const {return referenceXNEDBodyFrame;}
			void ReferenceXNEDBodyFrame(float val) { referenceXNEDBodyFrame = val;}
    30e4:	cf 93       	push	r28
    30e6:	df 93       	push	r29
    30e8:	00 d0       	rcall	.+0      	; 0x30ea <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf+0x6>
    30ea:	00 d0       	rcall	.+0      	; 0x30ec <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf+0x8>
    30ec:	cd b7       	in	r28, 0x3d	; 61
    30ee:	de b7       	in	r29, 0x3e	; 62
    30f0:	9a 83       	std	Y+2, r25	; 0x02
    30f2:	89 83       	std	Y+1, r24	; 0x01
    30f4:	4b 83       	std	Y+3, r20	; 0x03
    30f6:	5c 83       	std	Y+4, r21	; 0x04
    30f8:	6d 83       	std	Y+5, r22	; 0x05
    30fa:	7e 83       	std	Y+6, r23	; 0x06
    30fc:	29 81       	ldd	r18, Y+1	; 0x01
    30fe:	3a 81       	ldd	r19, Y+2	; 0x02
    3100:	8b 81       	ldd	r24, Y+3	; 0x03
    3102:	9c 81       	ldd	r25, Y+4	; 0x04
    3104:	ad 81       	ldd	r26, Y+5	; 0x05
    3106:	be 81       	ldd	r27, Y+6	; 0x06
    3108:	f9 01       	movw	r30, r18
    310a:	80 a7       	std	Z+40, r24	; 0x28
    310c:	91 a7       	std	Z+41, r25	; 0x29
    310e:	a2 a7       	std	Z+42, r26	; 0x2a
    3110:	b3 a7       	std	Z+43, r27	; 0x2b
    3112:	26 96       	adiw	r28, 0x06	; 6
    3114:	0f b6       	in	r0, 0x3f	; 63
    3116:	f8 94       	cli
    3118:	de bf       	out	0x3e, r29	; 62
    311a:	0f be       	out	0x3f, r0	; 63
    311c:	cd bf       	out	0x3d, r28	; 61
    311e:	df 91       	pop	r29
    3120:	cf 91       	pop	r28
    3122:	08 95       	ret

00003124 <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf>:
				
			float XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
			void XVelocityMetersPerSecond(float val) { xVelocityMetersPerSecond = val;}
				
			float ReferenceXVelocityMetersPerSecond() const {return referenceXVelocityMetersPerSecond;}
			void ReferenceXVelocityMetersPerSecond(float val) { referenceXVelocityMetersPerSecond = val;}
    3124:	cf 93       	push	r28
    3126:	df 93       	push	r29
    3128:	00 d0       	rcall	.+0      	; 0x312a <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf+0x6>
    312a:	00 d0       	rcall	.+0      	; 0x312c <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf+0x8>
    312c:	cd b7       	in	r28, 0x3d	; 61
    312e:	de b7       	in	r29, 0x3e	; 62
    3130:	9a 83       	std	Y+2, r25	; 0x02
    3132:	89 83       	std	Y+1, r24	; 0x01
    3134:	4b 83       	std	Y+3, r20	; 0x03
    3136:	5c 83       	std	Y+4, r21	; 0x04
    3138:	6d 83       	std	Y+5, r22	; 0x05
    313a:	7e 83       	std	Y+6, r23	; 0x06
    313c:	29 81       	ldd	r18, Y+1	; 0x01
    313e:	3a 81       	ldd	r19, Y+2	; 0x02
    3140:	8b 81       	ldd	r24, Y+3	; 0x03
    3142:	9c 81       	ldd	r25, Y+4	; 0x04
    3144:	ad 81       	ldd	r26, Y+5	; 0x05
    3146:	be 81       	ldd	r27, Y+6	; 0x06
    3148:	f9 01       	movw	r30, r18
    314a:	80 af       	std	Z+56, r24	; 0x38
    314c:	91 af       	std	Z+57, r25	; 0x39
    314e:	a2 af       	std	Z+58, r26	; 0x3a
    3150:	b3 af       	std	Z+59, r27	; 0x3b
    3152:	26 96       	adiw	r28, 0x06	; 6
    3154:	0f b6       	in	r0, 0x3f	; 63
    3156:	f8 94       	cli
    3158:	de bf       	out	0x3e, r29	; 62
    315a:	0f be       	out	0x3f, r0	; 63
    315c:	cd bf       	out	0x3d, r28	; 61
    315e:	df 91       	pop	r29
    3160:	cf 91       	pop	r28
    3162:	08 95       	ret

00003164 <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf>:

			float YNEDBodyFrame() const {return yNEDBodyFrame;}
			void YNEDBodyFrame(float val) { yNEDBodyFrame = val;}

			float ReferenceYNEDBodyFrame() const {return referenceYNEDBodyFrame;}
			void ReferenceYNEDBodyFrame(float val) { referenceYNEDBodyFrame = val;}
    3164:	cf 93       	push	r28
    3166:	df 93       	push	r29
    3168:	00 d0       	rcall	.+0      	; 0x316a <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf+0x6>
    316a:	00 d0       	rcall	.+0      	; 0x316c <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf+0x8>
    316c:	cd b7       	in	r28, 0x3d	; 61
    316e:	de b7       	in	r29, 0x3e	; 62
    3170:	9a 83       	std	Y+2, r25	; 0x02
    3172:	89 83       	std	Y+1, r24	; 0x01
    3174:	4b 83       	std	Y+3, r20	; 0x03
    3176:	5c 83       	std	Y+4, r21	; 0x04
    3178:	6d 83       	std	Y+5, r22	; 0x05
    317a:	7e 83       	std	Y+6, r23	; 0x06
    317c:	89 81       	ldd	r24, Y+1	; 0x01
    317e:	9a 81       	ldd	r25, Y+2	; 0x02
    3180:	9c 01       	movw	r18, r24
    3182:	28 5a       	subi	r18, 0xA8	; 168
    3184:	3f 4f       	sbci	r19, 0xFF	; 255
    3186:	8b 81       	ldd	r24, Y+3	; 0x03
    3188:	9c 81       	ldd	r25, Y+4	; 0x04
    318a:	ad 81       	ldd	r26, Y+5	; 0x05
    318c:	be 81       	ldd	r27, Y+6	; 0x06
    318e:	f9 01       	movw	r30, r18
    3190:	80 83       	st	Z, r24
    3192:	91 83       	std	Z+1, r25	; 0x01
    3194:	a2 83       	std	Z+2, r26	; 0x02
    3196:	b3 83       	std	Z+3, r27	; 0x03
    3198:	26 96       	adiw	r28, 0x06	; 6
    319a:	0f b6       	in	r0, 0x3f	; 63
    319c:	f8 94       	cli
    319e:	de bf       	out	0x3e, r29	; 62
    31a0:	0f be       	out	0x3f, r0	; 63
    31a2:	cd bf       	out	0x3d, r28	; 61
    31a4:	df 91       	pop	r29
    31a6:	cf 91       	pop	r28
    31a8:	08 95       	ret

000031aa <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf>:

			float YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
			void YVelocityMetersPerSecond(float val) { yVelocityMetersPerSecond = val;}

			float ReferenceYVelocityMetersPerSecond() const {return referenceYVelocityMetersPerSecond;}
			void ReferenceYVelocityMetersPerSecond(float val) { referenceYVelocityMetersPerSecond = val;}
    31aa:	cf 93       	push	r28
    31ac:	df 93       	push	r29
    31ae:	00 d0       	rcall	.+0      	; 0x31b0 <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf+0x6>
    31b0:	00 d0       	rcall	.+0      	; 0x31b2 <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf+0x8>
    31b2:	cd b7       	in	r28, 0x3d	; 61
    31b4:	de b7       	in	r29, 0x3e	; 62
    31b6:	9a 83       	std	Y+2, r25	; 0x02
    31b8:	89 83       	std	Y+1, r24	; 0x01
    31ba:	4b 83       	std	Y+3, r20	; 0x03
    31bc:	5c 83       	std	Y+4, r21	; 0x04
    31be:	6d 83       	std	Y+5, r22	; 0x05
    31c0:	7e 83       	std	Y+6, r23	; 0x06
    31c2:	89 81       	ldd	r24, Y+1	; 0x01
    31c4:	9a 81       	ldd	r25, Y+2	; 0x02
    31c6:	9c 01       	movw	r18, r24
    31c8:	28 59       	subi	r18, 0x98	; 152
    31ca:	3f 4f       	sbci	r19, 0xFF	; 255
    31cc:	8b 81       	ldd	r24, Y+3	; 0x03
    31ce:	9c 81       	ldd	r25, Y+4	; 0x04
    31d0:	ad 81       	ldd	r26, Y+5	; 0x05
    31d2:	be 81       	ldd	r27, Y+6	; 0x06
    31d4:	f9 01       	movw	r30, r18
    31d6:	80 83       	st	Z, r24
    31d8:	91 83       	std	Z+1, r25	; 0x01
    31da:	a2 83       	std	Z+2, r26	; 0x02
    31dc:	b3 83       	std	Z+3, r27	; 0x03
    31de:	26 96       	adiw	r28, 0x06	; 6
    31e0:	0f b6       	in	r0, 0x3f	; 63
    31e2:	f8 94       	cli
    31e4:	de bf       	out	0x3e, r29	; 62
    31e6:	0f be       	out	0x3f, r0	; 63
    31e8:	cd bf       	out	0x3d, r28	; 61
    31ea:	df 91       	pop	r29
    31ec:	cf 91       	pop	r28
    31ee:	08 95       	ret

000031f0 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>:
						
						
						
						

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
    31f0:	cf 93       	push	r28
    31f2:	df 93       	push	r29
    31f4:	1f 92       	push	r1
    31f6:	1f 92       	push	r1
    31f8:	cd b7       	in	r28, 0x3d	; 61
    31fa:	de b7       	in	r29, 0x3e	; 62
    31fc:	9a 83       	std	Y+2, r25	; 0x02
    31fe:	89 83       	std	Y+1, r24	; 0x01
    3200:	89 81       	ldd	r24, Y+1	; 0x01
    3202:	9a 81       	ldd	r25, Y+2	; 0x02
    3204:	8c 57       	subi	r24, 0x7C	; 124
    3206:	9f 4f       	sbci	r25, 0xFF	; 255
    3208:	fc 01       	movw	r30, r24
    320a:	80 81       	ld	r24, Z
    320c:	91 81       	ldd	r25, Z+1	; 0x01
    320e:	a2 81       	ldd	r26, Z+2	; 0x02
    3210:	b3 81       	ldd	r27, Z+3	; 0x03
    3212:	bc 01       	movw	r22, r24
    3214:	cd 01       	movw	r24, r26
    3216:	0f 90       	pop	r0
    3218:	0f 90       	pop	r0
    321a:	df 91       	pop	r29
    321c:	cf 91       	pop	r28
    321e:	08 95       	ret

00003220 <_ZN10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEf>:
			float ZNEDBodyFrame() const { return zNEDBodyFrame; }
			void ZNEDBodyFrame(float val) { zNEDBodyFrame = val; }


			float ReferenceZNEDBodyFrameFeet() const {return referenceAltitudeFeet;}
			void ReferenceZNEDBodyFrameFeet(float val) { referenceAltitudeFeet = val;}
    3220:	cf 93       	push	r28
    3222:	df 93       	push	r29
    3224:	00 d0       	rcall	.+0      	; 0x3226 <_ZN10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEf+0x6>
    3226:	00 d0       	rcall	.+0      	; 0x3228 <_ZN10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEf+0x8>
    3228:	cd b7       	in	r28, 0x3d	; 61
    322a:	de b7       	in	r29, 0x3e	; 62
    322c:	9a 83       	std	Y+2, r25	; 0x02
    322e:	89 83       	std	Y+1, r24	; 0x01
    3230:	4b 83       	std	Y+3, r20	; 0x03
    3232:	5c 83       	std	Y+4, r21	; 0x04
    3234:	6d 83       	std	Y+5, r22	; 0x05
    3236:	7e 83       	std	Y+6, r23	; 0x06
    3238:	89 81       	ldd	r24, Y+1	; 0x01
    323a:	9a 81       	ldd	r25, Y+2	; 0x02
    323c:	9c 01       	movw	r18, r24
    323e:	24 57       	subi	r18, 0x74	; 116
    3240:	3f 4f       	sbci	r19, 0xFF	; 255
    3242:	8b 81       	ldd	r24, Y+3	; 0x03
    3244:	9c 81       	ldd	r25, Y+4	; 0x04
    3246:	ad 81       	ldd	r26, Y+5	; 0x05
    3248:	be 81       	ldd	r27, Y+6	; 0x06
    324a:	f9 01       	movw	r30, r18
    324c:	80 83       	st	Z, r24
    324e:	91 83       	std	Z+1, r25	; 0x01
    3250:	a2 83       	std	Z+2, r26	; 0x02
    3252:	b3 83       	std	Z+3, r27	; 0x03
    3254:	26 96       	adiw	r28, 0x06	; 6
    3256:	0f b6       	in	r0, 0x3f	; 63
    3258:	f8 94       	cli
    325a:	de bf       	out	0x3e, r29	; 62
    325c:	0f be       	out	0x3f, r0	; 63
    325e:	cd bf       	out	0x3d, r28	; 61
    3260:	df 91       	pop	r29
    3262:	cf 91       	pop	r28
    3264:	08 95       	ret

00003266 <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf>:

			float ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
			void ZVelocityFeetPerSecond(float val) { zVelocityFeetPerSecond = val;}

			float ReferenceZVelocityFeetPerSecond() const {return referenceZVelocityFeetPerSecond;}
			void ReferenceZVelocityFeetPerSecond(float val) { referenceZVelocityFeetPerSecond = val;}
    3266:	cf 93       	push	r28
    3268:	df 93       	push	r29
    326a:	00 d0       	rcall	.+0      	; 0x326c <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf+0x6>
    326c:	00 d0       	rcall	.+0      	; 0x326e <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf+0x8>
    326e:	cd b7       	in	r28, 0x3d	; 61
    3270:	de b7       	in	r29, 0x3e	; 62
    3272:	9a 83       	std	Y+2, r25	; 0x02
    3274:	89 83       	std	Y+1, r24	; 0x01
    3276:	4b 83       	std	Y+3, r20	; 0x03
    3278:	5c 83       	std	Y+4, r21	; 0x04
    327a:	6d 83       	std	Y+5, r22	; 0x05
    327c:	7e 83       	std	Y+6, r23	; 0x06
    327e:	89 81       	ldd	r24, Y+1	; 0x01
    3280:	9a 81       	ldd	r25, Y+2	; 0x02
    3282:	9c 01       	movw	r18, r24
    3284:	24 56       	subi	r18, 0x64	; 100
    3286:	3f 4f       	sbci	r19, 0xFF	; 255
    3288:	8b 81       	ldd	r24, Y+3	; 0x03
    328a:	9c 81       	ldd	r25, Y+4	; 0x04
    328c:	ad 81       	ldd	r26, Y+5	; 0x05
    328e:	be 81       	ldd	r27, Y+6	; 0x06
    3290:	f9 01       	movw	r30, r18
    3292:	80 83       	st	Z, r24
    3294:	91 83       	std	Z+1, r25	; 0x01
    3296:	a2 83       	std	Z+2, r26	; 0x02
    3298:	b3 83       	std	Z+3, r27	; 0x03
    329a:	26 96       	adiw	r28, 0x06	; 6
    329c:	0f b6       	in	r0, 0x3f	; 63
    329e:	f8 94       	cli
    32a0:	de bf       	out	0x3e, r29	; 62
    32a2:	0f be       	out	0x3f, r0	; 63
    32a4:	cd bf       	out	0x3d, r28	; 61
    32a6:	df 91       	pop	r29
    32a8:	cf 91       	pop	r28
    32aa:	08 95       	ret

000032ac <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>:

			float ZDerivativeError() const {return zDerivativeError;}
			void ZDerivativeError(float val) { zDerivativeError = val;}						
						
						
			float LatitudeDegrees() const {return latitudeDegrees;}
    32ac:	cf 93       	push	r28
    32ae:	df 93       	push	r29
    32b0:	1f 92       	push	r1
    32b2:	1f 92       	push	r1
    32b4:	cd b7       	in	r28, 0x3d	; 61
    32b6:	de b7       	in	r29, 0x3e	; 62
    32b8:	9a 83       	std	Y+2, r25	; 0x02
    32ba:	89 83       	std	Y+1, r24	; 0x01
    32bc:	89 81       	ldd	r24, Y+1	; 0x01
    32be:	9a 81       	ldd	r25, Y+2	; 0x02
    32c0:	84 55       	subi	r24, 0x54	; 84
    32c2:	9f 4f       	sbci	r25, 0xFF	; 255
    32c4:	fc 01       	movw	r30, r24
    32c6:	80 81       	ld	r24, Z
    32c8:	91 81       	ldd	r25, Z+1	; 0x01
    32ca:	a2 81       	ldd	r26, Z+2	; 0x02
    32cc:	b3 81       	ldd	r27, Z+3	; 0x03
    32ce:	bc 01       	movw	r22, r24
    32d0:	cd 01       	movw	r24, r26
    32d2:	0f 90       	pop	r0
    32d4:	0f 90       	pop	r0
    32d6:	df 91       	pop	r29
    32d8:	cf 91       	pop	r28
    32da:	08 95       	ret

000032dc <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>:
			void LatitudeDegrees(float val) { latitudeDegrees = val;}						

			float LongitudeDegrees() const {return longitudeDegrees;}
    32dc:	cf 93       	push	r28
    32de:	df 93       	push	r29
    32e0:	1f 92       	push	r1
    32e2:	1f 92       	push	r1
    32e4:	cd b7       	in	r28, 0x3d	; 61
    32e6:	de b7       	in	r29, 0x3e	; 62
    32e8:	9a 83       	std	Y+2, r25	; 0x02
    32ea:	89 83       	std	Y+1, r24	; 0x01
    32ec:	89 81       	ldd	r24, Y+1	; 0x01
    32ee:	9a 81       	ldd	r25, Y+2	; 0x02
    32f0:	80 55       	subi	r24, 0x50	; 80
    32f2:	9f 4f       	sbci	r25, 0xFF	; 255
    32f4:	fc 01       	movw	r30, r24
    32f6:	80 81       	ld	r24, Z
    32f8:	91 81       	ldd	r25, Z+1	; 0x01
    32fa:	a2 81       	ldd	r26, Z+2	; 0x02
    32fc:	b3 81       	ldd	r27, Z+3	; 0x03
    32fe:	bc 01       	movw	r22, r24
    3300:	cd 01       	movw	r24, r26
    3302:	0f 90       	pop	r0
    3304:	0f 90       	pop	r0
    3306:	df 91       	pop	r29
    3308:	cf 91       	pop	r28
    330a:	08 95       	ret

0000330c <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl>:
			
			long  BlownFrames() const {return numOfFramesBlown;}
			void BlownFrames( long val ) { numOfFramesBlown = val;}

			long  InitialXPositionEcef() const {return initialXPositionEcef;}
			void InitialXPositionEcef( long val ) { initialXPositionEcef = val;}			
    330c:	cf 93       	push	r28
    330e:	df 93       	push	r29
    3310:	00 d0       	rcall	.+0      	; 0x3312 <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl+0x6>
    3312:	00 d0       	rcall	.+0      	; 0x3314 <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl+0x8>
    3314:	cd b7       	in	r28, 0x3d	; 61
    3316:	de b7       	in	r29, 0x3e	; 62
    3318:	9a 83       	std	Y+2, r25	; 0x02
    331a:	89 83       	std	Y+1, r24	; 0x01
    331c:	4b 83       	std	Y+3, r20	; 0x03
    331e:	5c 83       	std	Y+4, r21	; 0x04
    3320:	6d 83       	std	Y+5, r22	; 0x05
    3322:	7e 83       	std	Y+6, r23	; 0x06
    3324:	6b 81       	ldd	r22, Y+3	; 0x03
    3326:	7c 81       	ldd	r23, Y+4	; 0x04
    3328:	8d 81       	ldd	r24, Y+5	; 0x05
    332a:	9e 81       	ldd	r25, Y+6	; 0x06
    332c:	0e 94 19 47 	call	0x8e32	; 0x8e32 <__floatsisf>
    3330:	dc 01       	movw	r26, r24
    3332:	cb 01       	movw	r24, r22
    3334:	29 81       	ldd	r18, Y+1	; 0x01
    3336:	3a 81       	ldd	r19, Y+2	; 0x02
    3338:	2c 53       	subi	r18, 0x3C	; 60
    333a:	3f 4f       	sbci	r19, 0xFF	; 255
    333c:	f9 01       	movw	r30, r18
    333e:	80 83       	st	Z, r24
    3340:	91 83       	std	Z+1, r25	; 0x01
    3342:	a2 83       	std	Z+2, r26	; 0x02
    3344:	b3 83       	std	Z+3, r27	; 0x03
    3346:	26 96       	adiw	r28, 0x06	; 6
    3348:	0f b6       	in	r0, 0x3f	; 63
    334a:	f8 94       	cli
    334c:	de bf       	out	0x3e, r29	; 62
    334e:	0f be       	out	0x3f, r0	; 63
    3350:	cd bf       	out	0x3d, r28	; 61
    3352:	df 91       	pop	r29
    3354:	cf 91       	pop	r28
    3356:	08 95       	ret

00003358 <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl>:

			long  InitialYPositionEcef() const {return initialYPositionEcef;}
			void InitialYPositionEcef( long val ) { initialYPositionEcef = val;}
    3358:	cf 93       	push	r28
    335a:	df 93       	push	r29
    335c:	00 d0       	rcall	.+0      	; 0x335e <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl+0x6>
    335e:	00 d0       	rcall	.+0      	; 0x3360 <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl+0x8>
    3360:	cd b7       	in	r28, 0x3d	; 61
    3362:	de b7       	in	r29, 0x3e	; 62
    3364:	9a 83       	std	Y+2, r25	; 0x02
    3366:	89 83       	std	Y+1, r24	; 0x01
    3368:	4b 83       	std	Y+3, r20	; 0x03
    336a:	5c 83       	std	Y+4, r21	; 0x04
    336c:	6d 83       	std	Y+5, r22	; 0x05
    336e:	7e 83       	std	Y+6, r23	; 0x06
    3370:	6b 81       	ldd	r22, Y+3	; 0x03
    3372:	7c 81       	ldd	r23, Y+4	; 0x04
    3374:	8d 81       	ldd	r24, Y+5	; 0x05
    3376:	9e 81       	ldd	r25, Y+6	; 0x06
    3378:	0e 94 19 47 	call	0x8e32	; 0x8e32 <__floatsisf>
    337c:	dc 01       	movw	r26, r24
    337e:	cb 01       	movw	r24, r22
    3380:	29 81       	ldd	r18, Y+1	; 0x01
    3382:	3a 81       	ldd	r19, Y+2	; 0x02
    3384:	28 53       	subi	r18, 0x38	; 56
    3386:	3f 4f       	sbci	r19, 0xFF	; 255
    3388:	f9 01       	movw	r30, r18
    338a:	80 83       	st	Z, r24
    338c:	91 83       	std	Z+1, r25	; 0x01
    338e:	a2 83       	std	Z+2, r26	; 0x02
    3390:	b3 83       	std	Z+3, r27	; 0x03
    3392:	26 96       	adiw	r28, 0x06	; 6
    3394:	0f b6       	in	r0, 0x3f	; 63
    3396:	f8 94       	cli
    3398:	de bf       	out	0x3e, r29	; 62
    339a:	0f be       	out	0x3f, r0	; 63
    339c:	cd bf       	out	0x3d, r28	; 61
    339e:	df 91       	pop	r29
    33a0:	cf 91       	pop	r28
    33a2:	08 95       	ret

000033a4 <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl>:

			long  InitialZPositionEcef() const {return initialZPositionEcef;}
			void InitialZPositionEcef( long val ) { initialZPositionEcef = val;}							
    33a4:	cf 93       	push	r28
    33a6:	df 93       	push	r29
    33a8:	00 d0       	rcall	.+0      	; 0x33aa <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl+0x6>
    33aa:	00 d0       	rcall	.+0      	; 0x33ac <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl+0x8>
    33ac:	cd b7       	in	r28, 0x3d	; 61
    33ae:	de b7       	in	r29, 0x3e	; 62
    33b0:	9a 83       	std	Y+2, r25	; 0x02
    33b2:	89 83       	std	Y+1, r24	; 0x01
    33b4:	4b 83       	std	Y+3, r20	; 0x03
    33b6:	5c 83       	std	Y+4, r21	; 0x04
    33b8:	6d 83       	std	Y+5, r22	; 0x05
    33ba:	7e 83       	std	Y+6, r23	; 0x06
    33bc:	6b 81       	ldd	r22, Y+3	; 0x03
    33be:	7c 81       	ldd	r23, Y+4	; 0x04
    33c0:	8d 81       	ldd	r24, Y+5	; 0x05
    33c2:	9e 81       	ldd	r25, Y+6	; 0x06
    33c4:	0e 94 19 47 	call	0x8e32	; 0x8e32 <__floatsisf>
    33c8:	dc 01       	movw	r26, r24
    33ca:	cb 01       	movw	r24, r22
    33cc:	29 81       	ldd	r18, Y+1	; 0x01
    33ce:	3a 81       	ldd	r19, Y+2	; 0x02
    33d0:	24 53       	subi	r18, 0x34	; 52
    33d2:	3f 4f       	sbci	r19, 0xFF	; 255
    33d4:	f9 01       	movw	r30, r18
    33d6:	80 83       	st	Z, r24
    33d8:	91 83       	std	Z+1, r25	; 0x01
    33da:	a2 83       	std	Z+2, r26	; 0x02
    33dc:	b3 83       	std	Z+3, r27	; 0x03
    33de:	26 96       	adiw	r28, 0x06	; 6
    33e0:	0f b6       	in	r0, 0x3f	; 63
    33e2:	f8 94       	cli
    33e4:	de bf       	out	0x3e, r29	; 62
    33e6:	0f be       	out	0x3f, r0	; 63
    33e8:	cd bf       	out	0x3d, r28	; 61
    33ea:	df 91       	pop	r29
    33ec:	cf 91       	pop	r28
    33ee:	08 95       	ret

000033f0 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf>:
			public:
				PIDController (SystemModel *model);
					
				~PIDController();
				
				void setXIntegralGain(float val)
    33f0:	cf 93       	push	r28
    33f2:	df 93       	push	r29
    33f4:	00 d0       	rcall	.+0      	; 0x33f6 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf+0x6>
    33f6:	00 d0       	rcall	.+0      	; 0x33f8 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf+0x8>
    33f8:	cd b7       	in	r28, 0x3d	; 61
    33fa:	de b7       	in	r29, 0x3e	; 62
    33fc:	9a 83       	std	Y+2, r25	; 0x02
    33fe:	89 83       	std	Y+1, r24	; 0x01
    3400:	4b 83       	std	Y+3, r20	; 0x03
    3402:	5c 83       	std	Y+4, r21	; 0x04
    3404:	6d 83       	std	Y+5, r22	; 0x05
    3406:	7e 83       	std	Y+6, r23	; 0x06
				{
					xIntegralGain = val;
    3408:	29 81       	ldd	r18, Y+1	; 0x01
    340a:	3a 81       	ldd	r19, Y+2	; 0x02
    340c:	8b 81       	ldd	r24, Y+3	; 0x03
    340e:	9c 81       	ldd	r25, Y+4	; 0x04
    3410:	ad 81       	ldd	r26, Y+5	; 0x05
    3412:	be 81       	ldd	r27, Y+6	; 0x06
    3414:	f9 01       	movw	r30, r18
    3416:	82 8b       	std	Z+18, r24	; 0x12
    3418:	93 8b       	std	Z+19, r25	; 0x13
    341a:	a4 8b       	std	Z+20, r26	; 0x14
    341c:	b5 8b       	std	Z+21, r27	; 0x15
				}
    341e:	26 96       	adiw	r28, 0x06	; 6
    3420:	0f b6       	in	r0, 0x3f	; 63
    3422:	f8 94       	cli
    3424:	de bf       	out	0x3e, r29	; 62
    3426:	0f be       	out	0x3f, r0	; 63
    3428:	cd bf       	out	0x3d, r28	; 61
    342a:	df 91       	pop	r29
    342c:	cf 91       	pop	r28
    342e:	08 95       	ret

00003430 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf>:
				
				void setXDerivativeGain(float val)
    3430:	cf 93       	push	r28
    3432:	df 93       	push	r29
    3434:	00 d0       	rcall	.+0      	; 0x3436 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf+0x6>
    3436:	00 d0       	rcall	.+0      	; 0x3438 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf+0x8>
    3438:	cd b7       	in	r28, 0x3d	; 61
    343a:	de b7       	in	r29, 0x3e	; 62
    343c:	9a 83       	std	Y+2, r25	; 0x02
    343e:	89 83       	std	Y+1, r24	; 0x01
    3440:	4b 83       	std	Y+3, r20	; 0x03
    3442:	5c 83       	std	Y+4, r21	; 0x04
    3444:	6d 83       	std	Y+5, r22	; 0x05
    3446:	7e 83       	std	Y+6, r23	; 0x06
				{
					xDerivativeGain = val;
    3448:	29 81       	ldd	r18, Y+1	; 0x01
    344a:	3a 81       	ldd	r19, Y+2	; 0x02
    344c:	8b 81       	ldd	r24, Y+3	; 0x03
    344e:	9c 81       	ldd	r25, Y+4	; 0x04
    3450:	ad 81       	ldd	r26, Y+5	; 0x05
    3452:	be 81       	ldd	r27, Y+6	; 0x06
    3454:	f9 01       	movw	r30, r18
    3456:	86 8b       	std	Z+22, r24	; 0x16
    3458:	97 8b       	std	Z+23, r25	; 0x17
    345a:	a0 8f       	std	Z+24, r26	; 0x18
    345c:	b1 8f       	std	Z+25, r27	; 0x19
				}
    345e:	26 96       	adiw	r28, 0x06	; 6
    3460:	0f b6       	in	r0, 0x3f	; 63
    3462:	f8 94       	cli
    3464:	de bf       	out	0x3e, r29	; 62
    3466:	0f be       	out	0x3f, r0	; 63
    3468:	cd bf       	out	0x3d, r28	; 61
    346a:	df 91       	pop	r29
    346c:	cf 91       	pop	r28
    346e:	08 95       	ret

00003470 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf>:
				
				void setXProportionalGain(float val)
    3470:	cf 93       	push	r28
    3472:	df 93       	push	r29
    3474:	00 d0       	rcall	.+0      	; 0x3476 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf+0x6>
    3476:	00 d0       	rcall	.+0      	; 0x3478 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf+0x8>
    3478:	cd b7       	in	r28, 0x3d	; 61
    347a:	de b7       	in	r29, 0x3e	; 62
    347c:	9a 83       	std	Y+2, r25	; 0x02
    347e:	89 83       	std	Y+1, r24	; 0x01
    3480:	4b 83       	std	Y+3, r20	; 0x03
    3482:	5c 83       	std	Y+4, r21	; 0x04
    3484:	6d 83       	std	Y+5, r22	; 0x05
    3486:	7e 83       	std	Y+6, r23	; 0x06
				{
					xProportionalGain = val;
    3488:	29 81       	ldd	r18, Y+1	; 0x01
    348a:	3a 81       	ldd	r19, Y+2	; 0x02
    348c:	8b 81       	ldd	r24, Y+3	; 0x03
    348e:	9c 81       	ldd	r25, Y+4	; 0x04
    3490:	ad 81       	ldd	r26, Y+5	; 0x05
    3492:	be 81       	ldd	r27, Y+6	; 0x06
    3494:	f9 01       	movw	r30, r18
    3496:	82 8f       	std	Z+26, r24	; 0x1a
    3498:	93 8f       	std	Z+27, r25	; 0x1b
    349a:	a4 8f       	std	Z+28, r26	; 0x1c
    349c:	b5 8f       	std	Z+29, r27	; 0x1d
				}
    349e:	26 96       	adiw	r28, 0x06	; 6
    34a0:	0f b6       	in	r0, 0x3f	; 63
    34a2:	f8 94       	cli
    34a4:	de bf       	out	0x3e, r29	; 62
    34a6:	0f be       	out	0x3f, r0	; 63
    34a8:	cd bf       	out	0x3d, r28	; 61
    34aa:	df 91       	pop	r29
    34ac:	cf 91       	pop	r28
    34ae:	08 95       	ret

000034b0 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf>:
				
				void setXAntiWindupGain(float val)
    34b0:	cf 93       	push	r28
    34b2:	df 93       	push	r29
    34b4:	00 d0       	rcall	.+0      	; 0x34b6 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf+0x6>
    34b6:	00 d0       	rcall	.+0      	; 0x34b8 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf+0x8>
    34b8:	cd b7       	in	r28, 0x3d	; 61
    34ba:	de b7       	in	r29, 0x3e	; 62
    34bc:	9a 83       	std	Y+2, r25	; 0x02
    34be:	89 83       	std	Y+1, r24	; 0x01
    34c0:	4b 83       	std	Y+3, r20	; 0x03
    34c2:	5c 83       	std	Y+4, r21	; 0x04
    34c4:	6d 83       	std	Y+5, r22	; 0x05
    34c6:	7e 83       	std	Y+6, r23	; 0x06
				{
					xAntiWindupGain = val;
    34c8:	29 81       	ldd	r18, Y+1	; 0x01
    34ca:	3a 81       	ldd	r19, Y+2	; 0x02
    34cc:	8b 81       	ldd	r24, Y+3	; 0x03
    34ce:	9c 81       	ldd	r25, Y+4	; 0x04
    34d0:	ad 81       	ldd	r26, Y+5	; 0x05
    34d2:	be 81       	ldd	r27, Y+6	; 0x06
    34d4:	f9 01       	movw	r30, r18
    34d6:	86 8f       	std	Z+30, r24	; 0x1e
    34d8:	97 8f       	std	Z+31, r25	; 0x1f
    34da:	a0 a3       	std	Z+32, r26	; 0x20
    34dc:	b1 a3       	std	Z+33, r27	; 0x21
				}
    34de:	26 96       	adiw	r28, 0x06	; 6
    34e0:	0f b6       	in	r0, 0x3f	; 63
    34e2:	f8 94       	cli
    34e4:	de bf       	out	0x3e, r29	; 62
    34e6:	0f be       	out	0x3f, r0	; 63
    34e8:	cd bf       	out	0x3d, r28	; 61
    34ea:	df 91       	pop	r29
    34ec:	cf 91       	pop	r28
    34ee:	08 95       	ret

000034f0 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf>:
				
				void setLongitudeInnerLoopGain(float val)
    34f0:	cf 93       	push	r28
    34f2:	df 93       	push	r29
    34f4:	00 d0       	rcall	.+0      	; 0x34f6 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf+0x6>
    34f6:	00 d0       	rcall	.+0      	; 0x34f8 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf+0x8>
    34f8:	cd b7       	in	r28, 0x3d	; 61
    34fa:	de b7       	in	r29, 0x3e	; 62
    34fc:	9a 83       	std	Y+2, r25	; 0x02
    34fe:	89 83       	std	Y+1, r24	; 0x01
    3500:	4b 83       	std	Y+3, r20	; 0x03
    3502:	5c 83       	std	Y+4, r21	; 0x04
    3504:	6d 83       	std	Y+5, r22	; 0x05
    3506:	7e 83       	std	Y+6, r23	; 0x06
				{
					longitudeInnerLoopGain = val;
    3508:	29 81       	ldd	r18, Y+1	; 0x01
    350a:	3a 81       	ldd	r19, Y+2	; 0x02
    350c:	8b 81       	ldd	r24, Y+3	; 0x03
    350e:	9c 81       	ldd	r25, Y+4	; 0x04
    3510:	ad 81       	ldd	r26, Y+5	; 0x05
    3512:	be 81       	ldd	r27, Y+6	; 0x06
    3514:	f9 01       	movw	r30, r18
    3516:	82 a3       	std	Z+34, r24	; 0x22
    3518:	93 a3       	std	Z+35, r25	; 0x23
    351a:	a4 a3       	std	Z+36, r26	; 0x24
    351c:	b5 a3       	std	Z+37, r27	; 0x25
				}
    351e:	26 96       	adiw	r28, 0x06	; 6
    3520:	0f b6       	in	r0, 0x3f	; 63
    3522:	f8 94       	cli
    3524:	de bf       	out	0x3e, r29	; 62
    3526:	0f be       	out	0x3f, r0	; 63
    3528:	cd bf       	out	0x3d, r28	; 61
    352a:	df 91       	pop	r29
    352c:	cf 91       	pop	r28
    352e:	08 95       	ret

00003530 <_ZN10helicopter10controller13PIDController27setPitchAngularVelocityGainEf>:
				
				void setPitchAngularVelocityGain(float val)
    3530:	cf 93       	push	r28
    3532:	df 93       	push	r29
    3534:	00 d0       	rcall	.+0      	; 0x3536 <_ZN10helicopter10controller13PIDController27setPitchAngularVelocityGainEf+0x6>
    3536:	00 d0       	rcall	.+0      	; 0x3538 <_ZN10helicopter10controller13PIDController27setPitchAngularVelocityGainEf+0x8>
    3538:	cd b7       	in	r28, 0x3d	; 61
    353a:	de b7       	in	r29, 0x3e	; 62
    353c:	9a 83       	std	Y+2, r25	; 0x02
    353e:	89 83       	std	Y+1, r24	; 0x01
    3540:	4b 83       	std	Y+3, r20	; 0x03
    3542:	5c 83       	std	Y+4, r21	; 0x04
    3544:	6d 83       	std	Y+5, r22	; 0x05
    3546:	7e 83       	std	Y+6, r23	; 0x06
				{
					pitchAngularVelocityGain = val;
    3548:	29 81       	ldd	r18, Y+1	; 0x01
    354a:	3a 81       	ldd	r19, Y+2	; 0x02
    354c:	8b 81       	ldd	r24, Y+3	; 0x03
    354e:	9c 81       	ldd	r25, Y+4	; 0x04
    3550:	ad 81       	ldd	r26, Y+5	; 0x05
    3552:	be 81       	ldd	r27, Y+6	; 0x06
    3554:	f9 01       	movw	r30, r18
    3556:	86 a3       	std	Z+38, r24	; 0x26
    3558:	97 a3       	std	Z+39, r25	; 0x27
    355a:	a0 a7       	std	Z+40, r26	; 0x28
    355c:	b1 a7       	std	Z+41, r27	; 0x29
				}
    355e:	26 96       	adiw	r28, 0x06	; 6
    3560:	0f b6       	in	r0, 0x3f	; 63
    3562:	f8 94       	cli
    3564:	de bf       	out	0x3e, r29	; 62
    3566:	0f be       	out	0x3f, r0	; 63
    3568:	cd bf       	out	0x3d, r28	; 61
    356a:	df 91       	pop	r29
    356c:	cf 91       	pop	r28
    356e:	08 95       	ret

00003570 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf>:
				
				void setMinLongitudeServoControlValue(float val)
    3570:	cf 93       	push	r28
    3572:	df 93       	push	r29
    3574:	00 d0       	rcall	.+0      	; 0x3576 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf+0x6>
    3576:	00 d0       	rcall	.+0      	; 0x3578 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf+0x8>
    3578:	cd b7       	in	r28, 0x3d	; 61
    357a:	de b7       	in	r29, 0x3e	; 62
    357c:	9a 83       	std	Y+2, r25	; 0x02
    357e:	89 83       	std	Y+1, r24	; 0x01
    3580:	4b 83       	std	Y+3, r20	; 0x03
    3582:	5c 83       	std	Y+4, r21	; 0x04
    3584:	6d 83       	std	Y+5, r22	; 0x05
    3586:	7e 83       	std	Y+6, r23	; 0x06
				{
					minLongitudeServoControlValue = val;
    3588:	89 81       	ldd	r24, Y+1	; 0x01
    358a:	9a 81       	ldd	r25, Y+2	; 0x02
    358c:	9c 01       	movw	r18, r24
    358e:	26 5a       	subi	r18, 0xA6	; 166
    3590:	3f 4f       	sbci	r19, 0xFF	; 255
    3592:	8b 81       	ldd	r24, Y+3	; 0x03
    3594:	9c 81       	ldd	r25, Y+4	; 0x04
    3596:	ad 81       	ldd	r26, Y+5	; 0x05
    3598:	be 81       	ldd	r27, Y+6	; 0x06
    359a:	f9 01       	movw	r30, r18
    359c:	80 83       	st	Z, r24
    359e:	91 83       	std	Z+1, r25	; 0x01
    35a0:	a2 83       	std	Z+2, r26	; 0x02
    35a2:	b3 83       	std	Z+3, r27	; 0x03
				}
    35a4:	26 96       	adiw	r28, 0x06	; 6
    35a6:	0f b6       	in	r0, 0x3f	; 63
    35a8:	f8 94       	cli
    35aa:	de bf       	out	0x3e, r29	; 62
    35ac:	0f be       	out	0x3f, r0	; 63
    35ae:	cd bf       	out	0x3d, r28	; 61
    35b0:	df 91       	pop	r29
    35b2:	cf 91       	pop	r28
    35b4:	08 95       	ret

000035b6 <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf>:
				
				void setMaxLongitudeServoControlValue(float val)
    35b6:	cf 93       	push	r28
    35b8:	df 93       	push	r29
    35ba:	00 d0       	rcall	.+0      	; 0x35bc <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf+0x6>
    35bc:	00 d0       	rcall	.+0      	; 0x35be <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf+0x8>
    35be:	cd b7       	in	r28, 0x3d	; 61
    35c0:	de b7       	in	r29, 0x3e	; 62
    35c2:	9a 83       	std	Y+2, r25	; 0x02
    35c4:	89 83       	std	Y+1, r24	; 0x01
    35c6:	4b 83       	std	Y+3, r20	; 0x03
    35c8:	5c 83       	std	Y+4, r21	; 0x04
    35ca:	6d 83       	std	Y+5, r22	; 0x05
    35cc:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxLongitudeServoControlValue = val;
    35ce:	89 81       	ldd	r24, Y+1	; 0x01
    35d0:	9a 81       	ldd	r25, Y+2	; 0x02
    35d2:	9c 01       	movw	r18, r24
    35d4:	22 5a       	subi	r18, 0xA2	; 162
    35d6:	3f 4f       	sbci	r19, 0xFF	; 255
    35d8:	8b 81       	ldd	r24, Y+3	; 0x03
    35da:	9c 81       	ldd	r25, Y+4	; 0x04
    35dc:	ad 81       	ldd	r26, Y+5	; 0x05
    35de:	be 81       	ldd	r27, Y+6	; 0x06
    35e0:	f9 01       	movw	r30, r18
    35e2:	80 83       	st	Z, r24
    35e4:	91 83       	std	Z+1, r25	; 0x01
    35e6:	a2 83       	std	Z+2, r26	; 0x02
    35e8:	b3 83       	std	Z+3, r27	; 0x03
				}
    35ea:	26 96       	adiw	r28, 0x06	; 6
    35ec:	0f b6       	in	r0, 0x3f	; 63
    35ee:	f8 94       	cli
    35f0:	de bf       	out	0x3e, r29	; 62
    35f2:	0f be       	out	0x3f, r0	; 63
    35f4:	cd bf       	out	0x3d, r28	; 61
    35f6:	df 91       	pop	r29
    35f8:	cf 91       	pop	r28
    35fa:	08 95       	ret

000035fc <_ZN10helicopter10controller13PIDController16setYIntegralGainEf>:
						
				
				
				
				
				void setYIntegralGain(float val)
    35fc:	cf 93       	push	r28
    35fe:	df 93       	push	r29
    3600:	00 d0       	rcall	.+0      	; 0x3602 <_ZN10helicopter10controller13PIDController16setYIntegralGainEf+0x6>
    3602:	00 d0       	rcall	.+0      	; 0x3604 <_ZN10helicopter10controller13PIDController16setYIntegralGainEf+0x8>
    3604:	cd b7       	in	r28, 0x3d	; 61
    3606:	de b7       	in	r29, 0x3e	; 62
    3608:	9a 83       	std	Y+2, r25	; 0x02
    360a:	89 83       	std	Y+1, r24	; 0x01
    360c:	4b 83       	std	Y+3, r20	; 0x03
    360e:	5c 83       	std	Y+4, r21	; 0x04
    3610:	6d 83       	std	Y+5, r22	; 0x05
    3612:	7e 83       	std	Y+6, r23	; 0x06
				{
					yIntegralGain = val;
    3614:	29 81       	ldd	r18, Y+1	; 0x01
    3616:	3a 81       	ldd	r19, Y+2	; 0x02
    3618:	8b 81       	ldd	r24, Y+3	; 0x03
    361a:	9c 81       	ldd	r25, Y+4	; 0x04
    361c:	ad 81       	ldd	r26, Y+5	; 0x05
    361e:	be 81       	ldd	r27, Y+6	; 0x06
    3620:	f9 01       	movw	r30, r18
    3622:	82 a7       	std	Z+42, r24	; 0x2a
    3624:	93 a7       	std	Z+43, r25	; 0x2b
    3626:	a4 a7       	std	Z+44, r26	; 0x2c
    3628:	b5 a7       	std	Z+45, r27	; 0x2d
				}
    362a:	26 96       	adiw	r28, 0x06	; 6
    362c:	0f b6       	in	r0, 0x3f	; 63
    362e:	f8 94       	cli
    3630:	de bf       	out	0x3e, r29	; 62
    3632:	0f be       	out	0x3f, r0	; 63
    3634:	cd bf       	out	0x3d, r28	; 61
    3636:	df 91       	pop	r29
    3638:	cf 91       	pop	r28
    363a:	08 95       	ret

0000363c <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf>:
				
				void setYDerivativeGain(float val)
    363c:	cf 93       	push	r28
    363e:	df 93       	push	r29
    3640:	00 d0       	rcall	.+0      	; 0x3642 <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf+0x6>
    3642:	00 d0       	rcall	.+0      	; 0x3644 <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf+0x8>
    3644:	cd b7       	in	r28, 0x3d	; 61
    3646:	de b7       	in	r29, 0x3e	; 62
    3648:	9a 83       	std	Y+2, r25	; 0x02
    364a:	89 83       	std	Y+1, r24	; 0x01
    364c:	4b 83       	std	Y+3, r20	; 0x03
    364e:	5c 83       	std	Y+4, r21	; 0x04
    3650:	6d 83       	std	Y+5, r22	; 0x05
    3652:	7e 83       	std	Y+6, r23	; 0x06
				{
					yDerivativeGain = val;
    3654:	29 81       	ldd	r18, Y+1	; 0x01
    3656:	3a 81       	ldd	r19, Y+2	; 0x02
    3658:	8b 81       	ldd	r24, Y+3	; 0x03
    365a:	9c 81       	ldd	r25, Y+4	; 0x04
    365c:	ad 81       	ldd	r26, Y+5	; 0x05
    365e:	be 81       	ldd	r27, Y+6	; 0x06
    3660:	f9 01       	movw	r30, r18
    3662:	86 a7       	std	Z+46, r24	; 0x2e
    3664:	97 a7       	std	Z+47, r25	; 0x2f
    3666:	a0 ab       	std	Z+48, r26	; 0x30
    3668:	b1 ab       	std	Z+49, r27	; 0x31
				}
    366a:	26 96       	adiw	r28, 0x06	; 6
    366c:	0f b6       	in	r0, 0x3f	; 63
    366e:	f8 94       	cli
    3670:	de bf       	out	0x3e, r29	; 62
    3672:	0f be       	out	0x3f, r0	; 63
    3674:	cd bf       	out	0x3d, r28	; 61
    3676:	df 91       	pop	r29
    3678:	cf 91       	pop	r28
    367a:	08 95       	ret

0000367c <_ZN10helicopter10controller13PIDController20setYProportionalGainEf>:
				
				void setYProportionalGain(float val)
    367c:	cf 93       	push	r28
    367e:	df 93       	push	r29
    3680:	00 d0       	rcall	.+0      	; 0x3682 <_ZN10helicopter10controller13PIDController20setYProportionalGainEf+0x6>
    3682:	00 d0       	rcall	.+0      	; 0x3684 <_ZN10helicopter10controller13PIDController20setYProportionalGainEf+0x8>
    3684:	cd b7       	in	r28, 0x3d	; 61
    3686:	de b7       	in	r29, 0x3e	; 62
    3688:	9a 83       	std	Y+2, r25	; 0x02
    368a:	89 83       	std	Y+1, r24	; 0x01
    368c:	4b 83       	std	Y+3, r20	; 0x03
    368e:	5c 83       	std	Y+4, r21	; 0x04
    3690:	6d 83       	std	Y+5, r22	; 0x05
    3692:	7e 83       	std	Y+6, r23	; 0x06
				{
					yProportionalGain = val;
    3694:	29 81       	ldd	r18, Y+1	; 0x01
    3696:	3a 81       	ldd	r19, Y+2	; 0x02
    3698:	8b 81       	ldd	r24, Y+3	; 0x03
    369a:	9c 81       	ldd	r25, Y+4	; 0x04
    369c:	ad 81       	ldd	r26, Y+5	; 0x05
    369e:	be 81       	ldd	r27, Y+6	; 0x06
    36a0:	f9 01       	movw	r30, r18
    36a2:	82 ab       	std	Z+50, r24	; 0x32
    36a4:	93 ab       	std	Z+51, r25	; 0x33
    36a6:	a4 ab       	std	Z+52, r26	; 0x34
    36a8:	b5 ab       	std	Z+53, r27	; 0x35
				}
    36aa:	26 96       	adiw	r28, 0x06	; 6
    36ac:	0f b6       	in	r0, 0x3f	; 63
    36ae:	f8 94       	cli
    36b0:	de bf       	out	0x3e, r29	; 62
    36b2:	0f be       	out	0x3f, r0	; 63
    36b4:	cd bf       	out	0x3d, r28	; 61
    36b6:	df 91       	pop	r29
    36b8:	cf 91       	pop	r28
    36ba:	08 95       	ret

000036bc <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf>:
				
				void setYAntiWindupGain(float val)
    36bc:	cf 93       	push	r28
    36be:	df 93       	push	r29
    36c0:	00 d0       	rcall	.+0      	; 0x36c2 <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf+0x6>
    36c2:	00 d0       	rcall	.+0      	; 0x36c4 <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf+0x8>
    36c4:	cd b7       	in	r28, 0x3d	; 61
    36c6:	de b7       	in	r29, 0x3e	; 62
    36c8:	9a 83       	std	Y+2, r25	; 0x02
    36ca:	89 83       	std	Y+1, r24	; 0x01
    36cc:	4b 83       	std	Y+3, r20	; 0x03
    36ce:	5c 83       	std	Y+4, r21	; 0x04
    36d0:	6d 83       	std	Y+5, r22	; 0x05
    36d2:	7e 83       	std	Y+6, r23	; 0x06
				{
					yAntiWindupGain = val;
    36d4:	29 81       	ldd	r18, Y+1	; 0x01
    36d6:	3a 81       	ldd	r19, Y+2	; 0x02
    36d8:	8b 81       	ldd	r24, Y+3	; 0x03
    36da:	9c 81       	ldd	r25, Y+4	; 0x04
    36dc:	ad 81       	ldd	r26, Y+5	; 0x05
    36de:	be 81       	ldd	r27, Y+6	; 0x06
    36e0:	f9 01       	movw	r30, r18
    36e2:	86 ab       	std	Z+54, r24	; 0x36
    36e4:	97 ab       	std	Z+55, r25	; 0x37
    36e6:	a0 af       	std	Z+56, r26	; 0x38
    36e8:	b1 af       	std	Z+57, r27	; 0x39
				}
    36ea:	26 96       	adiw	r28, 0x06	; 6
    36ec:	0f b6       	in	r0, 0x3f	; 63
    36ee:	f8 94       	cli
    36f0:	de bf       	out	0x3e, r29	; 62
    36f2:	0f be       	out	0x3f, r0	; 63
    36f4:	cd bf       	out	0x3d, r28	; 61
    36f6:	df 91       	pop	r29
    36f8:	cf 91       	pop	r28
    36fa:	08 95       	ret

000036fc <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf>:
				
				void setLateralInnerLoopGain(float val)
    36fc:	cf 93       	push	r28
    36fe:	df 93       	push	r29
    3700:	00 d0       	rcall	.+0      	; 0x3702 <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf+0x6>
    3702:	00 d0       	rcall	.+0      	; 0x3704 <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf+0x8>
    3704:	cd b7       	in	r28, 0x3d	; 61
    3706:	de b7       	in	r29, 0x3e	; 62
    3708:	9a 83       	std	Y+2, r25	; 0x02
    370a:	89 83       	std	Y+1, r24	; 0x01
    370c:	4b 83       	std	Y+3, r20	; 0x03
    370e:	5c 83       	std	Y+4, r21	; 0x04
    3710:	6d 83       	std	Y+5, r22	; 0x05
    3712:	7e 83       	std	Y+6, r23	; 0x06
				{
					lateralInnerLoopGain = val;
    3714:	29 81       	ldd	r18, Y+1	; 0x01
    3716:	3a 81       	ldd	r19, Y+2	; 0x02
    3718:	8b 81       	ldd	r24, Y+3	; 0x03
    371a:	9c 81       	ldd	r25, Y+4	; 0x04
    371c:	ad 81       	ldd	r26, Y+5	; 0x05
    371e:	be 81       	ldd	r27, Y+6	; 0x06
    3720:	f9 01       	movw	r30, r18
    3722:	82 af       	std	Z+58, r24	; 0x3a
    3724:	93 af       	std	Z+59, r25	; 0x3b
    3726:	a4 af       	std	Z+60, r26	; 0x3c
    3728:	b5 af       	std	Z+61, r27	; 0x3d
				}
    372a:	26 96       	adiw	r28, 0x06	; 6
    372c:	0f b6       	in	r0, 0x3f	; 63
    372e:	f8 94       	cli
    3730:	de bf       	out	0x3e, r29	; 62
    3732:	0f be       	out	0x3f, r0	; 63
    3734:	cd bf       	out	0x3d, r28	; 61
    3736:	df 91       	pop	r29
    3738:	cf 91       	pop	r28
    373a:	08 95       	ret

0000373c <_ZN10helicopter10controller13PIDController26setRollAngularVelocityGainEf>:
				
				void setRollAngularVelocityGain(float val)
    373c:	cf 93       	push	r28
    373e:	df 93       	push	r29
    3740:	00 d0       	rcall	.+0      	; 0x3742 <_ZN10helicopter10controller13PIDController26setRollAngularVelocityGainEf+0x6>
    3742:	00 d0       	rcall	.+0      	; 0x3744 <_ZN10helicopter10controller13PIDController26setRollAngularVelocityGainEf+0x8>
    3744:	cd b7       	in	r28, 0x3d	; 61
    3746:	de b7       	in	r29, 0x3e	; 62
    3748:	9a 83       	std	Y+2, r25	; 0x02
    374a:	89 83       	std	Y+1, r24	; 0x01
    374c:	4b 83       	std	Y+3, r20	; 0x03
    374e:	5c 83       	std	Y+4, r21	; 0x04
    3750:	6d 83       	std	Y+5, r22	; 0x05
    3752:	7e 83       	std	Y+6, r23	; 0x06
				{
					rollAngularVelocityGain = val;
    3754:	89 81       	ldd	r24, Y+1	; 0x01
    3756:	9a 81       	ldd	r25, Y+2	; 0x02
    3758:	9c 01       	movw	r18, r24
    375a:	22 5c       	subi	r18, 0xC2	; 194
    375c:	3f 4f       	sbci	r19, 0xFF	; 255
    375e:	8b 81       	ldd	r24, Y+3	; 0x03
    3760:	9c 81       	ldd	r25, Y+4	; 0x04
    3762:	ad 81       	ldd	r26, Y+5	; 0x05
    3764:	be 81       	ldd	r27, Y+6	; 0x06
    3766:	f9 01       	movw	r30, r18
    3768:	80 83       	st	Z, r24
    376a:	91 83       	std	Z+1, r25	; 0x01
    376c:	a2 83       	std	Z+2, r26	; 0x02
    376e:	b3 83       	std	Z+3, r27	; 0x03
				}
    3770:	26 96       	adiw	r28, 0x06	; 6
    3772:	0f b6       	in	r0, 0x3f	; 63
    3774:	f8 94       	cli
    3776:	de bf       	out	0x3e, r29	; 62
    3778:	0f be       	out	0x3f, r0	; 63
    377a:	cd bf       	out	0x3d, r28	; 61
    377c:	df 91       	pop	r29
    377e:	cf 91       	pop	r28
    3780:	08 95       	ret

00003782 <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf>:
				
				void setMinLateralServoControlValue(float val)
    3782:	cf 93       	push	r28
    3784:	df 93       	push	r29
    3786:	00 d0       	rcall	.+0      	; 0x3788 <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf+0x6>
    3788:	00 d0       	rcall	.+0      	; 0x378a <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf+0x8>
    378a:	cd b7       	in	r28, 0x3d	; 61
    378c:	de b7       	in	r29, 0x3e	; 62
    378e:	9a 83       	std	Y+2, r25	; 0x02
    3790:	89 83       	std	Y+1, r24	; 0x01
    3792:	4b 83       	std	Y+3, r20	; 0x03
    3794:	5c 83       	std	Y+4, r21	; 0x04
    3796:	6d 83       	std	Y+5, r22	; 0x05
    3798:	7e 83       	std	Y+6, r23	; 0x06
				{
					minLateralServoControlValue = val;
    379a:	89 81       	ldd	r24, Y+1	; 0x01
    379c:	9a 81       	ldd	r25, Y+2	; 0x02
    379e:	9c 01       	movw	r18, r24
    37a0:	2e 59       	subi	r18, 0x9E	; 158
    37a2:	3f 4f       	sbci	r19, 0xFF	; 255
    37a4:	8b 81       	ldd	r24, Y+3	; 0x03
    37a6:	9c 81       	ldd	r25, Y+4	; 0x04
    37a8:	ad 81       	ldd	r26, Y+5	; 0x05
    37aa:	be 81       	ldd	r27, Y+6	; 0x06
    37ac:	f9 01       	movw	r30, r18
    37ae:	80 83       	st	Z, r24
    37b0:	91 83       	std	Z+1, r25	; 0x01
    37b2:	a2 83       	std	Z+2, r26	; 0x02
    37b4:	b3 83       	std	Z+3, r27	; 0x03
				}
    37b6:	26 96       	adiw	r28, 0x06	; 6
    37b8:	0f b6       	in	r0, 0x3f	; 63
    37ba:	f8 94       	cli
    37bc:	de bf       	out	0x3e, r29	; 62
    37be:	0f be       	out	0x3f, r0	; 63
    37c0:	cd bf       	out	0x3d, r28	; 61
    37c2:	df 91       	pop	r29
    37c4:	cf 91       	pop	r28
    37c6:	08 95       	ret

000037c8 <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf>:
				
				void setMaxLateralServoControlValue(float val)
    37c8:	cf 93       	push	r28
    37ca:	df 93       	push	r29
    37cc:	00 d0       	rcall	.+0      	; 0x37ce <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf+0x6>
    37ce:	00 d0       	rcall	.+0      	; 0x37d0 <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf+0x8>
    37d0:	cd b7       	in	r28, 0x3d	; 61
    37d2:	de b7       	in	r29, 0x3e	; 62
    37d4:	9a 83       	std	Y+2, r25	; 0x02
    37d6:	89 83       	std	Y+1, r24	; 0x01
    37d8:	4b 83       	std	Y+3, r20	; 0x03
    37da:	5c 83       	std	Y+4, r21	; 0x04
    37dc:	6d 83       	std	Y+5, r22	; 0x05
    37de:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxLateralServoControlValue = val;
    37e0:	89 81       	ldd	r24, Y+1	; 0x01
    37e2:	9a 81       	ldd	r25, Y+2	; 0x02
    37e4:	9c 01       	movw	r18, r24
    37e6:	2a 59       	subi	r18, 0x9A	; 154
    37e8:	3f 4f       	sbci	r19, 0xFF	; 255
    37ea:	8b 81       	ldd	r24, Y+3	; 0x03
    37ec:	9c 81       	ldd	r25, Y+4	; 0x04
    37ee:	ad 81       	ldd	r26, Y+5	; 0x05
    37f0:	be 81       	ldd	r27, Y+6	; 0x06
    37f2:	f9 01       	movw	r30, r18
    37f4:	80 83       	st	Z, r24
    37f6:	91 83       	std	Z+1, r25	; 0x01
    37f8:	a2 83       	std	Z+2, r26	; 0x02
    37fa:	b3 83       	std	Z+3, r27	; 0x03
				}
    37fc:	26 96       	adiw	r28, 0x06	; 6
    37fe:	0f b6       	in	r0, 0x3f	; 63
    3800:	f8 94       	cli
    3802:	de bf       	out	0x3e, r29	; 62
    3804:	0f be       	out	0x3f, r0	; 63
    3806:	cd bf       	out	0x3d, r28	; 61
    3808:	df 91       	pop	r29
    380a:	cf 91       	pop	r28
    380c:	08 95       	ret

0000380e <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf>:
				void setZAntiWindupGain(float val)
				{
					zAntiWindupGain = val;
				}
				
				void setMinMainRotorServoControlValue(float val)
    380e:	cf 93       	push	r28
    3810:	df 93       	push	r29
    3812:	00 d0       	rcall	.+0      	; 0x3814 <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf+0x6>
    3814:	00 d0       	rcall	.+0      	; 0x3816 <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf+0x8>
    3816:	cd b7       	in	r28, 0x3d	; 61
    3818:	de b7       	in	r29, 0x3e	; 62
    381a:	9a 83       	std	Y+2, r25	; 0x02
    381c:	89 83       	std	Y+1, r24	; 0x01
    381e:	4b 83       	std	Y+3, r20	; 0x03
    3820:	5c 83       	std	Y+4, r21	; 0x04
    3822:	6d 83       	std	Y+5, r22	; 0x05
    3824:	7e 83       	std	Y+6, r23	; 0x06
				{
					minMainRotorServoControlValue = val;
    3826:	89 81       	ldd	r24, Y+1	; 0x01
    3828:	9a 81       	ldd	r25, Y+2	; 0x02
    382a:	9c 01       	movw	r18, r24
    382c:	26 59       	subi	r18, 0x96	; 150
    382e:	3f 4f       	sbci	r19, 0xFF	; 255
    3830:	8b 81       	ldd	r24, Y+3	; 0x03
    3832:	9c 81       	ldd	r25, Y+4	; 0x04
    3834:	ad 81       	ldd	r26, Y+5	; 0x05
    3836:	be 81       	ldd	r27, Y+6	; 0x06
    3838:	f9 01       	movw	r30, r18
    383a:	80 83       	st	Z, r24
    383c:	91 83       	std	Z+1, r25	; 0x01
    383e:	a2 83       	std	Z+2, r26	; 0x02
    3840:	b3 83       	std	Z+3, r27	; 0x03
				}
    3842:	26 96       	adiw	r28, 0x06	; 6
    3844:	0f b6       	in	r0, 0x3f	; 63
    3846:	f8 94       	cli
    3848:	de bf       	out	0x3e, r29	; 62
    384a:	0f be       	out	0x3f, r0	; 63
    384c:	cd bf       	out	0x3d, r28	; 61
    384e:	df 91       	pop	r29
    3850:	cf 91       	pop	r28
    3852:	08 95       	ret

00003854 <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf>:
				
				void setMaxMainRotorServoControlValue(float val)
    3854:	cf 93       	push	r28
    3856:	df 93       	push	r29
    3858:	00 d0       	rcall	.+0      	; 0x385a <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf+0x6>
    385a:	00 d0       	rcall	.+0      	; 0x385c <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf+0x8>
    385c:	cd b7       	in	r28, 0x3d	; 61
    385e:	de b7       	in	r29, 0x3e	; 62
    3860:	9a 83       	std	Y+2, r25	; 0x02
    3862:	89 83       	std	Y+1, r24	; 0x01
    3864:	4b 83       	std	Y+3, r20	; 0x03
    3866:	5c 83       	std	Y+4, r21	; 0x04
    3868:	6d 83       	std	Y+5, r22	; 0x05
    386a:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxMainRotorServoControlValue = val;
    386c:	89 81       	ldd	r24, Y+1	; 0x01
    386e:	9a 81       	ldd	r25, Y+2	; 0x02
    3870:	9c 01       	movw	r18, r24
    3872:	22 59       	subi	r18, 0x92	; 146
    3874:	3f 4f       	sbci	r19, 0xFF	; 255
    3876:	8b 81       	ldd	r24, Y+3	; 0x03
    3878:	9c 81       	ldd	r25, Y+4	; 0x04
    387a:	ad 81       	ldd	r26, Y+5	; 0x05
    387c:	be 81       	ldd	r27, Y+6	; 0x06
    387e:	f9 01       	movw	r30, r18
    3880:	80 83       	st	Z, r24
    3882:	91 83       	std	Z+1, r25	; 0x01
    3884:	a2 83       	std	Z+2, r26	; 0x02
    3886:	b3 83       	std	Z+3, r27	; 0x03
				}
    3888:	26 96       	adiw	r28, 0x06	; 6
    388a:	0f b6       	in	r0, 0x3f	; 63
    388c:	f8 94       	cli
    388e:	de bf       	out	0x3e, r29	; 62
    3890:	0f be       	out	0x3f, r0	; 63
    3892:	cd bf       	out	0x3d, r28	; 61
    3894:	df 91       	pop	r29
    3896:	cf 91       	pop	r28
    3898:	08 95       	ret

0000389a <_ZN10helicopter10controller13PIDController25setMaxRollSetpointDegreesEf>:


				void setMaxRollSetpointDegrees(float val)
    389a:	cf 93       	push	r28
    389c:	df 93       	push	r29
    389e:	00 d0       	rcall	.+0      	; 0x38a0 <_ZN10helicopter10controller13PIDController25setMaxRollSetpointDegreesEf+0x6>
    38a0:	00 d0       	rcall	.+0      	; 0x38a2 <_ZN10helicopter10controller13PIDController25setMaxRollSetpointDegreesEf+0x8>
    38a2:	cd b7       	in	r28, 0x3d	; 61
    38a4:	de b7       	in	r29, 0x3e	; 62
    38a6:	9a 83       	std	Y+2, r25	; 0x02
    38a8:	89 83       	std	Y+1, r24	; 0x01
    38aa:	4b 83       	std	Y+3, r20	; 0x03
    38ac:	5c 83       	std	Y+4, r21	; 0x04
    38ae:	6d 83       	std	Y+5, r22	; 0x05
    38b0:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxRollSetpointDegrees = val;
    38b2:	89 81       	ldd	r24, Y+1	; 0x01
    38b4:	9a 81       	ldd	r25, Y+2	; 0x02
    38b6:	9c 01       	movw	r18, r24
    38b8:	22 58       	subi	r18, 0x82	; 130
    38ba:	3f 4f       	sbci	r19, 0xFF	; 255
    38bc:	8b 81       	ldd	r24, Y+3	; 0x03
    38be:	9c 81       	ldd	r25, Y+4	; 0x04
    38c0:	ad 81       	ldd	r26, Y+5	; 0x05
    38c2:	be 81       	ldd	r27, Y+6	; 0x06
    38c4:	f9 01       	movw	r30, r18
    38c6:	80 83       	st	Z, r24
    38c8:	91 83       	std	Z+1, r25	; 0x01
    38ca:	a2 83       	std	Z+2, r26	; 0x02
    38cc:	b3 83       	std	Z+3, r27	; 0x03
				}
    38ce:	26 96       	adiw	r28, 0x06	; 6
    38d0:	0f b6       	in	r0, 0x3f	; 63
    38d2:	f8 94       	cli
    38d4:	de bf       	out	0x3e, r29	; 62
    38d6:	0f be       	out	0x3f, r0	; 63
    38d8:	cd bf       	out	0x3d, r28	; 61
    38da:	df 91       	pop	r29
    38dc:	cf 91       	pop	r28
    38de:	08 95       	ret

000038e0 <_ZN10helicopter10controller13PIDController25setMinRollSetpointDegreesEf>:
				
				void setMinRollSetpointDegrees(float val)
    38e0:	cf 93       	push	r28
    38e2:	df 93       	push	r29
    38e4:	00 d0       	rcall	.+0      	; 0x38e6 <_ZN10helicopter10controller13PIDController25setMinRollSetpointDegreesEf+0x6>
    38e6:	00 d0       	rcall	.+0      	; 0x38e8 <_ZN10helicopter10controller13PIDController25setMinRollSetpointDegreesEf+0x8>
    38e8:	cd b7       	in	r28, 0x3d	; 61
    38ea:	de b7       	in	r29, 0x3e	; 62
    38ec:	9a 83       	std	Y+2, r25	; 0x02
    38ee:	89 83       	std	Y+1, r24	; 0x01
    38f0:	4b 83       	std	Y+3, r20	; 0x03
    38f2:	5c 83       	std	Y+4, r21	; 0x04
    38f4:	6d 83       	std	Y+5, r22	; 0x05
    38f6:	7e 83       	std	Y+6, r23	; 0x06
				{
					minRollSetpointDegrees = val;
    38f8:	89 81       	ldd	r24, Y+1	; 0x01
    38fa:	9a 81       	ldd	r25, Y+2	; 0x02
    38fc:	9c 01       	movw	r18, r24
    38fe:	26 58       	subi	r18, 0x86	; 134
    3900:	3f 4f       	sbci	r19, 0xFF	; 255
    3902:	8b 81       	ldd	r24, Y+3	; 0x03
    3904:	9c 81       	ldd	r25, Y+4	; 0x04
    3906:	ad 81       	ldd	r26, Y+5	; 0x05
    3908:	be 81       	ldd	r27, Y+6	; 0x06
    390a:	f9 01       	movw	r30, r18
    390c:	80 83       	st	Z, r24
    390e:	91 83       	std	Z+1, r25	; 0x01
    3910:	a2 83       	std	Z+2, r26	; 0x02
    3912:	b3 83       	std	Z+3, r27	; 0x03
				}
    3914:	26 96       	adiw	r28, 0x06	; 6
    3916:	0f b6       	in	r0, 0x3f	; 63
    3918:	f8 94       	cli
    391a:	de bf       	out	0x3e, r29	; 62
    391c:	0f be       	out	0x3f, r0	; 63
    391e:	cd bf       	out	0x3d, r28	; 61
    3920:	df 91       	pop	r29
    3922:	cf 91       	pop	r28
    3924:	08 95       	ret

00003926 <_ZN10helicopter10controller13PIDController26setMaxPitchSetpointDegreesEf>:
				
				void setMaxPitchSetpointDegrees(float val)
    3926:	cf 93       	push	r28
    3928:	df 93       	push	r29
    392a:	00 d0       	rcall	.+0      	; 0x392c <_ZN10helicopter10controller13PIDController26setMaxPitchSetpointDegreesEf+0x6>
    392c:	00 d0       	rcall	.+0      	; 0x392e <_ZN10helicopter10controller13PIDController26setMaxPitchSetpointDegreesEf+0x8>
    392e:	cd b7       	in	r28, 0x3d	; 61
    3930:	de b7       	in	r29, 0x3e	; 62
    3932:	9a 83       	std	Y+2, r25	; 0x02
    3934:	89 83       	std	Y+1, r24	; 0x01
    3936:	4b 83       	std	Y+3, r20	; 0x03
    3938:	5c 83       	std	Y+4, r21	; 0x04
    393a:	6d 83       	std	Y+5, r22	; 0x05
    393c:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxPitchSetpointDegrees = val;
    393e:	89 81       	ldd	r24, Y+1	; 0x01
    3940:	9a 81       	ldd	r25, Y+2	; 0x02
    3942:	9c 01       	movw	r18, r24
    3944:	2a 58       	subi	r18, 0x8A	; 138
    3946:	3f 4f       	sbci	r19, 0xFF	; 255
    3948:	8b 81       	ldd	r24, Y+3	; 0x03
    394a:	9c 81       	ldd	r25, Y+4	; 0x04
    394c:	ad 81       	ldd	r26, Y+5	; 0x05
    394e:	be 81       	ldd	r27, Y+6	; 0x06
    3950:	f9 01       	movw	r30, r18
    3952:	80 83       	st	Z, r24
    3954:	91 83       	std	Z+1, r25	; 0x01
    3956:	a2 83       	std	Z+2, r26	; 0x02
    3958:	b3 83       	std	Z+3, r27	; 0x03
				}
    395a:	26 96       	adiw	r28, 0x06	; 6
    395c:	0f b6       	in	r0, 0x3f	; 63
    395e:	f8 94       	cli
    3960:	de bf       	out	0x3e, r29	; 62
    3962:	0f be       	out	0x3f, r0	; 63
    3964:	cd bf       	out	0x3d, r28	; 61
    3966:	df 91       	pop	r29
    3968:	cf 91       	pop	r28
    396a:	08 95       	ret

0000396c <_ZN10helicopter10controller13PIDController26setMinPitchSetpointDegreesEf>:
				
				void setMinPitchSetpointDegrees(float val)
    396c:	cf 93       	push	r28
    396e:	df 93       	push	r29
    3970:	00 d0       	rcall	.+0      	; 0x3972 <_ZN10helicopter10controller13PIDController26setMinPitchSetpointDegreesEf+0x6>
    3972:	00 d0       	rcall	.+0      	; 0x3974 <_ZN10helicopter10controller13PIDController26setMinPitchSetpointDegreesEf+0x8>
    3974:	cd b7       	in	r28, 0x3d	; 61
    3976:	de b7       	in	r29, 0x3e	; 62
    3978:	9a 83       	std	Y+2, r25	; 0x02
    397a:	89 83       	std	Y+1, r24	; 0x01
    397c:	4b 83       	std	Y+3, r20	; 0x03
    397e:	5c 83       	std	Y+4, r21	; 0x04
    3980:	6d 83       	std	Y+5, r22	; 0x05
    3982:	7e 83       	std	Y+6, r23	; 0x06
				{	
					minPitchSetpointDegrees = val;
    3984:	89 81       	ldd	r24, Y+1	; 0x01
    3986:	9a 81       	ldd	r25, Y+2	; 0x02
    3988:	9c 01       	movw	r18, r24
    398a:	2e 58       	subi	r18, 0x8E	; 142
    398c:	3f 4f       	sbci	r19, 0xFF	; 255
    398e:	8b 81       	ldd	r24, Y+3	; 0x03
    3990:	9c 81       	ldd	r25, Y+4	; 0x04
    3992:	ad 81       	ldd	r26, Y+5	; 0x05
    3994:	be 81       	ldd	r27, Y+6	; 0x06
    3996:	f9 01       	movw	r30, r18
    3998:	80 83       	st	Z, r24
    399a:	91 83       	std	Z+1, r25	; 0x01
    399c:	a2 83       	std	Z+2, r26	; 0x02
    399e:	b3 83       	std	Z+3, r27	; 0x03
				}				
    39a0:	26 96       	adiw	r28, 0x06	; 6
    39a2:	0f b6       	in	r0, 0x3f	; 63
    39a4:	f8 94       	cli
    39a6:	de bf       	out	0x3e, r29	; 62
    39a8:	0f be       	out	0x3f, r0	; 63
    39aa:	cd bf       	out	0x3d, r28	; 61
    39ac:	df 91       	pop	r29
    39ae:	cf 91       	pop	r28
    39b0:	08 95       	ret

000039b2 <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf>:
				
				
				/**
				 * Gain value applied to the yaw proportional error
				 */
				void setYawProportionalGain(float yawProportionalGain)
    39b2:	cf 93       	push	r28
    39b4:	df 93       	push	r29
    39b6:	00 d0       	rcall	.+0      	; 0x39b8 <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf+0x6>
    39b8:	00 d0       	rcall	.+0      	; 0x39ba <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf+0x8>
    39ba:	cd b7       	in	r28, 0x3d	; 61
    39bc:	de b7       	in	r29, 0x3e	; 62
    39be:	9a 83       	std	Y+2, r25	; 0x02
    39c0:	89 83       	std	Y+1, r24	; 0x01
    39c2:	4b 83       	std	Y+3, r20	; 0x03
    39c4:	5c 83       	std	Y+4, r21	; 0x04
    39c6:	6d 83       	std	Y+5, r22	; 0x05
    39c8:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawProportionalGain = yawProportionalGain;
    39ca:	29 81       	ldd	r18, Y+1	; 0x01
    39cc:	3a 81       	ldd	r19, Y+2	; 0x02
    39ce:	8b 81       	ldd	r24, Y+3	; 0x03
    39d0:	9c 81       	ldd	r25, Y+4	; 0x04
    39d2:	ad 81       	ldd	r26, Y+5	; 0x05
    39d4:	be 81       	ldd	r27, Y+6	; 0x06
    39d6:	f9 01       	movw	r30, r18
    39d8:	82 87       	std	Z+10, r24	; 0x0a
    39da:	93 87       	std	Z+11, r25	; 0x0b
    39dc:	a4 87       	std	Z+12, r26	; 0x0c
    39de:	b5 87       	std	Z+13, r27	; 0x0d
				}
    39e0:	26 96       	adiw	r28, 0x06	; 6
    39e2:	0f b6       	in	r0, 0x3f	; 63
    39e4:	f8 94       	cli
    39e6:	de bf       	out	0x3e, r29	; 62
    39e8:	0f be       	out	0x3f, r0	; 63
    39ea:	cd bf       	out	0x3d, r28	; 61
    39ec:	df 91       	pop	r29
    39ee:	cf 91       	pop	r28
    39f0:	08 95       	ret

000039f2 <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf>:
				
				/**
				 * Gain value applied to the yaw integral
				 */
				void setYawIntegralGain(float yawIntegralGain)
    39f2:	cf 93       	push	r28
    39f4:	df 93       	push	r29
    39f6:	00 d0       	rcall	.+0      	; 0x39f8 <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf+0x6>
    39f8:	00 d0       	rcall	.+0      	; 0x39fa <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf+0x8>
    39fa:	cd b7       	in	r28, 0x3d	; 61
    39fc:	de b7       	in	r29, 0x3e	; 62
    39fe:	9a 83       	std	Y+2, r25	; 0x02
    3a00:	89 83       	std	Y+1, r24	; 0x01
    3a02:	4b 83       	std	Y+3, r20	; 0x03
    3a04:	5c 83       	std	Y+4, r21	; 0x04
    3a06:	6d 83       	std	Y+5, r22	; 0x05
    3a08:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawIntegralGain = yawIntegralGain;
    3a0a:	29 81       	ldd	r18, Y+1	; 0x01
    3a0c:	3a 81       	ldd	r19, Y+2	; 0x02
    3a0e:	8b 81       	ldd	r24, Y+3	; 0x03
    3a10:	9c 81       	ldd	r25, Y+4	; 0x04
    3a12:	ad 81       	ldd	r26, Y+5	; 0x05
    3a14:	be 81       	ldd	r27, Y+6	; 0x06
    3a16:	f9 01       	movw	r30, r18
    3a18:	82 83       	std	Z+2, r24	; 0x02
    3a1a:	93 83       	std	Z+3, r25	; 0x03
    3a1c:	a4 83       	std	Z+4, r26	; 0x04
    3a1e:	b5 83       	std	Z+5, r27	; 0x05
				}
    3a20:	26 96       	adiw	r28, 0x06	; 6
    3a22:	0f b6       	in	r0, 0x3f	; 63
    3a24:	f8 94       	cli
    3a26:	de bf       	out	0x3e, r29	; 62
    3a28:	0f be       	out	0x3f, r0	; 63
    3a2a:	cd bf       	out	0x3d, r28	; 61
    3a2c:	df 91       	pop	r29
    3a2e:	cf 91       	pop	r28
    3a30:	08 95       	ret

00003a32 <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf>:
				
				/**
				 * Gain value applied to the derivative
				 */
				void setYawDerivativeGain(float yawDerivativeGain)
    3a32:	cf 93       	push	r28
    3a34:	df 93       	push	r29
    3a36:	00 d0       	rcall	.+0      	; 0x3a38 <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf+0x6>
    3a38:	00 d0       	rcall	.+0      	; 0x3a3a <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf+0x8>
    3a3a:	cd b7       	in	r28, 0x3d	; 61
    3a3c:	de b7       	in	r29, 0x3e	; 62
    3a3e:	9a 83       	std	Y+2, r25	; 0x02
    3a40:	89 83       	std	Y+1, r24	; 0x01
    3a42:	4b 83       	std	Y+3, r20	; 0x03
    3a44:	5c 83       	std	Y+4, r21	; 0x04
    3a46:	6d 83       	std	Y+5, r22	; 0x05
    3a48:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawDerivativeGain = yawDerivativeGain;
    3a4a:	29 81       	ldd	r18, Y+1	; 0x01
    3a4c:	3a 81       	ldd	r19, Y+2	; 0x02
    3a4e:	8b 81       	ldd	r24, Y+3	; 0x03
    3a50:	9c 81       	ldd	r25, Y+4	; 0x04
    3a52:	ad 81       	ldd	r26, Y+5	; 0x05
    3a54:	be 81       	ldd	r27, Y+6	; 0x06
    3a56:	f9 01       	movw	r30, r18
    3a58:	86 83       	std	Z+6, r24	; 0x06
    3a5a:	97 83       	std	Z+7, r25	; 0x07
    3a5c:	a0 87       	std	Z+8, r26	; 0x08
    3a5e:	b1 87       	std	Z+9, r27	; 0x09
				}
    3a60:	26 96       	adiw	r28, 0x06	; 6
    3a62:	0f b6       	in	r0, 0x3f	; 63
    3a64:	f8 94       	cli
    3a66:	de bf       	out	0x3e, r29	; 62
    3a68:	0f be       	out	0x3f, r0	; 63
    3a6a:	cd bf       	out	0x3d, r28	; 61
    3a6c:	df 91       	pop	r29
    3a6e:	cf 91       	pop	r28
    3a70:	08 95       	ret

00003a72 <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf>:
				
				/**
				 * The number of seconds between pid controller updates. This number
				 * should generally be less than 1. Like .05 for a 20 hz rate.
				 */
				void setIntervalPeriodSecs(float intervalPeriodSecs)
    3a72:	cf 93       	push	r28
    3a74:	df 93       	push	r29
    3a76:	00 d0       	rcall	.+0      	; 0x3a78 <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf+0x6>
    3a78:	00 d0       	rcall	.+0      	; 0x3a7a <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf+0x8>
    3a7a:	cd b7       	in	r28, 0x3d	; 61
    3a7c:	de b7       	in	r29, 0x3e	; 62
    3a7e:	9a 83       	std	Y+2, r25	; 0x02
    3a80:	89 83       	std	Y+1, r24	; 0x01
    3a82:	4b 83       	std	Y+3, r20	; 0x03
    3a84:	5c 83       	std	Y+4, r21	; 0x04
    3a86:	6d 83       	std	Y+5, r22	; 0x05
    3a88:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->intervalPeriodSecs = intervalPeriodSecs;
    3a8a:	89 81       	ldd	r24, Y+1	; 0x01
    3a8c:	9a 81       	ldd	r25, Y+2	; 0x02
    3a8e:	9c 01       	movw	r18, r24
    3a90:	2e 57       	subi	r18, 0x7E	; 126
    3a92:	3f 4f       	sbci	r19, 0xFF	; 255
    3a94:	8b 81       	ldd	r24, Y+3	; 0x03
    3a96:	9c 81       	ldd	r25, Y+4	; 0x04
    3a98:	ad 81       	ldd	r26, Y+5	; 0x05
    3a9a:	be 81       	ldd	r27, Y+6	; 0x06
    3a9c:	f9 01       	movw	r30, r18
    3a9e:	80 83       	st	Z, r24
    3aa0:	91 83       	std	Z+1, r25	; 0x01
    3aa2:	a2 83       	std	Z+2, r26	; 0x02
    3aa4:	b3 83       	std	Z+3, r27	; 0x03
				}
    3aa6:	26 96       	adiw	r28, 0x06	; 6
    3aa8:	0f b6       	in	r0, 0x3f	; 63
    3aaa:	f8 94       	cli
    3aac:	de bf       	out	0x3e, r29	; 62
    3aae:	0f be       	out	0x3f, r0	; 63
    3ab0:	cd bf       	out	0x3d, r28	; 61
    3ab2:	df 91       	pop	r29
    3ab4:	cf 91       	pop	r28
    3ab6:	08 95       	ret

00003ab8 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf>:
				 * keeps increasing despite the helicopter already at the maximum possible control values.
				 * @param yawAntiWindupGain The gain value which represents how fast the integral will
				 * go back to 0 when the servos are saturated.
				 * Some simple rule that have been suggested for the tracking time are ~ Tt = TiTd and Tt = (Ti + Td)/2.
				 */
				void setYawAntiWindupGain(float yawAntiWindupGain)
    3ab8:	cf 93       	push	r28
    3aba:	df 93       	push	r29
    3abc:	00 d0       	rcall	.+0      	; 0x3abe <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf+0x6>
    3abe:	00 d0       	rcall	.+0      	; 0x3ac0 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf+0x8>
    3ac0:	cd b7       	in	r28, 0x3d	; 61
    3ac2:	de b7       	in	r29, 0x3e	; 62
    3ac4:	9a 83       	std	Y+2, r25	; 0x02
    3ac6:	89 83       	std	Y+1, r24	; 0x01
    3ac8:	4b 83       	std	Y+3, r20	; 0x03
    3aca:	5c 83       	std	Y+4, r21	; 0x04
    3acc:	6d 83       	std	Y+5, r22	; 0x05
    3ace:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawAntiWindupGain = yawAntiWindupGain;
    3ad0:	29 81       	ldd	r18, Y+1	; 0x01
    3ad2:	3a 81       	ldd	r19, Y+2	; 0x02
    3ad4:	8b 81       	ldd	r24, Y+3	; 0x03
    3ad6:	9c 81       	ldd	r25, Y+4	; 0x04
    3ad8:	ad 81       	ldd	r26, Y+5	; 0x05
    3ada:	be 81       	ldd	r27, Y+6	; 0x06
    3adc:	f9 01       	movw	r30, r18
    3ade:	86 87       	std	Z+14, r24	; 0x0e
    3ae0:	97 87       	std	Z+15, r25	; 0x0f
    3ae2:	a0 8b       	std	Z+16, r26	; 0x10
    3ae4:	b1 8b       	std	Z+17, r27	; 0x11
				}
    3ae6:	26 96       	adiw	r28, 0x06	; 6
    3ae8:	0f b6       	in	r0, 0x3f	; 63
    3aea:	f8 94       	cli
    3aec:	de bf       	out	0x3e, r29	; 62
    3aee:	0f be       	out	0x3f, r0	; 63
    3af0:	cd bf       	out	0x3d, r28	; 61
    3af2:	df 91       	pop	r29
    3af4:	cf 91       	pop	r28
    3af6:	08 95       	ret

00003af8 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf>:
				/**
				 * The minimum control value that the yaw actuators can be set too. This is used for 
				 * integral anti-windup to determine when the actuators would be saturated.
				 * The value should be no smaller than the controlMinValue (e.g. no less than -1)
				 */
				void setMinYawServoControl(float minYawServoControlValue)
    3af8:	cf 93       	push	r28
    3afa:	df 93       	push	r29
    3afc:	00 d0       	rcall	.+0      	; 0x3afe <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf+0x6>
    3afe:	00 d0       	rcall	.+0      	; 0x3b00 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf+0x8>
    3b00:	cd b7       	in	r28, 0x3d	; 61
    3b02:	de b7       	in	r29, 0x3e	; 62
    3b04:	9a 83       	std	Y+2, r25	; 0x02
    3b06:	89 83       	std	Y+1, r24	; 0x01
    3b08:	4b 83       	std	Y+3, r20	; 0x03
    3b0a:	5c 83       	std	Y+4, r21	; 0x04
    3b0c:	6d 83       	std	Y+5, r22	; 0x05
    3b0e:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->minYawServoControlValue = minYawServoControlValue;
    3b10:	89 81       	ldd	r24, Y+1	; 0x01
    3b12:	9a 81       	ldd	r25, Y+2	; 0x02
    3b14:	9c 01       	movw	r18, r24
    3b16:	2e 5a       	subi	r18, 0xAE	; 174
    3b18:	3f 4f       	sbci	r19, 0xFF	; 255
    3b1a:	8b 81       	ldd	r24, Y+3	; 0x03
    3b1c:	9c 81       	ldd	r25, Y+4	; 0x04
    3b1e:	ad 81       	ldd	r26, Y+5	; 0x05
    3b20:	be 81       	ldd	r27, Y+6	; 0x06
    3b22:	f9 01       	movw	r30, r18
    3b24:	80 83       	st	Z, r24
    3b26:	91 83       	std	Z+1, r25	; 0x01
    3b28:	a2 83       	std	Z+2, r26	; 0x02
    3b2a:	b3 83       	std	Z+3, r27	; 0x03
				}
    3b2c:	26 96       	adiw	r28, 0x06	; 6
    3b2e:	0f b6       	in	r0, 0x3f	; 63
    3b30:	f8 94       	cli
    3b32:	de bf       	out	0x3e, r29	; 62
    3b34:	0f be       	out	0x3f, r0	; 63
    3b36:	cd bf       	out	0x3d, r28	; 61
    3b38:	df 91       	pop	r29
    3b3a:	cf 91       	pop	r28
    3b3c:	08 95       	ret

00003b3e <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf>:
				/**
				 * The maximum control value that the yaw actuators can be set too. This is used for 
				 * integral anti-windup to determine when the actuators would be saturated.
				 * The value should be no larger than the controlMaxValue (e.g. no greater than 1)
				 */
				void setMaxYawServoControl(float maxYawServoControlValue)
    3b3e:	cf 93       	push	r28
    3b40:	df 93       	push	r29
    3b42:	00 d0       	rcall	.+0      	; 0x3b44 <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf+0x6>
    3b44:	00 d0       	rcall	.+0      	; 0x3b46 <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf+0x8>
    3b46:	cd b7       	in	r28, 0x3d	; 61
    3b48:	de b7       	in	r29, 0x3e	; 62
    3b4a:	9a 83       	std	Y+2, r25	; 0x02
    3b4c:	89 83       	std	Y+1, r24	; 0x01
    3b4e:	4b 83       	std	Y+3, r20	; 0x03
    3b50:	5c 83       	std	Y+4, r21	; 0x04
    3b52:	6d 83       	std	Y+5, r22	; 0x05
    3b54:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->maxYawServoControlValue = maxYawServoControlValue;
    3b56:	89 81       	ldd	r24, Y+1	; 0x01
    3b58:	9a 81       	ldd	r25, Y+2	; 0x02
    3b5a:	9c 01       	movw	r18, r24
    3b5c:	2a 5a       	subi	r18, 0xAA	; 170
    3b5e:	3f 4f       	sbci	r19, 0xFF	; 255
    3b60:	8b 81       	ldd	r24, Y+3	; 0x03
    3b62:	9c 81       	ldd	r25, Y+4	; 0x04
    3b64:	ad 81       	ldd	r26, Y+5	; 0x05
    3b66:	be 81       	ldd	r27, Y+6	; 0x06
    3b68:	f9 01       	movw	r30, r18
    3b6a:	80 83       	st	Z, r24
    3b6c:	91 83       	std	Z+1, r25	; 0x01
    3b6e:	a2 83       	std	Z+2, r26	; 0x02
    3b70:	b3 83       	std	Z+3, r27	; 0x03
				}
    3b72:	26 96       	adiw	r28, 0x06	; 6
    3b74:	0f b6       	in	r0, 0x3f	; 63
    3b76:	f8 94       	cli
    3b78:	de bf       	out	0x3e, r29	; 62
    3b7a:	0f be       	out	0x3f, r0	; 63
    3b7c:	cd bf       	out	0x3d, r28	; 61
    3b7e:	df 91       	pop	r29
    3b80:	cf 91       	pop	r28
    3b82:	08 95       	ret

00003b84 <_ZN10helicopter10controller13PIDController18setControlMaxValueEf>:
				
				/**
				 * This is the maximum possible output value for a control signal.
				 * Generally, this should be set to 1.
				 */
				void setControlMaxValue(float controlMaxValue)
    3b84:	cf 93       	push	r28
    3b86:	df 93       	push	r29
    3b88:	00 d0       	rcall	.+0      	; 0x3b8a <_ZN10helicopter10controller13PIDController18setControlMaxValueEf+0x6>
    3b8a:	00 d0       	rcall	.+0      	; 0x3b8c <_ZN10helicopter10controller13PIDController18setControlMaxValueEf+0x8>
    3b8c:	cd b7       	in	r28, 0x3d	; 61
    3b8e:	de b7       	in	r29, 0x3e	; 62
    3b90:	9a 83       	std	Y+2, r25	; 0x02
    3b92:	89 83       	std	Y+1, r24	; 0x01
    3b94:	4b 83       	std	Y+3, r20	; 0x03
    3b96:	5c 83       	std	Y+4, r21	; 0x04
    3b98:	6d 83       	std	Y+5, r22	; 0x05
    3b9a:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->controlMaxValue = controlMaxValue;
    3b9c:	89 81       	ldd	r24, Y+1	; 0x01
    3b9e:	9a 81       	ldd	r25, Y+2	; 0x02
    3ba0:	9c 01       	movw	r18, r24
    3ba2:	2a 57       	subi	r18, 0x7A	; 122
    3ba4:	3f 4f       	sbci	r19, 0xFF	; 255
    3ba6:	8b 81       	ldd	r24, Y+3	; 0x03
    3ba8:	9c 81       	ldd	r25, Y+4	; 0x04
    3baa:	ad 81       	ldd	r26, Y+5	; 0x05
    3bac:	be 81       	ldd	r27, Y+6	; 0x06
    3bae:	f9 01       	movw	r30, r18
    3bb0:	80 83       	st	Z, r24
    3bb2:	91 83       	std	Z+1, r25	; 0x01
    3bb4:	a2 83       	std	Z+2, r26	; 0x02
    3bb6:	b3 83       	std	Z+3, r27	; 0x03
				}
    3bb8:	26 96       	adiw	r28, 0x06	; 6
    3bba:	0f b6       	in	r0, 0x3f	; 63
    3bbc:	f8 94       	cli
    3bbe:	de bf       	out	0x3e, r29	; 62
    3bc0:	0f be       	out	0x3f, r0	; 63
    3bc2:	cd bf       	out	0x3d, r28	; 61
    3bc4:	df 91       	pop	r29
    3bc6:	cf 91       	pop	r28
    3bc8:	08 95       	ret

00003bca <_ZN10helicopter10controller13PIDController18setControlMinValueEf>:
				
				/**
				 * This is the minimum possible value for a control signal.
				 * Generally, this should be set to -1.
				 */
				void setControlMinValue(float controlMinValue)
    3bca:	cf 93       	push	r28
    3bcc:	df 93       	push	r29
    3bce:	00 d0       	rcall	.+0      	; 0x3bd0 <_ZN10helicopter10controller13PIDController18setControlMinValueEf+0x6>
    3bd0:	00 d0       	rcall	.+0      	; 0x3bd2 <_ZN10helicopter10controller13PIDController18setControlMinValueEf+0x8>
    3bd2:	cd b7       	in	r28, 0x3d	; 61
    3bd4:	de b7       	in	r29, 0x3e	; 62
    3bd6:	9a 83       	std	Y+2, r25	; 0x02
    3bd8:	89 83       	std	Y+1, r24	; 0x01
    3bda:	4b 83       	std	Y+3, r20	; 0x03
    3bdc:	5c 83       	std	Y+4, r21	; 0x04
    3bde:	6d 83       	std	Y+5, r22	; 0x05
    3be0:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->controlMinValue = controlMinValue;
    3be2:	89 81       	ldd	r24, Y+1	; 0x01
    3be4:	9a 81       	ldd	r25, Y+2	; 0x02
    3be6:	9c 01       	movw	r18, r24
    3be8:	26 57       	subi	r18, 0x76	; 118
    3bea:	3f 4f       	sbci	r19, 0xFF	; 255
    3bec:	8b 81       	ldd	r24, Y+3	; 0x03
    3bee:	9c 81       	ldd	r25, Y+4	; 0x04
    3bf0:	ad 81       	ldd	r26, Y+5	; 0x05
    3bf2:	be 81       	ldd	r27, Y+6	; 0x06
    3bf4:	f9 01       	movw	r30, r18
    3bf6:	80 83       	st	Z, r24
    3bf8:	91 83       	std	Z+1, r25	; 0x01
    3bfa:	a2 83       	std	Z+2, r26	; 0x02
    3bfc:	b3 83       	std	Z+3, r27	; 0x03
				}			
    3bfe:	26 96       	adiw	r28, 0x06	; 6
    3c00:	0f b6       	in	r0, 0x3f	; 63
    3c02:	f8 94       	cli
    3c04:	de bf       	out	0x3e, r29	; 62
    3c06:	0f be       	out	0x3f, r0	; 63
    3c08:	cd bf       	out	0x3d, r28	; 61
    3c0a:	df 91       	pop	r29
    3c0c:	cf 91       	pop	r28
    3c0e:	08 95       	ret

00003c10 <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE>:
using namespace helicopter::model;
using namespace helicopter::controller;
using namespace helicopter::util;

void setupDefaultsandReferencePosition(SystemModel *model, PIDController *pidController)
{	
    3c10:	cf 93       	push	r28
    3c12:	df 93       	push	r29
    3c14:	00 d0       	rcall	.+0      	; 0x3c16 <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE+0x6>
    3c16:	1f 92       	push	r1
    3c18:	cd b7       	in	r28, 0x3d	; 61
    3c1a:	de b7       	in	r29, 0x3e	; 62
    3c1c:	9a 83       	std	Y+2, r25	; 0x02
    3c1e:	89 83       	std	Y+1, r24	; 0x01
    3c20:	7c 83       	std	Y+4, r23	; 0x04
    3c22:	6b 83       	std	Y+3, r22	; 0x03
	/**
	 * Set reference position of the helicopter.
	 * These are the setpoints that the helicopter to navigate/orient to.
	 * This includes the final location that the helicopter should travel to.
	 */
	model->ReferenceMagYawDegrees(0.0); //point north
    3c24:	89 81       	ldd	r24, Y+1	; 0x01
    3c26:	9a 81       	ldd	r25, Y+2	; 0x02
    3c28:	40 e0       	ldi	r20, 0x00	; 0
    3c2a:	50 e0       	ldi	r21, 0x00	; 0
    3c2c:	ba 01       	movw	r22, r20
    3c2e:	0e 94 32 18 	call	0x3064	; 0x3064 <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf>
	model->ReferenceYawVelocityDegreesPerSecond(0.0);
    3c32:	89 81       	ldd	r24, Y+1	; 0x01
    3c34:	9a 81       	ldd	r25, Y+2	; 0x02
    3c36:	40 e0       	ldi	r20, 0x00	; 0
    3c38:	50 e0       	ldi	r21, 0x00	; 0
    3c3a:	ba 01       	movw	r22, r20
    3c3c:	0e 94 52 18 	call	0x30a4	; 0x30a4 <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf>
	
	//Negative values because positive values are 'down' in NED. So we want a negative altitude setpoint.
	model->ReferenceZNEDBodyFrameFeet(-100);
    3c40:	89 81       	ldd	r24, Y+1	; 0x01
    3c42:	9a 81       	ldd	r25, Y+2	; 0x02
    3c44:	40 e0       	ldi	r20, 0x00	; 0
    3c46:	50 e0       	ldi	r21, 0x00	; 0
    3c48:	68 ec       	ldi	r22, 0xC8	; 200
    3c4a:	72 ec       	ldi	r23, 0xC2	; 194
    3c4c:	0e 94 10 19 	call	0x3220	; 0x3220 <_ZN10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEf>
	model->ReferenceZVelocityFeetPerSecond(0);
    3c50:	89 81       	ldd	r24, Y+1	; 0x01
    3c52:	9a 81       	ldd	r25, Y+2	; 0x02
    3c54:	40 e0       	ldi	r20, 0x00	; 0
    3c56:	50 e0       	ldi	r21, 0x00	; 0
    3c58:	ba 01       	movw	r22, r20
    3c5a:	0e 94 33 19 	call	0x3266	; 0x3266 <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf>
	model->ReferenceXNEDBodyFrame(0);
    3c5e:	89 81       	ldd	r24, Y+1	; 0x01
    3c60:	9a 81       	ldd	r25, Y+2	; 0x02
    3c62:	40 e0       	ldi	r20, 0x00	; 0
    3c64:	50 e0       	ldi	r21, 0x00	; 0
    3c66:	ba 01       	movw	r22, r20
    3c68:	0e 94 72 18 	call	0x30e4	; 0x30e4 <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf>
	model->ReferenceXVelocityMetersPerSecond(0);
    3c6c:	89 81       	ldd	r24, Y+1	; 0x01
    3c6e:	9a 81       	ldd	r25, Y+2	; 0x02
    3c70:	40 e0       	ldi	r20, 0x00	; 0
    3c72:	50 e0       	ldi	r21, 0x00	; 0
    3c74:	ba 01       	movw	r22, r20
    3c76:	0e 94 92 18 	call	0x3124	; 0x3124 <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf>
	model->ReferenceYNEDBodyFrame(0);
    3c7a:	89 81       	ldd	r24, Y+1	; 0x01
    3c7c:	9a 81       	ldd	r25, Y+2	; 0x02
    3c7e:	40 e0       	ldi	r20, 0x00	; 0
    3c80:	50 e0       	ldi	r21, 0x00	; 0
    3c82:	ba 01       	movw	r22, r20
    3c84:	0e 94 b2 18 	call	0x3164	; 0x3164 <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf>
	model->ReferenceYVelocityMetersPerSecond(0);
    3c88:	89 81       	ldd	r24, Y+1	; 0x01
    3c8a:	9a 81       	ldd	r25, Y+2	; 0x02
    3c8c:	40 e0       	ldi	r20, 0x00	; 0
    3c8e:	50 e0       	ldi	r21, 0x00	; 0
    3c90:	ba 01       	movw	r22, r20
    3c92:	0e 94 d5 18 	call	0x31aa	; 0x31aa <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf>
	
	
	pidController->setYawProportionalGain(3.0);
    3c96:	8b 81       	ldd	r24, Y+3	; 0x03
    3c98:	9c 81       	ldd	r25, Y+4	; 0x04
    3c9a:	40 e0       	ldi	r20, 0x00	; 0
    3c9c:	50 e0       	ldi	r21, 0x00	; 0
    3c9e:	60 e4       	ldi	r22, 0x40	; 64
    3ca0:	70 e4       	ldi	r23, 0x40	; 64
    3ca2:	0e 94 d9 1c 	call	0x39b2	; 0x39b2 <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf>
	pidController->setYawIntegralGain(.008);
    3ca6:	8b 81       	ldd	r24, Y+3	; 0x03
    3ca8:	9c 81       	ldd	r25, Y+4	; 0x04
    3caa:	4f e6       	ldi	r20, 0x6F	; 111
    3cac:	52 e1       	ldi	r21, 0x12	; 18
    3cae:	63 e0       	ldi	r22, 0x03	; 3
    3cb0:	7c e3       	ldi	r23, 0x3C	; 60
    3cb2:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf>
	pidController->setYawDerivativeGain(.85);
    3cb6:	8b 81       	ldd	r24, Y+3	; 0x03
    3cb8:	9c 81       	ldd	r25, Y+4	; 0x04
    3cba:	4a e9       	ldi	r20, 0x9A	; 154
    3cbc:	59 e9       	ldi	r21, 0x99	; 153
    3cbe:	69 e5       	ldi	r22, 0x59	; 89
    3cc0:	7f e3       	ldi	r23, 0x3F	; 63
    3cc2:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf>
	pidController->setYawAntiWindupGain(.1);
    3cc6:	8b 81       	ldd	r24, Y+3	; 0x03
    3cc8:	9c 81       	ldd	r25, Y+4	; 0x04
    3cca:	4d ec       	ldi	r20, 0xCD	; 205
    3ccc:	5c ec       	ldi	r21, 0xCC	; 204
    3cce:	6c ec       	ldi	r22, 0xCC	; 204
    3cd0:	7d e3       	ldi	r23, 0x3D	; 61
    3cd2:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf>
	
	pidController->setXProportionalGain(.289);
    3cd6:	8b 81       	ldd	r24, Y+3	; 0x03
    3cd8:	9c 81       	ldd	r25, Y+4	; 0x04
    3cda:	4f ec       	ldi	r20, 0xCF	; 207
    3cdc:	57 ef       	ldi	r21, 0xF7	; 247
    3cde:	63 e9       	ldi	r22, 0x93	; 147
    3ce0:	7e e3       	ldi	r23, 0x3E	; 62
    3ce2:	0e 94 38 1a 	call	0x3470	; 0x3470 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf>
	pidController->setXIntegralGain(0);
    3ce6:	8b 81       	ldd	r24, Y+3	; 0x03
    3ce8:	9c 81       	ldd	r25, Y+4	; 0x04
    3cea:	40 e0       	ldi	r20, 0x00	; 0
    3cec:	50 e0       	ldi	r21, 0x00	; 0
    3cee:	ba 01       	movw	r22, r20
    3cf0:	0e 94 f8 19 	call	0x33f0	; 0x33f0 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf>
	pidController->setXDerivativeGain(1.859);
    3cf4:	8b 81       	ldd	r24, Y+3	; 0x03
    3cf6:	9c 81       	ldd	r25, Y+4	; 0x04
    3cf8:	46 eb       	ldi	r20, 0xB6	; 182
    3cfa:	53 ef       	ldi	r21, 0xF3	; 243
    3cfc:	6d ee       	ldi	r22, 0xED	; 237
    3cfe:	7f e3       	ldi	r23, 0x3F	; 63
    3d00:	0e 94 18 1a 	call	0x3430	; 0x3430 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf>
	pidController->setXAntiWindupGain(0);
    3d04:	8b 81       	ldd	r24, Y+3	; 0x03
    3d06:	9c 81       	ldd	r25, Y+4	; 0x04
    3d08:	40 e0       	ldi	r20, 0x00	; 0
    3d0a:	50 e0       	ldi	r21, 0x00	; 0
    3d0c:	ba 01       	movw	r22, r20
    3d0e:	0e 94 58 1a 	call	0x34b0	; 0x34b0 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf>
	pidController->setLongitudeInnerLoopGain(.031);
    3d12:	8b 81       	ldd	r24, Y+3	; 0x03
    3d14:	9c 81       	ldd	r25, Y+4	; 0x04
    3d16:	46 eb       	ldi	r20, 0xB6	; 182
    3d18:	53 ef       	ldi	r21, 0xF3	; 243
    3d1a:	6d ef       	ldi	r22, 0xFD	; 253
    3d1c:	7c e3       	ldi	r23, 0x3C	; 60
    3d1e:	0e 94 78 1a 	call	0x34f0	; 0x34f0 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf>
	pidController->setPitchAngularVelocityGain(.03);
    3d22:	8b 81       	ldd	r24, Y+3	; 0x03
    3d24:	9c 81       	ldd	r25, Y+4	; 0x04
    3d26:	4f e8       	ldi	r20, 0x8F	; 143
    3d28:	52 ec       	ldi	r21, 0xC2	; 194
    3d2a:	65 ef       	ldi	r22, 0xF5	; 245
    3d2c:	7c e3       	ldi	r23, 0x3C	; 60
    3d2e:	0e 94 98 1a 	call	0x3530	; 0x3530 <_ZN10helicopter10controller13PIDController27setPitchAngularVelocityGainEf>
	
	pidController->setYProportionalGain(1.437);
    3d32:	8b 81       	ldd	r24, Y+3	; 0x03
    3d34:	9c 81       	ldd	r25, Y+4	; 0x04
    3d36:	4e e9       	ldi	r20, 0x9E	; 158
    3d38:	5f ee       	ldi	r21, 0xEF	; 239
    3d3a:	67 eb       	ldi	r22, 0xB7	; 183
    3d3c:	7f e3       	ldi	r23, 0x3F	; 63
    3d3e:	0e 94 3e 1b 	call	0x367c	; 0x367c <_ZN10helicopter10controller13PIDController20setYProportionalGainEf>
	pidController->setYIntegralGain(0);
    3d42:	8b 81       	ldd	r24, Y+3	; 0x03
    3d44:	9c 81       	ldd	r25, Y+4	; 0x04
    3d46:	40 e0       	ldi	r20, 0x00	; 0
    3d48:	50 e0       	ldi	r21, 0x00	; 0
    3d4a:	ba 01       	movw	r22, r20
    3d4c:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <_ZN10helicopter10controller13PIDController16setYIntegralGainEf>
	pidController->setYDerivativeGain(2.8363);
    3d50:	8b 81       	ldd	r24, Y+3	; 0x03
    3d52:	9c 81       	ldd	r25, Y+4	; 0x04
    3d54:	40 ef       	ldi	r20, 0xF0	; 240
    3d56:	55 e8       	ldi	r21, 0x85	; 133
    3d58:	65 e3       	ldi	r22, 0x35	; 53
    3d5a:	70 e4       	ldi	r23, 0x40	; 64
    3d5c:	0e 94 1e 1b 	call	0x363c	; 0x363c <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf>
	pidController->setYAntiWindupGain(0);
    3d60:	8b 81       	ldd	r24, Y+3	; 0x03
    3d62:	9c 81       	ldd	r25, Y+4	; 0x04
    3d64:	40 e0       	ldi	r20, 0x00	; 0
    3d66:	50 e0       	ldi	r21, 0x00	; 0
    3d68:	ba 01       	movw	r22, r20
    3d6a:	0e 94 5e 1b 	call	0x36bc	; 0x36bc <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf>
	pidController->setLateralInnerLoopGain(.092);	
    3d6e:	8b 81       	ldd	r24, Y+3	; 0x03
    3d70:	9c 81       	ldd	r25, Y+4	; 0x04
    3d72:	4f e7       	ldi	r20, 0x7F	; 127
    3d74:	5a e6       	ldi	r21, 0x6A	; 106
    3d76:	6c eb       	ldi	r22, 0xBC	; 188
    3d78:	7d e3       	ldi	r23, 0x3D	; 61
    3d7a:	0e 94 7e 1b 	call	0x36fc	; 0x36fc <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf>
	pidController->setRollAngularVelocityGain(.048);
    3d7e:	8b 81       	ldd	r24, Y+3	; 0x03
    3d80:	9c 81       	ldd	r25, Y+4	; 0x04
    3d82:	46 ea       	ldi	r20, 0xA6	; 166
    3d84:	5b e9       	ldi	r21, 0x9B	; 155
    3d86:	64 e4       	ldi	r22, 0x44	; 68
    3d88:	7d e3       	ldi	r23, 0x3D	; 61
    3d8a:	0e 94 9e 1b 	call	0x373c	; 0x373c <_ZN10helicopter10controller13PIDController26setRollAngularVelocityGainEf>
	
	//TODO: Don't forget that there is a difference between how often the sensors
	//are read and how often the control algorithm runs. 
	pidController->setIntervalPeriodSecs(PID_OUTER_LOOP_PERIOD);
    3d8e:	8b 81       	ldd	r24, Y+3	; 0x03
    3d90:	9c 81       	ldd	r25, Y+4	; 0x04
    3d92:	4d ec       	ldi	r20, 0xCD	; 205
    3d94:	5c ec       	ldi	r21, 0xCC	; 204
    3d96:	6c e4       	ldi	r22, 0x4C	; 76
    3d98:	7d e3       	ldi	r23, 0x3D	; 61
    3d9a:	0e 94 39 1d 	call	0x3a72	; 0x3a72 <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf>
//pidController->setMinYawServoControl (-10);
//pidController->setMaxYawServoControl(10);



	pidController->setControlMaxValue(1.0d);
    3d9e:	8b 81       	ldd	r24, Y+3	; 0x03
    3da0:	9c 81       	ldd	r25, Y+4	; 0x04
    3da2:	40 e0       	ldi	r20, 0x00	; 0
    3da4:	50 e0       	ldi	r21, 0x00	; 0
    3da6:	60 e8       	ldi	r22, 0x80	; 128
    3da8:	7f e3       	ldi	r23, 0x3F	; 63
    3daa:	0e 94 c2 1d 	call	0x3b84	; 0x3b84 <_ZN10helicopter10controller13PIDController18setControlMaxValueEf>
	pidController->setControlMinValue(-1.0d);
    3dae:	8b 81       	ldd	r24, Y+3	; 0x03
    3db0:	9c 81       	ldd	r25, Y+4	; 0x04
    3db2:	40 e0       	ldi	r20, 0x00	; 0
    3db4:	50 e0       	ldi	r21, 0x00	; 0
    3db6:	60 e8       	ldi	r22, 0x80	; 128
    3db8:	7f eb       	ldi	r23, 0xBF	; 191
    3dba:	0e 94 e5 1d 	call	0x3bca	; 0x3bca <_ZN10helicopter10controller13PIDController18setControlMinValueEf>
	
	pidController->setMinYawServoControl (-1.0d);
    3dbe:	8b 81       	ldd	r24, Y+3	; 0x03
    3dc0:	9c 81       	ldd	r25, Y+4	; 0x04
    3dc2:	40 e0       	ldi	r20, 0x00	; 0
    3dc4:	50 e0       	ldi	r21, 0x00	; 0
    3dc6:	60 e8       	ldi	r22, 0x80	; 128
    3dc8:	7f eb       	ldi	r23, 0xBF	; 191
    3dca:	0e 94 7c 1d 	call	0x3af8	; 0x3af8 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf>
	pidController->setMaxYawServoControl (1.0d);
    3dce:	8b 81       	ldd	r24, Y+3	; 0x03
    3dd0:	9c 81       	ldd	r25, Y+4	; 0x04
    3dd2:	40 e0       	ldi	r20, 0x00	; 0
    3dd4:	50 e0       	ldi	r21, 0x00	; 0
    3dd6:	60 e8       	ldi	r22, 0x80	; 128
    3dd8:	7f e3       	ldi	r23, 0x3F	; 63
    3dda:	0e 94 9f 1d 	call	0x3b3e	; 0x3b3e <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf>
	
	pidController->setMaxLongitudeServoControlValue(1.0d);
    3dde:	8b 81       	ldd	r24, Y+3	; 0x03
    3de0:	9c 81       	ldd	r25, Y+4	; 0x04
    3de2:	40 e0       	ldi	r20, 0x00	; 0
    3de4:	50 e0       	ldi	r21, 0x00	; 0
    3de6:	60 e8       	ldi	r22, 0x80	; 128
    3de8:	7f e3       	ldi	r23, 0x3F	; 63
    3dea:	0e 94 db 1a 	call	0x35b6	; 0x35b6 <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf>
	pidController->setMinLongitudeServoControlValue(-1.0d);
    3dee:	8b 81       	ldd	r24, Y+3	; 0x03
    3df0:	9c 81       	ldd	r25, Y+4	; 0x04
    3df2:	40 e0       	ldi	r20, 0x00	; 0
    3df4:	50 e0       	ldi	r21, 0x00	; 0
    3df6:	60 e8       	ldi	r22, 0x80	; 128
    3df8:	7f eb       	ldi	r23, 0xBF	; 191
    3dfa:	0e 94 b8 1a 	call	0x3570	; 0x3570 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf>
	
	pidController->setMaxLateralServoControlValue(1.0d);
    3dfe:	8b 81       	ldd	r24, Y+3	; 0x03
    3e00:	9c 81       	ldd	r25, Y+4	; 0x04
    3e02:	40 e0       	ldi	r20, 0x00	; 0
    3e04:	50 e0       	ldi	r21, 0x00	; 0
    3e06:	60 e8       	ldi	r22, 0x80	; 128
    3e08:	7f e3       	ldi	r23, 0x3F	; 63
    3e0a:	0e 94 e4 1b 	call	0x37c8	; 0x37c8 <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf>
	pidController->setMinLateralServoControlValue(-1.0d);
    3e0e:	8b 81       	ldd	r24, Y+3	; 0x03
    3e10:	9c 81       	ldd	r25, Y+4	; 0x04
    3e12:	40 e0       	ldi	r20, 0x00	; 0
    3e14:	50 e0       	ldi	r21, 0x00	; 0
    3e16:	60 e8       	ldi	r22, 0x80	; 128
    3e18:	7f eb       	ldi	r23, 0xBF	; 191
    3e1a:	0e 94 c1 1b 	call	0x3782	; 0x3782 <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf>
	
	//just changed
	pidController->setMaxMainRotorServoControlValue(.5d);
    3e1e:	8b 81       	ldd	r24, Y+3	; 0x03
    3e20:	9c 81       	ldd	r25, Y+4	; 0x04
    3e22:	40 e0       	ldi	r20, 0x00	; 0
    3e24:	50 e0       	ldi	r21, 0x00	; 0
    3e26:	60 e0       	ldi	r22, 0x00	; 0
    3e28:	7f e3       	ldi	r23, 0x3F	; 63
    3e2a:	0e 94 2a 1c 	call	0x3854	; 0x3854 <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf>
	pidController->setMinMainRotorServoControlValue(0.0d);
    3e2e:	8b 81       	ldd	r24, Y+3	; 0x03
    3e30:	9c 81       	ldd	r25, Y+4	; 0x04
    3e32:	40 e0       	ldi	r20, 0x00	; 0
    3e34:	50 e0       	ldi	r21, 0x00	; 0
    3e36:	ba 01       	movw	r22, r20
    3e38:	0e 94 07 1c 	call	0x380e	; 0x380e <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf>
	
	pidController->setMaxRollSetpointDegrees(5);
    3e3c:	8b 81       	ldd	r24, Y+3	; 0x03
    3e3e:	9c 81       	ldd	r25, Y+4	; 0x04
    3e40:	40 e0       	ldi	r20, 0x00	; 0
    3e42:	50 e0       	ldi	r21, 0x00	; 0
    3e44:	60 ea       	ldi	r22, 0xA0	; 160
    3e46:	70 e4       	ldi	r23, 0x40	; 64
    3e48:	0e 94 4d 1c 	call	0x389a	; 0x389a <_ZN10helicopter10controller13PIDController25setMaxRollSetpointDegreesEf>
	pidController->setMinRollSetpointDegrees(-5);
    3e4c:	8b 81       	ldd	r24, Y+3	; 0x03
    3e4e:	9c 81       	ldd	r25, Y+4	; 0x04
    3e50:	40 e0       	ldi	r20, 0x00	; 0
    3e52:	50 e0       	ldi	r21, 0x00	; 0
    3e54:	60 ea       	ldi	r22, 0xA0	; 160
    3e56:	70 ec       	ldi	r23, 0xC0	; 192
    3e58:	0e 94 70 1c 	call	0x38e0	; 0x38e0 <_ZN10helicopter10controller13PIDController25setMinRollSetpointDegreesEf>
	
	pidController->setMaxPitchSetpointDegrees(13);
    3e5c:	8b 81       	ldd	r24, Y+3	; 0x03
    3e5e:	9c 81       	ldd	r25, Y+4	; 0x04
    3e60:	40 e0       	ldi	r20, 0x00	; 0
    3e62:	50 e0       	ldi	r21, 0x00	; 0
    3e64:	60 e5       	ldi	r22, 0x50	; 80
    3e66:	71 e4       	ldi	r23, 0x41	; 65
    3e68:	0e 94 93 1c 	call	0x3926	; 0x3926 <_ZN10helicopter10controller13PIDController26setMaxPitchSetpointDegreesEf>
	pidController->setMinPitchSetpointDegrees(-13);
    3e6c:	8b 81       	ldd	r24, Y+3	; 0x03
    3e6e:	9c 81       	ldd	r25, Y+4	; 0x04
    3e70:	40 e0       	ldi	r20, 0x00	; 0
    3e72:	50 e0       	ldi	r21, 0x00	; 0
    3e74:	60 e5       	ldi	r22, 0x50	; 80
    3e76:	71 ec       	ldi	r23, 0xC1	; 193
    3e78:	0e 94 b6 1c 	call	0x396c	; 0x396c <_ZN10helicopter10controller13PIDController26setMinPitchSetpointDegreesEf>
}
    3e7c:	0f 90       	pop	r0
    3e7e:	0f 90       	pop	r0
    3e80:	0f 90       	pop	r0
    3e82:	0f 90       	pop	r0
    3e84:	df 91       	pop	r29
    3e86:	cf 91       	pop	r28
    3e88:	08 95       	ret

00003e8a <main>:


int main(void)
{	
    3e8a:	4f 92       	push	r4
    3e8c:	5f 92       	push	r5
    3e8e:	6f 92       	push	r6
    3e90:	7f 92       	push	r7
    3e92:	8f 92       	push	r8
    3e94:	9f 92       	push	r9
    3e96:	af 92       	push	r10
    3e98:	bf 92       	push	r11
    3e9a:	cf 92       	push	r12
    3e9c:	df 92       	push	r13
    3e9e:	ef 92       	push	r14
    3ea0:	ff 92       	push	r15
    3ea2:	0f 93       	push	r16
    3ea4:	1f 93       	push	r17
    3ea6:	cf 93       	push	r28
    3ea8:	df 93       	push	r29
    3eaa:	cd b7       	in	r28, 0x3d	; 61
    3eac:	de b7       	in	r29, 0x3e	; 62
    3eae:	e7 97       	sbiw	r28, 0x37	; 55
    3eb0:	0f b6       	in	r0, 0x3f	; 63
    3eb2:	f8 94       	cli
    3eb4:	de bf       	out	0x3e, r29	; 62
    3eb6:	0f be       	out	0x3f, r0	; 63
    3eb8:	cd bf       	out	0x3d, r28	; 61
	SystemModel *model = new SystemModel();
    3eba:	84 ef       	ldi	r24, 0xF4	; 244
    3ebc:	90 e0       	ldi	r25, 0x00	; 0
    3ebe:	0e 94 12 40 	call	0x8024	; 0x8024 <_Znwj>
    3ec2:	8c 01       	movw	r16, r24
    3ec4:	c8 01       	movw	r24, r16
    3ec6:	0e 94 20 16 	call	0x2c40	; 0x2c40 <_ZN10helicopter5model11SystemModelC1Ev>
    3eca:	1b 83       	std	Y+3, r17	; 0x03
    3ecc:	0a 83       	std	Y+2, r16	; 0x02
	
	PIDController *pidController = new PIDController(model);
    3ece:	8e e8       	ldi	r24, 0x8E	; 142
    3ed0:	90 e0       	ldi	r25, 0x00	; 0
    3ed2:	0e 94 12 40 	call	0x8024	; 0x8024 <_Znwj>
    3ed6:	8c 01       	movw	r16, r24
    3ed8:	8a 81       	ldd	r24, Y+2	; 0x02
    3eda:	9b 81       	ldd	r25, Y+3	; 0x03
    3edc:	bc 01       	movw	r22, r24
    3ede:	c8 01       	movw	r24, r16
    3ee0:	0e 94 70 07 	call	0xee0	; 0xee0 <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelE>
    3ee4:	1d 83       	std	Y+5, r17	; 0x05
    3ee6:	0c 83       	std	Y+4, r16	; 0x04
	
	
	
	setupDefaultsandReferencePosition(model, pidController);
    3ee8:	2c 81       	ldd	r18, Y+4	; 0x04
    3eea:	3d 81       	ldd	r19, Y+5	; 0x05
    3eec:	8a 81       	ldd	r24, Y+2	; 0x02
    3eee:	9b 81       	ldd	r25, Y+3	; 0x03
    3ef0:	b9 01       	movw	r22, r18
    3ef2:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE>
	
	//Timer *timer = new Timer(F_CPU,PRESCALE_BY_TENTWENTYFOUR,75); //Good timeout when using the radio
	Timer *timer = new Timer(F_CPU, PRESCALE_BY_TENTWENTYFOUR, 10); //Good timeout when using the USB
    3ef6:	88 e0       	ldi	r24, 0x08	; 8
    3ef8:	90 e0       	ldi	r25, 0x00	; 0
    3efa:	0e 94 12 40 	call	0x8024	; 0x8024 <_Znwj>
    3efe:	6c 01       	movw	r12, r24
    3f00:	1a e0       	ldi	r17, 0x0A	; 10
    3f02:	e1 2e       	mov	r14, r17
    3f04:	f1 2c       	mov	r15, r1
    3f06:	00 e0       	ldi	r16, 0x00	; 0
    3f08:	10 e0       	ldi	r17, 0x00	; 0
    3f0a:	20 e0       	ldi	r18, 0x00	; 0
    3f0c:	34 e0       	ldi	r19, 0x04	; 4
    3f0e:	40 e0       	ldi	r20, 0x00	; 0
    3f10:	54 e2       	ldi	r21, 0x24	; 36
    3f12:	64 ef       	ldi	r22, 0xF4	; 244
    3f14:	70 e0       	ldi	r23, 0x00	; 0
    3f16:	c6 01       	movw	r24, r12
    3f18:	0e 94 7a 15 	call	0x2af4	; 0x2af4 <_ZN10helicopter4util5TimerC1Em9PRESCALERm>
    3f1c:	df 82       	std	Y+7, r13	; 0x07
    3f1e:	ce 82       	std	Y+6, r12	; 0x06
	
	//Create a driver for communicating with the Ground Control Station (GCS).
	//SerialDriver *serialDriver = new SerialDriver(57600, SerialDriver::Zero, timer, true, true);  
	SerialDriver *serialDriver = new SerialDriver(76800, SerialDriver::Zero, timer, true, true);  
    3f20:	8b e0       	ldi	r24, 0x0B	; 11
    3f22:	90 e0       	ldi	r25, 0x00	; 0
    3f24:	0e 94 12 40 	call	0x8024	; 0x8024 <_Znwj>
    3f28:	5c 01       	movw	r10, r24
    3f2a:	8e 81       	ldd	r24, Y+6	; 0x06
    3f2c:	9f 81       	ldd	r25, Y+7	; 0x07
    3f2e:	cc 24       	eor	r12, r12
    3f30:	c3 94       	inc	r12
    3f32:	ee 24       	eor	r14, r14
    3f34:	e3 94       	inc	r14
    3f36:	8c 01       	movw	r16, r24
    3f38:	20 e0       	ldi	r18, 0x00	; 0
    3f3a:	40 e0       	ldi	r20, 0x00	; 0
    3f3c:	5c e2       	ldi	r21, 0x2C	; 44
    3f3e:	61 e0       	ldi	r22, 0x01	; 1
    3f40:	70 e0       	ldi	r23, 0x00	; 0
    3f42:	c5 01       	movw	r24, r10
    3f44:	0e 94 ba 15 	call	0x2b74	; 0x2b74 <_ZN10helicopter7drivers12SerialDriverC1EmNS1_8UartPortEPNS_4util5TimerEbb>
    3f48:	b9 86       	std	Y+9, r11	; 0x09
    3f4a:	a8 86       	std	Y+8, r10	; 0x08
	serialDriver->initialize();
    3f4c:	88 85       	ldd	r24, Y+8	; 0x08
    3f4e:	99 85       	ldd	r25, Y+9	; 0x09
    3f50:	fc 01       	movw	r30, r24
    3f52:	80 81       	ld	r24, Z
    3f54:	91 81       	ldd	r25, Z+1	; 0x01
    3f56:	04 96       	adiw	r24, 0x04	; 4
    3f58:	fc 01       	movw	r30, r24
    3f5a:	20 81       	ld	r18, Z
    3f5c:	31 81       	ldd	r19, Z+1	; 0x01
    3f5e:	88 85       	ldd	r24, Y+8	; 0x08
    3f60:	99 85       	ldd	r25, Y+9	; 0x09
    3f62:	f9 01       	movw	r30, r18
    3f64:	19 95       	eicall
	
	GroundControlStationInterface *gcsInterface = new GroundControlStationInterface(serialDriver);
    3f66:	82 e0       	ldi	r24, 0x02	; 2
    3f68:	90 e0       	ldi	r25, 0x00	; 0
    3f6a:	0e 94 12 40 	call	0x8024	; 0x8024 <_Znwj>
    3f6e:	8c 01       	movw	r16, r24
    3f70:	88 85       	ldd	r24, Y+8	; 0x08
    3f72:	99 85       	ldd	r25, Y+9	; 0x09
    3f74:	bc 01       	movw	r22, r24
    3f76:	c8 01       	movw	r24, r16
    3f78:	0e 94 08 16 	call	0x2c10	; 0x2c10 <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverE>
    3f7c:	1b 87       	std	Y+11, r17	; 0x0b
    3f7e:	0a 87       	std	Y+10, r16	; 0x0a
	//This frequency works well for radio.
//	SimTelemetryTask *simTelemTask = new SimTelemetryTask(radioInterface, model, 0, 10);//starting at tick 1, execute 20 times a second
//	TransmitTelemetryTask *transTelemTask = new TransmitTelemetryTask(radioInterface, model, 1, 10);//starting at tick 2, execute 20 times a second

	//this frequency works well for USB.
	SimTelemetryTask *simTelemTask = new SimTelemetryTask(gcsInterface, model, pidController,0, 4);//starting at tick 0, execute 50 times a second
    3f80:	8d e0       	ldi	r24, 0x0D	; 13
    3f82:	90 e0       	ldi	r25, 0x00	; 0
    3f84:	0e 94 12 40 	call	0x8024	; 0x8024 <_Znwj>
    3f88:	6c 01       	movw	r12, r24
    3f8a:	2c 81       	ldd	r18, Y+4	; 0x04
    3f8c:	3d 81       	ldd	r19, Y+5	; 0x05
    3f8e:	4a 81       	ldd	r20, Y+2	; 0x02
    3f90:	5b 81       	ldd	r21, Y+3	; 0x03
    3f92:	8a 85       	ldd	r24, Y+10	; 0x0a
    3f94:	9b 85       	ldd	r25, Y+11	; 0x0b
    3f96:	68 94       	set
    3f98:	ee 24       	eor	r14, r14
    3f9a:	e2 f8       	bld	r14, 2
    3f9c:	f1 2c       	mov	r15, r1
    3f9e:	00 e0       	ldi	r16, 0x00	; 0
    3fa0:	10 e0       	ldi	r17, 0x00	; 0
    3fa2:	bc 01       	movw	r22, r24
    3fa4:	c6 01       	movw	r24, r12
    3fa6:	0e 94 57 3c 	call	0x78ae	; 0x78ae <_ZN10helicopter5tasks16SimTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEPNS_10controller13PIDControllerEii>
    3faa:	dd 86       	std	Y+13, r13	; 0x0d
    3fac:	cc 86       	std	Y+12, r12	; 0x0c
	TransmitTelemetryTask *transTelemTask = new TransmitTelemetryTask(gcsInterface, model, 1, 4);//starting at tick 1, execute 50 times a second
    3fae:	8b e0       	ldi	r24, 0x0B	; 11
    3fb0:	90 e0       	ldi	r25, 0x00	; 0
    3fb2:	0e 94 12 40 	call	0x8024	; 0x8024 <_Znwj>
    3fb6:	7c 01       	movw	r14, r24
    3fb8:	4a 81       	ldd	r20, Y+2	; 0x02
    3fba:	5b 81       	ldd	r21, Y+3	; 0x03
    3fbc:	8a 85       	ldd	r24, Y+10	; 0x0a
    3fbe:	9b 85       	ldd	r25, Y+11	; 0x0b
    3fc0:	04 e0       	ldi	r16, 0x04	; 4
    3fc2:	10 e0       	ldi	r17, 0x00	; 0
    3fc4:	21 e0       	ldi	r18, 0x01	; 1
    3fc6:	30 e0       	ldi	r19, 0x00	; 0
    3fc8:	bc 01       	movw	r22, r24
    3fca:	c7 01       	movw	r24, r14
    3fcc:	0e 94 69 3f 	call	0x7ed2	; 0x7ed2 <_ZN10helicopter5tasks21TransmitTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEii>
    3fd0:	ff 86       	std	Y+15, r15	; 0x0f
    3fd2:	ee 86       	std	Y+14, r14	; 0x0e
	
	FlashLEDTask *flashTask = new FlashLEDTask(2, SCHEDULER_TICK_FREQUENCY_HZ);//starting at tick 2, execute once a second
    3fd4:	8a e0       	ldi	r24, 0x0A	; 10
    3fd6:	90 e0       	ldi	r25, 0x00	; 0
    3fd8:	0e 94 12 40 	call	0x8024	; 0x8024 <_Znwj>
    3fdc:	8c 01       	movw	r16, r24
    3fde:	23 e0       	ldi	r18, 0x03	; 3
    3fe0:	30 e0       	ldi	r19, 0x00	; 0
    3fe2:	46 e4       	ldi	r20, 0x46	; 70
    3fe4:	50 e0       	ldi	r21, 0x00	; 0
    3fe6:	62 e0       	ldi	r22, 0x02	; 2
    3fe8:	70 e0       	ldi	r23, 0x00	; 0
    3fea:	c8 01       	movw	r24, r16
    3fec:	0e 94 c3 14 	call	0x2986	; 0x2986 <_ZN10helicopter5tasks12FlashLEDTaskC1Eiii>
    3ff0:	19 8b       	std	Y+17, r17	; 0x11
    3ff2:	08 8b       	std	Y+16, r16	; 0x10
		
		
	SensorProcessingTask *sensorProcessingTask = new SensorProcessingTask(model, 5, 4);
    3ff4:	89 e0       	ldi	r24, 0x09	; 9
    3ff6:	90 e0       	ldi	r25, 0x00	; 0
    3ff8:	0e 94 12 40 	call	0x8024	; 0x8024 <_Znwj>
    3ffc:	8c 01       	movw	r16, r24
    3ffe:	8a 81       	ldd	r24, Y+2	; 0x02
    4000:	9b 81       	ldd	r25, Y+3	; 0x03
    4002:	24 e0       	ldi	r18, 0x04	; 4
    4004:	30 e0       	ldi	r19, 0x00	; 0
    4006:	45 e0       	ldi	r20, 0x05	; 5
    4008:	50 e0       	ldi	r21, 0x00	; 0
    400a:	bc 01       	movw	r22, r24
    400c:	c8 01       	movw	r24, r16
    400e:	0e 94 68 3a 	call	0x74d0	; 0x74d0 <_ZN10helicopter5tasks20SensorProcessingTaskC1EPNS_5model11SystemModelEii>
    4012:	1b 8b       	std	Y+19, r17	; 0x13
    4014:	0a 8b       	std	Y+18, r16	; 0x12
		
	//execute the pid outer loop at the PID_OUTER_LOOP_PERIOD rate. The division is to convert the period into ticks for the scheduler.
	PIDOuterLoopTask *pidOuterLoop = new PIDOuterLoopTask(pidController, 3, (SCHEDULER_TICK_FREQUENCY_HZ / (1/PID_OUTER_LOOP_PERIOD)));
    4016:	89 e0       	ldi	r24, 0x09	; 9
    4018:	90 e0       	ldi	r25, 0x00	; 0
    401a:	0e 94 12 40 	call	0x8024	; 0x8024 <_Znwj>
    401e:	8c 01       	movw	r16, r24
    4020:	8c 81       	ldd	r24, Y+4	; 0x04
    4022:	9d 81       	ldd	r25, Y+5	; 0x05
    4024:	23 e0       	ldi	r18, 0x03	; 3
    4026:	30 e0       	ldi	r19, 0x00	; 0
    4028:	43 e0       	ldi	r20, 0x03	; 3
    402a:	50 e0       	ldi	r21, 0x00	; 0
    402c:	bc 01       	movw	r22, r24
    402e:	c8 01       	movw	r24, r16
    4030:	0e 94 16 39 	call	0x722c	; 0x722c <_ZN10helicopter5tasks16PIDOuterLoopTaskC1EPNS_10controller13PIDControllerEii>
    4034:	1d 8b       	std	Y+21, r17	; 0x15
    4036:	0c 8b       	std	Y+20, r16	; 0x14
	PIDInnerLoopTask *pidInnerLoop = new PIDInnerLoopTask(pidController, 4, (SCHEDULER_TICK_FREQUENCY_HZ / (1/PID_OUTER_LOOP_PERIOD)));
    4038:	89 e0       	ldi	r24, 0x09	; 9
    403a:	90 e0       	ldi	r25, 0x00	; 0
    403c:	0e 94 12 40 	call	0x8024	; 0x8024 <_Znwj>
    4040:	8c 01       	movw	r16, r24
    4042:	8c 81       	ldd	r24, Y+4	; 0x04
    4044:	9d 81       	ldd	r25, Y+5	; 0x05
    4046:	23 e0       	ldi	r18, 0x03	; 3
    4048:	30 e0       	ldi	r19, 0x00	; 0
    404a:	44 e0       	ldi	r20, 0x04	; 4
    404c:	50 e0       	ldi	r21, 0x00	; 0
    404e:	bc 01       	movw	r22, r24
    4050:	c8 01       	movw	r24, r16
    4052:	0e 94 92 38 	call	0x7124	; 0x7124 <_ZN10helicopter5tasks16PIDInnerLoopTaskC1EPNS_10controller13PIDControllerEii>
    4056:	1f 8b       	std	Y+23, r17	; 0x17
    4058:	0e 8b       	std	Y+22, r16	; 0x16
	


	Scheduler *scheduler = Scheduler::getScheduler();
    405a:	0e 94 ee 35 	call	0x6bdc	; 0x6bdc <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>
    405e:	99 8f       	std	Y+25, r25	; 0x19
    4060:	88 8f       	std	Y+24, r24	; 0x18
	
	scheduler->addTask(flashTask);
    4062:	28 89       	ldd	r18, Y+16	; 0x10
    4064:	39 89       	ldd	r19, Y+17	; 0x11
    4066:	88 8d       	ldd	r24, Y+24	; 0x18
    4068:	99 8d       	ldd	r25, Y+25	; 0x19
    406a:	b9 01       	movw	r22, r18
    406c:	0e 94 7e 36 	call	0x6cfc	; 0x6cfc <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(simTelemTask);
    4070:	2c 85       	ldd	r18, Y+12	; 0x0c
    4072:	3d 85       	ldd	r19, Y+13	; 0x0d
    4074:	88 8d       	ldd	r24, Y+24	; 0x18
    4076:	99 8d       	ldd	r25, Y+25	; 0x19
    4078:	b9 01       	movw	r22, r18
    407a:	0e 94 7e 36 	call	0x6cfc	; 0x6cfc <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(transTelemTask);
    407e:	2e 85       	ldd	r18, Y+14	; 0x0e
    4080:	3f 85       	ldd	r19, Y+15	; 0x0f
    4082:	88 8d       	ldd	r24, Y+24	; 0x18
    4084:	99 8d       	ldd	r25, Y+25	; 0x19
    4086:	b9 01       	movw	r22, r18
    4088:	0e 94 7e 36 	call	0x6cfc	; 0x6cfc <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(pidOuterLoop);
    408c:	2c 89       	ldd	r18, Y+20	; 0x14
    408e:	3d 89       	ldd	r19, Y+21	; 0x15
    4090:	88 8d       	ldd	r24, Y+24	; 0x18
    4092:	99 8d       	ldd	r25, Y+25	; 0x19
    4094:	b9 01       	movw	r22, r18
    4096:	0e 94 7e 36 	call	0x6cfc	; 0x6cfc <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(pidInnerLoop);
    409a:	2e 89       	ldd	r18, Y+22	; 0x16
    409c:	3f 89       	ldd	r19, Y+23	; 0x17
    409e:	88 8d       	ldd	r24, Y+24	; 0x18
    40a0:	99 8d       	ldd	r25, Y+25	; 0x19
    40a2:	b9 01       	movw	r22, r18
    40a4:	0e 94 7e 36 	call	0x6cfc	; 0x6cfc <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(sensorProcessingTask);
    40a8:	2a 89       	ldd	r18, Y+18	; 0x12
    40aa:	3b 89       	ldd	r19, Y+19	; 0x13
    40ac:	88 8d       	ldd	r24, Y+24	; 0x18
    40ae:	99 8d       	ldd	r25, Y+25	; 0x19
    40b0:	b9 01       	movw	r22, r18
    40b2:	0e 94 7e 36 	call	0x6cfc	; 0x6cfc <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	
	//Wait until we receive location data before starting the scheduler
	//TODO rework this
	bool isInitialized = false;
    40b6:	19 82       	std	Y+1, r1	; 0x01
	while (!isInitialized)
    40b8:	2e c1       	rjmp	.+604    	; 0x4316 <main+0x48c>
	{
		simTelemTask->runTaskImpl();
    40ba:	8c 85       	ldd	r24, Y+12	; 0x0c
    40bc:	9d 85       	ldd	r25, Y+13	; 0x0d
    40be:	fc 01       	movw	r30, r24
    40c0:	80 81       	ld	r24, Z
    40c2:	91 81       	ldd	r25, Z+1	; 0x01
    40c4:	fc 01       	movw	r30, r24
    40c6:	20 81       	ld	r18, Z
    40c8:	31 81       	ldd	r19, Z+1	; 0x01
    40ca:	8c 85       	ldd	r24, Y+12	; 0x0c
    40cc:	9d 85       	ldd	r25, Y+13	; 0x0d
    40ce:	f9 01       	movw	r30, r18
    40d0:	19 95       	eicall
		
		if (model->LatitudeDegrees() != 0 && model->LongitudeDegrees() != 0)
    40d2:	8a 81       	ldd	r24, Y+2	; 0x02
    40d4:	9b 81       	ldd	r25, Y+3	; 0x03
    40d6:	0e 94 56 19 	call	0x32ac	; 0x32ac <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    40da:	dc 01       	movw	r26, r24
    40dc:	cb 01       	movw	r24, r22
    40de:	20 e0       	ldi	r18, 0x00	; 0
    40e0:	30 e0       	ldi	r19, 0x00	; 0
    40e2:	a9 01       	movw	r20, r18
    40e4:	bc 01       	movw	r22, r24
    40e6:	cd 01       	movw	r24, r26
    40e8:	0e 94 77 46 	call	0x8cee	; 0x8cee <__cmpsf2>
    40ec:	88 23       	and	r24, r24
    40ee:	89 f0       	breq	.+34     	; 0x4112 <main+0x288>
    40f0:	8a 81       	ldd	r24, Y+2	; 0x02
    40f2:	9b 81       	ldd	r25, Y+3	; 0x03
    40f4:	0e 94 6e 19 	call	0x32dc	; 0x32dc <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    40f8:	dc 01       	movw	r26, r24
    40fa:	cb 01       	movw	r24, r22
    40fc:	20 e0       	ldi	r18, 0x00	; 0
    40fe:	30 e0       	ldi	r19, 0x00	; 0
    4100:	a9 01       	movw	r20, r18
    4102:	bc 01       	movw	r22, r24
    4104:	cd 01       	movw	r24, r26
    4106:	0e 94 77 46 	call	0x8cee	; 0x8cee <__cmpsf2>
    410a:	88 23       	and	r24, r24
    410c:	11 f0       	breq	.+4      	; 0x4112 <main+0x288>
    410e:	81 e0       	ldi	r24, 0x01	; 1
    4110:	01 c0       	rjmp	.+2      	; 0x4114 <main+0x28a>
    4112:	80 e0       	ldi	r24, 0x00	; 0
    4114:	88 23       	and	r24, r24
    4116:	09 f4       	brne	.+2      	; 0x411a <main+0x290>
    4118:	82 c0       	rjmp	.+260    	; 0x421e <main+0x394>
		{
			isInitialized = true;
    411a:	81 e0       	ldi	r24, 0x01	; 1
    411c:	89 83       	std	Y+1, r24	; 0x01
			
			//ecefReferenceX, ecefReferenceY, ecefReferenceZ,ecefToLocalNEDRotationMatrix,
			CoordinateUtil::CalculateECEFToLocalNEDRotationMatrix(model->LatitudeDegrees(), model->LongitudeDegrees(), model->EcefToLocalNEDRotationMatrix);
    411e:	8a 81       	ldd	r24, Y+2	; 0x02
    4120:	9b 81       	ldd	r25, Y+3	; 0x03
    4122:	8c 01       	movw	r16, r24
    4124:	00 53       	subi	r16, 0x30	; 48
    4126:	1f 4f       	sbci	r17, 0xFF	; 255
    4128:	8a 81       	ldd	r24, Y+2	; 0x02
    412a:	9b 81       	ldd	r25, Y+3	; 0x03
    412c:	0e 94 6e 19 	call	0x32dc	; 0x32dc <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    4130:	6b 01       	movw	r12, r22
    4132:	7c 01       	movw	r14, r24
    4134:	8a 81       	ldd	r24, Y+2	; 0x02
    4136:	9b 81       	ldd	r25, Y+3	; 0x03
    4138:	0e 94 56 19 	call	0x32ac	; 0x32ac <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    413c:	dc 01       	movw	r26, r24
    413e:	cb 01       	movw	r24, r22
    4140:	a7 01       	movw	r20, r14
    4142:	96 01       	movw	r18, r12
    4144:	bc 01       	movw	r22, r24
    4146:	cd 01       	movw	r24, r26
    4148:	0e 94 7d 40 	call	0x80fa	; 0x80fa <_ZN10helicopter4util14CoordinateUtil37CalculateECEFToLocalNEDRotationMatrixEffPA3_f>
	
			float initialXPositionEcef = 0;
    414c:	18 a6       	std	Y+40, r1	; 0x28
    414e:	19 a6       	std	Y+41, r1	; 0x29
    4150:	1a a6       	std	Y+42, r1	; 0x2a
    4152:	1b a6       	std	Y+43, r1	; 0x2b
			float initialYPositionEcef = 0;
    4154:	1c a6       	std	Y+44, r1	; 0x2c
    4156:	1d a6       	std	Y+45, r1	; 0x2d
    4158:	1e a6       	std	Y+46, r1	; 0x2e
    415a:	1f a6       	std	Y+47, r1	; 0x2f
			float initialZPositionEcef = 0;
    415c:	18 aa       	std	Y+48, r1	; 0x30
    415e:	19 aa       	std	Y+49, r1	; 0x31
    4160:	1a aa       	std	Y+50, r1	; 0x32
    4162:	1b aa       	std	Y+51, r1	; 0x33
			CoordinateUtil::ConvertFromGeodeticToECEF(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), initialXPositionEcef, initialYPositionEcef, initialZPositionEcef);
    4164:	8a 81       	ldd	r24, Y+2	; 0x02
    4166:	9b 81       	ldd	r25, Y+3	; 0x03
    4168:	0e 94 f8 18 	call	0x31f0	; 0x31f0 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    416c:	6c ab       	std	Y+52, r22	; 0x34
    416e:	7d ab       	std	Y+53, r23	; 0x35
    4170:	8e ab       	std	Y+54, r24	; 0x36
    4172:	9f ab       	std	Y+55, r25	; 0x37
    4174:	8a 81       	ldd	r24, Y+2	; 0x02
    4176:	9b 81       	ldd	r25, Y+3	; 0x03
    4178:	0e 94 6e 19 	call	0x32dc	; 0x32dc <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    417c:	2b 01       	movw	r4, r22
    417e:	3c 01       	movw	r6, r24
    4180:	8a 81       	ldd	r24, Y+2	; 0x02
    4182:	9b 81       	ldd	r25, Y+3	; 0x03
    4184:	0e 94 56 19 	call	0x32ac	; 0x32ac <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    4188:	dc 01       	movw	r26, r24
    418a:	cb 01       	movw	r24, r22
    418c:	be 01       	movw	r22, r28
    418e:	60 5d       	subi	r22, 0xD0	; 208
    4190:	7f 4f       	sbci	r23, 0xFF	; 255
    4192:	ae 01       	movw	r20, r28
    4194:	44 5d       	subi	r20, 0xD4	; 212
    4196:	5f 4f       	sbci	r21, 0xFF	; 255
    4198:	9e 01       	movw	r18, r28
    419a:	28 5d       	subi	r18, 0xD8	; 216
    419c:	3f 4f       	sbci	r19, 0xFF	; 255
    419e:	4b 01       	movw	r8, r22
    41a0:	5a 01       	movw	r10, r20
    41a2:	69 01       	movw	r12, r18
    41a4:	ec a8       	ldd	r14, Y+52	; 0x34
    41a6:	fd a8       	ldd	r15, Y+53	; 0x35
    41a8:	0e a9       	ldd	r16, Y+54	; 0x36
    41aa:	1f a9       	ldd	r17, Y+55	; 0x37
    41ac:	a3 01       	movw	r20, r6
    41ae:	92 01       	movw	r18, r4
    41b0:	bc 01       	movw	r22, r24
    41b2:	cd 01       	movw	r24, r26
    41b4:	0e 94 2c 42 	call	0x8458	; 0x8458 <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEfffRfS2_S2_>
			
			model->InitialXPositionEcef(initialXPositionEcef);
    41b8:	88 a5       	ldd	r24, Y+40	; 0x28
    41ba:	99 a5       	ldd	r25, Y+41	; 0x29
    41bc:	aa a5       	ldd	r26, Y+42	; 0x2a
    41be:	bb a5       	ldd	r27, Y+43	; 0x2b
    41c0:	bc 01       	movw	r22, r24
    41c2:	cd 01       	movw	r24, r26
    41c4:	0e 94 e6 46 	call	0x8dcc	; 0x8dcc <__fixsfsi>
    41c8:	dc 01       	movw	r26, r24
    41ca:	cb 01       	movw	r24, r22
    41cc:	2a 81       	ldd	r18, Y+2	; 0x02
    41ce:	3b 81       	ldd	r19, Y+3	; 0x03
    41d0:	ac 01       	movw	r20, r24
    41d2:	bd 01       	movw	r22, r26
    41d4:	c9 01       	movw	r24, r18
    41d6:	0e 94 86 19 	call	0x330c	; 0x330c <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl>
			model->InitialYPositionEcef(initialYPositionEcef);
    41da:	8c a5       	ldd	r24, Y+44	; 0x2c
    41dc:	9d a5       	ldd	r25, Y+45	; 0x2d
    41de:	ae a5       	ldd	r26, Y+46	; 0x2e
    41e0:	bf a5       	ldd	r27, Y+47	; 0x2f
    41e2:	bc 01       	movw	r22, r24
    41e4:	cd 01       	movw	r24, r26
    41e6:	0e 94 e6 46 	call	0x8dcc	; 0x8dcc <__fixsfsi>
    41ea:	dc 01       	movw	r26, r24
    41ec:	cb 01       	movw	r24, r22
    41ee:	2a 81       	ldd	r18, Y+2	; 0x02
    41f0:	3b 81       	ldd	r19, Y+3	; 0x03
    41f2:	ac 01       	movw	r20, r24
    41f4:	bd 01       	movw	r22, r26
    41f6:	c9 01       	movw	r24, r18
    41f8:	0e 94 ac 19 	call	0x3358	; 0x3358 <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl>
			model->InitialZPositionEcef(initialZPositionEcef);
    41fc:	88 a9       	ldd	r24, Y+48	; 0x30
    41fe:	99 a9       	ldd	r25, Y+49	; 0x31
    4200:	aa a9       	ldd	r26, Y+50	; 0x32
    4202:	bb a9       	ldd	r27, Y+51	; 0x33
    4204:	bc 01       	movw	r22, r24
    4206:	cd 01       	movw	r24, r26
    4208:	0e 94 e6 46 	call	0x8dcc	; 0x8dcc <__fixsfsi>
    420c:	dc 01       	movw	r26, r24
    420e:	cb 01       	movw	r24, r22
    4210:	2a 81       	ldd	r18, Y+2	; 0x02
    4212:	3b 81       	ldd	r19, Y+3	; 0x03
    4214:	ac 01       	movw	r20, r24
    4216:	bd 01       	movw	r22, r26
    4218:	c9 01       	movw	r24, r18
    421a:	0e 94 d2 19 	call	0x33a4	; 0x33a4 <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl>
    421e:	80 e0       	ldi	r24, 0x00	; 0
    4220:	90 e0       	ldi	r25, 0x00	; 0
    4222:	a8 ec       	ldi	r26, 0xC8	; 200
    4224:	b2 e4       	ldi	r27, 0x42	; 66
    4226:	8a 8f       	std	Y+26, r24	; 0x1a
    4228:	9b 8f       	std	Y+27, r25	; 0x1b
    422a:	ac 8f       	std	Y+28, r26	; 0x1c
    422c:	bd 8f       	std	Y+29, r27	; 0x1d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    422e:	20 e0       	ldi	r18, 0x00	; 0
    4230:	30 e0       	ldi	r19, 0x00	; 0
    4232:	4a e7       	ldi	r20, 0x7A	; 122
    4234:	55 e4       	ldi	r21, 0x45	; 69
    4236:	6a 8d       	ldd	r22, Y+26	; 0x1a
    4238:	7b 8d       	ldd	r23, Y+27	; 0x1b
    423a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    423c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    423e:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    4242:	dc 01       	movw	r26, r24
    4244:	cb 01       	movw	r24, r22
    4246:	8e 8f       	std	Y+30, r24	; 0x1e
    4248:	9f 8f       	std	Y+31, r25	; 0x1f
    424a:	a8 a3       	std	Y+32, r26	; 0x20
    424c:	b9 a3       	std	Y+33, r27	; 0x21
	if (__tmp < 1.0)
    424e:	20 e0       	ldi	r18, 0x00	; 0
    4250:	30 e0       	ldi	r19, 0x00	; 0
    4252:	40 e8       	ldi	r20, 0x80	; 128
    4254:	5f e3       	ldi	r21, 0x3F	; 63
    4256:	6e 8d       	ldd	r22, Y+30	; 0x1e
    4258:	7f 8d       	ldd	r23, Y+31	; 0x1f
    425a:	88 a1       	ldd	r24, Y+32	; 0x20
    425c:	99 a1       	ldd	r25, Y+33	; 0x21
    425e:	0e 94 77 46 	call	0x8cee	; 0x8cee <__cmpsf2>
    4262:	88 23       	and	r24, r24
    4264:	2c f4       	brge	.+10     	; 0x4270 <main+0x3e6>
		__ticks = 1;
    4266:	81 e0       	ldi	r24, 0x01	; 1
    4268:	90 e0       	ldi	r25, 0x00	; 0
    426a:	9b a3       	std	Y+35, r25	; 0x23
    426c:	8a a3       	std	Y+34, r24	; 0x22
    426e:	46 c0       	rjmp	.+140    	; 0x42fc <main+0x472>
	else if (__tmp > 65535)
    4270:	20 e0       	ldi	r18, 0x00	; 0
    4272:	3f ef       	ldi	r19, 0xFF	; 255
    4274:	4f e7       	ldi	r20, 0x7F	; 127
    4276:	57 e4       	ldi	r21, 0x47	; 71
    4278:	6e 8d       	ldd	r22, Y+30	; 0x1e
    427a:	7f 8d       	ldd	r23, Y+31	; 0x1f
    427c:	88 a1       	ldd	r24, Y+32	; 0x20
    427e:	99 a1       	ldd	r25, Y+33	; 0x21
    4280:	0e 94 55 48 	call	0x90aa	; 0x90aa <__gesf2>
    4284:	18 16       	cp	r1, r24
    4286:	84 f5       	brge	.+96     	; 0x42e8 <main+0x45e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4288:	20 e0       	ldi	r18, 0x00	; 0
    428a:	30 e0       	ldi	r19, 0x00	; 0
    428c:	40 e2       	ldi	r20, 0x20	; 32
    428e:	51 e4       	ldi	r21, 0x41	; 65
    4290:	6a 8d       	ldd	r22, Y+26	; 0x1a
    4292:	7b 8d       	ldd	r23, Y+27	; 0x1b
    4294:	8c 8d       	ldd	r24, Y+28	; 0x1c
    4296:	9d 8d       	ldd	r25, Y+29	; 0x1d
    4298:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    429c:	dc 01       	movw	r26, r24
    429e:	cb 01       	movw	r24, r22
    42a0:	bc 01       	movw	r22, r24
    42a2:	cd 01       	movw	r24, r26
    42a4:	0e 94 eb 46 	call	0x8dd6	; 0x8dd6 <__fixunssfsi>
    42a8:	dc 01       	movw	r26, r24
    42aa:	cb 01       	movw	r24, r22
    42ac:	9b a3       	std	Y+35, r25	; 0x23
    42ae:	8a a3       	std	Y+34, r24	; 0x22
    42b0:	12 c0       	rjmp	.+36     	; 0x42d6 <main+0x44c>
    42b2:	80 e9       	ldi	r24, 0x90	; 144
    42b4:	91 e0       	ldi	r25, 0x01	; 1
    42b6:	9d a3       	std	Y+37, r25	; 0x25
    42b8:	8c a3       	std	Y+36, r24	; 0x24
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    42ba:	8c a1       	ldd	r24, Y+36	; 0x24
    42bc:	9d a1       	ldd	r25, Y+37	; 0x25
    42be:	8c 01       	movw	r16, r24
    42c0:	c8 01       	movw	r24, r16
    42c2:	01 97       	sbiw	r24, 0x01	; 1
    42c4:	f1 f7       	brne	.-4      	; 0x42c2 <main+0x438>
    42c6:	8c 01       	movw	r16, r24
    42c8:	1d a3       	std	Y+37, r17	; 0x25
    42ca:	0c a3       	std	Y+36, r16	; 0x24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42cc:	8a a1       	ldd	r24, Y+34	; 0x22
    42ce:	9b a1       	ldd	r25, Y+35	; 0x23
    42d0:	01 97       	sbiw	r24, 0x01	; 1
    42d2:	9b a3       	std	Y+35, r25	; 0x23
    42d4:	8a a3       	std	Y+34, r24	; 0x22
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    42d6:	21 e0       	ldi	r18, 0x01	; 1
    42d8:	8a a1       	ldd	r24, Y+34	; 0x22
    42da:	9b a1       	ldd	r25, Y+35	; 0x23
    42dc:	00 97       	sbiw	r24, 0x00	; 0
    42de:	09 f4       	brne	.+2      	; 0x42e2 <main+0x458>
    42e0:	20 e0       	ldi	r18, 0x00	; 0
    42e2:	22 23       	and	r18, r18
    42e4:	31 f7       	brne	.-52     	; 0x42b2 <main+0x428>
    42e6:	17 c0       	rjmp	.+46     	; 0x4316 <main+0x48c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    42e8:	6e 8d       	ldd	r22, Y+30	; 0x1e
    42ea:	7f 8d       	ldd	r23, Y+31	; 0x1f
    42ec:	88 a1       	ldd	r24, Y+32	; 0x20
    42ee:	99 a1       	ldd	r25, Y+33	; 0x21
    42f0:	0e 94 eb 46 	call	0x8dd6	; 0x8dd6 <__fixunssfsi>
    42f4:	dc 01       	movw	r26, r24
    42f6:	cb 01       	movw	r24, r22
    42f8:	9b a3       	std	Y+35, r25	; 0x23
    42fa:	8a a3       	std	Y+34, r24	; 0x22
    42fc:	8a a1       	ldd	r24, Y+34	; 0x22
    42fe:	9b a1       	ldd	r25, Y+35	; 0x23
    4300:	9f a3       	std	Y+39, r25	; 0x27
    4302:	8e a3       	std	Y+38, r24	; 0x26
    4304:	8e a1       	ldd	r24, Y+38	; 0x26
    4306:	9f a1       	ldd	r25, Y+39	; 0x27
    4308:	8c 01       	movw	r16, r24
    430a:	f8 01       	movw	r30, r16
    430c:	31 97       	sbiw	r30, 0x01	; 1
    430e:	f1 f7       	brne	.-4      	; 0x430c <main+0x482>
    4310:	8f 01       	movw	r16, r30
    4312:	1f a3       	std	Y+39, r17	; 0x27
    4314:	0e a3       	std	Y+38, r16	; 0x26
	
	
	//Wait until we receive location data before starting the scheduler
	//TODO rework this
	bool isInitialized = false;
	while (!isInitialized)
    4316:	99 81       	ldd	r25, Y+1	; 0x01
    4318:	81 e0       	ldi	r24, 0x01	; 1
    431a:	89 27       	eor	r24, r25
    431c:	88 23       	and	r24, r24
    431e:	09 f0       	breq	.+2      	; 0x4322 <main+0x498>
    4320:	cc ce       	rjmp	.-616    	; 0x40ba <main+0x230>
		_delay_ms(100);
	}
	
	
	
	scheduler->init(); //Sets up the timer registers, inits all tasks,
    4322:	88 8d       	ldd	r24, Y+24	; 0x18
    4324:	99 8d       	ldd	r25, Y+25	; 0x19
    4326:	0e 94 b9 36 	call	0x6d72	; 0x6d72 <_ZN10helicopter9scheduler9Scheduler4initEv>
	
	scheduler->start();
    432a:	88 8d       	ldd	r24, Y+24	; 0x18
    432c:	99 8d       	ldd	r25, Y+25	; 0x19
    432e:	0e 94 91 37 	call	0x6f22	; 0x6f22 <_ZN10helicopter9scheduler9Scheduler5startEv>
    4332:	01 c0       	rjmp	.+2      	; 0x4336 <main+0x4ac>
	
	
	while(1)
    4334:	00 00       	nop
	{
		//Checks to see if any tasks are ready to run an executes them.
		//goes to sleep (until the next timer tick) after processing all available tasks.
		scheduler->dispatch();
    4336:	88 8d       	ldd	r24, Y+24	; 0x18
    4338:	99 8d       	ldd	r25, Y+25	; 0x19
    433a:	0e 94 1a 37 	call	0x6e34	; 0x6e34 <_ZN10helicopter9scheduler9Scheduler8dispatchEv>
		
		/**
		 * Determine if the last processing frame was blown.
		 */
		if (scheduler->hasBlownFrame())
    433e:	88 8d       	ldd	r24, Y+24	; 0x18
    4340:	99 8d       	ldd	r25, Y+25	; 0x19
    4342:	0e 94 69 15 	call	0x2ad2	; 0x2ad2 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEv>
    4346:	88 23       	and	r24, r24
    4348:	a9 f3       	breq	.-22     	; 0x4334 <main+0x4aa>
		{
			pidController->addBlownFrame();
    434a:	8c 81       	ldd	r24, Y+4	; 0x04
    434c:	9d 81       	ldd	r25, Y+5	; 0x05
    434e:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <_ZN10helicopter10controller13PIDController13addBlownFrameEv>
	scheduler->init(); //Sets up the timer registers, inits all tasks,
	
	scheduler->start();
	
	
	while(1)
    4352:	f0 cf       	rjmp	.-32     	; 0x4334 <main+0x4aa>

00004354 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>:
	namespace tasks
	{
		/**
			* This task is used to periodically flash an LED on the flight computer.
			*/
		class FlashLEDTask : public Task
    4354:	cf 93       	push	r28
    4356:	df 93       	push	r29
    4358:	1f 92       	push	r1
    435a:	1f 92       	push	r1
    435c:	cd b7       	in	r28, 0x3d	; 61
    435e:	de b7       	in	r29, 0x3e	; 62
    4360:	9a 83       	std	Y+2, r25	; 0x02
    4362:	89 83       	std	Y+1, r24	; 0x01
    4364:	89 81       	ldd	r24, Y+1	; 0x01
    4366:	9a 81       	ldd	r25, Y+2	; 0x02
    4368:	28 e1       	ldi	r18, 0x18	; 24
    436a:	32 e0       	ldi	r19, 0x02	; 2
    436c:	fc 01       	movw	r30, r24
    436e:	31 83       	std	Z+1, r19	; 0x01
    4370:	20 83       	st	Z, r18
    4372:	89 81       	ldd	r24, Y+1	; 0x01
    4374:	9a 81       	ldd	r25, Y+2	; 0x02
    4376:	0e 94 90 14 	call	0x2920	; 0x2920 <_ZN10helicopter5tasks4TaskD1Ev>
    437a:	80 e0       	ldi	r24, 0x00	; 0
    437c:	90 e0       	ldi	r25, 0x00	; 0
    437e:	81 70       	andi	r24, 0x01	; 1
    4380:	99 27       	eor	r25, r25
    4382:	00 97       	sbiw	r24, 0x00	; 0
    4384:	21 f0       	breq	.+8      	; 0x438e <_ZN10helicopter5tasks12FlashLEDTaskD1Ev+0x3a>
    4386:	89 81       	ldd	r24, Y+1	; 0x01
    4388:	9a 81       	ldd	r25, Y+2	; 0x02
    438a:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    438e:	0f 90       	pop	r0
    4390:	0f 90       	pop	r0
    4392:	df 91       	pop	r29
    4394:	cf 91       	pop	r28
    4396:	08 95       	ret

00004398 <_ZN10helicopter5tasks12FlashLEDTaskD0Ev>:
    4398:	cf 93       	push	r28
    439a:	df 93       	push	r29
    439c:	1f 92       	push	r1
    439e:	1f 92       	push	r1
    43a0:	cd b7       	in	r28, 0x3d	; 61
    43a2:	de b7       	in	r29, 0x3e	; 62
    43a4:	9a 83       	std	Y+2, r25	; 0x02
    43a6:	89 83       	std	Y+1, r24	; 0x01
    43a8:	89 81       	ldd	r24, Y+1	; 0x01
    43aa:	9a 81       	ldd	r25, Y+2	; 0x02
    43ac:	0e 94 aa 21 	call	0x4354	; 0x4354 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>
    43b0:	89 81       	ldd	r24, Y+1	; 0x01
    43b2:	9a 81       	ldd	r25, Y+2	; 0x02
    43b4:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    43b8:	0f 90       	pop	r0
    43ba:	0f 90       	pop	r0
    43bc:	df 91       	pop	r29
    43be:	cf 91       	pop	r28
    43c0:	08 95       	ret

000043c2 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>:

using namespace helicopter::util;
using namespace helicopter::interfaces;

void GroundControlStationInterface::calculateChecksum (byte *msgPayload, int payloadSize, byte &checksumA, byte &checksumB)
{
    43c2:	0f 93       	push	r16
    43c4:	1f 93       	push	r17
    43c6:	cf 93       	push	r28
    43c8:	df 93       	push	r29
    43ca:	cd b7       	in	r28, 0x3d	; 61
    43cc:	de b7       	in	r29, 0x3e	; 62
    43ce:	2d 97       	sbiw	r28, 0x0d	; 13
    43d0:	0f b6       	in	r0, 0x3f	; 63
    43d2:	f8 94       	cli
    43d4:	de bf       	out	0x3e, r29	; 62
    43d6:	0f be       	out	0x3f, r0	; 63
    43d8:	cd bf       	out	0x3d, r28	; 61
    43da:	9d 83       	std	Y+5, r25	; 0x05
    43dc:	8c 83       	std	Y+4, r24	; 0x04
    43de:	7f 83       	std	Y+7, r23	; 0x07
    43e0:	6e 83       	std	Y+6, r22	; 0x06
    43e2:	59 87       	std	Y+9, r21	; 0x09
    43e4:	48 87       	std	Y+8, r20	; 0x08
    43e6:	3b 87       	std	Y+11, r19	; 0x0b
    43e8:	2a 87       	std	Y+10, r18	; 0x0a
    43ea:	1d 87       	std	Y+13, r17	; 0x0d
    43ec:	0c 87       	std	Y+12, r16	; 0x0c
	for (int i = 0; i < payloadSize; i++)
    43ee:	1a 82       	std	Y+2, r1	; 0x02
    43f0:	19 82       	std	Y+1, r1	; 0x01
    43f2:	26 c0       	rjmp	.+76     	; 0x4440 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x7e>
	{
		byte b = msgPayload[i];
    43f4:	89 81       	ldd	r24, Y+1	; 0x01
    43f6:	9a 81       	ldd	r25, Y+2	; 0x02
    43f8:	2e 81       	ldd	r18, Y+6	; 0x06
    43fa:	3f 81       	ldd	r19, Y+7	; 0x07
    43fc:	82 0f       	add	r24, r18
    43fe:	93 1f       	adc	r25, r19
    4400:	fc 01       	movw	r30, r24
    4402:	80 81       	ld	r24, Z
    4404:	8b 83       	std	Y+3, r24	; 0x03
		
		//These fields can overflow, but that is intentional.
		checksumA = (byte) (checksumA + b);
    4406:	8a 85       	ldd	r24, Y+10	; 0x0a
    4408:	9b 85       	ldd	r25, Y+11	; 0x0b
    440a:	fc 01       	movw	r30, r24
    440c:	90 81       	ld	r25, Z
    440e:	8b 81       	ldd	r24, Y+3	; 0x03
    4410:	29 2f       	mov	r18, r25
    4412:	28 0f       	add	r18, r24
    4414:	8a 85       	ldd	r24, Y+10	; 0x0a
    4416:	9b 85       	ldd	r25, Y+11	; 0x0b
    4418:	fc 01       	movw	r30, r24
    441a:	20 83       	st	Z, r18
		checksumB = (byte) (checksumB + checksumA);
    441c:	8c 85       	ldd	r24, Y+12	; 0x0c
    441e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4420:	fc 01       	movw	r30, r24
    4422:	20 81       	ld	r18, Z
    4424:	8a 85       	ldd	r24, Y+10	; 0x0a
    4426:	9b 85       	ldd	r25, Y+11	; 0x0b
    4428:	fc 01       	movw	r30, r24
    442a:	80 81       	ld	r24, Z
    442c:	28 0f       	add	r18, r24
    442e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4430:	9d 85       	ldd	r25, Y+13	; 0x0d
    4432:	fc 01       	movw	r30, r24
    4434:	20 83       	st	Z, r18
using namespace helicopter::util;
using namespace helicopter::interfaces;

void GroundControlStationInterface::calculateChecksum (byte *msgPayload, int payloadSize, byte &checksumA, byte &checksumB)
{
	for (int i = 0; i < payloadSize; i++)
    4436:	89 81       	ldd	r24, Y+1	; 0x01
    4438:	9a 81       	ldd	r25, Y+2	; 0x02
    443a:	01 96       	adiw	r24, 0x01	; 1
    443c:	9a 83       	std	Y+2, r25	; 0x02
    443e:	89 83       	std	Y+1, r24	; 0x01
    4440:	41 e0       	ldi	r20, 0x01	; 1
    4442:	29 81       	ldd	r18, Y+1	; 0x01
    4444:	3a 81       	ldd	r19, Y+2	; 0x02
    4446:	88 85       	ldd	r24, Y+8	; 0x08
    4448:	99 85       	ldd	r25, Y+9	; 0x09
    444a:	28 17       	cp	r18, r24
    444c:	39 07       	cpc	r19, r25
    444e:	0c f0       	brlt	.+2      	; 0x4452 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x90>
    4450:	40 e0       	ldi	r20, 0x00	; 0
    4452:	44 23       	and	r20, r20
    4454:	79 f6       	brne	.-98     	; 0x43f4 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x32>
		
		//These fields can overflow, but that is intentional.
		checksumA = (byte) (checksumA + b);
		checksumB = (byte) (checksumB + checksumA);
	}
}
    4456:	2d 96       	adiw	r28, 0x0d	; 13
    4458:	0f b6       	in	r0, 0x3f	; 63
    445a:	f8 94       	cli
    445c:	de bf       	out	0x3e, r29	; 62
    445e:	0f be       	out	0x3f, r0	; 63
    4460:	cd bf       	out	0x3d, r28	; 61
    4462:	df 91       	pop	r29
    4464:	cf 91       	pop	r28
    4466:	1f 91       	pop	r17
    4468:	0f 91       	pop	r16
    446a:	08 95       	ret

0000446c <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>:

int GroundControlStationInterface::transmit(Message *msgToSend)
{
    446c:	cf 92       	push	r12
    446e:	df 92       	push	r13
    4470:	ef 92       	push	r14
    4472:	ff 92       	push	r15
    4474:	0f 93       	push	r16
    4476:	1f 93       	push	r17
    4478:	cf 93       	push	r28
    447a:	df 93       	push	r29
    447c:	cd b7       	in	r28, 0x3d	; 61
    447e:	de b7       	in	r29, 0x3e	; 62
    4480:	64 97       	sbiw	r28, 0x14	; 20
    4482:	0f b6       	in	r0, 0x3f	; 63
    4484:	f8 94       	cli
    4486:	de bf       	out	0x3e, r29	; 62
    4488:	0f be       	out	0x3f, r0	; 63
    448a:	cd bf       	out	0x3d, r28	; 61
    448c:	9a 8b       	std	Y+18, r25	; 0x12
    448e:	89 8b       	std	Y+17, r24	; 0x11
    4490:	7c 8b       	std	Y+20, r23	; 0x14
    4492:	6b 8b       	std	Y+19, r22	; 0x13
		delete [] msgPayload;
		msgPayload = NULL;
	}
	
	return status;
}
    4494:	ed b6       	in	r14, 0x3d	; 61
    4496:	fe b6       	in	r15, 0x3e	; 62
	}
}

int GroundControlStationInterface::transmit(Message *msgToSend)
{
	int status = 0;
    4498:	1a 82       	std	Y+2, r1	; 0x02
    449a:	19 82       	std	Y+1, r1	; 0x01
	
	if (msgToSend != NULL)
    449c:	8b 89       	ldd	r24, Y+19	; 0x13
    449e:	9c 89       	ldd	r25, Y+20	; 0x14
    44a0:	00 97       	sbiw	r24, 0x00	; 0
    44a2:	09 f4       	brne	.+2      	; 0x44a6 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x3a>
    44a4:	b3 c0       	rjmp	.+358    	; 0x460c <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x1a0>
    44a6:	8d b7       	in	r24, 0x3d	; 61
    44a8:	9e b7       	in	r25, 0x3e	; 62
    44aa:	6c 01       	movw	r12, r24
	{
		byte *msgPayload = msgToSend->getBytes();
    44ac:	8b 89       	ldd	r24, Y+19	; 0x13
    44ae:	9c 89       	ldd	r25, Y+20	; 0x14
    44b0:	fc 01       	movw	r30, r24
    44b2:	80 81       	ld	r24, Z
    44b4:	91 81       	ldd	r25, Z+1	; 0x01
    44b6:	04 96       	adiw	r24, 0x04	; 4
    44b8:	fc 01       	movw	r30, r24
    44ba:	20 81       	ld	r18, Z
    44bc:	31 81       	ldd	r19, Z+1	; 0x01
    44be:	8b 89       	ldd	r24, Y+19	; 0x13
    44c0:	9c 89       	ldd	r25, Y+20	; 0x14
    44c2:	f9 01       	movw	r30, r18
    44c4:	19 95       	eicall
    44c6:	9e 83       	std	Y+6, r25	; 0x06
    44c8:	8d 83       	std	Y+5, r24	; 0x05
		
		int payloadSize = msgToSend->getMessageSize();
    44ca:	8b 89       	ldd	r24, Y+19	; 0x13
    44cc:	9c 89       	ldd	r25, Y+20	; 0x14
    44ce:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message14getMessageSizeEv>
    44d2:	98 87       	std	Y+8, r25	; 0x08
    44d4:	8f 83       	std	Y+7, r24	; 0x07
		
		int completeMsgSize = payloadSize + MsgHeaderFooterSize;;
    44d6:	8f 81       	ldd	r24, Y+7	; 0x07
    44d8:	98 85       	ldd	r25, Y+8	; 0x08
    44da:	05 96       	adiw	r24, 0x05	; 5
    44dc:	9a 87       	std	Y+10, r25	; 0x0a
    44de:	89 87       	std	Y+9, r24	; 0x09

		byte completeMsg[completeMsgSize];
    44e0:	89 85       	ldd	r24, Y+9	; 0x09
    44e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    44e4:	01 97       	sbiw	r24, 0x01	; 1
    44e6:	9c 87       	std	Y+12, r25	; 0x0c
    44e8:	8b 87       	std	Y+11, r24	; 0x0b
    44ea:	01 96       	adiw	r24, 0x01	; 1
    44ec:	2d b7       	in	r18, 0x3d	; 61
    44ee:	3e b7       	in	r19, 0x3e	; 62
    44f0:	28 1b       	sub	r18, r24
    44f2:	39 0b       	sbc	r19, r25
    44f4:	0f b6       	in	r0, 0x3f	; 63
    44f6:	f8 94       	cli
    44f8:	3e bf       	out	0x3e, r19	; 62
    44fa:	0f be       	out	0x3f, r0	; 63
    44fc:	2d bf       	out	0x3d, r18	; 61
    44fe:	8d b7       	in	r24, 0x3d	; 61
    4500:	9e b7       	in	r25, 0x3e	; 62
    4502:	01 96       	adiw	r24, 0x01	; 1
    4504:	9e 87       	std	Y+14, r25	; 0x0e
    4506:	8d 87       	std	Y+13, r24	; 0x0d
		
		completeMsg[0] = GroundControlStationInterface::SyncByte1;
    4508:	8d 85       	ldd	r24, Y+13	; 0x0d
    450a:	9e 85       	ldd	r25, Y+14	; 0x0e
    450c:	25 eb       	ldi	r18, 0xB5	; 181
    450e:	fc 01       	movw	r30, r24
    4510:	20 83       	st	Z, r18
		completeMsg[1] = GroundControlStationInterface::SyncByte2;
    4512:	8d 85       	ldd	r24, Y+13	; 0x0d
    4514:	9e 85       	ldd	r25, Y+14	; 0x0e
    4516:	22 e6       	ldi	r18, 0x62	; 98
    4518:	fc 01       	movw	r30, r24
    451a:	21 83       	std	Z+1, r18	; 0x01
		completeMsg[2] = GroundControlStationInterface::SyncByte3;
    451c:	8d 85       	ldd	r24, Y+13	; 0x0d
    451e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4520:	27 ed       	ldi	r18, 0xD7	; 215
    4522:	fc 01       	movw	r30, r24
    4524:	22 83       	std	Z+2, r18	; 0x02
		
		memcpy(&completeMsg[3], msgPayload, payloadSize);
    4526:	4f 81       	ldd	r20, Y+7	; 0x07
    4528:	58 85       	ldd	r21, Y+8	; 0x08
    452a:	8d 85       	ldd	r24, Y+13	; 0x0d
    452c:	9e 85       	ldd	r25, Y+14	; 0x0e
    452e:	03 96       	adiw	r24, 0x03	; 3
    4530:	2d 81       	ldd	r18, Y+5	; 0x05
    4532:	3e 81       	ldd	r19, Y+6	; 0x06
    4534:	b9 01       	movw	r22, r18
    4536:	0e 94 f7 4b 	call	0x97ee	; 0x97ee <memcpy>
		
		byte checksumA = 0;
    453a:	1f 86       	std	Y+15, r1	; 0x0f
		byte checksumB = 0;
    453c:	18 8a       	std	Y+16, r1	; 0x10
		
		calculateChecksum(msgPayload, payloadSize, checksumA, checksumB);
    453e:	fe 01       	movw	r30, r28
    4540:	70 96       	adiw	r30, 0x10	; 16
    4542:	9e 01       	movw	r18, r28
    4544:	21 5f       	subi	r18, 0xF1	; 241
    4546:	3f 4f       	sbci	r19, 0xFF	; 255
    4548:	4f 81       	ldd	r20, Y+7	; 0x07
    454a:	58 85       	ldd	r21, Y+8	; 0x08
    454c:	6d 81       	ldd	r22, Y+5	; 0x05
    454e:	7e 81       	ldd	r23, Y+6	; 0x06
    4550:	89 89       	ldd	r24, Y+17	; 0x11
    4552:	9a 89       	ldd	r25, Y+18	; 0x12
    4554:	8f 01       	movw	r16, r30
    4556:	0e 94 e1 21 	call	0x43c2	; 0x43c2 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>
		
		completeMsg[completeMsgSize - 2] = checksumA;
    455a:	89 85       	ldd	r24, Y+9	; 0x09
    455c:	9a 85       	ldd	r25, Y+10	; 0x0a
    455e:	02 97       	sbiw	r24, 0x02	; 2
    4560:	4f 85       	ldd	r20, Y+15	; 0x0f
    4562:	2d 85       	ldd	r18, Y+13	; 0x0d
    4564:	3e 85       	ldd	r19, Y+14	; 0x0e
    4566:	82 0f       	add	r24, r18
    4568:	93 1f       	adc	r25, r19
    456a:	fc 01       	movw	r30, r24
    456c:	40 83       	st	Z, r20
		completeMsg[completeMsgSize - 1] = checksumB;
    456e:	89 85       	ldd	r24, Y+9	; 0x09
    4570:	9a 85       	ldd	r25, Y+10	; 0x0a
    4572:	01 97       	sbiw	r24, 0x01	; 1
    4574:	48 89       	ldd	r20, Y+16	; 0x10
    4576:	2d 85       	ldd	r18, Y+13	; 0x0d
    4578:	3e 85       	ldd	r19, Y+14	; 0x0e
    457a:	82 0f       	add	r24, r18
    457c:	93 1f       	adc	r25, r19
    457e:	fc 01       	movw	r30, r24
    4580:	40 83       	st	Z, r20
		
		//iterate over the bytes and transmit them, unless there was an error.
		for (int i = 0; i < completeMsgSize && status == 0; i++)
    4582:	1c 82       	std	Y+4, r1	; 0x04
    4584:	1b 82       	std	Y+3, r1	; 0x03
    4586:	23 c0       	rjmp	.+70     	; 0x45ce <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x162>
		{
			status = serialDriver->transmitByte(completeMsg[i]);
    4588:	89 89       	ldd	r24, Y+17	; 0x11
    458a:	9a 89       	ldd	r25, Y+18	; 0x12
    458c:	fc 01       	movw	r30, r24
    458e:	80 81       	ld	r24, Z
    4590:	91 81       	ldd	r25, Z+1	; 0x01
    4592:	fc 01       	movw	r30, r24
    4594:	80 81       	ld	r24, Z
    4596:	91 81       	ldd	r25, Z+1	; 0x01
    4598:	06 96       	adiw	r24, 0x06	; 6
    459a:	fc 01       	movw	r30, r24
    459c:	20 81       	ld	r18, Z
    459e:	31 81       	ldd	r19, Z+1	; 0x01
    45a0:	4d 85       	ldd	r20, Y+13	; 0x0d
    45a2:	5e 85       	ldd	r21, Y+14	; 0x0e
    45a4:	8b 81       	ldd	r24, Y+3	; 0x03
    45a6:	9c 81       	ldd	r25, Y+4	; 0x04
    45a8:	84 0f       	add	r24, r20
    45aa:	95 1f       	adc	r25, r21
    45ac:	fc 01       	movw	r30, r24
    45ae:	40 81       	ld	r20, Z
    45b0:	89 89       	ldd	r24, Y+17	; 0x11
    45b2:	9a 89       	ldd	r25, Y+18	; 0x12
    45b4:	fc 01       	movw	r30, r24
    45b6:	80 81       	ld	r24, Z
    45b8:	91 81       	ldd	r25, Z+1	; 0x01
    45ba:	64 2f       	mov	r22, r20
    45bc:	f9 01       	movw	r30, r18
    45be:	19 95       	eicall
    45c0:	9a 83       	std	Y+2, r25	; 0x02
    45c2:	89 83       	std	Y+1, r24	; 0x01
		
		completeMsg[completeMsgSize - 2] = checksumA;
		completeMsg[completeMsgSize - 1] = checksumB;
		
		//iterate over the bytes and transmit them, unless there was an error.
		for (int i = 0; i < completeMsgSize && status == 0; i++)
    45c4:	8b 81       	ldd	r24, Y+3	; 0x03
    45c6:	9c 81       	ldd	r25, Y+4	; 0x04
    45c8:	01 96       	adiw	r24, 0x01	; 1
    45ca:	9c 83       	std	Y+4, r25	; 0x04
    45cc:	8b 83       	std	Y+3, r24	; 0x03
    45ce:	2b 81       	ldd	r18, Y+3	; 0x03
    45d0:	3c 81       	ldd	r19, Y+4	; 0x04
    45d2:	89 85       	ldd	r24, Y+9	; 0x09
    45d4:	9a 85       	ldd	r25, Y+10	; 0x0a
    45d6:	28 17       	cp	r18, r24
    45d8:	39 07       	cpc	r19, r25
    45da:	34 f4       	brge	.+12     	; 0x45e8 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x17c>
    45dc:	89 81       	ldd	r24, Y+1	; 0x01
    45de:	9a 81       	ldd	r25, Y+2	; 0x02
    45e0:	00 97       	sbiw	r24, 0x00	; 0
    45e2:	11 f4       	brne	.+4      	; 0x45e8 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x17c>
    45e4:	81 e0       	ldi	r24, 0x01	; 1
    45e6:	01 c0       	rjmp	.+2      	; 0x45ea <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x17e>
    45e8:	80 e0       	ldi	r24, 0x00	; 0
    45ea:	88 23       	and	r24, r24
    45ec:	69 f6       	brne	.-102    	; 0x4588 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x11c>
		{
			status = serialDriver->transmitByte(completeMsg[i]);
		}
		
		delete [] msgPayload;
    45ee:	8d 81       	ldd	r24, Y+5	; 0x05
    45f0:	9e 81       	ldd	r25, Y+6	; 0x06
    45f2:	00 97       	sbiw	r24, 0x00	; 0
    45f4:	21 f0       	breq	.+8      	; 0x45fe <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x192>
    45f6:	8d 81       	ldd	r24, Y+5	; 0x05
    45f8:	9e 81       	ldd	r25, Y+6	; 0x06
    45fa:	0e 94 49 40 	call	0x8092	; 0x8092 <_ZdaPv>
		msgPayload = NULL;
    45fe:	1e 82       	std	Y+6, r1	; 0x06
    4600:	1d 82       	std	Y+5, r1	; 0x05
    4602:	0f b6       	in	r0, 0x3f	; 63
    4604:	f8 94       	cli
    4606:	de be       	out	0x3e, r13	; 62
    4608:	0f be       	out	0x3f, r0	; 63
    460a:	cd be       	out	0x3d, r12	; 61
	}
	
	return status;
    460c:	89 81       	ldd	r24, Y+1	; 0x01
    460e:	9a 81       	ldd	r25, Y+2	; 0x02
}
    4610:	0f b6       	in	r0, 0x3f	; 63
    4612:	f8 94       	cli
    4614:	fe be       	out	0x3e, r15	; 62
    4616:	0f be       	out	0x3f, r0	; 63
    4618:	ed be       	out	0x3d, r14	; 61
    461a:	64 96       	adiw	r28, 0x14	; 20
    461c:	0f b6       	in	r0, 0x3f	; 63
    461e:	f8 94       	cli
    4620:	de bf       	out	0x3e, r29	; 62
    4622:	0f be       	out	0x3f, r0	; 63
    4624:	cd bf       	out	0x3d, r28	; 61
    4626:	df 91       	pop	r29
    4628:	cf 91       	pop	r28
    462a:	1f 91       	pop	r17
    462c:	0f 91       	pop	r16
    462e:	ff 90       	pop	r15
    4630:	ef 90       	pop	r14
    4632:	df 90       	pop	r13
    4634:	cf 90       	pop	r12
    4636:	08 95       	ret

00004638 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE>:
 * a lot of data is constantly received before that timeout, and none of the data
 * is a sync byte, then this method will never stop receiving bytes and will
 * lock up the rest of the system. 
 */
int GroundControlStationInterface::receive(Message * &receivedMessage)
{
    4638:	cf 92       	push	r12
    463a:	df 92       	push	r13
    463c:	ef 92       	push	r14
    463e:	ff 92       	push	r15
    4640:	0f 93       	push	r16
    4642:	1f 93       	push	r17
    4644:	cf 93       	push	r28
    4646:	df 93       	push	r29
    4648:	cd b7       	in	r28, 0x3d	; 61
    464a:	de b7       	in	r29, 0x3e	; 62
    464c:	66 97       	sbiw	r28, 0x16	; 22
    464e:	0f b6       	in	r0, 0x3f	; 63
    4650:	f8 94       	cli
    4652:	de bf       	out	0x3e, r29	; 62
    4654:	0f be       	out	0x3f, r0	; 63
    4656:	cd bf       	out	0x3d, r28	; 61
    4658:	9c 8b       	std	Y+20, r25	; 0x14
    465a:	8b 8b       	std	Y+19, r24	; 0x13
    465c:	7e 8b       	std	Y+22, r23	; 0x16
    465e:	6d 8b       	std	Y+21, r22	; 0x15
	{
		receivedMessage = NULL;
	}
	
	return status;
    4660:	ed b6       	in	r14, 0x3d	; 61
    4662:	fe b6       	in	r15, 0x3e	; 62
 * is a sync byte, then this method will never stop receiving bytes and will
 * lock up the rest of the system. 
 */
int GroundControlStationInterface::receive(Message * &receivedMessage)
{
	int status = 0;
    4664:	1a 82       	std	Y+2, r1	; 0x02
    4666:	19 82       	std	Y+1, r1	; 0x01
	
    byte firstSyncByte = 0;
    4668:	1b 82       	std	Y+3, r1	; 0x03
    byte secondSyncByte = 0;
    466a:	1c 82       	std	Y+4, r1	; 0x04
    byte thirdSyncByte = 0;
    466c:	1d 86       	std	Y+13, r1	; 0x0d
	

	//Read until the sync bytes are received or we time out.
	//Throw away any 'garbage' bytes.
	while(!(firstSyncByte == SyncByte1 && secondSyncByte == SyncByte2 && thirdSyncByte == SyncByte3) && status == 0)
    466e:	1d c0       	rjmp	.+58     	; 0x46aa <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x72>
	{
		firstSyncByte = secondSyncByte;
    4670:	8c 81       	ldd	r24, Y+4	; 0x04
    4672:	8b 83       	std	Y+3, r24	; 0x03
		secondSyncByte = thirdSyncByte;
    4674:	8d 85       	ldd	r24, Y+13	; 0x0d
    4676:	8c 83       	std	Y+4, r24	; 0x04
		status = serialDriver->receiveByte(thirdSyncByte);
    4678:	8b 89       	ldd	r24, Y+19	; 0x13
    467a:	9c 89       	ldd	r25, Y+20	; 0x14
    467c:	fc 01       	movw	r30, r24
    467e:	80 81       	ld	r24, Z
    4680:	91 81       	ldd	r25, Z+1	; 0x01
    4682:	fc 01       	movw	r30, r24
    4684:	80 81       	ld	r24, Z
    4686:	91 81       	ldd	r25, Z+1	; 0x01
    4688:	08 96       	adiw	r24, 0x08	; 8
    468a:	fc 01       	movw	r30, r24
    468c:	20 81       	ld	r18, Z
    468e:	31 81       	ldd	r19, Z+1	; 0x01
    4690:	8b 89       	ldd	r24, Y+19	; 0x13
    4692:	9c 89       	ldd	r25, Y+20	; 0x14
    4694:	fc 01       	movw	r30, r24
    4696:	80 81       	ld	r24, Z
    4698:	91 81       	ldd	r25, Z+1	; 0x01
    469a:	ae 01       	movw	r20, r28
    469c:	43 5f       	subi	r20, 0xF3	; 243
    469e:	5f 4f       	sbci	r21, 0xFF	; 255
    46a0:	ba 01       	movw	r22, r20
    46a2:	f9 01       	movw	r30, r18
    46a4:	19 95       	eicall
    46a6:	9a 83       	std	Y+2, r25	; 0x02
    46a8:	89 83       	std	Y+1, r24	; 0x01
    byte thirdSyncByte = 0;
	

	//Read until the sync bytes are received or we time out.
	//Throw away any 'garbage' bytes.
	while(!(firstSyncByte == SyncByte1 && secondSyncByte == SyncByte2 && thirdSyncByte == SyncByte3) && status == 0)
    46aa:	8b 81       	ldd	r24, Y+3	; 0x03
    46ac:	85 3b       	cpi	r24, 0xB5	; 181
    46ae:	31 f4       	brne	.+12     	; 0x46bc <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x84>
    46b0:	8c 81       	ldd	r24, Y+4	; 0x04
    46b2:	82 36       	cpi	r24, 0x62	; 98
    46b4:	19 f4       	brne	.+6      	; 0x46bc <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x84>
    46b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    46b8:	87 3d       	cpi	r24, 0xD7	; 215
    46ba:	31 f0       	breq	.+12     	; 0x46c8 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x90>
    46bc:	89 81       	ldd	r24, Y+1	; 0x01
    46be:	9a 81       	ldd	r25, Y+2	; 0x02
    46c0:	00 97       	sbiw	r24, 0x00	; 0
    46c2:	11 f4       	brne	.+4      	; 0x46c8 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x90>
    46c4:	81 e0       	ldi	r24, 0x01	; 1
    46c6:	01 c0       	rjmp	.+2      	; 0x46ca <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x92>
    46c8:	80 e0       	ldi	r24, 0x00	; 0
    46ca:	88 23       	and	r24, r24
    46cc:	89 f6       	brne	.-94     	; 0x4670 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x38>
		firstSyncByte = secondSyncByte;
		secondSyncByte = thirdSyncByte;
		status = serialDriver->receiveByte(thirdSyncByte);
	}
	
	if (status == 0)
    46ce:	89 81       	ldd	r24, Y+1	; 0x01
    46d0:	9a 81       	ldd	r25, Y+2	; 0x02
    46d2:	00 97       	sbiw	r24, 0x00	; 0
    46d4:	09 f0       	breq	.+2      	; 0x46d8 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xa0>
    46d6:	f9 c0       	rjmp	.+498    	; 0x48ca <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x292>
	{
		//once we have found a valid message, get the message ID
		byte msgType = 0;
    46d8:	1e 86       	std	Y+14, r1	; 0x0e
		
		status = serialDriver->receiveByte(msgType);
    46da:	8b 89       	ldd	r24, Y+19	; 0x13
    46dc:	9c 89       	ldd	r25, Y+20	; 0x14
    46de:	fc 01       	movw	r30, r24
    46e0:	80 81       	ld	r24, Z
    46e2:	91 81       	ldd	r25, Z+1	; 0x01
    46e4:	fc 01       	movw	r30, r24
    46e6:	80 81       	ld	r24, Z
    46e8:	91 81       	ldd	r25, Z+1	; 0x01
    46ea:	08 96       	adiw	r24, 0x08	; 8
    46ec:	fc 01       	movw	r30, r24
    46ee:	20 81       	ld	r18, Z
    46f0:	31 81       	ldd	r19, Z+1	; 0x01
    46f2:	8b 89       	ldd	r24, Y+19	; 0x13
    46f4:	9c 89       	ldd	r25, Y+20	; 0x14
    46f6:	fc 01       	movw	r30, r24
    46f8:	80 81       	ld	r24, Z
    46fa:	91 81       	ldd	r25, Z+1	; 0x01
    46fc:	ae 01       	movw	r20, r28
    46fe:	42 5f       	subi	r20, 0xF2	; 242
    4700:	5f 4f       	sbci	r21, 0xFF	; 255
    4702:	ba 01       	movw	r22, r20
    4704:	f9 01       	movw	r30, r18
    4706:	19 95       	eicall
    4708:	9a 83       	std	Y+2, r25	; 0x02
    470a:	89 83       	std	Y+1, r24	; 0x01
		
		if (status == 0)
    470c:	89 81       	ldd	r24, Y+1	; 0x01
    470e:	9a 81       	ldd	r25, Y+2	; 0x02
    4710:	00 97       	sbiw	r24, 0x00	; 0
    4712:	09 f0       	breq	.+2      	; 0x4716 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xde>
    4714:	da c0       	rjmp	.+436    	; 0x48ca <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x292>
		{
			int msgSize = 0;
    4716:	1e 82       	std	Y+6, r1	; 0x06
    4718:	1d 82       	std	Y+5, r1	; 0x05
			
			switch(msgType)
    471a:	8e 85       	ldd	r24, Y+14	; 0x0e
    471c:	88 2f       	mov	r24, r24
    471e:	90 e0       	ldi	r25, 0x00	; 0
    4720:	82 30       	cpi	r24, 0x02	; 2
    4722:	91 05       	cpc	r25, r1
    4724:	29 f4       	brne	.+10     	; 0x4730 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xf8>
			{
				case SystemTelemetryMessage::MessageType:
					msgSize = SystemTelemetryMessage::MessageSize;
    4726:	85 ee       	ldi	r24, 0xE5	; 229
    4728:	90 e0       	ldi	r25, 0x00	; 0
    472a:	9e 83       	std	Y+6, r25	; 0x06
    472c:	8d 83       	std	Y+5, r24	; 0x05
					break;
    472e:	05 c0       	rjmp	.+10     	; 0x473a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x102>
				default:
					//unrecognized message type.
					status = -2;
    4730:	8e ef       	ldi	r24, 0xFE	; 254
    4732:	9f ef       	ldi	r25, 0xFF	; 255
    4734:	9a 83       	std	Y+2, r25	; 0x02
    4736:	89 83       	std	Y+1, r24	; 0x01
					break;
    4738:	00 00       	nop
			}
			
			if (status == 0)
    473a:	89 81       	ldd	r24, Y+1	; 0x01
    473c:	9a 81       	ldd	r25, Y+2	; 0x02
    473e:	00 97       	sbiw	r24, 0x00	; 0
    4740:	09 f0       	breq	.+2      	; 0x4744 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x10c>
    4742:	c3 c0       	rjmp	.+390    	; 0x48ca <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x292>
    4744:	8d b7       	in	r24, 0x3d	; 61
    4746:	9e b7       	in	r25, 0x3e	; 62
    4748:	6c 01       	movw	r12, r24
			{
				byte messagePayload[msgSize];
    474a:	8d 81       	ldd	r24, Y+5	; 0x05
    474c:	9e 81       	ldd	r25, Y+6	; 0x06
    474e:	01 97       	sbiw	r24, 0x01	; 1
    4750:	9a 87       	std	Y+10, r25	; 0x0a
    4752:	89 87       	std	Y+9, r24	; 0x09
    4754:	01 96       	adiw	r24, 0x01	; 1
    4756:	2d b7       	in	r18, 0x3d	; 61
    4758:	3e b7       	in	r19, 0x3e	; 62
    475a:	28 1b       	sub	r18, r24
    475c:	39 0b       	sbc	r19, r25
    475e:	0f b6       	in	r0, 0x3f	; 63
    4760:	f8 94       	cli
    4762:	3e bf       	out	0x3e, r19	; 62
    4764:	0f be       	out	0x3f, r0	; 63
    4766:	2d bf       	out	0x3d, r18	; 61
    4768:	8d b7       	in	r24, 0x3d	; 61
    476a:	9e b7       	in	r25, 0x3e	; 62
    476c:	01 96       	adiw	r24, 0x01	; 1
    476e:	9c 87       	std	Y+12, r25	; 0x0c
    4770:	8b 87       	std	Y+11, r24	; 0x0b
							
				messagePayload[0] = msgType;
    4772:	2e 85       	ldd	r18, Y+14	; 0x0e
    4774:	8b 85       	ldd	r24, Y+11	; 0x0b
    4776:	9c 85       	ldd	r25, Y+12	; 0x0c
    4778:	fc 01       	movw	r30, r24
    477a:	20 83       	st	Z, r18
							
				//Read the bytes in the payload of the message.
				//skip the first position since thats where the message type is located.
				for (int i = 1; i < msgSize && status == 0; i++)
    477c:	81 e0       	ldi	r24, 0x01	; 1
    477e:	90 e0       	ldi	r25, 0x00	; 0
    4780:	98 87       	std	Y+8, r25	; 0x08
    4782:	8f 83       	std	Y+7, r24	; 0x07
    4784:	21 c0       	rjmp	.+66     	; 0x47c8 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x190>
				{
					status = serialDriver->receiveByte(messagePayload[i]);
    4786:	8b 89       	ldd	r24, Y+19	; 0x13
    4788:	9c 89       	ldd	r25, Y+20	; 0x14
    478a:	fc 01       	movw	r30, r24
    478c:	80 81       	ld	r24, Z
    478e:	91 81       	ldd	r25, Z+1	; 0x01
    4790:	fc 01       	movw	r30, r24
    4792:	80 81       	ld	r24, Z
    4794:	91 81       	ldd	r25, Z+1	; 0x01
    4796:	08 96       	adiw	r24, 0x08	; 8
    4798:	fc 01       	movw	r30, r24
    479a:	20 81       	ld	r18, Z
    479c:	31 81       	ldd	r19, Z+1	; 0x01
    479e:	4b 85       	ldd	r20, Y+11	; 0x0b
    47a0:	5c 85       	ldd	r21, Y+12	; 0x0c
    47a2:	8f 81       	ldd	r24, Y+7	; 0x07
    47a4:	98 85       	ldd	r25, Y+8	; 0x08
    47a6:	48 0f       	add	r20, r24
    47a8:	59 1f       	adc	r21, r25
    47aa:	8b 89       	ldd	r24, Y+19	; 0x13
    47ac:	9c 89       	ldd	r25, Y+20	; 0x14
    47ae:	fc 01       	movw	r30, r24
    47b0:	80 81       	ld	r24, Z
    47b2:	91 81       	ldd	r25, Z+1	; 0x01
    47b4:	ba 01       	movw	r22, r20
    47b6:	f9 01       	movw	r30, r18
    47b8:	19 95       	eicall
    47ba:	9a 83       	std	Y+2, r25	; 0x02
    47bc:	89 83       	std	Y+1, r24	; 0x01
							
				messagePayload[0] = msgType;
							
				//Read the bytes in the payload of the message.
				//skip the first position since thats where the message type is located.
				for (int i = 1; i < msgSize && status == 0; i++)
    47be:	8f 81       	ldd	r24, Y+7	; 0x07
    47c0:	98 85       	ldd	r25, Y+8	; 0x08
    47c2:	01 96       	adiw	r24, 0x01	; 1
    47c4:	98 87       	std	Y+8, r25	; 0x08
    47c6:	8f 83       	std	Y+7, r24	; 0x07
    47c8:	2f 81       	ldd	r18, Y+7	; 0x07
    47ca:	38 85       	ldd	r19, Y+8	; 0x08
    47cc:	8d 81       	ldd	r24, Y+5	; 0x05
    47ce:	9e 81       	ldd	r25, Y+6	; 0x06
    47d0:	28 17       	cp	r18, r24
    47d2:	39 07       	cpc	r19, r25
    47d4:	34 f4       	brge	.+12     	; 0x47e2 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1aa>
    47d6:	89 81       	ldd	r24, Y+1	; 0x01
    47d8:	9a 81       	ldd	r25, Y+2	; 0x02
    47da:	00 97       	sbiw	r24, 0x00	; 0
    47dc:	11 f4       	brne	.+4      	; 0x47e2 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1aa>
    47de:	81 e0       	ldi	r24, 0x01	; 1
    47e0:	01 c0       	rjmp	.+2      	; 0x47e4 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1ac>
    47e2:	80 e0       	ldi	r24, 0x00	; 0
    47e4:	88 23       	and	r24, r24
    47e6:	79 f6       	brne	.-98     	; 0x4786 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x14e>
				{
					status = serialDriver->receiveByte(messagePayload[i]);
				}
							
				if (status == 0)
    47e8:	89 81       	ldd	r24, Y+1	; 0x01
    47ea:	9a 81       	ldd	r25, Y+2	; 0x02
    47ec:	00 97       	sbiw	r24, 0x00	; 0
    47ee:	09 f0       	breq	.+2      	; 0x47f2 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1ba>
    47f0:	67 c0       	rjmp	.+206    	; 0x48c0 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x288>
				{
					//Read the two checksum bytes
					byte messageChecksumA = 0;
    47f2:	1f 86       	std	Y+15, r1	; 0x0f
					byte messageChecksumB = 0;
    47f4:	18 8a       	std	Y+16, r1	; 0x10
					byte calculatedChecksumA = 0;
    47f6:	19 8a       	std	Y+17, r1	; 0x11
					byte calculatedChecksumB = 0;
    47f8:	1a 8a       	std	Y+18, r1	; 0x12
								
					//Note: status is getting overwritten here.
					status = serialDriver->receiveByte(messageChecksumA);
    47fa:	8b 89       	ldd	r24, Y+19	; 0x13
    47fc:	9c 89       	ldd	r25, Y+20	; 0x14
    47fe:	fc 01       	movw	r30, r24
    4800:	80 81       	ld	r24, Z
    4802:	91 81       	ldd	r25, Z+1	; 0x01
    4804:	fc 01       	movw	r30, r24
    4806:	80 81       	ld	r24, Z
    4808:	91 81       	ldd	r25, Z+1	; 0x01
    480a:	08 96       	adiw	r24, 0x08	; 8
    480c:	fc 01       	movw	r30, r24
    480e:	20 81       	ld	r18, Z
    4810:	31 81       	ldd	r19, Z+1	; 0x01
    4812:	8b 89       	ldd	r24, Y+19	; 0x13
    4814:	9c 89       	ldd	r25, Y+20	; 0x14
    4816:	fc 01       	movw	r30, r24
    4818:	80 81       	ld	r24, Z
    481a:	91 81       	ldd	r25, Z+1	; 0x01
    481c:	ae 01       	movw	r20, r28
    481e:	41 5f       	subi	r20, 0xF1	; 241
    4820:	5f 4f       	sbci	r21, 0xFF	; 255
    4822:	ba 01       	movw	r22, r20
    4824:	f9 01       	movw	r30, r18
    4826:	19 95       	eicall
    4828:	9a 83       	std	Y+2, r25	; 0x02
    482a:	89 83       	std	Y+1, r24	; 0x01
					status = serialDriver->receiveByte(messageChecksumB);
    482c:	8b 89       	ldd	r24, Y+19	; 0x13
    482e:	9c 89       	ldd	r25, Y+20	; 0x14
    4830:	fc 01       	movw	r30, r24
    4832:	80 81       	ld	r24, Z
    4834:	91 81       	ldd	r25, Z+1	; 0x01
    4836:	fc 01       	movw	r30, r24
    4838:	80 81       	ld	r24, Z
    483a:	91 81       	ldd	r25, Z+1	; 0x01
    483c:	08 96       	adiw	r24, 0x08	; 8
    483e:	fc 01       	movw	r30, r24
    4840:	20 81       	ld	r18, Z
    4842:	31 81       	ldd	r19, Z+1	; 0x01
    4844:	8b 89       	ldd	r24, Y+19	; 0x13
    4846:	9c 89       	ldd	r25, Y+20	; 0x14
    4848:	fc 01       	movw	r30, r24
    484a:	80 81       	ld	r24, Z
    484c:	91 81       	ldd	r25, Z+1	; 0x01
    484e:	ae 01       	movw	r20, r28
    4850:	40 5f       	subi	r20, 0xF0	; 240
    4852:	5f 4f       	sbci	r21, 0xFF	; 255
    4854:	ba 01       	movw	r22, r20
    4856:	f9 01       	movw	r30, r18
    4858:	19 95       	eicall
    485a:	9a 83       	std	Y+2, r25	; 0x02
    485c:	89 83       	std	Y+1, r24	; 0x01
								
					//Generate checksum for the message			
					calculateChecksum(messagePayload, msgSize, calculatedChecksumA, calculatedChecksumB);
    485e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4860:	7c 85       	ldd	r23, Y+12	; 0x0c
    4862:	fe 01       	movw	r30, r28
    4864:	72 96       	adiw	r30, 0x12	; 18
    4866:	9e 01       	movw	r18, r28
    4868:	2f 5e       	subi	r18, 0xEF	; 239
    486a:	3f 4f       	sbci	r19, 0xFF	; 255
    486c:	4d 81       	ldd	r20, Y+5	; 0x05
    486e:	5e 81       	ldd	r21, Y+6	; 0x06
    4870:	8b 89       	ldd	r24, Y+19	; 0x13
    4872:	9c 89       	ldd	r25, Y+20	; 0x14
    4874:	8f 01       	movw	r16, r30
    4876:	0e 94 e1 21 	call	0x43c2	; 0x43c2 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>
								
					//verify that the checksum is correct
					if (calculatedChecksumA == messageChecksumA && calculatedChecksumB == messageChecksumB)
    487a:	99 89       	ldd	r25, Y+17	; 0x11
    487c:	8f 85       	ldd	r24, Y+15	; 0x0f
    487e:	98 17       	cp	r25, r24
    4880:	d9 f4       	brne	.+54     	; 0x48b8 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x280>
    4882:	9a 89       	ldd	r25, Y+18	; 0x12
    4884:	88 89       	ldd	r24, Y+16	; 0x10
    4886:	98 17       	cp	r25, r24
    4888:	b9 f4       	brne	.+46     	; 0x48b8 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x280>
					{
						//build the message
						switch(msgType)
    488a:	8e 85       	ldd	r24, Y+14	; 0x0e
    488c:	88 2f       	mov	r24, r24
    488e:	90 e0       	ldi	r25, 0x00	; 0
    4890:	82 30       	cpi	r24, 0x02	; 2
    4892:	91 05       	cpc	r25, r1
    4894:	59 f4       	brne	.+22     	; 0x48ac <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x274>
						{
							case SystemTelemetryMessage::MessageType:
								receivedMessage = SystemTelemetryMessage::buildMessageSt(messagePayload);
    4896:	8b 85       	ldd	r24, Y+11	; 0x0b
    4898:	9c 85       	ldd	r25, Y+12	; 0x0c
    489a:	0e 94 0b 32 	call	0x6416	; 0x6416 <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh>
    489e:	9c 01       	movw	r18, r24
    48a0:	8d 89       	ldd	r24, Y+21	; 0x15
    48a2:	9e 89       	ldd	r25, Y+22	; 0x16
    48a4:	fc 01       	movw	r30, r24
    48a6:	31 83       	std	Z+1, r19	; 0x01
    48a8:	20 83       	st	Z, r18
							break;
    48aa:	05 c0       	rjmp	.+10     	; 0x48b6 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x27e>
							default:
								//unrecognized message type.
								status = -2;
    48ac:	8e ef       	ldi	r24, 0xFE	; 254
    48ae:	9f ef       	ldi	r25, 0xFF	; 255
    48b0:	9a 83       	std	Y+2, r25	; 0x02
    48b2:	89 83       	std	Y+1, r24	; 0x01
							break;
    48b4:	00 00       	nop
								
					//verify that the checksum is correct
					if (calculatedChecksumA == messageChecksumA && calculatedChecksumB == messageChecksumB)
					{
						//build the message
						switch(msgType)
    48b6:	04 c0       	rjmp	.+8      	; 0x48c0 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x288>
							break;
						}
					}else
					{
						//checksum mismatch
						status = -3;
    48b8:	8d ef       	ldi	r24, 0xFD	; 253
    48ba:	9f ef       	ldi	r25, 0xFF	; 255
    48bc:	9a 83       	std	Y+2, r25	; 0x02
    48be:	89 83       	std	Y+1, r24	; 0x01
    48c0:	0f b6       	in	r0, 0x3f	; 63
    48c2:	f8 94       	cli
    48c4:	de be       	out	0x3e, r13	; 62
    48c6:	0f be       	out	0x3f, r0	; 63
    48c8:	cd be       	out	0x3d, r12	; 61
				}
			}
		}
	}
	
	if (status != 0)
    48ca:	89 81       	ldd	r24, Y+1	; 0x01
    48cc:	9a 81       	ldd	r25, Y+2	; 0x02
    48ce:	00 97       	sbiw	r24, 0x00	; 0
    48d0:	29 f0       	breq	.+10     	; 0x48dc <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x2a4>
	{
		receivedMessage = NULL;
    48d2:	8d 89       	ldd	r24, Y+21	; 0x15
    48d4:	9e 89       	ldd	r25, Y+22	; 0x16
    48d6:	fc 01       	movw	r30, r24
    48d8:	11 82       	std	Z+1, r1	; 0x01
    48da:	10 82       	st	Z, r1
	}
	
	return status;
    48dc:	89 81       	ldd	r24, Y+1	; 0x01
    48de:	9a 81       	ldd	r25, Y+2	; 0x02
    48e0:	0f b6       	in	r0, 0x3f	; 63
    48e2:	f8 94       	cli
    48e4:	fe be       	out	0x3e, r15	; 62
    48e6:	0f be       	out	0x3f, r0	; 63
    48e8:	ed be       	out	0x3d, r14	; 61
    48ea:	66 96       	adiw	r28, 0x16	; 22
    48ec:	0f b6       	in	r0, 0x3f	; 63
    48ee:	f8 94       	cli
    48f0:	de bf       	out	0x3e, r29	; 62
    48f2:	0f be       	out	0x3f, r0	; 63
    48f4:	cd bf       	out	0x3d, r28	; 61
    48f6:	df 91       	pop	r29
    48f8:	cf 91       	pop	r28
    48fa:	1f 91       	pop	r17
    48fc:	0f 91       	pop	r16
    48fe:	ff 90       	pop	r15
    4900:	ef 90       	pop	r14
    4902:	df 90       	pop	r13
    4904:	cf 90       	pop	r12
    4906:	08 95       	ret

00004908 <_ZN10helicopter8messages7MessageD1Ev>:
					msgType(msgType), msgSize(msgSize)
				{
					
				}
				
				virtual ~Message()
    4908:	cf 93       	push	r28
    490a:	df 93       	push	r29
    490c:	1f 92       	push	r1
    490e:	1f 92       	push	r1
    4910:	cd b7       	in	r28, 0x3d	; 61
    4912:	de b7       	in	r29, 0x3e	; 62
    4914:	9a 83       	std	Y+2, r25	; 0x02
    4916:	89 83       	std	Y+1, r24	; 0x01
				{
    4918:	89 81       	ldd	r24, Y+1	; 0x01
    491a:	9a 81       	ldd	r25, Y+2	; 0x02
    491c:	26 e2       	ldi	r18, 0x26	; 38
    491e:	32 e0       	ldi	r19, 0x02	; 2
    4920:	fc 01       	movw	r30, r24
    4922:	31 83       	std	Z+1, r19	; 0x01
    4924:	20 83       	st	Z, r18
					
				}
    4926:	80 e0       	ldi	r24, 0x00	; 0
    4928:	90 e0       	ldi	r25, 0x00	; 0
    492a:	81 70       	andi	r24, 0x01	; 1
    492c:	99 27       	eor	r25, r25
    492e:	00 97       	sbiw	r24, 0x00	; 0
    4930:	21 f0       	breq	.+8      	; 0x493a <_ZN10helicopter8messages7MessageD1Ev+0x32>
    4932:	89 81       	ldd	r24, Y+1	; 0x01
    4934:	9a 81       	ldd	r25, Y+2	; 0x02
    4936:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    493a:	0f 90       	pop	r0
    493c:	0f 90       	pop	r0
    493e:	df 91       	pop	r29
    4940:	cf 91       	pop	r28
    4942:	08 95       	ret

00004944 <_ZN10helicopter8messages7MessageD0Ev>:
					msgType(msgType), msgSize(msgSize)
				{
					
				}
				
				virtual ~Message()
    4944:	cf 93       	push	r28
    4946:	df 93       	push	r29
    4948:	1f 92       	push	r1
    494a:	1f 92       	push	r1
    494c:	cd b7       	in	r28, 0x3d	; 61
    494e:	de b7       	in	r29, 0x3e	; 62
    4950:	9a 83       	std	Y+2, r25	; 0x02
    4952:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    4954:	89 81       	ldd	r24, Y+1	; 0x01
    4956:	9a 81       	ldd	r25, Y+2	; 0x02
    4958:	0e 94 84 24 	call	0x4908	; 0x4908 <_ZN10helicopter8messages7MessageD1Ev>
    495c:	89 81       	ldd	r24, Y+1	; 0x01
    495e:	9a 81       	ldd	r25, Y+2	; 0x02
    4960:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    4964:	0f 90       	pop	r0
    4966:	0f 90       	pop	r0
    4968:	df 91       	pop	r29
    496a:	cf 91       	pop	r28
    496c:	08 95       	ret

0000496e <_ZN10helicopter8messages7Message14getMessageSizeEv>:
	* Returns the number of bytes in this message. This should
	* be the payload of the message, and not underlying protocol
	* information (sync bytes and checksum bytes)
	*/
int Message::getMessageSize()
{
    496e:	cf 93       	push	r28
    4970:	df 93       	push	r29
    4972:	1f 92       	push	r1
    4974:	1f 92       	push	r1
    4976:	cd b7       	in	r28, 0x3d	; 61
    4978:	de b7       	in	r29, 0x3e	; 62
    497a:	9a 83       	std	Y+2, r25	; 0x02
    497c:	89 83       	std	Y+1, r24	; 0x01
	return msgSize;
    497e:	89 81       	ldd	r24, Y+1	; 0x01
    4980:	9a 81       	ldd	r25, Y+2	; 0x02
    4982:	fc 01       	movw	r30, r24
    4984:	83 81       	ldd	r24, Z+3	; 0x03
    4986:	94 81       	ldd	r25, Z+4	; 0x04
}
    4988:	0f 90       	pop	r0
    498a:	0f 90       	pop	r0
    498c:	df 91       	pop	r29
    498e:	cf 91       	pop	r28
    4990:	08 95       	ret

00004992 <_ZN10helicopter8messages7Message8getBytesEv>:
				
/**
	* Returns the data in this message in raw byte format for transmission.
	*/
byte *Message::getBytes()
{
    4992:	cf 93       	push	r28
    4994:	df 93       	push	r29
    4996:	1f 92       	push	r1
    4998:	1f 92       	push	r1
    499a:	cd b7       	in	r28, 0x3d	; 61
    499c:	de b7       	in	r29, 0x3e	; 62
    499e:	9a 83       	std	Y+2, r25	; 0x02
    49a0:	89 83       	std	Y+1, r24	; 0x01
	return NULL;
    49a2:	80 e0       	ldi	r24, 0x00	; 0
    49a4:	90 e0       	ldi	r25, 0x00	; 0
}
    49a6:	0f 90       	pop	r0
    49a8:	0f 90       	pop	r0
    49aa:	df 91       	pop	r29
    49ac:	cf 91       	pop	r28
    49ae:	08 95       	ret

000049b0 <_ZN10helicopter8messages7Message12buildMessageEPh>:
	* for creating a message object given a stream of bytes.
	* @param message The bytes in the payload of the message which should be used
	* to construct a message object.
	*/
void Message::buildMessage(byte *message)
{
    49b0:	cf 93       	push	r28
    49b2:	df 93       	push	r29
    49b4:	00 d0       	rcall	.+0      	; 0x49b6 <_ZN10helicopter8messages7Message12buildMessageEPh+0x6>
    49b6:	1f 92       	push	r1
    49b8:	cd b7       	in	r28, 0x3d	; 61
    49ba:	de b7       	in	r29, 0x3e	; 62
    49bc:	9a 83       	std	Y+2, r25	; 0x02
    49be:	89 83       	std	Y+1, r24	; 0x01
    49c0:	7c 83       	std	Y+4, r23	; 0x04
    49c2:	6b 83       	std	Y+3, r22	; 0x03
	//noop. subclass should implement this.
    49c4:	0f 90       	pop	r0
    49c6:	0f 90       	pop	r0
    49c8:	0f 90       	pop	r0
    49ca:	0f 90       	pop	r0
    49cc:	df 91       	pop	r29
    49ce:	cf 91       	pop	r28
    49d0:	08 95       	ret

000049d2 <_ZN10helicopter8messages7MessageC1Ehi>:
			
				/**
				 * @param msgType The identifier of this message
				 * @param msgSize The size in bytes of this message
				 */
				Message (byte msgType, int msgSize):
    49d2:	cf 93       	push	r28
    49d4:	df 93       	push	r29
    49d6:	00 d0       	rcall	.+0      	; 0x49d8 <_ZN10helicopter8messages7MessageC1Ehi+0x6>
    49d8:	1f 92       	push	r1
    49da:	1f 92       	push	r1
    49dc:	cd b7       	in	r28, 0x3d	; 61
    49de:	de b7       	in	r29, 0x3e	; 62
    49e0:	9a 83       	std	Y+2, r25	; 0x02
    49e2:	89 83       	std	Y+1, r24	; 0x01
    49e4:	6b 83       	std	Y+3, r22	; 0x03
    49e6:	5d 83       	std	Y+5, r21	; 0x05
    49e8:	4c 83       	std	Y+4, r20	; 0x04
					msgType(msgType), msgSize(msgSize)
    49ea:	89 81       	ldd	r24, Y+1	; 0x01
    49ec:	9a 81       	ldd	r25, Y+2	; 0x02
    49ee:	26 e2       	ldi	r18, 0x26	; 38
    49f0:	32 e0       	ldi	r19, 0x02	; 2
    49f2:	fc 01       	movw	r30, r24
    49f4:	31 83       	std	Z+1, r19	; 0x01
    49f6:	20 83       	st	Z, r18
    49f8:	89 81       	ldd	r24, Y+1	; 0x01
    49fa:	9a 81       	ldd	r25, Y+2	; 0x02
    49fc:	2b 81       	ldd	r18, Y+3	; 0x03
    49fe:	fc 01       	movw	r30, r24
    4a00:	22 83       	std	Z+2, r18	; 0x02
    4a02:	89 81       	ldd	r24, Y+1	; 0x01
    4a04:	9a 81       	ldd	r25, Y+2	; 0x02
    4a06:	2c 81       	ldd	r18, Y+4	; 0x04
    4a08:	3d 81       	ldd	r19, Y+5	; 0x05
    4a0a:	fc 01       	movw	r30, r24
    4a0c:	34 83       	std	Z+4, r19	; 0x04
    4a0e:	23 83       	std	Z+3, r18	; 0x03
				{
					
				}
    4a10:	0f 90       	pop	r0
    4a12:	0f 90       	pop	r0
    4a14:	0f 90       	pop	r0
    4a16:	0f 90       	pop	r0
    4a18:	0f 90       	pop	r0
    4a1a:	df 91       	pop	r29
    4a1c:	cf 91       	pop	r28
    4a1e:	08 95       	ret

00004a20 <_ZN10helicopter8messages11SyncMessageC1Ev>:
				static const byte MessageType = 3;
							
				static const byte MessageSize =
					sizeof(msgType);
							
				SyncMessage(): Message(MessageType,MessageSize)
    4a20:	cf 93       	push	r28
    4a22:	df 93       	push	r29
    4a24:	1f 92       	push	r1
    4a26:	1f 92       	push	r1
    4a28:	cd b7       	in	r28, 0x3d	; 61
    4a2a:	de b7       	in	r29, 0x3e	; 62
    4a2c:	9a 83       	std	Y+2, r25	; 0x02
    4a2e:	89 83       	std	Y+1, r24	; 0x01
    4a30:	89 81       	ldd	r24, Y+1	; 0x01
    4a32:	9a 81       	ldd	r25, Y+2	; 0x02
    4a34:	41 e0       	ldi	r20, 0x01	; 1
    4a36:	50 e0       	ldi	r21, 0x00	; 0
    4a38:	63 e0       	ldi	r22, 0x03	; 3
    4a3a:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <_ZN10helicopter8messages7MessageC1Ehi>
    4a3e:	89 81       	ldd	r24, Y+1	; 0x01
    4a40:	9a 81       	ldd	r25, Y+2	; 0x02
    4a42:	22 e3       	ldi	r18, 0x32	; 50
    4a44:	32 e0       	ldi	r19, 0x02	; 2
    4a46:	fc 01       	movw	r30, r24
    4a48:	31 83       	std	Z+1, r19	; 0x01
    4a4a:	20 83       	st	Z, r18
				{
								
				}
    4a4c:	0f 90       	pop	r0
    4a4e:	0f 90       	pop	r0
    4a50:	df 91       	pop	r29
    4a52:	cf 91       	pop	r28
    4a54:	08 95       	ret

00004a56 <_ZN10helicopter8messages11SyncMessageD1Ev>:
				
				~SyncMessage()
    4a56:	cf 93       	push	r28
    4a58:	df 93       	push	r29
    4a5a:	1f 92       	push	r1
    4a5c:	1f 92       	push	r1
    4a5e:	cd b7       	in	r28, 0x3d	; 61
    4a60:	de b7       	in	r29, 0x3e	; 62
    4a62:	9a 83       	std	Y+2, r25	; 0x02
    4a64:	89 83       	std	Y+1, r24	; 0x01
				{
    4a66:	89 81       	ldd	r24, Y+1	; 0x01
    4a68:	9a 81       	ldd	r25, Y+2	; 0x02
    4a6a:	22 e3       	ldi	r18, 0x32	; 50
    4a6c:	32 e0       	ldi	r19, 0x02	; 2
    4a6e:	fc 01       	movw	r30, r24
    4a70:	31 83       	std	Z+1, r19	; 0x01
    4a72:	20 83       	st	Z, r18
    4a74:	89 81       	ldd	r24, Y+1	; 0x01
    4a76:	9a 81       	ldd	r25, Y+2	; 0x02
    4a78:	0e 94 84 24 	call	0x4908	; 0x4908 <_ZN10helicopter8messages7MessageD1Ev>
					
				}
    4a7c:	80 e0       	ldi	r24, 0x00	; 0
    4a7e:	90 e0       	ldi	r25, 0x00	; 0
    4a80:	81 70       	andi	r24, 0x01	; 1
    4a82:	99 27       	eor	r25, r25
    4a84:	00 97       	sbiw	r24, 0x00	; 0
    4a86:	21 f0       	breq	.+8      	; 0x4a90 <_ZN10helicopter8messages11SyncMessageD1Ev+0x3a>
    4a88:	89 81       	ldd	r24, Y+1	; 0x01
    4a8a:	9a 81       	ldd	r25, Y+2	; 0x02
    4a8c:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    4a90:	0f 90       	pop	r0
    4a92:	0f 90       	pop	r0
    4a94:	df 91       	pop	r29
    4a96:	cf 91       	pop	r28
    4a98:	08 95       	ret

00004a9a <_ZN10helicopter8messages11SyncMessageD0Ev>:
				SyncMessage(): Message(MessageType,MessageSize)
				{
								
				}
				
				~SyncMessage()
    4a9a:	cf 93       	push	r28
    4a9c:	df 93       	push	r29
    4a9e:	1f 92       	push	r1
    4aa0:	1f 92       	push	r1
    4aa2:	cd b7       	in	r28, 0x3d	; 61
    4aa4:	de b7       	in	r29, 0x3e	; 62
    4aa6:	9a 83       	std	Y+2, r25	; 0x02
    4aa8:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    4aaa:	89 81       	ldd	r24, Y+1	; 0x01
    4aac:	9a 81       	ldd	r25, Y+2	; 0x02
    4aae:	0e 94 2b 25 	call	0x4a56	; 0x4a56 <_ZN10helicopter8messages11SyncMessageD1Ev>
    4ab2:	89 81       	ldd	r24, Y+1	; 0x01
    4ab4:	9a 81       	ldd	r25, Y+2	; 0x02
    4ab6:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    4aba:	0f 90       	pop	r0
    4abc:	0f 90       	pop	r0
    4abe:	df 91       	pop	r29
    4ac0:	cf 91       	pop	r28
    4ac2:	08 95       	ret

00004ac4 <_ZN10helicopter8messages11SyncMessage8getBytesEv>:

using namespace helicopter::messages;


byte *SyncMessage::getBytes()
{
    4ac4:	cf 93       	push	r28
    4ac6:	df 93       	push	r29
    4ac8:	00 d0       	rcall	.+0      	; 0x4aca <_ZN10helicopter8messages11SyncMessage8getBytesEv+0x6>
    4aca:	00 d0       	rcall	.+0      	; 0x4acc <_ZN10helicopter8messages11SyncMessage8getBytesEv+0x8>
    4acc:	cd b7       	in	r28, 0x3d	; 61
    4ace:	de b7       	in	r29, 0x3e	; 62
    4ad0:	9e 83       	std	Y+6, r25	; 0x06
    4ad2:	8d 83       	std	Y+5, r24	; 0x05
	byte *msg = new byte[MessageSize];
    4ad4:	81 e0       	ldi	r24, 0x01	; 1
    4ad6:	90 e0       	ldi	r25, 0x00	; 0
    4ad8:	0e 94 38 40 	call	0x8070	; 0x8070 <_Znaj>
    4adc:	9a 83       	std	Y+2, r25	; 0x02
    4ade:	89 83       	std	Y+1, r24	; 0x01
	byte *msgPtr = msg;
    4ae0:	89 81       	ldd	r24, Y+1	; 0x01
    4ae2:	9a 81       	ldd	r25, Y+2	; 0x02
    4ae4:	9c 83       	std	Y+4, r25	; 0x04
    4ae6:	8b 83       	std	Y+3, r24	; 0x03
	msgPtr[0] = this->msgType;
    4ae8:	8d 81       	ldd	r24, Y+5	; 0x05
    4aea:	9e 81       	ldd	r25, Y+6	; 0x06
    4aec:	fc 01       	movw	r30, r24
    4aee:	22 81       	ldd	r18, Z+2	; 0x02
    4af0:	8b 81       	ldd	r24, Y+3	; 0x03
    4af2:	9c 81       	ldd	r25, Y+4	; 0x04
    4af4:	fc 01       	movw	r30, r24
    4af6:	20 83       	st	Z, r18
	
	return msg;
    4af8:	89 81       	ldd	r24, Y+1	; 0x01
    4afa:	9a 81       	ldd	r25, Y+2	; 0x02
}
    4afc:	26 96       	adiw	r28, 0x06	; 6
    4afe:	0f b6       	in	r0, 0x3f	; 63
    4b00:	f8 94       	cli
    4b02:	de bf       	out	0x3e, r29	; 62
    4b04:	0f be       	out	0x3f, r0	; 63
    4b06:	cd bf       	out	0x3d, r28	; 61
    4b08:	df 91       	pop	r29
    4b0a:	cf 91       	pop	r28
    4b0c:	08 95       	ret

00004b0e <_ZN10helicopter8messages11SyncMessage12buildMessageEPh>:

void SyncMessage::buildMessage(byte *message)
{
    4b0e:	cf 93       	push	r28
    4b10:	df 93       	push	r29
    4b12:	00 d0       	rcall	.+0      	; 0x4b14 <_ZN10helicopter8messages11SyncMessage12buildMessageEPh+0x6>
    4b14:	1f 92       	push	r1
    4b16:	cd b7       	in	r28, 0x3d	; 61
    4b18:	de b7       	in	r29, 0x3e	; 62
    4b1a:	9a 83       	std	Y+2, r25	; 0x02
    4b1c:	89 83       	std	Y+1, r24	; 0x01
    4b1e:	7c 83       	std	Y+4, r23	; 0x04
    4b20:	6b 83       	std	Y+3, r22	; 0x03
	if (message != NULL)
    4b22:	8b 81       	ldd	r24, Y+3	; 0x03
    4b24:	9c 81       	ldd	r25, Y+4	; 0x04
    4b26:	00 97       	sbiw	r24, 0x00	; 0
    4b28:	41 f0       	breq	.+16     	; 0x4b3a <_ZN10helicopter8messages11SyncMessage12buildMessageEPh+0x2c>
	{
		msgType = message[0];
    4b2a:	8b 81       	ldd	r24, Y+3	; 0x03
    4b2c:	9c 81       	ldd	r25, Y+4	; 0x04
    4b2e:	fc 01       	movw	r30, r24
    4b30:	20 81       	ld	r18, Z
    4b32:	89 81       	ldd	r24, Y+1	; 0x01
    4b34:	9a 81       	ldd	r25, Y+2	; 0x02
    4b36:	fc 01       	movw	r30, r24
    4b38:	22 83       	std	Z+2, r18	; 0x02
	}
}
    4b3a:	0f 90       	pop	r0
    4b3c:	0f 90       	pop	r0
    4b3e:	0f 90       	pop	r0
    4b40:	0f 90       	pop	r0
    4b42:	df 91       	pop	r29
    4b44:	cf 91       	pop	r28
    4b46:	08 95       	ret

00004b48 <_ZN10helicopter8messages7Message6encodeERPhRl>:
				
				/**
				 * Mem copies the value into the buffer pointer then increments
				 * the pointer location by the size of the value copied.
				 */
				void encode (byte *&buffPtr, long &val)
    4b48:	cf 93       	push	r28
    4b4a:	df 93       	push	r29
    4b4c:	00 d0       	rcall	.+0      	; 0x4b4e <_ZN10helicopter8messages7Message6encodeERPhRl+0x6>
    4b4e:	00 d0       	rcall	.+0      	; 0x4b50 <_ZN10helicopter8messages7Message6encodeERPhRl+0x8>
    4b50:	cd b7       	in	r28, 0x3d	; 61
    4b52:	de b7       	in	r29, 0x3e	; 62
    4b54:	9a 83       	std	Y+2, r25	; 0x02
    4b56:	89 83       	std	Y+1, r24	; 0x01
    4b58:	7c 83       	std	Y+4, r23	; 0x04
    4b5a:	6b 83       	std	Y+3, r22	; 0x03
    4b5c:	5e 83       	std	Y+6, r21	; 0x06
    4b5e:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(buffPtr, &val, sizeof(val));
    4b60:	8b 81       	ldd	r24, Y+3	; 0x03
    4b62:	9c 81       	ldd	r25, Y+4	; 0x04
    4b64:	fc 01       	movw	r30, r24
    4b66:	80 81       	ld	r24, Z
    4b68:	91 81       	ldd	r25, Z+1	; 0x01
    4b6a:	2d 81       	ldd	r18, Y+5	; 0x05
    4b6c:	3e 81       	ldd	r19, Y+6	; 0x06
    4b6e:	44 e0       	ldi	r20, 0x04	; 4
    4b70:	50 e0       	ldi	r21, 0x00	; 0
    4b72:	b9 01       	movw	r22, r18
    4b74:	0e 94 f7 4b 	call	0x97ee	; 0x97ee <memcpy>
					buffPtr += sizeof(val);
    4b78:	8b 81       	ldd	r24, Y+3	; 0x03
    4b7a:	9c 81       	ldd	r25, Y+4	; 0x04
    4b7c:	fc 01       	movw	r30, r24
    4b7e:	80 81       	ld	r24, Z
    4b80:	91 81       	ldd	r25, Z+1	; 0x01
    4b82:	9c 01       	movw	r18, r24
    4b84:	2c 5f       	subi	r18, 0xFC	; 252
    4b86:	3f 4f       	sbci	r19, 0xFF	; 255
    4b88:	8b 81       	ldd	r24, Y+3	; 0x03
    4b8a:	9c 81       	ldd	r25, Y+4	; 0x04
    4b8c:	fc 01       	movw	r30, r24
    4b8e:	31 83       	std	Z+1, r19	; 0x01
    4b90:	20 83       	st	Z, r18
				}
    4b92:	26 96       	adiw	r28, 0x06	; 6
    4b94:	0f b6       	in	r0, 0x3f	; 63
    4b96:	f8 94       	cli
    4b98:	de bf       	out	0x3e, r29	; 62
    4b9a:	0f be       	out	0x3f, r0	; 63
    4b9c:	cd bf       	out	0x3d, r28	; 61
    4b9e:	df 91       	pop	r29
    4ba0:	cf 91       	pop	r28
    4ba2:	08 95       	ret

00004ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>:
				
				void encode (byte *&buffPtr, float &val)
    4ba4:	cf 93       	push	r28
    4ba6:	df 93       	push	r29
    4ba8:	00 d0       	rcall	.+0      	; 0x4baa <_ZN10helicopter8messages7Message6encodeERPhRf+0x6>
    4baa:	00 d0       	rcall	.+0      	; 0x4bac <_ZN10helicopter8messages7Message6encodeERPhRf+0x8>
    4bac:	cd b7       	in	r28, 0x3d	; 61
    4bae:	de b7       	in	r29, 0x3e	; 62
    4bb0:	9a 83       	std	Y+2, r25	; 0x02
    4bb2:	89 83       	std	Y+1, r24	; 0x01
    4bb4:	7c 83       	std	Y+4, r23	; 0x04
    4bb6:	6b 83       	std	Y+3, r22	; 0x03
    4bb8:	5e 83       	std	Y+6, r21	; 0x06
    4bba:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(buffPtr, &val, sizeof(val));
    4bbc:	8b 81       	ldd	r24, Y+3	; 0x03
    4bbe:	9c 81       	ldd	r25, Y+4	; 0x04
    4bc0:	fc 01       	movw	r30, r24
    4bc2:	80 81       	ld	r24, Z
    4bc4:	91 81       	ldd	r25, Z+1	; 0x01
    4bc6:	2d 81       	ldd	r18, Y+5	; 0x05
    4bc8:	3e 81       	ldd	r19, Y+6	; 0x06
    4bca:	44 e0       	ldi	r20, 0x04	; 4
    4bcc:	50 e0       	ldi	r21, 0x00	; 0
    4bce:	b9 01       	movw	r22, r18
    4bd0:	0e 94 f7 4b 	call	0x97ee	; 0x97ee <memcpy>
					buffPtr += sizeof(val);
    4bd4:	8b 81       	ldd	r24, Y+3	; 0x03
    4bd6:	9c 81       	ldd	r25, Y+4	; 0x04
    4bd8:	fc 01       	movw	r30, r24
    4bda:	80 81       	ld	r24, Z
    4bdc:	91 81       	ldd	r25, Z+1	; 0x01
    4bde:	9c 01       	movw	r18, r24
    4be0:	2c 5f       	subi	r18, 0xFC	; 252
    4be2:	3f 4f       	sbci	r19, 0xFF	; 255
    4be4:	8b 81       	ldd	r24, Y+3	; 0x03
    4be6:	9c 81       	ldd	r25, Y+4	; 0x04
    4be8:	fc 01       	movw	r30, r24
    4bea:	31 83       	std	Z+1, r19	; 0x01
    4bec:	20 83       	st	Z, r18
				}				
    4bee:	26 96       	adiw	r28, 0x06	; 6
    4bf0:	0f b6       	in	r0, 0x3f	; 63
    4bf2:	f8 94       	cli
    4bf4:	de bf       	out	0x3e, r29	; 62
    4bf6:	0f be       	out	0x3f, r0	; 63
    4bf8:	cd bf       	out	0x3d, r28	; 61
    4bfa:	df 91       	pop	r29
    4bfc:	cf 91       	pop	r28
    4bfe:	08 95       	ret

00004c00 <_ZN10helicopter8messages7Message6encodeERPhRh>:
				{
					memcpy(buffPtr, &val, sizeof(val));
					buffPtr += sizeof(val);
				}		
				
				void encode (byte *&buffPtr, byte &val)
    4c00:	cf 93       	push	r28
    4c02:	df 93       	push	r29
    4c04:	00 d0       	rcall	.+0      	; 0x4c06 <_ZN10helicopter8messages7Message6encodeERPhRh+0x6>
    4c06:	00 d0       	rcall	.+0      	; 0x4c08 <_ZN10helicopter8messages7Message6encodeERPhRh+0x8>
    4c08:	cd b7       	in	r28, 0x3d	; 61
    4c0a:	de b7       	in	r29, 0x3e	; 62
    4c0c:	9a 83       	std	Y+2, r25	; 0x02
    4c0e:	89 83       	std	Y+1, r24	; 0x01
    4c10:	7c 83       	std	Y+4, r23	; 0x04
    4c12:	6b 83       	std	Y+3, r22	; 0x03
    4c14:	5e 83       	std	Y+6, r21	; 0x06
    4c16:	4d 83       	std	Y+5, r20	; 0x05
				{
					*buffPtr = val;
    4c18:	8b 81       	ldd	r24, Y+3	; 0x03
    4c1a:	9c 81       	ldd	r25, Y+4	; 0x04
    4c1c:	fc 01       	movw	r30, r24
    4c1e:	80 81       	ld	r24, Z
    4c20:	91 81       	ldd	r25, Z+1	; 0x01
    4c22:	2d 81       	ldd	r18, Y+5	; 0x05
    4c24:	3e 81       	ldd	r19, Y+6	; 0x06
    4c26:	f9 01       	movw	r30, r18
    4c28:	20 81       	ld	r18, Z
    4c2a:	fc 01       	movw	r30, r24
    4c2c:	20 83       	st	Z, r18
					buffPtr += sizeof(val);
    4c2e:	8b 81       	ldd	r24, Y+3	; 0x03
    4c30:	9c 81       	ldd	r25, Y+4	; 0x04
    4c32:	fc 01       	movw	r30, r24
    4c34:	80 81       	ld	r24, Z
    4c36:	91 81       	ldd	r25, Z+1	; 0x01
    4c38:	9c 01       	movw	r18, r24
    4c3a:	2f 5f       	subi	r18, 0xFF	; 255
    4c3c:	3f 4f       	sbci	r19, 0xFF	; 255
    4c3e:	8b 81       	ldd	r24, Y+3	; 0x03
    4c40:	9c 81       	ldd	r25, Y+4	; 0x04
    4c42:	fc 01       	movw	r30, r24
    4c44:	31 83       	std	Z+1, r19	; 0x01
    4c46:	20 83       	st	Z, r18
				}
    4c48:	26 96       	adiw	r28, 0x06	; 6
    4c4a:	0f b6       	in	r0, 0x3f	; 63
    4c4c:	f8 94       	cli
    4c4e:	de bf       	out	0x3e, r29	; 62
    4c50:	0f be       	out	0x3f, r0	; 63
    4c52:	cd bf       	out	0x3d, r28	; 61
    4c54:	df 91       	pop	r29
    4c56:	cf 91       	pop	r28
    4c58:	08 95       	ret

00004c5a <_ZN10helicopter8messages7Message6decodeERPhRh>:
				
				/**
				 * Copies the the value at the buff pointer location into the given val parameter and
				 * increments the buffer by the sizeof(val)
				 */
				void decode (byte *&buffPtr, byte &val)
    4c5a:	cf 93       	push	r28
    4c5c:	df 93       	push	r29
    4c5e:	00 d0       	rcall	.+0      	; 0x4c60 <_ZN10helicopter8messages7Message6decodeERPhRh+0x6>
    4c60:	00 d0       	rcall	.+0      	; 0x4c62 <_ZN10helicopter8messages7Message6decodeERPhRh+0x8>
    4c62:	cd b7       	in	r28, 0x3d	; 61
    4c64:	de b7       	in	r29, 0x3e	; 62
    4c66:	9a 83       	std	Y+2, r25	; 0x02
    4c68:	89 83       	std	Y+1, r24	; 0x01
    4c6a:	7c 83       	std	Y+4, r23	; 0x04
    4c6c:	6b 83       	std	Y+3, r22	; 0x03
    4c6e:	5e 83       	std	Y+6, r21	; 0x06
    4c70:	4d 83       	std	Y+5, r20	; 0x05
				{
					val = *buffPtr;
    4c72:	8b 81       	ldd	r24, Y+3	; 0x03
    4c74:	9c 81       	ldd	r25, Y+4	; 0x04
    4c76:	fc 01       	movw	r30, r24
    4c78:	80 81       	ld	r24, Z
    4c7a:	91 81       	ldd	r25, Z+1	; 0x01
    4c7c:	fc 01       	movw	r30, r24
    4c7e:	20 81       	ld	r18, Z
    4c80:	8d 81       	ldd	r24, Y+5	; 0x05
    4c82:	9e 81       	ldd	r25, Y+6	; 0x06
    4c84:	fc 01       	movw	r30, r24
    4c86:	20 83       	st	Z, r18
					buffPtr += sizeof(val);
    4c88:	8b 81       	ldd	r24, Y+3	; 0x03
    4c8a:	9c 81       	ldd	r25, Y+4	; 0x04
    4c8c:	fc 01       	movw	r30, r24
    4c8e:	80 81       	ld	r24, Z
    4c90:	91 81       	ldd	r25, Z+1	; 0x01
    4c92:	9c 01       	movw	r18, r24
    4c94:	2f 5f       	subi	r18, 0xFF	; 255
    4c96:	3f 4f       	sbci	r19, 0xFF	; 255
    4c98:	8b 81       	ldd	r24, Y+3	; 0x03
    4c9a:	9c 81       	ldd	r25, Y+4	; 0x04
    4c9c:	fc 01       	movw	r30, r24
    4c9e:	31 83       	std	Z+1, r19	; 0x01
    4ca0:	20 83       	st	Z, r18
				}
    4ca2:	26 96       	adiw	r28, 0x06	; 6
    4ca4:	0f b6       	in	r0, 0x3f	; 63
    4ca6:	f8 94       	cli
    4ca8:	de bf       	out	0x3e, r29	; 62
    4caa:	0f be       	out	0x3f, r0	; 63
    4cac:	cd bf       	out	0x3d, r28	; 61
    4cae:	df 91       	pop	r29
    4cb0:	cf 91       	pop	r28
    4cb2:	08 95       	ret

00004cb4 <_ZN10helicopter8messages7Message6decodeERPhRl>:
				
				void decode (byte *&buffPtr, long &val)
    4cb4:	cf 93       	push	r28
    4cb6:	df 93       	push	r29
    4cb8:	00 d0       	rcall	.+0      	; 0x4cba <_ZN10helicopter8messages7Message6decodeERPhRl+0x6>
    4cba:	00 d0       	rcall	.+0      	; 0x4cbc <_ZN10helicopter8messages7Message6decodeERPhRl+0x8>
    4cbc:	cd b7       	in	r28, 0x3d	; 61
    4cbe:	de b7       	in	r29, 0x3e	; 62
    4cc0:	9a 83       	std	Y+2, r25	; 0x02
    4cc2:	89 83       	std	Y+1, r24	; 0x01
    4cc4:	7c 83       	std	Y+4, r23	; 0x04
    4cc6:	6b 83       	std	Y+3, r22	; 0x03
    4cc8:	5e 83       	std	Y+6, r21	; 0x06
    4cca:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(&val, buffPtr, sizeof(val));
    4ccc:	8b 81       	ldd	r24, Y+3	; 0x03
    4cce:	9c 81       	ldd	r25, Y+4	; 0x04
    4cd0:	fc 01       	movw	r30, r24
    4cd2:	20 81       	ld	r18, Z
    4cd4:	31 81       	ldd	r19, Z+1	; 0x01
    4cd6:	8d 81       	ldd	r24, Y+5	; 0x05
    4cd8:	9e 81       	ldd	r25, Y+6	; 0x06
    4cda:	44 e0       	ldi	r20, 0x04	; 4
    4cdc:	50 e0       	ldi	r21, 0x00	; 0
    4cde:	b9 01       	movw	r22, r18
    4ce0:	0e 94 f7 4b 	call	0x97ee	; 0x97ee <memcpy>
					buffPtr += sizeof(val);
    4ce4:	8b 81       	ldd	r24, Y+3	; 0x03
    4ce6:	9c 81       	ldd	r25, Y+4	; 0x04
    4ce8:	fc 01       	movw	r30, r24
    4cea:	80 81       	ld	r24, Z
    4cec:	91 81       	ldd	r25, Z+1	; 0x01
    4cee:	9c 01       	movw	r18, r24
    4cf0:	2c 5f       	subi	r18, 0xFC	; 252
    4cf2:	3f 4f       	sbci	r19, 0xFF	; 255
    4cf4:	8b 81       	ldd	r24, Y+3	; 0x03
    4cf6:	9c 81       	ldd	r25, Y+4	; 0x04
    4cf8:	fc 01       	movw	r30, r24
    4cfa:	31 83       	std	Z+1, r19	; 0x01
    4cfc:	20 83       	st	Z, r18
				}
    4cfe:	26 96       	adiw	r28, 0x06	; 6
    4d00:	0f b6       	in	r0, 0x3f	; 63
    4d02:	f8 94       	cli
    4d04:	de bf       	out	0x3e, r29	; 62
    4d06:	0f be       	out	0x3f, r0	; 63
    4d08:	cd bf       	out	0x3d, r28	; 61
    4d0a:	df 91       	pop	r29
    4d0c:	cf 91       	pop	r28
    4d0e:	08 95       	ret

00004d10 <_ZN10helicopter8messages7Message6decodeERPhRf>:
				
				void decode (byte *&buffPtr, float &val)
    4d10:	cf 93       	push	r28
    4d12:	df 93       	push	r29
    4d14:	00 d0       	rcall	.+0      	; 0x4d16 <_ZN10helicopter8messages7Message6decodeERPhRf+0x6>
    4d16:	00 d0       	rcall	.+0      	; 0x4d18 <_ZN10helicopter8messages7Message6decodeERPhRf+0x8>
    4d18:	cd b7       	in	r28, 0x3d	; 61
    4d1a:	de b7       	in	r29, 0x3e	; 62
    4d1c:	9a 83       	std	Y+2, r25	; 0x02
    4d1e:	89 83       	std	Y+1, r24	; 0x01
    4d20:	7c 83       	std	Y+4, r23	; 0x04
    4d22:	6b 83       	std	Y+3, r22	; 0x03
    4d24:	5e 83       	std	Y+6, r21	; 0x06
    4d26:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(&val, buffPtr, sizeof(val));
    4d28:	8b 81       	ldd	r24, Y+3	; 0x03
    4d2a:	9c 81       	ldd	r25, Y+4	; 0x04
    4d2c:	fc 01       	movw	r30, r24
    4d2e:	20 81       	ld	r18, Z
    4d30:	31 81       	ldd	r19, Z+1	; 0x01
    4d32:	8d 81       	ldd	r24, Y+5	; 0x05
    4d34:	9e 81       	ldd	r25, Y+6	; 0x06
    4d36:	44 e0       	ldi	r20, 0x04	; 4
    4d38:	50 e0       	ldi	r21, 0x00	; 0
    4d3a:	b9 01       	movw	r22, r18
    4d3c:	0e 94 f7 4b 	call	0x97ee	; 0x97ee <memcpy>
					buffPtr += sizeof(val);
    4d40:	8b 81       	ldd	r24, Y+3	; 0x03
    4d42:	9c 81       	ldd	r25, Y+4	; 0x04
    4d44:	fc 01       	movw	r30, r24
    4d46:	80 81       	ld	r24, Z
    4d48:	91 81       	ldd	r25, Z+1	; 0x01
    4d4a:	9c 01       	movw	r18, r24
    4d4c:	2c 5f       	subi	r18, 0xFC	; 252
    4d4e:	3f 4f       	sbci	r19, 0xFF	; 255
    4d50:	8b 81       	ldd	r24, Y+3	; 0x03
    4d52:	9c 81       	ldd	r25, Y+4	; 0x04
    4d54:	fc 01       	movw	r30, r24
    4d56:	31 83       	std	Z+1, r19	; 0x01
    4d58:	20 83       	st	Z, r18
				}
    4d5a:	26 96       	adiw	r28, 0x06	; 6
    4d5c:	0f b6       	in	r0, 0x3f	; 63
    4d5e:	f8 94       	cli
    4d60:	de bf       	out	0x3e, r29	; 62
    4d62:	0f be       	out	0x3f, r0	; 63
    4d64:	cd bf       	out	0x3d, r28	; 61
    4d66:	df 91       	pop	r29
    4d68:	cf 91       	pop	r28
    4d6a:	08 95       	ret

00004d6c <_ZN10helicopter5model11SystemModel13MagYawDegreesEf>:
			 * Z axis is pointing up out of the FC
			 */
			

			float MagYawDegrees() const { return magYawDegrees; }
			void MagYawDegrees(float val) { magYawDegrees = val; }	
    4d6c:	cf 93       	push	r28
    4d6e:	df 93       	push	r29
    4d70:	00 d0       	rcall	.+0      	; 0x4d72 <_ZN10helicopter5model11SystemModel13MagYawDegreesEf+0x6>
    4d72:	00 d0       	rcall	.+0      	; 0x4d74 <_ZN10helicopter5model11SystemModel13MagYawDegreesEf+0x8>
    4d74:	cd b7       	in	r28, 0x3d	; 61
    4d76:	de b7       	in	r29, 0x3e	; 62
    4d78:	9a 83       	std	Y+2, r25	; 0x02
    4d7a:	89 83       	std	Y+1, r24	; 0x01
    4d7c:	4b 83       	std	Y+3, r20	; 0x03
    4d7e:	5c 83       	std	Y+4, r21	; 0x04
    4d80:	6d 83       	std	Y+5, r22	; 0x05
    4d82:	7e 83       	std	Y+6, r23	; 0x06
    4d84:	29 81       	ldd	r18, Y+1	; 0x01
    4d86:	3a 81       	ldd	r19, Y+2	; 0x02
    4d88:	8b 81       	ldd	r24, Y+3	; 0x03
    4d8a:	9c 81       	ldd	r25, Y+4	; 0x04
    4d8c:	ad 81       	ldd	r26, Y+5	; 0x05
    4d8e:	be 81       	ldd	r27, Y+6	; 0x06
    4d90:	f9 01       	movw	r30, r18
    4d92:	80 83       	st	Z, r24
    4d94:	91 83       	std	Z+1, r25	; 0x01
    4d96:	a2 83       	std	Z+2, r26	; 0x02
    4d98:	b3 83       	std	Z+3, r27	; 0x03
    4d9a:	26 96       	adiw	r28, 0x06	; 6
    4d9c:	0f b6       	in	r0, 0x3f	; 63
    4d9e:	f8 94       	cli
    4da0:	de bf       	out	0x3e, r29	; 62
    4da2:	0f be       	out	0x3f, r0	; 63
    4da4:	cd bf       	out	0x3d, r28	; 61
    4da6:	df 91       	pop	r29
    4da8:	cf 91       	pop	r28
    4daa:	08 95       	ret

00004dac <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf>:
				
			float YawControlBeforeServoLimitsAdjustment() const {return yawControlBeforeServoLimitsAdjustment;}
			void YawControlBeforeServoLimitsAdjustment(float val) { yawControlBeforeServoLimitsAdjustment = val;}
				
			float YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
			void YawVelocityDegreesPerSecond(float val) { yawVelocityDegreesPerSecond = val;}
    4dac:	cf 93       	push	r28
    4dae:	df 93       	push	r29
    4db0:	00 d0       	rcall	.+0      	; 0x4db2 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf+0x6>
    4db2:	00 d0       	rcall	.+0      	; 0x4db4 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf+0x8>
    4db4:	cd b7       	in	r28, 0x3d	; 61
    4db6:	de b7       	in	r29, 0x3e	; 62
    4db8:	9a 83       	std	Y+2, r25	; 0x02
    4dba:	89 83       	std	Y+1, r24	; 0x01
    4dbc:	4b 83       	std	Y+3, r20	; 0x03
    4dbe:	5c 83       	std	Y+4, r21	; 0x04
    4dc0:	6d 83       	std	Y+5, r22	; 0x05
    4dc2:	7e 83       	std	Y+6, r23	; 0x06
    4dc4:	29 81       	ldd	r18, Y+1	; 0x01
    4dc6:	3a 81       	ldd	r19, Y+2	; 0x02
    4dc8:	8b 81       	ldd	r24, Y+3	; 0x03
    4dca:	9c 81       	ldd	r25, Y+4	; 0x04
    4dcc:	ad 81       	ldd	r26, Y+5	; 0x05
    4dce:	be 81       	ldd	r27, Y+6	; 0x06
    4dd0:	f9 01       	movw	r30, r18
    4dd2:	80 8b       	std	Z+16, r24	; 0x10
    4dd4:	91 8b       	std	Z+17, r25	; 0x11
    4dd6:	a2 8b       	std	Z+18, r26	; 0x12
    4dd8:	b3 8b       	std	Z+19, r27	; 0x13
    4dda:	26 96       	adiw	r28, 0x06	; 6
    4ddc:	0f b6       	in	r0, 0x3f	; 63
    4dde:	f8 94       	cli
    4de0:	de bf       	out	0x3e, r29	; 62
    4de2:	0f be       	out	0x3f, r0	; 63
    4de4:	cd bf       	out	0x3d, r28	; 61
    4de6:	df 91       	pop	r29
    4de8:	cf 91       	pop	r28
    4dea:	08 95       	ret

00004dec <_ZNK10helicopter5model11SystemModel15YawProportionalEv>:
			void ReferenceYawVelocityDegreesPerSecond(float val) { referenceYawVelocityDegreesPerSecond = val;}
				
			float YawIntegral() const {return yawIntegral;}
			void YawIntegral(float val) { yawIntegral = val;}

			float YawProportional() const {return yawProportional;}
    4dec:	cf 93       	push	r28
    4dee:	df 93       	push	r29
    4df0:	1f 92       	push	r1
    4df2:	1f 92       	push	r1
    4df4:	cd b7       	in	r28, 0x3d	; 61
    4df6:	de b7       	in	r29, 0x3e	; 62
    4df8:	9a 83       	std	Y+2, r25	; 0x02
    4dfa:	89 83       	std	Y+1, r24	; 0x01
    4dfc:	89 81       	ldd	r24, Y+1	; 0x01
    4dfe:	9a 81       	ldd	r25, Y+2	; 0x02
    4e00:	fc 01       	movw	r30, r24
    4e02:	84 8d       	ldd	r24, Z+28	; 0x1c
    4e04:	95 8d       	ldd	r25, Z+29	; 0x1d
    4e06:	a6 8d       	ldd	r26, Z+30	; 0x1e
    4e08:	b7 8d       	ldd	r27, Z+31	; 0x1f
    4e0a:	bc 01       	movw	r22, r24
    4e0c:	cd 01       	movw	r24, r26
    4e0e:	0f 90       	pop	r0
    4e10:	0f 90       	pop	r0
    4e12:	df 91       	pop	r29
    4e14:	cf 91       	pop	r28
    4e16:	08 95       	ret

00004e18 <_ZNK10helicopter5model11SystemModel18YawDerivativeErrorEv>:
			void YawProportional(float val) { yawProportional = val;}

			float YawDerivativeError() const {return yawDerivativeError;}
    4e18:	cf 93       	push	r28
    4e1a:	df 93       	push	r29
    4e1c:	1f 92       	push	r1
    4e1e:	1f 92       	push	r1
    4e20:	cd b7       	in	r28, 0x3d	; 61
    4e22:	de b7       	in	r29, 0x3e	; 62
    4e24:	9a 83       	std	Y+2, r25	; 0x02
    4e26:	89 83       	std	Y+1, r24	; 0x01
    4e28:	89 81       	ldd	r24, Y+1	; 0x01
    4e2a:	9a 81       	ldd	r25, Y+2	; 0x02
    4e2c:	fc 01       	movw	r30, r24
    4e2e:	80 a1       	ldd	r24, Z+32	; 0x20
    4e30:	91 a1       	ldd	r25, Z+33	; 0x21
    4e32:	a2 a1       	ldd	r26, Z+34	; 0x22
    4e34:	b3 a1       	ldd	r27, Z+35	; 0x23
    4e36:	bc 01       	movw	r22, r24
    4e38:	cd 01       	movw	r24, r26
    4e3a:	0f 90       	pop	r0
    4e3c:	0f 90       	pop	r0
    4e3e:	df 91       	pop	r29
    4e40:	cf 91       	pop	r28
    4e42:	08 95       	ret

00004e44 <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf>:

			float LongitudeControl() const {return longitudeControl;}
			void LongitudeControl(float val) { longitudeControl = val;}
				
			float XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
			void XVelocityMetersPerSecond(float val) { xVelocityMetersPerSecond = val;}
    4e44:	cf 93       	push	r28
    4e46:	df 93       	push	r29
    4e48:	00 d0       	rcall	.+0      	; 0x4e4a <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf+0x6>
    4e4a:	00 d0       	rcall	.+0      	; 0x4e4c <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf+0x8>
    4e4c:	cd b7       	in	r28, 0x3d	; 61
    4e4e:	de b7       	in	r29, 0x3e	; 62
    4e50:	9a 83       	std	Y+2, r25	; 0x02
    4e52:	89 83       	std	Y+1, r24	; 0x01
    4e54:	4b 83       	std	Y+3, r20	; 0x03
    4e56:	5c 83       	std	Y+4, r21	; 0x04
    4e58:	6d 83       	std	Y+5, r22	; 0x05
    4e5a:	7e 83       	std	Y+6, r23	; 0x06
    4e5c:	29 81       	ldd	r18, Y+1	; 0x01
    4e5e:	3a 81       	ldd	r19, Y+2	; 0x02
    4e60:	8b 81       	ldd	r24, Y+3	; 0x03
    4e62:	9c 81       	ldd	r25, Y+4	; 0x04
    4e64:	ad 81       	ldd	r26, Y+5	; 0x05
    4e66:	be 81       	ldd	r27, Y+6	; 0x06
    4e68:	f9 01       	movw	r30, r18
    4e6a:	84 ab       	std	Z+52, r24	; 0x34
    4e6c:	95 ab       	std	Z+53, r25	; 0x35
    4e6e:	a6 ab       	std	Z+54, r26	; 0x36
    4e70:	b7 ab       	std	Z+55, r27	; 0x37
    4e72:	26 96       	adiw	r28, 0x06	; 6
    4e74:	0f b6       	in	r0, 0x3f	; 63
    4e76:	f8 94       	cli
    4e78:	de bf       	out	0x3e, r29	; 62
    4e7a:	0f be       	out	0x3f, r0	; 63
    4e7c:	cd bf       	out	0x3d, r28	; 61
    4e7e:	df 91       	pop	r29
    4e80:	cf 91       	pop	r28
    4e82:	08 95       	ret

00004e84 <_ZNK10helicopter5model11SystemModel13XProportionalEv>:
			void ReferenceXVelocityMetersPerSecond(float val) { referenceXVelocityMetersPerSecond = val;}
				
			float XLongitudeOuterLoopSetpoint() const {return xLongitudeOuterLoopSetpoint;}
			void XLongitudeOuterLoopSetpoint(float val) { xLongitudeOuterLoopSetpoint = val;}
				
			float XProportional() const {return xProportional;}
    4e84:	cf 93       	push	r28
    4e86:	df 93       	push	r29
    4e88:	1f 92       	push	r1
    4e8a:	1f 92       	push	r1
    4e8c:	cd b7       	in	r28, 0x3d	; 61
    4e8e:	de b7       	in	r29, 0x3e	; 62
    4e90:	9a 83       	std	Y+2, r25	; 0x02
    4e92:	89 83       	std	Y+1, r24	; 0x01
    4e94:	89 81       	ldd	r24, Y+1	; 0x01
    4e96:	9a 81       	ldd	r25, Y+2	; 0x02
    4e98:	80 5c       	subi	r24, 0xC0	; 192
    4e9a:	9f 4f       	sbci	r25, 0xFF	; 255
    4e9c:	fc 01       	movw	r30, r24
    4e9e:	80 81       	ld	r24, Z
    4ea0:	91 81       	ldd	r25, Z+1	; 0x01
    4ea2:	a2 81       	ldd	r26, Z+2	; 0x02
    4ea4:	b3 81       	ldd	r27, Z+3	; 0x03
    4ea6:	bc 01       	movw	r22, r24
    4ea8:	cd 01       	movw	r24, r26
    4eaa:	0f 90       	pop	r0
    4eac:	0f 90       	pop	r0
    4eae:	df 91       	pop	r29
    4eb0:	cf 91       	pop	r28
    4eb2:	08 95       	ret

00004eb4 <_ZNK10helicopter5model11SystemModel16XDerivativeErrorEv>:
			void XProportional(float val) { xProportional = val;}
				
			float XIntegral() const {return xIntegral;}
			void XIntegral(float val) { xIntegral = val;}
				
			float XDerivativeError() const {return xDerivativeError;}
    4eb4:	cf 93       	push	r28
    4eb6:	df 93       	push	r29
    4eb8:	1f 92       	push	r1
    4eba:	1f 92       	push	r1
    4ebc:	cd b7       	in	r28, 0x3d	; 61
    4ebe:	de b7       	in	r29, 0x3e	; 62
    4ec0:	9a 83       	std	Y+2, r25	; 0x02
    4ec2:	89 83       	std	Y+1, r24	; 0x01
    4ec4:	89 81       	ldd	r24, Y+1	; 0x01
    4ec6:	9a 81       	ldd	r25, Y+2	; 0x02
    4ec8:	88 5b       	subi	r24, 0xB8	; 184
    4eca:	9f 4f       	sbci	r25, 0xFF	; 255
    4ecc:	fc 01       	movw	r30, r24
    4ece:	80 81       	ld	r24, Z
    4ed0:	91 81       	ldd	r25, Z+1	; 0x01
    4ed2:	a2 81       	ldd	r26, Z+2	; 0x02
    4ed4:	b3 81       	ldd	r27, Z+3	; 0x03
    4ed6:	bc 01       	movw	r22, r24
    4ed8:	cd 01       	movw	r24, r26
    4eda:	0f 90       	pop	r0
    4edc:	0f 90       	pop	r0
    4ede:	df 91       	pop	r29
    4ee0:	cf 91       	pop	r28
    4ee2:	08 95       	ret

00004ee4 <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf>:
			void XDerivativeError(float val) { xDerivativeError = val;}
				
		
			float ThetaPitchDegrees() const {return thetaPitchDegrees;}
			void ThetaPitchDegrees(float val) {thetaPitchDegrees = val;}
    4ee4:	cf 93       	push	r28
    4ee6:	df 93       	push	r29
    4ee8:	00 d0       	rcall	.+0      	; 0x4eea <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf+0x6>
    4eea:	00 d0       	rcall	.+0      	; 0x4eec <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf+0x8>
    4eec:	cd b7       	in	r28, 0x3d	; 61
    4eee:	de b7       	in	r29, 0x3e	; 62
    4ef0:	9a 83       	std	Y+2, r25	; 0x02
    4ef2:	89 83       	std	Y+1, r24	; 0x01
    4ef4:	4b 83       	std	Y+3, r20	; 0x03
    4ef6:	5c 83       	std	Y+4, r21	; 0x04
    4ef8:	6d 83       	std	Y+5, r22	; 0x05
    4efa:	7e 83       	std	Y+6, r23	; 0x06
    4efc:	89 81       	ldd	r24, Y+1	; 0x01
    4efe:	9a 81       	ldd	r25, Y+2	; 0x02
    4f00:	9c 01       	movw	r18, r24
    4f02:	24 5b       	subi	r18, 0xB4	; 180
    4f04:	3f 4f       	sbci	r19, 0xFF	; 255
    4f06:	8b 81       	ldd	r24, Y+3	; 0x03
    4f08:	9c 81       	ldd	r25, Y+4	; 0x04
    4f0a:	ad 81       	ldd	r26, Y+5	; 0x05
    4f0c:	be 81       	ldd	r27, Y+6	; 0x06
    4f0e:	f9 01       	movw	r30, r18
    4f10:	80 83       	st	Z, r24
    4f12:	91 83       	std	Z+1, r25	; 0x01
    4f14:	a2 83       	std	Z+2, r26	; 0x02
    4f16:	b3 83       	std	Z+3, r27	; 0x03
    4f18:	26 96       	adiw	r28, 0x06	; 6
    4f1a:	0f b6       	in	r0, 0x3f	; 63
    4f1c:	f8 94       	cli
    4f1e:	de bf       	out	0x3e, r29	; 62
    4f20:	0f be       	out	0x3f, r0	; 63
    4f22:	cd bf       	out	0x3d, r28	; 61
    4f24:	df 91       	pop	r29
    4f26:	cf 91       	pop	r28
    4f28:	08 95       	ret

00004f2a <_ZN10helicopter5model11SystemModel33PitchAngularVelocityRadsPerSecondEf>:
		
			float PitchAngularVelocityRadsPerSecond() const {return pitchAngularVelocityRadsPerSecond;}
			void PitchAngularVelocityRadsPerSecond(float val) {pitchAngularVelocityRadsPerSecond = val;}
    4f2a:	cf 93       	push	r28
    4f2c:	df 93       	push	r29
    4f2e:	00 d0       	rcall	.+0      	; 0x4f30 <_ZN10helicopter5model11SystemModel33PitchAngularVelocityRadsPerSecondEf+0x6>
    4f30:	00 d0       	rcall	.+0      	; 0x4f32 <_ZN10helicopter5model11SystemModel33PitchAngularVelocityRadsPerSecondEf+0x8>
    4f32:	cd b7       	in	r28, 0x3d	; 61
    4f34:	de b7       	in	r29, 0x3e	; 62
    4f36:	9a 83       	std	Y+2, r25	; 0x02
    4f38:	89 83       	std	Y+1, r24	; 0x01
    4f3a:	4b 83       	std	Y+3, r20	; 0x03
    4f3c:	5c 83       	std	Y+4, r21	; 0x04
    4f3e:	6d 83       	std	Y+5, r22	; 0x05
    4f40:	7e 83       	std	Y+6, r23	; 0x06
    4f42:	89 81       	ldd	r24, Y+1	; 0x01
    4f44:	9a 81       	ldd	r25, Y+2	; 0x02
    4f46:	9c 01       	movw	r18, r24
    4f48:	20 5b       	subi	r18, 0xB0	; 176
    4f4a:	3f 4f       	sbci	r19, 0xFF	; 255
    4f4c:	8b 81       	ldd	r24, Y+3	; 0x03
    4f4e:	9c 81       	ldd	r25, Y+4	; 0x04
    4f50:	ad 81       	ldd	r26, Y+5	; 0x05
    4f52:	be 81       	ldd	r27, Y+6	; 0x06
    4f54:	f9 01       	movw	r30, r18
    4f56:	80 83       	st	Z, r24
    4f58:	91 83       	std	Z+1, r25	; 0x01
    4f5a:	a2 83       	std	Z+2, r26	; 0x02
    4f5c:	b3 83       	std	Z+3, r27	; 0x03
    4f5e:	26 96       	adiw	r28, 0x06	; 6
    4f60:	0f b6       	in	r0, 0x3f	; 63
    4f62:	f8 94       	cli
    4f64:	de bf       	out	0x3e, r29	; 62
    4f66:	0f be       	out	0x3f, r0	; 63
    4f68:	cd bf       	out	0x3d, r28	; 61
    4f6a:	df 91       	pop	r29
    4f6c:	cf 91       	pop	r28
    4f6e:	08 95       	ret

00004f70 <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf>:

			float LateralControl() const {return lateralControl;}
			void LateralControl(float val) { lateralControl = val;}

			float YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
			void YVelocityMetersPerSecond(float val) { yVelocityMetersPerSecond = val;}
    4f70:	cf 93       	push	r28
    4f72:	df 93       	push	r29
    4f74:	00 d0       	rcall	.+0      	; 0x4f76 <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf+0x6>
    4f76:	00 d0       	rcall	.+0      	; 0x4f78 <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf+0x8>
    4f78:	cd b7       	in	r28, 0x3d	; 61
    4f7a:	de b7       	in	r29, 0x3e	; 62
    4f7c:	9a 83       	std	Y+2, r25	; 0x02
    4f7e:	89 83       	std	Y+1, r24	; 0x01
    4f80:	4b 83       	std	Y+3, r20	; 0x03
    4f82:	5c 83       	std	Y+4, r21	; 0x04
    4f84:	6d 83       	std	Y+5, r22	; 0x05
    4f86:	7e 83       	std	Y+6, r23	; 0x06
    4f88:	89 81       	ldd	r24, Y+1	; 0x01
    4f8a:	9a 81       	ldd	r25, Y+2	; 0x02
    4f8c:	9c 01       	movw	r18, r24
    4f8e:	2c 59       	subi	r18, 0x9C	; 156
    4f90:	3f 4f       	sbci	r19, 0xFF	; 255
    4f92:	8b 81       	ldd	r24, Y+3	; 0x03
    4f94:	9c 81       	ldd	r25, Y+4	; 0x04
    4f96:	ad 81       	ldd	r26, Y+5	; 0x05
    4f98:	be 81       	ldd	r27, Y+6	; 0x06
    4f9a:	f9 01       	movw	r30, r18
    4f9c:	80 83       	st	Z, r24
    4f9e:	91 83       	std	Z+1, r25	; 0x01
    4fa0:	a2 83       	std	Z+2, r26	; 0x02
    4fa2:	b3 83       	std	Z+3, r27	; 0x03
    4fa4:	26 96       	adiw	r28, 0x06	; 6
    4fa6:	0f b6       	in	r0, 0x3f	; 63
    4fa8:	f8 94       	cli
    4faa:	de bf       	out	0x3e, r29	; 62
    4fac:	0f be       	out	0x3f, r0	; 63
    4fae:	cd bf       	out	0x3d, r28	; 61
    4fb0:	df 91       	pop	r29
    4fb2:	cf 91       	pop	r28
    4fb4:	08 95       	ret

00004fb6 <_ZNK10helicopter5model11SystemModel13YProportionalEv>:
			void ReferenceYVelocityMetersPerSecond(float val) { referenceYVelocityMetersPerSecond = val;}

			float YLateralOuterLoopSetpoint() const {return yLateralOuterLoopSetpoint;}
			void YLateralOuterLoopSetpoint(float val) { yLateralOuterLoopSetpoint = val;}

			float YProportional() const {return yProportional;}
    4fb6:	cf 93       	push	r28
    4fb8:	df 93       	push	r29
    4fba:	1f 92       	push	r1
    4fbc:	1f 92       	push	r1
    4fbe:	cd b7       	in	r28, 0x3d	; 61
    4fc0:	de b7       	in	r29, 0x3e	; 62
    4fc2:	9a 83       	std	Y+2, r25	; 0x02
    4fc4:	89 83       	std	Y+1, r24	; 0x01
    4fc6:	89 81       	ldd	r24, Y+1	; 0x01
    4fc8:	9a 81       	ldd	r25, Y+2	; 0x02
    4fca:	80 59       	subi	r24, 0x90	; 144
    4fcc:	9f 4f       	sbci	r25, 0xFF	; 255
    4fce:	fc 01       	movw	r30, r24
    4fd0:	80 81       	ld	r24, Z
    4fd2:	91 81       	ldd	r25, Z+1	; 0x01
    4fd4:	a2 81       	ldd	r26, Z+2	; 0x02
    4fd6:	b3 81       	ldd	r27, Z+3	; 0x03
    4fd8:	bc 01       	movw	r22, r24
    4fda:	cd 01       	movw	r24, r26
    4fdc:	0f 90       	pop	r0
    4fde:	0f 90       	pop	r0
    4fe0:	df 91       	pop	r29
    4fe2:	cf 91       	pop	r28
    4fe4:	08 95       	ret

00004fe6 <_ZNK10helicopter5model11SystemModel16YDerivativeErrorEv>:
			void YProportional(float val) { yProportional = val;}

			float YIntegral() const {return yIntegral;}
			void YIntegral(float val) { yIntegral = val;}

			float YDerivativeError() const {return yDerivativeError;}
    4fe6:	cf 93       	push	r28
    4fe8:	df 93       	push	r29
    4fea:	1f 92       	push	r1
    4fec:	1f 92       	push	r1
    4fee:	cd b7       	in	r28, 0x3d	; 61
    4ff0:	de b7       	in	r29, 0x3e	; 62
    4ff2:	9a 83       	std	Y+2, r25	; 0x02
    4ff4:	89 83       	std	Y+1, r24	; 0x01
    4ff6:	89 81       	ldd	r24, Y+1	; 0x01
    4ff8:	9a 81       	ldd	r25, Y+2	; 0x02
    4ffa:	88 58       	subi	r24, 0x88	; 136
    4ffc:	9f 4f       	sbci	r25, 0xFF	; 255
    4ffe:	fc 01       	movw	r30, r24
    5000:	80 81       	ld	r24, Z
    5002:	91 81       	ldd	r25, Z+1	; 0x01
    5004:	a2 81       	ldd	r26, Z+2	; 0x02
    5006:	b3 81       	ldd	r27, Z+3	; 0x03
    5008:	bc 01       	movw	r22, r24
    500a:	cd 01       	movw	r24, r26
    500c:	0f 90       	pop	r0
    500e:	0f 90       	pop	r0
    5010:	df 91       	pop	r29
    5012:	cf 91       	pop	r28
    5014:	08 95       	ret

00005016 <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf>:
			void YDerivativeError(float val) { yDerivativeError = val;}


			float PhiRollDegrees() const {return phiRollDegrees;}
			void PhiRollDegrees(float val) {phiRollDegrees = val;}
    5016:	cf 93       	push	r28
    5018:	df 93       	push	r29
    501a:	00 d0       	rcall	.+0      	; 0x501c <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf+0x6>
    501c:	00 d0       	rcall	.+0      	; 0x501e <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf+0x8>
    501e:	cd b7       	in	r28, 0x3d	; 61
    5020:	de b7       	in	r29, 0x3e	; 62
    5022:	9a 83       	std	Y+2, r25	; 0x02
    5024:	89 83       	std	Y+1, r24	; 0x01
    5026:	4b 83       	std	Y+3, r20	; 0x03
    5028:	5c 83       	std	Y+4, r21	; 0x04
    502a:	6d 83       	std	Y+5, r22	; 0x05
    502c:	7e 83       	std	Y+6, r23	; 0x06
    502e:	89 81       	ldd	r24, Y+1	; 0x01
    5030:	9a 81       	ldd	r25, Y+2	; 0x02
    5032:	9c 01       	movw	r18, r24
    5034:	24 58       	subi	r18, 0x84	; 132
    5036:	3f 4f       	sbci	r19, 0xFF	; 255
    5038:	8b 81       	ldd	r24, Y+3	; 0x03
    503a:	9c 81       	ldd	r25, Y+4	; 0x04
    503c:	ad 81       	ldd	r26, Y+5	; 0x05
    503e:	be 81       	ldd	r27, Y+6	; 0x06
    5040:	f9 01       	movw	r30, r18
    5042:	80 83       	st	Z, r24
    5044:	91 83       	std	Z+1, r25	; 0x01
    5046:	a2 83       	std	Z+2, r26	; 0x02
    5048:	b3 83       	std	Z+3, r27	; 0x03
    504a:	26 96       	adiw	r28, 0x06	; 6
    504c:	0f b6       	in	r0, 0x3f	; 63
    504e:	f8 94       	cli
    5050:	de bf       	out	0x3e, r29	; 62
    5052:	0f be       	out	0x3f, r0	; 63
    5054:	cd bf       	out	0x3d, r28	; 61
    5056:	df 91       	pop	r29
    5058:	cf 91       	pop	r28
    505a:	08 95       	ret

0000505c <_ZN10helicopter5model11SystemModel32RollAngularVelocityRadsPerSecondEf>:

			float RollAngularVelocityRadsPerSecond() const {return rollAngularVelocityRadsPerSecond;}
			void RollAngularVelocityRadsPerSecond(float val) {rollAngularVelocityRadsPerSecond = val;}
    505c:	cf 93       	push	r28
    505e:	df 93       	push	r29
    5060:	00 d0       	rcall	.+0      	; 0x5062 <_ZN10helicopter5model11SystemModel32RollAngularVelocityRadsPerSecondEf+0x6>
    5062:	00 d0       	rcall	.+0      	; 0x5064 <_ZN10helicopter5model11SystemModel32RollAngularVelocityRadsPerSecondEf+0x8>
    5064:	cd b7       	in	r28, 0x3d	; 61
    5066:	de b7       	in	r29, 0x3e	; 62
    5068:	9a 83       	std	Y+2, r25	; 0x02
    506a:	89 83       	std	Y+1, r24	; 0x01
    506c:	4b 83       	std	Y+3, r20	; 0x03
    506e:	5c 83       	std	Y+4, r21	; 0x04
    5070:	6d 83       	std	Y+5, r22	; 0x05
    5072:	7e 83       	std	Y+6, r23	; 0x06
    5074:	89 81       	ldd	r24, Y+1	; 0x01
    5076:	9a 81       	ldd	r25, Y+2	; 0x02
    5078:	9c 01       	movw	r18, r24
    507a:	20 58       	subi	r18, 0x80	; 128
    507c:	3f 4f       	sbci	r19, 0xFF	; 255
    507e:	8b 81       	ldd	r24, Y+3	; 0x03
    5080:	9c 81       	ldd	r25, Y+4	; 0x04
    5082:	ad 81       	ldd	r26, Y+5	; 0x05
    5084:	be 81       	ldd	r27, Y+6	; 0x06
    5086:	f9 01       	movw	r30, r18
    5088:	80 83       	st	Z, r24
    508a:	91 83       	std	Z+1, r25	; 0x01
    508c:	a2 83       	std	Z+2, r26	; 0x02
    508e:	b3 83       	std	Z+3, r27	; 0x03
    5090:	26 96       	adiw	r28, 0x06	; 6
    5092:	0f b6       	in	r0, 0x3f	; 63
    5094:	f8 94       	cli
    5096:	de bf       	out	0x3e, r29	; 62
    5098:	0f be       	out	0x3f, r0	; 63
    509a:	cd bf       	out	0x3d, r28	; 61
    509c:	df 91       	pop	r29
    509e:	cf 91       	pop	r28
    50a0:	08 95       	ret

000050a2 <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf>:
						
						
						

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
			void AltitudeFeetAgl(float val) { altitudeFeetAgl = val; }
    50a2:	cf 93       	push	r28
    50a4:	df 93       	push	r29
    50a6:	00 d0       	rcall	.+0      	; 0x50a8 <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf+0x6>
    50a8:	00 d0       	rcall	.+0      	; 0x50aa <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf+0x8>
    50aa:	cd b7       	in	r28, 0x3d	; 61
    50ac:	de b7       	in	r29, 0x3e	; 62
    50ae:	9a 83       	std	Y+2, r25	; 0x02
    50b0:	89 83       	std	Y+1, r24	; 0x01
    50b2:	4b 83       	std	Y+3, r20	; 0x03
    50b4:	5c 83       	std	Y+4, r21	; 0x04
    50b6:	6d 83       	std	Y+5, r22	; 0x05
    50b8:	7e 83       	std	Y+6, r23	; 0x06
    50ba:	89 81       	ldd	r24, Y+1	; 0x01
    50bc:	9a 81       	ldd	r25, Y+2	; 0x02
    50be:	9c 01       	movw	r18, r24
    50c0:	2c 57       	subi	r18, 0x7C	; 124
    50c2:	3f 4f       	sbci	r19, 0xFF	; 255
    50c4:	8b 81       	ldd	r24, Y+3	; 0x03
    50c6:	9c 81       	ldd	r25, Y+4	; 0x04
    50c8:	ad 81       	ldd	r26, Y+5	; 0x05
    50ca:	be 81       	ldd	r27, Y+6	; 0x06
    50cc:	f9 01       	movw	r30, r18
    50ce:	80 83       	st	Z, r24
    50d0:	91 83       	std	Z+1, r25	; 0x01
    50d2:	a2 83       	std	Z+2, r26	; 0x02
    50d4:	b3 83       	std	Z+3, r27	; 0x03
    50d6:	26 96       	adiw	r28, 0x06	; 6
    50d8:	0f b6       	in	r0, 0x3f	; 63
    50da:	f8 94       	cli
    50dc:	de bf       	out	0x3e, r29	; 62
    50de:	0f be       	out	0x3f, r0	; 63
    50e0:	cd bf       	out	0x3d, r28	; 61
    50e2:	df 91       	pop	r29
    50e4:	cf 91       	pop	r28
    50e6:	08 95       	ret

000050e8 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf>:

			float MainRotorControlBeforeServoLimitsAdjustment() const {return mainRotorControlBeforeServoLimitsAdjustment;}
			void MainRotorControlBeforeServoLimitsAdjustment(float val) { mainRotorControlBeforeServoLimitsAdjustment = val;}

			float ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
			void ZVelocityFeetPerSecond(float val) { zVelocityFeetPerSecond = val;}
    50e8:	cf 93       	push	r28
    50ea:	df 93       	push	r29
    50ec:	00 d0       	rcall	.+0      	; 0x50ee <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf+0x6>
    50ee:	00 d0       	rcall	.+0      	; 0x50f0 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf+0x8>
    50f0:	cd b7       	in	r28, 0x3d	; 61
    50f2:	de b7       	in	r29, 0x3e	; 62
    50f4:	9a 83       	std	Y+2, r25	; 0x02
    50f6:	89 83       	std	Y+1, r24	; 0x01
    50f8:	4b 83       	std	Y+3, r20	; 0x03
    50fa:	5c 83       	std	Y+4, r21	; 0x04
    50fc:	6d 83       	std	Y+5, r22	; 0x05
    50fe:	7e 83       	std	Y+6, r23	; 0x06
    5100:	89 81       	ldd	r24, Y+1	; 0x01
    5102:	9a 81       	ldd	r25, Y+2	; 0x02
    5104:	9c 01       	movw	r18, r24
    5106:	28 56       	subi	r18, 0x68	; 104
    5108:	3f 4f       	sbci	r19, 0xFF	; 255
    510a:	8b 81       	ldd	r24, Y+3	; 0x03
    510c:	9c 81       	ldd	r25, Y+4	; 0x04
    510e:	ad 81       	ldd	r26, Y+5	; 0x05
    5110:	be 81       	ldd	r27, Y+6	; 0x06
    5112:	f9 01       	movw	r30, r18
    5114:	80 83       	st	Z, r24
    5116:	91 83       	std	Z+1, r25	; 0x01
    5118:	a2 83       	std	Z+2, r26	; 0x02
    511a:	b3 83       	std	Z+3, r27	; 0x03
    511c:	26 96       	adiw	r28, 0x06	; 6
    511e:	0f b6       	in	r0, 0x3f	; 63
    5120:	f8 94       	cli
    5122:	de bf       	out	0x3e, r29	; 62
    5124:	0f be       	out	0x3f, r0	; 63
    5126:	cd bf       	out	0x3d, r28	; 61
    5128:	df 91       	pop	r29
    512a:	cf 91       	pop	r28
    512c:	08 95       	ret

0000512e <_ZNK10helicopter5model11SystemModel13ZProportionalEv>:
			void ReferenceZVelocityFeetPerSecond(float val) { referenceZVelocityFeetPerSecond = val;}

			float ZIntegral() const {return zIntegral;}
			void ZIntegral(float val) { zIntegral = val;}

			float ZProportional() const {return zProportional;}
    512e:	cf 93       	push	r28
    5130:	df 93       	push	r29
    5132:	1f 92       	push	r1
    5134:	1f 92       	push	r1
    5136:	cd b7       	in	r28, 0x3d	; 61
    5138:	de b7       	in	r29, 0x3e	; 62
    513a:	9a 83       	std	Y+2, r25	; 0x02
    513c:	89 83       	std	Y+1, r24	; 0x01
    513e:	89 81       	ldd	r24, Y+1	; 0x01
    5140:	9a 81       	ldd	r25, Y+2	; 0x02
    5142:	8c 55       	subi	r24, 0x5C	; 92
    5144:	9f 4f       	sbci	r25, 0xFF	; 255
    5146:	fc 01       	movw	r30, r24
    5148:	80 81       	ld	r24, Z
    514a:	91 81       	ldd	r25, Z+1	; 0x01
    514c:	a2 81       	ldd	r26, Z+2	; 0x02
    514e:	b3 81       	ldd	r27, Z+3	; 0x03
    5150:	bc 01       	movw	r22, r24
    5152:	cd 01       	movw	r24, r26
    5154:	0f 90       	pop	r0
    5156:	0f 90       	pop	r0
    5158:	df 91       	pop	r29
    515a:	cf 91       	pop	r28
    515c:	08 95       	ret

0000515e <_ZNK10helicopter5model11SystemModel16ZDerivativeErrorEv>:
			void ZProportional(float val) { zProportional = val;}

			float ZDerivativeError() const {return zDerivativeError;}
    515e:	cf 93       	push	r28
    5160:	df 93       	push	r29
    5162:	1f 92       	push	r1
    5164:	1f 92       	push	r1
    5166:	cd b7       	in	r28, 0x3d	; 61
    5168:	de b7       	in	r29, 0x3e	; 62
    516a:	9a 83       	std	Y+2, r25	; 0x02
    516c:	89 83       	std	Y+1, r24	; 0x01
    516e:	89 81       	ldd	r24, Y+1	; 0x01
    5170:	9a 81       	ldd	r25, Y+2	; 0x02
    5172:	88 55       	subi	r24, 0x58	; 88
    5174:	9f 4f       	sbci	r25, 0xFF	; 255
    5176:	fc 01       	movw	r30, r24
    5178:	80 81       	ld	r24, Z
    517a:	91 81       	ldd	r25, Z+1	; 0x01
    517c:	a2 81       	ldd	r26, Z+2	; 0x02
    517e:	b3 81       	ldd	r27, Z+3	; 0x03
    5180:	bc 01       	movw	r22, r24
    5182:	cd 01       	movw	r24, r26
    5184:	0f 90       	pop	r0
    5186:	0f 90       	pop	r0
    5188:	df 91       	pop	r29
    518a:	cf 91       	pop	r28
    518c:	08 95       	ret

0000518e <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf>:
			void ZDerivativeError(float val) { zDerivativeError = val;}						
						
						
			float LatitudeDegrees() const {return latitudeDegrees;}
			void LatitudeDegrees(float val) { latitudeDegrees = val;}						
    518e:	cf 93       	push	r28
    5190:	df 93       	push	r29
    5192:	00 d0       	rcall	.+0      	; 0x5194 <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf+0x6>
    5194:	00 d0       	rcall	.+0      	; 0x5196 <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf+0x8>
    5196:	cd b7       	in	r28, 0x3d	; 61
    5198:	de b7       	in	r29, 0x3e	; 62
    519a:	9a 83       	std	Y+2, r25	; 0x02
    519c:	89 83       	std	Y+1, r24	; 0x01
    519e:	4b 83       	std	Y+3, r20	; 0x03
    51a0:	5c 83       	std	Y+4, r21	; 0x04
    51a2:	6d 83       	std	Y+5, r22	; 0x05
    51a4:	7e 83       	std	Y+6, r23	; 0x06
    51a6:	89 81       	ldd	r24, Y+1	; 0x01
    51a8:	9a 81       	ldd	r25, Y+2	; 0x02
    51aa:	9c 01       	movw	r18, r24
    51ac:	24 55       	subi	r18, 0x54	; 84
    51ae:	3f 4f       	sbci	r19, 0xFF	; 255
    51b0:	8b 81       	ldd	r24, Y+3	; 0x03
    51b2:	9c 81       	ldd	r25, Y+4	; 0x04
    51b4:	ad 81       	ldd	r26, Y+5	; 0x05
    51b6:	be 81       	ldd	r27, Y+6	; 0x06
    51b8:	f9 01       	movw	r30, r18
    51ba:	80 83       	st	Z, r24
    51bc:	91 83       	std	Z+1, r25	; 0x01
    51be:	a2 83       	std	Z+2, r26	; 0x02
    51c0:	b3 83       	std	Z+3, r27	; 0x03
    51c2:	26 96       	adiw	r28, 0x06	; 6
    51c4:	0f b6       	in	r0, 0x3f	; 63
    51c6:	f8 94       	cli
    51c8:	de bf       	out	0x3e, r29	; 62
    51ca:	0f be       	out	0x3f, r0	; 63
    51cc:	cd bf       	out	0x3d, r28	; 61
    51ce:	df 91       	pop	r29
    51d0:	cf 91       	pop	r28
    51d2:	08 95       	ret

000051d4 <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf>:

			float LongitudeDegrees() const {return longitudeDegrees;}
			void LongitudeDegrees(float val) { longitudeDegrees = val;}						
    51d4:	cf 93       	push	r28
    51d6:	df 93       	push	r29
    51d8:	00 d0       	rcall	.+0      	; 0x51da <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf+0x6>
    51da:	00 d0       	rcall	.+0      	; 0x51dc <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf+0x8>
    51dc:	cd b7       	in	r28, 0x3d	; 61
    51de:	de b7       	in	r29, 0x3e	; 62
    51e0:	9a 83       	std	Y+2, r25	; 0x02
    51e2:	89 83       	std	Y+1, r24	; 0x01
    51e4:	4b 83       	std	Y+3, r20	; 0x03
    51e6:	5c 83       	std	Y+4, r21	; 0x04
    51e8:	6d 83       	std	Y+5, r22	; 0x05
    51ea:	7e 83       	std	Y+6, r23	; 0x06
    51ec:	89 81       	ldd	r24, Y+1	; 0x01
    51ee:	9a 81       	ldd	r25, Y+2	; 0x02
    51f0:	9c 01       	movw	r18, r24
    51f2:	20 55       	subi	r18, 0x50	; 80
    51f4:	3f 4f       	sbci	r19, 0xFF	; 255
    51f6:	8b 81       	ldd	r24, Y+3	; 0x03
    51f8:	9c 81       	ldd	r25, Y+4	; 0x04
    51fa:	ad 81       	ldd	r26, Y+5	; 0x05
    51fc:	be 81       	ldd	r27, Y+6	; 0x06
    51fe:	f9 01       	movw	r30, r18
    5200:	80 83       	st	Z, r24
    5202:	91 83       	std	Z+1, r25	; 0x01
    5204:	a2 83       	std	Z+2, r26	; 0x02
    5206:	b3 83       	std	Z+3, r27	; 0x03
    5208:	26 96       	adiw	r28, 0x06	; 6
    520a:	0f b6       	in	r0, 0x3f	; 63
    520c:	f8 94       	cli
    520e:	de bf       	out	0x3e, r29	; 62
    5210:	0f be       	out	0x3f, r0	; 63
    5212:	cd bf       	out	0x3d, r28	; 61
    5214:	df 91       	pop	r29
    5216:	cf 91       	pop	r28
    5218:	08 95       	ret

0000521a <_ZNK10helicopter5model11SystemModel8TimeoutsEv>:
						
						
			long Timeouts() const {return timeouts; }
    521a:	cf 93       	push	r28
    521c:	df 93       	push	r29
    521e:	1f 92       	push	r1
    5220:	1f 92       	push	r1
    5222:	cd b7       	in	r28, 0x3d	; 61
    5224:	de b7       	in	r29, 0x3e	; 62
    5226:	9a 83       	std	Y+2, r25	; 0x02
    5228:	89 83       	std	Y+1, r24	; 0x01
    522a:	89 81       	ldd	r24, Y+1	; 0x01
    522c:	9a 81       	ldd	r25, Y+2	; 0x02
    522e:	8c 54       	subi	r24, 0x4C	; 76
    5230:	9f 4f       	sbci	r25, 0xFF	; 255
    5232:	fc 01       	movw	r30, r24
    5234:	80 81       	ld	r24, Z
    5236:	91 81       	ldd	r25, Z+1	; 0x01
    5238:	a2 81       	ldd	r26, Z+2	; 0x02
    523a:	b3 81       	ldd	r27, Z+3	; 0x03
    523c:	bc 01       	movw	r22, r24
    523e:	cd 01       	movw	r24, r26
    5240:	0f 90       	pop	r0
    5242:	0f 90       	pop	r0
    5244:	df 91       	pop	r29
    5246:	cf 91       	pop	r28
    5248:	08 95       	ret

0000524a <_ZN10helicopter5model11SystemModel8TimeoutsEl>:
			void Timeouts(long val) { timeouts = val; }
    524a:	cf 93       	push	r28
    524c:	df 93       	push	r29
    524e:	00 d0       	rcall	.+0      	; 0x5250 <_ZN10helicopter5model11SystemModel8TimeoutsEl+0x6>
    5250:	00 d0       	rcall	.+0      	; 0x5252 <_ZN10helicopter5model11SystemModel8TimeoutsEl+0x8>
    5252:	cd b7       	in	r28, 0x3d	; 61
    5254:	de b7       	in	r29, 0x3e	; 62
    5256:	9a 83       	std	Y+2, r25	; 0x02
    5258:	89 83       	std	Y+1, r24	; 0x01
    525a:	4b 83       	std	Y+3, r20	; 0x03
    525c:	5c 83       	std	Y+4, r21	; 0x04
    525e:	6d 83       	std	Y+5, r22	; 0x05
    5260:	7e 83       	std	Y+6, r23	; 0x06
    5262:	89 81       	ldd	r24, Y+1	; 0x01
    5264:	9a 81       	ldd	r25, Y+2	; 0x02
    5266:	9c 01       	movw	r18, r24
    5268:	2c 54       	subi	r18, 0x4C	; 76
    526a:	3f 4f       	sbci	r19, 0xFF	; 255
    526c:	8b 81       	ldd	r24, Y+3	; 0x03
    526e:	9c 81       	ldd	r25, Y+4	; 0x04
    5270:	ad 81       	ldd	r26, Y+5	; 0x05
    5272:	be 81       	ldd	r27, Y+6	; 0x06
    5274:	f9 01       	movw	r30, r18
    5276:	80 83       	st	Z, r24
    5278:	91 83       	std	Z+1, r25	; 0x01
    527a:	a2 83       	std	Z+2, r26	; 0x02
    527c:	b3 83       	std	Z+3, r27	; 0x03
    527e:	26 96       	adiw	r28, 0x06	; 6
    5280:	0f b6       	in	r0, 0x3f	; 63
    5282:	f8 94       	cli
    5284:	de bf       	out	0x3e, r29	; 62
    5286:	0f be       	out	0x3f, r0	; 63
    5288:	cd bf       	out	0x3d, r28	; 61
    528a:	df 91       	pop	r29
    528c:	cf 91       	pop	r28
    528e:	08 95       	ret

00005290 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>:
			
			long UnrecognizedMsgTypes() const {return unrecognizedMsgTypes; }
    5290:	cf 93       	push	r28
    5292:	df 93       	push	r29
    5294:	1f 92       	push	r1
    5296:	1f 92       	push	r1
    5298:	cd b7       	in	r28, 0x3d	; 61
    529a:	de b7       	in	r29, 0x3e	; 62
    529c:	9a 83       	std	Y+2, r25	; 0x02
    529e:	89 83       	std	Y+1, r24	; 0x01
    52a0:	89 81       	ldd	r24, Y+1	; 0x01
    52a2:	9a 81       	ldd	r25, Y+2	; 0x02
    52a4:	88 54       	subi	r24, 0x48	; 72
    52a6:	9f 4f       	sbci	r25, 0xFF	; 255
    52a8:	fc 01       	movw	r30, r24
    52aa:	80 81       	ld	r24, Z
    52ac:	91 81       	ldd	r25, Z+1	; 0x01
    52ae:	a2 81       	ldd	r26, Z+2	; 0x02
    52b0:	b3 81       	ldd	r27, Z+3	; 0x03
    52b2:	bc 01       	movw	r22, r24
    52b4:	cd 01       	movw	r24, r26
    52b6:	0f 90       	pop	r0
    52b8:	0f 90       	pop	r0
    52ba:	df 91       	pop	r29
    52bc:	cf 91       	pop	r28
    52be:	08 95       	ret

000052c0 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl>:
			void UnrecognizedMsgTypes(long val) { unrecognizedMsgTypes = val; }
    52c0:	cf 93       	push	r28
    52c2:	df 93       	push	r29
    52c4:	00 d0       	rcall	.+0      	; 0x52c6 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl+0x6>
    52c6:	00 d0       	rcall	.+0      	; 0x52c8 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl+0x8>
    52c8:	cd b7       	in	r28, 0x3d	; 61
    52ca:	de b7       	in	r29, 0x3e	; 62
    52cc:	9a 83       	std	Y+2, r25	; 0x02
    52ce:	89 83       	std	Y+1, r24	; 0x01
    52d0:	4b 83       	std	Y+3, r20	; 0x03
    52d2:	5c 83       	std	Y+4, r21	; 0x04
    52d4:	6d 83       	std	Y+5, r22	; 0x05
    52d6:	7e 83       	std	Y+6, r23	; 0x06
    52d8:	89 81       	ldd	r24, Y+1	; 0x01
    52da:	9a 81       	ldd	r25, Y+2	; 0x02
    52dc:	9c 01       	movw	r18, r24
    52de:	28 54       	subi	r18, 0x48	; 72
    52e0:	3f 4f       	sbci	r19, 0xFF	; 255
    52e2:	8b 81       	ldd	r24, Y+3	; 0x03
    52e4:	9c 81       	ldd	r25, Y+4	; 0x04
    52e6:	ad 81       	ldd	r26, Y+5	; 0x05
    52e8:	be 81       	ldd	r27, Y+6	; 0x06
    52ea:	f9 01       	movw	r30, r18
    52ec:	80 83       	st	Z, r24
    52ee:	91 83       	std	Z+1, r25	; 0x01
    52f0:	a2 83       	std	Z+2, r26	; 0x02
    52f2:	b3 83       	std	Z+3, r27	; 0x03
    52f4:	26 96       	adiw	r28, 0x06	; 6
    52f6:	0f b6       	in	r0, 0x3f	; 63
    52f8:	f8 94       	cli
    52fa:	de bf       	out	0x3e, r29	; 62
    52fc:	0f be       	out	0x3f, r0	; 63
    52fe:	cd bf       	out	0x3d, r28	; 61
    5300:	df 91       	pop	r29
    5302:	cf 91       	pop	r28
    5304:	08 95       	ret

00005306 <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>:
			
			long ChecksumErrors() const {return checksumErrors; }
    5306:	cf 93       	push	r28
    5308:	df 93       	push	r29
    530a:	1f 92       	push	r1
    530c:	1f 92       	push	r1
    530e:	cd b7       	in	r28, 0x3d	; 61
    5310:	de b7       	in	r29, 0x3e	; 62
    5312:	9a 83       	std	Y+2, r25	; 0x02
    5314:	89 83       	std	Y+1, r24	; 0x01
    5316:	89 81       	ldd	r24, Y+1	; 0x01
    5318:	9a 81       	ldd	r25, Y+2	; 0x02
    531a:	84 54       	subi	r24, 0x44	; 68
    531c:	9f 4f       	sbci	r25, 0xFF	; 255
    531e:	fc 01       	movw	r30, r24
    5320:	80 81       	ld	r24, Z
    5322:	91 81       	ldd	r25, Z+1	; 0x01
    5324:	a2 81       	ldd	r26, Z+2	; 0x02
    5326:	b3 81       	ldd	r27, Z+3	; 0x03
    5328:	bc 01       	movw	r22, r24
    532a:	cd 01       	movw	r24, r26
    532c:	0f 90       	pop	r0
    532e:	0f 90       	pop	r0
    5330:	df 91       	pop	r29
    5332:	cf 91       	pop	r28
    5334:	08 95       	ret

00005336 <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl>:
			void ChecksumErrors(long val) { checksumErrors = val; }
    5336:	cf 93       	push	r28
    5338:	df 93       	push	r29
    533a:	00 d0       	rcall	.+0      	; 0x533c <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl+0x6>
    533c:	00 d0       	rcall	.+0      	; 0x533e <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl+0x8>
    533e:	cd b7       	in	r28, 0x3d	; 61
    5340:	de b7       	in	r29, 0x3e	; 62
    5342:	9a 83       	std	Y+2, r25	; 0x02
    5344:	89 83       	std	Y+1, r24	; 0x01
    5346:	4b 83       	std	Y+3, r20	; 0x03
    5348:	5c 83       	std	Y+4, r21	; 0x04
    534a:	6d 83       	std	Y+5, r22	; 0x05
    534c:	7e 83       	std	Y+6, r23	; 0x06
    534e:	89 81       	ldd	r24, Y+1	; 0x01
    5350:	9a 81       	ldd	r25, Y+2	; 0x02
    5352:	9c 01       	movw	r18, r24
    5354:	24 54       	subi	r18, 0x44	; 68
    5356:	3f 4f       	sbci	r19, 0xFF	; 255
    5358:	8b 81       	ldd	r24, Y+3	; 0x03
    535a:	9c 81       	ldd	r25, Y+4	; 0x04
    535c:	ad 81       	ldd	r26, Y+5	; 0x05
    535e:	be 81       	ldd	r27, Y+6	; 0x06
    5360:	f9 01       	movw	r30, r18
    5362:	80 83       	st	Z, r24
    5364:	91 83       	std	Z+1, r25	; 0x01
    5366:	a2 83       	std	Z+2, r26	; 0x02
    5368:	b3 83       	std	Z+3, r27	; 0x03
    536a:	26 96       	adiw	r28, 0x06	; 6
    536c:	0f b6       	in	r0, 0x3f	; 63
    536e:	f8 94       	cli
    5370:	de bf       	out	0x3e, r29	; 62
    5372:	0f be       	out	0x3f, r0	; 63
    5374:	cd bf       	out	0x3d, r28	; 61
    5376:	df 91       	pop	r29
    5378:	cf 91       	pop	r28
    537a:	08 95       	ret

0000537c <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>:
				sizeof(UnrecognizedMsgTypes) + 
				sizeof(ChecksumErrors) + 
				sizeof(NumOfBlownFrames);

			
				SystemTelemetryMessage(): Message(MessageType,MessageSize),
    537c:	cf 93       	push	r28
    537e:	df 93       	push	r29
    5380:	1f 92       	push	r1
    5382:	1f 92       	push	r1
    5384:	cd b7       	in	r28, 0x3d	; 61
    5386:	de b7       	in	r29, 0x3e	; 62
    5388:	9a 83       	std	Y+2, r25	; 0x02
    538a:	89 83       	std	Y+1, r24	; 0x01
										
														
					Timeouts(0),
					UnrecognizedMsgTypes(0),
					ChecksumErrors(0),
					NumOfBlownFrames(0)
    538c:	89 81       	ldd	r24, Y+1	; 0x01
    538e:	9a 81       	ldd	r25, Y+2	; 0x02
    5390:	45 ee       	ldi	r20, 0xE5	; 229
    5392:	50 e0       	ldi	r21, 0x00	; 0
    5394:	62 e0       	ldi	r22, 0x02	; 2
    5396:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <_ZN10helicopter8messages7MessageC1Ehi>
    539a:	89 81       	ldd	r24, Y+1	; 0x01
    539c:	9a 81       	ldd	r25, Y+2	; 0x02
    539e:	2e e3       	ldi	r18, 0x3E	; 62
    53a0:	32 e0       	ldi	r19, 0x02	; 2
    53a2:	fc 01       	movw	r30, r24
    53a4:	31 83       	std	Z+1, r19	; 0x01
    53a6:	20 83       	st	Z, r18
    53a8:	89 81       	ldd	r24, Y+1	; 0x01
    53aa:	9a 81       	ldd	r25, Y+2	; 0x02
    53ac:	fc 01       	movw	r30, r24
    53ae:	15 82       	std	Z+5, r1	; 0x05
    53b0:	16 82       	std	Z+6, r1	; 0x06
    53b2:	17 82       	std	Z+7, r1	; 0x07
    53b4:	10 86       	std	Z+8, r1	; 0x08
    53b6:	89 81       	ldd	r24, Y+1	; 0x01
    53b8:	9a 81       	ldd	r25, Y+2	; 0x02
    53ba:	fc 01       	movw	r30, r24
    53bc:	11 86       	std	Z+9, r1	; 0x09
    53be:	12 86       	std	Z+10, r1	; 0x0a
    53c0:	13 86       	std	Z+11, r1	; 0x0b
    53c2:	14 86       	std	Z+12, r1	; 0x0c
    53c4:	89 81       	ldd	r24, Y+1	; 0x01
    53c6:	9a 81       	ldd	r25, Y+2	; 0x02
    53c8:	fc 01       	movw	r30, r24
    53ca:	15 86       	std	Z+13, r1	; 0x0d
    53cc:	16 86       	std	Z+14, r1	; 0x0e
    53ce:	17 86       	std	Z+15, r1	; 0x0f
    53d0:	10 8a       	std	Z+16, r1	; 0x10
    53d2:	89 81       	ldd	r24, Y+1	; 0x01
    53d4:	9a 81       	ldd	r25, Y+2	; 0x02
    53d6:	fc 01       	movw	r30, r24
    53d8:	11 8a       	std	Z+17, r1	; 0x11
    53da:	12 8a       	std	Z+18, r1	; 0x12
    53dc:	13 8a       	std	Z+19, r1	; 0x13
    53de:	14 8a       	std	Z+20, r1	; 0x14
    53e0:	89 81       	ldd	r24, Y+1	; 0x01
    53e2:	9a 81       	ldd	r25, Y+2	; 0x02
    53e4:	fc 01       	movw	r30, r24
    53e6:	15 8a       	std	Z+21, r1	; 0x15
    53e8:	16 8a       	std	Z+22, r1	; 0x16
    53ea:	17 8a       	std	Z+23, r1	; 0x17
    53ec:	10 8e       	std	Z+24, r1	; 0x18
    53ee:	89 81       	ldd	r24, Y+1	; 0x01
    53f0:	9a 81       	ldd	r25, Y+2	; 0x02
    53f2:	fc 01       	movw	r30, r24
    53f4:	11 8e       	std	Z+25, r1	; 0x19
    53f6:	12 8e       	std	Z+26, r1	; 0x1a
    53f8:	13 8e       	std	Z+27, r1	; 0x1b
    53fa:	14 8e       	std	Z+28, r1	; 0x1c
    53fc:	89 81       	ldd	r24, Y+1	; 0x01
    53fe:	9a 81       	ldd	r25, Y+2	; 0x02
    5400:	fc 01       	movw	r30, r24
    5402:	15 8e       	std	Z+29, r1	; 0x1d
    5404:	16 8e       	std	Z+30, r1	; 0x1e
    5406:	17 8e       	std	Z+31, r1	; 0x1f
    5408:	10 a2       	std	Z+32, r1	; 0x20
    540a:	89 81       	ldd	r24, Y+1	; 0x01
    540c:	9a 81       	ldd	r25, Y+2	; 0x02
    540e:	fc 01       	movw	r30, r24
    5410:	11 a2       	std	Z+33, r1	; 0x21
    5412:	12 a2       	std	Z+34, r1	; 0x22
    5414:	13 a2       	std	Z+35, r1	; 0x23
    5416:	14 a2       	std	Z+36, r1	; 0x24
    5418:	89 81       	ldd	r24, Y+1	; 0x01
    541a:	9a 81       	ldd	r25, Y+2	; 0x02
    541c:	fc 01       	movw	r30, r24
    541e:	15 a2       	std	Z+37, r1	; 0x25
    5420:	16 a2       	std	Z+38, r1	; 0x26
    5422:	17 a2       	std	Z+39, r1	; 0x27
    5424:	10 a6       	std	Z+40, r1	; 0x28
    5426:	89 81       	ldd	r24, Y+1	; 0x01
    5428:	9a 81       	ldd	r25, Y+2	; 0x02
    542a:	fc 01       	movw	r30, r24
    542c:	11 a6       	std	Z+41, r1	; 0x29
    542e:	12 a6       	std	Z+42, r1	; 0x2a
    5430:	13 a6       	std	Z+43, r1	; 0x2b
    5432:	14 a6       	std	Z+44, r1	; 0x2c
    5434:	89 81       	ldd	r24, Y+1	; 0x01
    5436:	9a 81       	ldd	r25, Y+2	; 0x02
    5438:	fc 01       	movw	r30, r24
    543a:	15 a6       	std	Z+45, r1	; 0x2d
    543c:	16 a6       	std	Z+46, r1	; 0x2e
    543e:	17 a6       	std	Z+47, r1	; 0x2f
    5440:	10 aa       	std	Z+48, r1	; 0x30
    5442:	89 81       	ldd	r24, Y+1	; 0x01
    5444:	9a 81       	ldd	r25, Y+2	; 0x02
    5446:	fc 01       	movw	r30, r24
    5448:	11 aa       	std	Z+49, r1	; 0x31
    544a:	12 aa       	std	Z+50, r1	; 0x32
    544c:	13 aa       	std	Z+51, r1	; 0x33
    544e:	14 aa       	std	Z+52, r1	; 0x34
    5450:	89 81       	ldd	r24, Y+1	; 0x01
    5452:	9a 81       	ldd	r25, Y+2	; 0x02
    5454:	fc 01       	movw	r30, r24
    5456:	15 aa       	std	Z+53, r1	; 0x35
    5458:	16 aa       	std	Z+54, r1	; 0x36
    545a:	17 aa       	std	Z+55, r1	; 0x37
    545c:	10 ae       	std	Z+56, r1	; 0x38
    545e:	89 81       	ldd	r24, Y+1	; 0x01
    5460:	9a 81       	ldd	r25, Y+2	; 0x02
    5462:	fc 01       	movw	r30, r24
    5464:	11 ae       	std	Z+57, r1	; 0x39
    5466:	12 ae       	std	Z+58, r1	; 0x3a
    5468:	13 ae       	std	Z+59, r1	; 0x3b
    546a:	14 ae       	std	Z+60, r1	; 0x3c
    546c:	89 81       	ldd	r24, Y+1	; 0x01
    546e:	9a 81       	ldd	r25, Y+2	; 0x02
    5470:	cd 96       	adiw	r24, 0x3d	; 61
    5472:	fc 01       	movw	r30, r24
    5474:	10 82       	st	Z, r1
    5476:	11 82       	std	Z+1, r1	; 0x01
    5478:	12 82       	std	Z+2, r1	; 0x02
    547a:	13 82       	std	Z+3, r1	; 0x03
    547c:	89 81       	ldd	r24, Y+1	; 0x01
    547e:	9a 81       	ldd	r25, Y+2	; 0x02
    5480:	8f 5b       	subi	r24, 0xBF	; 191
    5482:	9f 4f       	sbci	r25, 0xFF	; 255
    5484:	fc 01       	movw	r30, r24
    5486:	10 82       	st	Z, r1
    5488:	11 82       	std	Z+1, r1	; 0x01
    548a:	12 82       	std	Z+2, r1	; 0x02
    548c:	13 82       	std	Z+3, r1	; 0x03
    548e:	89 81       	ldd	r24, Y+1	; 0x01
    5490:	9a 81       	ldd	r25, Y+2	; 0x02
    5492:	8b 5b       	subi	r24, 0xBB	; 187
    5494:	9f 4f       	sbci	r25, 0xFF	; 255
    5496:	fc 01       	movw	r30, r24
    5498:	10 82       	st	Z, r1
    549a:	11 82       	std	Z+1, r1	; 0x01
    549c:	12 82       	std	Z+2, r1	; 0x02
    549e:	13 82       	std	Z+3, r1	; 0x03
    54a0:	89 81       	ldd	r24, Y+1	; 0x01
    54a2:	9a 81       	ldd	r25, Y+2	; 0x02
    54a4:	87 5b       	subi	r24, 0xB7	; 183
    54a6:	9f 4f       	sbci	r25, 0xFF	; 255
    54a8:	fc 01       	movw	r30, r24
    54aa:	10 82       	st	Z, r1
    54ac:	11 82       	std	Z+1, r1	; 0x01
    54ae:	12 82       	std	Z+2, r1	; 0x02
    54b0:	13 82       	std	Z+3, r1	; 0x03
    54b2:	89 81       	ldd	r24, Y+1	; 0x01
    54b4:	9a 81       	ldd	r25, Y+2	; 0x02
    54b6:	83 5b       	subi	r24, 0xB3	; 179
    54b8:	9f 4f       	sbci	r25, 0xFF	; 255
    54ba:	fc 01       	movw	r30, r24
    54bc:	10 82       	st	Z, r1
    54be:	11 82       	std	Z+1, r1	; 0x01
    54c0:	12 82       	std	Z+2, r1	; 0x02
    54c2:	13 82       	std	Z+3, r1	; 0x03
    54c4:	89 81       	ldd	r24, Y+1	; 0x01
    54c6:	9a 81       	ldd	r25, Y+2	; 0x02
    54c8:	8f 5a       	subi	r24, 0xAF	; 175
    54ca:	9f 4f       	sbci	r25, 0xFF	; 255
    54cc:	fc 01       	movw	r30, r24
    54ce:	10 82       	st	Z, r1
    54d0:	11 82       	std	Z+1, r1	; 0x01
    54d2:	12 82       	std	Z+2, r1	; 0x02
    54d4:	13 82       	std	Z+3, r1	; 0x03
    54d6:	89 81       	ldd	r24, Y+1	; 0x01
    54d8:	9a 81       	ldd	r25, Y+2	; 0x02
    54da:	8b 5a       	subi	r24, 0xAB	; 171
    54dc:	9f 4f       	sbci	r25, 0xFF	; 255
    54de:	fc 01       	movw	r30, r24
    54e0:	10 82       	st	Z, r1
    54e2:	11 82       	std	Z+1, r1	; 0x01
    54e4:	12 82       	std	Z+2, r1	; 0x02
    54e6:	13 82       	std	Z+3, r1	; 0x03
    54e8:	89 81       	ldd	r24, Y+1	; 0x01
    54ea:	9a 81       	ldd	r25, Y+2	; 0x02
    54ec:	87 5a       	subi	r24, 0xA7	; 167
    54ee:	9f 4f       	sbci	r25, 0xFF	; 255
    54f0:	fc 01       	movw	r30, r24
    54f2:	10 82       	st	Z, r1
    54f4:	11 82       	std	Z+1, r1	; 0x01
    54f6:	12 82       	std	Z+2, r1	; 0x02
    54f8:	13 82       	std	Z+3, r1	; 0x03
    54fa:	89 81       	ldd	r24, Y+1	; 0x01
    54fc:	9a 81       	ldd	r25, Y+2	; 0x02
    54fe:	83 5a       	subi	r24, 0xA3	; 163
    5500:	9f 4f       	sbci	r25, 0xFF	; 255
    5502:	fc 01       	movw	r30, r24
    5504:	10 82       	st	Z, r1
    5506:	11 82       	std	Z+1, r1	; 0x01
    5508:	12 82       	std	Z+2, r1	; 0x02
    550a:	13 82       	std	Z+3, r1	; 0x03
    550c:	89 81       	ldd	r24, Y+1	; 0x01
    550e:	9a 81       	ldd	r25, Y+2	; 0x02
    5510:	8f 59       	subi	r24, 0x9F	; 159
    5512:	9f 4f       	sbci	r25, 0xFF	; 255
    5514:	fc 01       	movw	r30, r24
    5516:	10 82       	st	Z, r1
    5518:	11 82       	std	Z+1, r1	; 0x01
    551a:	12 82       	std	Z+2, r1	; 0x02
    551c:	13 82       	std	Z+3, r1	; 0x03
    551e:	89 81       	ldd	r24, Y+1	; 0x01
    5520:	9a 81       	ldd	r25, Y+2	; 0x02
    5522:	8b 59       	subi	r24, 0x9B	; 155
    5524:	9f 4f       	sbci	r25, 0xFF	; 255
    5526:	fc 01       	movw	r30, r24
    5528:	10 82       	st	Z, r1
    552a:	11 82       	std	Z+1, r1	; 0x01
    552c:	12 82       	std	Z+2, r1	; 0x02
    552e:	13 82       	std	Z+3, r1	; 0x03
    5530:	89 81       	ldd	r24, Y+1	; 0x01
    5532:	9a 81       	ldd	r25, Y+2	; 0x02
    5534:	87 59       	subi	r24, 0x97	; 151
    5536:	9f 4f       	sbci	r25, 0xFF	; 255
    5538:	fc 01       	movw	r30, r24
    553a:	10 82       	st	Z, r1
    553c:	11 82       	std	Z+1, r1	; 0x01
    553e:	12 82       	std	Z+2, r1	; 0x02
    5540:	13 82       	std	Z+3, r1	; 0x03
    5542:	89 81       	ldd	r24, Y+1	; 0x01
    5544:	9a 81       	ldd	r25, Y+2	; 0x02
    5546:	83 59       	subi	r24, 0x93	; 147
    5548:	9f 4f       	sbci	r25, 0xFF	; 255
    554a:	fc 01       	movw	r30, r24
    554c:	10 82       	st	Z, r1
    554e:	11 82       	std	Z+1, r1	; 0x01
    5550:	12 82       	std	Z+2, r1	; 0x02
    5552:	13 82       	std	Z+3, r1	; 0x03
    5554:	89 81       	ldd	r24, Y+1	; 0x01
    5556:	9a 81       	ldd	r25, Y+2	; 0x02
    5558:	8f 58       	subi	r24, 0x8F	; 143
    555a:	9f 4f       	sbci	r25, 0xFF	; 255
    555c:	fc 01       	movw	r30, r24
    555e:	10 82       	st	Z, r1
    5560:	11 82       	std	Z+1, r1	; 0x01
    5562:	12 82       	std	Z+2, r1	; 0x02
    5564:	13 82       	std	Z+3, r1	; 0x03
    5566:	89 81       	ldd	r24, Y+1	; 0x01
    5568:	9a 81       	ldd	r25, Y+2	; 0x02
    556a:	8b 58       	subi	r24, 0x8B	; 139
    556c:	9f 4f       	sbci	r25, 0xFF	; 255
    556e:	fc 01       	movw	r30, r24
    5570:	10 82       	st	Z, r1
    5572:	11 82       	std	Z+1, r1	; 0x01
    5574:	12 82       	std	Z+2, r1	; 0x02
    5576:	13 82       	std	Z+3, r1	; 0x03
    5578:	89 81       	ldd	r24, Y+1	; 0x01
    557a:	9a 81       	ldd	r25, Y+2	; 0x02
    557c:	87 58       	subi	r24, 0x87	; 135
    557e:	9f 4f       	sbci	r25, 0xFF	; 255
    5580:	fc 01       	movw	r30, r24
    5582:	10 82       	st	Z, r1
    5584:	11 82       	std	Z+1, r1	; 0x01
    5586:	12 82       	std	Z+2, r1	; 0x02
    5588:	13 82       	std	Z+3, r1	; 0x03
    558a:	89 81       	ldd	r24, Y+1	; 0x01
    558c:	9a 81       	ldd	r25, Y+2	; 0x02
    558e:	83 58       	subi	r24, 0x83	; 131
    5590:	9f 4f       	sbci	r25, 0xFF	; 255
    5592:	fc 01       	movw	r30, r24
    5594:	10 82       	st	Z, r1
    5596:	11 82       	std	Z+1, r1	; 0x01
    5598:	12 82       	std	Z+2, r1	; 0x02
    559a:	13 82       	std	Z+3, r1	; 0x03
    559c:	89 81       	ldd	r24, Y+1	; 0x01
    559e:	9a 81       	ldd	r25, Y+2	; 0x02
    55a0:	8f 57       	subi	r24, 0x7F	; 127
    55a2:	9f 4f       	sbci	r25, 0xFF	; 255
    55a4:	fc 01       	movw	r30, r24
    55a6:	10 82       	st	Z, r1
    55a8:	11 82       	std	Z+1, r1	; 0x01
    55aa:	12 82       	std	Z+2, r1	; 0x02
    55ac:	13 82       	std	Z+3, r1	; 0x03
    55ae:	89 81       	ldd	r24, Y+1	; 0x01
    55b0:	9a 81       	ldd	r25, Y+2	; 0x02
    55b2:	8b 57       	subi	r24, 0x7B	; 123
    55b4:	9f 4f       	sbci	r25, 0xFF	; 255
    55b6:	fc 01       	movw	r30, r24
    55b8:	10 82       	st	Z, r1
    55ba:	11 82       	std	Z+1, r1	; 0x01
    55bc:	12 82       	std	Z+2, r1	; 0x02
    55be:	13 82       	std	Z+3, r1	; 0x03
    55c0:	89 81       	ldd	r24, Y+1	; 0x01
    55c2:	9a 81       	ldd	r25, Y+2	; 0x02
    55c4:	87 57       	subi	r24, 0x77	; 119
    55c6:	9f 4f       	sbci	r25, 0xFF	; 255
    55c8:	fc 01       	movw	r30, r24
    55ca:	10 82       	st	Z, r1
    55cc:	11 82       	std	Z+1, r1	; 0x01
    55ce:	12 82       	std	Z+2, r1	; 0x02
    55d0:	13 82       	std	Z+3, r1	; 0x03
    55d2:	89 81       	ldd	r24, Y+1	; 0x01
    55d4:	9a 81       	ldd	r25, Y+2	; 0x02
    55d6:	83 57       	subi	r24, 0x73	; 115
    55d8:	9f 4f       	sbci	r25, 0xFF	; 255
    55da:	fc 01       	movw	r30, r24
    55dc:	10 82       	st	Z, r1
    55de:	11 82       	std	Z+1, r1	; 0x01
    55e0:	12 82       	std	Z+2, r1	; 0x02
    55e2:	13 82       	std	Z+3, r1	; 0x03
    55e4:	89 81       	ldd	r24, Y+1	; 0x01
    55e6:	9a 81       	ldd	r25, Y+2	; 0x02
    55e8:	8f 56       	subi	r24, 0x6F	; 111
    55ea:	9f 4f       	sbci	r25, 0xFF	; 255
    55ec:	fc 01       	movw	r30, r24
    55ee:	10 82       	st	Z, r1
    55f0:	11 82       	std	Z+1, r1	; 0x01
    55f2:	12 82       	std	Z+2, r1	; 0x02
    55f4:	13 82       	std	Z+3, r1	; 0x03
    55f6:	89 81       	ldd	r24, Y+1	; 0x01
    55f8:	9a 81       	ldd	r25, Y+2	; 0x02
    55fa:	8b 56       	subi	r24, 0x6B	; 107
    55fc:	9f 4f       	sbci	r25, 0xFF	; 255
    55fe:	fc 01       	movw	r30, r24
    5600:	10 82       	st	Z, r1
    5602:	11 82       	std	Z+1, r1	; 0x01
    5604:	12 82       	std	Z+2, r1	; 0x02
    5606:	13 82       	std	Z+3, r1	; 0x03
    5608:	89 81       	ldd	r24, Y+1	; 0x01
    560a:	9a 81       	ldd	r25, Y+2	; 0x02
    560c:	87 56       	subi	r24, 0x67	; 103
    560e:	9f 4f       	sbci	r25, 0xFF	; 255
    5610:	fc 01       	movw	r30, r24
    5612:	10 82       	st	Z, r1
    5614:	11 82       	std	Z+1, r1	; 0x01
    5616:	12 82       	std	Z+2, r1	; 0x02
    5618:	13 82       	std	Z+3, r1	; 0x03
    561a:	89 81       	ldd	r24, Y+1	; 0x01
    561c:	9a 81       	ldd	r25, Y+2	; 0x02
    561e:	83 56       	subi	r24, 0x63	; 99
    5620:	9f 4f       	sbci	r25, 0xFF	; 255
    5622:	fc 01       	movw	r30, r24
    5624:	10 82       	st	Z, r1
    5626:	11 82       	std	Z+1, r1	; 0x01
    5628:	12 82       	std	Z+2, r1	; 0x02
    562a:	13 82       	std	Z+3, r1	; 0x03
    562c:	89 81       	ldd	r24, Y+1	; 0x01
    562e:	9a 81       	ldd	r25, Y+2	; 0x02
    5630:	8f 55       	subi	r24, 0x5F	; 95
    5632:	9f 4f       	sbci	r25, 0xFF	; 255
    5634:	fc 01       	movw	r30, r24
    5636:	10 82       	st	Z, r1
    5638:	11 82       	std	Z+1, r1	; 0x01
    563a:	12 82       	std	Z+2, r1	; 0x02
    563c:	13 82       	std	Z+3, r1	; 0x03
    563e:	89 81       	ldd	r24, Y+1	; 0x01
    5640:	9a 81       	ldd	r25, Y+2	; 0x02
    5642:	8b 55       	subi	r24, 0x5B	; 91
    5644:	9f 4f       	sbci	r25, 0xFF	; 255
    5646:	fc 01       	movw	r30, r24
    5648:	10 82       	st	Z, r1
    564a:	11 82       	std	Z+1, r1	; 0x01
    564c:	12 82       	std	Z+2, r1	; 0x02
    564e:	13 82       	std	Z+3, r1	; 0x03
    5650:	89 81       	ldd	r24, Y+1	; 0x01
    5652:	9a 81       	ldd	r25, Y+2	; 0x02
    5654:	87 55       	subi	r24, 0x57	; 87
    5656:	9f 4f       	sbci	r25, 0xFF	; 255
    5658:	fc 01       	movw	r30, r24
    565a:	10 82       	st	Z, r1
    565c:	11 82       	std	Z+1, r1	; 0x01
    565e:	12 82       	std	Z+2, r1	; 0x02
    5660:	13 82       	std	Z+3, r1	; 0x03
    5662:	89 81       	ldd	r24, Y+1	; 0x01
    5664:	9a 81       	ldd	r25, Y+2	; 0x02
    5666:	83 55       	subi	r24, 0x53	; 83
    5668:	9f 4f       	sbci	r25, 0xFF	; 255
    566a:	fc 01       	movw	r30, r24
    566c:	10 82       	st	Z, r1
    566e:	11 82       	std	Z+1, r1	; 0x01
    5670:	12 82       	std	Z+2, r1	; 0x02
    5672:	13 82       	std	Z+3, r1	; 0x03
    5674:	89 81       	ldd	r24, Y+1	; 0x01
    5676:	9a 81       	ldd	r25, Y+2	; 0x02
    5678:	8f 54       	subi	r24, 0x4F	; 79
    567a:	9f 4f       	sbci	r25, 0xFF	; 255
    567c:	fc 01       	movw	r30, r24
    567e:	10 82       	st	Z, r1
    5680:	11 82       	std	Z+1, r1	; 0x01
    5682:	12 82       	std	Z+2, r1	; 0x02
    5684:	13 82       	std	Z+3, r1	; 0x03
    5686:	89 81       	ldd	r24, Y+1	; 0x01
    5688:	9a 81       	ldd	r25, Y+2	; 0x02
    568a:	8b 54       	subi	r24, 0x4B	; 75
    568c:	9f 4f       	sbci	r25, 0xFF	; 255
    568e:	fc 01       	movw	r30, r24
    5690:	10 82       	st	Z, r1
    5692:	11 82       	std	Z+1, r1	; 0x01
    5694:	12 82       	std	Z+2, r1	; 0x02
    5696:	13 82       	std	Z+3, r1	; 0x03
    5698:	89 81       	ldd	r24, Y+1	; 0x01
    569a:	9a 81       	ldd	r25, Y+2	; 0x02
    569c:	87 54       	subi	r24, 0x47	; 71
    569e:	9f 4f       	sbci	r25, 0xFF	; 255
    56a0:	fc 01       	movw	r30, r24
    56a2:	10 82       	st	Z, r1
    56a4:	11 82       	std	Z+1, r1	; 0x01
    56a6:	12 82       	std	Z+2, r1	; 0x02
    56a8:	13 82       	std	Z+3, r1	; 0x03
    56aa:	89 81       	ldd	r24, Y+1	; 0x01
    56ac:	9a 81       	ldd	r25, Y+2	; 0x02
    56ae:	83 54       	subi	r24, 0x43	; 67
    56b0:	9f 4f       	sbci	r25, 0xFF	; 255
    56b2:	fc 01       	movw	r30, r24
    56b4:	10 82       	st	Z, r1
    56b6:	11 82       	std	Z+1, r1	; 0x01
    56b8:	12 82       	std	Z+2, r1	; 0x02
    56ba:	13 82       	std	Z+3, r1	; 0x03
    56bc:	89 81       	ldd	r24, Y+1	; 0x01
    56be:	9a 81       	ldd	r25, Y+2	; 0x02
    56c0:	8f 53       	subi	r24, 0x3F	; 63
    56c2:	9f 4f       	sbci	r25, 0xFF	; 255
    56c4:	fc 01       	movw	r30, r24
    56c6:	10 82       	st	Z, r1
    56c8:	11 82       	std	Z+1, r1	; 0x01
    56ca:	12 82       	std	Z+2, r1	; 0x02
    56cc:	13 82       	std	Z+3, r1	; 0x03
    56ce:	89 81       	ldd	r24, Y+1	; 0x01
    56d0:	9a 81       	ldd	r25, Y+2	; 0x02
    56d2:	8b 53       	subi	r24, 0x3B	; 59
    56d4:	9f 4f       	sbci	r25, 0xFF	; 255
    56d6:	fc 01       	movw	r30, r24
    56d8:	10 82       	st	Z, r1
    56da:	11 82       	std	Z+1, r1	; 0x01
    56dc:	12 82       	std	Z+2, r1	; 0x02
    56de:	13 82       	std	Z+3, r1	; 0x03
    56e0:	89 81       	ldd	r24, Y+1	; 0x01
    56e2:	9a 81       	ldd	r25, Y+2	; 0x02
    56e4:	87 53       	subi	r24, 0x37	; 55
    56e6:	9f 4f       	sbci	r25, 0xFF	; 255
    56e8:	fc 01       	movw	r30, r24
    56ea:	10 82       	st	Z, r1
    56ec:	11 82       	std	Z+1, r1	; 0x01
    56ee:	12 82       	std	Z+2, r1	; 0x02
    56f0:	13 82       	std	Z+3, r1	; 0x03
    56f2:	89 81       	ldd	r24, Y+1	; 0x01
    56f4:	9a 81       	ldd	r25, Y+2	; 0x02
    56f6:	83 53       	subi	r24, 0x33	; 51
    56f8:	9f 4f       	sbci	r25, 0xFF	; 255
    56fa:	fc 01       	movw	r30, r24
    56fc:	10 82       	st	Z, r1
    56fe:	11 82       	std	Z+1, r1	; 0x01
    5700:	12 82       	std	Z+2, r1	; 0x02
    5702:	13 82       	std	Z+3, r1	; 0x03
    5704:	89 81       	ldd	r24, Y+1	; 0x01
    5706:	9a 81       	ldd	r25, Y+2	; 0x02
    5708:	8f 52       	subi	r24, 0x2F	; 47
    570a:	9f 4f       	sbci	r25, 0xFF	; 255
    570c:	fc 01       	movw	r30, r24
    570e:	10 82       	st	Z, r1
    5710:	11 82       	std	Z+1, r1	; 0x01
    5712:	12 82       	std	Z+2, r1	; 0x02
    5714:	13 82       	std	Z+3, r1	; 0x03
    5716:	89 81       	ldd	r24, Y+1	; 0x01
    5718:	9a 81       	ldd	r25, Y+2	; 0x02
    571a:	8b 52       	subi	r24, 0x2B	; 43
    571c:	9f 4f       	sbci	r25, 0xFF	; 255
    571e:	fc 01       	movw	r30, r24
    5720:	10 82       	st	Z, r1
    5722:	11 82       	std	Z+1, r1	; 0x01
    5724:	12 82       	std	Z+2, r1	; 0x02
    5726:	13 82       	std	Z+3, r1	; 0x03
    5728:	89 81       	ldd	r24, Y+1	; 0x01
    572a:	9a 81       	ldd	r25, Y+2	; 0x02
    572c:	87 52       	subi	r24, 0x27	; 39
    572e:	9f 4f       	sbci	r25, 0xFF	; 255
    5730:	fc 01       	movw	r30, r24
    5732:	10 82       	st	Z, r1
    5734:	11 82       	std	Z+1, r1	; 0x01
    5736:	12 82       	std	Z+2, r1	; 0x02
    5738:	13 82       	std	Z+3, r1	; 0x03
    573a:	89 81       	ldd	r24, Y+1	; 0x01
    573c:	9a 81       	ldd	r25, Y+2	; 0x02
    573e:	83 52       	subi	r24, 0x23	; 35
    5740:	9f 4f       	sbci	r25, 0xFF	; 255
    5742:	fc 01       	movw	r30, r24
    5744:	10 82       	st	Z, r1
    5746:	11 82       	std	Z+1, r1	; 0x01
    5748:	12 82       	std	Z+2, r1	; 0x02
    574a:	13 82       	std	Z+3, r1	; 0x03
    574c:	89 81       	ldd	r24, Y+1	; 0x01
    574e:	9a 81       	ldd	r25, Y+2	; 0x02
    5750:	8f 51       	subi	r24, 0x1F	; 31
    5752:	9f 4f       	sbci	r25, 0xFF	; 255
    5754:	fc 01       	movw	r30, r24
    5756:	10 82       	st	Z, r1
    5758:	11 82       	std	Z+1, r1	; 0x01
    575a:	12 82       	std	Z+2, r1	; 0x02
    575c:	13 82       	std	Z+3, r1	; 0x03
    575e:	89 81       	ldd	r24, Y+1	; 0x01
    5760:	9a 81       	ldd	r25, Y+2	; 0x02
    5762:	8b 51       	subi	r24, 0x1B	; 27
    5764:	9f 4f       	sbci	r25, 0xFF	; 255
    5766:	fc 01       	movw	r30, r24
    5768:	10 82       	st	Z, r1
    576a:	11 82       	std	Z+1, r1	; 0x01
    576c:	12 82       	std	Z+2, r1	; 0x02
    576e:	13 82       	std	Z+3, r1	; 0x03
				{
				
				}
    5770:	0f 90       	pop	r0
    5772:	0f 90       	pop	r0
    5774:	df 91       	pop	r29
    5776:	cf 91       	pop	r28
    5778:	08 95       	ret

0000577a <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>:
			
				~SystemTelemetryMessage() {}
    577a:	cf 93       	push	r28
    577c:	df 93       	push	r29
    577e:	1f 92       	push	r1
    5780:	1f 92       	push	r1
    5782:	cd b7       	in	r28, 0x3d	; 61
    5784:	de b7       	in	r29, 0x3e	; 62
    5786:	9a 83       	std	Y+2, r25	; 0x02
    5788:	89 83       	std	Y+1, r24	; 0x01
    578a:	89 81       	ldd	r24, Y+1	; 0x01
    578c:	9a 81       	ldd	r25, Y+2	; 0x02
    578e:	2e e3       	ldi	r18, 0x3E	; 62
    5790:	32 e0       	ldi	r19, 0x02	; 2
    5792:	fc 01       	movw	r30, r24
    5794:	31 83       	std	Z+1, r19	; 0x01
    5796:	20 83       	st	Z, r18
    5798:	89 81       	ldd	r24, Y+1	; 0x01
    579a:	9a 81       	ldd	r25, Y+2	; 0x02
    579c:	0e 94 84 24 	call	0x4908	; 0x4908 <_ZN10helicopter8messages7MessageD1Ev>
    57a0:	80 e0       	ldi	r24, 0x00	; 0
    57a2:	90 e0       	ldi	r25, 0x00	; 0
    57a4:	81 70       	andi	r24, 0x01	; 1
    57a6:	99 27       	eor	r25, r25
    57a8:	00 97       	sbiw	r24, 0x00	; 0
    57aa:	21 f0       	breq	.+8      	; 0x57b4 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev+0x3a>
    57ac:	89 81       	ldd	r24, Y+1	; 0x01
    57ae:	9a 81       	ldd	r25, Y+2	; 0x02
    57b0:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    57b4:	0f 90       	pop	r0
    57b6:	0f 90       	pop	r0
    57b8:	df 91       	pop	r29
    57ba:	cf 91       	pop	r28
    57bc:	08 95       	ret

000057be <_ZN10helicopter8messages22SystemTelemetryMessageD0Ev>:
    57be:	cf 93       	push	r28
    57c0:	df 93       	push	r29
    57c2:	1f 92       	push	r1
    57c4:	1f 92       	push	r1
    57c6:	cd b7       	in	r28, 0x3d	; 61
    57c8:	de b7       	in	r29, 0x3e	; 62
    57ca:	9a 83       	std	Y+2, r25	; 0x02
    57cc:	89 83       	std	Y+1, r24	; 0x01
    57ce:	89 81       	ldd	r24, Y+1	; 0x01
    57d0:	9a 81       	ldd	r25, Y+2	; 0x02
    57d2:	0e 94 bd 2b 	call	0x577a	; 0x577a <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>
    57d6:	89 81       	ldd	r24, Y+1	; 0x01
    57d8:	9a 81       	ldd	r25, Y+2	; 0x02
    57da:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    57de:	0f 90       	pop	r0
    57e0:	0f 90       	pop	r0
    57e2:	df 91       	pop	r29
    57e4:	cf 91       	pop	r28
    57e6:	08 95       	ret

000057e8 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv>:

using namespace helicopter::messages;


byte *SystemTelemetryMessage::getBytes()
{
    57e8:	cf 93       	push	r28
    57ea:	df 93       	push	r29
    57ec:	00 d0       	rcall	.+0      	; 0x57ee <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv+0x6>
    57ee:	00 d0       	rcall	.+0      	; 0x57f0 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv+0x8>
    57f0:	cd b7       	in	r28, 0x3d	; 61
    57f2:	de b7       	in	r29, 0x3e	; 62
    57f4:	9e 83       	std	Y+6, r25	; 0x06
    57f6:	8d 83       	std	Y+5, r24	; 0x05
	byte *msg = new byte[MessageSize];
    57f8:	85 ee       	ldi	r24, 0xE5	; 229
    57fa:	90 e0       	ldi	r25, 0x00	; 0
    57fc:	0e 94 38 40 	call	0x8070	; 0x8070 <_Znaj>
    5800:	9a 83       	std	Y+2, r25	; 0x02
    5802:	89 83       	std	Y+1, r24	; 0x01
	byte *msgPtr = msg;
    5804:	89 81       	ldd	r24, Y+1	; 0x01
    5806:	9a 81       	ldd	r25, Y+2	; 0x02
    5808:	9c 83       	std	Y+4, r25	; 0x04
    580a:	8b 83       	std	Y+3, r24	; 0x03
	
	encode (msgPtr, msgType);
    580c:	8d 81       	ldd	r24, Y+5	; 0x05
    580e:	9e 81       	ldd	r25, Y+6	; 0x06
    5810:	ac 01       	movw	r20, r24
    5812:	4e 5f       	subi	r20, 0xFE	; 254
    5814:	5f 4f       	sbci	r21, 0xFF	; 255
    5816:	8d 81       	ldd	r24, Y+5	; 0x05
    5818:	9e 81       	ldd	r25, Y+6	; 0x06
    581a:	9e 01       	movw	r18, r28
    581c:	2d 5f       	subi	r18, 0xFD	; 253
    581e:	3f 4f       	sbci	r19, 0xFF	; 255
    5820:	b9 01       	movw	r22, r18
    5822:	0e 94 00 26 	call	0x4c00	; 0x4c00 <_ZN10helicopter8messages7Message6encodeERPhRh>
	encode (msgPtr, MagYaw);
    5826:	8d 81       	ldd	r24, Y+5	; 0x05
    5828:	9e 81       	ldd	r25, Y+6	; 0x06
    582a:	ac 01       	movw	r20, r24
    582c:	4b 5f       	subi	r20, 0xFB	; 251
    582e:	5f 4f       	sbci	r21, 0xFF	; 255
    5830:	8d 81       	ldd	r24, Y+5	; 0x05
    5832:	9e 81       	ldd	r25, Y+6	; 0x06
    5834:	9e 01       	movw	r18, r28
    5836:	2d 5f       	subi	r18, 0xFD	; 253
    5838:	3f 4f       	sbci	r19, 0xFF	; 255
    583a:	b9 01       	movw	r22, r18
    583c:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawVelocityDegreesPerSecond);
    5840:	8d 81       	ldd	r24, Y+5	; 0x05
    5842:	9e 81       	ldd	r25, Y+6	; 0x06
    5844:	ac 01       	movw	r20, r24
    5846:	47 5f       	subi	r20, 0xF7	; 247
    5848:	5f 4f       	sbci	r21, 0xFF	; 255
    584a:	8d 81       	ldd	r24, Y+5	; 0x05
    584c:	9e 81       	ldd	r25, Y+6	; 0x06
    584e:	9e 01       	movw	r18, r28
    5850:	2d 5f       	subi	r18, 0xFD	; 253
    5852:	3f 4f       	sbci	r19, 0xFF	; 255
    5854:	b9 01       	movw	r22, r18
    5856:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawIntegral);
    585a:	8d 81       	ldd	r24, Y+5	; 0x05
    585c:	9e 81       	ldd	r25, Y+6	; 0x06
    585e:	ac 01       	movw	r20, r24
    5860:	43 5f       	subi	r20, 0xF3	; 243
    5862:	5f 4f       	sbci	r21, 0xFF	; 255
    5864:	8d 81       	ldd	r24, Y+5	; 0x05
    5866:	9e 81       	ldd	r25, Y+6	; 0x06
    5868:	9e 01       	movw	r18, r28
    586a:	2d 5f       	subi	r18, 0xFD	; 253
    586c:	3f 4f       	sbci	r19, 0xFF	; 255
    586e:	b9 01       	movw	r22, r18
    5870:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawProportional);
    5874:	8d 81       	ldd	r24, Y+5	; 0x05
    5876:	9e 81       	ldd	r25, Y+6	; 0x06
    5878:	ac 01       	movw	r20, r24
    587a:	4f 5e       	subi	r20, 0xEF	; 239
    587c:	5f 4f       	sbci	r21, 0xFF	; 255
    587e:	8d 81       	ldd	r24, Y+5	; 0x05
    5880:	9e 81       	ldd	r25, Y+6	; 0x06
    5882:	9e 01       	movw	r18, r28
    5884:	2d 5f       	subi	r18, 0xFD	; 253
    5886:	3f 4f       	sbci	r19, 0xFF	; 255
    5888:	b9 01       	movw	r22, r18
    588a:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawDerivativeError);
    588e:	8d 81       	ldd	r24, Y+5	; 0x05
    5890:	9e 81       	ldd	r25, Y+6	; 0x06
    5892:	ac 01       	movw	r20, r24
    5894:	4b 5e       	subi	r20, 0xEB	; 235
    5896:	5f 4f       	sbci	r21, 0xFF	; 255
    5898:	8d 81       	ldd	r24, Y+5	; 0x05
    589a:	9e 81       	ldd	r25, Y+6	; 0x06
    589c:	9e 01       	movw	r18, r28
    589e:	2d 5f       	subi	r18, 0xFD	; 253
    58a0:	3f 4f       	sbci	r19, 0xFF	; 255
    58a2:	b9 01       	movw	r22, r18
    58a4:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawControl);
    58a8:	8d 81       	ldd	r24, Y+5	; 0x05
    58aa:	9e 81       	ldd	r25, Y+6	; 0x06
    58ac:	ac 01       	movw	r20, r24
    58ae:	47 5e       	subi	r20, 0xE7	; 231
    58b0:	5f 4f       	sbci	r21, 0xFF	; 255
    58b2:	8d 81       	ldd	r24, Y+5	; 0x05
    58b4:	9e 81       	ldd	r25, Y+6	; 0x06
    58b6:	9e 01       	movw	r18, r28
    58b8:	2d 5f       	subi	r18, 0xFD	; 253
    58ba:	3f 4f       	sbci	r19, 0xFF	; 255
    58bc:	b9 01       	movw	r22, r18
    58be:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawIntegralGain);
    58c2:	8d 81       	ldd	r24, Y+5	; 0x05
    58c4:	9e 81       	ldd	r25, Y+6	; 0x06
    58c6:	ac 01       	movw	r20, r24
    58c8:	43 5e       	subi	r20, 0xE3	; 227
    58ca:	5f 4f       	sbci	r21, 0xFF	; 255
    58cc:	8d 81       	ldd	r24, Y+5	; 0x05
    58ce:	9e 81       	ldd	r25, Y+6	; 0x06
    58d0:	9e 01       	movw	r18, r28
    58d2:	2d 5f       	subi	r18, 0xFD	; 253
    58d4:	3f 4f       	sbci	r19, 0xFF	; 255
    58d6:	b9 01       	movw	r22, r18
    58d8:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawDerivativeGain);
    58dc:	8d 81       	ldd	r24, Y+5	; 0x05
    58de:	9e 81       	ldd	r25, Y+6	; 0x06
    58e0:	ac 01       	movw	r20, r24
    58e2:	4f 5d       	subi	r20, 0xDF	; 223
    58e4:	5f 4f       	sbci	r21, 0xFF	; 255
    58e6:	8d 81       	ldd	r24, Y+5	; 0x05
    58e8:	9e 81       	ldd	r25, Y+6	; 0x06
    58ea:	9e 01       	movw	r18, r28
    58ec:	2d 5f       	subi	r18, 0xFD	; 253
    58ee:	3f 4f       	sbci	r19, 0xFF	; 255
    58f0:	b9 01       	movw	r22, r18
    58f2:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawProportionalGain);
    58f6:	8d 81       	ldd	r24, Y+5	; 0x05
    58f8:	9e 81       	ldd	r25, Y+6	; 0x06
    58fa:	ac 01       	movw	r20, r24
    58fc:	4b 5d       	subi	r20, 0xDB	; 219
    58fe:	5f 4f       	sbci	r21, 0xFF	; 255
    5900:	8d 81       	ldd	r24, Y+5	; 0x05
    5902:	9e 81       	ldd	r25, Y+6	; 0x06
    5904:	9e 01       	movw	r18, r28
    5906:	2d 5f       	subi	r18, 0xFD	; 253
    5908:	3f 4f       	sbci	r19, 0xFF	; 255
    590a:	b9 01       	movw	r22, r18
    590c:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawAntiWindupGain);
    5910:	8d 81       	ldd	r24, Y+5	; 0x05
    5912:	9e 81       	ldd	r25, Y+6	; 0x06
    5914:	ac 01       	movw	r20, r24
    5916:	47 5d       	subi	r20, 0xD7	; 215
    5918:	5f 4f       	sbci	r21, 0xFF	; 255
    591a:	8d 81       	ldd	r24, Y+5	; 0x05
    591c:	9e 81       	ldd	r25, Y+6	; 0x06
    591e:	9e 01       	movw	r18, r28
    5920:	2d 5f       	subi	r18, 0xFD	; 253
    5922:	3f 4f       	sbci	r19, 0xFF	; 255
    5924:	b9 01       	movw	r22, r18
    5926:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	


	encode (msgPtr, XNEDBodyFrame);
    592a:	8d 81       	ldd	r24, Y+5	; 0x05
    592c:	9e 81       	ldd	r25, Y+6	; 0x06
    592e:	ac 01       	movw	r20, r24
    5930:	43 5d       	subi	r20, 0xD3	; 211
    5932:	5f 4f       	sbci	r21, 0xFF	; 255
    5934:	8d 81       	ldd	r24, Y+5	; 0x05
    5936:	9e 81       	ldd	r25, Y+6	; 0x06
    5938:	9e 01       	movw	r18, r28
    593a:	2d 5f       	subi	r18, 0xFD	; 253
    593c:	3f 4f       	sbci	r19, 0xFF	; 255
    593e:	b9 01       	movw	r22, r18
    5940:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XVelocityMetersPerSecond);
    5944:	8d 81       	ldd	r24, Y+5	; 0x05
    5946:	9e 81       	ldd	r25, Y+6	; 0x06
    5948:	ac 01       	movw	r20, r24
    594a:	4f 5c       	subi	r20, 0xCF	; 207
    594c:	5f 4f       	sbci	r21, 0xFF	; 255
    594e:	8d 81       	ldd	r24, Y+5	; 0x05
    5950:	9e 81       	ldd	r25, Y+6	; 0x06
    5952:	9e 01       	movw	r18, r28
    5954:	2d 5f       	subi	r18, 0xFD	; 253
    5956:	3f 4f       	sbci	r19, 0xFF	; 255
    5958:	b9 01       	movw	r22, r18
    595a:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ThetaPitchDegrees);	
    595e:	8d 81       	ldd	r24, Y+5	; 0x05
    5960:	9e 81       	ldd	r25, Y+6	; 0x06
    5962:	ac 01       	movw	r20, r24
    5964:	4b 5c       	subi	r20, 0xCB	; 203
    5966:	5f 4f       	sbci	r21, 0xFF	; 255
    5968:	8d 81       	ldd	r24, Y+5	; 0x05
    596a:	9e 81       	ldd	r25, Y+6	; 0x06
    596c:	9e 01       	movw	r18, r28
    596e:	2d 5f       	subi	r18, 0xFD	; 253
    5970:	3f 4f       	sbci	r19, 0xFF	; 255
    5972:	b9 01       	movw	r22, r18
    5974:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XIntegral);
    5978:	8d 81       	ldd	r24, Y+5	; 0x05
    597a:	9e 81       	ldd	r25, Y+6	; 0x06
    597c:	ac 01       	movw	r20, r24
    597e:	47 5c       	subi	r20, 0xC7	; 199
    5980:	5f 4f       	sbci	r21, 0xFF	; 255
    5982:	8d 81       	ldd	r24, Y+5	; 0x05
    5984:	9e 81       	ldd	r25, Y+6	; 0x06
    5986:	9e 01       	movw	r18, r28
    5988:	2d 5f       	subi	r18, 0xFD	; 253
    598a:	3f 4f       	sbci	r19, 0xFF	; 255
    598c:	b9 01       	movw	r22, r18
    598e:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XProportional);
    5992:	8d 81       	ldd	r24, Y+5	; 0x05
    5994:	9e 81       	ldd	r25, Y+6	; 0x06
    5996:	ac 01       	movw	r20, r24
    5998:	43 5c       	subi	r20, 0xC3	; 195
    599a:	5f 4f       	sbci	r21, 0xFF	; 255
    599c:	8d 81       	ldd	r24, Y+5	; 0x05
    599e:	9e 81       	ldd	r25, Y+6	; 0x06
    59a0:	9e 01       	movw	r18, r28
    59a2:	2d 5f       	subi	r18, 0xFD	; 253
    59a4:	3f 4f       	sbci	r19, 0xFF	; 255
    59a6:	b9 01       	movw	r22, r18
    59a8:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XDerivativeError);
    59ac:	8d 81       	ldd	r24, Y+5	; 0x05
    59ae:	9e 81       	ldd	r25, Y+6	; 0x06
    59b0:	ac 01       	movw	r20, r24
    59b2:	4f 5b       	subi	r20, 0xBF	; 191
    59b4:	5f 4f       	sbci	r21, 0xFF	; 255
    59b6:	8d 81       	ldd	r24, Y+5	; 0x05
    59b8:	9e 81       	ldd	r25, Y+6	; 0x06
    59ba:	9e 01       	movw	r18, r28
    59bc:	2d 5f       	subi	r18, 0xFD	; 253
    59be:	3f 4f       	sbci	r19, 0xFF	; 255
    59c0:	b9 01       	movw	r22, r18
    59c2:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LongitudeControl);
    59c6:	8d 81       	ldd	r24, Y+5	; 0x05
    59c8:	9e 81       	ldd	r25, Y+6	; 0x06
    59ca:	ac 01       	movw	r20, r24
    59cc:	4b 5b       	subi	r20, 0xBB	; 187
    59ce:	5f 4f       	sbci	r21, 0xFF	; 255
    59d0:	8d 81       	ldd	r24, Y+5	; 0x05
    59d2:	9e 81       	ldd	r25, Y+6	; 0x06
    59d4:	9e 01       	movw	r18, r28
    59d6:	2d 5f       	subi	r18, 0xFD	; 253
    59d8:	3f 4f       	sbci	r19, 0xFF	; 255
    59da:	b9 01       	movw	r22, r18
    59dc:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XIntegralGain);
    59e0:	8d 81       	ldd	r24, Y+5	; 0x05
    59e2:	9e 81       	ldd	r25, Y+6	; 0x06
    59e4:	ac 01       	movw	r20, r24
    59e6:	47 5b       	subi	r20, 0xB7	; 183
    59e8:	5f 4f       	sbci	r21, 0xFF	; 255
    59ea:	8d 81       	ldd	r24, Y+5	; 0x05
    59ec:	9e 81       	ldd	r25, Y+6	; 0x06
    59ee:	9e 01       	movw	r18, r28
    59f0:	2d 5f       	subi	r18, 0xFD	; 253
    59f2:	3f 4f       	sbci	r19, 0xFF	; 255
    59f4:	b9 01       	movw	r22, r18
    59f6:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XDerivativeGain);
    59fa:	8d 81       	ldd	r24, Y+5	; 0x05
    59fc:	9e 81       	ldd	r25, Y+6	; 0x06
    59fe:	ac 01       	movw	r20, r24
    5a00:	43 5b       	subi	r20, 0xB3	; 179
    5a02:	5f 4f       	sbci	r21, 0xFF	; 255
    5a04:	8d 81       	ldd	r24, Y+5	; 0x05
    5a06:	9e 81       	ldd	r25, Y+6	; 0x06
    5a08:	9e 01       	movw	r18, r28
    5a0a:	2d 5f       	subi	r18, 0xFD	; 253
    5a0c:	3f 4f       	sbci	r19, 0xFF	; 255
    5a0e:	b9 01       	movw	r22, r18
    5a10:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XProportionalGain);
    5a14:	8d 81       	ldd	r24, Y+5	; 0x05
    5a16:	9e 81       	ldd	r25, Y+6	; 0x06
    5a18:	ac 01       	movw	r20, r24
    5a1a:	4f 5a       	subi	r20, 0xAF	; 175
    5a1c:	5f 4f       	sbci	r21, 0xFF	; 255
    5a1e:	8d 81       	ldd	r24, Y+5	; 0x05
    5a20:	9e 81       	ldd	r25, Y+6	; 0x06
    5a22:	9e 01       	movw	r18, r28
    5a24:	2d 5f       	subi	r18, 0xFD	; 253
    5a26:	3f 4f       	sbci	r19, 0xFF	; 255
    5a28:	b9 01       	movw	r22, r18
    5a2a:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XAntiWindupGain);	
    5a2e:	8d 81       	ldd	r24, Y+5	; 0x05
    5a30:	9e 81       	ldd	r25, Y+6	; 0x06
    5a32:	ac 01       	movw	r20, r24
    5a34:	4b 5a       	subi	r20, 0xAB	; 171
    5a36:	5f 4f       	sbci	r21, 0xFF	; 255
    5a38:	8d 81       	ldd	r24, Y+5	; 0x05
    5a3a:	9e 81       	ldd	r25, Y+6	; 0x06
    5a3c:	9e 01       	movw	r18, r28
    5a3e:	2d 5f       	subi	r18, 0xFD	; 253
    5a40:	3f 4f       	sbci	r19, 0xFF	; 255
    5a42:	b9 01       	movw	r22, r18
    5a44:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LongitudeInnerLoopGain);	
    5a48:	8d 81       	ldd	r24, Y+5	; 0x05
    5a4a:	9e 81       	ldd	r25, Y+6	; 0x06
    5a4c:	ac 01       	movw	r20, r24
    5a4e:	47 5a       	subi	r20, 0xA7	; 167
    5a50:	5f 4f       	sbci	r21, 0xFF	; 255
    5a52:	8d 81       	ldd	r24, Y+5	; 0x05
    5a54:	9e 81       	ldd	r25, Y+6	; 0x06
    5a56:	9e 01       	movw	r18, r28
    5a58:	2d 5f       	subi	r18, 0xFD	; 253
    5a5a:	3f 4f       	sbci	r19, 0xFF	; 255
    5a5c:	b9 01       	movw	r22, r18
    5a5e:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XLongitudeOuterLoopSetpoint);
    5a62:	8d 81       	ldd	r24, Y+5	; 0x05
    5a64:	9e 81       	ldd	r25, Y+6	; 0x06
    5a66:	ac 01       	movw	r20, r24
    5a68:	43 5a       	subi	r20, 0xA3	; 163
    5a6a:	5f 4f       	sbci	r21, 0xFF	; 255
    5a6c:	8d 81       	ldd	r24, Y+5	; 0x05
    5a6e:	9e 81       	ldd	r25, Y+6	; 0x06
    5a70:	9e 01       	movw	r18, r28
    5a72:	2d 5f       	subi	r18, 0xFD	; 253
    5a74:	3f 4f       	sbci	r19, 0xFF	; 255
    5a76:	b9 01       	movw	r22, r18
    5a78:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, PitchAngularVelocityRadsPerSecond);
    5a7c:	8d 81       	ldd	r24, Y+5	; 0x05
    5a7e:	9e 81       	ldd	r25, Y+6	; 0x06
    5a80:	ac 01       	movw	r20, r24
    5a82:	4f 59       	subi	r20, 0x9F	; 159
    5a84:	5f 4f       	sbci	r21, 0xFF	; 255
    5a86:	8d 81       	ldd	r24, Y+5	; 0x05
    5a88:	9e 81       	ldd	r25, Y+6	; 0x06
    5a8a:	9e 01       	movw	r18, r28
    5a8c:	2d 5f       	subi	r18, 0xFD	; 253
    5a8e:	3f 4f       	sbci	r19, 0xFF	; 255
    5a90:	b9 01       	movw	r22, r18
    5a92:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, PitchAngularVelocityGain);
    5a96:	8d 81       	ldd	r24, Y+5	; 0x05
    5a98:	9e 81       	ldd	r25, Y+6	; 0x06
    5a9a:	ac 01       	movw	r20, r24
    5a9c:	4b 59       	subi	r20, 0x9B	; 155
    5a9e:	5f 4f       	sbci	r21, 0xFF	; 255
    5aa0:	8d 81       	ldd	r24, Y+5	; 0x05
    5aa2:	9e 81       	ldd	r25, Y+6	; 0x06
    5aa4:	9e 01       	movw	r18, r28
    5aa6:	2d 5f       	subi	r18, 0xFD	; 253
    5aa8:	3f 4f       	sbci	r19, 0xFF	; 255
    5aaa:	b9 01       	movw	r22, r18
    5aac:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	
	encode (msgPtr, YNEDBodyFrame);
    5ab0:	8d 81       	ldd	r24, Y+5	; 0x05
    5ab2:	9e 81       	ldd	r25, Y+6	; 0x06
    5ab4:	ac 01       	movw	r20, r24
    5ab6:	47 59       	subi	r20, 0x97	; 151
    5ab8:	5f 4f       	sbci	r21, 0xFF	; 255
    5aba:	8d 81       	ldd	r24, Y+5	; 0x05
    5abc:	9e 81       	ldd	r25, Y+6	; 0x06
    5abe:	9e 01       	movw	r18, r28
    5ac0:	2d 5f       	subi	r18, 0xFD	; 253
    5ac2:	3f 4f       	sbci	r19, 0xFF	; 255
    5ac4:	b9 01       	movw	r22, r18
    5ac6:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YVelocityMetersPerSecond);
    5aca:	8d 81       	ldd	r24, Y+5	; 0x05
    5acc:	9e 81       	ldd	r25, Y+6	; 0x06
    5ace:	ac 01       	movw	r20, r24
    5ad0:	43 59       	subi	r20, 0x93	; 147
    5ad2:	5f 4f       	sbci	r21, 0xFF	; 255
    5ad4:	8d 81       	ldd	r24, Y+5	; 0x05
    5ad6:	9e 81       	ldd	r25, Y+6	; 0x06
    5ad8:	9e 01       	movw	r18, r28
    5ada:	2d 5f       	subi	r18, 0xFD	; 253
    5adc:	3f 4f       	sbci	r19, 0xFF	; 255
    5ade:	b9 01       	movw	r22, r18
    5ae0:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, PhiRollDegrees);
    5ae4:	8d 81       	ldd	r24, Y+5	; 0x05
    5ae6:	9e 81       	ldd	r25, Y+6	; 0x06
    5ae8:	ac 01       	movw	r20, r24
    5aea:	4f 58       	subi	r20, 0x8F	; 143
    5aec:	5f 4f       	sbci	r21, 0xFF	; 255
    5aee:	8d 81       	ldd	r24, Y+5	; 0x05
    5af0:	9e 81       	ldd	r25, Y+6	; 0x06
    5af2:	9e 01       	movw	r18, r28
    5af4:	2d 5f       	subi	r18, 0xFD	; 253
    5af6:	3f 4f       	sbci	r19, 0xFF	; 255
    5af8:	b9 01       	movw	r22, r18
    5afa:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YIntegral);
    5afe:	8d 81       	ldd	r24, Y+5	; 0x05
    5b00:	9e 81       	ldd	r25, Y+6	; 0x06
    5b02:	ac 01       	movw	r20, r24
    5b04:	4b 58       	subi	r20, 0x8B	; 139
    5b06:	5f 4f       	sbci	r21, 0xFF	; 255
    5b08:	8d 81       	ldd	r24, Y+5	; 0x05
    5b0a:	9e 81       	ldd	r25, Y+6	; 0x06
    5b0c:	9e 01       	movw	r18, r28
    5b0e:	2d 5f       	subi	r18, 0xFD	; 253
    5b10:	3f 4f       	sbci	r19, 0xFF	; 255
    5b12:	b9 01       	movw	r22, r18
    5b14:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YProportional);
    5b18:	8d 81       	ldd	r24, Y+5	; 0x05
    5b1a:	9e 81       	ldd	r25, Y+6	; 0x06
    5b1c:	ac 01       	movw	r20, r24
    5b1e:	47 58       	subi	r20, 0x87	; 135
    5b20:	5f 4f       	sbci	r21, 0xFF	; 255
    5b22:	8d 81       	ldd	r24, Y+5	; 0x05
    5b24:	9e 81       	ldd	r25, Y+6	; 0x06
    5b26:	9e 01       	movw	r18, r28
    5b28:	2d 5f       	subi	r18, 0xFD	; 253
    5b2a:	3f 4f       	sbci	r19, 0xFF	; 255
    5b2c:	b9 01       	movw	r22, r18
    5b2e:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YDerivativeError);
    5b32:	8d 81       	ldd	r24, Y+5	; 0x05
    5b34:	9e 81       	ldd	r25, Y+6	; 0x06
    5b36:	ac 01       	movw	r20, r24
    5b38:	43 58       	subi	r20, 0x83	; 131
    5b3a:	5f 4f       	sbci	r21, 0xFF	; 255
    5b3c:	8d 81       	ldd	r24, Y+5	; 0x05
    5b3e:	9e 81       	ldd	r25, Y+6	; 0x06
    5b40:	9e 01       	movw	r18, r28
    5b42:	2d 5f       	subi	r18, 0xFD	; 253
    5b44:	3f 4f       	sbci	r19, 0xFF	; 255
    5b46:	b9 01       	movw	r22, r18
    5b48:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LateralControl);
    5b4c:	8d 81       	ldd	r24, Y+5	; 0x05
    5b4e:	9e 81       	ldd	r25, Y+6	; 0x06
    5b50:	ac 01       	movw	r20, r24
    5b52:	4f 57       	subi	r20, 0x7F	; 127
    5b54:	5f 4f       	sbci	r21, 0xFF	; 255
    5b56:	8d 81       	ldd	r24, Y+5	; 0x05
    5b58:	9e 81       	ldd	r25, Y+6	; 0x06
    5b5a:	9e 01       	movw	r18, r28
    5b5c:	2d 5f       	subi	r18, 0xFD	; 253
    5b5e:	3f 4f       	sbci	r19, 0xFF	; 255
    5b60:	b9 01       	movw	r22, r18
    5b62:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YIntegralGain);
    5b66:	8d 81       	ldd	r24, Y+5	; 0x05
    5b68:	9e 81       	ldd	r25, Y+6	; 0x06
    5b6a:	ac 01       	movw	r20, r24
    5b6c:	4b 57       	subi	r20, 0x7B	; 123
    5b6e:	5f 4f       	sbci	r21, 0xFF	; 255
    5b70:	8d 81       	ldd	r24, Y+5	; 0x05
    5b72:	9e 81       	ldd	r25, Y+6	; 0x06
    5b74:	9e 01       	movw	r18, r28
    5b76:	2d 5f       	subi	r18, 0xFD	; 253
    5b78:	3f 4f       	sbci	r19, 0xFF	; 255
    5b7a:	b9 01       	movw	r22, r18
    5b7c:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YDerivativeGain);
    5b80:	8d 81       	ldd	r24, Y+5	; 0x05
    5b82:	9e 81       	ldd	r25, Y+6	; 0x06
    5b84:	ac 01       	movw	r20, r24
    5b86:	47 57       	subi	r20, 0x77	; 119
    5b88:	5f 4f       	sbci	r21, 0xFF	; 255
    5b8a:	8d 81       	ldd	r24, Y+5	; 0x05
    5b8c:	9e 81       	ldd	r25, Y+6	; 0x06
    5b8e:	9e 01       	movw	r18, r28
    5b90:	2d 5f       	subi	r18, 0xFD	; 253
    5b92:	3f 4f       	sbci	r19, 0xFF	; 255
    5b94:	b9 01       	movw	r22, r18
    5b96:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YProportionalGain);
    5b9a:	8d 81       	ldd	r24, Y+5	; 0x05
    5b9c:	9e 81       	ldd	r25, Y+6	; 0x06
    5b9e:	ac 01       	movw	r20, r24
    5ba0:	43 57       	subi	r20, 0x73	; 115
    5ba2:	5f 4f       	sbci	r21, 0xFF	; 255
    5ba4:	8d 81       	ldd	r24, Y+5	; 0x05
    5ba6:	9e 81       	ldd	r25, Y+6	; 0x06
    5ba8:	9e 01       	movw	r18, r28
    5baa:	2d 5f       	subi	r18, 0xFD	; 253
    5bac:	3f 4f       	sbci	r19, 0xFF	; 255
    5bae:	b9 01       	movw	r22, r18
    5bb0:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YAntiWindupGain);
    5bb4:	8d 81       	ldd	r24, Y+5	; 0x05
    5bb6:	9e 81       	ldd	r25, Y+6	; 0x06
    5bb8:	ac 01       	movw	r20, r24
    5bba:	4f 56       	subi	r20, 0x6F	; 111
    5bbc:	5f 4f       	sbci	r21, 0xFF	; 255
    5bbe:	8d 81       	ldd	r24, Y+5	; 0x05
    5bc0:	9e 81       	ldd	r25, Y+6	; 0x06
    5bc2:	9e 01       	movw	r18, r28
    5bc4:	2d 5f       	subi	r18, 0xFD	; 253
    5bc6:	3f 4f       	sbci	r19, 0xFF	; 255
    5bc8:	b9 01       	movw	r22, r18
    5bca:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LateralInnerLoopGain);	
    5bce:	8d 81       	ldd	r24, Y+5	; 0x05
    5bd0:	9e 81       	ldd	r25, Y+6	; 0x06
    5bd2:	ac 01       	movw	r20, r24
    5bd4:	4b 56       	subi	r20, 0x6B	; 107
    5bd6:	5f 4f       	sbci	r21, 0xFF	; 255
    5bd8:	8d 81       	ldd	r24, Y+5	; 0x05
    5bda:	9e 81       	ldd	r25, Y+6	; 0x06
    5bdc:	9e 01       	movw	r18, r28
    5bde:	2d 5f       	subi	r18, 0xFD	; 253
    5be0:	3f 4f       	sbci	r19, 0xFF	; 255
    5be2:	b9 01       	movw	r22, r18
    5be4:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YLateralOuterLoopSetpoint);
    5be8:	8d 81       	ldd	r24, Y+5	; 0x05
    5bea:	9e 81       	ldd	r25, Y+6	; 0x06
    5bec:	ac 01       	movw	r20, r24
    5bee:	47 56       	subi	r20, 0x67	; 103
    5bf0:	5f 4f       	sbci	r21, 0xFF	; 255
    5bf2:	8d 81       	ldd	r24, Y+5	; 0x05
    5bf4:	9e 81       	ldd	r25, Y+6	; 0x06
    5bf6:	9e 01       	movw	r18, r28
    5bf8:	2d 5f       	subi	r18, 0xFD	; 253
    5bfa:	3f 4f       	sbci	r19, 0xFF	; 255
    5bfc:	b9 01       	movw	r22, r18
    5bfe:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, RollAngularVelocityRadsPerSecond);
    5c02:	8d 81       	ldd	r24, Y+5	; 0x05
    5c04:	9e 81       	ldd	r25, Y+6	; 0x06
    5c06:	ac 01       	movw	r20, r24
    5c08:	43 56       	subi	r20, 0x63	; 99
    5c0a:	5f 4f       	sbci	r21, 0xFF	; 255
    5c0c:	8d 81       	ldd	r24, Y+5	; 0x05
    5c0e:	9e 81       	ldd	r25, Y+6	; 0x06
    5c10:	9e 01       	movw	r18, r28
    5c12:	2d 5f       	subi	r18, 0xFD	; 253
    5c14:	3f 4f       	sbci	r19, 0xFF	; 255
    5c16:	b9 01       	movw	r22, r18
    5c18:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, RollAngularVelocityGain);
    5c1c:	8d 81       	ldd	r24, Y+5	; 0x05
    5c1e:	9e 81       	ldd	r25, Y+6	; 0x06
    5c20:	ac 01       	movw	r20, r24
    5c22:	4f 55       	subi	r20, 0x5F	; 95
    5c24:	5f 4f       	sbci	r21, 0xFF	; 255
    5c26:	8d 81       	ldd	r24, Y+5	; 0x05
    5c28:	9e 81       	ldd	r25, Y+6	; 0x06
    5c2a:	9e 01       	movw	r18, r28
    5c2c:	2d 5f       	subi	r18, 0xFD	; 253
    5c2e:	3f 4f       	sbci	r19, 0xFF	; 255
    5c30:	b9 01       	movw	r22, r18
    5c32:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	

	encode (msgPtr, AltitudeFeetAgl);
    5c36:	8d 81       	ldd	r24, Y+5	; 0x05
    5c38:	9e 81       	ldd	r25, Y+6	; 0x06
    5c3a:	ac 01       	movw	r20, r24
    5c3c:	4b 55       	subi	r20, 0x5B	; 91
    5c3e:	5f 4f       	sbci	r21, 0xFF	; 255
    5c40:	8d 81       	ldd	r24, Y+5	; 0x05
    5c42:	9e 81       	ldd	r25, Y+6	; 0x06
    5c44:	9e 01       	movw	r18, r28
    5c46:	2d 5f       	subi	r18, 0xFD	; 253
    5c48:	3f 4f       	sbci	r19, 0xFF	; 255
    5c4a:	b9 01       	movw	r22, r18
    5c4c:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZVelocityMetersPerSecond);
    5c50:	8d 81       	ldd	r24, Y+5	; 0x05
    5c52:	9e 81       	ldd	r25, Y+6	; 0x06
    5c54:	ac 01       	movw	r20, r24
    5c56:	47 55       	subi	r20, 0x57	; 87
    5c58:	5f 4f       	sbci	r21, 0xFF	; 255
    5c5a:	8d 81       	ldd	r24, Y+5	; 0x05
    5c5c:	9e 81       	ldd	r25, Y+6	; 0x06
    5c5e:	9e 01       	movw	r18, r28
    5c60:	2d 5f       	subi	r18, 0xFD	; 253
    5c62:	3f 4f       	sbci	r19, 0xFF	; 255
    5c64:	b9 01       	movw	r22, r18
    5c66:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZIntegral);
    5c6a:	8d 81       	ldd	r24, Y+5	; 0x05
    5c6c:	9e 81       	ldd	r25, Y+6	; 0x06
    5c6e:	ac 01       	movw	r20, r24
    5c70:	43 55       	subi	r20, 0x53	; 83
    5c72:	5f 4f       	sbci	r21, 0xFF	; 255
    5c74:	8d 81       	ldd	r24, Y+5	; 0x05
    5c76:	9e 81       	ldd	r25, Y+6	; 0x06
    5c78:	9e 01       	movw	r18, r28
    5c7a:	2d 5f       	subi	r18, 0xFD	; 253
    5c7c:	3f 4f       	sbci	r19, 0xFF	; 255
    5c7e:	b9 01       	movw	r22, r18
    5c80:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZProportional);
    5c84:	8d 81       	ldd	r24, Y+5	; 0x05
    5c86:	9e 81       	ldd	r25, Y+6	; 0x06
    5c88:	ac 01       	movw	r20, r24
    5c8a:	4f 54       	subi	r20, 0x4F	; 79
    5c8c:	5f 4f       	sbci	r21, 0xFF	; 255
    5c8e:	8d 81       	ldd	r24, Y+5	; 0x05
    5c90:	9e 81       	ldd	r25, Y+6	; 0x06
    5c92:	9e 01       	movw	r18, r28
    5c94:	2d 5f       	subi	r18, 0xFD	; 253
    5c96:	3f 4f       	sbci	r19, 0xFF	; 255
    5c98:	b9 01       	movw	r22, r18
    5c9a:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZDerivativeError);
    5c9e:	8d 81       	ldd	r24, Y+5	; 0x05
    5ca0:	9e 81       	ldd	r25, Y+6	; 0x06
    5ca2:	ac 01       	movw	r20, r24
    5ca4:	4b 54       	subi	r20, 0x4B	; 75
    5ca6:	5f 4f       	sbci	r21, 0xFF	; 255
    5ca8:	8d 81       	ldd	r24, Y+5	; 0x05
    5caa:	9e 81       	ldd	r25, Y+6	; 0x06
    5cac:	9e 01       	movw	r18, r28
    5cae:	2d 5f       	subi	r18, 0xFD	; 253
    5cb0:	3f 4f       	sbci	r19, 0xFF	; 255
    5cb2:	b9 01       	movw	r22, r18
    5cb4:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, MainRotorCollectiveControl);
    5cb8:	8d 81       	ldd	r24, Y+5	; 0x05
    5cba:	9e 81       	ldd	r25, Y+6	; 0x06
    5cbc:	ac 01       	movw	r20, r24
    5cbe:	47 54       	subi	r20, 0x47	; 71
    5cc0:	5f 4f       	sbci	r21, 0xFF	; 255
    5cc2:	8d 81       	ldd	r24, Y+5	; 0x05
    5cc4:	9e 81       	ldd	r25, Y+6	; 0x06
    5cc6:	9e 01       	movw	r18, r28
    5cc8:	2d 5f       	subi	r18, 0xFD	; 253
    5cca:	3f 4f       	sbci	r19, 0xFF	; 255
    5ccc:	b9 01       	movw	r22, r18
    5cce:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZIntegralGain);
    5cd2:	8d 81       	ldd	r24, Y+5	; 0x05
    5cd4:	9e 81       	ldd	r25, Y+6	; 0x06
    5cd6:	ac 01       	movw	r20, r24
    5cd8:	43 54       	subi	r20, 0x43	; 67
    5cda:	5f 4f       	sbci	r21, 0xFF	; 255
    5cdc:	8d 81       	ldd	r24, Y+5	; 0x05
    5cde:	9e 81       	ldd	r25, Y+6	; 0x06
    5ce0:	9e 01       	movw	r18, r28
    5ce2:	2d 5f       	subi	r18, 0xFD	; 253
    5ce4:	3f 4f       	sbci	r19, 0xFF	; 255
    5ce6:	b9 01       	movw	r22, r18
    5ce8:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZDerivativeGain);
    5cec:	8d 81       	ldd	r24, Y+5	; 0x05
    5cee:	9e 81       	ldd	r25, Y+6	; 0x06
    5cf0:	ac 01       	movw	r20, r24
    5cf2:	4f 53       	subi	r20, 0x3F	; 63
    5cf4:	5f 4f       	sbci	r21, 0xFF	; 255
    5cf6:	8d 81       	ldd	r24, Y+5	; 0x05
    5cf8:	9e 81       	ldd	r25, Y+6	; 0x06
    5cfa:	9e 01       	movw	r18, r28
    5cfc:	2d 5f       	subi	r18, 0xFD	; 253
    5cfe:	3f 4f       	sbci	r19, 0xFF	; 255
    5d00:	b9 01       	movw	r22, r18
    5d02:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZProportionalGain);
    5d06:	8d 81       	ldd	r24, Y+5	; 0x05
    5d08:	9e 81       	ldd	r25, Y+6	; 0x06
    5d0a:	ac 01       	movw	r20, r24
    5d0c:	4b 53       	subi	r20, 0x3B	; 59
    5d0e:	5f 4f       	sbci	r21, 0xFF	; 255
    5d10:	8d 81       	ldd	r24, Y+5	; 0x05
    5d12:	9e 81       	ldd	r25, Y+6	; 0x06
    5d14:	9e 01       	movw	r18, r28
    5d16:	2d 5f       	subi	r18, 0xFD	; 253
    5d18:	3f 4f       	sbci	r19, 0xFF	; 255
    5d1a:	b9 01       	movw	r22, r18
    5d1c:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZAntiWindupGain);
    5d20:	8d 81       	ldd	r24, Y+5	; 0x05
    5d22:	9e 81       	ldd	r25, Y+6	; 0x06
    5d24:	ac 01       	movw	r20, r24
    5d26:	47 53       	subi	r20, 0x37	; 55
    5d28:	5f 4f       	sbci	r21, 0xFF	; 255
    5d2a:	8d 81       	ldd	r24, Y+5	; 0x05
    5d2c:	9e 81       	ldd	r25, Y+6	; 0x06
    5d2e:	9e 01       	movw	r18, r28
    5d30:	2d 5f       	subi	r18, 0xFD	; 253
    5d32:	3f 4f       	sbci	r19, 0xFF	; 255
    5d34:	b9 01       	movw	r22, r18
    5d36:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZNEDBodyFrame);
    5d3a:	8d 81       	ldd	r24, Y+5	; 0x05
    5d3c:	9e 81       	ldd	r25, Y+6	; 0x06
    5d3e:	ac 01       	movw	r20, r24
    5d40:	43 53       	subi	r20, 0x33	; 51
    5d42:	5f 4f       	sbci	r21, 0xFF	; 255
    5d44:	8d 81       	ldd	r24, Y+5	; 0x05
    5d46:	9e 81       	ldd	r25, Y+6	; 0x06
    5d48:	9e 01       	movw	r18, r28
    5d4a:	2d 5f       	subi	r18, 0xFD	; 253
    5d4c:	3f 4f       	sbci	r19, 0xFF	; 255
    5d4e:	b9 01       	movw	r22, r18
    5d50:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
		
	
	encode(msgPtr, LatitudeDegrees);
    5d54:	8d 81       	ldd	r24, Y+5	; 0x05
    5d56:	9e 81       	ldd	r25, Y+6	; 0x06
    5d58:	ac 01       	movw	r20, r24
    5d5a:	4f 52       	subi	r20, 0x2F	; 47
    5d5c:	5f 4f       	sbci	r21, 0xFF	; 255
    5d5e:	8d 81       	ldd	r24, Y+5	; 0x05
    5d60:	9e 81       	ldd	r25, Y+6	; 0x06
    5d62:	9e 01       	movw	r18, r28
    5d64:	2d 5f       	subi	r18, 0xFD	; 253
    5d66:	3f 4f       	sbci	r19, 0xFF	; 255
    5d68:	b9 01       	movw	r22, r18
    5d6a:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode(msgPtr, LongitudeDegrees);
    5d6e:	8d 81       	ldd	r24, Y+5	; 0x05
    5d70:	9e 81       	ldd	r25, Y+6	; 0x06
    5d72:	ac 01       	movw	r20, r24
    5d74:	4b 52       	subi	r20, 0x2B	; 43
    5d76:	5f 4f       	sbci	r21, 0xFF	; 255
    5d78:	8d 81       	ldd	r24, Y+5	; 0x05
    5d7a:	9e 81       	ldd	r25, Y+6	; 0x06
    5d7c:	9e 01       	movw	r18, r28
    5d7e:	2d 5f       	subi	r18, 0xFD	; 253
    5d80:	3f 4f       	sbci	r19, 0xFF	; 255
    5d82:	b9 01       	movw	r22, r18
    5d84:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <_ZN10helicopter8messages7Message6encodeERPhRf>
	
	encode (msgPtr, Timeouts);
    5d88:	8d 81       	ldd	r24, Y+5	; 0x05
    5d8a:	9e 81       	ldd	r25, Y+6	; 0x06
    5d8c:	ac 01       	movw	r20, r24
    5d8e:	47 52       	subi	r20, 0x27	; 39
    5d90:	5f 4f       	sbci	r21, 0xFF	; 255
    5d92:	8d 81       	ldd	r24, Y+5	; 0x05
    5d94:	9e 81       	ldd	r25, Y+6	; 0x06
    5d96:	9e 01       	movw	r18, r28
    5d98:	2d 5f       	subi	r18, 0xFD	; 253
    5d9a:	3f 4f       	sbci	r19, 0xFF	; 255
    5d9c:	b9 01       	movw	r22, r18
    5d9e:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, UnrecognizedMsgTypes);
    5da2:	8d 81       	ldd	r24, Y+5	; 0x05
    5da4:	9e 81       	ldd	r25, Y+6	; 0x06
    5da6:	ac 01       	movw	r20, r24
    5da8:	43 52       	subi	r20, 0x23	; 35
    5daa:	5f 4f       	sbci	r21, 0xFF	; 255
    5dac:	8d 81       	ldd	r24, Y+5	; 0x05
    5dae:	9e 81       	ldd	r25, Y+6	; 0x06
    5db0:	9e 01       	movw	r18, r28
    5db2:	2d 5f       	subi	r18, 0xFD	; 253
    5db4:	3f 4f       	sbci	r19, 0xFF	; 255
    5db6:	b9 01       	movw	r22, r18
    5db8:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, ChecksumErrors);
    5dbc:	8d 81       	ldd	r24, Y+5	; 0x05
    5dbe:	9e 81       	ldd	r25, Y+6	; 0x06
    5dc0:	ac 01       	movw	r20, r24
    5dc2:	4f 51       	subi	r20, 0x1F	; 31
    5dc4:	5f 4f       	sbci	r21, 0xFF	; 255
    5dc6:	8d 81       	ldd	r24, Y+5	; 0x05
    5dc8:	9e 81       	ldd	r25, Y+6	; 0x06
    5dca:	9e 01       	movw	r18, r28
    5dcc:	2d 5f       	subi	r18, 0xFD	; 253
    5dce:	3f 4f       	sbci	r19, 0xFF	; 255
    5dd0:	b9 01       	movw	r22, r18
    5dd2:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, NumOfBlownFrames);
    5dd6:	8d 81       	ldd	r24, Y+5	; 0x05
    5dd8:	9e 81       	ldd	r25, Y+6	; 0x06
    5dda:	ac 01       	movw	r20, r24
    5ddc:	4b 51       	subi	r20, 0x1B	; 27
    5dde:	5f 4f       	sbci	r21, 0xFF	; 255
    5de0:	8d 81       	ldd	r24, Y+5	; 0x05
    5de2:	9e 81       	ldd	r25, Y+6	; 0x06
    5de4:	9e 01       	movw	r18, r28
    5de6:	2d 5f       	subi	r18, 0xFD	; 253
    5de8:	3f 4f       	sbci	r19, 0xFF	; 255
    5dea:	b9 01       	movw	r22, r18
    5dec:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <_ZN10helicopter8messages7Message6encodeERPhRl>
				
	return msg;
    5df0:	89 81       	ldd	r24, Y+1	; 0x01
    5df2:	9a 81       	ldd	r25, Y+2	; 0x02
}
    5df4:	26 96       	adiw	r28, 0x06	; 6
    5df6:	0f b6       	in	r0, 0x3f	; 63
    5df8:	f8 94       	cli
    5dfa:	de bf       	out	0x3e, r29	; 62
    5dfc:	0f be       	out	0x3f, r0	; 63
    5dfe:	cd bf       	out	0x3d, r28	; 61
    5e00:	df 91       	pop	r29
    5e02:	cf 91       	pop	r28
    5e04:	08 95       	ret

00005e06 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh>:

void SystemTelemetryMessage::buildMessage(byte *message)
{
    5e06:	cf 93       	push	r28
    5e08:	df 93       	push	r29
    5e0a:	00 d0       	rcall	.+0      	; 0x5e0c <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x6>
    5e0c:	1f 92       	push	r1
    5e0e:	cd b7       	in	r28, 0x3d	; 61
    5e10:	de b7       	in	r29, 0x3e	; 62
    5e12:	9a 83       	std	Y+2, r25	; 0x02
    5e14:	89 83       	std	Y+1, r24	; 0x01
    5e16:	7c 83       	std	Y+4, r23	; 0x04
    5e18:	6b 83       	std	Y+3, r22	; 0x03
	if (message != NULL)
    5e1a:	8b 81       	ldd	r24, Y+3	; 0x03
    5e1c:	9c 81       	ldd	r25, Y+4	; 0x04
    5e1e:	00 97       	sbiw	r24, 0x00	; 0
    5e20:	09 f4       	brne	.+2      	; 0x5e24 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x1e>
    5e22:	f2 c2       	rjmp	.+1508   	; 0x6408 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x602>
	{
		decode (message,msgType);
    5e24:	89 81       	ldd	r24, Y+1	; 0x01
    5e26:	9a 81       	ldd	r25, Y+2	; 0x02
    5e28:	ac 01       	movw	r20, r24
    5e2a:	4e 5f       	subi	r20, 0xFE	; 254
    5e2c:	5f 4f       	sbci	r21, 0xFF	; 255
    5e2e:	89 81       	ldd	r24, Y+1	; 0x01
    5e30:	9a 81       	ldd	r25, Y+2	; 0x02
    5e32:	9e 01       	movw	r18, r28
    5e34:	2d 5f       	subi	r18, 0xFD	; 253
    5e36:	3f 4f       	sbci	r19, 0xFF	; 255
    5e38:	b9 01       	movw	r22, r18
    5e3a:	0e 94 2d 26 	call	0x4c5a	; 0x4c5a <_ZN10helicopter8messages7Message6decodeERPhRh>
		decode (message,MagYaw);
    5e3e:	89 81       	ldd	r24, Y+1	; 0x01
    5e40:	9a 81       	ldd	r25, Y+2	; 0x02
    5e42:	ac 01       	movw	r20, r24
    5e44:	4b 5f       	subi	r20, 0xFB	; 251
    5e46:	5f 4f       	sbci	r21, 0xFF	; 255
    5e48:	89 81       	ldd	r24, Y+1	; 0x01
    5e4a:	9a 81       	ldd	r25, Y+2	; 0x02
    5e4c:	9e 01       	movw	r18, r28
    5e4e:	2d 5f       	subi	r18, 0xFD	; 253
    5e50:	3f 4f       	sbci	r19, 0xFF	; 255
    5e52:	b9 01       	movw	r22, r18
    5e54:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawVelocityDegreesPerSecond);
    5e58:	89 81       	ldd	r24, Y+1	; 0x01
    5e5a:	9a 81       	ldd	r25, Y+2	; 0x02
    5e5c:	ac 01       	movw	r20, r24
    5e5e:	47 5f       	subi	r20, 0xF7	; 247
    5e60:	5f 4f       	sbci	r21, 0xFF	; 255
    5e62:	89 81       	ldd	r24, Y+1	; 0x01
    5e64:	9a 81       	ldd	r25, Y+2	; 0x02
    5e66:	9e 01       	movw	r18, r28
    5e68:	2d 5f       	subi	r18, 0xFD	; 253
    5e6a:	3f 4f       	sbci	r19, 0xFF	; 255
    5e6c:	b9 01       	movw	r22, r18
    5e6e:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawIntegral);
    5e72:	89 81       	ldd	r24, Y+1	; 0x01
    5e74:	9a 81       	ldd	r25, Y+2	; 0x02
    5e76:	ac 01       	movw	r20, r24
    5e78:	43 5f       	subi	r20, 0xF3	; 243
    5e7a:	5f 4f       	sbci	r21, 0xFF	; 255
    5e7c:	89 81       	ldd	r24, Y+1	; 0x01
    5e7e:	9a 81       	ldd	r25, Y+2	; 0x02
    5e80:	9e 01       	movw	r18, r28
    5e82:	2d 5f       	subi	r18, 0xFD	; 253
    5e84:	3f 4f       	sbci	r19, 0xFF	; 255
    5e86:	b9 01       	movw	r22, r18
    5e88:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawProportional);
    5e8c:	89 81       	ldd	r24, Y+1	; 0x01
    5e8e:	9a 81       	ldd	r25, Y+2	; 0x02
    5e90:	ac 01       	movw	r20, r24
    5e92:	4f 5e       	subi	r20, 0xEF	; 239
    5e94:	5f 4f       	sbci	r21, 0xFF	; 255
    5e96:	89 81       	ldd	r24, Y+1	; 0x01
    5e98:	9a 81       	ldd	r25, Y+2	; 0x02
    5e9a:	9e 01       	movw	r18, r28
    5e9c:	2d 5f       	subi	r18, 0xFD	; 253
    5e9e:	3f 4f       	sbci	r19, 0xFF	; 255
    5ea0:	b9 01       	movw	r22, r18
    5ea2:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawDerivativeError);	
    5ea6:	89 81       	ldd	r24, Y+1	; 0x01
    5ea8:	9a 81       	ldd	r25, Y+2	; 0x02
    5eaa:	ac 01       	movw	r20, r24
    5eac:	4b 5e       	subi	r20, 0xEB	; 235
    5eae:	5f 4f       	sbci	r21, 0xFF	; 255
    5eb0:	89 81       	ldd	r24, Y+1	; 0x01
    5eb2:	9a 81       	ldd	r25, Y+2	; 0x02
    5eb4:	9e 01       	movw	r18, r28
    5eb6:	2d 5f       	subi	r18, 0xFD	; 253
    5eb8:	3f 4f       	sbci	r19, 0xFF	; 255
    5eba:	b9 01       	movw	r22, r18
    5ebc:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawControl);	
    5ec0:	89 81       	ldd	r24, Y+1	; 0x01
    5ec2:	9a 81       	ldd	r25, Y+2	; 0x02
    5ec4:	ac 01       	movw	r20, r24
    5ec6:	47 5e       	subi	r20, 0xE7	; 231
    5ec8:	5f 4f       	sbci	r21, 0xFF	; 255
    5eca:	89 81       	ldd	r24, Y+1	; 0x01
    5ecc:	9a 81       	ldd	r25, Y+2	; 0x02
    5ece:	9e 01       	movw	r18, r28
    5ed0:	2d 5f       	subi	r18, 0xFD	; 253
    5ed2:	3f 4f       	sbci	r19, 0xFF	; 255
    5ed4:	b9 01       	movw	r22, r18
    5ed6:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawIntegralGain);
    5eda:	89 81       	ldd	r24, Y+1	; 0x01
    5edc:	9a 81       	ldd	r25, Y+2	; 0x02
    5ede:	ac 01       	movw	r20, r24
    5ee0:	43 5e       	subi	r20, 0xE3	; 227
    5ee2:	5f 4f       	sbci	r21, 0xFF	; 255
    5ee4:	89 81       	ldd	r24, Y+1	; 0x01
    5ee6:	9a 81       	ldd	r25, Y+2	; 0x02
    5ee8:	9e 01       	movw	r18, r28
    5eea:	2d 5f       	subi	r18, 0xFD	; 253
    5eec:	3f 4f       	sbci	r19, 0xFF	; 255
    5eee:	b9 01       	movw	r22, r18
    5ef0:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawDerivativeGain);
    5ef4:	89 81       	ldd	r24, Y+1	; 0x01
    5ef6:	9a 81       	ldd	r25, Y+2	; 0x02
    5ef8:	ac 01       	movw	r20, r24
    5efa:	4f 5d       	subi	r20, 0xDF	; 223
    5efc:	5f 4f       	sbci	r21, 0xFF	; 255
    5efe:	89 81       	ldd	r24, Y+1	; 0x01
    5f00:	9a 81       	ldd	r25, Y+2	; 0x02
    5f02:	9e 01       	movw	r18, r28
    5f04:	2d 5f       	subi	r18, 0xFD	; 253
    5f06:	3f 4f       	sbci	r19, 0xFF	; 255
    5f08:	b9 01       	movw	r22, r18
    5f0a:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawProportionalGain);
    5f0e:	89 81       	ldd	r24, Y+1	; 0x01
    5f10:	9a 81       	ldd	r25, Y+2	; 0x02
    5f12:	ac 01       	movw	r20, r24
    5f14:	4b 5d       	subi	r20, 0xDB	; 219
    5f16:	5f 4f       	sbci	r21, 0xFF	; 255
    5f18:	89 81       	ldd	r24, Y+1	; 0x01
    5f1a:	9a 81       	ldd	r25, Y+2	; 0x02
    5f1c:	9e 01       	movw	r18, r28
    5f1e:	2d 5f       	subi	r18, 0xFD	; 253
    5f20:	3f 4f       	sbci	r19, 0xFF	; 255
    5f22:	b9 01       	movw	r22, r18
    5f24:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawAntiWindupGain);
    5f28:	89 81       	ldd	r24, Y+1	; 0x01
    5f2a:	9a 81       	ldd	r25, Y+2	; 0x02
    5f2c:	ac 01       	movw	r20, r24
    5f2e:	47 5d       	subi	r20, 0xD7	; 215
    5f30:	5f 4f       	sbci	r21, 0xFF	; 255
    5f32:	89 81       	ldd	r24, Y+1	; 0x01
    5f34:	9a 81       	ldd	r25, Y+2	; 0x02
    5f36:	9e 01       	movw	r18, r28
    5f38:	2d 5f       	subi	r18, 0xFD	; 253
    5f3a:	3f 4f       	sbci	r19, 0xFF	; 255
    5f3c:	b9 01       	movw	r22, r18
    5f3e:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		
		
		

		decode (message, XNEDBodyFrame);
    5f42:	89 81       	ldd	r24, Y+1	; 0x01
    5f44:	9a 81       	ldd	r25, Y+2	; 0x02
    5f46:	ac 01       	movw	r20, r24
    5f48:	43 5d       	subi	r20, 0xD3	; 211
    5f4a:	5f 4f       	sbci	r21, 0xFF	; 255
    5f4c:	89 81       	ldd	r24, Y+1	; 0x01
    5f4e:	9a 81       	ldd	r25, Y+2	; 0x02
    5f50:	9e 01       	movw	r18, r28
    5f52:	2d 5f       	subi	r18, 0xFD	; 253
    5f54:	3f 4f       	sbci	r19, 0xFF	; 255
    5f56:	b9 01       	movw	r22, r18
    5f58:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XVelocityMetersPerSecond);
    5f5c:	89 81       	ldd	r24, Y+1	; 0x01
    5f5e:	9a 81       	ldd	r25, Y+2	; 0x02
    5f60:	ac 01       	movw	r20, r24
    5f62:	4f 5c       	subi	r20, 0xCF	; 207
    5f64:	5f 4f       	sbci	r21, 0xFF	; 255
    5f66:	89 81       	ldd	r24, Y+1	; 0x01
    5f68:	9a 81       	ldd	r25, Y+2	; 0x02
    5f6a:	9e 01       	movw	r18, r28
    5f6c:	2d 5f       	subi	r18, 0xFD	; 253
    5f6e:	3f 4f       	sbci	r19, 0xFF	; 255
    5f70:	b9 01       	movw	r22, r18
    5f72:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ThetaPitchDegrees);
    5f76:	89 81       	ldd	r24, Y+1	; 0x01
    5f78:	9a 81       	ldd	r25, Y+2	; 0x02
    5f7a:	ac 01       	movw	r20, r24
    5f7c:	4b 5c       	subi	r20, 0xCB	; 203
    5f7e:	5f 4f       	sbci	r21, 0xFF	; 255
    5f80:	89 81       	ldd	r24, Y+1	; 0x01
    5f82:	9a 81       	ldd	r25, Y+2	; 0x02
    5f84:	9e 01       	movw	r18, r28
    5f86:	2d 5f       	subi	r18, 0xFD	; 253
    5f88:	3f 4f       	sbci	r19, 0xFF	; 255
    5f8a:	b9 01       	movw	r22, r18
    5f8c:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XIntegral);
    5f90:	89 81       	ldd	r24, Y+1	; 0x01
    5f92:	9a 81       	ldd	r25, Y+2	; 0x02
    5f94:	ac 01       	movw	r20, r24
    5f96:	47 5c       	subi	r20, 0xC7	; 199
    5f98:	5f 4f       	sbci	r21, 0xFF	; 255
    5f9a:	89 81       	ldd	r24, Y+1	; 0x01
    5f9c:	9a 81       	ldd	r25, Y+2	; 0x02
    5f9e:	9e 01       	movw	r18, r28
    5fa0:	2d 5f       	subi	r18, 0xFD	; 253
    5fa2:	3f 4f       	sbci	r19, 0xFF	; 255
    5fa4:	b9 01       	movw	r22, r18
    5fa6:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XProportional);
    5faa:	89 81       	ldd	r24, Y+1	; 0x01
    5fac:	9a 81       	ldd	r25, Y+2	; 0x02
    5fae:	ac 01       	movw	r20, r24
    5fb0:	43 5c       	subi	r20, 0xC3	; 195
    5fb2:	5f 4f       	sbci	r21, 0xFF	; 255
    5fb4:	89 81       	ldd	r24, Y+1	; 0x01
    5fb6:	9a 81       	ldd	r25, Y+2	; 0x02
    5fb8:	9e 01       	movw	r18, r28
    5fba:	2d 5f       	subi	r18, 0xFD	; 253
    5fbc:	3f 4f       	sbci	r19, 0xFF	; 255
    5fbe:	b9 01       	movw	r22, r18
    5fc0:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XDerivativeError);
    5fc4:	89 81       	ldd	r24, Y+1	; 0x01
    5fc6:	9a 81       	ldd	r25, Y+2	; 0x02
    5fc8:	ac 01       	movw	r20, r24
    5fca:	4f 5b       	subi	r20, 0xBF	; 191
    5fcc:	5f 4f       	sbci	r21, 0xFF	; 255
    5fce:	89 81       	ldd	r24, Y+1	; 0x01
    5fd0:	9a 81       	ldd	r25, Y+2	; 0x02
    5fd2:	9e 01       	movw	r18, r28
    5fd4:	2d 5f       	subi	r18, 0xFD	; 253
    5fd6:	3f 4f       	sbci	r19, 0xFF	; 255
    5fd8:	b9 01       	movw	r22, r18
    5fda:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LongitudeControl);
    5fde:	89 81       	ldd	r24, Y+1	; 0x01
    5fe0:	9a 81       	ldd	r25, Y+2	; 0x02
    5fe2:	ac 01       	movw	r20, r24
    5fe4:	4b 5b       	subi	r20, 0xBB	; 187
    5fe6:	5f 4f       	sbci	r21, 0xFF	; 255
    5fe8:	89 81       	ldd	r24, Y+1	; 0x01
    5fea:	9a 81       	ldd	r25, Y+2	; 0x02
    5fec:	9e 01       	movw	r18, r28
    5fee:	2d 5f       	subi	r18, 0xFD	; 253
    5ff0:	3f 4f       	sbci	r19, 0xFF	; 255
    5ff2:	b9 01       	movw	r22, r18
    5ff4:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XIntegralGain);
    5ff8:	89 81       	ldd	r24, Y+1	; 0x01
    5ffa:	9a 81       	ldd	r25, Y+2	; 0x02
    5ffc:	ac 01       	movw	r20, r24
    5ffe:	47 5b       	subi	r20, 0xB7	; 183
    6000:	5f 4f       	sbci	r21, 0xFF	; 255
    6002:	89 81       	ldd	r24, Y+1	; 0x01
    6004:	9a 81       	ldd	r25, Y+2	; 0x02
    6006:	9e 01       	movw	r18, r28
    6008:	2d 5f       	subi	r18, 0xFD	; 253
    600a:	3f 4f       	sbci	r19, 0xFF	; 255
    600c:	b9 01       	movw	r22, r18
    600e:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XDerivativeGain);
    6012:	89 81       	ldd	r24, Y+1	; 0x01
    6014:	9a 81       	ldd	r25, Y+2	; 0x02
    6016:	ac 01       	movw	r20, r24
    6018:	43 5b       	subi	r20, 0xB3	; 179
    601a:	5f 4f       	sbci	r21, 0xFF	; 255
    601c:	89 81       	ldd	r24, Y+1	; 0x01
    601e:	9a 81       	ldd	r25, Y+2	; 0x02
    6020:	9e 01       	movw	r18, r28
    6022:	2d 5f       	subi	r18, 0xFD	; 253
    6024:	3f 4f       	sbci	r19, 0xFF	; 255
    6026:	b9 01       	movw	r22, r18
    6028:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XProportionalGain);
    602c:	89 81       	ldd	r24, Y+1	; 0x01
    602e:	9a 81       	ldd	r25, Y+2	; 0x02
    6030:	ac 01       	movw	r20, r24
    6032:	4f 5a       	subi	r20, 0xAF	; 175
    6034:	5f 4f       	sbci	r21, 0xFF	; 255
    6036:	89 81       	ldd	r24, Y+1	; 0x01
    6038:	9a 81       	ldd	r25, Y+2	; 0x02
    603a:	9e 01       	movw	r18, r28
    603c:	2d 5f       	subi	r18, 0xFD	; 253
    603e:	3f 4f       	sbci	r19, 0xFF	; 255
    6040:	b9 01       	movw	r22, r18
    6042:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XAntiWindupGain);
    6046:	89 81       	ldd	r24, Y+1	; 0x01
    6048:	9a 81       	ldd	r25, Y+2	; 0x02
    604a:	ac 01       	movw	r20, r24
    604c:	4b 5a       	subi	r20, 0xAB	; 171
    604e:	5f 4f       	sbci	r21, 0xFF	; 255
    6050:	89 81       	ldd	r24, Y+1	; 0x01
    6052:	9a 81       	ldd	r25, Y+2	; 0x02
    6054:	9e 01       	movw	r18, r28
    6056:	2d 5f       	subi	r18, 0xFD	; 253
    6058:	3f 4f       	sbci	r19, 0xFF	; 255
    605a:	b9 01       	movw	r22, r18
    605c:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LongitudeInnerLoopGain);
    6060:	89 81       	ldd	r24, Y+1	; 0x01
    6062:	9a 81       	ldd	r25, Y+2	; 0x02
    6064:	ac 01       	movw	r20, r24
    6066:	47 5a       	subi	r20, 0xA7	; 167
    6068:	5f 4f       	sbci	r21, 0xFF	; 255
    606a:	89 81       	ldd	r24, Y+1	; 0x01
    606c:	9a 81       	ldd	r25, Y+2	; 0x02
    606e:	9e 01       	movw	r18, r28
    6070:	2d 5f       	subi	r18, 0xFD	; 253
    6072:	3f 4f       	sbci	r19, 0xFF	; 255
    6074:	b9 01       	movw	r22, r18
    6076:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XLongitudeOuterLoopSetpoint);
    607a:	89 81       	ldd	r24, Y+1	; 0x01
    607c:	9a 81       	ldd	r25, Y+2	; 0x02
    607e:	ac 01       	movw	r20, r24
    6080:	43 5a       	subi	r20, 0xA3	; 163
    6082:	5f 4f       	sbci	r21, 0xFF	; 255
    6084:	89 81       	ldd	r24, Y+1	; 0x01
    6086:	9a 81       	ldd	r25, Y+2	; 0x02
    6088:	9e 01       	movw	r18, r28
    608a:	2d 5f       	subi	r18, 0xFD	; 253
    608c:	3f 4f       	sbci	r19, 0xFF	; 255
    608e:	b9 01       	movw	r22, r18
    6090:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, PitchAngularVelocityRadsPerSecond);
    6094:	89 81       	ldd	r24, Y+1	; 0x01
    6096:	9a 81       	ldd	r25, Y+2	; 0x02
    6098:	ac 01       	movw	r20, r24
    609a:	4f 59       	subi	r20, 0x9F	; 159
    609c:	5f 4f       	sbci	r21, 0xFF	; 255
    609e:	89 81       	ldd	r24, Y+1	; 0x01
    60a0:	9a 81       	ldd	r25, Y+2	; 0x02
    60a2:	9e 01       	movw	r18, r28
    60a4:	2d 5f       	subi	r18, 0xFD	; 253
    60a6:	3f 4f       	sbci	r19, 0xFF	; 255
    60a8:	b9 01       	movw	r22, r18
    60aa:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, PitchAngularVelocityGain);
    60ae:	89 81       	ldd	r24, Y+1	; 0x01
    60b0:	9a 81       	ldd	r25, Y+2	; 0x02
    60b2:	ac 01       	movw	r20, r24
    60b4:	4b 59       	subi	r20, 0x9B	; 155
    60b6:	5f 4f       	sbci	r21, 0xFF	; 255
    60b8:	89 81       	ldd	r24, Y+1	; 0x01
    60ba:	9a 81       	ldd	r25, Y+2	; 0x02
    60bc:	9e 01       	movw	r18, r28
    60be:	2d 5f       	subi	r18, 0xFD	; 253
    60c0:	3f 4f       	sbci	r19, 0xFF	; 255
    60c2:	b9 01       	movw	r22, r18
    60c4:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>

		decode (message, YNEDBodyFrame);
    60c8:	89 81       	ldd	r24, Y+1	; 0x01
    60ca:	9a 81       	ldd	r25, Y+2	; 0x02
    60cc:	ac 01       	movw	r20, r24
    60ce:	47 59       	subi	r20, 0x97	; 151
    60d0:	5f 4f       	sbci	r21, 0xFF	; 255
    60d2:	89 81       	ldd	r24, Y+1	; 0x01
    60d4:	9a 81       	ldd	r25, Y+2	; 0x02
    60d6:	9e 01       	movw	r18, r28
    60d8:	2d 5f       	subi	r18, 0xFD	; 253
    60da:	3f 4f       	sbci	r19, 0xFF	; 255
    60dc:	b9 01       	movw	r22, r18
    60de:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YVelocityMetersPerSecond);
    60e2:	89 81       	ldd	r24, Y+1	; 0x01
    60e4:	9a 81       	ldd	r25, Y+2	; 0x02
    60e6:	ac 01       	movw	r20, r24
    60e8:	43 59       	subi	r20, 0x93	; 147
    60ea:	5f 4f       	sbci	r21, 0xFF	; 255
    60ec:	89 81       	ldd	r24, Y+1	; 0x01
    60ee:	9a 81       	ldd	r25, Y+2	; 0x02
    60f0:	9e 01       	movw	r18, r28
    60f2:	2d 5f       	subi	r18, 0xFD	; 253
    60f4:	3f 4f       	sbci	r19, 0xFF	; 255
    60f6:	b9 01       	movw	r22, r18
    60f8:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, PhiRollDegrees);
    60fc:	89 81       	ldd	r24, Y+1	; 0x01
    60fe:	9a 81       	ldd	r25, Y+2	; 0x02
    6100:	ac 01       	movw	r20, r24
    6102:	4f 58       	subi	r20, 0x8F	; 143
    6104:	5f 4f       	sbci	r21, 0xFF	; 255
    6106:	89 81       	ldd	r24, Y+1	; 0x01
    6108:	9a 81       	ldd	r25, Y+2	; 0x02
    610a:	9e 01       	movw	r18, r28
    610c:	2d 5f       	subi	r18, 0xFD	; 253
    610e:	3f 4f       	sbci	r19, 0xFF	; 255
    6110:	b9 01       	movw	r22, r18
    6112:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YIntegral);
    6116:	89 81       	ldd	r24, Y+1	; 0x01
    6118:	9a 81       	ldd	r25, Y+2	; 0x02
    611a:	ac 01       	movw	r20, r24
    611c:	4b 58       	subi	r20, 0x8B	; 139
    611e:	5f 4f       	sbci	r21, 0xFF	; 255
    6120:	89 81       	ldd	r24, Y+1	; 0x01
    6122:	9a 81       	ldd	r25, Y+2	; 0x02
    6124:	9e 01       	movw	r18, r28
    6126:	2d 5f       	subi	r18, 0xFD	; 253
    6128:	3f 4f       	sbci	r19, 0xFF	; 255
    612a:	b9 01       	movw	r22, r18
    612c:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YProportional);
    6130:	89 81       	ldd	r24, Y+1	; 0x01
    6132:	9a 81       	ldd	r25, Y+2	; 0x02
    6134:	ac 01       	movw	r20, r24
    6136:	47 58       	subi	r20, 0x87	; 135
    6138:	5f 4f       	sbci	r21, 0xFF	; 255
    613a:	89 81       	ldd	r24, Y+1	; 0x01
    613c:	9a 81       	ldd	r25, Y+2	; 0x02
    613e:	9e 01       	movw	r18, r28
    6140:	2d 5f       	subi	r18, 0xFD	; 253
    6142:	3f 4f       	sbci	r19, 0xFF	; 255
    6144:	b9 01       	movw	r22, r18
    6146:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YDerivativeError);
    614a:	89 81       	ldd	r24, Y+1	; 0x01
    614c:	9a 81       	ldd	r25, Y+2	; 0x02
    614e:	ac 01       	movw	r20, r24
    6150:	43 58       	subi	r20, 0x83	; 131
    6152:	5f 4f       	sbci	r21, 0xFF	; 255
    6154:	89 81       	ldd	r24, Y+1	; 0x01
    6156:	9a 81       	ldd	r25, Y+2	; 0x02
    6158:	9e 01       	movw	r18, r28
    615a:	2d 5f       	subi	r18, 0xFD	; 253
    615c:	3f 4f       	sbci	r19, 0xFF	; 255
    615e:	b9 01       	movw	r22, r18
    6160:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LateralControl);
    6164:	89 81       	ldd	r24, Y+1	; 0x01
    6166:	9a 81       	ldd	r25, Y+2	; 0x02
    6168:	ac 01       	movw	r20, r24
    616a:	4f 57       	subi	r20, 0x7F	; 127
    616c:	5f 4f       	sbci	r21, 0xFF	; 255
    616e:	89 81       	ldd	r24, Y+1	; 0x01
    6170:	9a 81       	ldd	r25, Y+2	; 0x02
    6172:	9e 01       	movw	r18, r28
    6174:	2d 5f       	subi	r18, 0xFD	; 253
    6176:	3f 4f       	sbci	r19, 0xFF	; 255
    6178:	b9 01       	movw	r22, r18
    617a:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YIntegralGain);
    617e:	89 81       	ldd	r24, Y+1	; 0x01
    6180:	9a 81       	ldd	r25, Y+2	; 0x02
    6182:	ac 01       	movw	r20, r24
    6184:	4b 57       	subi	r20, 0x7B	; 123
    6186:	5f 4f       	sbci	r21, 0xFF	; 255
    6188:	89 81       	ldd	r24, Y+1	; 0x01
    618a:	9a 81       	ldd	r25, Y+2	; 0x02
    618c:	9e 01       	movw	r18, r28
    618e:	2d 5f       	subi	r18, 0xFD	; 253
    6190:	3f 4f       	sbci	r19, 0xFF	; 255
    6192:	b9 01       	movw	r22, r18
    6194:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YDerivativeGain);
    6198:	89 81       	ldd	r24, Y+1	; 0x01
    619a:	9a 81       	ldd	r25, Y+2	; 0x02
    619c:	ac 01       	movw	r20, r24
    619e:	47 57       	subi	r20, 0x77	; 119
    61a0:	5f 4f       	sbci	r21, 0xFF	; 255
    61a2:	89 81       	ldd	r24, Y+1	; 0x01
    61a4:	9a 81       	ldd	r25, Y+2	; 0x02
    61a6:	9e 01       	movw	r18, r28
    61a8:	2d 5f       	subi	r18, 0xFD	; 253
    61aa:	3f 4f       	sbci	r19, 0xFF	; 255
    61ac:	b9 01       	movw	r22, r18
    61ae:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YProportionalGain);
    61b2:	89 81       	ldd	r24, Y+1	; 0x01
    61b4:	9a 81       	ldd	r25, Y+2	; 0x02
    61b6:	ac 01       	movw	r20, r24
    61b8:	43 57       	subi	r20, 0x73	; 115
    61ba:	5f 4f       	sbci	r21, 0xFF	; 255
    61bc:	89 81       	ldd	r24, Y+1	; 0x01
    61be:	9a 81       	ldd	r25, Y+2	; 0x02
    61c0:	9e 01       	movw	r18, r28
    61c2:	2d 5f       	subi	r18, 0xFD	; 253
    61c4:	3f 4f       	sbci	r19, 0xFF	; 255
    61c6:	b9 01       	movw	r22, r18
    61c8:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YAntiWindupGain);
    61cc:	89 81       	ldd	r24, Y+1	; 0x01
    61ce:	9a 81       	ldd	r25, Y+2	; 0x02
    61d0:	ac 01       	movw	r20, r24
    61d2:	4f 56       	subi	r20, 0x6F	; 111
    61d4:	5f 4f       	sbci	r21, 0xFF	; 255
    61d6:	89 81       	ldd	r24, Y+1	; 0x01
    61d8:	9a 81       	ldd	r25, Y+2	; 0x02
    61da:	9e 01       	movw	r18, r28
    61dc:	2d 5f       	subi	r18, 0xFD	; 253
    61de:	3f 4f       	sbci	r19, 0xFF	; 255
    61e0:	b9 01       	movw	r22, r18
    61e2:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LateralInnerLoopGain);
    61e6:	89 81       	ldd	r24, Y+1	; 0x01
    61e8:	9a 81       	ldd	r25, Y+2	; 0x02
    61ea:	ac 01       	movw	r20, r24
    61ec:	4b 56       	subi	r20, 0x6B	; 107
    61ee:	5f 4f       	sbci	r21, 0xFF	; 255
    61f0:	89 81       	ldd	r24, Y+1	; 0x01
    61f2:	9a 81       	ldd	r25, Y+2	; 0x02
    61f4:	9e 01       	movw	r18, r28
    61f6:	2d 5f       	subi	r18, 0xFD	; 253
    61f8:	3f 4f       	sbci	r19, 0xFF	; 255
    61fa:	b9 01       	movw	r22, r18
    61fc:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YLateralOuterLoopSetpoint);
    6200:	89 81       	ldd	r24, Y+1	; 0x01
    6202:	9a 81       	ldd	r25, Y+2	; 0x02
    6204:	ac 01       	movw	r20, r24
    6206:	47 56       	subi	r20, 0x67	; 103
    6208:	5f 4f       	sbci	r21, 0xFF	; 255
    620a:	89 81       	ldd	r24, Y+1	; 0x01
    620c:	9a 81       	ldd	r25, Y+2	; 0x02
    620e:	9e 01       	movw	r18, r28
    6210:	2d 5f       	subi	r18, 0xFD	; 253
    6212:	3f 4f       	sbci	r19, 0xFF	; 255
    6214:	b9 01       	movw	r22, r18
    6216:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, RollAngularVelocityRadsPerSecond);
    621a:	89 81       	ldd	r24, Y+1	; 0x01
    621c:	9a 81       	ldd	r25, Y+2	; 0x02
    621e:	ac 01       	movw	r20, r24
    6220:	43 56       	subi	r20, 0x63	; 99
    6222:	5f 4f       	sbci	r21, 0xFF	; 255
    6224:	89 81       	ldd	r24, Y+1	; 0x01
    6226:	9a 81       	ldd	r25, Y+2	; 0x02
    6228:	9e 01       	movw	r18, r28
    622a:	2d 5f       	subi	r18, 0xFD	; 253
    622c:	3f 4f       	sbci	r19, 0xFF	; 255
    622e:	b9 01       	movw	r22, r18
    6230:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, RollAngularVelocityGain);
    6234:	89 81       	ldd	r24, Y+1	; 0x01
    6236:	9a 81       	ldd	r25, Y+2	; 0x02
    6238:	ac 01       	movw	r20, r24
    623a:	4f 55       	subi	r20, 0x5F	; 95
    623c:	5f 4f       	sbci	r21, 0xFF	; 255
    623e:	89 81       	ldd	r24, Y+1	; 0x01
    6240:	9a 81       	ldd	r25, Y+2	; 0x02
    6242:	9e 01       	movw	r18, r28
    6244:	2d 5f       	subi	r18, 0xFD	; 253
    6246:	3f 4f       	sbci	r19, 0xFF	; 255
    6248:	b9 01       	movw	r22, r18
    624a:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		

		decode (message, AltitudeFeetAgl);
    624e:	89 81       	ldd	r24, Y+1	; 0x01
    6250:	9a 81       	ldd	r25, Y+2	; 0x02
    6252:	ac 01       	movw	r20, r24
    6254:	4b 55       	subi	r20, 0x5B	; 91
    6256:	5f 4f       	sbci	r21, 0xFF	; 255
    6258:	89 81       	ldd	r24, Y+1	; 0x01
    625a:	9a 81       	ldd	r25, Y+2	; 0x02
    625c:	9e 01       	movw	r18, r28
    625e:	2d 5f       	subi	r18, 0xFD	; 253
    6260:	3f 4f       	sbci	r19, 0xFF	; 255
    6262:	b9 01       	movw	r22, r18
    6264:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZVelocityMetersPerSecond);
    6268:	89 81       	ldd	r24, Y+1	; 0x01
    626a:	9a 81       	ldd	r25, Y+2	; 0x02
    626c:	ac 01       	movw	r20, r24
    626e:	47 55       	subi	r20, 0x57	; 87
    6270:	5f 4f       	sbci	r21, 0xFF	; 255
    6272:	89 81       	ldd	r24, Y+1	; 0x01
    6274:	9a 81       	ldd	r25, Y+2	; 0x02
    6276:	9e 01       	movw	r18, r28
    6278:	2d 5f       	subi	r18, 0xFD	; 253
    627a:	3f 4f       	sbci	r19, 0xFF	; 255
    627c:	b9 01       	movw	r22, r18
    627e:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZIntegral);
    6282:	89 81       	ldd	r24, Y+1	; 0x01
    6284:	9a 81       	ldd	r25, Y+2	; 0x02
    6286:	ac 01       	movw	r20, r24
    6288:	43 55       	subi	r20, 0x53	; 83
    628a:	5f 4f       	sbci	r21, 0xFF	; 255
    628c:	89 81       	ldd	r24, Y+1	; 0x01
    628e:	9a 81       	ldd	r25, Y+2	; 0x02
    6290:	9e 01       	movw	r18, r28
    6292:	2d 5f       	subi	r18, 0xFD	; 253
    6294:	3f 4f       	sbci	r19, 0xFF	; 255
    6296:	b9 01       	movw	r22, r18
    6298:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZProportional);
    629c:	89 81       	ldd	r24, Y+1	; 0x01
    629e:	9a 81       	ldd	r25, Y+2	; 0x02
    62a0:	ac 01       	movw	r20, r24
    62a2:	4f 54       	subi	r20, 0x4F	; 79
    62a4:	5f 4f       	sbci	r21, 0xFF	; 255
    62a6:	89 81       	ldd	r24, Y+1	; 0x01
    62a8:	9a 81       	ldd	r25, Y+2	; 0x02
    62aa:	9e 01       	movw	r18, r28
    62ac:	2d 5f       	subi	r18, 0xFD	; 253
    62ae:	3f 4f       	sbci	r19, 0xFF	; 255
    62b0:	b9 01       	movw	r22, r18
    62b2:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZDerivativeError);
    62b6:	89 81       	ldd	r24, Y+1	; 0x01
    62b8:	9a 81       	ldd	r25, Y+2	; 0x02
    62ba:	ac 01       	movw	r20, r24
    62bc:	4b 54       	subi	r20, 0x4B	; 75
    62be:	5f 4f       	sbci	r21, 0xFF	; 255
    62c0:	89 81       	ldd	r24, Y+1	; 0x01
    62c2:	9a 81       	ldd	r25, Y+2	; 0x02
    62c4:	9e 01       	movw	r18, r28
    62c6:	2d 5f       	subi	r18, 0xFD	; 253
    62c8:	3f 4f       	sbci	r19, 0xFF	; 255
    62ca:	b9 01       	movw	r22, r18
    62cc:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, MainRotorCollectiveControl);
    62d0:	89 81       	ldd	r24, Y+1	; 0x01
    62d2:	9a 81       	ldd	r25, Y+2	; 0x02
    62d4:	ac 01       	movw	r20, r24
    62d6:	47 54       	subi	r20, 0x47	; 71
    62d8:	5f 4f       	sbci	r21, 0xFF	; 255
    62da:	89 81       	ldd	r24, Y+1	; 0x01
    62dc:	9a 81       	ldd	r25, Y+2	; 0x02
    62de:	9e 01       	movw	r18, r28
    62e0:	2d 5f       	subi	r18, 0xFD	; 253
    62e2:	3f 4f       	sbci	r19, 0xFF	; 255
    62e4:	b9 01       	movw	r22, r18
    62e6:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZIntegralGain);
    62ea:	89 81       	ldd	r24, Y+1	; 0x01
    62ec:	9a 81       	ldd	r25, Y+2	; 0x02
    62ee:	ac 01       	movw	r20, r24
    62f0:	43 54       	subi	r20, 0x43	; 67
    62f2:	5f 4f       	sbci	r21, 0xFF	; 255
    62f4:	89 81       	ldd	r24, Y+1	; 0x01
    62f6:	9a 81       	ldd	r25, Y+2	; 0x02
    62f8:	9e 01       	movw	r18, r28
    62fa:	2d 5f       	subi	r18, 0xFD	; 253
    62fc:	3f 4f       	sbci	r19, 0xFF	; 255
    62fe:	b9 01       	movw	r22, r18
    6300:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZDerivativeGain);
    6304:	89 81       	ldd	r24, Y+1	; 0x01
    6306:	9a 81       	ldd	r25, Y+2	; 0x02
    6308:	ac 01       	movw	r20, r24
    630a:	4f 53       	subi	r20, 0x3F	; 63
    630c:	5f 4f       	sbci	r21, 0xFF	; 255
    630e:	89 81       	ldd	r24, Y+1	; 0x01
    6310:	9a 81       	ldd	r25, Y+2	; 0x02
    6312:	9e 01       	movw	r18, r28
    6314:	2d 5f       	subi	r18, 0xFD	; 253
    6316:	3f 4f       	sbci	r19, 0xFF	; 255
    6318:	b9 01       	movw	r22, r18
    631a:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZProportionalGain);
    631e:	89 81       	ldd	r24, Y+1	; 0x01
    6320:	9a 81       	ldd	r25, Y+2	; 0x02
    6322:	ac 01       	movw	r20, r24
    6324:	4b 53       	subi	r20, 0x3B	; 59
    6326:	5f 4f       	sbci	r21, 0xFF	; 255
    6328:	89 81       	ldd	r24, Y+1	; 0x01
    632a:	9a 81       	ldd	r25, Y+2	; 0x02
    632c:	9e 01       	movw	r18, r28
    632e:	2d 5f       	subi	r18, 0xFD	; 253
    6330:	3f 4f       	sbci	r19, 0xFF	; 255
    6332:	b9 01       	movw	r22, r18
    6334:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZAntiWindupGain);
    6338:	89 81       	ldd	r24, Y+1	; 0x01
    633a:	9a 81       	ldd	r25, Y+2	; 0x02
    633c:	ac 01       	movw	r20, r24
    633e:	47 53       	subi	r20, 0x37	; 55
    6340:	5f 4f       	sbci	r21, 0xFF	; 255
    6342:	89 81       	ldd	r24, Y+1	; 0x01
    6344:	9a 81       	ldd	r25, Y+2	; 0x02
    6346:	9e 01       	movw	r18, r28
    6348:	2d 5f       	subi	r18, 0xFD	; 253
    634a:	3f 4f       	sbci	r19, 0xFF	; 255
    634c:	b9 01       	movw	r22, r18
    634e:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZNEDBodyFrame);
    6352:	89 81       	ldd	r24, Y+1	; 0x01
    6354:	9a 81       	ldd	r25, Y+2	; 0x02
    6356:	ac 01       	movw	r20, r24
    6358:	43 53       	subi	r20, 0x33	; 51
    635a:	5f 4f       	sbci	r21, 0xFF	; 255
    635c:	89 81       	ldd	r24, Y+1	; 0x01
    635e:	9a 81       	ldd	r25, Y+2	; 0x02
    6360:	9e 01       	movw	r18, r28
    6362:	2d 5f       	subi	r18, 0xFD	; 253
    6364:	3f 4f       	sbci	r19, 0xFF	; 255
    6366:	b9 01       	movw	r22, r18
    6368:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		
	
		decode (message, LatitudeDegrees);
    636c:	89 81       	ldd	r24, Y+1	; 0x01
    636e:	9a 81       	ldd	r25, Y+2	; 0x02
    6370:	ac 01       	movw	r20, r24
    6372:	4f 52       	subi	r20, 0x2F	; 47
    6374:	5f 4f       	sbci	r21, 0xFF	; 255
    6376:	89 81       	ldd	r24, Y+1	; 0x01
    6378:	9a 81       	ldd	r25, Y+2	; 0x02
    637a:	9e 01       	movw	r18, r28
    637c:	2d 5f       	subi	r18, 0xFD	; 253
    637e:	3f 4f       	sbci	r19, 0xFF	; 255
    6380:	b9 01       	movw	r22, r18
    6382:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LongitudeDegrees);
    6386:	89 81       	ldd	r24, Y+1	; 0x01
    6388:	9a 81       	ldd	r25, Y+2	; 0x02
    638a:	ac 01       	movw	r20, r24
    638c:	4b 52       	subi	r20, 0x2B	; 43
    638e:	5f 4f       	sbci	r21, 0xFF	; 255
    6390:	89 81       	ldd	r24, Y+1	; 0x01
    6392:	9a 81       	ldd	r25, Y+2	; 0x02
    6394:	9e 01       	movw	r18, r28
    6396:	2d 5f       	subi	r18, 0xFD	; 253
    6398:	3f 4f       	sbci	r19, 0xFF	; 255
    639a:	b9 01       	movw	r22, r18
    639c:	0e 94 88 26 	call	0x4d10	; 0x4d10 <_ZN10helicopter8messages7Message6decodeERPhRf>
						
		decode (message,Timeouts);
    63a0:	89 81       	ldd	r24, Y+1	; 0x01
    63a2:	9a 81       	ldd	r25, Y+2	; 0x02
    63a4:	ac 01       	movw	r20, r24
    63a6:	47 52       	subi	r20, 0x27	; 39
    63a8:	5f 4f       	sbci	r21, 0xFF	; 255
    63aa:	89 81       	ldd	r24, Y+1	; 0x01
    63ac:	9a 81       	ldd	r25, Y+2	; 0x02
    63ae:	9e 01       	movw	r18, r28
    63b0:	2d 5f       	subi	r18, 0xFD	; 253
    63b2:	3f 4f       	sbci	r19, 0xFF	; 255
    63b4:	b9 01       	movw	r22, r18
    63b6:	0e 94 5a 26 	call	0x4cb4	; 0x4cb4 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message,UnrecognizedMsgTypes);
    63ba:	89 81       	ldd	r24, Y+1	; 0x01
    63bc:	9a 81       	ldd	r25, Y+2	; 0x02
    63be:	ac 01       	movw	r20, r24
    63c0:	43 52       	subi	r20, 0x23	; 35
    63c2:	5f 4f       	sbci	r21, 0xFF	; 255
    63c4:	89 81       	ldd	r24, Y+1	; 0x01
    63c6:	9a 81       	ldd	r25, Y+2	; 0x02
    63c8:	9e 01       	movw	r18, r28
    63ca:	2d 5f       	subi	r18, 0xFD	; 253
    63cc:	3f 4f       	sbci	r19, 0xFF	; 255
    63ce:	b9 01       	movw	r22, r18
    63d0:	0e 94 5a 26 	call	0x4cb4	; 0x4cb4 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message,ChecksumErrors);
    63d4:	89 81       	ldd	r24, Y+1	; 0x01
    63d6:	9a 81       	ldd	r25, Y+2	; 0x02
    63d8:	ac 01       	movw	r20, r24
    63da:	4f 51       	subi	r20, 0x1F	; 31
    63dc:	5f 4f       	sbci	r21, 0xFF	; 255
    63de:	89 81       	ldd	r24, Y+1	; 0x01
    63e0:	9a 81       	ldd	r25, Y+2	; 0x02
    63e2:	9e 01       	movw	r18, r28
    63e4:	2d 5f       	subi	r18, 0xFD	; 253
    63e6:	3f 4f       	sbci	r19, 0xFF	; 255
    63e8:	b9 01       	movw	r22, r18
    63ea:	0e 94 5a 26 	call	0x4cb4	; 0x4cb4 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message,NumOfBlownFrames);
    63ee:	89 81       	ldd	r24, Y+1	; 0x01
    63f0:	9a 81       	ldd	r25, Y+2	; 0x02
    63f2:	ac 01       	movw	r20, r24
    63f4:	4b 51       	subi	r20, 0x1B	; 27
    63f6:	5f 4f       	sbci	r21, 0xFF	; 255
    63f8:	89 81       	ldd	r24, Y+1	; 0x01
    63fa:	9a 81       	ldd	r25, Y+2	; 0x02
    63fc:	9e 01       	movw	r18, r28
    63fe:	2d 5f       	subi	r18, 0xFD	; 253
    6400:	3f 4f       	sbci	r19, 0xFF	; 255
    6402:	b9 01       	movw	r22, r18
    6404:	0e 94 5a 26 	call	0x4cb4	; 0x4cb4 <_ZN10helicopter8messages7Message6decodeERPhRl>
	}
}
    6408:	0f 90       	pop	r0
    640a:	0f 90       	pop	r0
    640c:	0f 90       	pop	r0
    640e:	0f 90       	pop	r0
    6410:	df 91       	pop	r29
    6412:	cf 91       	pop	r28
    6414:	08 95       	ret

00006416 <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh>:

SystemTelemetryMessage* SystemTelemetryMessage::buildMessageSt(byte *message)
{
    6416:	0f 93       	push	r16
    6418:	1f 93       	push	r17
    641a:	cf 93       	push	r28
    641c:	df 93       	push	r29
    641e:	00 d0       	rcall	.+0      	; 0x6420 <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh+0xa>
    6420:	1f 92       	push	r1
    6422:	cd b7       	in	r28, 0x3d	; 61
    6424:	de b7       	in	r29, 0x3e	; 62
    6426:	9c 83       	std	Y+4, r25	; 0x04
    6428:	8b 83       	std	Y+3, r24	; 0x03
	SystemTelemetryMessage *msg = new SystemTelemetryMessage();
    642a:	89 ee       	ldi	r24, 0xE9	; 233
    642c:	90 e0       	ldi	r25, 0x00	; 0
    642e:	0e 94 12 40 	call	0x8024	; 0x8024 <_Znwj>
    6432:	8c 01       	movw	r16, r24
    6434:	c8 01       	movw	r24, r16
    6436:	0e 94 be 29 	call	0x537c	; 0x537c <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>
    643a:	1a 83       	std	Y+2, r17	; 0x02
    643c:	09 83       	std	Y+1, r16	; 0x01
	msg->buildMessage(message);
    643e:	89 81       	ldd	r24, Y+1	; 0x01
    6440:	9a 81       	ldd	r25, Y+2	; 0x02
    6442:	fc 01       	movw	r30, r24
    6444:	80 81       	ld	r24, Z
    6446:	91 81       	ldd	r25, Z+1	; 0x01
    6448:	06 96       	adiw	r24, 0x06	; 6
    644a:	fc 01       	movw	r30, r24
    644c:	20 81       	ld	r18, Z
    644e:	31 81       	ldd	r19, Z+1	; 0x01
    6450:	4b 81       	ldd	r20, Y+3	; 0x03
    6452:	5c 81       	ldd	r21, Y+4	; 0x04
    6454:	89 81       	ldd	r24, Y+1	; 0x01
    6456:	9a 81       	ldd	r25, Y+2	; 0x02
    6458:	ba 01       	movw	r22, r20
    645a:	f9 01       	movw	r30, r18
    645c:	19 95       	eicall
	
	return msg;
    645e:	89 81       	ldd	r24, Y+1	; 0x01
    6460:	9a 81       	ldd	r25, Y+2	; 0x02
}
    6462:	0f 90       	pop	r0
    6464:	0f 90       	pop	r0
    6466:	0f 90       	pop	r0
    6468:	0f 90       	pop	r0
    646a:	df 91       	pop	r29
    646c:	cf 91       	pop	r28
    646e:	1f 91       	pop	r17
    6470:	0f 91       	pop	r16
    6472:	08 95       	ret

00006474 <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE>:

SystemTelemetryMessage * SystemTelemetryMessage::buildMessageFromModel(SystemModel *model)
{
    6474:	0f 93       	push	r16
    6476:	1f 93       	push	r17
    6478:	cf 93       	push	r28
    647a:	df 93       	push	r29
    647c:	00 d0       	rcall	.+0      	; 0x647e <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE+0xa>
    647e:	1f 92       	push	r1
    6480:	cd b7       	in	r28, 0x3d	; 61
    6482:	de b7       	in	r29, 0x3e	; 62
    6484:	9c 83       	std	Y+4, r25	; 0x04
    6486:	8b 83       	std	Y+3, r24	; 0x03
	SystemTelemetryMessage *message = new SystemTelemetryMessage();
    6488:	89 ee       	ldi	r24, 0xE9	; 233
    648a:	90 e0       	ldi	r25, 0x00	; 0
    648c:	0e 94 12 40 	call	0x8024	; 0x8024 <_Znwj>
    6490:	8c 01       	movw	r16, r24
    6492:	c8 01       	movw	r24, r16
    6494:	0e 94 be 29 	call	0x537c	; 0x537c <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>
    6498:	1a 83       	std	Y+2, r17	; 0x02
    649a:	09 83       	std	Y+1, r16	; 0x01
	
	message->MagYaw = model->MagYawDegrees();
    649c:	8b 81       	ldd	r24, Y+3	; 0x03
    649e:	9c 81       	ldd	r25, Y+4	; 0x04
    64a0:	0e 94 37 01 	call	0x26e	; 0x26e <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>
    64a4:	dc 01       	movw	r26, r24
    64a6:	cb 01       	movw	r24, r22
    64a8:	29 81       	ldd	r18, Y+1	; 0x01
    64aa:	3a 81       	ldd	r19, Y+2	; 0x02
    64ac:	f9 01       	movw	r30, r18
    64ae:	85 83       	std	Z+5, r24	; 0x05
    64b0:	96 83       	std	Z+6, r25	; 0x06
    64b2:	a7 83       	std	Z+7, r26	; 0x07
    64b4:	b0 87       	std	Z+8, r27	; 0x08
	message->YawDerivativeError = model->YawDerivativeError();
    64b6:	8b 81       	ldd	r24, Y+3	; 0x03
    64b8:	9c 81       	ldd	r25, Y+4	; 0x04
    64ba:	0e 94 0c 27 	call	0x4e18	; 0x4e18 <_ZNK10helicopter5model11SystemModel18YawDerivativeErrorEv>
    64be:	dc 01       	movw	r26, r24
    64c0:	cb 01       	movw	r24, r22
    64c2:	29 81       	ldd	r18, Y+1	; 0x01
    64c4:	3a 81       	ldd	r19, Y+2	; 0x02
    64c6:	f9 01       	movw	r30, r18
    64c8:	85 8b       	std	Z+21, r24	; 0x15
    64ca:	96 8b       	std	Z+22, r25	; 0x16
    64cc:	a7 8b       	std	Z+23, r26	; 0x17
    64ce:	b0 8f       	std	Z+24, r27	; 0x18
	message->YawIntegral = model->YawIntegral();
    64d0:	8b 81       	ldd	r24, Y+3	; 0x03
    64d2:	9c 81       	ldd	r25, Y+4	; 0x04
    64d4:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>
    64d8:	dc 01       	movw	r26, r24
    64da:	cb 01       	movw	r24, r22
    64dc:	29 81       	ldd	r18, Y+1	; 0x01
    64de:	3a 81       	ldd	r19, Y+2	; 0x02
    64e0:	f9 01       	movw	r30, r18
    64e2:	85 87       	std	Z+13, r24	; 0x0d
    64e4:	96 87       	std	Z+14, r25	; 0x0e
    64e6:	a7 87       	std	Z+15, r26	; 0x0f
    64e8:	b0 8b       	std	Z+16, r27	; 0x10
	message->YawProportional = model->YawProportional();
    64ea:	8b 81       	ldd	r24, Y+3	; 0x03
    64ec:	9c 81       	ldd	r25, Y+4	; 0x04
    64ee:	0e 94 f6 26 	call	0x4dec	; 0x4dec <_ZNK10helicopter5model11SystemModel15YawProportionalEv>
    64f2:	dc 01       	movw	r26, r24
    64f4:	cb 01       	movw	r24, r22
    64f6:	29 81       	ldd	r18, Y+1	; 0x01
    64f8:	3a 81       	ldd	r19, Y+2	; 0x02
    64fa:	f9 01       	movw	r30, r18
    64fc:	81 8b       	std	Z+17, r24	; 0x11
    64fe:	92 8b       	std	Z+18, r25	; 0x12
    6500:	a3 8b       	std	Z+19, r26	; 0x13
    6502:	b4 8b       	std	Z+20, r27	; 0x14
	message->YawVelocityDegreesPerSecond = model->YawVelocityDegreesPerSecond();
    6504:	8b 81       	ldd	r24, Y+3	; 0x03
    6506:	9c 81       	ldd	r25, Y+4	; 0x04
    6508:	0e 94 cf 01 	call	0x39e	; 0x39e <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>
    650c:	dc 01       	movw	r26, r24
    650e:	cb 01       	movw	r24, r22
    6510:	29 81       	ldd	r18, Y+1	; 0x01
    6512:	3a 81       	ldd	r19, Y+2	; 0x02
    6514:	f9 01       	movw	r30, r18
    6516:	81 87       	std	Z+9, r24	; 0x09
    6518:	92 87       	std	Z+10, r25	; 0x0a
    651a:	a3 87       	std	Z+11, r26	; 0x0b
    651c:	b4 87       	std	Z+12, r27	; 0x0c
	message->YawControl = model->YawControl();
    651e:	8b 81       	ldd	r24, Y+3	; 0x03
    6520:	9c 81       	ldd	r25, Y+4	; 0x04
    6522:	0e 94 63 01 	call	0x2c6	; 0x2c6 <_ZNK10helicopter5model11SystemModel10YawControlEv>
    6526:	dc 01       	movw	r26, r24
    6528:	cb 01       	movw	r24, r22
    652a:	29 81       	ldd	r18, Y+1	; 0x01
    652c:	3a 81       	ldd	r19, Y+2	; 0x02
    652e:	f9 01       	movw	r30, r18
    6530:	81 8f       	std	Z+25, r24	; 0x19
    6532:	92 8f       	std	Z+26, r25	; 0x1a
    6534:	a3 8f       	std	Z+27, r26	; 0x1b
    6536:	b4 8f       	std	Z+28, r27	; 0x1c
	

	message->ThetaPitchDegrees = model->ThetaPitchDegrees();
    6538:	8b 81       	ldd	r24, Y+3	; 0x03
    653a:	9c 81       	ldd	r25, Y+4	; 0x04
    653c:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <_ZNK10helicopter5model11SystemModel17ThetaPitchDegreesEv>
    6540:	dc 01       	movw	r26, r24
    6542:	cb 01       	movw	r24, r22
    6544:	29 81       	ldd	r18, Y+1	; 0x01
    6546:	3a 81       	ldd	r19, Y+2	; 0x02
    6548:	f9 01       	movw	r30, r18
    654a:	85 ab       	std	Z+53, r24	; 0x35
    654c:	96 ab       	std	Z+54, r25	; 0x36
    654e:	a7 ab       	std	Z+55, r26	; 0x37
    6550:	b0 af       	std	Z+56, r27	; 0x38
	message->XNEDBodyFrame = model->XNEDBodyFrame();
    6552:	8b 81       	ldd	r24, Y+3	; 0x03
    6554:	9c 81       	ldd	r25, Y+4	; 0x04
    6556:	0e 94 71 02 	call	0x4e2	; 0x4e2 <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>
    655a:	dc 01       	movw	r26, r24
    655c:	cb 01       	movw	r24, r22
    655e:	29 81       	ldd	r18, Y+1	; 0x01
    6560:	3a 81       	ldd	r19, Y+2	; 0x02
    6562:	f9 01       	movw	r30, r18
    6564:	85 a7       	std	Z+45, r24	; 0x2d
    6566:	96 a7       	std	Z+46, r25	; 0x2e
    6568:	a7 a7       	std	Z+47, r26	; 0x2f
    656a:	b0 ab       	std	Z+48, r27	; 0x30
	message->XDerivativeError = model->XDerivativeError();
    656c:	8b 81       	ldd	r24, Y+3	; 0x03
    656e:	9c 81       	ldd	r25, Y+4	; 0x04
    6570:	0e 94 5a 27 	call	0x4eb4	; 0x4eb4 <_ZNK10helicopter5model11SystemModel16XDerivativeErrorEv>
    6574:	dc 01       	movw	r26, r24
    6576:	cb 01       	movw	r24, r22
    6578:	29 81       	ldd	r18, Y+1	; 0x01
    657a:	3a 81       	ldd	r19, Y+2	; 0x02
    657c:	2f 5b       	subi	r18, 0xBF	; 191
    657e:	3f 4f       	sbci	r19, 0xFF	; 255
    6580:	f9 01       	movw	r30, r18
    6582:	80 83       	st	Z, r24
    6584:	91 83       	std	Z+1, r25	; 0x01
    6586:	a2 83       	std	Z+2, r26	; 0x02
    6588:	b3 83       	std	Z+3, r27	; 0x03
	message->XIntegral = model->XIntegral();
    658a:	8b 81       	ldd	r24, Y+3	; 0x03
    658c:	9c 81       	ldd	r25, Y+4	; 0x04
    658e:	0e 94 8e 03 	call	0x71c	; 0x71c <_ZNK10helicopter5model11SystemModel9XIntegralEv>
    6592:	dc 01       	movw	r26, r24
    6594:	cb 01       	movw	r24, r22
    6596:	29 81       	ldd	r18, Y+1	; 0x01
    6598:	3a 81       	ldd	r19, Y+2	; 0x02
    659a:	f9 01       	movw	r30, r18
    659c:	81 af       	std	Z+57, r24	; 0x39
    659e:	92 af       	std	Z+58, r25	; 0x3a
    65a0:	a3 af       	std	Z+59, r26	; 0x3b
    65a2:	b4 af       	std	Z+60, r27	; 0x3c
	message->XProportional = model->XProportional();
    65a4:	8b 81       	ldd	r24, Y+3	; 0x03
    65a6:	9c 81       	ldd	r25, Y+4	; 0x04
    65a8:	0e 94 42 27 	call	0x4e84	; 0x4e84 <_ZNK10helicopter5model11SystemModel13XProportionalEv>
    65ac:	dc 01       	movw	r26, r24
    65ae:	cb 01       	movw	r24, r22
    65b0:	29 81       	ldd	r18, Y+1	; 0x01
    65b2:	3a 81       	ldd	r19, Y+2	; 0x02
    65b4:	23 5c       	subi	r18, 0xC3	; 195
    65b6:	3f 4f       	sbci	r19, 0xFF	; 255
    65b8:	f9 01       	movw	r30, r18
    65ba:	80 83       	st	Z, r24
    65bc:	91 83       	std	Z+1, r25	; 0x01
    65be:	a2 83       	std	Z+2, r26	; 0x02
    65c0:	b3 83       	std	Z+3, r27	; 0x03
	message->XVelocityMetersPerSecond = model->XVelocityMetersPerSecond();
    65c2:	8b 81       	ldd	r24, Y+3	; 0x03
    65c4:	9c 81       	ldd	r25, Y+4	; 0x04
    65c6:	0e 94 09 03 	call	0x612	; 0x612 <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>
    65ca:	dc 01       	movw	r26, r24
    65cc:	cb 01       	movw	r24, r22
    65ce:	29 81       	ldd	r18, Y+1	; 0x01
    65d0:	3a 81       	ldd	r19, Y+2	; 0x02
    65d2:	f9 01       	movw	r30, r18
    65d4:	81 ab       	std	Z+49, r24	; 0x31
    65d6:	92 ab       	std	Z+50, r25	; 0x32
    65d8:	a3 ab       	std	Z+51, r26	; 0x33
    65da:	b4 ab       	std	Z+52, r27	; 0x34
	message->LongitudeControl = model->LongitudeControl();
    65dc:	8b 81       	ldd	r24, Y+3	; 0x03
    65de:	9c 81       	ldd	r25, Y+4	; 0x04
    65e0:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>
    65e4:	dc 01       	movw	r26, r24
    65e6:	cb 01       	movw	r24, r22
    65e8:	29 81       	ldd	r18, Y+1	; 0x01
    65ea:	3a 81       	ldd	r19, Y+2	; 0x02
    65ec:	2b 5b       	subi	r18, 0xBB	; 187
    65ee:	3f 4f       	sbci	r19, 0xFF	; 255
    65f0:	f9 01       	movw	r30, r18
    65f2:	80 83       	st	Z, r24
    65f4:	91 83       	std	Z+1, r25	; 0x01
    65f6:	a2 83       	std	Z+2, r26	; 0x02
    65f8:	b3 83       	std	Z+3, r27	; 0x03
	message->XLongitudeOuterLoopSetpoint = model->XLongitudeOuterLoopSetpoint();
    65fa:	8b 81       	ldd	r24, Y+3	; 0x03
    65fc:	9c 81       	ldd	r25, Y+4	; 0x04
    65fe:	0e 94 35 03 	call	0x66a	; 0x66a <_ZNK10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEv>
    6602:	dc 01       	movw	r26, r24
    6604:	cb 01       	movw	r24, r22
    6606:	29 81       	ldd	r18, Y+1	; 0x01
    6608:	3a 81       	ldd	r19, Y+2	; 0x02
    660a:	23 5a       	subi	r18, 0xA3	; 163
    660c:	3f 4f       	sbci	r19, 0xFF	; 255
    660e:	f9 01       	movw	r30, r18
    6610:	80 83       	st	Z, r24
    6612:	91 83       	std	Z+1, r25	; 0x01
    6614:	a2 83       	std	Z+2, r26	; 0x02
    6616:	b3 83       	std	Z+3, r27	; 0x03
	message->PitchAngularVelocityRadsPerSecond = model->PitchAngularVelocityRadsPerSecond();
    6618:	8b 81       	ldd	r24, Y+3	; 0x03
    661a:	9c 81       	ldd	r25, Y+4	; 0x04
    661c:	0e 94 04 04 	call	0x808	; 0x808 <_ZNK10helicopter5model11SystemModel33PitchAngularVelocityRadsPerSecondEv>
    6620:	dc 01       	movw	r26, r24
    6622:	cb 01       	movw	r24, r22
    6624:	29 81       	ldd	r18, Y+1	; 0x01
    6626:	3a 81       	ldd	r19, Y+2	; 0x02
    6628:	2f 59       	subi	r18, 0x9F	; 159
    662a:	3f 4f       	sbci	r19, 0xFF	; 255
    662c:	f9 01       	movw	r30, r18
    662e:	80 83       	st	Z, r24
    6630:	91 83       	std	Z+1, r25	; 0x01
    6632:	a2 83       	std	Z+2, r26	; 0x02
    6634:	b3 83       	std	Z+3, r27	; 0x03

	
	message->PhiRollDegrees = model->PhiRollDegrees();
    6636:	8b 81       	ldd	r24, Y+3	; 0x03
    6638:	9c 81       	ldd	r25, Y+4	; 0x04
    663a:	0e 94 ae 05 	call	0xb5c	; 0xb5c <_ZNK10helicopter5model11SystemModel14PhiRollDegreesEv>
    663e:	dc 01       	movw	r26, r24
    6640:	cb 01       	movw	r24, r22
    6642:	29 81       	ldd	r18, Y+1	; 0x01
    6644:	3a 81       	ldd	r19, Y+2	; 0x02
    6646:	2f 58       	subi	r18, 0x8F	; 143
    6648:	3f 4f       	sbci	r19, 0xFF	; 255
    664a:	f9 01       	movw	r30, r18
    664c:	80 83       	st	Z, r24
    664e:	91 83       	std	Z+1, r25	; 0x01
    6650:	a2 83       	std	Z+2, r26	; 0x02
    6652:	b3 83       	std	Z+3, r27	; 0x03
	message->YNEDBodyFrame = model->YNEDBodyFrame();
    6654:	8b 81       	ldd	r24, Y+3	; 0x03
    6656:	9c 81       	ldd	r25, Y+4	; 0x04
    6658:	0e 94 1c 04 	call	0x838	; 0x838 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>
    665c:	dc 01       	movw	r26, r24
    665e:	cb 01       	movw	r24, r22
    6660:	29 81       	ldd	r18, Y+1	; 0x01
    6662:	3a 81       	ldd	r19, Y+2	; 0x02
    6664:	27 59       	subi	r18, 0x97	; 151
    6666:	3f 4f       	sbci	r19, 0xFF	; 255
    6668:	f9 01       	movw	r30, r18
    666a:	80 83       	st	Z, r24
    666c:	91 83       	std	Z+1, r25	; 0x01
    666e:	a2 83       	std	Z+2, r26	; 0x02
    6670:	b3 83       	std	Z+3, r27	; 0x03
	message->YDerivativeError = model->YDerivativeError();
    6672:	8b 81       	ldd	r24, Y+3	; 0x03
    6674:	9c 81       	ldd	r25, Y+4	; 0x04
    6676:	0e 94 f3 27 	call	0x4fe6	; 0x4fe6 <_ZNK10helicopter5model11SystemModel16YDerivativeErrorEv>
    667a:	dc 01       	movw	r26, r24
    667c:	cb 01       	movw	r24, r22
    667e:	29 81       	ldd	r18, Y+1	; 0x01
    6680:	3a 81       	ldd	r19, Y+2	; 0x02
    6682:	23 58       	subi	r18, 0x83	; 131
    6684:	3f 4f       	sbci	r19, 0xFF	; 255
    6686:	f9 01       	movw	r30, r18
    6688:	80 83       	st	Z, r24
    668a:	91 83       	std	Z+1, r25	; 0x01
    668c:	a2 83       	std	Z+2, r26	; 0x02
    668e:	b3 83       	std	Z+3, r27	; 0x03
	message->YIntegral = model->YIntegral();
    6690:	8b 81       	ldd	r24, Y+3	; 0x03
    6692:	9c 81       	ldd	r25, Y+4	; 0x04
    6694:	0e 94 50 05 	call	0xaa0	; 0xaa0 <_ZNK10helicopter5model11SystemModel9YIntegralEv>
    6698:	dc 01       	movw	r26, r24
    669a:	cb 01       	movw	r24, r22
    669c:	29 81       	ldd	r18, Y+1	; 0x01
    669e:	3a 81       	ldd	r19, Y+2	; 0x02
    66a0:	2b 58       	subi	r18, 0x8B	; 139
    66a2:	3f 4f       	sbci	r19, 0xFF	; 255
    66a4:	f9 01       	movw	r30, r18
    66a6:	80 83       	st	Z, r24
    66a8:	91 83       	std	Z+1, r25	; 0x01
    66aa:	a2 83       	std	Z+2, r26	; 0x02
    66ac:	b3 83       	std	Z+3, r27	; 0x03
	message->YProportional = model->YProportional();
    66ae:	8b 81       	ldd	r24, Y+3	; 0x03
    66b0:	9c 81       	ldd	r25, Y+4	; 0x04
    66b2:	0e 94 db 27 	call	0x4fb6	; 0x4fb6 <_ZNK10helicopter5model11SystemModel13YProportionalEv>
    66b6:	dc 01       	movw	r26, r24
    66b8:	cb 01       	movw	r24, r22
    66ba:	29 81       	ldd	r18, Y+1	; 0x01
    66bc:	3a 81       	ldd	r19, Y+2	; 0x02
    66be:	27 58       	subi	r18, 0x87	; 135
    66c0:	3f 4f       	sbci	r19, 0xFF	; 255
    66c2:	f9 01       	movw	r30, r18
    66c4:	80 83       	st	Z, r24
    66c6:	91 83       	std	Z+1, r25	; 0x01
    66c8:	a2 83       	std	Z+2, r26	; 0x02
    66ca:	b3 83       	std	Z+3, r27	; 0x03
	message->YVelocityMetersPerSecond = model->YVelocityMetersPerSecond();
    66cc:	8b 81       	ldd	r24, Y+3	; 0x03
    66ce:	9c 81       	ldd	r25, Y+4	; 0x04
    66d0:	0e 94 c2 04 	call	0x984	; 0x984 <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>
    66d4:	dc 01       	movw	r26, r24
    66d6:	cb 01       	movw	r24, r22
    66d8:	29 81       	ldd	r18, Y+1	; 0x01
    66da:	3a 81       	ldd	r19, Y+2	; 0x02
    66dc:	23 59       	subi	r18, 0x93	; 147
    66de:	3f 4f       	sbci	r19, 0xFF	; 255
    66e0:	f9 01       	movw	r30, r18
    66e2:	80 83       	st	Z, r24
    66e4:	91 83       	std	Z+1, r25	; 0x01
    66e6:	a2 83       	std	Z+2, r26	; 0x02
    66e8:	b3 83       	std	Z+3, r27	; 0x03
	message->LateralControl = model->LateralControl();
    66ea:	8b 81       	ldd	r24, Y+3	; 0x03
    66ec:	9c 81       	ldd	r25, Y+4	; 0x04
    66ee:	0e 94 87 04 	call	0x90e	; 0x90e <_ZNK10helicopter5model11SystemModel14LateralControlEv>
    66f2:	dc 01       	movw	r26, r24
    66f4:	cb 01       	movw	r24, r22
    66f6:	29 81       	ldd	r18, Y+1	; 0x01
    66f8:	3a 81       	ldd	r19, Y+2	; 0x02
    66fa:	2f 57       	subi	r18, 0x7F	; 127
    66fc:	3f 4f       	sbci	r19, 0xFF	; 255
    66fe:	f9 01       	movw	r30, r18
    6700:	80 83       	st	Z, r24
    6702:	91 83       	std	Z+1, r25	; 0x01
    6704:	a2 83       	std	Z+2, r26	; 0x02
    6706:	b3 83       	std	Z+3, r27	; 0x03
	message->YLateralOuterLoopSetpoint = model->YLateralOuterLoopSetpoint();
    6708:	8b 81       	ldd	r24, Y+3	; 0x03
    670a:	9c 81       	ldd	r25, Y+4	; 0x04
    670c:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZNK10helicopter5model11SystemModel25YLateralOuterLoopSetpointEv>
    6710:	dc 01       	movw	r26, r24
    6712:	cb 01       	movw	r24, r22
    6714:	29 81       	ldd	r18, Y+1	; 0x01
    6716:	3a 81       	ldd	r19, Y+2	; 0x02
    6718:	27 56       	subi	r18, 0x67	; 103
    671a:	3f 4f       	sbci	r19, 0xFF	; 255
    671c:	f9 01       	movw	r30, r18
    671e:	80 83       	st	Z, r24
    6720:	91 83       	std	Z+1, r25	; 0x01
    6722:	a2 83       	std	Z+2, r26	; 0x02
    6724:	b3 83       	std	Z+3, r27	; 0x03
	message->RollAngularVelocityRadsPerSecond = model->RollAngularVelocityRadsPerSecond();	
    6726:	8b 81       	ldd	r24, Y+3	; 0x03
    6728:	9c 81       	ldd	r25, Y+4	; 0x04
    672a:	0e 94 c6 05 	call	0xb8c	; 0xb8c <_ZNK10helicopter5model11SystemModel32RollAngularVelocityRadsPerSecondEv>
    672e:	dc 01       	movw	r26, r24
    6730:	cb 01       	movw	r24, r22
    6732:	29 81       	ldd	r18, Y+1	; 0x01
    6734:	3a 81       	ldd	r19, Y+2	; 0x02
    6736:	23 56       	subi	r18, 0x63	; 99
    6738:	3f 4f       	sbci	r19, 0xFF	; 255
    673a:	f9 01       	movw	r30, r18
    673c:	80 83       	st	Z, r24
    673e:	91 83       	std	Z+1, r25	; 0x01
    6740:	a2 83       	std	Z+2, r26	; 0x02
    6742:	b3 83       	std	Z+3, r27	; 0x03
	
	
	message->AltitudeFeetAgl = model->AltitudeFeetAgl();
    6744:	8b 81       	ldd	r24, Y+3	; 0x03
    6746:	9c 81       	ldd	r25, Y+4	; 0x04
    6748:	0e 94 f8 18 	call	0x31f0	; 0x31f0 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    674c:	dc 01       	movw	r26, r24
    674e:	cb 01       	movw	r24, r22
    6750:	29 81       	ldd	r18, Y+1	; 0x01
    6752:	3a 81       	ldd	r19, Y+2	; 0x02
    6754:	2b 55       	subi	r18, 0x5B	; 91
    6756:	3f 4f       	sbci	r19, 0xFF	; 255
    6758:	f9 01       	movw	r30, r18
    675a:	80 83       	st	Z, r24
    675c:	91 83       	std	Z+1, r25	; 0x01
    675e:	a2 83       	std	Z+2, r26	; 0x02
    6760:	b3 83       	std	Z+3, r27	; 0x03
	message->ZDerivativeError = model->ZDerivativeError();
    6762:	8b 81       	ldd	r24, Y+3	; 0x03
    6764:	9c 81       	ldd	r25, Y+4	; 0x04
    6766:	0e 94 af 28 	call	0x515e	; 0x515e <_ZNK10helicopter5model11SystemModel16ZDerivativeErrorEv>
    676a:	dc 01       	movw	r26, r24
    676c:	cb 01       	movw	r24, r22
    676e:	29 81       	ldd	r18, Y+1	; 0x01
    6770:	3a 81       	ldd	r19, Y+2	; 0x02
    6772:	2b 54       	subi	r18, 0x4B	; 75
    6774:	3f 4f       	sbci	r19, 0xFF	; 255
    6776:	f9 01       	movw	r30, r18
    6778:	80 83       	st	Z, r24
    677a:	91 83       	std	Z+1, r25	; 0x01
    677c:	a2 83       	std	Z+2, r26	; 0x02
    677e:	b3 83       	std	Z+3, r27	; 0x03
	message->ZIntegral = model->ZIntegral();
    6780:	8b 81       	ldd	r24, Y+3	; 0x03
    6782:	9c 81       	ldd	r25, Y+4	; 0x04
    6784:	0e 94 b4 06 	call	0xd68	; 0xd68 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>
    6788:	dc 01       	movw	r26, r24
    678a:	cb 01       	movw	r24, r22
    678c:	29 81       	ldd	r18, Y+1	; 0x01
    678e:	3a 81       	ldd	r19, Y+2	; 0x02
    6790:	23 55       	subi	r18, 0x53	; 83
    6792:	3f 4f       	sbci	r19, 0xFF	; 255
    6794:	f9 01       	movw	r30, r18
    6796:	80 83       	st	Z, r24
    6798:	91 83       	std	Z+1, r25	; 0x01
    679a:	a2 83       	std	Z+2, r26	; 0x02
    679c:	b3 83       	std	Z+3, r27	; 0x03
	message->ZProportional = model->ZProportional();
    679e:	8b 81       	ldd	r24, Y+3	; 0x03
    67a0:	9c 81       	ldd	r25, Y+4	; 0x04
    67a2:	0e 94 97 28 	call	0x512e	; 0x512e <_ZNK10helicopter5model11SystemModel13ZProportionalEv>
    67a6:	dc 01       	movw	r26, r24
    67a8:	cb 01       	movw	r24, r22
    67aa:	29 81       	ldd	r18, Y+1	; 0x01
    67ac:	3a 81       	ldd	r19, Y+2	; 0x02
    67ae:	2f 54       	subi	r18, 0x4F	; 79
    67b0:	3f 4f       	sbci	r19, 0xFF	; 255
    67b2:	f9 01       	movw	r30, r18
    67b4:	80 83       	st	Z, r24
    67b6:	91 83       	std	Z+1, r25	; 0x01
    67b8:	a2 83       	std	Z+2, r26	; 0x02
    67ba:	b3 83       	std	Z+3, r27	; 0x03
	message->ZVelocityMetersPerSecond = (model->ZVelocityFeetPerSecond() / 3.2804f);
    67bc:	8b 81       	ldd	r24, Y+3	; 0x03
    67be:	9c 81       	ldd	r25, Y+4	; 0x04
    67c0:	0e 94 84 06 	call	0xd08	; 0xd08 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>
    67c4:	dc 01       	movw	r26, r24
    67c6:	cb 01       	movw	r24, r22
    67c8:	23 e1       	ldi	r18, 0x13	; 19
    67ca:	32 ef       	ldi	r19, 0xF2	; 242
    67cc:	41 e5       	ldi	r20, 0x51	; 81
    67ce:	50 e4       	ldi	r21, 0x40	; 64
    67d0:	bc 01       	movw	r22, r24
    67d2:	cd 01       	movw	r24, r26
    67d4:	0e 94 7e 46 	call	0x8cfc	; 0x8cfc <__divsf3>
    67d8:	dc 01       	movw	r26, r24
    67da:	cb 01       	movw	r24, r22
    67dc:	29 81       	ldd	r18, Y+1	; 0x01
    67de:	3a 81       	ldd	r19, Y+2	; 0x02
    67e0:	27 55       	subi	r18, 0x57	; 87
    67e2:	3f 4f       	sbci	r19, 0xFF	; 255
    67e4:	f9 01       	movw	r30, r18
    67e6:	80 83       	st	Z, r24
    67e8:	91 83       	std	Z+1, r25	; 0x01
    67ea:	a2 83       	std	Z+2, r26	; 0x02
    67ec:	b3 83       	std	Z+3, r27	; 0x03
	message->MainRotorCollectiveControl = model->MainRotorCollectiveControl();
    67ee:	8b 81       	ldd	r24, Y+3	; 0x03
    67f0:	9c 81       	ldd	r25, Y+4	; 0x04
    67f2:	0e 94 0e 06 	call	0xc1c	; 0xc1c <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>
    67f6:	dc 01       	movw	r26, r24
    67f8:	cb 01       	movw	r24, r22
    67fa:	29 81       	ldd	r18, Y+1	; 0x01
    67fc:	3a 81       	ldd	r19, Y+2	; 0x02
    67fe:	27 54       	subi	r18, 0x47	; 71
    6800:	3f 4f       	sbci	r19, 0xFF	; 255
    6802:	f9 01       	movw	r30, r18
    6804:	80 83       	st	Z, r24
    6806:	91 83       	std	Z+1, r25	; 0x01
    6808:	a2 83       	std	Z+2, r26	; 0x02
    680a:	b3 83       	std	Z+3, r27	; 0x03
	message->ZNEDBodyFrame = model->ZNEDBodyFrame();
    680c:	8b 81       	ldd	r24, Y+3	; 0x03
    680e:	9c 81       	ldd	r25, Y+4	; 0x04
    6810:	0e 94 de 05 	call	0xbbc	; 0xbbc <_ZNK10helicopter5model11SystemModel13ZNEDBodyFrameEv>
    6814:	dc 01       	movw	r26, r24
    6816:	cb 01       	movw	r24, r22
    6818:	29 81       	ldd	r18, Y+1	; 0x01
    681a:	3a 81       	ldd	r19, Y+2	; 0x02
    681c:	23 53       	subi	r18, 0x33	; 51
    681e:	3f 4f       	sbci	r19, 0xFF	; 255
    6820:	f9 01       	movw	r30, r18
    6822:	80 83       	st	Z, r24
    6824:	91 83       	std	Z+1, r25	; 0x01
    6826:	a2 83       	std	Z+2, r26	; 0x02
    6828:	b3 83       	std	Z+3, r27	; 0x03
	
	
	
	message->ChecksumErrors = model->ChecksumErrors();
    682a:	8b 81       	ldd	r24, Y+3	; 0x03
    682c:	9c 81       	ldd	r25, Y+4	; 0x04
    682e:	0e 94 83 29 	call	0x5306	; 0x5306 <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>
    6832:	dc 01       	movw	r26, r24
    6834:	cb 01       	movw	r24, r22
    6836:	29 81       	ldd	r18, Y+1	; 0x01
    6838:	3a 81       	ldd	r19, Y+2	; 0x02
    683a:	2f 51       	subi	r18, 0x1F	; 31
    683c:	3f 4f       	sbci	r19, 0xFF	; 255
    683e:	f9 01       	movw	r30, r18
    6840:	80 83       	st	Z, r24
    6842:	91 83       	std	Z+1, r25	; 0x01
    6844:	a2 83       	std	Z+2, r26	; 0x02
    6846:	b3 83       	std	Z+3, r27	; 0x03
	message->Timeouts = model->Timeouts();
    6848:	8b 81       	ldd	r24, Y+3	; 0x03
    684a:	9c 81       	ldd	r25, Y+4	; 0x04
    684c:	0e 94 0d 29 	call	0x521a	; 0x521a <_ZNK10helicopter5model11SystemModel8TimeoutsEv>
    6850:	dc 01       	movw	r26, r24
    6852:	cb 01       	movw	r24, r22
    6854:	29 81       	ldd	r18, Y+1	; 0x01
    6856:	3a 81       	ldd	r19, Y+2	; 0x02
    6858:	27 52       	subi	r18, 0x27	; 39
    685a:	3f 4f       	sbci	r19, 0xFF	; 255
    685c:	f9 01       	movw	r30, r18
    685e:	80 83       	st	Z, r24
    6860:	91 83       	std	Z+1, r25	; 0x01
    6862:	a2 83       	std	Z+2, r26	; 0x02
    6864:	b3 83       	std	Z+3, r27	; 0x03
	message->UnrecognizedMsgTypes = model->UnrecognizedMsgTypes();
    6866:	8b 81       	ldd	r24, Y+3	; 0x03
    6868:	9c 81       	ldd	r25, Y+4	; 0x04
    686a:	0e 94 48 29 	call	0x5290	; 0x5290 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>
    686e:	dc 01       	movw	r26, r24
    6870:	cb 01       	movw	r24, r22
    6872:	29 81       	ldd	r18, Y+1	; 0x01
    6874:	3a 81       	ldd	r19, Y+2	; 0x02
    6876:	23 52       	subi	r18, 0x23	; 35
    6878:	3f 4f       	sbci	r19, 0xFF	; 255
    687a:	f9 01       	movw	r30, r18
    687c:	80 83       	st	Z, r24
    687e:	91 83       	std	Z+1, r25	; 0x01
    6880:	a2 83       	std	Z+2, r26	; 0x02
    6882:	b3 83       	std	Z+3, r27	; 0x03
	message->NumOfBlownFrames = model->BlownFrames();
    6884:	8b 81       	ldd	r24, Y+3	; 0x03
    6886:	9c 81       	ldd	r25, Y+4	; 0x04
    6888:	0e 94 35 07 	call	0xe6a	; 0xe6a <_ZNK10helicopter5model11SystemModel11BlownFramesEv>
    688c:	dc 01       	movw	r26, r24
    688e:	cb 01       	movw	r24, r22
    6890:	29 81       	ldd	r18, Y+1	; 0x01
    6892:	3a 81       	ldd	r19, Y+2	; 0x02
    6894:	2b 51       	subi	r18, 0x1B	; 27
    6896:	3f 4f       	sbci	r19, 0xFF	; 255
    6898:	f9 01       	movw	r30, r18
    689a:	80 83       	st	Z, r24
    689c:	91 83       	std	Z+1, r25	; 0x01
    689e:	a2 83       	std	Z+2, r26	; 0x02
    68a0:	b3 83       	std	Z+3, r27	; 0x03
	
	return message;
    68a2:	89 81       	ldd	r24, Y+1	; 0x01
    68a4:	9a 81       	ldd	r25, Y+2	; 0x02
}
    68a6:	0f 90       	pop	r0
    68a8:	0f 90       	pop	r0
    68aa:	0f 90       	pop	r0
    68ac:	0f 90       	pop	r0
    68ae:	df 91       	pop	r29
    68b0:	cf 91       	pop	r28
    68b2:	1f 91       	pop	r17
    68b4:	0f 91       	pop	r16
    68b6:	08 95       	ret

000068b8 <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE>:
	model->ChecksumErrors(this->ChecksumErrors);
	model->BlownFrames(this->NumOfBlownFrames);
}

void SystemTelemetryMessage::updateModelFromMessageFromSimulator (SystemModel *model)
{
    68b8:	cf 93       	push	r28
    68ba:	df 93       	push	r29
    68bc:	00 d0       	rcall	.+0      	; 0x68be <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE+0x6>
    68be:	1f 92       	push	r1
    68c0:	cd b7       	in	r28, 0x3d	; 61
    68c2:	de b7       	in	r29, 0x3e	; 62
    68c4:	9a 83       	std	Y+2, r25	; 0x02
    68c6:	89 83       	std	Y+1, r24	; 0x01
    68c8:	7c 83       	std	Y+4, r23	; 0x04
    68ca:	6b 83       	std	Y+3, r22	; 0x03
	//These values are sensor readings from the simulator that are used for flight
	//control calculations. The real helicopter algorithms will read these values
	//from actual sensors, but when running off of the simulator, these sensor
	//readings come from the simulator itself.
	
	model->MagYawDegrees(this->MagYaw);
    68cc:	89 81       	ldd	r24, Y+1	; 0x01
    68ce:	9a 81       	ldd	r25, Y+2	; 0x02
    68d0:	fc 01       	movw	r30, r24
    68d2:	85 81       	ldd	r24, Z+5	; 0x05
    68d4:	96 81       	ldd	r25, Z+6	; 0x06
    68d6:	a7 81       	ldd	r26, Z+7	; 0x07
    68d8:	b0 85       	ldd	r27, Z+8	; 0x08
    68da:	2b 81       	ldd	r18, Y+3	; 0x03
    68dc:	3c 81       	ldd	r19, Y+4	; 0x04
    68de:	ac 01       	movw	r20, r24
    68e0:	bd 01       	movw	r22, r26
    68e2:	c9 01       	movw	r24, r18
    68e4:	0e 94 b6 26 	call	0x4d6c	; 0x4d6c <_ZN10helicopter5model11SystemModel13MagYawDegreesEf>
	model->YawVelocityDegreesPerSecond(this->YawVelocityDegreesPerSecond);
    68e8:	89 81       	ldd	r24, Y+1	; 0x01
    68ea:	9a 81       	ldd	r25, Y+2	; 0x02
    68ec:	fc 01       	movw	r30, r24
    68ee:	81 85       	ldd	r24, Z+9	; 0x09
    68f0:	92 85       	ldd	r25, Z+10	; 0x0a
    68f2:	a3 85       	ldd	r26, Z+11	; 0x0b
    68f4:	b4 85       	ldd	r27, Z+12	; 0x0c
    68f6:	2b 81       	ldd	r18, Y+3	; 0x03
    68f8:	3c 81       	ldd	r19, Y+4	; 0x04
    68fa:	ac 01       	movw	r20, r24
    68fc:	bd 01       	movw	r22, r26
    68fe:	c9 01       	movw	r24, r18
    6900:	0e 94 d6 26 	call	0x4dac	; 0x4dac <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf>
	
	//model->XNEDBodyFrame((double) this->XNEDBodyFrame / 100);//not supposed to be here since this is a calculated value, not a sensor reading.
	model->XVelocityMetersPerSecond(this->XVelocityMetersPerSecond);
    6904:	89 81       	ldd	r24, Y+1	; 0x01
    6906:	9a 81       	ldd	r25, Y+2	; 0x02
    6908:	fc 01       	movw	r30, r24
    690a:	81 a9       	ldd	r24, Z+49	; 0x31
    690c:	92 a9       	ldd	r25, Z+50	; 0x32
    690e:	a3 a9       	ldd	r26, Z+51	; 0x33
    6910:	b4 a9       	ldd	r27, Z+52	; 0x34
    6912:	2b 81       	ldd	r18, Y+3	; 0x03
    6914:	3c 81       	ldd	r19, Y+4	; 0x04
    6916:	ac 01       	movw	r20, r24
    6918:	bd 01       	movw	r22, r26
    691a:	c9 01       	movw	r24, r18
    691c:	0e 94 22 27 	call	0x4e44	; 0x4e44 <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf>
	model->ThetaPitchDegrees(this->ThetaPitchDegrees);
    6920:	89 81       	ldd	r24, Y+1	; 0x01
    6922:	9a 81       	ldd	r25, Y+2	; 0x02
    6924:	fc 01       	movw	r30, r24
    6926:	85 a9       	ldd	r24, Z+53	; 0x35
    6928:	96 a9       	ldd	r25, Z+54	; 0x36
    692a:	a7 a9       	ldd	r26, Z+55	; 0x37
    692c:	b0 ad       	ldd	r27, Z+56	; 0x38
    692e:	2b 81       	ldd	r18, Y+3	; 0x03
    6930:	3c 81       	ldd	r19, Y+4	; 0x04
    6932:	ac 01       	movw	r20, r24
    6934:	bd 01       	movw	r22, r26
    6936:	c9 01       	movw	r24, r18
    6938:	0e 94 72 27 	call	0x4ee4	; 0x4ee4 <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf>
	model->PitchAngularVelocityRadsPerSecond(this->PitchAngularVelocityRadsPerSecond);
    693c:	89 81       	ldd	r24, Y+1	; 0x01
    693e:	9a 81       	ldd	r25, Y+2	; 0x02
    6940:	8f 59       	subi	r24, 0x9F	; 159
    6942:	9f 4f       	sbci	r25, 0xFF	; 255
    6944:	fc 01       	movw	r30, r24
    6946:	80 81       	ld	r24, Z
    6948:	91 81       	ldd	r25, Z+1	; 0x01
    694a:	a2 81       	ldd	r26, Z+2	; 0x02
    694c:	b3 81       	ldd	r27, Z+3	; 0x03
    694e:	2b 81       	ldd	r18, Y+3	; 0x03
    6950:	3c 81       	ldd	r19, Y+4	; 0x04
    6952:	ac 01       	movw	r20, r24
    6954:	bd 01       	movw	r22, r26
    6956:	c9 01       	movw	r24, r18
    6958:	0e 94 95 27 	call	0x4f2a	; 0x4f2a <_ZN10helicopter5model11SystemModel33PitchAngularVelocityRadsPerSecondEf>
	
	//model->YNEDBodyFrame((double) this->YNEDBodyFrame / 100);
	model->YVelocityMetersPerSecond(this->YVelocityMetersPerSecond);
    695c:	89 81       	ldd	r24, Y+1	; 0x01
    695e:	9a 81       	ldd	r25, Y+2	; 0x02
    6960:	83 59       	subi	r24, 0x93	; 147
    6962:	9f 4f       	sbci	r25, 0xFF	; 255
    6964:	fc 01       	movw	r30, r24
    6966:	80 81       	ld	r24, Z
    6968:	91 81       	ldd	r25, Z+1	; 0x01
    696a:	a2 81       	ldd	r26, Z+2	; 0x02
    696c:	b3 81       	ldd	r27, Z+3	; 0x03
    696e:	2b 81       	ldd	r18, Y+3	; 0x03
    6970:	3c 81       	ldd	r19, Y+4	; 0x04
    6972:	ac 01       	movw	r20, r24
    6974:	bd 01       	movw	r22, r26
    6976:	c9 01       	movw	r24, r18
    6978:	0e 94 b8 27 	call	0x4f70	; 0x4f70 <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf>
	model->PhiRollDegrees(this->PhiRollDegrees);
    697c:	89 81       	ldd	r24, Y+1	; 0x01
    697e:	9a 81       	ldd	r25, Y+2	; 0x02
    6980:	8f 58       	subi	r24, 0x8F	; 143
    6982:	9f 4f       	sbci	r25, 0xFF	; 255
    6984:	fc 01       	movw	r30, r24
    6986:	80 81       	ld	r24, Z
    6988:	91 81       	ldd	r25, Z+1	; 0x01
    698a:	a2 81       	ldd	r26, Z+2	; 0x02
    698c:	b3 81       	ldd	r27, Z+3	; 0x03
    698e:	2b 81       	ldd	r18, Y+3	; 0x03
    6990:	3c 81       	ldd	r19, Y+4	; 0x04
    6992:	ac 01       	movw	r20, r24
    6994:	bd 01       	movw	r22, r26
    6996:	c9 01       	movw	r24, r18
    6998:	0e 94 0b 28 	call	0x5016	; 0x5016 <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf>
	model->RollAngularVelocityRadsPerSecond(this->RollAngularVelocityRadsPerSecond);
    699c:	89 81       	ldd	r24, Y+1	; 0x01
    699e:	9a 81       	ldd	r25, Y+2	; 0x02
    69a0:	83 56       	subi	r24, 0x63	; 99
    69a2:	9f 4f       	sbci	r25, 0xFF	; 255
    69a4:	fc 01       	movw	r30, r24
    69a6:	80 81       	ld	r24, Z
    69a8:	91 81       	ldd	r25, Z+1	; 0x01
    69aa:	a2 81       	ldd	r26, Z+2	; 0x02
    69ac:	b3 81       	ldd	r27, Z+3	; 0x03
    69ae:	2b 81       	ldd	r18, Y+3	; 0x03
    69b0:	3c 81       	ldd	r19, Y+4	; 0x04
    69b2:	ac 01       	movw	r20, r24
    69b4:	bd 01       	movw	r22, r26
    69b6:	c9 01       	movw	r24, r18
    69b8:	0e 94 2e 28 	call	0x505c	; 0x505c <_ZN10helicopter5model11SystemModel32RollAngularVelocityRadsPerSecondEf>
	
	model->AltitudeFeetAgl(this->AltitudeFeetAgl);
    69bc:	89 81       	ldd	r24, Y+1	; 0x01
    69be:	9a 81       	ldd	r25, Y+2	; 0x02
    69c0:	8b 55       	subi	r24, 0x5B	; 91
    69c2:	9f 4f       	sbci	r25, 0xFF	; 255
    69c4:	fc 01       	movw	r30, r24
    69c6:	80 81       	ld	r24, Z
    69c8:	91 81       	ldd	r25, Z+1	; 0x01
    69ca:	a2 81       	ldd	r26, Z+2	; 0x02
    69cc:	b3 81       	ldd	r27, Z+3	; 0x03
    69ce:	2b 81       	ldd	r18, Y+3	; 0x03
    69d0:	3c 81       	ldd	r19, Y+4	; 0x04
    69d2:	ac 01       	movw	r20, r24
    69d4:	bd 01       	movw	r22, r26
    69d6:	c9 01       	movw	r24, r18
    69d8:	0e 94 51 28 	call	0x50a2	; 0x50a2 <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf>
	
	//Convert from meters per sec, to foot per sec.
	
	model->ZVelocityFeetPerSecond(this->ZVelocityMetersPerSecond * 3.28084d); 
    69dc:	89 81       	ldd	r24, Y+1	; 0x01
    69de:	9a 81       	ldd	r25, Y+2	; 0x02
    69e0:	87 55       	subi	r24, 0x57	; 87
    69e2:	9f 4f       	sbci	r25, 0xFF	; 255
    69e4:	fc 01       	movw	r30, r24
    69e6:	80 81       	ld	r24, Z
    69e8:	91 81       	ldd	r25, Z+1	; 0x01
    69ea:	a2 81       	ldd	r26, Z+2	; 0x02
    69ec:	b3 81       	ldd	r27, Z+3	; 0x03
    69ee:	28 e4       	ldi	r18, 0x48	; 72
    69f0:	39 ef       	ldi	r19, 0xF9	; 249
    69f2:	41 e5       	ldi	r20, 0x51	; 81
    69f4:	50 e4       	ldi	r21, 0x40	; 64
    69f6:	bc 01       	movw	r22, r24
    69f8:	cd 01       	movw	r24, r26
    69fa:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    69fe:	dc 01       	movw	r26, r24
    6a00:	cb 01       	movw	r24, r22
    6a02:	2b 81       	ldd	r18, Y+3	; 0x03
    6a04:	3c 81       	ldd	r19, Y+4	; 0x04
    6a06:	ac 01       	movw	r20, r24
    6a08:	bd 01       	movw	r22, r26
    6a0a:	c9 01       	movw	r24, r18
    6a0c:	0e 94 74 28 	call	0x50e8	; 0x50e8 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf>
	
	model->LatitudeDegrees(this->LatitudeDegrees);
    6a10:	89 81       	ldd	r24, Y+1	; 0x01
    6a12:	9a 81       	ldd	r25, Y+2	; 0x02
    6a14:	8f 52       	subi	r24, 0x2F	; 47
    6a16:	9f 4f       	sbci	r25, 0xFF	; 255
    6a18:	fc 01       	movw	r30, r24
    6a1a:	80 81       	ld	r24, Z
    6a1c:	91 81       	ldd	r25, Z+1	; 0x01
    6a1e:	a2 81       	ldd	r26, Z+2	; 0x02
    6a20:	b3 81       	ldd	r27, Z+3	; 0x03
    6a22:	2b 81       	ldd	r18, Y+3	; 0x03
    6a24:	3c 81       	ldd	r19, Y+4	; 0x04
    6a26:	ac 01       	movw	r20, r24
    6a28:	bd 01       	movw	r22, r26
    6a2a:	c9 01       	movw	r24, r18
    6a2c:	0e 94 c7 28 	call	0x518e	; 0x518e <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf>
	model->LongitudeDegrees(this->LongitudeDegrees);
    6a30:	89 81       	ldd	r24, Y+1	; 0x01
    6a32:	9a 81       	ldd	r25, Y+2	; 0x02
    6a34:	8b 52       	subi	r24, 0x2B	; 43
    6a36:	9f 4f       	sbci	r25, 0xFF	; 255
    6a38:	fc 01       	movw	r30, r24
    6a3a:	80 81       	ld	r24, Z
    6a3c:	91 81       	ldd	r25, Z+1	; 0x01
    6a3e:	a2 81       	ldd	r26, Z+2	; 0x02
    6a40:	b3 81       	ldd	r27, Z+3	; 0x03
    6a42:	2b 81       	ldd	r18, Y+3	; 0x03
    6a44:	3c 81       	ldd	r19, Y+4	; 0x04
    6a46:	ac 01       	movw	r20, r24
    6a48:	bd 01       	movw	r22, r26
    6a4a:	c9 01       	movw	r24, r18
    6a4c:	0e 94 ea 28 	call	0x51d4	; 0x51d4 <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf>
    6a50:	0f 90       	pop	r0
    6a52:	0f 90       	pop	r0
    6a54:	0f 90       	pop	r0
    6a56:	0f 90       	pop	r0
    6a58:	df 91       	pop	r29
    6a5a:	cf 91       	pop	r28
    6a5c:	08 95       	ret

00006a5e <_ZN10helicopter5tasks4Task8getDelayEv>:
				 * subclasses runTaskImpl to execute the actual task logic.
				 */
				virtual void runTask();
				
					
				int getDelay()
    6a5e:	cf 93       	push	r28
    6a60:	df 93       	push	r29
    6a62:	1f 92       	push	r1
    6a64:	1f 92       	push	r1
    6a66:	cd b7       	in	r28, 0x3d	; 61
    6a68:	de b7       	in	r29, 0x3e	; 62
    6a6a:	9a 83       	std	Y+2, r25	; 0x02
    6a6c:	89 83       	std	Y+1, r24	; 0x01
				{
					return delay;
    6a6e:	89 81       	ldd	r24, Y+1	; 0x01
    6a70:	9a 81       	ldd	r25, Y+2	; 0x02
    6a72:	fc 01       	movw	r30, r24
    6a74:	82 81       	ldd	r24, Z+2	; 0x02
    6a76:	93 81       	ldd	r25, Z+3	; 0x03
				}
    6a78:	0f 90       	pop	r0
    6a7a:	0f 90       	pop	r0
    6a7c:	df 91       	pop	r29
    6a7e:	cf 91       	pop	r28
    6a80:	08 95       	ret

00006a82 <_ZN10helicopter5tasks4Task9getPeriodEv>:
				
				int getPeriod()
    6a82:	cf 93       	push	r28
    6a84:	df 93       	push	r29
    6a86:	1f 92       	push	r1
    6a88:	1f 92       	push	r1
    6a8a:	cd b7       	in	r28, 0x3d	; 61
    6a8c:	de b7       	in	r29, 0x3e	; 62
    6a8e:	9a 83       	std	Y+2, r25	; 0x02
    6a90:	89 83       	std	Y+1, r24	; 0x01
				{
					return period;
    6a92:	89 81       	ldd	r24, Y+1	; 0x01
    6a94:	9a 81       	ldd	r25, Y+2	; 0x02
    6a96:	fc 01       	movw	r30, r24
    6a98:	84 81       	ldd	r24, Z+4	; 0x04
    6a9a:	95 81       	ldd	r25, Z+5	; 0x05
				}
    6a9c:	0f 90       	pop	r0
    6a9e:	0f 90       	pop	r0
    6aa0:	df 91       	pop	r29
    6aa2:	cf 91       	pop	r28
    6aa4:	08 95       	ret

00006aa6 <_ZN10helicopter5tasks4Task8setDelayEi>:
				
				void setDelay(int delay)
    6aa6:	cf 93       	push	r28
    6aa8:	df 93       	push	r29
    6aaa:	00 d0       	rcall	.+0      	; 0x6aac <_ZN10helicopter5tasks4Task8setDelayEi+0x6>
    6aac:	1f 92       	push	r1
    6aae:	cd b7       	in	r28, 0x3d	; 61
    6ab0:	de b7       	in	r29, 0x3e	; 62
    6ab2:	9a 83       	std	Y+2, r25	; 0x02
    6ab4:	89 83       	std	Y+1, r24	; 0x01
    6ab6:	7c 83       	std	Y+4, r23	; 0x04
    6ab8:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->delay = delay;
    6aba:	89 81       	ldd	r24, Y+1	; 0x01
    6abc:	9a 81       	ldd	r25, Y+2	; 0x02
    6abe:	2b 81       	ldd	r18, Y+3	; 0x03
    6ac0:	3c 81       	ldd	r19, Y+4	; 0x04
    6ac2:	fc 01       	movw	r30, r24
    6ac4:	33 83       	std	Z+3, r19	; 0x03
    6ac6:	22 83       	std	Z+2, r18	; 0x02
				}
    6ac8:	0f 90       	pop	r0
    6aca:	0f 90       	pop	r0
    6acc:	0f 90       	pop	r0
    6ace:	0f 90       	pop	r0
    6ad0:	df 91       	pop	r29
    6ad2:	cf 91       	pop	r28
    6ad4:	08 95       	ret

00006ad6 <_ZN10helicopter5tasks4Task15getIsReadyToRunEv>:
				
				bool getIsReadyToRun()
    6ad6:	cf 93       	push	r28
    6ad8:	df 93       	push	r29
    6ada:	1f 92       	push	r1
    6adc:	1f 92       	push	r1
    6ade:	cd b7       	in	r28, 0x3d	; 61
    6ae0:	de b7       	in	r29, 0x3e	; 62
    6ae2:	9a 83       	std	Y+2, r25	; 0x02
    6ae4:	89 83       	std	Y+1, r24	; 0x01
				{
					return isReadyToRun;
    6ae6:	89 81       	ldd	r24, Y+1	; 0x01
    6ae8:	9a 81       	ldd	r25, Y+2	; 0x02
    6aea:	fc 01       	movw	r30, r24
    6aec:	86 81       	ldd	r24, Z+6	; 0x06
				}
    6aee:	0f 90       	pop	r0
    6af0:	0f 90       	pop	r0
    6af2:	df 91       	pop	r29
    6af4:	cf 91       	pop	r28
    6af6:	08 95       	ret

00006af8 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>:
				
				void setIsReadyToRun(bool isReadyToRun)
    6af8:	cf 93       	push	r28
    6afa:	df 93       	push	r29
    6afc:	00 d0       	rcall	.+0      	; 0x6afe <_ZN10helicopter5tasks4Task15setIsReadyToRunEb+0x6>
    6afe:	cd b7       	in	r28, 0x3d	; 61
    6b00:	de b7       	in	r29, 0x3e	; 62
    6b02:	9a 83       	std	Y+2, r25	; 0x02
    6b04:	89 83       	std	Y+1, r24	; 0x01
    6b06:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->isReadyToRun = isReadyToRun;
    6b08:	89 81       	ldd	r24, Y+1	; 0x01
    6b0a:	9a 81       	ldd	r25, Y+2	; 0x02
    6b0c:	2b 81       	ldd	r18, Y+3	; 0x03
    6b0e:	fc 01       	movw	r30, r24
    6b10:	26 83       	std	Z+6, r18	; 0x06
				}
    6b12:	0f 90       	pop	r0
    6b14:	0f 90       	pop	r0
    6b16:	0f 90       	pop	r0
    6b18:	df 91       	pop	r29
    6b1a:	cf 91       	pop	r28
    6b1c:	08 95       	ret

00006b1e <_ZN10helicopter5tasks4Task11reduceDelayEv>:
				
				/**
				 * Reduces the delay by one tick.
				 */
				void reduceDelay()
    6b1e:	cf 93       	push	r28
    6b20:	df 93       	push	r29
    6b22:	1f 92       	push	r1
    6b24:	1f 92       	push	r1
    6b26:	cd b7       	in	r28, 0x3d	; 61
    6b28:	de b7       	in	r29, 0x3e	; 62
    6b2a:	9a 83       	std	Y+2, r25	; 0x02
    6b2c:	89 83       	std	Y+1, r24	; 0x01
				{
					delay--;
    6b2e:	89 81       	ldd	r24, Y+1	; 0x01
    6b30:	9a 81       	ldd	r25, Y+2	; 0x02
    6b32:	fc 01       	movw	r30, r24
    6b34:	82 81       	ldd	r24, Z+2	; 0x02
    6b36:	93 81       	ldd	r25, Z+3	; 0x03
    6b38:	9c 01       	movw	r18, r24
    6b3a:	21 50       	subi	r18, 0x01	; 1
    6b3c:	31 09       	sbc	r19, r1
    6b3e:	89 81       	ldd	r24, Y+1	; 0x01
    6b40:	9a 81       	ldd	r25, Y+2	; 0x02
    6b42:	fc 01       	movw	r30, r24
    6b44:	33 83       	std	Z+3, r19	; 0x03
    6b46:	22 83       	std	Z+2, r18	; 0x02
				}
    6b48:	0f 90       	pop	r0
    6b4a:	0f 90       	pop	r0
    6b4c:	df 91       	pop	r29
    6b4e:	cf 91       	pop	r28
    6b50:	08 95       	ret

00006b52 <_ZN10helicopter9scheduler9Scheduler13getNumOfTasksEv>:
			    /*
				* Starts the timer for determining which tasks are ready to run.
				*/
				void start();
				
				int getNumOfTasks()
    6b52:	cf 93       	push	r28
    6b54:	df 93       	push	r29
    6b56:	1f 92       	push	r1
    6b58:	1f 92       	push	r1
    6b5a:	cd b7       	in	r28, 0x3d	; 61
    6b5c:	de b7       	in	r29, 0x3e	; 62
    6b5e:	9a 83       	std	Y+2, r25	; 0x02
    6b60:	89 83       	std	Y+1, r24	; 0x01
				{
					return numOfTasks;
    6b62:	89 81       	ldd	r24, Y+1	; 0x01
    6b64:	9a 81       	ldd	r25, Y+2	; 0x02
    6b66:	fc 01       	movw	r30, r24
    6b68:	84 89       	ldd	r24, Z+20	; 0x14
    6b6a:	95 89       	ldd	r25, Z+21	; 0x15
				}
    6b6c:	0f 90       	pop	r0
    6b6e:	0f 90       	pop	r0
    6b70:	df 91       	pop	r29
    6b72:	cf 91       	pop	r28
    6b74:	08 95       	ret

00006b76 <_ZN10helicopter9scheduler9Scheduler8getTasksEv>:
				
				Task **getTasks()
    6b76:	cf 93       	push	r28
    6b78:	df 93       	push	r29
    6b7a:	1f 92       	push	r1
    6b7c:	1f 92       	push	r1
    6b7e:	cd b7       	in	r28, 0x3d	; 61
    6b80:	de b7       	in	r29, 0x3e	; 62
    6b82:	9a 83       	std	Y+2, r25	; 0x02
    6b84:	89 83       	std	Y+1, r24	; 0x01
				{
					return tasks;
    6b86:	89 81       	ldd	r24, Y+1	; 0x01
    6b88:	9a 81       	ldd	r25, Y+2	; 0x02
				}
    6b8a:	0f 90       	pop	r0
    6b8c:	0f 90       	pop	r0
    6b8e:	df 91       	pop	r29
    6b90:	cf 91       	pop	r28
    6b92:	08 95       	ret

00006b94 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb>:
				/**
				 * Sets whether a blown frame was detected. (I.e. the dispatcher didn't finish before
				 * the scheduler timmer was triggered again)
				 * @param blownFrameDetected true if a frame was blown, false otherwise.
				 */
				void hasBlownFrame(bool blowFrameDetected)
    6b94:	cf 93       	push	r28
    6b96:	df 93       	push	r29
    6b98:	00 d0       	rcall	.+0      	; 0x6b9a <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb+0x6>
    6b9a:	cd b7       	in	r28, 0x3d	; 61
    6b9c:	de b7       	in	r29, 0x3e	; 62
    6b9e:	9a 83       	std	Y+2, r25	; 0x02
    6ba0:	89 83       	std	Y+1, r24	; 0x01
    6ba2:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->blowFrameDetected = blowFrameDetected;
    6ba4:	89 81       	ldd	r24, Y+1	; 0x01
    6ba6:	9a 81       	ldd	r25, Y+2	; 0x02
    6ba8:	2b 81       	ldd	r18, Y+3	; 0x03
    6baa:	fc 01       	movw	r30, r24
    6bac:	22 8f       	std	Z+26, r18	; 0x1a
				}
    6bae:	0f 90       	pop	r0
    6bb0:	0f 90       	pop	r0
    6bb2:	0f 90       	pop	r0
    6bb4:	df 91       	pop	r29
    6bb6:	cf 91       	pop	r28
    6bb8:	08 95       	ret

00006bba <_ZN10helicopter9scheduler9Scheduler20hasCompletedDispatchEv>:
				/**
				 * Returns a flag indicating that the dispatch method has completed. This is for
				 * use by the scheduler to determine if the dispatcher blew a frame.
				 * @return true if the dispatch method completed, false otherwise. 
				 */
				bool hasCompletedDispatch()
    6bba:	cf 93       	push	r28
    6bbc:	df 93       	push	r29
    6bbe:	1f 92       	push	r1
    6bc0:	1f 92       	push	r1
    6bc2:	cd b7       	in	r28, 0x3d	; 61
    6bc4:	de b7       	in	r29, 0x3e	; 62
    6bc6:	9a 83       	std	Y+2, r25	; 0x02
    6bc8:	89 83       	std	Y+1, r24	; 0x01
				{
					return completedDispatch;
    6bca:	89 81       	ldd	r24, Y+1	; 0x01
    6bcc:	9a 81       	ldd	r25, Y+2	; 0x02
    6bce:	fc 01       	movw	r30, r24
    6bd0:	83 8d       	ldd	r24, Z+27	; 0x1b
				}
    6bd2:	0f 90       	pop	r0
    6bd4:	0f 90       	pop	r0
    6bd6:	df 91       	pop	r29
    6bd8:	cf 91       	pop	r28
    6bda:	08 95       	ret

00006bdc <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>:
using namespace helicopter::scheduler;

Scheduler* Scheduler::scheduler = NULL;

Scheduler* Scheduler::getScheduler()
{
    6bdc:	ef 92       	push	r14
    6bde:	ff 92       	push	r15
    6be0:	0f 93       	push	r16
    6be2:	1f 93       	push	r17
    6be4:	cf 93       	push	r28
    6be6:	df 93       	push	r29
    6be8:	cd b7       	in	r28, 0x3d	; 61
    6bea:	de b7       	in	r29, 0x3e	; 62
	if (scheduler == NULL)
    6bec:	80 91 9a 02 	lds	r24, 0x029A
    6bf0:	90 91 9b 02 	lds	r25, 0x029B
    6bf4:	00 97       	sbiw	r24, 0x00	; 0
    6bf6:	a1 f4       	brne	.+40     	; 0x6c20 <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv+0x44>
	{
		scheduler = new Scheduler(F_CPU, PRESCALE_BY_SIXTYFOUR, SCHEDULER_TICK_FREQUENCY_HZ);
    6bf8:	8c e1       	ldi	r24, 0x1C	; 28
    6bfa:	90 e0       	ldi	r25, 0x00	; 0
    6bfc:	0e 94 12 40 	call	0x8024	; 0x8024 <_Znwj>
    6c00:	7c 01       	movw	r14, r24
    6c02:	06 e4       	ldi	r16, 0x46	; 70
    6c04:	10 e0       	ldi	r17, 0x00	; 0
    6c06:	20 e4       	ldi	r18, 0x40	; 64
    6c08:	30 e0       	ldi	r19, 0x00	; 0
    6c0a:	40 e0       	ldi	r20, 0x00	; 0
    6c0c:	54 e2       	ldi	r21, 0x24	; 36
    6c0e:	64 ef       	ldi	r22, 0xF4	; 244
    6c10:	70 e0       	ldi	r23, 0x00	; 0
    6c12:	c7 01       	movw	r24, r14
    6c14:	0e 94 1b 36 	call	0x6c36	; 0x6c36 <_ZN10helicopter9scheduler9SchedulerC1Em9PRESCALERi>
    6c18:	f0 92 9b 02 	sts	0x029B, r15
    6c1c:	e0 92 9a 02 	sts	0x029A, r14
	}

	return scheduler;
    6c20:	80 91 9a 02 	lds	r24, 0x029A
    6c24:	90 91 9b 02 	lds	r25, 0x029B
}
    6c28:	df 91       	pop	r29
    6c2a:	cf 91       	pop	r28
    6c2c:	1f 91       	pop	r17
    6c2e:	0f 91       	pop	r16
    6c30:	ff 90       	pop	r15
    6c32:	ef 90       	pop	r14
    6c34:	08 95       	ret

00006c36 <_ZN10helicopter9scheduler9SchedulerC1Em9PRESCALERi>:

Scheduler::Scheduler(unsigned long cpuSpeed, PRESCALER prescaler, int schedulerTickFrequencyHz)
    6c36:	0f 93       	push	r16
    6c38:	1f 93       	push	r17
    6c3a:	cf 93       	push	r28
    6c3c:	df 93       	push	r29
    6c3e:	cd b7       	in	r28, 0x3d	; 61
    6c40:	de b7       	in	r29, 0x3e	; 62
    6c42:	2a 97       	sbiw	r28, 0x0a	; 10
    6c44:	0f b6       	in	r0, 0x3f	; 63
    6c46:	f8 94       	cli
    6c48:	de bf       	out	0x3e, r29	; 62
    6c4a:	0f be       	out	0x3f, r0	; 63
    6c4c:	cd bf       	out	0x3d, r28	; 61
    6c4e:	9a 83       	std	Y+2, r25	; 0x02
    6c50:	89 83       	std	Y+1, r24	; 0x01
    6c52:	4b 83       	std	Y+3, r20	; 0x03
    6c54:	5c 83       	std	Y+4, r21	; 0x04
    6c56:	6d 83       	std	Y+5, r22	; 0x05
    6c58:	7e 83       	std	Y+6, r23	; 0x06
    6c5a:	38 87       	std	Y+8, r19	; 0x08
    6c5c:	2f 83       	std	Y+7, r18	; 0x07
    6c5e:	1a 87       	std	Y+10, r17	; 0x0a
    6c60:	09 87       	std	Y+9, r16	; 0x09
{
	targetTimerCount =  ((cpuSpeed / prescaler) / schedulerTickFrequencyHz);
    6c62:	8f 81       	ldd	r24, Y+7	; 0x07
    6c64:	98 85       	ldd	r25, Y+8	; 0x08
    6c66:	9c 01       	movw	r18, r24
    6c68:	44 27       	eor	r20, r20
    6c6a:	37 fd       	sbrc	r19, 7
    6c6c:	40 95       	com	r20
    6c6e:	54 2f       	mov	r21, r20
    6c70:	8b 81       	ldd	r24, Y+3	; 0x03
    6c72:	9c 81       	ldd	r25, Y+4	; 0x04
    6c74:	ad 81       	ldd	r26, Y+5	; 0x05
    6c76:	be 81       	ldd	r27, Y+6	; 0x06
    6c78:	bc 01       	movw	r22, r24
    6c7a:	cd 01       	movw	r24, r26
    6c7c:	0e 94 87 4a 	call	0x950e	; 0x950e <__udivmodsi4>
    6c80:	da 01       	movw	r26, r20
    6c82:	c9 01       	movw	r24, r18
    6c84:	29 85       	ldd	r18, Y+9	; 0x09
    6c86:	3a 85       	ldd	r19, Y+10	; 0x0a
    6c88:	44 27       	eor	r20, r20
    6c8a:	37 fd       	sbrc	r19, 7
    6c8c:	40 95       	com	r20
    6c8e:	54 2f       	mov	r21, r20
    6c90:	bc 01       	movw	r22, r24
    6c92:	cd 01       	movw	r24, r26
    6c94:	0e 94 87 4a 	call	0x950e	; 0x950e <__udivmodsi4>
    6c98:	da 01       	movw	r26, r20
    6c9a:	c9 01       	movw	r24, r18
    6c9c:	9c 01       	movw	r18, r24
    6c9e:	89 81       	ldd	r24, Y+1	; 0x01
    6ca0:	9a 81       	ldd	r25, Y+2	; 0x02
    6ca2:	fc 01       	movw	r30, r24
    6ca4:	37 8b       	std	Z+23, r19	; 0x17
    6ca6:	26 8b       	std	Z+22, r18	; 0x16
	
	//Calculate the timer value to achieve the desired frequency. 
	this->targetTimerCount = targetTimerCount;
    6ca8:	89 81       	ldd	r24, Y+1	; 0x01
    6caa:	9a 81       	ldd	r25, Y+2	; 0x02
    6cac:	fc 01       	movw	r30, r24
    6cae:	26 89       	ldd	r18, Z+22	; 0x16
    6cb0:	37 89       	ldd	r19, Z+23	; 0x17
    6cb2:	89 81       	ldd	r24, Y+1	; 0x01
    6cb4:	9a 81       	ldd	r25, Y+2	; 0x02
    6cb6:	fc 01       	movw	r30, r24
    6cb8:	37 8b       	std	Z+23, r19	; 0x17
    6cba:	26 8b       	std	Z+22, r18	; 0x16

	this->prescaler = prescaler;
    6cbc:	89 81       	ldd	r24, Y+1	; 0x01
    6cbe:	9a 81       	ldd	r25, Y+2	; 0x02
    6cc0:	2f 81       	ldd	r18, Y+7	; 0x07
    6cc2:	38 85       	ldd	r19, Y+8	; 0x08
    6cc4:	fc 01       	movw	r30, r24
    6cc6:	31 8f       	std	Z+25, r19	; 0x19
    6cc8:	20 8f       	std	Z+24, r18	; 0x18
	
	numOfTasks = 0;
    6cca:	89 81       	ldd	r24, Y+1	; 0x01
    6ccc:	9a 81       	ldd	r25, Y+2	; 0x02
    6cce:	fc 01       	movw	r30, r24
    6cd0:	15 8a       	std	Z+21, r1	; 0x15
    6cd2:	14 8a       	std	Z+20, r1	; 0x14
	
	blowFrameDetected = false;
    6cd4:	89 81       	ldd	r24, Y+1	; 0x01
    6cd6:	9a 81       	ldd	r25, Y+2	; 0x02
    6cd8:	fc 01       	movw	r30, r24
    6cda:	12 8e       	std	Z+26, r1	; 0x1a
	
	completedDispatch = true;
    6cdc:	89 81       	ldd	r24, Y+1	; 0x01
    6cde:	9a 81       	ldd	r25, Y+2	; 0x02
    6ce0:	21 e0       	ldi	r18, 0x01	; 1
    6ce2:	fc 01       	movw	r30, r24
    6ce4:	23 8f       	std	Z+27, r18	; 0x1b
}
    6ce6:	2a 96       	adiw	r28, 0x0a	; 10
    6ce8:	0f b6       	in	r0, 0x3f	; 63
    6cea:	f8 94       	cli
    6cec:	de bf       	out	0x3e, r29	; 62
    6cee:	0f be       	out	0x3f, r0	; 63
    6cf0:	cd bf       	out	0x3d, r28	; 61
    6cf2:	df 91       	pop	r29
    6cf4:	cf 91       	pop	r28
    6cf6:	1f 91       	pop	r17
    6cf8:	0f 91       	pop	r16
    6cfa:	08 95       	ret

00006cfc <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>:
	
	numOfTasks = 0;
}

int Scheduler::addTask(Task *task)
{
    6cfc:	cf 93       	push	r28
    6cfe:	df 93       	push	r29
    6d00:	00 d0       	rcall	.+0      	; 0x6d02 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x6>
    6d02:	1f 92       	push	r1
    6d04:	cd b7       	in	r28, 0x3d	; 61
    6d06:	de b7       	in	r29, 0x3e	; 62
    6d08:	9a 83       	std	Y+2, r25	; 0x02
    6d0a:	89 83       	std	Y+1, r24	; 0x01
    6d0c:	7c 83       	std	Y+4, r23	; 0x04
    6d0e:	6b 83       	std	Y+3, r22	; 0x03
	if (numOfTasks < MAXNUMOFTASKS)
    6d10:	89 81       	ldd	r24, Y+1	; 0x01
    6d12:	9a 81       	ldd	r25, Y+2	; 0x02
    6d14:	fc 01       	movw	r30, r24
    6d16:	84 89       	ldd	r24, Z+20	; 0x14
    6d18:	95 89       	ldd	r25, Z+21	; 0x15
    6d1a:	8a 30       	cpi	r24, 0x0A	; 10
    6d1c:	91 05       	cpc	r25, r1
    6d1e:	04 f5       	brge	.+64     	; 0x6d60 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x64>
	{
		tasks[numOfTasks] = task;
    6d20:	89 81       	ldd	r24, Y+1	; 0x01
    6d22:	9a 81       	ldd	r25, Y+2	; 0x02
    6d24:	fc 01       	movw	r30, r24
    6d26:	84 89       	ldd	r24, Z+20	; 0x14
    6d28:	95 89       	ldd	r25, Z+21	; 0x15
    6d2a:	29 81       	ldd	r18, Y+1	; 0x01
    6d2c:	3a 81       	ldd	r19, Y+2	; 0x02
    6d2e:	88 0f       	add	r24, r24
    6d30:	99 1f       	adc	r25, r25
    6d32:	82 0f       	add	r24, r18
    6d34:	93 1f       	adc	r25, r19
    6d36:	2b 81       	ldd	r18, Y+3	; 0x03
    6d38:	3c 81       	ldd	r19, Y+4	; 0x04
    6d3a:	fc 01       	movw	r30, r24
    6d3c:	31 83       	std	Z+1, r19	; 0x01
    6d3e:	20 83       	st	Z, r18
		numOfTasks++;
    6d40:	89 81       	ldd	r24, Y+1	; 0x01
    6d42:	9a 81       	ldd	r25, Y+2	; 0x02
    6d44:	fc 01       	movw	r30, r24
    6d46:	84 89       	ldd	r24, Z+20	; 0x14
    6d48:	95 89       	ldd	r25, Z+21	; 0x15
    6d4a:	9c 01       	movw	r18, r24
    6d4c:	2f 5f       	subi	r18, 0xFF	; 255
    6d4e:	3f 4f       	sbci	r19, 0xFF	; 255
    6d50:	89 81       	ldd	r24, Y+1	; 0x01
    6d52:	9a 81       	ldd	r25, Y+2	; 0x02
    6d54:	fc 01       	movw	r30, r24
    6d56:	35 8b       	std	Z+21, r19	; 0x15
    6d58:	24 8b       	std	Z+20, r18	; 0x14
		
		return 0;
    6d5a:	80 e0       	ldi	r24, 0x00	; 0
    6d5c:	90 e0       	ldi	r25, 0x00	; 0
    6d5e:	02 c0       	rjmp	.+4      	; 0x6d64 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x68>
	}

	return -1;
    6d60:	8f ef       	ldi	r24, 0xFF	; 255
    6d62:	9f ef       	ldi	r25, 0xFF	; 255
}
    6d64:	0f 90       	pop	r0
    6d66:	0f 90       	pop	r0
    6d68:	0f 90       	pop	r0
    6d6a:	0f 90       	pop	r0
    6d6c:	df 91       	pop	r29
    6d6e:	cf 91       	pop	r28
    6d70:	08 95       	ret

00006d72 <_ZN10helicopter9scheduler9Scheduler4initEv>:

void Scheduler::init()
{
    6d72:	cf 93       	push	r28
    6d74:	df 93       	push	r29
    6d76:	00 d0       	rcall	.+0      	; 0x6d78 <_ZN10helicopter9scheduler9Scheduler4initEv+0x6>
    6d78:	1f 92       	push	r1
    6d7a:	cd b7       	in	r28, 0x3d	; 61
    6d7c:	de b7       	in	r29, 0x3e	; 62
    6d7e:	9c 83       	std	Y+4, r25	; 0x04
    6d80:	8b 83       	std	Y+3, r24	; 0x03
	for (int i = 0; i < numOfTasks; i++)
    6d82:	1a 82       	std	Y+2, r1	; 0x02
    6d84:	19 82       	std	Y+1, r1	; 0x01
    6d86:	24 c0       	rjmp	.+72     	; 0x6dd0 <_ZN10helicopter9scheduler9Scheduler4initEv+0x5e>
	{
		tasks[i]->init();
    6d88:	2b 81       	ldd	r18, Y+3	; 0x03
    6d8a:	3c 81       	ldd	r19, Y+4	; 0x04
    6d8c:	89 81       	ldd	r24, Y+1	; 0x01
    6d8e:	9a 81       	ldd	r25, Y+2	; 0x02
    6d90:	88 0f       	add	r24, r24
    6d92:	99 1f       	adc	r25, r25
    6d94:	82 0f       	add	r24, r18
    6d96:	93 1f       	adc	r25, r19
    6d98:	fc 01       	movw	r30, r24
    6d9a:	80 81       	ld	r24, Z
    6d9c:	91 81       	ldd	r25, Z+1	; 0x01
    6d9e:	fc 01       	movw	r30, r24
    6da0:	80 81       	ld	r24, Z
    6da2:	91 81       	ldd	r25, Z+1	; 0x01
    6da4:	06 96       	adiw	r24, 0x06	; 6
    6da6:	fc 01       	movw	r30, r24
    6da8:	20 81       	ld	r18, Z
    6daa:	31 81       	ldd	r19, Z+1	; 0x01
    6dac:	4b 81       	ldd	r20, Y+3	; 0x03
    6dae:	5c 81       	ldd	r21, Y+4	; 0x04
    6db0:	89 81       	ldd	r24, Y+1	; 0x01
    6db2:	9a 81       	ldd	r25, Y+2	; 0x02
    6db4:	88 0f       	add	r24, r24
    6db6:	99 1f       	adc	r25, r25
    6db8:	84 0f       	add	r24, r20
    6dba:	95 1f       	adc	r25, r21
    6dbc:	fc 01       	movw	r30, r24
    6dbe:	80 81       	ld	r24, Z
    6dc0:	91 81       	ldd	r25, Z+1	; 0x01
    6dc2:	f9 01       	movw	r30, r18
    6dc4:	19 95       	eicall
	return -1;
}

void Scheduler::init()
{
	for (int i = 0; i < numOfTasks; i++)
    6dc6:	89 81       	ldd	r24, Y+1	; 0x01
    6dc8:	9a 81       	ldd	r25, Y+2	; 0x02
    6dca:	01 96       	adiw	r24, 0x01	; 1
    6dcc:	9a 83       	std	Y+2, r25	; 0x02
    6dce:	89 83       	std	Y+1, r24	; 0x01
    6dd0:	8b 81       	ldd	r24, Y+3	; 0x03
    6dd2:	9c 81       	ldd	r25, Y+4	; 0x04
    6dd4:	fc 01       	movw	r30, r24
    6dd6:	24 89       	ldd	r18, Z+20	; 0x14
    6dd8:	35 89       	ldd	r19, Z+21	; 0x15
    6dda:	41 e0       	ldi	r20, 0x01	; 1
    6ddc:	89 81       	ldd	r24, Y+1	; 0x01
    6dde:	9a 81       	ldd	r25, Y+2	; 0x02
    6de0:	82 17       	cp	r24, r18
    6de2:	93 07       	cpc	r25, r19
    6de4:	0c f0       	brlt	.+2      	; 0x6de8 <_ZN10helicopter9scheduler9Scheduler4initEv+0x76>
    6de6:	40 e0       	ldi	r20, 0x00	; 0
    6de8:	44 23       	and	r20, r20
    6dea:	71 f6       	brne	.-100    	; 0x6d88 <_ZN10helicopter9scheduler9Scheduler4initEv+0x16>
	{
		tasks[i]->init();
	}
	
	//setup timer
	OCR1A = targetTimerCount; //Set Clear Timer on Compare (auto reset) (CTC)
    6dec:	88 e8       	ldi	r24, 0x88	; 136
    6dee:	90 e0       	ldi	r25, 0x00	; 0
    6df0:	2b 81       	ldd	r18, Y+3	; 0x03
    6df2:	3c 81       	ldd	r19, Y+4	; 0x04
    6df4:	f9 01       	movw	r30, r18
    6df6:	26 89       	ldd	r18, Z+22	; 0x16
    6df8:	37 89       	ldd	r19, Z+23	; 0x17
    6dfa:	fc 01       	movw	r30, r24
    6dfc:	31 83       	std	Z+1, r19	; 0x01
    6dfe:	20 83       	st	Z, r18
		
	TCCR1B |= (1 << WGM12); //Configure timer 1 for ctc mode
    6e00:	81 e8       	ldi	r24, 0x81	; 129
    6e02:	90 e0       	ldi	r25, 0x00	; 0
    6e04:	21 e8       	ldi	r18, 0x81	; 129
    6e06:	30 e0       	ldi	r19, 0x00	; 0
    6e08:	f9 01       	movw	r30, r18
    6e0a:	20 81       	ld	r18, Z
    6e0c:	28 60       	ori	r18, 0x08	; 8
    6e0e:	fc 01       	movw	r30, r24
    6e10:	20 83       	st	Z, r18
		
	TIMSK1 |= (1 << OCIE1A); //enable ctc interrupt
    6e12:	8f e6       	ldi	r24, 0x6F	; 111
    6e14:	90 e0       	ldi	r25, 0x00	; 0
    6e16:	2f e6       	ldi	r18, 0x6F	; 111
    6e18:	30 e0       	ldi	r19, 0x00	; 0
    6e1a:	f9 01       	movw	r30, r18
    6e1c:	20 81       	ld	r18, Z
    6e1e:	22 60       	ori	r18, 0x02	; 2
    6e20:	fc 01       	movw	r30, r24
    6e22:	20 83       	st	Z, r18
		
	sei(); //Enable global interrupts
    6e24:	78 94       	sei
}
    6e26:	0f 90       	pop	r0
    6e28:	0f 90       	pop	r0
    6e2a:	0f 90       	pop	r0
    6e2c:	0f 90       	pop	r0
    6e2e:	df 91       	pop	r29
    6e30:	cf 91       	pop	r28
    6e32:	08 95       	ret

00006e34 <_ZN10helicopter9scheduler9Scheduler8dispatchEv>:

void Scheduler::dispatch()
{
    6e34:	cf 93       	push	r28
    6e36:	df 93       	push	r29
    6e38:	00 d0       	rcall	.+0      	; 0x6e3a <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x6>
    6e3a:	00 d0       	rcall	.+0      	; 0x6e3c <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x8>
    6e3c:	cd b7       	in	r28, 0x3d	; 61
    6e3e:	de b7       	in	r29, 0x3e	; 62
    6e40:	9e 83       	std	Y+6, r25	; 0x06
    6e42:	8d 83       	std	Y+5, r24	; 0x05
	completedDispatch = false;
    6e44:	8d 81       	ldd	r24, Y+5	; 0x05
    6e46:	9e 81       	ldd	r25, Y+6	; 0x06
    6e48:	fc 01       	movw	r30, r24
    6e4a:	13 8e       	std	Z+27, r1	; 0x1b
	blowFrameDetected = false;
    6e4c:	8d 81       	ldd	r24, Y+5	; 0x05
    6e4e:	9e 81       	ldd	r25, Y+6	; 0x06
    6e50:	fc 01       	movw	r30, r24
    6e52:	12 8e       	std	Z+26, r1	; 0x1a
	
	Task *task = NULL;
    6e54:	1c 82       	std	Y+4, r1	; 0x04
    6e56:	1b 82       	std	Y+3, r1	; 0x03
		
	for (int i = 0; i < numOfTasks; i++)
    6e58:	1a 82       	std	Y+2, r1	; 0x02
    6e5a:	19 82       	std	Y+1, r1	; 0x01
    6e5c:	2a c0       	rjmp	.+84     	; 0x6eb2 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x7e>
	{
		task = tasks[i];
    6e5e:	2d 81       	ldd	r18, Y+5	; 0x05
    6e60:	3e 81       	ldd	r19, Y+6	; 0x06
    6e62:	89 81       	ldd	r24, Y+1	; 0x01
    6e64:	9a 81       	ldd	r25, Y+2	; 0x02
    6e66:	88 0f       	add	r24, r24
    6e68:	99 1f       	adc	r25, r25
    6e6a:	82 0f       	add	r24, r18
    6e6c:	93 1f       	adc	r25, r19
    6e6e:	fc 01       	movw	r30, r24
    6e70:	80 81       	ld	r24, Z
    6e72:	91 81       	ldd	r25, Z+1	; 0x01
    6e74:	9c 83       	std	Y+4, r25	; 0x04
    6e76:	8b 83       	std	Y+3, r24	; 0x03
		
		if (task->getIsReadyToRun())
    6e78:	8b 81       	ldd	r24, Y+3	; 0x03
    6e7a:	9c 81       	ldd	r25, Y+4	; 0x04
    6e7c:	0e 94 6b 35 	call	0x6ad6	; 0x6ad6 <_ZN10helicopter5tasks4Task15getIsReadyToRunEv>
    6e80:	88 23       	and	r24, r24
    6e82:	91 f0       	breq	.+36     	; 0x6ea8 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x74>
		{
			task->setIsReadyToRun(false);
    6e84:	8b 81       	ldd	r24, Y+3	; 0x03
    6e86:	9c 81       	ldd	r25, Y+4	; 0x04
    6e88:	60 e0       	ldi	r22, 0x00	; 0
    6e8a:	0e 94 7c 35 	call	0x6af8	; 0x6af8 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>
			task->runTask();
    6e8e:	8b 81       	ldd	r24, Y+3	; 0x03
    6e90:	9c 81       	ldd	r25, Y+4	; 0x04
    6e92:	fc 01       	movw	r30, r24
    6e94:	80 81       	ld	r24, Z
    6e96:	91 81       	ldd	r25, Z+1	; 0x01
    6e98:	08 96       	adiw	r24, 0x08	; 8
    6e9a:	fc 01       	movw	r30, r24
    6e9c:	20 81       	ld	r18, Z
    6e9e:	31 81       	ldd	r19, Z+1	; 0x01
    6ea0:	8b 81       	ldd	r24, Y+3	; 0x03
    6ea2:	9c 81       	ldd	r25, Y+4	; 0x04
    6ea4:	f9 01       	movw	r30, r18
    6ea6:	19 95       	eicall
	completedDispatch = false;
	blowFrameDetected = false;
	
	Task *task = NULL;
		
	for (int i = 0; i < numOfTasks; i++)
    6ea8:	89 81       	ldd	r24, Y+1	; 0x01
    6eaa:	9a 81       	ldd	r25, Y+2	; 0x02
    6eac:	01 96       	adiw	r24, 0x01	; 1
    6eae:	9a 83       	std	Y+2, r25	; 0x02
    6eb0:	89 83       	std	Y+1, r24	; 0x01
    6eb2:	8d 81       	ldd	r24, Y+5	; 0x05
    6eb4:	9e 81       	ldd	r25, Y+6	; 0x06
    6eb6:	fc 01       	movw	r30, r24
    6eb8:	24 89       	ldd	r18, Z+20	; 0x14
    6eba:	35 89       	ldd	r19, Z+21	; 0x15
    6ebc:	41 e0       	ldi	r20, 0x01	; 1
    6ebe:	89 81       	ldd	r24, Y+1	; 0x01
    6ec0:	9a 81       	ldd	r25, Y+2	; 0x02
    6ec2:	82 17       	cp	r24, r18
    6ec4:	93 07       	cpc	r25, r19
    6ec6:	0c f0       	brlt	.+2      	; 0x6eca <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x96>
    6ec8:	40 e0       	ldi	r20, 0x00	; 0
    6eca:	44 23       	and	r20, r20
    6ecc:	41 f6       	brne	.-112    	; 0x6e5e <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x2a>
	/*if ((TIFR1 & (1<<OCF1A)) != 0)
	{
		model->SystemModel->
	}*/
	
	completedDispatch = true;
    6ece:	8d 81       	ldd	r24, Y+5	; 0x05
    6ed0:	9e 81       	ldd	r25, Y+6	; 0x06
    6ed2:	21 e0       	ldi	r18, 0x01	; 1
    6ed4:	fc 01       	movw	r30, r24
    6ed6:	23 8f       	std	Z+27, r18	; 0x1b
	
	//tells the processor to goto sleep to conserve power since no more
	//tasks are scheduled to be run until after the next scheduler interrupt(tick)
	//which will then wake the processor back up.
	set_sleep_mode(SLEEP_MODE_IDLE);
    6ed8:	83 e5       	ldi	r24, 0x53	; 83
    6eda:	90 e0       	ldi	r25, 0x00	; 0
    6edc:	23 e5       	ldi	r18, 0x53	; 83
    6ede:	30 e0       	ldi	r19, 0x00	; 0
    6ee0:	f9 01       	movw	r30, r18
    6ee2:	20 81       	ld	r18, Z
    6ee4:	21 7f       	andi	r18, 0xF1	; 241
    6ee6:	fc 01       	movw	r30, r24
    6ee8:	20 83       	st	Z, r18
	sleep_mode();
    6eea:	83 e5       	ldi	r24, 0x53	; 83
    6eec:	90 e0       	ldi	r25, 0x00	; 0
    6eee:	23 e5       	ldi	r18, 0x53	; 83
    6ef0:	30 e0       	ldi	r19, 0x00	; 0
    6ef2:	f9 01       	movw	r30, r18
    6ef4:	20 81       	ld	r18, Z
    6ef6:	21 60       	ori	r18, 0x01	; 1
    6ef8:	fc 01       	movw	r30, r24
    6efa:	20 83       	st	Z, r18
    6efc:	88 95       	sleep
    6efe:	83 e5       	ldi	r24, 0x53	; 83
    6f00:	90 e0       	ldi	r25, 0x00	; 0
    6f02:	23 e5       	ldi	r18, 0x53	; 83
    6f04:	30 e0       	ldi	r19, 0x00	; 0
    6f06:	f9 01       	movw	r30, r18
    6f08:	20 81       	ld	r18, Z
    6f0a:	2e 7f       	andi	r18, 0xFE	; 254
    6f0c:	fc 01       	movw	r30, r24
    6f0e:	20 83       	st	Z, r18
}
    6f10:	26 96       	adiw	r28, 0x06	; 6
    6f12:	0f b6       	in	r0, 0x3f	; 63
    6f14:	f8 94       	cli
    6f16:	de bf       	out	0x3e, r29	; 62
    6f18:	0f be       	out	0x3f, r0	; 63
    6f1a:	cd bf       	out	0x3d, r28	; 61
    6f1c:	df 91       	pop	r29
    6f1e:	cf 91       	pop	r28
    6f20:	08 95       	ret

00006f22 <_ZN10helicopter9scheduler9Scheduler5startEv>:

void Scheduler::start()
{
    6f22:	cf 93       	push	r28
    6f24:	df 93       	push	r29
    6f26:	1f 92       	push	r1
    6f28:	1f 92       	push	r1
    6f2a:	cd b7       	in	r28, 0x3d	; 61
    6f2c:	de b7       	in	r29, 0x3e	; 62
    6f2e:	9a 83       	std	Y+2, r25	; 0x02
    6f30:	89 83       	std	Y+1, r24	; 0x01
	//Setting TCCR to a prescaler will start the timer.
	switch(this->prescaler)
    6f32:	89 81       	ldd	r24, Y+1	; 0x01
    6f34:	9a 81       	ldd	r25, Y+2	; 0x02
    6f36:	fc 01       	movw	r30, r24
    6f38:	80 8d       	ldd	r24, Z+24	; 0x18
    6f3a:	91 8d       	ldd	r25, Z+25	; 0x19
    6f3c:	80 34       	cpi	r24, 0x40	; 64
    6f3e:	91 05       	cpc	r25, r1
    6f40:	39 f1       	breq	.+78     	; 0x6f90 <_ZN10helicopter9scheduler9Scheduler5startEv+0x6e>
    6f42:	81 34       	cpi	r24, 0x41	; 65
    6f44:	91 05       	cpc	r25, r1
    6f46:	3c f4       	brge	.+14     	; 0x6f56 <_ZN10helicopter9scheduler9Scheduler5startEv+0x34>
    6f48:	81 30       	cpi	r24, 0x01	; 1
    6f4a:	91 05       	cpc	r25, r1
    6f4c:	69 f0       	breq	.+26     	; 0x6f68 <_ZN10helicopter9scheduler9Scheduler5startEv+0x46>
    6f4e:	88 30       	cpi	r24, 0x08	; 8
    6f50:	91 05       	cpc	r25, r1
    6f52:	a1 f0       	breq	.+40     	; 0x6f7c <_ZN10helicopter9scheduler9Scheduler5startEv+0x5a>
    6f54:	3b c0       	rjmp	.+118    	; 0x6fcc <_ZN10helicopter9scheduler9Scheduler5startEv+0xaa>
    6f56:	81 15       	cp	r24, r1
    6f58:	f1 e0       	ldi	r31, 0x01	; 1
    6f5a:	9f 07       	cpc	r25, r31
    6f5c:	19 f1       	breq	.+70     	; 0x6fa4 <_ZN10helicopter9scheduler9Scheduler5startEv+0x82>
    6f5e:	81 15       	cp	r24, r1
    6f60:	24 e0       	ldi	r18, 0x04	; 4
    6f62:	92 07       	cpc	r25, r18
    6f64:	49 f1       	breq	.+82     	; 0x6fb8 <_ZN10helicopter9scheduler9Scheduler5startEv+0x96>
    6f66:	32 c0       	rjmp	.+100    	; 0x6fcc <_ZN10helicopter9scheduler9Scheduler5startEv+0xaa>
	{
		case 1:
			TCCR1B |= NoPrescaling;
    6f68:	81 e8       	ldi	r24, 0x81	; 129
    6f6a:	90 e0       	ldi	r25, 0x00	; 0
    6f6c:	21 e8       	ldi	r18, 0x81	; 129
    6f6e:	30 e0       	ldi	r19, 0x00	; 0
    6f70:	f9 01       	movw	r30, r18
    6f72:	20 81       	ld	r18, Z
    6f74:	21 60       	ori	r18, 0x01	; 1
    6f76:	fc 01       	movw	r30, r24
    6f78:	20 83       	st	Z, r18
			break;
    6f7a:	31 c0       	rjmp	.+98     	; 0x6fde <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 8:
			TCCR1B |= PrescaleByEight;
    6f7c:	81 e8       	ldi	r24, 0x81	; 129
    6f7e:	90 e0       	ldi	r25, 0x00	; 0
    6f80:	21 e8       	ldi	r18, 0x81	; 129
    6f82:	30 e0       	ldi	r19, 0x00	; 0
    6f84:	f9 01       	movw	r30, r18
    6f86:	20 81       	ld	r18, Z
    6f88:	22 60       	ori	r18, 0x02	; 2
    6f8a:	fc 01       	movw	r30, r24
    6f8c:	20 83       	st	Z, r18
			break;
    6f8e:	27 c0       	rjmp	.+78     	; 0x6fde <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 64:
			TCCR1B |= PrescaleBySixtyFour;
    6f90:	81 e8       	ldi	r24, 0x81	; 129
    6f92:	90 e0       	ldi	r25, 0x00	; 0
    6f94:	21 e8       	ldi	r18, 0x81	; 129
    6f96:	30 e0       	ldi	r19, 0x00	; 0
    6f98:	f9 01       	movw	r30, r18
    6f9a:	20 81       	ld	r18, Z
    6f9c:	23 60       	ori	r18, 0x03	; 3
    6f9e:	fc 01       	movw	r30, r24
    6fa0:	20 83       	st	Z, r18
			break;
    6fa2:	1d c0       	rjmp	.+58     	; 0x6fde <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 256:
			TCCR1B |= PrescaleByTwofiftysix;
    6fa4:	81 e8       	ldi	r24, 0x81	; 129
    6fa6:	90 e0       	ldi	r25, 0x00	; 0
    6fa8:	21 e8       	ldi	r18, 0x81	; 129
    6faa:	30 e0       	ldi	r19, 0x00	; 0
    6fac:	f9 01       	movw	r30, r18
    6fae:	20 81       	ld	r18, Z
    6fb0:	24 60       	ori	r18, 0x04	; 4
    6fb2:	fc 01       	movw	r30, r24
    6fb4:	20 83       	st	Z, r18
			break;
    6fb6:	13 c0       	rjmp	.+38     	; 0x6fde <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 1024:
			TCCR1B |= PrescaleByTentwentyfour;
    6fb8:	81 e8       	ldi	r24, 0x81	; 129
    6fba:	90 e0       	ldi	r25, 0x00	; 0
    6fbc:	21 e8       	ldi	r18, 0x81	; 129
    6fbe:	30 e0       	ldi	r19, 0x00	; 0
    6fc0:	f9 01       	movw	r30, r18
    6fc2:	20 81       	ld	r18, Z
    6fc4:	25 60       	ori	r18, 0x05	; 5
    6fc6:	fc 01       	movw	r30, r24
    6fc8:	20 83       	st	Z, r18
			break;
    6fca:	09 c0       	rjmp	.+18     	; 0x6fde <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		default:
			TCCR1B |= NoPrescaling;	
    6fcc:	81 e8       	ldi	r24, 0x81	; 129
    6fce:	90 e0       	ldi	r25, 0x00	; 0
    6fd0:	21 e8       	ldi	r18, 0x81	; 129
    6fd2:	30 e0       	ldi	r19, 0x00	; 0
    6fd4:	f9 01       	movw	r30, r18
    6fd6:	20 81       	ld	r18, Z
    6fd8:	21 60       	ori	r18, 0x01	; 1
    6fda:	fc 01       	movw	r30, r24
    6fdc:	20 83       	st	Z, r18
	}
}
    6fde:	0f 90       	pop	r0
    6fe0:	0f 90       	pop	r0
    6fe2:	df 91       	pop	r29
    6fe4:	cf 91       	pop	r28
    6fe6:	08 95       	ret

00006fe8 <__vector_17>:

/**
 * Interrupt service routine for determining when tasks are ready to execute.
 */
ISR(TIMER1_COMPA_vect)
{
    6fe8:	1f 92       	push	r1
    6fea:	0f 92       	push	r0
    6fec:	00 90 5f 00 	lds	r0, 0x005F
    6ff0:	0f 92       	push	r0
    6ff2:	11 24       	eor	r1, r1
    6ff4:	00 90 5b 00 	lds	r0, 0x005B
    6ff8:	0f 92       	push	r0
    6ffa:	2f 93       	push	r18
    6ffc:	3f 93       	push	r19
    6ffe:	4f 93       	push	r20
    7000:	5f 93       	push	r21
    7002:	6f 93       	push	r22
    7004:	7f 93       	push	r23
    7006:	8f 93       	push	r24
    7008:	9f 93       	push	r25
    700a:	af 93       	push	r26
    700c:	bf 93       	push	r27
    700e:	ef 93       	push	r30
    7010:	ff 93       	push	r31
    7012:	cf 93       	push	r28
    7014:	df 93       	push	r29
    7016:	00 d0       	rcall	.+0      	; 0x7018 <__vector_17+0x30>
    7018:	00 d0       	rcall	.+0      	; 0x701a <__vector_17+0x32>
    701a:	cd b7       	in	r28, 0x3d	; 61
    701c:	de b7       	in	r29, 0x3e	; 62
	//TODO do we want to stop interrupts in this method?
	Scheduler *scheduler = Scheduler::getScheduler();
    701e:	0e 94 ee 35 	call	0x6bdc	; 0x6bdc <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>
    7022:	9c 83       	std	Y+4, r25	; 0x04
    7024:	8b 83       	std	Y+3, r24	; 0x03
	
	//Detect if the scheduler blew a frame
	if (!scheduler->hasCompletedDispatch())
    7026:	8b 81       	ldd	r24, Y+3	; 0x03
    7028:	9c 81       	ldd	r25, Y+4	; 0x04
    702a:	0e 94 dd 35 	call	0x6bba	; 0x6bba <_ZN10helicopter9scheduler9Scheduler20hasCompletedDispatchEv>
    702e:	98 2f       	mov	r25, r24
    7030:	81 e0       	ldi	r24, 0x01	; 1
    7032:	89 27       	eor	r24, r25
    7034:	88 23       	and	r24, r24
    7036:	29 f0       	breq	.+10     	; 0x7042 <__vector_17+0x5a>
	{
		scheduler->hasBlownFrame(true);
    7038:	8b 81       	ldd	r24, Y+3	; 0x03
    703a:	9c 81       	ldd	r25, Y+4	; 0x04
    703c:	61 e0       	ldi	r22, 0x01	; 1
    703e:	0e 94 ca 35 	call	0x6b94	; 0x6b94 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb>
	}
	
	Task *task = NULL;
    7042:	1e 82       	std	Y+6, r1	; 0x06
    7044:	1d 82       	std	Y+5, r1	; 0x05
	
	//iterate through all the tasks and decrement how many
	//'ticks' are left before the task is ready to execute.
	for (int i = 0; i < scheduler->getNumOfTasks(); i++)
    7046:	1a 82       	std	Y+2, r1	; 0x02
    7048:	19 82       	std	Y+1, r1	; 0x01
    704a:	33 c0       	rjmp	.+102    	; 0x70b2 <__vector_17+0xca>
	{
		task = scheduler->getTasks()[i];
    704c:	8b 81       	ldd	r24, Y+3	; 0x03
    704e:	9c 81       	ldd	r25, Y+4	; 0x04
    7050:	0e 94 bb 35 	call	0x6b76	; 0x6b76 <_ZN10helicopter9scheduler9Scheduler8getTasksEv>
    7054:	9c 01       	movw	r18, r24
    7056:	89 81       	ldd	r24, Y+1	; 0x01
    7058:	9a 81       	ldd	r25, Y+2	; 0x02
    705a:	88 0f       	add	r24, r24
    705c:	99 1f       	adc	r25, r25
    705e:	82 0f       	add	r24, r18
    7060:	93 1f       	adc	r25, r19
    7062:	fc 01       	movw	r30, r24
    7064:	80 81       	ld	r24, Z
    7066:	91 81       	ldd	r25, Z+1	; 0x01
    7068:	9e 83       	std	Y+6, r25	; 0x06
    706a:	8d 83       	std	Y+5, r24	; 0x05
		
		if (task->getDelay() == 0)
    706c:	8d 81       	ldd	r24, Y+5	; 0x05
    706e:	9e 81       	ldd	r25, Y+6	; 0x06
    7070:	0e 94 2f 35 	call	0x6a5e	; 0x6a5e <_ZN10helicopter5tasks4Task8getDelayEv>
    7074:	21 e0       	ldi	r18, 0x01	; 1
    7076:	00 97       	sbiw	r24, 0x00	; 0
    7078:	09 f0       	breq	.+2      	; 0x707c <__vector_17+0x94>
    707a:	20 e0       	ldi	r18, 0x00	; 0
    707c:	22 23       	and	r18, r18
    707e:	81 f0       	breq	.+32     	; 0x70a0 <__vector_17+0xb8>
		{
			//Mark the task as ready to run
			task->setIsReadyToRun(true);
    7080:	8d 81       	ldd	r24, Y+5	; 0x05
    7082:	9e 81       	ldd	r25, Y+6	; 0x06
    7084:	61 e0       	ldi	r22, 0x01	; 1
    7086:	0e 94 7c 35 	call	0x6af8	; 0x6af8 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>
			task->setDelay(task->getPeriod());
    708a:	8d 81       	ldd	r24, Y+5	; 0x05
    708c:	9e 81       	ldd	r25, Y+6	; 0x06
    708e:	0e 94 41 35 	call	0x6a82	; 0x6a82 <_ZN10helicopter5tasks4Task9getPeriodEv>
    7092:	9c 01       	movw	r18, r24
    7094:	8d 81       	ldd	r24, Y+5	; 0x05
    7096:	9e 81       	ldd	r25, Y+6	; 0x06
    7098:	b9 01       	movw	r22, r18
    709a:	0e 94 53 35 	call	0x6aa6	; 0x6aa6 <_ZN10helicopter5tasks4Task8setDelayEi>
    709e:	04 c0       	rjmp	.+8      	; 0x70a8 <__vector_17+0xc0>
		}else
		{
			task->reduceDelay();
    70a0:	8d 81       	ldd	r24, Y+5	; 0x05
    70a2:	9e 81       	ldd	r25, Y+6	; 0x06
    70a4:	0e 94 8f 35 	call	0x6b1e	; 0x6b1e <_ZN10helicopter5tasks4Task11reduceDelayEv>
	
	Task *task = NULL;
	
	//iterate through all the tasks and decrement how many
	//'ticks' are left before the task is ready to execute.
	for (int i = 0; i < scheduler->getNumOfTasks(); i++)
    70a8:	89 81       	ldd	r24, Y+1	; 0x01
    70aa:	9a 81       	ldd	r25, Y+2	; 0x02
    70ac:	01 96       	adiw	r24, 0x01	; 1
    70ae:	9a 83       	std	Y+2, r25	; 0x02
    70b0:	89 83       	std	Y+1, r24	; 0x01
    70b2:	8b 81       	ldd	r24, Y+3	; 0x03
    70b4:	9c 81       	ldd	r25, Y+4	; 0x04
    70b6:	0e 94 a9 35 	call	0x6b52	; 0x6b52 <_ZN10helicopter9scheduler9Scheduler13getNumOfTasksEv>
    70ba:	9c 01       	movw	r18, r24
    70bc:	41 e0       	ldi	r20, 0x01	; 1
    70be:	89 81       	ldd	r24, Y+1	; 0x01
    70c0:	9a 81       	ldd	r25, Y+2	; 0x02
    70c2:	82 17       	cp	r24, r18
    70c4:	93 07       	cpc	r25, r19
    70c6:	0c f0       	brlt	.+2      	; 0x70ca <__vector_17+0xe2>
    70c8:	40 e0       	ldi	r20, 0x00	; 0
    70ca:	44 23       	and	r20, r20
    70cc:	09 f0       	breq	.+2      	; 0x70d0 <__vector_17+0xe8>
    70ce:	be cf       	rjmp	.-132    	; 0x704c <__vector_17+0x64>
		}else
		{
			task->reduceDelay();
		}
	}
}
    70d0:	26 96       	adiw	r28, 0x06	; 6
    70d2:	0f b6       	in	r0, 0x3f	; 63
    70d4:	f8 94       	cli
    70d6:	de bf       	out	0x3e, r29	; 62
    70d8:	0f be       	out	0x3f, r0	; 63
    70da:	cd bf       	out	0x3d, r28	; 61
    70dc:	df 91       	pop	r29
    70de:	cf 91       	pop	r28
    70e0:	ff 91       	pop	r31
    70e2:	ef 91       	pop	r30
    70e4:	bf 91       	pop	r27
    70e6:	af 91       	pop	r26
    70e8:	9f 91       	pop	r25
    70ea:	8f 91       	pop	r24
    70ec:	7f 91       	pop	r23
    70ee:	6f 91       	pop	r22
    70f0:	5f 91       	pop	r21
    70f2:	4f 91       	pop	r20
    70f4:	3f 91       	pop	r19
    70f6:	2f 91       	pop	r18
    70f8:	0f 90       	pop	r0
    70fa:	00 92 5b 00 	sts	0x005B, r0
    70fe:	0f 90       	pop	r0
    7100:	00 92 5f 00 	sts	0x005F, r0
    7104:	0f 90       	pop	r0
    7106:	1f 90       	pop	r1
    7108:	18 95       	reti

0000710a <_ZN10helicopter5tasks4Task4initEv>:
				virtual ~Task(){}
				
				/**
				 * Function to initialize the task before execution.
				 */
				virtual void init(){;}
    710a:	cf 93       	push	r28
    710c:	df 93       	push	r29
    710e:	1f 92       	push	r1
    7110:	1f 92       	push	r1
    7112:	cd b7       	in	r28, 0x3d	; 61
    7114:	de b7       	in	r29, 0x3e	; 62
    7116:	9a 83       	std	Y+2, r25	; 0x02
    7118:	89 83       	std	Y+1, r24	; 0x01
    711a:	0f 90       	pop	r0
    711c:	0f 90       	pop	r0
    711e:	df 91       	pop	r29
    7120:	cf 91       	pop	r28
    7122:	08 95       	ret

00007124 <_ZN10helicopter5tasks16PIDInnerLoopTaskC1EPNS_10controller13PIDControllerEii>:
 */ 
#include "PIDInnerLoopTask.h"

using namespace helicopter::tasks;

PIDInnerLoopTask::PIDInnerLoopTask (PIDController *pidController, int delay, int period) :
    7124:	cf 93       	push	r28
    7126:	df 93       	push	r29
    7128:	cd b7       	in	r28, 0x3d	; 61
    712a:	de b7       	in	r29, 0x3e	; 62
    712c:	28 97       	sbiw	r28, 0x08	; 8
    712e:	0f b6       	in	r0, 0x3f	; 63
    7130:	f8 94       	cli
    7132:	de bf       	out	0x3e, r29	; 62
    7134:	0f be       	out	0x3f, r0	; 63
    7136:	cd bf       	out	0x3d, r28	; 61
    7138:	9a 83       	std	Y+2, r25	; 0x02
    713a:	89 83       	std	Y+1, r24	; 0x01
    713c:	7c 83       	std	Y+4, r23	; 0x04
    713e:	6b 83       	std	Y+3, r22	; 0x03
    7140:	5e 83       	std	Y+6, r21	; 0x06
    7142:	4d 83       	std	Y+5, r20	; 0x05
    7144:	38 87       	std	Y+8, r19	; 0x08
    7146:	2f 83       	std	Y+7, r18	; 0x07
Task(delay, period),
pidController(pidController)
    7148:	89 81       	ldd	r24, Y+1	; 0x01
    714a:	9a 81       	ldd	r25, Y+2	; 0x02
    714c:	4f 81       	ldd	r20, Y+7	; 0x07
    714e:	58 85       	ldd	r21, Y+8	; 0x08
    7150:	2d 81       	ldd	r18, Y+5	; 0x05
    7152:	3e 81       	ldd	r19, Y+6	; 0x06
    7154:	b9 01       	movw	r22, r18
    7156:	0e 94 20 3f 	call	0x7e40	; 0x7e40 <_ZN10helicopter5tasks4TaskC1Eii>
    715a:	89 81       	ldd	r24, Y+1	; 0x01
    715c:	9a 81       	ldd	r25, Y+2	; 0x02
    715e:	2a e4       	ldi	r18, 0x4A	; 74
    7160:	32 e0       	ldi	r19, 0x02	; 2
    7162:	fc 01       	movw	r30, r24
    7164:	31 83       	std	Z+1, r19	; 0x01
    7166:	20 83       	st	Z, r18
    7168:	89 81       	ldd	r24, Y+1	; 0x01
    716a:	9a 81       	ldd	r25, Y+2	; 0x02
    716c:	2b 81       	ldd	r18, Y+3	; 0x03
    716e:	3c 81       	ldd	r19, Y+4	; 0x04
    7170:	fc 01       	movw	r30, r24
    7172:	30 87       	std	Z+8, r19	; 0x08
    7174:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    7176:	28 96       	adiw	r28, 0x08	; 8
    7178:	0f b6       	in	r0, 0x3f	; 63
    717a:	f8 94       	cli
    717c:	de bf       	out	0x3e, r29	; 62
    717e:	0f be       	out	0x3f, r0	; 63
    7180:	cd bf       	out	0x3d, r28	; 61
    7182:	df 91       	pop	r29
    7184:	cf 91       	pop	r28
    7186:	08 95       	ret

00007188 <_ZN10helicopter5tasks16PIDInnerLoopTask11runTaskImplEv>:

void PIDInnerLoopTask::runTaskImpl()
{
    7188:	cf 93       	push	r28
    718a:	df 93       	push	r29
    718c:	1f 92       	push	r1
    718e:	1f 92       	push	r1
    7190:	cd b7       	in	r28, 0x3d	; 61
    7192:	de b7       	in	r29, 0x3e	; 62
    7194:	9a 83       	std	Y+2, r25	; 0x02
    7196:	89 83       	std	Y+1, r24	; 0x01
	pidController->cyclicLateralInnerLoopUpdate();
    7198:	89 81       	ldd	r24, Y+1	; 0x01
    719a:	9a 81       	ldd	r25, Y+2	; 0x02
    719c:	fc 01       	movw	r30, r24
    719e:	87 81       	ldd	r24, Z+7	; 0x07
    71a0:	90 85       	ldd	r25, Z+8	; 0x08
    71a2:	0e 94 27 12 	call	0x244e	; 0x244e <_ZN10helicopter10controller13PIDController28cyclicLateralInnerLoopUpdateEv>
	pidController->cyclicLongitudeInnerLoopUpdate();
    71a6:	89 81       	ldd	r24, Y+1	; 0x01
    71a8:	9a 81       	ldd	r25, Y+2	; 0x02
    71aa:	fc 01       	movw	r30, r24
    71ac:	87 81       	ldd	r24, Z+7	; 0x07
    71ae:	90 85       	ldd	r25, Z+8	; 0x08
    71b0:	0e 94 66 11 	call	0x22cc	; 0x22cc <_ZN10helicopter10controller13PIDController30cyclicLongitudeInnerLoopUpdateEv>
}
    71b4:	0f 90       	pop	r0
    71b6:	0f 90       	pop	r0
    71b8:	df 91       	pop	r29
    71ba:	cf 91       	pop	r28
    71bc:	08 95       	ret

000071be <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class executes the outer loop of the PID controller
		 */
		class PIDInnerLoopTask : public Task
    71be:	cf 93       	push	r28
    71c0:	df 93       	push	r29
    71c2:	1f 92       	push	r1
    71c4:	1f 92       	push	r1
    71c6:	cd b7       	in	r28, 0x3d	; 61
    71c8:	de b7       	in	r29, 0x3e	; 62
    71ca:	9a 83       	std	Y+2, r25	; 0x02
    71cc:	89 83       	std	Y+1, r24	; 0x01
    71ce:	89 81       	ldd	r24, Y+1	; 0x01
    71d0:	9a 81       	ldd	r25, Y+2	; 0x02
    71d2:	2a e4       	ldi	r18, 0x4A	; 74
    71d4:	32 e0       	ldi	r19, 0x02	; 2
    71d6:	fc 01       	movw	r30, r24
    71d8:	31 83       	std	Z+1, r19	; 0x01
    71da:	20 83       	st	Z, r18
    71dc:	89 81       	ldd	r24, Y+1	; 0x01
    71de:	9a 81       	ldd	r25, Y+2	; 0x02
    71e0:	0e 94 90 14 	call	0x2920	; 0x2920 <_ZN10helicopter5tasks4TaskD1Ev>
    71e4:	80 e0       	ldi	r24, 0x00	; 0
    71e6:	90 e0       	ldi	r25, 0x00	; 0
    71e8:	81 70       	andi	r24, 0x01	; 1
    71ea:	99 27       	eor	r25, r25
    71ec:	00 97       	sbiw	r24, 0x00	; 0
    71ee:	21 f0       	breq	.+8      	; 0x71f8 <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev+0x3a>
    71f0:	89 81       	ldd	r24, Y+1	; 0x01
    71f2:	9a 81       	ldd	r25, Y+2	; 0x02
    71f4:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    71f8:	0f 90       	pop	r0
    71fa:	0f 90       	pop	r0
    71fc:	df 91       	pop	r29
    71fe:	cf 91       	pop	r28
    7200:	08 95       	ret

00007202 <_ZN10helicopter5tasks16PIDInnerLoopTaskD0Ev>:
    7202:	cf 93       	push	r28
    7204:	df 93       	push	r29
    7206:	1f 92       	push	r1
    7208:	1f 92       	push	r1
    720a:	cd b7       	in	r28, 0x3d	; 61
    720c:	de b7       	in	r29, 0x3e	; 62
    720e:	9a 83       	std	Y+2, r25	; 0x02
    7210:	89 83       	std	Y+1, r24	; 0x01
    7212:	89 81       	ldd	r24, Y+1	; 0x01
    7214:	9a 81       	ldd	r25, Y+2	; 0x02
    7216:	0e 94 df 38 	call	0x71be	; 0x71be <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>
    721a:	89 81       	ldd	r24, Y+1	; 0x01
    721c:	9a 81       	ldd	r25, Y+2	; 0x02
    721e:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    7222:	0f 90       	pop	r0
    7224:	0f 90       	pop	r0
    7226:	df 91       	pop	r29
    7228:	cf 91       	pop	r28
    722a:	08 95       	ret

0000722c <_ZN10helicopter5tasks16PIDOuterLoopTaskC1EPNS_10controller13PIDControllerEii>:
 */ 
#include "PIDOuterLoopTask.h"

using namespace helicopter::tasks;

PIDOuterLoopTask::PIDOuterLoopTask (PIDController *pidController, int delay, int period) :
    722c:	cf 93       	push	r28
    722e:	df 93       	push	r29
    7230:	cd b7       	in	r28, 0x3d	; 61
    7232:	de b7       	in	r29, 0x3e	; 62
    7234:	28 97       	sbiw	r28, 0x08	; 8
    7236:	0f b6       	in	r0, 0x3f	; 63
    7238:	f8 94       	cli
    723a:	de bf       	out	0x3e, r29	; 62
    723c:	0f be       	out	0x3f, r0	; 63
    723e:	cd bf       	out	0x3d, r28	; 61
    7240:	9a 83       	std	Y+2, r25	; 0x02
    7242:	89 83       	std	Y+1, r24	; 0x01
    7244:	7c 83       	std	Y+4, r23	; 0x04
    7246:	6b 83       	std	Y+3, r22	; 0x03
    7248:	5e 83       	std	Y+6, r21	; 0x06
    724a:	4d 83       	std	Y+5, r20	; 0x05
    724c:	38 87       	std	Y+8, r19	; 0x08
    724e:	2f 83       	std	Y+7, r18	; 0x07
Task(delay, period),
pidController(pidController)
    7250:	89 81       	ldd	r24, Y+1	; 0x01
    7252:	9a 81       	ldd	r25, Y+2	; 0x02
    7254:	4f 81       	ldd	r20, Y+7	; 0x07
    7256:	58 85       	ldd	r21, Y+8	; 0x08
    7258:	2d 81       	ldd	r18, Y+5	; 0x05
    725a:	3e 81       	ldd	r19, Y+6	; 0x06
    725c:	b9 01       	movw	r22, r18
    725e:	0e 94 20 3f 	call	0x7e40	; 0x7e40 <_ZN10helicopter5tasks4TaskC1Eii>
    7262:	89 81       	ldd	r24, Y+1	; 0x01
    7264:	9a 81       	ldd	r25, Y+2	; 0x02
    7266:	28 e5       	ldi	r18, 0x58	; 88
    7268:	32 e0       	ldi	r19, 0x02	; 2
    726a:	fc 01       	movw	r30, r24
    726c:	31 83       	std	Z+1, r19	; 0x01
    726e:	20 83       	st	Z, r18
    7270:	89 81       	ldd	r24, Y+1	; 0x01
    7272:	9a 81       	ldd	r25, Y+2	; 0x02
    7274:	2b 81       	ldd	r18, Y+3	; 0x03
    7276:	3c 81       	ldd	r19, Y+4	; 0x04
    7278:	fc 01       	movw	r30, r24
    727a:	30 87       	std	Z+8, r19	; 0x08
    727c:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    727e:	28 96       	adiw	r28, 0x08	; 8
    7280:	0f b6       	in	r0, 0x3f	; 63
    7282:	f8 94       	cli
    7284:	de bf       	out	0x3e, r29	; 62
    7286:	0f be       	out	0x3f, r0	; 63
    7288:	cd bf       	out	0x3d, r28	; 61
    728a:	df 91       	pop	r29
    728c:	cf 91       	pop	r28
    728e:	08 95       	ret

00007290 <_ZN10helicopter5tasks16PIDOuterLoopTask11runTaskImplEv>:

void PIDOuterLoopTask::runTaskImpl()
{
    7290:	cf 93       	push	r28
    7292:	df 93       	push	r29
    7294:	1f 92       	push	r1
    7296:	1f 92       	push	r1
    7298:	cd b7       	in	r28, 0x3d	; 61
    729a:	de b7       	in	r29, 0x3e	; 62
    729c:	9a 83       	std	Y+2, r25	; 0x02
    729e:	89 83       	std	Y+1, r24	; 0x01
	pidController->mainRotorCollectiveOuterLoopUpdate();
    72a0:	89 81       	ldd	r24, Y+1	; 0x01
    72a2:	9a 81       	ldd	r25, Y+2	; 0x02
    72a4:	fc 01       	movw	r30, r24
    72a6:	87 81       	ldd	r24, Z+7	; 0x07
    72a8:	90 85       	ldd	r25, Z+8	; 0x08
    72aa:	0e 94 63 0d 	call	0x1ac6	; 0x1ac6 <_ZN10helicopter10controller13PIDController34mainRotorCollectiveOuterLoopUpdateEv>
	pidController->tailRotorCollectiveOuterLoopUpdate();
    72ae:	89 81       	ldd	r24, Y+1	; 0x01
    72b0:	9a 81       	ldd	r25, Y+2	; 0x02
    72b2:	fc 01       	movw	r30, r24
    72b4:	87 81       	ldd	r24, Z+7	; 0x07
    72b6:	90 85       	ldd	r25, Z+8	; 0x08
    72b8:	0e 94 f5 0b 	call	0x17ea	; 0x17ea <_ZN10helicopter10controller13PIDController34tailRotorCollectiveOuterLoopUpdateEv>
	pidController->cyclicLongitudeOuterLoopUpdate();
    72bc:	89 81       	ldd	r24, Y+1	; 0x01
    72be:	9a 81       	ldd	r25, Y+2	; 0x02
    72c0:	fc 01       	movw	r30, r24
    72c2:	87 81       	ldd	r24, Z+7	; 0x07
    72c4:	90 85       	ldd	r25, Z+8	; 0x08
    72c6:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <_ZN10helicopter10controller13PIDController30cyclicLongitudeOuterLoopUpdateEv>
	pidController->cyclicLateralOuterLoopUpdate();
    72ca:	89 81       	ldd	r24, Y+1	; 0x01
    72cc:	9a 81       	ldd	r25, Y+2	; 0x02
    72ce:	fc 01       	movw	r30, r24
    72d0:	87 81       	ldd	r24, Z+7	; 0x07
    72d2:	90 85       	ldd	r25, Z+8	; 0x08
    72d4:	0e 94 17 10 	call	0x202e	; 0x202e <_ZN10helicopter10controller13PIDController28cyclicLateralOuterLoopUpdateEv>
}
    72d8:	0f 90       	pop	r0
    72da:	0f 90       	pop	r0
    72dc:	df 91       	pop	r29
    72de:	cf 91       	pop	r28
    72e0:	08 95       	ret

000072e2 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class executes the outer loop of the PID controller
		 */
		class PIDOuterLoopTask : public Task
    72e2:	cf 93       	push	r28
    72e4:	df 93       	push	r29
    72e6:	1f 92       	push	r1
    72e8:	1f 92       	push	r1
    72ea:	cd b7       	in	r28, 0x3d	; 61
    72ec:	de b7       	in	r29, 0x3e	; 62
    72ee:	9a 83       	std	Y+2, r25	; 0x02
    72f0:	89 83       	std	Y+1, r24	; 0x01
    72f2:	89 81       	ldd	r24, Y+1	; 0x01
    72f4:	9a 81       	ldd	r25, Y+2	; 0x02
    72f6:	28 e5       	ldi	r18, 0x58	; 88
    72f8:	32 e0       	ldi	r19, 0x02	; 2
    72fa:	fc 01       	movw	r30, r24
    72fc:	31 83       	std	Z+1, r19	; 0x01
    72fe:	20 83       	st	Z, r18
    7300:	89 81       	ldd	r24, Y+1	; 0x01
    7302:	9a 81       	ldd	r25, Y+2	; 0x02
    7304:	0e 94 90 14 	call	0x2920	; 0x2920 <_ZN10helicopter5tasks4TaskD1Ev>
    7308:	80 e0       	ldi	r24, 0x00	; 0
    730a:	90 e0       	ldi	r25, 0x00	; 0
    730c:	81 70       	andi	r24, 0x01	; 1
    730e:	99 27       	eor	r25, r25
    7310:	00 97       	sbiw	r24, 0x00	; 0
    7312:	21 f0       	breq	.+8      	; 0x731c <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev+0x3a>
    7314:	89 81       	ldd	r24, Y+1	; 0x01
    7316:	9a 81       	ldd	r25, Y+2	; 0x02
    7318:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    731c:	0f 90       	pop	r0
    731e:	0f 90       	pop	r0
    7320:	df 91       	pop	r29
    7322:	cf 91       	pop	r28
    7324:	08 95       	ret

00007326 <_ZN10helicopter5tasks16PIDOuterLoopTaskD0Ev>:
    7326:	cf 93       	push	r28
    7328:	df 93       	push	r29
    732a:	1f 92       	push	r1
    732c:	1f 92       	push	r1
    732e:	cd b7       	in	r28, 0x3d	; 61
    7330:	de b7       	in	r29, 0x3e	; 62
    7332:	9a 83       	std	Y+2, r25	; 0x02
    7334:	89 83       	std	Y+1, r24	; 0x01
    7336:	89 81       	ldd	r24, Y+1	; 0x01
    7338:	9a 81       	ldd	r25, Y+2	; 0x02
    733a:	0e 94 71 39 	call	0x72e2	; 0x72e2 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>
    733e:	89 81       	ldd	r24, Y+1	; 0x01
    7340:	9a 81       	ldd	r25, Y+2	; 0x02
    7342:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    7346:	0f 90       	pop	r0
    7348:	0f 90       	pop	r0
    734a:	df 91       	pop	r29
    734c:	cf 91       	pop	r28
    734e:	08 95       	ret

00007350 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf>:
																							
		
		
		
			float XNEDBodyFrame() const {return xNEDBodyFrame;}
			void XNEDBodyFrame(float val) { xNEDBodyFrame = val;}
    7350:	cf 93       	push	r28
    7352:	df 93       	push	r29
    7354:	00 d0       	rcall	.+0      	; 0x7356 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf+0x6>
    7356:	00 d0       	rcall	.+0      	; 0x7358 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf+0x8>
    7358:	cd b7       	in	r28, 0x3d	; 61
    735a:	de b7       	in	r29, 0x3e	; 62
    735c:	9a 83       	std	Y+2, r25	; 0x02
    735e:	89 83       	std	Y+1, r24	; 0x01
    7360:	4b 83       	std	Y+3, r20	; 0x03
    7362:	5c 83       	std	Y+4, r21	; 0x04
    7364:	6d 83       	std	Y+5, r22	; 0x05
    7366:	7e 83       	std	Y+6, r23	; 0x06
    7368:	29 81       	ldd	r18, Y+1	; 0x01
    736a:	3a 81       	ldd	r19, Y+2	; 0x02
    736c:	8b 81       	ldd	r24, Y+3	; 0x03
    736e:	9c 81       	ldd	r25, Y+4	; 0x04
    7370:	ad 81       	ldd	r26, Y+5	; 0x05
    7372:	be 81       	ldd	r27, Y+6	; 0x06
    7374:	f9 01       	movw	r30, r18
    7376:	84 a3       	std	Z+36, r24	; 0x24
    7378:	95 a3       	std	Z+37, r25	; 0x25
    737a:	a6 a3       	std	Z+38, r26	; 0x26
    737c:	b7 a3       	std	Z+39, r27	; 0x27
    737e:	26 96       	adiw	r28, 0x06	; 6
    7380:	0f b6       	in	r0, 0x3f	; 63
    7382:	f8 94       	cli
    7384:	de bf       	out	0x3e, r29	; 62
    7386:	0f be       	out	0x3f, r0	; 63
    7388:	cd bf       	out	0x3d, r28	; 61
    738a:	df 91       	pop	r29
    738c:	cf 91       	pop	r28
    738e:	08 95       	ret

00007390 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf>:
						
						


			float YNEDBodyFrame() const {return yNEDBodyFrame;}
			void YNEDBodyFrame(float val) { yNEDBodyFrame = val;}
    7390:	cf 93       	push	r28
    7392:	df 93       	push	r29
    7394:	00 d0       	rcall	.+0      	; 0x7396 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf+0x6>
    7396:	00 d0       	rcall	.+0      	; 0x7398 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf+0x8>
    7398:	cd b7       	in	r28, 0x3d	; 61
    739a:	de b7       	in	r29, 0x3e	; 62
    739c:	9a 83       	std	Y+2, r25	; 0x02
    739e:	89 83       	std	Y+1, r24	; 0x01
    73a0:	4b 83       	std	Y+3, r20	; 0x03
    73a2:	5c 83       	std	Y+4, r21	; 0x04
    73a4:	6d 83       	std	Y+5, r22	; 0x05
    73a6:	7e 83       	std	Y+6, r23	; 0x06
    73a8:	89 81       	ldd	r24, Y+1	; 0x01
    73aa:	9a 81       	ldd	r25, Y+2	; 0x02
    73ac:	9c 01       	movw	r18, r24
    73ae:	2c 5a       	subi	r18, 0xAC	; 172
    73b0:	3f 4f       	sbci	r19, 0xFF	; 255
    73b2:	8b 81       	ldd	r24, Y+3	; 0x03
    73b4:	9c 81       	ldd	r25, Y+4	; 0x04
    73b6:	ad 81       	ldd	r26, Y+5	; 0x05
    73b8:	be 81       	ldd	r27, Y+6	; 0x06
    73ba:	f9 01       	movw	r30, r18
    73bc:	80 83       	st	Z, r24
    73be:	91 83       	std	Z+1, r25	; 0x01
    73c0:	a2 83       	std	Z+2, r26	; 0x02
    73c2:	b3 83       	std	Z+3, r27	; 0x03
    73c4:	26 96       	adiw	r28, 0x06	; 6
    73c6:	0f b6       	in	r0, 0x3f	; 63
    73c8:	f8 94       	cli
    73ca:	de bf       	out	0x3e, r29	; 62
    73cc:	0f be       	out	0x3f, r0	; 63
    73ce:	cd bf       	out	0x3d, r28	; 61
    73d0:	df 91       	pop	r29
    73d2:	cf 91       	pop	r28
    73d4:	08 95       	ret

000073d6 <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf>:

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
			void AltitudeFeetAgl(float val) { altitudeFeetAgl = val; }

			float ZNEDBodyFrame() const { return zNEDBodyFrame; }
			void ZNEDBodyFrame(float val) { zNEDBodyFrame = val; }
    73d6:	cf 93       	push	r28
    73d8:	df 93       	push	r29
    73da:	00 d0       	rcall	.+0      	; 0x73dc <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf+0x6>
    73dc:	00 d0       	rcall	.+0      	; 0x73de <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf+0x8>
    73de:	cd b7       	in	r28, 0x3d	; 61
    73e0:	de b7       	in	r29, 0x3e	; 62
    73e2:	9a 83       	std	Y+2, r25	; 0x02
    73e4:	89 83       	std	Y+1, r24	; 0x01
    73e6:	4b 83       	std	Y+3, r20	; 0x03
    73e8:	5c 83       	std	Y+4, r21	; 0x04
    73ea:	6d 83       	std	Y+5, r22	; 0x05
    73ec:	7e 83       	std	Y+6, r23	; 0x06
    73ee:	89 81       	ldd	r24, Y+1	; 0x01
    73f0:	9a 81       	ldd	r25, Y+2	; 0x02
    73f2:	9c 01       	movw	r18, r24
    73f4:	28 57       	subi	r18, 0x78	; 120
    73f6:	3f 4f       	sbci	r19, 0xFF	; 255
    73f8:	8b 81       	ldd	r24, Y+3	; 0x03
    73fa:	9c 81       	ldd	r25, Y+4	; 0x04
    73fc:	ad 81       	ldd	r26, Y+5	; 0x05
    73fe:	be 81       	ldd	r27, Y+6	; 0x06
    7400:	f9 01       	movw	r30, r18
    7402:	80 83       	st	Z, r24
    7404:	91 83       	std	Z+1, r25	; 0x01
    7406:	a2 83       	std	Z+2, r26	; 0x02
    7408:	b3 83       	std	Z+3, r27	; 0x03
    740a:	26 96       	adiw	r28, 0x06	; 6
    740c:	0f b6       	in	r0, 0x3f	; 63
    740e:	f8 94       	cli
    7410:	de bf       	out	0x3e, r29	; 62
    7412:	0f be       	out	0x3f, r0	; 63
    7414:	cd bf       	out	0x3d, r28	; 61
    7416:	df 91       	pop	r29
    7418:	cf 91       	pop	r28
    741a:	08 95       	ret

0000741c <_ZNK10helicopter5model11SystemModel20InitialXPositionEcefEv>:
			void ChecksumErrors(long val) { checksumErrors = val; }
			
			long  BlownFrames() const {return numOfFramesBlown;}
			void BlownFrames( long val ) { numOfFramesBlown = val;}

			long  InitialXPositionEcef() const {return initialXPositionEcef;}
    741c:	cf 93       	push	r28
    741e:	df 93       	push	r29
    7420:	1f 92       	push	r1
    7422:	1f 92       	push	r1
    7424:	cd b7       	in	r28, 0x3d	; 61
    7426:	de b7       	in	r29, 0x3e	; 62
    7428:	9a 83       	std	Y+2, r25	; 0x02
    742a:	89 83       	std	Y+1, r24	; 0x01
    742c:	89 81       	ldd	r24, Y+1	; 0x01
    742e:	9a 81       	ldd	r25, Y+2	; 0x02
    7430:	8c 53       	subi	r24, 0x3C	; 60
    7432:	9f 4f       	sbci	r25, 0xFF	; 255
    7434:	fc 01       	movw	r30, r24
    7436:	80 81       	ld	r24, Z
    7438:	91 81       	ldd	r25, Z+1	; 0x01
    743a:	a2 81       	ldd	r26, Z+2	; 0x02
    743c:	b3 81       	ldd	r27, Z+3	; 0x03
    743e:	bc 01       	movw	r22, r24
    7440:	cd 01       	movw	r24, r26
    7442:	0e 94 e6 46 	call	0x8dcc	; 0x8dcc <__fixsfsi>
    7446:	dc 01       	movw	r26, r24
    7448:	cb 01       	movw	r24, r22
    744a:	bc 01       	movw	r22, r24
    744c:	cd 01       	movw	r24, r26
    744e:	0f 90       	pop	r0
    7450:	0f 90       	pop	r0
    7452:	df 91       	pop	r29
    7454:	cf 91       	pop	r28
    7456:	08 95       	ret

00007458 <_ZNK10helicopter5model11SystemModel20InitialYPositionEcefEv>:
			void InitialXPositionEcef( long val ) { initialXPositionEcef = val;}			

			long  InitialYPositionEcef() const {return initialYPositionEcef;}
    7458:	cf 93       	push	r28
    745a:	df 93       	push	r29
    745c:	1f 92       	push	r1
    745e:	1f 92       	push	r1
    7460:	cd b7       	in	r28, 0x3d	; 61
    7462:	de b7       	in	r29, 0x3e	; 62
    7464:	9a 83       	std	Y+2, r25	; 0x02
    7466:	89 83       	std	Y+1, r24	; 0x01
    7468:	89 81       	ldd	r24, Y+1	; 0x01
    746a:	9a 81       	ldd	r25, Y+2	; 0x02
    746c:	88 53       	subi	r24, 0x38	; 56
    746e:	9f 4f       	sbci	r25, 0xFF	; 255
    7470:	fc 01       	movw	r30, r24
    7472:	80 81       	ld	r24, Z
    7474:	91 81       	ldd	r25, Z+1	; 0x01
    7476:	a2 81       	ldd	r26, Z+2	; 0x02
    7478:	b3 81       	ldd	r27, Z+3	; 0x03
    747a:	bc 01       	movw	r22, r24
    747c:	cd 01       	movw	r24, r26
    747e:	0e 94 e6 46 	call	0x8dcc	; 0x8dcc <__fixsfsi>
    7482:	dc 01       	movw	r26, r24
    7484:	cb 01       	movw	r24, r22
    7486:	bc 01       	movw	r22, r24
    7488:	cd 01       	movw	r24, r26
    748a:	0f 90       	pop	r0
    748c:	0f 90       	pop	r0
    748e:	df 91       	pop	r29
    7490:	cf 91       	pop	r28
    7492:	08 95       	ret

00007494 <_ZNK10helicopter5model11SystemModel20InitialZPositionEcefEv>:
			void InitialYPositionEcef( long val ) { initialYPositionEcef = val;}

			long  InitialZPositionEcef() const {return initialZPositionEcef;}
    7494:	cf 93       	push	r28
    7496:	df 93       	push	r29
    7498:	1f 92       	push	r1
    749a:	1f 92       	push	r1
    749c:	cd b7       	in	r28, 0x3d	; 61
    749e:	de b7       	in	r29, 0x3e	; 62
    74a0:	9a 83       	std	Y+2, r25	; 0x02
    74a2:	89 83       	std	Y+1, r24	; 0x01
    74a4:	89 81       	ldd	r24, Y+1	; 0x01
    74a6:	9a 81       	ldd	r25, Y+2	; 0x02
    74a8:	84 53       	subi	r24, 0x34	; 52
    74aa:	9f 4f       	sbci	r25, 0xFF	; 255
    74ac:	fc 01       	movw	r30, r24
    74ae:	80 81       	ld	r24, Z
    74b0:	91 81       	ldd	r25, Z+1	; 0x01
    74b2:	a2 81       	ldd	r26, Z+2	; 0x02
    74b4:	b3 81       	ldd	r27, Z+3	; 0x03
    74b6:	bc 01       	movw	r22, r24
    74b8:	cd 01       	movw	r24, r26
    74ba:	0e 94 e6 46 	call	0x8dcc	; 0x8dcc <__fixsfsi>
    74be:	dc 01       	movw	r26, r24
    74c0:	cb 01       	movw	r24, r22
    74c2:	bc 01       	movw	r22, r24
    74c4:	cd 01       	movw	r24, r26
    74c6:	0f 90       	pop	r0
    74c8:	0f 90       	pop	r0
    74ca:	df 91       	pop	r29
    74cc:	cf 91       	pop	r28
    74ce:	08 95       	ret

000074d0 <_ZN10helicopter5tasks20SensorProcessingTaskC1EPNS_5model11SystemModelEii>:
#include "CoordinateUtil.h"

using namespace helicopter::tasks;
using namespace helicopter::util;

SensorProcessingTask::SensorProcessingTask (SystemModel *model, int delay, int period) :
    74d0:	cf 93       	push	r28
    74d2:	df 93       	push	r29
    74d4:	cd b7       	in	r28, 0x3d	; 61
    74d6:	de b7       	in	r29, 0x3e	; 62
    74d8:	28 97       	sbiw	r28, 0x08	; 8
    74da:	0f b6       	in	r0, 0x3f	; 63
    74dc:	f8 94       	cli
    74de:	de bf       	out	0x3e, r29	; 62
    74e0:	0f be       	out	0x3f, r0	; 63
    74e2:	cd bf       	out	0x3d, r28	; 61
    74e4:	9a 83       	std	Y+2, r25	; 0x02
    74e6:	89 83       	std	Y+1, r24	; 0x01
    74e8:	7c 83       	std	Y+4, r23	; 0x04
    74ea:	6b 83       	std	Y+3, r22	; 0x03
    74ec:	5e 83       	std	Y+6, r21	; 0x06
    74ee:	4d 83       	std	Y+5, r20	; 0x05
    74f0:	38 87       	std	Y+8, r19	; 0x08
    74f2:	2f 83       	std	Y+7, r18	; 0x07
	Task(delay, period),
	model(model)
    74f4:	89 81       	ldd	r24, Y+1	; 0x01
    74f6:	9a 81       	ldd	r25, Y+2	; 0x02
    74f8:	4f 81       	ldd	r20, Y+7	; 0x07
    74fa:	58 85       	ldd	r21, Y+8	; 0x08
    74fc:	2d 81       	ldd	r18, Y+5	; 0x05
    74fe:	3e 81       	ldd	r19, Y+6	; 0x06
    7500:	b9 01       	movw	r22, r18
    7502:	0e 94 20 3f 	call	0x7e40	; 0x7e40 <_ZN10helicopter5tasks4TaskC1Eii>
    7506:	89 81       	ldd	r24, Y+1	; 0x01
    7508:	9a 81       	ldd	r25, Y+2	; 0x02
    750a:	26 e6       	ldi	r18, 0x66	; 102
    750c:	32 e0       	ldi	r19, 0x02	; 2
    750e:	fc 01       	movw	r30, r24
    7510:	31 83       	std	Z+1, r19	; 0x01
    7512:	20 83       	st	Z, r18
    7514:	89 81       	ldd	r24, Y+1	; 0x01
    7516:	9a 81       	ldd	r25, Y+2	; 0x02
    7518:	2b 81       	ldd	r18, Y+3	; 0x03
    751a:	3c 81       	ldd	r19, Y+4	; 0x04
    751c:	fc 01       	movw	r30, r24
    751e:	30 87       	std	Z+8, r19	; 0x08
    7520:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    7522:	28 96       	adiw	r28, 0x08	; 8
    7524:	0f b6       	in	r0, 0x3f	; 63
    7526:	f8 94       	cli
    7528:	de bf       	out	0x3e, r29	; 62
    752a:	0f be       	out	0x3f, r0	; 63
    752c:	cd bf       	out	0x3d, r28	; 61
    752e:	df 91       	pop	r29
    7530:	cf 91       	pop	r28
    7532:	08 95       	ret

00007534 <_ZN10helicopter5tasks20SensorProcessingTask11runTaskImplEv>:

void SensorProcessingTask::runTaskImpl()
{
    7534:	4f 92       	push	r4
    7536:	5f 92       	push	r5
    7538:	6f 92       	push	r6
    753a:	7f 92       	push	r7
    753c:	8f 92       	push	r8
    753e:	9f 92       	push	r9
    7540:	af 92       	push	r10
    7542:	bf 92       	push	r11
    7544:	cf 92       	push	r12
    7546:	df 92       	push	r13
    7548:	ef 92       	push	r14
    754a:	ff 92       	push	r15
    754c:	0f 93       	push	r16
    754e:	1f 93       	push	r17
    7550:	cf 93       	push	r28
    7552:	df 93       	push	r29
    7554:	cd b7       	in	r28, 0x3d	; 61
    7556:	de b7       	in	r29, 0x3e	; 62
    7558:	66 97       	sbiw	r28, 0x16	; 22
    755a:	0f b6       	in	r0, 0x3f	; 63
    755c:	f8 94       	cli
    755e:	de bf       	out	0x3e, r29	; 62
    7560:	0f be       	out	0x3f, r0	; 63
    7562:	cd bf       	out	0x3d, r28	; 61
    7564:	9e 87       	std	Y+14, r25	; 0x0e
    7566:	8d 87       	std	Y+13, r24	; 0x0d
	float localNEDX = 0;
    7568:	19 82       	std	Y+1, r1	; 0x01
    756a:	1a 82       	std	Y+2, r1	; 0x02
    756c:	1b 82       	std	Y+3, r1	; 0x03
    756e:	1c 82       	std	Y+4, r1	; 0x04
	float localNEDY = 0;
    7570:	1d 82       	std	Y+5, r1	; 0x05
    7572:	1e 82       	std	Y+6, r1	; 0x06
    7574:	1f 82       	std	Y+7, r1	; 0x07
    7576:	18 86       	std	Y+8, r1	; 0x08
	float localNEDZ = 0;
    7578:	19 86       	std	Y+9, r1	; 0x09
    757a:	1a 86       	std	Y+10, r1	; 0x0a
    757c:	1b 86       	std	Y+11, r1	; 0x0b
    757e:	1c 86       	std	Y+12, r1	; 0x0c
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
		localNEDX,localNEDY,localNEDZ);
    7580:	8d 85       	ldd	r24, Y+13	; 0x0d
    7582:	9e 85       	ldd	r25, Y+14	; 0x0e
    7584:	fc 01       	movw	r30, r24
    7586:	87 81       	ldd	r24, Z+7	; 0x07
    7588:	90 85       	ldd	r25, Z+8	; 0x08
    758a:	8c 01       	movw	r16, r24
    758c:	00 53       	subi	r16, 0x30	; 48
    758e:	1f 4f       	sbci	r17, 0xFF	; 255
	float localNEDX = 0;
	float localNEDY = 0;
	float localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    7590:	8d 85       	ldd	r24, Y+13	; 0x0d
    7592:	9e 85       	ldd	r25, Y+14	; 0x0e
    7594:	fc 01       	movw	r30, r24
    7596:	87 81       	ldd	r24, Z+7	; 0x07
    7598:	90 85       	ldd	r25, Z+8	; 0x08
    759a:	0e 94 4a 3a 	call	0x7494	; 0x7494 <_ZNK10helicopter5model11SystemModel20InitialZPositionEcefEv>
    759e:	dc 01       	movw	r26, r24
    75a0:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    75a2:	bc 01       	movw	r22, r24
    75a4:	cd 01       	movw	r24, r26
    75a6:	0e 94 19 47 	call	0x8e32	; 0x8e32 <__floatsisf>
    75aa:	4b 01       	movw	r8, r22
    75ac:	5c 01       	movw	r10, r24
	float localNEDX = 0;
	float localNEDY = 0;
	float localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    75ae:	8d 85       	ldd	r24, Y+13	; 0x0d
    75b0:	9e 85       	ldd	r25, Y+14	; 0x0e
    75b2:	fc 01       	movw	r30, r24
    75b4:	87 81       	ldd	r24, Z+7	; 0x07
    75b6:	90 85       	ldd	r25, Z+8	; 0x08
    75b8:	0e 94 2c 3a 	call	0x7458	; 0x7458 <_ZNK10helicopter5model11SystemModel20InitialYPositionEcefEv>
    75bc:	dc 01       	movw	r26, r24
    75be:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    75c0:	bc 01       	movw	r22, r24
    75c2:	cd 01       	movw	r24, r26
    75c4:	0e 94 19 47 	call	0x8e32	; 0x8e32 <__floatsisf>
    75c8:	6b 01       	movw	r12, r22
    75ca:	7c 01       	movw	r14, r24
	float localNEDX = 0;
	float localNEDY = 0;
	float localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    75cc:	8d 85       	ldd	r24, Y+13	; 0x0d
    75ce:	9e 85       	ldd	r25, Y+14	; 0x0e
    75d0:	fc 01       	movw	r30, r24
    75d2:	87 81       	ldd	r24, Z+7	; 0x07
    75d4:	90 85       	ldd	r25, Z+8	; 0x08
    75d6:	0e 94 0e 3a 	call	0x741c	; 0x741c <_ZNK10helicopter5model11SystemModel20InitialXPositionEcefEv>
    75da:	dc 01       	movw	r26, r24
    75dc:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    75de:	bc 01       	movw	r22, r24
    75e0:	cd 01       	movw	r24, r26
    75e2:	0e 94 19 47 	call	0x8e32	; 0x8e32 <__floatsisf>
    75e6:	6f 87       	std	Y+15, r22	; 0x0f
    75e8:	78 8b       	std	Y+16, r23	; 0x10
    75ea:	89 8b       	std	Y+17, r24	; 0x11
    75ec:	9a 8b       	std	Y+18, r25	; 0x12
    75ee:	8d 85       	ldd	r24, Y+13	; 0x0d
    75f0:	9e 85       	ldd	r25, Y+14	; 0x0e
    75f2:	fc 01       	movw	r30, r24
    75f4:	87 81       	ldd	r24, Z+7	; 0x07
    75f6:	90 85       	ldd	r25, Z+8	; 0x08
    75f8:	0e 94 f8 18 	call	0x31f0	; 0x31f0 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    75fc:	6b 8b       	std	Y+19, r22	; 0x13
    75fe:	7c 8b       	std	Y+20, r23	; 0x14
    7600:	8d 8b       	std	Y+21, r24	; 0x15
    7602:	9e 8b       	std	Y+22, r25	; 0x16
    7604:	8d 85       	ldd	r24, Y+13	; 0x0d
    7606:	9e 85       	ldd	r25, Y+14	; 0x0e
    7608:	fc 01       	movw	r30, r24
    760a:	87 81       	ldd	r24, Z+7	; 0x07
    760c:	90 85       	ldd	r25, Z+8	; 0x08
    760e:	0e 94 6e 19 	call	0x32dc	; 0x32dc <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    7612:	2b 01       	movw	r4, r22
    7614:	3c 01       	movw	r6, r24
    7616:	8d 85       	ldd	r24, Y+13	; 0x0d
    7618:	9e 85       	ldd	r25, Y+14	; 0x0e
    761a:	fc 01       	movw	r30, r24
    761c:	87 81       	ldd	r24, Z+7	; 0x07
    761e:	90 85       	ldd	r25, Z+8	; 0x08
    7620:	0e 94 56 19 	call	0x32ac	; 0x32ac <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    7624:	dc 01       	movw	r26, r24
    7626:	cb 01       	movw	r24, r22
    7628:	9e 01       	movw	r18, r28
    762a:	27 5f       	subi	r18, 0xF7	; 247
    762c:	3f 4f       	sbci	r19, 0xFF	; 255
    762e:	43 2f       	mov	r20, r19
    7630:	4f 93       	push	r20
    7632:	2f 93       	push	r18
    7634:	9e 01       	movw	r18, r28
    7636:	2b 5f       	subi	r18, 0xFB	; 251
    7638:	3f 4f       	sbci	r19, 0xFF	; 255
    763a:	43 2f       	mov	r20, r19
    763c:	4f 93       	push	r20
    763e:	2f 93       	push	r18
    7640:	9e 01       	movw	r18, r28
    7642:	2f 5f       	subi	r18, 0xFF	; 255
    7644:	3f 4f       	sbci	r19, 0xFF	; 255
    7646:	23 2f       	mov	r18, r19
    7648:	2f 93       	push	r18
    764a:	9e 01       	movw	r18, r28
    764c:	2f 5f       	subi	r18, 0xFF	; 255
    764e:	3f 4f       	sbci	r19, 0xFF	; 255
    7650:	2f 93       	push	r18
    7652:	21 2f       	mov	r18, r17
    7654:	2f 93       	push	r18
    7656:	20 2f       	mov	r18, r16
    7658:	2f 93       	push	r18
    765a:	2b 2d       	mov	r18, r11
    765c:	2f 93       	push	r18
    765e:	2a 2d       	mov	r18, r10
    7660:	2f 93       	push	r18
    7662:	29 2d       	mov	r18, r9
    7664:	2f 93       	push	r18
    7666:	28 2d       	mov	r18, r8
    7668:	2f 93       	push	r18
    766a:	2f 2d       	mov	r18, r15
    766c:	2f 93       	push	r18
    766e:	2e 2d       	mov	r18, r14
    7670:	2f 93       	push	r18
    7672:	2d 2d       	mov	r18, r13
    7674:	2f 93       	push	r18
    7676:	2c 2d       	mov	r18, r12
    7678:	2f 93       	push	r18
    767a:	af 84       	ldd	r10, Y+15	; 0x0f
    767c:	b8 88       	ldd	r11, Y+16	; 0x10
    767e:	c9 88       	ldd	r12, Y+17	; 0x11
    7680:	da 88       	ldd	r13, Y+18	; 0x12
    7682:	eb 88       	ldd	r14, Y+19	; 0x13
    7684:	fc 88       	ldd	r15, Y+20	; 0x14
    7686:	0d 89       	ldd	r16, Y+21	; 0x15
    7688:	1e 89       	ldd	r17, Y+22	; 0x16
    768a:	a3 01       	movw	r20, r6
    768c:	92 01       	movw	r18, r4
    768e:	bc 01       	movw	r22, r24
    7690:	cd 01       	movw	r24, r26
    7692:	0e 94 6d 44 	call	0x88da	; 0x88da <_ZN10helicopter4util14CoordinateUtil29ConvertFromGeodedicToLocalNEDEffffffPA3_fRfS4_S4_>
    7696:	8d b7       	in	r24, 0x3d	; 61
    7698:	9e b7       	in	r25, 0x3e	; 62
    769a:	40 96       	adiw	r24, 0x10	; 16
    769c:	0f b6       	in	r0, 0x3f	; 63
    769e:	f8 94       	cli
    76a0:	de bf       	out	0x3e, r29	; 62
    76a2:	0f be       	out	0x3f, r0	; 63
    76a4:	cd bf       	out	0x3d, r28	; 61
		
		
	model->XNEDBodyFrame(localNEDX);
    76a6:	89 81       	ldd	r24, Y+1	; 0x01
    76a8:	9a 81       	ldd	r25, Y+2	; 0x02
    76aa:	ab 81       	ldd	r26, Y+3	; 0x03
    76ac:	bc 81       	ldd	r27, Y+4	; 0x04
    76ae:	2d 85       	ldd	r18, Y+13	; 0x0d
    76b0:	3e 85       	ldd	r19, Y+14	; 0x0e
    76b2:	f9 01       	movw	r30, r18
    76b4:	27 81       	ldd	r18, Z+7	; 0x07
    76b6:	30 85       	ldd	r19, Z+8	; 0x08
    76b8:	ac 01       	movw	r20, r24
    76ba:	bd 01       	movw	r22, r26
    76bc:	c9 01       	movw	r24, r18
    76be:	0e 94 a8 39 	call	0x7350	; 0x7350 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf>
	model->YNEDBodyFrame(localNEDY);
    76c2:	8d 81       	ldd	r24, Y+5	; 0x05
    76c4:	9e 81       	ldd	r25, Y+6	; 0x06
    76c6:	af 81       	ldd	r26, Y+7	; 0x07
    76c8:	b8 85       	ldd	r27, Y+8	; 0x08
    76ca:	2d 85       	ldd	r18, Y+13	; 0x0d
    76cc:	3e 85       	ldd	r19, Y+14	; 0x0e
    76ce:	f9 01       	movw	r30, r18
    76d0:	27 81       	ldd	r18, Z+7	; 0x07
    76d2:	30 85       	ldd	r19, Z+8	; 0x08
    76d4:	ac 01       	movw	r20, r24
    76d6:	bd 01       	movw	r22, r26
    76d8:	c9 01       	movw	r24, r18
    76da:	0e 94 c8 39 	call	0x7390	; 0x7390 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf>
	model->ZNEDBodyFrame(localNEDZ);
    76de:	89 85       	ldd	r24, Y+9	; 0x09
    76e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    76e2:	ab 85       	ldd	r26, Y+11	; 0x0b
    76e4:	bc 85       	ldd	r27, Y+12	; 0x0c
    76e6:	2d 85       	ldd	r18, Y+13	; 0x0d
    76e8:	3e 85       	ldd	r19, Y+14	; 0x0e
    76ea:	f9 01       	movw	r30, r18
    76ec:	27 81       	ldd	r18, Z+7	; 0x07
    76ee:	30 85       	ldd	r19, Z+8	; 0x08
    76f0:	ac 01       	movw	r20, r24
    76f2:	bd 01       	movw	r22, r26
    76f4:	c9 01       	movw	r24, r18
    76f6:	0e 94 eb 39 	call	0x73d6	; 0x73d6 <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf>
}
    76fa:	66 96       	adiw	r28, 0x16	; 22
    76fc:	0f b6       	in	r0, 0x3f	; 63
    76fe:	f8 94       	cli
    7700:	de bf       	out	0x3e, r29	; 62
    7702:	0f be       	out	0x3f, r0	; 63
    7704:	cd bf       	out	0x3d, r28	; 61
    7706:	df 91       	pop	r29
    7708:	cf 91       	pop	r28
    770a:	1f 91       	pop	r17
    770c:	0f 91       	pop	r16
    770e:	ff 90       	pop	r15
    7710:	ef 90       	pop	r14
    7712:	df 90       	pop	r13
    7714:	cf 90       	pop	r12
    7716:	bf 90       	pop	r11
    7718:	af 90       	pop	r10
    771a:	9f 90       	pop	r9
    771c:	8f 90       	pop	r8
    771e:	7f 90       	pop	r7
    7720:	6f 90       	pop	r6
    7722:	5f 90       	pop	r5
    7724:	4f 90       	pop	r4
    7726:	08 95       	ret

00007728 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>:
	{
		/**
		 * This class processes and transforms sensor data such as converting latitude/longitude into
		 * x,y,z coordinates
		 */
		class SensorProcessingTask : public Task
    7728:	cf 93       	push	r28
    772a:	df 93       	push	r29
    772c:	1f 92       	push	r1
    772e:	1f 92       	push	r1
    7730:	cd b7       	in	r28, 0x3d	; 61
    7732:	de b7       	in	r29, 0x3e	; 62
    7734:	9a 83       	std	Y+2, r25	; 0x02
    7736:	89 83       	std	Y+1, r24	; 0x01
    7738:	89 81       	ldd	r24, Y+1	; 0x01
    773a:	9a 81       	ldd	r25, Y+2	; 0x02
    773c:	26 e6       	ldi	r18, 0x66	; 102
    773e:	32 e0       	ldi	r19, 0x02	; 2
    7740:	fc 01       	movw	r30, r24
    7742:	31 83       	std	Z+1, r19	; 0x01
    7744:	20 83       	st	Z, r18
    7746:	89 81       	ldd	r24, Y+1	; 0x01
    7748:	9a 81       	ldd	r25, Y+2	; 0x02
    774a:	0e 94 90 14 	call	0x2920	; 0x2920 <_ZN10helicopter5tasks4TaskD1Ev>
    774e:	80 e0       	ldi	r24, 0x00	; 0
    7750:	90 e0       	ldi	r25, 0x00	; 0
    7752:	81 70       	andi	r24, 0x01	; 1
    7754:	99 27       	eor	r25, r25
    7756:	00 97       	sbiw	r24, 0x00	; 0
    7758:	21 f0       	breq	.+8      	; 0x7762 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev+0x3a>
    775a:	89 81       	ldd	r24, Y+1	; 0x01
    775c:	9a 81       	ldd	r25, Y+2	; 0x02
    775e:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    7762:	0f 90       	pop	r0
    7764:	0f 90       	pop	r0
    7766:	df 91       	pop	r29
    7768:	cf 91       	pop	r28
    776a:	08 95       	ret

0000776c <_ZN10helicopter5tasks20SensorProcessingTaskD0Ev>:
    776c:	cf 93       	push	r28
    776e:	df 93       	push	r29
    7770:	1f 92       	push	r1
    7772:	1f 92       	push	r1
    7774:	cd b7       	in	r28, 0x3d	; 61
    7776:	de b7       	in	r29, 0x3e	; 62
    7778:	9a 83       	std	Y+2, r25	; 0x02
    777a:	89 83       	std	Y+1, r24	; 0x01
    777c:	89 81       	ldd	r24, Y+1	; 0x01
    777e:	9a 81       	ldd	r25, Y+2	; 0x02
    7780:	0e 94 94 3b 	call	0x7728	; 0x7728 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>
    7784:	89 81       	ldd	r24, Y+1	; 0x01
    7786:	9a 81       	ldd	r25, Y+2	; 0x02
    7788:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    778c:	0f 90       	pop	r0
    778e:	0f 90       	pop	r0
    7790:	df 91       	pop	r29
    7792:	cf 91       	pop	r28
    7794:	08 95       	ret

00007796 <_ZN10helicopter10controller13PIDController16setZIntegralGainEf>:
				
				
				
				
				
				void setZIntegralGain(float val)
    7796:	cf 93       	push	r28
    7798:	df 93       	push	r29
    779a:	00 d0       	rcall	.+0      	; 0x779c <_ZN10helicopter10controller13PIDController16setZIntegralGainEf+0x6>
    779c:	00 d0       	rcall	.+0      	; 0x779e <_ZN10helicopter10controller13PIDController16setZIntegralGainEf+0x8>
    779e:	cd b7       	in	r28, 0x3d	; 61
    77a0:	de b7       	in	r29, 0x3e	; 62
    77a2:	9a 83       	std	Y+2, r25	; 0x02
    77a4:	89 83       	std	Y+1, r24	; 0x01
    77a6:	4b 83       	std	Y+3, r20	; 0x03
    77a8:	5c 83       	std	Y+4, r21	; 0x04
    77aa:	6d 83       	std	Y+5, r22	; 0x05
    77ac:	7e 83       	std	Y+6, r23	; 0x06
				{
					zIntegralGain = val;
    77ae:	89 81       	ldd	r24, Y+1	; 0x01
    77b0:	9a 81       	ldd	r25, Y+2	; 0x02
    77b2:	9c 01       	movw	r18, r24
    77b4:	2e 5b       	subi	r18, 0xBE	; 190
    77b6:	3f 4f       	sbci	r19, 0xFF	; 255
    77b8:	8b 81       	ldd	r24, Y+3	; 0x03
    77ba:	9c 81       	ldd	r25, Y+4	; 0x04
    77bc:	ad 81       	ldd	r26, Y+5	; 0x05
    77be:	be 81       	ldd	r27, Y+6	; 0x06
    77c0:	f9 01       	movw	r30, r18
    77c2:	80 83       	st	Z, r24
    77c4:	91 83       	std	Z+1, r25	; 0x01
    77c6:	a2 83       	std	Z+2, r26	; 0x02
    77c8:	b3 83       	std	Z+3, r27	; 0x03
				}
    77ca:	26 96       	adiw	r28, 0x06	; 6
    77cc:	0f b6       	in	r0, 0x3f	; 63
    77ce:	f8 94       	cli
    77d0:	de bf       	out	0x3e, r29	; 62
    77d2:	0f be       	out	0x3f, r0	; 63
    77d4:	cd bf       	out	0x3d, r28	; 61
    77d6:	df 91       	pop	r29
    77d8:	cf 91       	pop	r28
    77da:	08 95       	ret

000077dc <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf>:
				
				void setZDerivativeGain(float val)
    77dc:	cf 93       	push	r28
    77de:	df 93       	push	r29
    77e0:	00 d0       	rcall	.+0      	; 0x77e2 <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf+0x6>
    77e2:	00 d0       	rcall	.+0      	; 0x77e4 <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf+0x8>
    77e4:	cd b7       	in	r28, 0x3d	; 61
    77e6:	de b7       	in	r29, 0x3e	; 62
    77e8:	9a 83       	std	Y+2, r25	; 0x02
    77ea:	89 83       	std	Y+1, r24	; 0x01
    77ec:	4b 83       	std	Y+3, r20	; 0x03
    77ee:	5c 83       	std	Y+4, r21	; 0x04
    77f0:	6d 83       	std	Y+5, r22	; 0x05
    77f2:	7e 83       	std	Y+6, r23	; 0x06
				{
					zDerivativeGain = val;
    77f4:	89 81       	ldd	r24, Y+1	; 0x01
    77f6:	9a 81       	ldd	r25, Y+2	; 0x02
    77f8:	9c 01       	movw	r18, r24
    77fa:	2a 5b       	subi	r18, 0xBA	; 186
    77fc:	3f 4f       	sbci	r19, 0xFF	; 255
    77fe:	8b 81       	ldd	r24, Y+3	; 0x03
    7800:	9c 81       	ldd	r25, Y+4	; 0x04
    7802:	ad 81       	ldd	r26, Y+5	; 0x05
    7804:	be 81       	ldd	r27, Y+6	; 0x06
    7806:	f9 01       	movw	r30, r18
    7808:	80 83       	st	Z, r24
    780a:	91 83       	std	Z+1, r25	; 0x01
    780c:	a2 83       	std	Z+2, r26	; 0x02
    780e:	b3 83       	std	Z+3, r27	; 0x03
				}
    7810:	26 96       	adiw	r28, 0x06	; 6
    7812:	0f b6       	in	r0, 0x3f	; 63
    7814:	f8 94       	cli
    7816:	de bf       	out	0x3e, r29	; 62
    7818:	0f be       	out	0x3f, r0	; 63
    781a:	cd bf       	out	0x3d, r28	; 61
    781c:	df 91       	pop	r29
    781e:	cf 91       	pop	r28
    7820:	08 95       	ret

00007822 <_ZN10helicopter10controller13PIDController20setZProportionalGainEf>:
				
				void setZProportionalGain(float val)
    7822:	cf 93       	push	r28
    7824:	df 93       	push	r29
    7826:	00 d0       	rcall	.+0      	; 0x7828 <_ZN10helicopter10controller13PIDController20setZProportionalGainEf+0x6>
    7828:	00 d0       	rcall	.+0      	; 0x782a <_ZN10helicopter10controller13PIDController20setZProportionalGainEf+0x8>
    782a:	cd b7       	in	r28, 0x3d	; 61
    782c:	de b7       	in	r29, 0x3e	; 62
    782e:	9a 83       	std	Y+2, r25	; 0x02
    7830:	89 83       	std	Y+1, r24	; 0x01
    7832:	4b 83       	std	Y+3, r20	; 0x03
    7834:	5c 83       	std	Y+4, r21	; 0x04
    7836:	6d 83       	std	Y+5, r22	; 0x05
    7838:	7e 83       	std	Y+6, r23	; 0x06
				{
					zProportionalGain = val;
    783a:	89 81       	ldd	r24, Y+1	; 0x01
    783c:	9a 81       	ldd	r25, Y+2	; 0x02
    783e:	9c 01       	movw	r18, r24
    7840:	26 5b       	subi	r18, 0xB6	; 182
    7842:	3f 4f       	sbci	r19, 0xFF	; 255
    7844:	8b 81       	ldd	r24, Y+3	; 0x03
    7846:	9c 81       	ldd	r25, Y+4	; 0x04
    7848:	ad 81       	ldd	r26, Y+5	; 0x05
    784a:	be 81       	ldd	r27, Y+6	; 0x06
    784c:	f9 01       	movw	r30, r18
    784e:	80 83       	st	Z, r24
    7850:	91 83       	std	Z+1, r25	; 0x01
    7852:	a2 83       	std	Z+2, r26	; 0x02
    7854:	b3 83       	std	Z+3, r27	; 0x03
				}
    7856:	26 96       	adiw	r28, 0x06	; 6
    7858:	0f b6       	in	r0, 0x3f	; 63
    785a:	f8 94       	cli
    785c:	de bf       	out	0x3e, r29	; 62
    785e:	0f be       	out	0x3f, r0	; 63
    7860:	cd bf       	out	0x3d, r28	; 61
    7862:	df 91       	pop	r29
    7864:	cf 91       	pop	r28
    7866:	08 95       	ret

00007868 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf>:
				
				void setZAntiWindupGain(float val)
    7868:	cf 93       	push	r28
    786a:	df 93       	push	r29
    786c:	00 d0       	rcall	.+0      	; 0x786e <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf+0x6>
    786e:	00 d0       	rcall	.+0      	; 0x7870 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf+0x8>
    7870:	cd b7       	in	r28, 0x3d	; 61
    7872:	de b7       	in	r29, 0x3e	; 62
    7874:	9a 83       	std	Y+2, r25	; 0x02
    7876:	89 83       	std	Y+1, r24	; 0x01
    7878:	4b 83       	std	Y+3, r20	; 0x03
    787a:	5c 83       	std	Y+4, r21	; 0x04
    787c:	6d 83       	std	Y+5, r22	; 0x05
    787e:	7e 83       	std	Y+6, r23	; 0x06
				{
					zAntiWindupGain = val;
    7880:	89 81       	ldd	r24, Y+1	; 0x01
    7882:	9a 81       	ldd	r25, Y+2	; 0x02
    7884:	9c 01       	movw	r18, r24
    7886:	22 5b       	subi	r18, 0xB2	; 178
    7888:	3f 4f       	sbci	r19, 0xFF	; 255
    788a:	8b 81       	ldd	r24, Y+3	; 0x03
    788c:	9c 81       	ldd	r25, Y+4	; 0x04
    788e:	ad 81       	ldd	r26, Y+5	; 0x05
    7890:	be 81       	ldd	r27, Y+6	; 0x06
    7892:	f9 01       	movw	r30, r18
    7894:	80 83       	st	Z, r24
    7896:	91 83       	std	Z+1, r25	; 0x01
    7898:	a2 83       	std	Z+2, r26	; 0x02
    789a:	b3 83       	std	Z+3, r27	; 0x03
				}
    789c:	26 96       	adiw	r28, 0x06	; 6
    789e:	0f b6       	in	r0, 0x3f	; 63
    78a0:	f8 94       	cli
    78a2:	de bf       	out	0x3e, r29	; 62
    78a4:	0f be       	out	0x3f, r0	; 63
    78a6:	cd bf       	out	0x3d, r28	; 61
    78a8:	df 91       	pop	r29
    78aa:	cf 91       	pop	r28
    78ac:	08 95       	ret

000078ae <_ZN10helicopter5tasks16SimTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEPNS_10controller13PIDControllerEii>:
#include "SyncMessage.h"

using namespace helicopter::tasks;
using namespace helicopter::messages;

SimTelemetryTask::SimTelemetryTask(GroundControlStationInterface *radioInterface, SystemModel *model, PIDController *pidController, int delay, int period) :
    78ae:	ef 92       	push	r14
    78b0:	ff 92       	push	r15
    78b2:	0f 93       	push	r16
    78b4:	1f 93       	push	r17
    78b6:	cf 93       	push	r28
    78b8:	df 93       	push	r29
    78ba:	cd b7       	in	r28, 0x3d	; 61
    78bc:	de b7       	in	r29, 0x3e	; 62
    78be:	2c 97       	sbiw	r28, 0x0c	; 12
    78c0:	0f b6       	in	r0, 0x3f	; 63
    78c2:	f8 94       	cli
    78c4:	de bf       	out	0x3e, r29	; 62
    78c6:	0f be       	out	0x3f, r0	; 63
    78c8:	cd bf       	out	0x3d, r28	; 61
    78ca:	9a 83       	std	Y+2, r25	; 0x02
    78cc:	89 83       	std	Y+1, r24	; 0x01
    78ce:	7c 83       	std	Y+4, r23	; 0x04
    78d0:	6b 83       	std	Y+3, r22	; 0x03
    78d2:	5e 83       	std	Y+6, r21	; 0x06
    78d4:	4d 83       	std	Y+5, r20	; 0x05
    78d6:	38 87       	std	Y+8, r19	; 0x08
    78d8:	2f 83       	std	Y+7, r18	; 0x07
    78da:	1a 87       	std	Y+10, r17	; 0x0a
    78dc:	09 87       	std	Y+9, r16	; 0x09
    78de:	fc 86       	std	Y+12, r15	; 0x0c
    78e0:	eb 86       	std	Y+11, r14	; 0x0b
	Task(delay, period),
	radioInterface(radioInterface),
	model(model),
	pidController(pidController)
    78e2:	89 81       	ldd	r24, Y+1	; 0x01
    78e4:	9a 81       	ldd	r25, Y+2	; 0x02
    78e6:	4b 85       	ldd	r20, Y+11	; 0x0b
    78e8:	5c 85       	ldd	r21, Y+12	; 0x0c
    78ea:	29 85       	ldd	r18, Y+9	; 0x09
    78ec:	3a 85       	ldd	r19, Y+10	; 0x0a
    78ee:	b9 01       	movw	r22, r18
    78f0:	0e 94 20 3f 	call	0x7e40	; 0x7e40 <_ZN10helicopter5tasks4TaskC1Eii>
    78f4:	89 81       	ldd	r24, Y+1	; 0x01
    78f6:	9a 81       	ldd	r25, Y+2	; 0x02
    78f8:	24 e7       	ldi	r18, 0x74	; 116
    78fa:	32 e0       	ldi	r19, 0x02	; 2
    78fc:	fc 01       	movw	r30, r24
    78fe:	31 83       	std	Z+1, r19	; 0x01
    7900:	20 83       	st	Z, r18
    7902:	89 81       	ldd	r24, Y+1	; 0x01
    7904:	9a 81       	ldd	r25, Y+2	; 0x02
    7906:	2b 81       	ldd	r18, Y+3	; 0x03
    7908:	3c 81       	ldd	r19, Y+4	; 0x04
    790a:	fc 01       	movw	r30, r24
    790c:	30 87       	std	Z+8, r19	; 0x08
    790e:	27 83       	std	Z+7, r18	; 0x07
    7910:	89 81       	ldd	r24, Y+1	; 0x01
    7912:	9a 81       	ldd	r25, Y+2	; 0x02
    7914:	2d 81       	ldd	r18, Y+5	; 0x05
    7916:	3e 81       	ldd	r19, Y+6	; 0x06
    7918:	fc 01       	movw	r30, r24
    791a:	32 87       	std	Z+10, r19	; 0x0a
    791c:	21 87       	std	Z+9, r18	; 0x09
    791e:	89 81       	ldd	r24, Y+1	; 0x01
    7920:	9a 81       	ldd	r25, Y+2	; 0x02
    7922:	2f 81       	ldd	r18, Y+7	; 0x07
    7924:	38 85       	ldd	r19, Y+8	; 0x08
    7926:	fc 01       	movw	r30, r24
    7928:	34 87       	std	Z+12, r19	; 0x0c
    792a:	23 87       	std	Z+11, r18	; 0x0b
{
	
}
    792c:	2c 96       	adiw	r28, 0x0c	; 12
    792e:	0f b6       	in	r0, 0x3f	; 63
    7930:	f8 94       	cli
    7932:	de bf       	out	0x3e, r29	; 62
    7934:	0f be       	out	0x3f, r0	; 63
    7936:	cd bf       	out	0x3d, r28	; 61
    7938:	df 91       	pop	r29
    793a:	cf 91       	pop	r28
    793c:	1f 91       	pop	r17
    793e:	0f 91       	pop	r16
    7940:	ff 90       	pop	r15
    7942:	ef 90       	pop	r14
    7944:	08 95       	ret

00007946 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv>:

void SimTelemetryTask::runTaskImpl() 
{
    7946:	cf 93       	push	r28
    7948:	df 93       	push	r29
    794a:	cd b7       	in	r28, 0x3d	; 61
    794c:	de b7       	in	r29, 0x3e	; 62
    794e:	2d 97       	sbiw	r28, 0x0d	; 13
    7950:	0f b6       	in	r0, 0x3f	; 63
    7952:	f8 94       	cli
    7954:	de bf       	out	0x3e, r29	; 62
    7956:	0f be       	out	0x3f, r0	; 63
    7958:	cd bf       	out	0x3d, r28	; 61
    795a:	9d 87       	std	Y+13, r25	; 0x0d
    795c:	8c 87       	std	Y+12, r24	; 0x0c
	
	//Send sync message to indicate to the ground control station that we are ready to receive data.
	//Without this sync message, the GCS could send data while the FC is asleep, which would cause the data
	//to overflow the usart buffer.
	SyncMessage syncMsg;
    795e:	ce 01       	movw	r24, r28
    7960:	05 96       	adiw	r24, 0x05	; 5
    7962:	0e 94 10 25 	call	0x4a20	; 0x4a20 <_ZN10helicopter8messages11SyncMessageC1Ev>
	
	int status = radioInterface->transmit(&syncMsg);
    7966:	8c 85       	ldd	r24, Y+12	; 0x0c
    7968:	9d 85       	ldd	r25, Y+13	; 0x0d
    796a:	fc 01       	movw	r30, r24
    796c:	87 81       	ldd	r24, Z+7	; 0x07
    796e:	90 85       	ldd	r25, Z+8	; 0x08
    7970:	9e 01       	movw	r18, r28
    7972:	2b 5f       	subi	r18, 0xFB	; 251
    7974:	3f 4f       	sbci	r19, 0xFF	; 255
    7976:	b9 01       	movw	r22, r18
    7978:	0e 94 36 22 	call	0x446c	; 0x446c <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>
    797c:	9a 83       	std	Y+2, r25	; 0x02
    797e:	89 83       	std	Y+1, r24	; 0x01
	
	if (status == 0)
    7980:	89 81       	ldd	r24, Y+1	; 0x01
    7982:	9a 81       	ldd	r25, Y+2	; 0x02
    7984:	00 97       	sbiw	r24, 0x00	; 0
    7986:	09 f0       	breq	.+2      	; 0x798a <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x44>
    7988:	ac c1       	rjmp	.+856    	; 0x7ce2 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x39c>
	{
	
		//Use the radio interface to get the telemetry message from the simulator
		Message *message = NULL;
    798a:	1b 86       	std	Y+11, r1	; 0x0b
    798c:	1a 86       	std	Y+10, r1	; 0x0a
	
		status = radioInterface->receive(message);
    798e:	8c 85       	ldd	r24, Y+12	; 0x0c
    7990:	9d 85       	ldd	r25, Y+13	; 0x0d
    7992:	fc 01       	movw	r30, r24
    7994:	87 81       	ldd	r24, Z+7	; 0x07
    7996:	90 85       	ldd	r25, Z+8	; 0x08
    7998:	9e 01       	movw	r18, r28
    799a:	26 5f       	subi	r18, 0xF6	; 246
    799c:	3f 4f       	sbci	r19, 0xFF	; 255
    799e:	b9 01       	movw	r22, r18
    79a0:	0e 94 1c 23 	call	0x4638	; 0x4638 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE>
    79a4:	9a 83       	std	Y+2, r25	; 0x02
    79a6:	89 83       	std	Y+1, r24	; 0x01
	
		if (status == 0 && message != NULL)
    79a8:	89 81       	ldd	r24, Y+1	; 0x01
    79aa:	9a 81       	ldd	r25, Y+2	; 0x02
    79ac:	00 97       	sbiw	r24, 0x00	; 0
    79ae:	09 f0       	breq	.+2      	; 0x79b2 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x6c>
    79b0:	98 c1       	rjmp	.+816    	; 0x7ce2 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x39c>
    79b2:	8a 85       	ldd	r24, Y+10	; 0x0a
    79b4:	9b 85       	ldd	r25, Y+11	; 0x0b
    79b6:	00 97       	sbiw	r24, 0x00	; 0
    79b8:	09 f4       	brne	.+2      	; 0x79bc <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x76>
    79ba:	93 c1       	rjmp	.+806    	; 0x7ce2 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x39c>
		{
			SystemTelemetryMessage *telemMsg = (SystemTelemetryMessage*) message;
    79bc:	8a 85       	ldd	r24, Y+10	; 0x0a
    79be:	9b 85       	ldd	r25, Y+11	; 0x0b
    79c0:	9c 83       	std	Y+4, r25	; 0x04
    79c2:	8b 83       	std	Y+3, r24	; 0x03
			
			//Update the model using the new data received from the simulator.
			telemMsg->updateModelFromMessageFromSimulator(model);
    79c4:	8c 85       	ldd	r24, Y+12	; 0x0c
    79c6:	9d 85       	ldd	r25, Y+13	; 0x0d
    79c8:	fc 01       	movw	r30, r24
    79ca:	21 85       	ldd	r18, Z+9	; 0x09
    79cc:	32 85       	ldd	r19, Z+10	; 0x0a
    79ce:	8b 81       	ldd	r24, Y+3	; 0x03
    79d0:	9c 81       	ldd	r25, Y+4	; 0x04
    79d2:	b9 01       	movw	r22, r18
    79d4:	0e 94 5c 34 	call	0x68b8	; 0x68b8 <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE>
			
			pidController->setYawIntegralGain(telemMsg->YawIntegralGain);
    79d8:	8b 81       	ldd	r24, Y+3	; 0x03
    79da:	9c 81       	ldd	r25, Y+4	; 0x04
    79dc:	fc 01       	movw	r30, r24
    79de:	85 8d       	ldd	r24, Z+29	; 0x1d
    79e0:	96 8d       	ldd	r25, Z+30	; 0x1e
    79e2:	a7 8d       	ldd	r26, Z+31	; 0x1f
    79e4:	b0 a1       	ldd	r27, Z+32	; 0x20
    79e6:	2c 85       	ldd	r18, Y+12	; 0x0c
    79e8:	3d 85       	ldd	r19, Y+13	; 0x0d
    79ea:	f9 01       	movw	r30, r18
    79ec:	23 85       	ldd	r18, Z+11	; 0x0b
    79ee:	34 85       	ldd	r19, Z+12	; 0x0c
    79f0:	ac 01       	movw	r20, r24
    79f2:	bd 01       	movw	r22, r26
    79f4:	c9 01       	movw	r24, r18
    79f6:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf>
			pidController->setYawDerivativeGain(telemMsg->YawDerivativeGain);
    79fa:	8b 81       	ldd	r24, Y+3	; 0x03
    79fc:	9c 81       	ldd	r25, Y+4	; 0x04
    79fe:	fc 01       	movw	r30, r24
    7a00:	81 a1       	ldd	r24, Z+33	; 0x21
    7a02:	92 a1       	ldd	r25, Z+34	; 0x22
    7a04:	a3 a1       	ldd	r26, Z+35	; 0x23
    7a06:	b4 a1       	ldd	r27, Z+36	; 0x24
    7a08:	2c 85       	ldd	r18, Y+12	; 0x0c
    7a0a:	3d 85       	ldd	r19, Y+13	; 0x0d
    7a0c:	f9 01       	movw	r30, r18
    7a0e:	23 85       	ldd	r18, Z+11	; 0x0b
    7a10:	34 85       	ldd	r19, Z+12	; 0x0c
    7a12:	ac 01       	movw	r20, r24
    7a14:	bd 01       	movw	r22, r26
    7a16:	c9 01       	movw	r24, r18
    7a18:	0e 94 19 1d 	call	0x3a32	; 0x3a32 <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf>
			pidController->setYawProportionalGain(telemMsg->YawProportionalGain);
    7a1c:	8b 81       	ldd	r24, Y+3	; 0x03
    7a1e:	9c 81       	ldd	r25, Y+4	; 0x04
    7a20:	fc 01       	movw	r30, r24
    7a22:	85 a1       	ldd	r24, Z+37	; 0x25
    7a24:	96 a1       	ldd	r25, Z+38	; 0x26
    7a26:	a7 a1       	ldd	r26, Z+39	; 0x27
    7a28:	b0 a5       	ldd	r27, Z+40	; 0x28
    7a2a:	2c 85       	ldd	r18, Y+12	; 0x0c
    7a2c:	3d 85       	ldd	r19, Y+13	; 0x0d
    7a2e:	f9 01       	movw	r30, r18
    7a30:	23 85       	ldd	r18, Z+11	; 0x0b
    7a32:	34 85       	ldd	r19, Z+12	; 0x0c
    7a34:	ac 01       	movw	r20, r24
    7a36:	bd 01       	movw	r22, r26
    7a38:	c9 01       	movw	r24, r18
    7a3a:	0e 94 d9 1c 	call	0x39b2	; 0x39b2 <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf>
			pidController->setYawAntiWindupGain(telemMsg->YawAntiWindupGain);
    7a3e:	8b 81       	ldd	r24, Y+3	; 0x03
    7a40:	9c 81       	ldd	r25, Y+4	; 0x04
    7a42:	fc 01       	movw	r30, r24
    7a44:	81 a5       	ldd	r24, Z+41	; 0x29
    7a46:	92 a5       	ldd	r25, Z+42	; 0x2a
    7a48:	a3 a5       	ldd	r26, Z+43	; 0x2b
    7a4a:	b4 a5       	ldd	r27, Z+44	; 0x2c
    7a4c:	2c 85       	ldd	r18, Y+12	; 0x0c
    7a4e:	3d 85       	ldd	r19, Y+13	; 0x0d
    7a50:	f9 01       	movw	r30, r18
    7a52:	23 85       	ldd	r18, Z+11	; 0x0b
    7a54:	34 85       	ldd	r19, Z+12	; 0x0c
    7a56:	ac 01       	movw	r20, r24
    7a58:	bd 01       	movw	r22, r26
    7a5a:	c9 01       	movw	r24, r18
    7a5c:	0e 94 5c 1d 	call	0x3ab8	; 0x3ab8 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf>
		
			pidController->setXIntegralGain(telemMsg->XIntegralGain);
    7a60:	8b 81       	ldd	r24, Y+3	; 0x03
    7a62:	9c 81       	ldd	r25, Y+4	; 0x04
    7a64:	87 5b       	subi	r24, 0xB7	; 183
    7a66:	9f 4f       	sbci	r25, 0xFF	; 255
    7a68:	fc 01       	movw	r30, r24
    7a6a:	80 81       	ld	r24, Z
    7a6c:	91 81       	ldd	r25, Z+1	; 0x01
    7a6e:	a2 81       	ldd	r26, Z+2	; 0x02
    7a70:	b3 81       	ldd	r27, Z+3	; 0x03
    7a72:	2c 85       	ldd	r18, Y+12	; 0x0c
    7a74:	3d 85       	ldd	r19, Y+13	; 0x0d
    7a76:	f9 01       	movw	r30, r18
    7a78:	23 85       	ldd	r18, Z+11	; 0x0b
    7a7a:	34 85       	ldd	r19, Z+12	; 0x0c
    7a7c:	ac 01       	movw	r20, r24
    7a7e:	bd 01       	movw	r22, r26
    7a80:	c9 01       	movw	r24, r18
    7a82:	0e 94 f8 19 	call	0x33f0	; 0x33f0 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf>
			pidController->setXDerivativeGain(telemMsg->XDerivativeGain);
    7a86:	8b 81       	ldd	r24, Y+3	; 0x03
    7a88:	9c 81       	ldd	r25, Y+4	; 0x04
    7a8a:	83 5b       	subi	r24, 0xB3	; 179
    7a8c:	9f 4f       	sbci	r25, 0xFF	; 255
    7a8e:	fc 01       	movw	r30, r24
    7a90:	80 81       	ld	r24, Z
    7a92:	91 81       	ldd	r25, Z+1	; 0x01
    7a94:	a2 81       	ldd	r26, Z+2	; 0x02
    7a96:	b3 81       	ldd	r27, Z+3	; 0x03
    7a98:	2c 85       	ldd	r18, Y+12	; 0x0c
    7a9a:	3d 85       	ldd	r19, Y+13	; 0x0d
    7a9c:	f9 01       	movw	r30, r18
    7a9e:	23 85       	ldd	r18, Z+11	; 0x0b
    7aa0:	34 85       	ldd	r19, Z+12	; 0x0c
    7aa2:	ac 01       	movw	r20, r24
    7aa4:	bd 01       	movw	r22, r26
    7aa6:	c9 01       	movw	r24, r18
    7aa8:	0e 94 18 1a 	call	0x3430	; 0x3430 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf>
			pidController->setXProportionalGain(telemMsg->XProportionalGain);
    7aac:	8b 81       	ldd	r24, Y+3	; 0x03
    7aae:	9c 81       	ldd	r25, Y+4	; 0x04
    7ab0:	8f 5a       	subi	r24, 0xAF	; 175
    7ab2:	9f 4f       	sbci	r25, 0xFF	; 255
    7ab4:	fc 01       	movw	r30, r24
    7ab6:	80 81       	ld	r24, Z
    7ab8:	91 81       	ldd	r25, Z+1	; 0x01
    7aba:	a2 81       	ldd	r26, Z+2	; 0x02
    7abc:	b3 81       	ldd	r27, Z+3	; 0x03
    7abe:	2c 85       	ldd	r18, Y+12	; 0x0c
    7ac0:	3d 85       	ldd	r19, Y+13	; 0x0d
    7ac2:	f9 01       	movw	r30, r18
    7ac4:	23 85       	ldd	r18, Z+11	; 0x0b
    7ac6:	34 85       	ldd	r19, Z+12	; 0x0c
    7ac8:	ac 01       	movw	r20, r24
    7aca:	bd 01       	movw	r22, r26
    7acc:	c9 01       	movw	r24, r18
    7ace:	0e 94 38 1a 	call	0x3470	; 0x3470 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf>
			pidController->setXAntiWindupGain(telemMsg->XAntiWindupGain);
    7ad2:	8b 81       	ldd	r24, Y+3	; 0x03
    7ad4:	9c 81       	ldd	r25, Y+4	; 0x04
    7ad6:	8b 5a       	subi	r24, 0xAB	; 171
    7ad8:	9f 4f       	sbci	r25, 0xFF	; 255
    7ada:	fc 01       	movw	r30, r24
    7adc:	80 81       	ld	r24, Z
    7ade:	91 81       	ldd	r25, Z+1	; 0x01
    7ae0:	a2 81       	ldd	r26, Z+2	; 0x02
    7ae2:	b3 81       	ldd	r27, Z+3	; 0x03
    7ae4:	2c 85       	ldd	r18, Y+12	; 0x0c
    7ae6:	3d 85       	ldd	r19, Y+13	; 0x0d
    7ae8:	f9 01       	movw	r30, r18
    7aea:	23 85       	ldd	r18, Z+11	; 0x0b
    7aec:	34 85       	ldd	r19, Z+12	; 0x0c
    7aee:	ac 01       	movw	r20, r24
    7af0:	bd 01       	movw	r22, r26
    7af2:	c9 01       	movw	r24, r18
    7af4:	0e 94 58 1a 	call	0x34b0	; 0x34b0 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf>
			pidController->setLongitudeInnerLoopGain(telemMsg->LongitudeInnerLoopGain);
    7af8:	8b 81       	ldd	r24, Y+3	; 0x03
    7afa:	9c 81       	ldd	r25, Y+4	; 0x04
    7afc:	87 5a       	subi	r24, 0xA7	; 167
    7afe:	9f 4f       	sbci	r25, 0xFF	; 255
    7b00:	fc 01       	movw	r30, r24
    7b02:	80 81       	ld	r24, Z
    7b04:	91 81       	ldd	r25, Z+1	; 0x01
    7b06:	a2 81       	ldd	r26, Z+2	; 0x02
    7b08:	b3 81       	ldd	r27, Z+3	; 0x03
    7b0a:	2c 85       	ldd	r18, Y+12	; 0x0c
    7b0c:	3d 85       	ldd	r19, Y+13	; 0x0d
    7b0e:	f9 01       	movw	r30, r18
    7b10:	23 85       	ldd	r18, Z+11	; 0x0b
    7b12:	34 85       	ldd	r19, Z+12	; 0x0c
    7b14:	ac 01       	movw	r20, r24
    7b16:	bd 01       	movw	r22, r26
    7b18:	c9 01       	movw	r24, r18
    7b1a:	0e 94 78 1a 	call	0x34f0	; 0x34f0 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf>
			pidController->setPitchAngularVelocityGain(telemMsg->PitchAngularVelocityGain);
    7b1e:	8b 81       	ldd	r24, Y+3	; 0x03
    7b20:	9c 81       	ldd	r25, Y+4	; 0x04
    7b22:	8b 59       	subi	r24, 0x9B	; 155
    7b24:	9f 4f       	sbci	r25, 0xFF	; 255
    7b26:	fc 01       	movw	r30, r24
    7b28:	80 81       	ld	r24, Z
    7b2a:	91 81       	ldd	r25, Z+1	; 0x01
    7b2c:	a2 81       	ldd	r26, Z+2	; 0x02
    7b2e:	b3 81       	ldd	r27, Z+3	; 0x03
    7b30:	2c 85       	ldd	r18, Y+12	; 0x0c
    7b32:	3d 85       	ldd	r19, Y+13	; 0x0d
    7b34:	f9 01       	movw	r30, r18
    7b36:	23 85       	ldd	r18, Z+11	; 0x0b
    7b38:	34 85       	ldd	r19, Z+12	; 0x0c
    7b3a:	ac 01       	movw	r20, r24
    7b3c:	bd 01       	movw	r22, r26
    7b3e:	c9 01       	movw	r24, r18
    7b40:	0e 94 98 1a 	call	0x3530	; 0x3530 <_ZN10helicopter10controller13PIDController27setPitchAngularVelocityGainEf>
				
			pidController->setYIntegralGain(telemMsg->YIntegralGain);
    7b44:	8b 81       	ldd	r24, Y+3	; 0x03
    7b46:	9c 81       	ldd	r25, Y+4	; 0x04
    7b48:	8b 57       	subi	r24, 0x7B	; 123
    7b4a:	9f 4f       	sbci	r25, 0xFF	; 255
    7b4c:	fc 01       	movw	r30, r24
    7b4e:	80 81       	ld	r24, Z
    7b50:	91 81       	ldd	r25, Z+1	; 0x01
    7b52:	a2 81       	ldd	r26, Z+2	; 0x02
    7b54:	b3 81       	ldd	r27, Z+3	; 0x03
    7b56:	2c 85       	ldd	r18, Y+12	; 0x0c
    7b58:	3d 85       	ldd	r19, Y+13	; 0x0d
    7b5a:	f9 01       	movw	r30, r18
    7b5c:	23 85       	ldd	r18, Z+11	; 0x0b
    7b5e:	34 85       	ldd	r19, Z+12	; 0x0c
    7b60:	ac 01       	movw	r20, r24
    7b62:	bd 01       	movw	r22, r26
    7b64:	c9 01       	movw	r24, r18
    7b66:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <_ZN10helicopter10controller13PIDController16setYIntegralGainEf>
			pidController->setYDerivativeGain(telemMsg->YDerivativeGain);
    7b6a:	8b 81       	ldd	r24, Y+3	; 0x03
    7b6c:	9c 81       	ldd	r25, Y+4	; 0x04
    7b6e:	87 57       	subi	r24, 0x77	; 119
    7b70:	9f 4f       	sbci	r25, 0xFF	; 255
    7b72:	fc 01       	movw	r30, r24
    7b74:	80 81       	ld	r24, Z
    7b76:	91 81       	ldd	r25, Z+1	; 0x01
    7b78:	a2 81       	ldd	r26, Z+2	; 0x02
    7b7a:	b3 81       	ldd	r27, Z+3	; 0x03
    7b7c:	2c 85       	ldd	r18, Y+12	; 0x0c
    7b7e:	3d 85       	ldd	r19, Y+13	; 0x0d
    7b80:	f9 01       	movw	r30, r18
    7b82:	23 85       	ldd	r18, Z+11	; 0x0b
    7b84:	34 85       	ldd	r19, Z+12	; 0x0c
    7b86:	ac 01       	movw	r20, r24
    7b88:	bd 01       	movw	r22, r26
    7b8a:	c9 01       	movw	r24, r18
    7b8c:	0e 94 1e 1b 	call	0x363c	; 0x363c <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf>
			pidController->setYProportionalGain(telemMsg->YProportionalGain);
    7b90:	8b 81       	ldd	r24, Y+3	; 0x03
    7b92:	9c 81       	ldd	r25, Y+4	; 0x04
    7b94:	83 57       	subi	r24, 0x73	; 115
    7b96:	9f 4f       	sbci	r25, 0xFF	; 255
    7b98:	fc 01       	movw	r30, r24
    7b9a:	80 81       	ld	r24, Z
    7b9c:	91 81       	ldd	r25, Z+1	; 0x01
    7b9e:	a2 81       	ldd	r26, Z+2	; 0x02
    7ba0:	b3 81       	ldd	r27, Z+3	; 0x03
    7ba2:	2c 85       	ldd	r18, Y+12	; 0x0c
    7ba4:	3d 85       	ldd	r19, Y+13	; 0x0d
    7ba6:	f9 01       	movw	r30, r18
    7ba8:	23 85       	ldd	r18, Z+11	; 0x0b
    7baa:	34 85       	ldd	r19, Z+12	; 0x0c
    7bac:	ac 01       	movw	r20, r24
    7bae:	bd 01       	movw	r22, r26
    7bb0:	c9 01       	movw	r24, r18
    7bb2:	0e 94 3e 1b 	call	0x367c	; 0x367c <_ZN10helicopter10controller13PIDController20setYProportionalGainEf>
			pidController->setYAntiWindupGain(telemMsg->YAntiWindupGain);
    7bb6:	8b 81       	ldd	r24, Y+3	; 0x03
    7bb8:	9c 81       	ldd	r25, Y+4	; 0x04
    7bba:	8f 56       	subi	r24, 0x6F	; 111
    7bbc:	9f 4f       	sbci	r25, 0xFF	; 255
    7bbe:	fc 01       	movw	r30, r24
    7bc0:	80 81       	ld	r24, Z
    7bc2:	91 81       	ldd	r25, Z+1	; 0x01
    7bc4:	a2 81       	ldd	r26, Z+2	; 0x02
    7bc6:	b3 81       	ldd	r27, Z+3	; 0x03
    7bc8:	2c 85       	ldd	r18, Y+12	; 0x0c
    7bca:	3d 85       	ldd	r19, Y+13	; 0x0d
    7bcc:	f9 01       	movw	r30, r18
    7bce:	23 85       	ldd	r18, Z+11	; 0x0b
    7bd0:	34 85       	ldd	r19, Z+12	; 0x0c
    7bd2:	ac 01       	movw	r20, r24
    7bd4:	bd 01       	movw	r22, r26
    7bd6:	c9 01       	movw	r24, r18
    7bd8:	0e 94 5e 1b 	call	0x36bc	; 0x36bc <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf>
			pidController->setLateralInnerLoopGain(telemMsg->LateralInnerLoopGain);
    7bdc:	8b 81       	ldd	r24, Y+3	; 0x03
    7bde:	9c 81       	ldd	r25, Y+4	; 0x04
    7be0:	8b 56       	subi	r24, 0x6B	; 107
    7be2:	9f 4f       	sbci	r25, 0xFF	; 255
    7be4:	fc 01       	movw	r30, r24
    7be6:	80 81       	ld	r24, Z
    7be8:	91 81       	ldd	r25, Z+1	; 0x01
    7bea:	a2 81       	ldd	r26, Z+2	; 0x02
    7bec:	b3 81       	ldd	r27, Z+3	; 0x03
    7bee:	2c 85       	ldd	r18, Y+12	; 0x0c
    7bf0:	3d 85       	ldd	r19, Y+13	; 0x0d
    7bf2:	f9 01       	movw	r30, r18
    7bf4:	23 85       	ldd	r18, Z+11	; 0x0b
    7bf6:	34 85       	ldd	r19, Z+12	; 0x0c
    7bf8:	ac 01       	movw	r20, r24
    7bfa:	bd 01       	movw	r22, r26
    7bfc:	c9 01       	movw	r24, r18
    7bfe:	0e 94 7e 1b 	call	0x36fc	; 0x36fc <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf>
			pidController->setRollAngularVelocityGain(telemMsg->RollAngularVelocityGain);
    7c02:	8b 81       	ldd	r24, Y+3	; 0x03
    7c04:	9c 81       	ldd	r25, Y+4	; 0x04
    7c06:	8f 55       	subi	r24, 0x5F	; 95
    7c08:	9f 4f       	sbci	r25, 0xFF	; 255
    7c0a:	fc 01       	movw	r30, r24
    7c0c:	80 81       	ld	r24, Z
    7c0e:	91 81       	ldd	r25, Z+1	; 0x01
    7c10:	a2 81       	ldd	r26, Z+2	; 0x02
    7c12:	b3 81       	ldd	r27, Z+3	; 0x03
    7c14:	2c 85       	ldd	r18, Y+12	; 0x0c
    7c16:	3d 85       	ldd	r19, Y+13	; 0x0d
    7c18:	f9 01       	movw	r30, r18
    7c1a:	23 85       	ldd	r18, Z+11	; 0x0b
    7c1c:	34 85       	ldd	r19, Z+12	; 0x0c
    7c1e:	ac 01       	movw	r20, r24
    7c20:	bd 01       	movw	r22, r26
    7c22:	c9 01       	movw	r24, r18
    7c24:	0e 94 9e 1b 	call	0x373c	; 0x373c <_ZN10helicopter10controller13PIDController26setRollAngularVelocityGainEf>
			
			pidController->setZIntegralGain(telemMsg->ZIntegralGain);
    7c28:	8b 81       	ldd	r24, Y+3	; 0x03
    7c2a:	9c 81       	ldd	r25, Y+4	; 0x04
    7c2c:	83 54       	subi	r24, 0x43	; 67
    7c2e:	9f 4f       	sbci	r25, 0xFF	; 255
    7c30:	fc 01       	movw	r30, r24
    7c32:	80 81       	ld	r24, Z
    7c34:	91 81       	ldd	r25, Z+1	; 0x01
    7c36:	a2 81       	ldd	r26, Z+2	; 0x02
    7c38:	b3 81       	ldd	r27, Z+3	; 0x03
    7c3a:	2c 85       	ldd	r18, Y+12	; 0x0c
    7c3c:	3d 85       	ldd	r19, Y+13	; 0x0d
    7c3e:	f9 01       	movw	r30, r18
    7c40:	23 85       	ldd	r18, Z+11	; 0x0b
    7c42:	34 85       	ldd	r19, Z+12	; 0x0c
    7c44:	ac 01       	movw	r20, r24
    7c46:	bd 01       	movw	r22, r26
    7c48:	c9 01       	movw	r24, r18
    7c4a:	0e 94 cb 3b 	call	0x7796	; 0x7796 <_ZN10helicopter10controller13PIDController16setZIntegralGainEf>
			pidController->setZDerivativeGain(telemMsg->ZDerivativeGain);
    7c4e:	8b 81       	ldd	r24, Y+3	; 0x03
    7c50:	9c 81       	ldd	r25, Y+4	; 0x04
    7c52:	8f 53       	subi	r24, 0x3F	; 63
    7c54:	9f 4f       	sbci	r25, 0xFF	; 255
    7c56:	fc 01       	movw	r30, r24
    7c58:	80 81       	ld	r24, Z
    7c5a:	91 81       	ldd	r25, Z+1	; 0x01
    7c5c:	a2 81       	ldd	r26, Z+2	; 0x02
    7c5e:	b3 81       	ldd	r27, Z+3	; 0x03
    7c60:	2c 85       	ldd	r18, Y+12	; 0x0c
    7c62:	3d 85       	ldd	r19, Y+13	; 0x0d
    7c64:	f9 01       	movw	r30, r18
    7c66:	23 85       	ldd	r18, Z+11	; 0x0b
    7c68:	34 85       	ldd	r19, Z+12	; 0x0c
    7c6a:	ac 01       	movw	r20, r24
    7c6c:	bd 01       	movw	r22, r26
    7c6e:	c9 01       	movw	r24, r18
    7c70:	0e 94 ee 3b 	call	0x77dc	; 0x77dc <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf>
			pidController->setZProportionalGain(telemMsg->ZProportionalGain);
    7c74:	8b 81       	ldd	r24, Y+3	; 0x03
    7c76:	9c 81       	ldd	r25, Y+4	; 0x04
    7c78:	8b 53       	subi	r24, 0x3B	; 59
    7c7a:	9f 4f       	sbci	r25, 0xFF	; 255
    7c7c:	fc 01       	movw	r30, r24
    7c7e:	80 81       	ld	r24, Z
    7c80:	91 81       	ldd	r25, Z+1	; 0x01
    7c82:	a2 81       	ldd	r26, Z+2	; 0x02
    7c84:	b3 81       	ldd	r27, Z+3	; 0x03
    7c86:	2c 85       	ldd	r18, Y+12	; 0x0c
    7c88:	3d 85       	ldd	r19, Y+13	; 0x0d
    7c8a:	f9 01       	movw	r30, r18
    7c8c:	23 85       	ldd	r18, Z+11	; 0x0b
    7c8e:	34 85       	ldd	r19, Z+12	; 0x0c
    7c90:	ac 01       	movw	r20, r24
    7c92:	bd 01       	movw	r22, r26
    7c94:	c9 01       	movw	r24, r18
    7c96:	0e 94 11 3c 	call	0x7822	; 0x7822 <_ZN10helicopter10controller13PIDController20setZProportionalGainEf>
			pidController->setZAntiWindupGain(telemMsg->ZAntiWindupGain);															
    7c9a:	8b 81       	ldd	r24, Y+3	; 0x03
    7c9c:	9c 81       	ldd	r25, Y+4	; 0x04
    7c9e:	87 53       	subi	r24, 0x37	; 55
    7ca0:	9f 4f       	sbci	r25, 0xFF	; 255
    7ca2:	fc 01       	movw	r30, r24
    7ca4:	80 81       	ld	r24, Z
    7ca6:	91 81       	ldd	r25, Z+1	; 0x01
    7ca8:	a2 81       	ldd	r26, Z+2	; 0x02
    7caa:	b3 81       	ldd	r27, Z+3	; 0x03
    7cac:	2c 85       	ldd	r18, Y+12	; 0x0c
    7cae:	3d 85       	ldd	r19, Y+13	; 0x0d
    7cb0:	f9 01       	movw	r30, r18
    7cb2:	23 85       	ldd	r18, Z+11	; 0x0b
    7cb4:	34 85       	ldd	r19, Z+12	; 0x0c
    7cb6:	ac 01       	movw	r20, r24
    7cb8:	bd 01       	movw	r22, r26
    7cba:	c9 01       	movw	r24, r18
    7cbc:	0e 94 34 3c 	call	0x7868	; 0x7868 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf>
		
			delete message;
    7cc0:	8a 85       	ldd	r24, Y+10	; 0x0a
    7cc2:	9b 85       	ldd	r25, Y+11	; 0x0b
    7cc4:	00 97       	sbiw	r24, 0x00	; 0
    7cc6:	69 f0       	breq	.+26     	; 0x7ce2 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x39c>
    7cc8:	8a 85       	ldd	r24, Y+10	; 0x0a
    7cca:	9b 85       	ldd	r25, Y+11	; 0x0b
    7ccc:	fc 01       	movw	r30, r24
    7cce:	80 81       	ld	r24, Z
    7cd0:	91 81       	ldd	r25, Z+1	; 0x01
    7cd2:	02 96       	adiw	r24, 0x02	; 2
    7cd4:	fc 01       	movw	r30, r24
    7cd6:	20 81       	ld	r18, Z
    7cd8:	31 81       	ldd	r19, Z+1	; 0x01
    7cda:	8a 85       	ldd	r24, Y+10	; 0x0a
    7cdc:	9b 85       	ldd	r25, Y+11	; 0x0b
    7cde:	f9 01       	movw	r30, r18
    7ce0:	19 95       	eicall
		}
	}
	
	//Update instrumentation fields
	switch (status)
    7ce2:	89 81       	ldd	r24, Y+1	; 0x01
    7ce4:	9a 81       	ldd	r25, Y+2	; 0x02
    7ce6:	8e 3f       	cpi	r24, 0xFE	; 254
    7ce8:	ff ef       	ldi	r31, 0xFF	; 255
    7cea:	9f 07       	cpc	r25, r31
    7cec:	41 f1       	breq	.+80     	; 0x7d3e <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x3f8>
    7cee:	8f 3f       	cpi	r24, 0xFF	; 255
    7cf0:	2f ef       	ldi	r18, 0xFF	; 255
    7cf2:	92 07       	cpc	r25, r18
    7cf4:	2c f4       	brge	.+10     	; 0x7d00 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x3ba>
    7cf6:	8d 3f       	cpi	r24, 0xFD	; 253
    7cf8:	ef ef       	ldi	r30, 0xFF	; 255
    7cfa:	9e 07       	cpc	r25, r30
    7cfc:	b9 f1       	breq	.+110    	; 0x7d6c <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x426>
    7cfe:	4d c0       	rjmp	.+154    	; 0x7d9a <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x454>
    7d00:	8f 3f       	cpi	r24, 0xFF	; 255
    7d02:	ff ef       	ldi	r31, 0xFF	; 255
    7d04:	9f 07       	cpc	r25, r31
    7d06:	21 f0       	breq	.+8      	; 0x7d10 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x3ca>
    7d08:	00 97       	sbiw	r24, 0x00	; 0
    7d0a:	09 f4       	brne	.+2      	; 0x7d0e <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x3c8>
    7d0c:	47 c0       	rjmp	.+142    	; 0x7d9c <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x456>
    7d0e:	45 c0       	rjmp	.+138    	; 0x7d9a <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x454>
	{
		case 0:
			break;
		case -1:
			model->Timeouts(model->Timeouts() + 1);
    7d10:	8c 85       	ldd	r24, Y+12	; 0x0c
    7d12:	9d 85       	ldd	r25, Y+13	; 0x0d
    7d14:	fc 01       	movw	r30, r24
    7d16:	81 85       	ldd	r24, Z+9	; 0x09
    7d18:	92 85       	ldd	r25, Z+10	; 0x0a
    7d1a:	0e 94 0d 29 	call	0x521a	; 0x521a <_ZNK10helicopter5model11SystemModel8TimeoutsEv>
    7d1e:	dc 01       	movw	r26, r24
    7d20:	cb 01       	movw	r24, r22
    7d22:	01 96       	adiw	r24, 0x01	; 1
    7d24:	a1 1d       	adc	r26, r1
    7d26:	b1 1d       	adc	r27, r1
    7d28:	2c 85       	ldd	r18, Y+12	; 0x0c
    7d2a:	3d 85       	ldd	r19, Y+13	; 0x0d
    7d2c:	f9 01       	movw	r30, r18
    7d2e:	21 85       	ldd	r18, Z+9	; 0x09
    7d30:	32 85       	ldd	r19, Z+10	; 0x0a
    7d32:	ac 01       	movw	r20, r24
    7d34:	bd 01       	movw	r22, r26
    7d36:	c9 01       	movw	r24, r18
    7d38:	0e 94 25 29 	call	0x524a	; 0x524a <_ZN10helicopter5model11SystemModel8TimeoutsEl>
			break;
    7d3c:	30 c0       	rjmp	.+96     	; 0x7d9e <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x458>
		case -2:
			model->UnrecognizedMsgTypes(model->UnrecognizedMsgTypes() + 1);
    7d3e:	8c 85       	ldd	r24, Y+12	; 0x0c
    7d40:	9d 85       	ldd	r25, Y+13	; 0x0d
    7d42:	fc 01       	movw	r30, r24
    7d44:	81 85       	ldd	r24, Z+9	; 0x09
    7d46:	92 85       	ldd	r25, Z+10	; 0x0a
    7d48:	0e 94 48 29 	call	0x5290	; 0x5290 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>
    7d4c:	dc 01       	movw	r26, r24
    7d4e:	cb 01       	movw	r24, r22
    7d50:	01 96       	adiw	r24, 0x01	; 1
    7d52:	a1 1d       	adc	r26, r1
    7d54:	b1 1d       	adc	r27, r1
    7d56:	2c 85       	ldd	r18, Y+12	; 0x0c
    7d58:	3d 85       	ldd	r19, Y+13	; 0x0d
    7d5a:	f9 01       	movw	r30, r18
    7d5c:	21 85       	ldd	r18, Z+9	; 0x09
    7d5e:	32 85       	ldd	r19, Z+10	; 0x0a
    7d60:	ac 01       	movw	r20, r24
    7d62:	bd 01       	movw	r22, r26
    7d64:	c9 01       	movw	r24, r18
    7d66:	0e 94 60 29 	call	0x52c0	; 0x52c0 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl>
			break;
    7d6a:	19 c0       	rjmp	.+50     	; 0x7d9e <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x458>
		case -3:
			model->ChecksumErrors(model->ChecksumErrors() + 1);
    7d6c:	8c 85       	ldd	r24, Y+12	; 0x0c
    7d6e:	9d 85       	ldd	r25, Y+13	; 0x0d
    7d70:	fc 01       	movw	r30, r24
    7d72:	81 85       	ldd	r24, Z+9	; 0x09
    7d74:	92 85       	ldd	r25, Z+10	; 0x0a
    7d76:	0e 94 83 29 	call	0x5306	; 0x5306 <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>
    7d7a:	dc 01       	movw	r26, r24
    7d7c:	cb 01       	movw	r24, r22
    7d7e:	01 96       	adiw	r24, 0x01	; 1
    7d80:	a1 1d       	adc	r26, r1
    7d82:	b1 1d       	adc	r27, r1
    7d84:	2c 85       	ldd	r18, Y+12	; 0x0c
    7d86:	3d 85       	ldd	r19, Y+13	; 0x0d
    7d88:	f9 01       	movw	r30, r18
    7d8a:	21 85       	ldd	r18, Z+9	; 0x09
    7d8c:	32 85       	ldd	r19, Z+10	; 0x0a
    7d8e:	ac 01       	movw	r20, r24
    7d90:	bd 01       	movw	r22, r26
    7d92:	c9 01       	movw	r24, r18
    7d94:	0e 94 9b 29 	call	0x5336	; 0x5336 <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl>
		default:
			break;
    7d98:	02 c0       	rjmp	.+4      	; 0x7d9e <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x458>
    7d9a:	01 c0       	rjmp	.+2      	; 0x7d9e <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x458>
	
	//Update instrumentation fields
	switch (status)
	{
		case 0:
			break;
    7d9c:	00 00       	nop
		case -3:
			model->ChecksumErrors(model->ChecksumErrors() + 1);
		default:
			break;
		
	}
    7d9e:	ce 01       	movw	r24, r28
    7da0:	05 96       	adiw	r24, 0x05	; 5
    7da2:	0e 94 2b 25 	call	0x4a56	; 0x4a56 <_ZN10helicopter8messages11SyncMessageD1Ev>
}
    7da6:	2d 96       	adiw	r28, 0x0d	; 13
    7da8:	0f b6       	in	r0, 0x3f	; 63
    7daa:	f8 94       	cli
    7dac:	de bf       	out	0x3e, r29	; 62
    7dae:	0f be       	out	0x3f, r0	; 63
    7db0:	cd bf       	out	0x3d, r28	; 61
    7db2:	df 91       	pop	r29
    7db4:	cf 91       	pop	r28
    7db6:	08 95       	ret

00007db8 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>:
	namespace tasks
	{
		/**
		 * Task to receive simulator telemetry data from the ground control station.
		 */
		class SimTelemetryTask : public Task
    7db8:	cf 93       	push	r28
    7dba:	df 93       	push	r29
    7dbc:	1f 92       	push	r1
    7dbe:	1f 92       	push	r1
    7dc0:	cd b7       	in	r28, 0x3d	; 61
    7dc2:	de b7       	in	r29, 0x3e	; 62
    7dc4:	9a 83       	std	Y+2, r25	; 0x02
    7dc6:	89 83       	std	Y+1, r24	; 0x01
    7dc8:	89 81       	ldd	r24, Y+1	; 0x01
    7dca:	9a 81       	ldd	r25, Y+2	; 0x02
    7dcc:	24 e7       	ldi	r18, 0x74	; 116
    7dce:	32 e0       	ldi	r19, 0x02	; 2
    7dd0:	fc 01       	movw	r30, r24
    7dd2:	31 83       	std	Z+1, r19	; 0x01
    7dd4:	20 83       	st	Z, r18
    7dd6:	89 81       	ldd	r24, Y+1	; 0x01
    7dd8:	9a 81       	ldd	r25, Y+2	; 0x02
    7dda:	0e 94 90 14 	call	0x2920	; 0x2920 <_ZN10helicopter5tasks4TaskD1Ev>
    7dde:	80 e0       	ldi	r24, 0x00	; 0
    7de0:	90 e0       	ldi	r25, 0x00	; 0
    7de2:	81 70       	andi	r24, 0x01	; 1
    7de4:	99 27       	eor	r25, r25
    7de6:	00 97       	sbiw	r24, 0x00	; 0
    7de8:	21 f0       	breq	.+8      	; 0x7df2 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev+0x3a>
    7dea:	89 81       	ldd	r24, Y+1	; 0x01
    7dec:	9a 81       	ldd	r25, Y+2	; 0x02
    7dee:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    7df2:	0f 90       	pop	r0
    7df4:	0f 90       	pop	r0
    7df6:	df 91       	pop	r29
    7df8:	cf 91       	pop	r28
    7dfa:	08 95       	ret

00007dfc <_ZN10helicopter5tasks16SimTelemetryTaskD0Ev>:
    7dfc:	cf 93       	push	r28
    7dfe:	df 93       	push	r29
    7e00:	1f 92       	push	r1
    7e02:	1f 92       	push	r1
    7e04:	cd b7       	in	r28, 0x3d	; 61
    7e06:	de b7       	in	r29, 0x3e	; 62
    7e08:	9a 83       	std	Y+2, r25	; 0x02
    7e0a:	89 83       	std	Y+1, r24	; 0x01
    7e0c:	89 81       	ldd	r24, Y+1	; 0x01
    7e0e:	9a 81       	ldd	r25, Y+2	; 0x02
    7e10:	0e 94 dc 3e 	call	0x7db8	; 0x7db8 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>
    7e14:	89 81       	ldd	r24, Y+1	; 0x01
    7e16:	9a 81       	ldd	r25, Y+2	; 0x02
    7e18:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    7e1c:	0f 90       	pop	r0
    7e1e:	0f 90       	pop	r0
    7e20:	df 91       	pop	r29
    7e22:	cf 91       	pop	r28
    7e24:	08 95       	ret

00007e26 <_ZN10helicopter5tasks4Task11runTaskImplEv>:
				
			protected:
				/**
				* Implemented by subclasses for the actual logic to execute
				*/
				virtual void runTaskImpl(){;}
    7e26:	cf 93       	push	r28
    7e28:	df 93       	push	r29
    7e2a:	1f 92       	push	r1
    7e2c:	1f 92       	push	r1
    7e2e:	cd b7       	in	r28, 0x3d	; 61
    7e30:	de b7       	in	r29, 0x3e	; 62
    7e32:	9a 83       	std	Y+2, r25	; 0x02
    7e34:	89 83       	std	Y+1, r24	; 0x01
    7e36:	0f 90       	pop	r0
    7e38:	0f 90       	pop	r0
    7e3a:	df 91       	pop	r29
    7e3c:	cf 91       	pop	r28
    7e3e:	08 95       	ret

00007e40 <_ZN10helicopter5tasks4TaskC1Eii>:
#include <avr/interrupt.h>
#include "Task.h"

using namespace helicopter::tasks;

Task::Task(int delay, int period)
    7e40:	cf 93       	push	r28
    7e42:	df 93       	push	r29
    7e44:	00 d0       	rcall	.+0      	; 0x7e46 <_ZN10helicopter5tasks4TaskC1Eii+0x6>
    7e46:	00 d0       	rcall	.+0      	; 0x7e48 <_ZN10helicopter5tasks4TaskC1Eii+0x8>
    7e48:	cd b7       	in	r28, 0x3d	; 61
    7e4a:	de b7       	in	r29, 0x3e	; 62
    7e4c:	9a 83       	std	Y+2, r25	; 0x02
    7e4e:	89 83       	std	Y+1, r24	; 0x01
    7e50:	7c 83       	std	Y+4, r23	; 0x04
    7e52:	6b 83       	std	Y+3, r22	; 0x03
    7e54:	5e 83       	std	Y+6, r21	; 0x06
    7e56:	4d 83       	std	Y+5, r20	; 0x05
    7e58:	89 81       	ldd	r24, Y+1	; 0x01
    7e5a:	9a 81       	ldd	r25, Y+2	; 0x02
    7e5c:	22 e8       	ldi	r18, 0x82	; 130
    7e5e:	32 e0       	ldi	r19, 0x02	; 2
    7e60:	fc 01       	movw	r30, r24
    7e62:	31 83       	std	Z+1, r19	; 0x01
    7e64:	20 83       	st	Z, r18
{
	this->delay = delay;
    7e66:	89 81       	ldd	r24, Y+1	; 0x01
    7e68:	9a 81       	ldd	r25, Y+2	; 0x02
    7e6a:	2b 81       	ldd	r18, Y+3	; 0x03
    7e6c:	3c 81       	ldd	r19, Y+4	; 0x04
    7e6e:	fc 01       	movw	r30, r24
    7e70:	33 83       	std	Z+3, r19	; 0x03
    7e72:	22 83       	std	Z+2, r18	; 0x02
	this->period = period;
    7e74:	89 81       	ldd	r24, Y+1	; 0x01
    7e76:	9a 81       	ldd	r25, Y+2	; 0x02
    7e78:	2d 81       	ldd	r18, Y+5	; 0x05
    7e7a:	3e 81       	ldd	r19, Y+6	; 0x06
    7e7c:	fc 01       	movw	r30, r24
    7e7e:	35 83       	std	Z+5, r19	; 0x05
    7e80:	24 83       	std	Z+4, r18	; 0x04
	this->isReadyToRun = false;
    7e82:	89 81       	ldd	r24, Y+1	; 0x01
    7e84:	9a 81       	ldd	r25, Y+2	; 0x02
    7e86:	fc 01       	movw	r30, r24
    7e88:	16 82       	std	Z+6, r1	; 0x06
}
    7e8a:	26 96       	adiw	r28, 0x06	; 6
    7e8c:	0f b6       	in	r0, 0x3f	; 63
    7e8e:	f8 94       	cli
    7e90:	de bf       	out	0x3e, r29	; 62
    7e92:	0f be       	out	0x3f, r0	; 63
    7e94:	cd bf       	out	0x3d, r28	; 61
    7e96:	df 91       	pop	r29
    7e98:	cf 91       	pop	r28
    7e9a:	08 95       	ret

00007e9c <_ZN10helicopter5tasks4Task7runTaskEv>:

void Task::runTask()
{
    7e9c:	cf 93       	push	r28
    7e9e:	df 93       	push	r29
    7ea0:	1f 92       	push	r1
    7ea2:	1f 92       	push	r1
    7ea4:	cd b7       	in	r28, 0x3d	; 61
    7ea6:	de b7       	in	r29, 0x3e	; 62
    7ea8:	9a 83       	std	Y+2, r25	; 0x02
    7eaa:	89 83       	std	Y+1, r24	; 0x01
	//Disable interrupts 
	cli();
    7eac:	f8 94       	cli
	
	//run task
	this->runTaskImpl();
    7eae:	89 81       	ldd	r24, Y+1	; 0x01
    7eb0:	9a 81       	ldd	r25, Y+2	; 0x02
    7eb2:	fc 01       	movw	r30, r24
    7eb4:	80 81       	ld	r24, Z
    7eb6:	91 81       	ldd	r25, Z+1	; 0x01
    7eb8:	fc 01       	movw	r30, r24
    7eba:	20 81       	ld	r18, Z
    7ebc:	31 81       	ldd	r19, Z+1	; 0x01
    7ebe:	89 81       	ldd	r24, Y+1	; 0x01
    7ec0:	9a 81       	ldd	r25, Y+2	; 0x02
    7ec2:	f9 01       	movw	r30, r18
    7ec4:	19 95       	eicall
	
	//Re-enable interrupts
	sei();
    7ec6:	78 94       	sei
    7ec8:	0f 90       	pop	r0
    7eca:	0f 90       	pop	r0
    7ecc:	df 91       	pop	r29
    7ece:	cf 91       	pop	r28
    7ed0:	08 95       	ret

00007ed2 <_ZN10helicopter5tasks21TransmitTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEii>:
#include "TransmitTelemetryTask.h"
#include "SystemTelemetryMessage.h"

using namespace helicopter::tasks;

TransmitTelemetryTask::TransmitTelemetryTask(GroundControlStationInterface *radioInterface, SystemModel *model, int delay, int period) :
    7ed2:	0f 93       	push	r16
    7ed4:	1f 93       	push	r17
    7ed6:	cf 93       	push	r28
    7ed8:	df 93       	push	r29
    7eda:	cd b7       	in	r28, 0x3d	; 61
    7edc:	de b7       	in	r29, 0x3e	; 62
    7ede:	2a 97       	sbiw	r28, 0x0a	; 10
    7ee0:	0f b6       	in	r0, 0x3f	; 63
    7ee2:	f8 94       	cli
    7ee4:	de bf       	out	0x3e, r29	; 62
    7ee6:	0f be       	out	0x3f, r0	; 63
    7ee8:	cd bf       	out	0x3d, r28	; 61
    7eea:	9a 83       	std	Y+2, r25	; 0x02
    7eec:	89 83       	std	Y+1, r24	; 0x01
    7eee:	7c 83       	std	Y+4, r23	; 0x04
    7ef0:	6b 83       	std	Y+3, r22	; 0x03
    7ef2:	5e 83       	std	Y+6, r21	; 0x06
    7ef4:	4d 83       	std	Y+5, r20	; 0x05
    7ef6:	38 87       	std	Y+8, r19	; 0x08
    7ef8:	2f 83       	std	Y+7, r18	; 0x07
    7efa:	1a 87       	std	Y+10, r17	; 0x0a
    7efc:	09 87       	std	Y+9, r16	; 0x09
	Task(delay, period),
	radioInterface(radioInterface),
	model(model)
    7efe:	89 81       	ldd	r24, Y+1	; 0x01
    7f00:	9a 81       	ldd	r25, Y+2	; 0x02
    7f02:	49 85       	ldd	r20, Y+9	; 0x09
    7f04:	5a 85       	ldd	r21, Y+10	; 0x0a
    7f06:	2f 81       	ldd	r18, Y+7	; 0x07
    7f08:	38 85       	ldd	r19, Y+8	; 0x08
    7f0a:	b9 01       	movw	r22, r18
    7f0c:	0e 94 20 3f 	call	0x7e40	; 0x7e40 <_ZN10helicopter5tasks4TaskC1Eii>
    7f10:	89 81       	ldd	r24, Y+1	; 0x01
    7f12:	9a 81       	ldd	r25, Y+2	; 0x02
    7f14:	20 e9       	ldi	r18, 0x90	; 144
    7f16:	32 e0       	ldi	r19, 0x02	; 2
    7f18:	fc 01       	movw	r30, r24
    7f1a:	31 83       	std	Z+1, r19	; 0x01
    7f1c:	20 83       	st	Z, r18
    7f1e:	89 81       	ldd	r24, Y+1	; 0x01
    7f20:	9a 81       	ldd	r25, Y+2	; 0x02
    7f22:	2b 81       	ldd	r18, Y+3	; 0x03
    7f24:	3c 81       	ldd	r19, Y+4	; 0x04
    7f26:	fc 01       	movw	r30, r24
    7f28:	30 87       	std	Z+8, r19	; 0x08
    7f2a:	27 83       	std	Z+7, r18	; 0x07
    7f2c:	89 81       	ldd	r24, Y+1	; 0x01
    7f2e:	9a 81       	ldd	r25, Y+2	; 0x02
    7f30:	2d 81       	ldd	r18, Y+5	; 0x05
    7f32:	3e 81       	ldd	r19, Y+6	; 0x06
    7f34:	fc 01       	movw	r30, r24
    7f36:	32 87       	std	Z+10, r19	; 0x0a
    7f38:	21 87       	std	Z+9, r18	; 0x09
{
	
}
    7f3a:	2a 96       	adiw	r28, 0x0a	; 10
    7f3c:	0f b6       	in	r0, 0x3f	; 63
    7f3e:	f8 94       	cli
    7f40:	de bf       	out	0x3e, r29	; 62
    7f42:	0f be       	out	0x3f, r0	; 63
    7f44:	cd bf       	out	0x3d, r28	; 61
    7f46:	df 91       	pop	r29
    7f48:	cf 91       	pop	r28
    7f4a:	1f 91       	pop	r17
    7f4c:	0f 91       	pop	r16
    7f4e:	08 95       	ret

00007f50 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv>:


void TransmitTelemetryTask::runTaskImpl()
{
    7f50:	cf 93       	push	r28
    7f52:	df 93       	push	r29
    7f54:	00 d0       	rcall	.+0      	; 0x7f56 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv+0x6>
    7f56:	1f 92       	push	r1
    7f58:	cd b7       	in	r28, 0x3d	; 61
    7f5a:	de b7       	in	r29, 0x3e	; 62
    7f5c:	9c 83       	std	Y+4, r25	; 0x04
    7f5e:	8b 83       	std	Y+3, r24	; 0x03
	//SystemTelemetryMessage *message = model->CreateTelemetryMessage();
	SystemTelemetryMessage *message = SystemTelemetryMessage::buildMessageFromModel(model);
    7f60:	8b 81       	ldd	r24, Y+3	; 0x03
    7f62:	9c 81       	ldd	r25, Y+4	; 0x04
    7f64:	fc 01       	movw	r30, r24
    7f66:	81 85       	ldd	r24, Z+9	; 0x09
    7f68:	92 85       	ldd	r25, Z+10	; 0x0a
    7f6a:	0e 94 3a 32 	call	0x6474	; 0x6474 <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE>
    7f6e:	9a 83       	std	Y+2, r25	; 0x02
    7f70:	89 83       	std	Y+1, r24	; 0x01
	
	//TODO add some error handling in here
	radioInterface->transmit(message);
    7f72:	8b 81       	ldd	r24, Y+3	; 0x03
    7f74:	9c 81       	ldd	r25, Y+4	; 0x04
    7f76:	fc 01       	movw	r30, r24
    7f78:	87 81       	ldd	r24, Z+7	; 0x07
    7f7a:	90 85       	ldd	r25, Z+8	; 0x08
    7f7c:	29 81       	ldd	r18, Y+1	; 0x01
    7f7e:	3a 81       	ldd	r19, Y+2	; 0x02
    7f80:	b9 01       	movw	r22, r18
    7f82:	0e 94 36 22 	call	0x446c	; 0x446c <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>
	
	delete message;
    7f86:	89 81       	ldd	r24, Y+1	; 0x01
    7f88:	9a 81       	ldd	r25, Y+2	; 0x02
    7f8a:	00 97       	sbiw	r24, 0x00	; 0
    7f8c:	69 f0       	breq	.+26     	; 0x7fa8 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv+0x58>
    7f8e:	89 81       	ldd	r24, Y+1	; 0x01
    7f90:	9a 81       	ldd	r25, Y+2	; 0x02
    7f92:	fc 01       	movw	r30, r24
    7f94:	80 81       	ld	r24, Z
    7f96:	91 81       	ldd	r25, Z+1	; 0x01
    7f98:	02 96       	adiw	r24, 0x02	; 2
    7f9a:	fc 01       	movw	r30, r24
    7f9c:	20 81       	ld	r18, Z
    7f9e:	31 81       	ldd	r19, Z+1	; 0x01
    7fa0:	89 81       	ldd	r24, Y+1	; 0x01
    7fa2:	9a 81       	ldd	r25, Y+2	; 0x02
    7fa4:	f9 01       	movw	r30, r18
    7fa6:	19 95       	eicall
    7fa8:	0f 90       	pop	r0
    7faa:	0f 90       	pop	r0
    7fac:	0f 90       	pop	r0
    7fae:	0f 90       	pop	r0
    7fb0:	df 91       	pop	r29
    7fb2:	cf 91       	pop	r28
    7fb4:	08 95       	ret

00007fb6 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class transmits flight computer telemetry information to the ground control station.
		 */
		class TransmitTelemetryTask : public Task
    7fb6:	cf 93       	push	r28
    7fb8:	df 93       	push	r29
    7fba:	1f 92       	push	r1
    7fbc:	1f 92       	push	r1
    7fbe:	cd b7       	in	r28, 0x3d	; 61
    7fc0:	de b7       	in	r29, 0x3e	; 62
    7fc2:	9a 83       	std	Y+2, r25	; 0x02
    7fc4:	89 83       	std	Y+1, r24	; 0x01
    7fc6:	89 81       	ldd	r24, Y+1	; 0x01
    7fc8:	9a 81       	ldd	r25, Y+2	; 0x02
    7fca:	20 e9       	ldi	r18, 0x90	; 144
    7fcc:	32 e0       	ldi	r19, 0x02	; 2
    7fce:	fc 01       	movw	r30, r24
    7fd0:	31 83       	std	Z+1, r19	; 0x01
    7fd2:	20 83       	st	Z, r18
    7fd4:	89 81       	ldd	r24, Y+1	; 0x01
    7fd6:	9a 81       	ldd	r25, Y+2	; 0x02
    7fd8:	0e 94 90 14 	call	0x2920	; 0x2920 <_ZN10helicopter5tasks4TaskD1Ev>
    7fdc:	80 e0       	ldi	r24, 0x00	; 0
    7fde:	90 e0       	ldi	r25, 0x00	; 0
    7fe0:	81 70       	andi	r24, 0x01	; 1
    7fe2:	99 27       	eor	r25, r25
    7fe4:	00 97       	sbiw	r24, 0x00	; 0
    7fe6:	21 f0       	breq	.+8      	; 0x7ff0 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev+0x3a>
    7fe8:	89 81       	ldd	r24, Y+1	; 0x01
    7fea:	9a 81       	ldd	r25, Y+2	; 0x02
    7fec:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    7ff0:	0f 90       	pop	r0
    7ff2:	0f 90       	pop	r0
    7ff4:	df 91       	pop	r29
    7ff6:	cf 91       	pop	r28
    7ff8:	08 95       	ret

00007ffa <_ZN10helicopter5tasks21TransmitTelemetryTaskD0Ev>:
    7ffa:	cf 93       	push	r28
    7ffc:	df 93       	push	r29
    7ffe:	1f 92       	push	r1
    8000:	1f 92       	push	r1
    8002:	cd b7       	in	r28, 0x3d	; 61
    8004:	de b7       	in	r29, 0x3e	; 62
    8006:	9a 83       	std	Y+2, r25	; 0x02
    8008:	89 83       	std	Y+1, r24	; 0x01
    800a:	89 81       	ldd	r24, Y+1	; 0x01
    800c:	9a 81       	ldd	r25, Y+2	; 0x02
    800e:	0e 94 db 3f 	call	0x7fb6	; 0x7fb6 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>
    8012:	89 81       	ldd	r24, Y+1	; 0x01
    8014:	9a 81       	ldd	r25, Y+2	; 0x02
    8016:	0e 94 23 40 	call	0x8046	; 0x8046 <_ZdlPv>
    801a:	0f 90       	pop	r0
    801c:	0f 90       	pop	r0
    801e:	df 91       	pop	r29
    8020:	cf 91       	pop	r28
    8022:	08 95       	ret

00008024 <_Znwj>:
 *  Author: HP User
 */ 
#include <CommonHeader.h>

void * operator new(size_t size)
{
    8024:	cf 93       	push	r28
    8026:	df 93       	push	r29
    8028:	1f 92       	push	r1
    802a:	1f 92       	push	r1
    802c:	cd b7       	in	r28, 0x3d	; 61
    802e:	de b7       	in	r29, 0x3e	; 62
    8030:	9a 83       	std	Y+2, r25	; 0x02
    8032:	89 83       	std	Y+1, r24	; 0x01
	return malloc(size);
    8034:	89 81       	ldd	r24, Y+1	; 0x01
    8036:	9a 81       	ldd	r25, Y+2	; 0x02
    8038:	0e 94 bd 4a 	call	0x957a	; 0x957a <malloc>
}
    803c:	0f 90       	pop	r0
    803e:	0f 90       	pop	r0
    8040:	df 91       	pop	r29
    8042:	cf 91       	pop	r28
    8044:	08 95       	ret

00008046 <_ZdlPv>:

void operator delete(void * ptr)
{
    8046:	cf 93       	push	r28
    8048:	df 93       	push	r29
    804a:	1f 92       	push	r1
    804c:	1f 92       	push	r1
    804e:	cd b7       	in	r28, 0x3d	; 61
    8050:	de b7       	in	r29, 0x3e	; 62
    8052:	9a 83       	std	Y+2, r25	; 0x02
    8054:	89 83       	std	Y+1, r24	; 0x01
	if (ptr != NULL)
    8056:	89 81       	ldd	r24, Y+1	; 0x01
    8058:	9a 81       	ldd	r25, Y+2	; 0x02
    805a:	00 97       	sbiw	r24, 0x00	; 0
    805c:	21 f0       	breq	.+8      	; 0x8066 <_ZdlPv+0x20>
	{
		free(ptr);
    805e:	89 81       	ldd	r24, Y+1	; 0x01
    8060:	9a 81       	ldd	r25, Y+2	; 0x02
    8062:	0e 94 58 4b 	call	0x96b0	; 0x96b0 <free>
	}
}
    8066:	0f 90       	pop	r0
    8068:	0f 90       	pop	r0
    806a:	df 91       	pop	r29
    806c:	cf 91       	pop	r28
    806e:	08 95       	ret

00008070 <_Znaj>:

void * operator new[](size_t size)
{
    8070:	cf 93       	push	r28
    8072:	df 93       	push	r29
    8074:	1f 92       	push	r1
    8076:	1f 92       	push	r1
    8078:	cd b7       	in	r28, 0x3d	; 61
    807a:	de b7       	in	r29, 0x3e	; 62
    807c:	9a 83       	std	Y+2, r25	; 0x02
    807e:	89 83       	std	Y+1, r24	; 0x01
	return malloc(size);
    8080:	89 81       	ldd	r24, Y+1	; 0x01
    8082:	9a 81       	ldd	r25, Y+2	; 0x02
    8084:	0e 94 bd 4a 	call	0x957a	; 0x957a <malloc>
}
    8088:	0f 90       	pop	r0
    808a:	0f 90       	pop	r0
    808c:	df 91       	pop	r29
    808e:	cf 91       	pop	r28
    8090:	08 95       	ret

00008092 <_ZdaPv>:

void operator delete[](void * ptr)
{
    8092:	cf 93       	push	r28
    8094:	df 93       	push	r29
    8096:	1f 92       	push	r1
    8098:	1f 92       	push	r1
    809a:	cd b7       	in	r28, 0x3d	; 61
    809c:	de b7       	in	r29, 0x3e	; 62
    809e:	9a 83       	std	Y+2, r25	; 0x02
    80a0:	89 83       	std	Y+1, r24	; 0x01
	if(ptr != NULL)
    80a2:	89 81       	ldd	r24, Y+1	; 0x01
    80a4:	9a 81       	ldd	r25, Y+2	; 0x02
    80a6:	00 97       	sbiw	r24, 0x00	; 0
    80a8:	21 f0       	breq	.+8      	; 0x80b2 <_ZdaPv+0x20>
	{
		free(ptr);
    80aa:	89 81       	ldd	r24, Y+1	; 0x01
    80ac:	9a 81       	ldd	r25, Y+2	; 0x02
    80ae:	0e 94 58 4b 	call	0x96b0	; 0x96b0 <free>
	}
	
    80b2:	0f 90       	pop	r0
    80b4:	0f 90       	pop	r0
    80b6:	df 91       	pop	r29
    80b8:	cf 91       	pop	r28
    80ba:	08 95       	ret

000080bc <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>:


using namespace helicopter::util;

float CoordinateUtil::DegreesToRad(float valueDegrees)
{
    80bc:	cf 93       	push	r28
    80be:	df 93       	push	r29
    80c0:	00 d0       	rcall	.+0      	; 0x80c2 <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf+0x6>
    80c2:	1f 92       	push	r1
    80c4:	cd b7       	in	r28, 0x3d	; 61
    80c6:	de b7       	in	r29, 0x3e	; 62
    80c8:	69 83       	std	Y+1, r22	; 0x01
    80ca:	7a 83       	std	Y+2, r23	; 0x02
    80cc:	8b 83       	std	Y+3, r24	; 0x03
    80ce:	9c 83       	std	Y+4, r25	; 0x04
	return valueDegrees * (M_PI / 180.0);
    80d0:	25 e3       	ldi	r18, 0x35	; 53
    80d2:	3a ef       	ldi	r19, 0xFA	; 250
    80d4:	4e e8       	ldi	r20, 0x8E	; 142
    80d6:	5c e3       	ldi	r21, 0x3C	; 60
    80d8:	69 81       	ldd	r22, Y+1	; 0x01
    80da:	7a 81       	ldd	r23, Y+2	; 0x02
    80dc:	8b 81       	ldd	r24, Y+3	; 0x03
    80de:	9c 81       	ldd	r25, Y+4	; 0x04
    80e0:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    80e4:	dc 01       	movw	r26, r24
    80e6:	cb 01       	movw	r24, r22
}
    80e8:	bc 01       	movw	r22, r24
    80ea:	cd 01       	movw	r24, r26
    80ec:	0f 90       	pop	r0
    80ee:	0f 90       	pop	r0
    80f0:	0f 90       	pop	r0
    80f2:	0f 90       	pop	r0
    80f4:	df 91       	pop	r29
    80f6:	cf 91       	pop	r28
    80f8:	08 95       	ret

000080fa <_ZN10helicopter4util14CoordinateUtil37CalculateECEFToLocalNEDRotationMatrixEffPA3_f>:

void CoordinateUtil::CalculateECEFToLocalNEDRotationMatrix(float latitudeDegrees, float longitudeDegrees, float  ecefToLocalNEDRotationMatrix[][3])
{
    80fa:	cf 92       	push	r12
    80fc:	df 92       	push	r13
    80fe:	ef 92       	push	r14
    8100:	ff 92       	push	r15
    8102:	0f 93       	push	r16
    8104:	1f 93       	push	r17
    8106:	cf 93       	push	r28
    8108:	df 93       	push	r29
    810a:	cd b7       	in	r28, 0x3d	; 61
    810c:	de b7       	in	r29, 0x3e	; 62
    810e:	62 97       	sbiw	r28, 0x12	; 18
    8110:	0f b6       	in	r0, 0x3f	; 63
    8112:	f8 94       	cli
    8114:	de bf       	out	0x3e, r29	; 62
    8116:	0f be       	out	0x3f, r0	; 63
    8118:	cd bf       	out	0x3d, r28	; 61
    811a:	69 87       	std	Y+9, r22	; 0x09
    811c:	7a 87       	std	Y+10, r23	; 0x0a
    811e:	8b 87       	std	Y+11, r24	; 0x0b
    8120:	9c 87       	std	Y+12, r25	; 0x0c
    8122:	2d 87       	std	Y+13, r18	; 0x0d
    8124:	3e 87       	std	Y+14, r19	; 0x0e
    8126:	4f 87       	std	Y+15, r20	; 0x0f
    8128:	58 8b       	std	Y+16, r21	; 0x10
    812a:	1a 8b       	std	Y+18, r17	; 0x12
    812c:	09 8b       	std	Y+17, r16	; 0x11
	float radLat = DegreesToRad(latitudeDegrees);
    812e:	89 85       	ldd	r24, Y+9	; 0x09
    8130:	9a 85       	ldd	r25, Y+10	; 0x0a
    8132:	ab 85       	ldd	r26, Y+11	; 0x0b
    8134:	bc 85       	ldd	r27, Y+12	; 0x0c
    8136:	bc 01       	movw	r22, r24
    8138:	cd 01       	movw	r24, r26
    813a:	0e 94 5e 40 	call	0x80bc	; 0x80bc <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    813e:	dc 01       	movw	r26, r24
    8140:	cb 01       	movw	r24, r22
    8142:	89 83       	std	Y+1, r24	; 0x01
    8144:	9a 83       	std	Y+2, r25	; 0x02
    8146:	ab 83       	std	Y+3, r26	; 0x03
    8148:	bc 83       	std	Y+4, r27	; 0x04
	float radLong = DegreesToRad(longitudeDegrees);
    814a:	8d 85       	ldd	r24, Y+13	; 0x0d
    814c:	9e 85       	ldd	r25, Y+14	; 0x0e
    814e:	af 85       	ldd	r26, Y+15	; 0x0f
    8150:	b8 89       	ldd	r27, Y+16	; 0x10
    8152:	bc 01       	movw	r22, r24
    8154:	cd 01       	movw	r24, r26
    8156:	0e 94 5e 40 	call	0x80bc	; 0x80bc <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    815a:	dc 01       	movw	r26, r24
    815c:	cb 01       	movw	r24, r22
    815e:	8d 83       	std	Y+5, r24	; 0x05
    8160:	9e 83       	std	Y+6, r25	; 0x06
    8162:	af 83       	std	Y+7, r26	; 0x07
    8164:	b8 87       	std	Y+8, r27	; 0x08

	
	ecefToLocalNEDRotationMatrix[0][0] = -1 * sin(radLat) * cos(radLong);
    8166:	89 81       	ldd	r24, Y+1	; 0x01
    8168:	9a 81       	ldd	r25, Y+2	; 0x02
    816a:	ab 81       	ldd	r26, Y+3	; 0x03
    816c:	bc 81       	ldd	r27, Y+4	; 0x04
    816e:	bc 01       	movw	r22, r24
    8170:	cd 01       	movw	r24, r26
    8172:	0e 94 08 49 	call	0x9210	; 0x9210 <sin>
    8176:	dc 01       	movw	r26, r24
    8178:	cb 01       	movw	r24, r22
    817a:	6c 01       	movw	r12, r24
    817c:	7d 01       	movw	r14, r26
    817e:	f7 fa       	bst	r15, 7
    8180:	f0 94       	com	r15
    8182:	f7 f8       	bld	r15, 7
    8184:	f0 94       	com	r15
    8186:	8d 81       	ldd	r24, Y+5	; 0x05
    8188:	9e 81       	ldd	r25, Y+6	; 0x06
    818a:	af 81       	ldd	r26, Y+7	; 0x07
    818c:	b8 85       	ldd	r27, Y+8	; 0x08
    818e:	bc 01       	movw	r22, r24
    8190:	cd 01       	movw	r24, r26
    8192:	0e 94 7b 46 	call	0x8cf6	; 0x8cf6 <cos>
    8196:	dc 01       	movw	r26, r24
    8198:	cb 01       	movw	r24, r22
    819a:	9c 01       	movw	r18, r24
    819c:	ad 01       	movw	r20, r26
    819e:	c7 01       	movw	r24, r14
    81a0:	b6 01       	movw	r22, r12
    81a2:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    81a6:	dc 01       	movw	r26, r24
    81a8:	cb 01       	movw	r24, r22
    81aa:	29 89       	ldd	r18, Y+17	; 0x11
    81ac:	3a 89       	ldd	r19, Y+18	; 0x12
    81ae:	f9 01       	movw	r30, r18
    81b0:	80 83       	st	Z, r24
    81b2:	91 83       	std	Z+1, r25	; 0x01
    81b4:	a2 83       	std	Z+2, r26	; 0x02
    81b6:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[0][1] = -1 * sin(radLat) * sin(radLong);
    81b8:	89 81       	ldd	r24, Y+1	; 0x01
    81ba:	9a 81       	ldd	r25, Y+2	; 0x02
    81bc:	ab 81       	ldd	r26, Y+3	; 0x03
    81be:	bc 81       	ldd	r27, Y+4	; 0x04
    81c0:	bc 01       	movw	r22, r24
    81c2:	cd 01       	movw	r24, r26
    81c4:	0e 94 08 49 	call	0x9210	; 0x9210 <sin>
    81c8:	dc 01       	movw	r26, r24
    81ca:	cb 01       	movw	r24, r22
    81cc:	6c 01       	movw	r12, r24
    81ce:	7d 01       	movw	r14, r26
    81d0:	f7 fa       	bst	r15, 7
    81d2:	f0 94       	com	r15
    81d4:	f7 f8       	bld	r15, 7
    81d6:	f0 94       	com	r15
    81d8:	8d 81       	ldd	r24, Y+5	; 0x05
    81da:	9e 81       	ldd	r25, Y+6	; 0x06
    81dc:	af 81       	ldd	r26, Y+7	; 0x07
    81de:	b8 85       	ldd	r27, Y+8	; 0x08
    81e0:	bc 01       	movw	r22, r24
    81e2:	cd 01       	movw	r24, r26
    81e4:	0e 94 08 49 	call	0x9210	; 0x9210 <sin>
    81e8:	dc 01       	movw	r26, r24
    81ea:	cb 01       	movw	r24, r22
    81ec:	9c 01       	movw	r18, r24
    81ee:	ad 01       	movw	r20, r26
    81f0:	c7 01       	movw	r24, r14
    81f2:	b6 01       	movw	r22, r12
    81f4:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    81f8:	dc 01       	movw	r26, r24
    81fa:	cb 01       	movw	r24, r22
    81fc:	29 89       	ldd	r18, Y+17	; 0x11
    81fe:	3a 89       	ldd	r19, Y+18	; 0x12
    8200:	f9 01       	movw	r30, r18
    8202:	84 83       	std	Z+4, r24	; 0x04
    8204:	95 83       	std	Z+5, r25	; 0x05
    8206:	a6 83       	std	Z+6, r26	; 0x06
    8208:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[0][2] = cos(radLat);
    820a:	89 81       	ldd	r24, Y+1	; 0x01
    820c:	9a 81       	ldd	r25, Y+2	; 0x02
    820e:	ab 81       	ldd	r26, Y+3	; 0x03
    8210:	bc 81       	ldd	r27, Y+4	; 0x04
    8212:	bc 01       	movw	r22, r24
    8214:	cd 01       	movw	r24, r26
    8216:	0e 94 7b 46 	call	0x8cf6	; 0x8cf6 <cos>
    821a:	dc 01       	movw	r26, r24
    821c:	cb 01       	movw	r24, r22
    821e:	29 89       	ldd	r18, Y+17	; 0x11
    8220:	3a 89       	ldd	r19, Y+18	; 0x12
    8222:	f9 01       	movw	r30, r18
    8224:	80 87       	std	Z+8, r24	; 0x08
    8226:	91 87       	std	Z+9, r25	; 0x09
    8228:	a2 87       	std	Z+10, r26	; 0x0a
    822a:	b3 87       	std	Z+11, r27	; 0x0b
	ecefToLocalNEDRotationMatrix[1][0] = -1 * sin (radLong);
    822c:	89 89       	ldd	r24, Y+17	; 0x11
    822e:	9a 89       	ldd	r25, Y+18	; 0x12
    8230:	8c 01       	movw	r16, r24
    8232:	04 5f       	subi	r16, 0xF4	; 244
    8234:	1f 4f       	sbci	r17, 0xFF	; 255
    8236:	8d 81       	ldd	r24, Y+5	; 0x05
    8238:	9e 81       	ldd	r25, Y+6	; 0x06
    823a:	af 81       	ldd	r26, Y+7	; 0x07
    823c:	b8 85       	ldd	r27, Y+8	; 0x08
    823e:	bc 01       	movw	r22, r24
    8240:	cd 01       	movw	r24, r26
    8242:	0e 94 08 49 	call	0x9210	; 0x9210 <sin>
    8246:	dc 01       	movw	r26, r24
    8248:	cb 01       	movw	r24, r22
    824a:	b0 58       	subi	r27, 0x80	; 128
    824c:	f8 01       	movw	r30, r16
    824e:	80 83       	st	Z, r24
    8250:	91 83       	std	Z+1, r25	; 0x01
    8252:	a2 83       	std	Z+2, r26	; 0x02
    8254:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[1][1] = cos(radLong);
    8256:	89 89       	ldd	r24, Y+17	; 0x11
    8258:	9a 89       	ldd	r25, Y+18	; 0x12
    825a:	8c 01       	movw	r16, r24
    825c:	04 5f       	subi	r16, 0xF4	; 244
    825e:	1f 4f       	sbci	r17, 0xFF	; 255
    8260:	8d 81       	ldd	r24, Y+5	; 0x05
    8262:	9e 81       	ldd	r25, Y+6	; 0x06
    8264:	af 81       	ldd	r26, Y+7	; 0x07
    8266:	b8 85       	ldd	r27, Y+8	; 0x08
    8268:	bc 01       	movw	r22, r24
    826a:	cd 01       	movw	r24, r26
    826c:	0e 94 7b 46 	call	0x8cf6	; 0x8cf6 <cos>
    8270:	dc 01       	movw	r26, r24
    8272:	cb 01       	movw	r24, r22
    8274:	f8 01       	movw	r30, r16
    8276:	84 83       	std	Z+4, r24	; 0x04
    8278:	95 83       	std	Z+5, r25	; 0x05
    827a:	a6 83       	std	Z+6, r26	; 0x06
    827c:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[1][2] = 0;
    827e:	89 89       	ldd	r24, Y+17	; 0x11
    8280:	9a 89       	ldd	r25, Y+18	; 0x12
    8282:	0c 96       	adiw	r24, 0x0c	; 12
    8284:	fc 01       	movw	r30, r24
    8286:	10 86       	std	Z+8, r1	; 0x08
    8288:	11 86       	std	Z+9, r1	; 0x09
    828a:	12 86       	std	Z+10, r1	; 0x0a
    828c:	13 86       	std	Z+11, r1	; 0x0b
	ecefToLocalNEDRotationMatrix[2][0] = -1 * cos(radLat) * cos(radLong);
    828e:	89 89       	ldd	r24, Y+17	; 0x11
    8290:	9a 89       	ldd	r25, Y+18	; 0x12
    8292:	8c 01       	movw	r16, r24
    8294:	08 5e       	subi	r16, 0xE8	; 232
    8296:	1f 4f       	sbci	r17, 0xFF	; 255
    8298:	89 81       	ldd	r24, Y+1	; 0x01
    829a:	9a 81       	ldd	r25, Y+2	; 0x02
    829c:	ab 81       	ldd	r26, Y+3	; 0x03
    829e:	bc 81       	ldd	r27, Y+4	; 0x04
    82a0:	bc 01       	movw	r22, r24
    82a2:	cd 01       	movw	r24, r26
    82a4:	0e 94 7b 46 	call	0x8cf6	; 0x8cf6 <cos>
    82a8:	dc 01       	movw	r26, r24
    82aa:	cb 01       	movw	r24, r22
    82ac:	6c 01       	movw	r12, r24
    82ae:	7d 01       	movw	r14, r26
    82b0:	f7 fa       	bst	r15, 7
    82b2:	f0 94       	com	r15
    82b4:	f7 f8       	bld	r15, 7
    82b6:	f0 94       	com	r15
    82b8:	8d 81       	ldd	r24, Y+5	; 0x05
    82ba:	9e 81       	ldd	r25, Y+6	; 0x06
    82bc:	af 81       	ldd	r26, Y+7	; 0x07
    82be:	b8 85       	ldd	r27, Y+8	; 0x08
    82c0:	bc 01       	movw	r22, r24
    82c2:	cd 01       	movw	r24, r26
    82c4:	0e 94 7b 46 	call	0x8cf6	; 0x8cf6 <cos>
    82c8:	dc 01       	movw	r26, r24
    82ca:	cb 01       	movw	r24, r22
    82cc:	9c 01       	movw	r18, r24
    82ce:	ad 01       	movw	r20, r26
    82d0:	c7 01       	movw	r24, r14
    82d2:	b6 01       	movw	r22, r12
    82d4:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    82d8:	dc 01       	movw	r26, r24
    82da:	cb 01       	movw	r24, r22
    82dc:	f8 01       	movw	r30, r16
    82de:	80 83       	st	Z, r24
    82e0:	91 83       	std	Z+1, r25	; 0x01
    82e2:	a2 83       	std	Z+2, r26	; 0x02
    82e4:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[2][1] = -1 * cos(radLat)*sin(radLong);
    82e6:	89 89       	ldd	r24, Y+17	; 0x11
    82e8:	9a 89       	ldd	r25, Y+18	; 0x12
    82ea:	8c 01       	movw	r16, r24
    82ec:	08 5e       	subi	r16, 0xE8	; 232
    82ee:	1f 4f       	sbci	r17, 0xFF	; 255
    82f0:	89 81       	ldd	r24, Y+1	; 0x01
    82f2:	9a 81       	ldd	r25, Y+2	; 0x02
    82f4:	ab 81       	ldd	r26, Y+3	; 0x03
    82f6:	bc 81       	ldd	r27, Y+4	; 0x04
    82f8:	bc 01       	movw	r22, r24
    82fa:	cd 01       	movw	r24, r26
    82fc:	0e 94 7b 46 	call	0x8cf6	; 0x8cf6 <cos>
    8300:	dc 01       	movw	r26, r24
    8302:	cb 01       	movw	r24, r22
    8304:	6c 01       	movw	r12, r24
    8306:	7d 01       	movw	r14, r26
    8308:	f7 fa       	bst	r15, 7
    830a:	f0 94       	com	r15
    830c:	f7 f8       	bld	r15, 7
    830e:	f0 94       	com	r15
    8310:	8d 81       	ldd	r24, Y+5	; 0x05
    8312:	9e 81       	ldd	r25, Y+6	; 0x06
    8314:	af 81       	ldd	r26, Y+7	; 0x07
    8316:	b8 85       	ldd	r27, Y+8	; 0x08
    8318:	bc 01       	movw	r22, r24
    831a:	cd 01       	movw	r24, r26
    831c:	0e 94 08 49 	call	0x9210	; 0x9210 <sin>
    8320:	dc 01       	movw	r26, r24
    8322:	cb 01       	movw	r24, r22
    8324:	9c 01       	movw	r18, r24
    8326:	ad 01       	movw	r20, r26
    8328:	c7 01       	movw	r24, r14
    832a:	b6 01       	movw	r22, r12
    832c:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    8330:	dc 01       	movw	r26, r24
    8332:	cb 01       	movw	r24, r22
    8334:	f8 01       	movw	r30, r16
    8336:	84 83       	std	Z+4, r24	; 0x04
    8338:	95 83       	std	Z+5, r25	; 0x05
    833a:	a6 83       	std	Z+6, r26	; 0x06
    833c:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[2][2] = -1 * sin(radLat);
    833e:	89 89       	ldd	r24, Y+17	; 0x11
    8340:	9a 89       	ldd	r25, Y+18	; 0x12
    8342:	8c 01       	movw	r16, r24
    8344:	08 5e       	subi	r16, 0xE8	; 232
    8346:	1f 4f       	sbci	r17, 0xFF	; 255
    8348:	89 81       	ldd	r24, Y+1	; 0x01
    834a:	9a 81       	ldd	r25, Y+2	; 0x02
    834c:	ab 81       	ldd	r26, Y+3	; 0x03
    834e:	bc 81       	ldd	r27, Y+4	; 0x04
    8350:	bc 01       	movw	r22, r24
    8352:	cd 01       	movw	r24, r26
    8354:	0e 94 08 49 	call	0x9210	; 0x9210 <sin>
    8358:	dc 01       	movw	r26, r24
    835a:	cb 01       	movw	r24, r22
    835c:	b0 58       	subi	r27, 0x80	; 128
    835e:	f8 01       	movw	r30, r16
    8360:	80 87       	std	Z+8, r24	; 0x08
    8362:	91 87       	std	Z+9, r25	; 0x09
    8364:	a2 87       	std	Z+10, r26	; 0x0a
    8366:	b3 87       	std	Z+11, r27	; 0x0b
}
    8368:	62 96       	adiw	r28, 0x12	; 18
    836a:	0f b6       	in	r0, 0x3f	; 63
    836c:	f8 94       	cli
    836e:	de bf       	out	0x3e, r29	; 62
    8370:	0f be       	out	0x3f, r0	; 63
    8372:	cd bf       	out	0x3d, r28	; 61
    8374:	df 91       	pop	r29
    8376:	cf 91       	pop	r28
    8378:	1f 91       	pop	r17
    837a:	0f 91       	pop	r16
    837c:	ff 90       	pop	r15
    837e:	ef 90       	pop	r14
    8380:	df 90       	pop	r13
    8382:	cf 90       	pop	r12
    8384:	08 95       	ret

00008386 <_ZN10helicopter4util14CoordinateUtil11calculateNeEff>:

float CoordinateUtil::calculateNe(float E, float latitudeRads)
{
    8386:	cf 92       	push	r12
    8388:	df 92       	push	r13
    838a:	ef 92       	push	r14
    838c:	ff 92       	push	r15
    838e:	cf 93       	push	r28
    8390:	df 93       	push	r29
    8392:	cd b7       	in	r28, 0x3d	; 61
    8394:	de b7       	in	r29, 0x3e	; 62
    8396:	28 97       	sbiw	r28, 0x08	; 8
    8398:	0f b6       	in	r0, 0x3f	; 63
    839a:	f8 94       	cli
    839c:	de bf       	out	0x3e, r29	; 62
    839e:	0f be       	out	0x3f, r0	; 63
    83a0:	cd bf       	out	0x3d, r28	; 61
    83a2:	69 83       	std	Y+1, r22	; 0x01
    83a4:	7a 83       	std	Y+2, r23	; 0x02
    83a6:	8b 83       	std	Y+3, r24	; 0x03
    83a8:	9c 83       	std	Y+4, r25	; 0x04
    83aa:	2d 83       	std	Y+5, r18	; 0x05
    83ac:	3e 83       	std	Y+6, r19	; 0x06
    83ae:	4f 83       	std	Y+7, r20	; 0x07
    83b0:	58 87       	std	Y+8, r21	; 0x08
	return Rea / sqrt(1 - pow(E, 2) * pow(sin(latitudeRads), 2));
    83b2:	89 81       	ldd	r24, Y+1	; 0x01
    83b4:	9a 81       	ldd	r25, Y+2	; 0x02
    83b6:	ab 81       	ldd	r26, Y+3	; 0x03
    83b8:	bc 81       	ldd	r27, Y+4	; 0x04
    83ba:	20 e0       	ldi	r18, 0x00	; 0
    83bc:	30 e0       	ldi	r19, 0x00	; 0
    83be:	40 e0       	ldi	r20, 0x00	; 0
    83c0:	50 e4       	ldi	r21, 0x40	; 64
    83c2:	bc 01       	movw	r22, r24
    83c4:	cd 01       	movw	r24, r26
    83c6:	0e 94 bc 48 	call	0x9178	; 0x9178 <pow>
    83ca:	6b 01       	movw	r12, r22
    83cc:	7c 01       	movw	r14, r24
    83ce:	8d 81       	ldd	r24, Y+5	; 0x05
    83d0:	9e 81       	ldd	r25, Y+6	; 0x06
    83d2:	af 81       	ldd	r26, Y+7	; 0x07
    83d4:	b8 85       	ldd	r27, Y+8	; 0x08
    83d6:	bc 01       	movw	r22, r24
    83d8:	cd 01       	movw	r24, r26
    83da:	0e 94 08 49 	call	0x9210	; 0x9210 <sin>
    83de:	dc 01       	movw	r26, r24
    83e0:	cb 01       	movw	r24, r22
    83e2:	20 e0       	ldi	r18, 0x00	; 0
    83e4:	30 e0       	ldi	r19, 0x00	; 0
    83e6:	40 e0       	ldi	r20, 0x00	; 0
    83e8:	50 e4       	ldi	r21, 0x40	; 64
    83ea:	bc 01       	movw	r22, r24
    83ec:	cd 01       	movw	r24, r26
    83ee:	0e 94 bc 48 	call	0x9178	; 0x9178 <pow>
    83f2:	dc 01       	movw	r26, r24
    83f4:	cb 01       	movw	r24, r22
    83f6:	9c 01       	movw	r18, r24
    83f8:	ad 01       	movw	r20, r26
    83fa:	c7 01       	movw	r24, r14
    83fc:	b6 01       	movw	r22, r12
    83fe:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    8402:	dc 01       	movw	r26, r24
    8404:	cb 01       	movw	r24, r22
    8406:	9c 01       	movw	r18, r24
    8408:	ad 01       	movw	r20, r26
    840a:	60 e0       	ldi	r22, 0x00	; 0
    840c:	70 e0       	ldi	r23, 0x00	; 0
    840e:	80 e8       	ldi	r24, 0x80	; 128
    8410:	9f e3       	ldi	r25, 0x3F	; 63
    8412:	0e 94 12 46 	call	0x8c24	; 0x8c24 <__subsf3>
    8416:	dc 01       	movw	r26, r24
    8418:	cb 01       	movw	r24, r22
    841a:	bc 01       	movw	r22, r24
    841c:	cd 01       	movw	r24, r26
    841e:	0e 94 12 49 	call	0x9224	; 0x9224 <sqrt>
    8422:	dc 01       	movw	r26, r24
    8424:	cb 01       	movw	r24, r22
    8426:	9c 01       	movw	r18, r24
    8428:	ad 01       	movw	r20, r26
    842a:	62 e3       	ldi	r22, 0x32	; 50
    842c:	75 ea       	ldi	r23, 0xA5	; 165
    842e:	82 ec       	ldi	r24, 0xC2	; 194
    8430:	9a e4       	ldi	r25, 0x4A	; 74
    8432:	0e 94 7e 46 	call	0x8cfc	; 0x8cfc <__divsf3>
    8436:	dc 01       	movw	r26, r24
    8438:	cb 01       	movw	r24, r22
}
    843a:	bc 01       	movw	r22, r24
    843c:	cd 01       	movw	r24, r26
    843e:	28 96       	adiw	r28, 0x08	; 8
    8440:	0f b6       	in	r0, 0x3f	; 63
    8442:	f8 94       	cli
    8444:	de bf       	out	0x3e, r29	; 62
    8446:	0f be       	out	0x3f, r0	; 63
    8448:	cd bf       	out	0x3d, r28	; 61
    844a:	df 91       	pop	r29
    844c:	cf 91       	pop	r28
    844e:	ff 90       	pop	r15
    8450:	ef 90       	pop	r14
    8452:	df 90       	pop	r13
    8454:	cf 90       	pop	r12
    8456:	08 95       	ret

00008458 <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEfffRfS2_S2_>:
/**
 * A description of the variables used to convert lat/long to ecef can be found on page 25 of 
 * Unmanned Rotor Craft Systems
 */
void CoordinateUtil::ConvertFromGeodeticToECEF(float latitudeDegrees, float longitudeDegrees, float altitudeFeetAgl, float &ecefX, float &ecefY, float &ecefZ)
{
    8458:	8f 92       	push	r8
    845a:	9f 92       	push	r9
    845c:	af 92       	push	r10
    845e:	bf 92       	push	r11
    8460:	cf 92       	push	r12
    8462:	df 92       	push	r13
    8464:	ef 92       	push	r14
    8466:	ff 92       	push	r15
    8468:	0f 93       	push	r16
    846a:	1f 93       	push	r17
    846c:	cf 93       	push	r28
    846e:	df 93       	push	r29
    8470:	cd b7       	in	r28, 0x3d	; 61
    8472:	de b7       	in	r29, 0x3e	; 62
    8474:	6e 97       	sbiw	r28, 0x1e	; 30
    8476:	0f b6       	in	r0, 0x3f	; 63
    8478:	f8 94       	cli
    847a:	de bf       	out	0x3e, r29	; 62
    847c:	0f be       	out	0x3f, r0	; 63
    847e:	cd bf       	out	0x3d, r28	; 61
    8480:	6d 87       	std	Y+13, r22	; 0x0d
    8482:	7e 87       	std	Y+14, r23	; 0x0e
    8484:	8f 87       	std	Y+15, r24	; 0x0f
    8486:	98 8b       	std	Y+16, r25	; 0x10
    8488:	29 8b       	std	Y+17, r18	; 0x11
    848a:	3a 8b       	std	Y+18, r19	; 0x12
    848c:	4b 8b       	std	Y+19, r20	; 0x13
    848e:	5c 8b       	std	Y+20, r21	; 0x14
    8490:	ed 8a       	std	Y+21, r14	; 0x15
    8492:	fe 8a       	std	Y+22, r15	; 0x16
    8494:	0f 8b       	std	Y+23, r16	; 0x17
    8496:	18 8f       	std	Y+24, r17	; 0x18
    8498:	da 8e       	std	Y+26, r13	; 0x1a
    849a:	c9 8e       	std	Y+25, r12	; 0x19
    849c:	bc 8e       	std	Y+28, r11	; 0x1c
    849e:	ab 8e       	std	Y+27, r10	; 0x1b
    84a0:	9e 8e       	std	Y+30, r9	; 0x1e
    84a2:	8d 8e       	std	Y+29, r8	; 0x1d
	float radLat = DegreesToRad(latitudeDegrees);
    84a4:	8d 85       	ldd	r24, Y+13	; 0x0d
    84a6:	9e 85       	ldd	r25, Y+14	; 0x0e
    84a8:	af 85       	ldd	r26, Y+15	; 0x0f
    84aa:	b8 89       	ldd	r27, Y+16	; 0x10
    84ac:	bc 01       	movw	r22, r24
    84ae:	cd 01       	movw	r24, r26
    84b0:	0e 94 5e 40 	call	0x80bc	; 0x80bc <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    84b4:	dc 01       	movw	r26, r24
    84b6:	cb 01       	movw	r24, r22
    84b8:	89 83       	std	Y+1, r24	; 0x01
    84ba:	9a 83       	std	Y+2, r25	; 0x02
    84bc:	ab 83       	std	Y+3, r26	; 0x03
    84be:	bc 83       	std	Y+4, r27	; 0x04
	float radLong = DegreesToRad(longitudeDegrees);
    84c0:	89 89       	ldd	r24, Y+17	; 0x11
    84c2:	9a 89       	ldd	r25, Y+18	; 0x12
    84c4:	ab 89       	ldd	r26, Y+19	; 0x13
    84c6:	bc 89       	ldd	r27, Y+20	; 0x14
    84c8:	bc 01       	movw	r22, r24
    84ca:	cd 01       	movw	r24, r26
    84cc:	0e 94 5e 40 	call	0x80bc	; 0x80bc <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    84d0:	dc 01       	movw	r26, r24
    84d2:	cb 01       	movw	r24, r22
    84d4:	8d 83       	std	Y+5, r24	; 0x05
    84d6:	9e 83       	std	Y+6, r25	; 0x06
    84d8:	af 83       	std	Y+7, r26	; 0x07
    84da:	b8 87       	std	Y+8, r27	; 0x08
	

	float Ne = calculateNe(E, radLat);
    84dc:	89 81       	ldd	r24, Y+1	; 0x01
    84de:	9a 81       	ldd	r25, Y+2	; 0x02
    84e0:	ab 81       	ldd	r26, Y+3	; 0x03
    84e2:	bc 81       	ldd	r27, Y+4	; 0x04
    84e4:	9c 01       	movw	r18, r24
    84e6:	ad 01       	movw	r20, r26
    84e8:	62 ed       	ldi	r22, 0xD2	; 210
    84ea:	70 e9       	ldi	r23, 0x90	; 144
    84ec:	87 ea       	ldi	r24, 0xA7	; 167
    84ee:	9d e3       	ldi	r25, 0x3D	; 61
    84f0:	0e 94 c3 41 	call	0x8386	; 0x8386 <_ZN10helicopter4util14CoordinateUtil11calculateNeEff>
    84f4:	dc 01       	movw	r26, r24
    84f6:	cb 01       	movw	r24, r22
    84f8:	89 87       	std	Y+9, r24	; 0x09
    84fa:	9a 87       	std	Y+10, r25	; 0x0a
    84fc:	ab 87       	std	Y+11, r26	; 0x0b
    84fe:	bc 87       	std	Y+12, r27	; 0x0c
	
	ecefX = (Ne + altitudeFeetAgl) * cos(radLat) * cos(radLong);
    8500:	2d 89       	ldd	r18, Y+21	; 0x15
    8502:	3e 89       	ldd	r19, Y+22	; 0x16
    8504:	4f 89       	ldd	r20, Y+23	; 0x17
    8506:	58 8d       	ldd	r21, Y+24	; 0x18
    8508:	69 85       	ldd	r22, Y+9	; 0x09
    850a:	7a 85       	ldd	r23, Y+10	; 0x0a
    850c:	8b 85       	ldd	r24, Y+11	; 0x0b
    850e:	9c 85       	ldd	r25, Y+12	; 0x0c
    8510:	0e 94 13 46 	call	0x8c26	; 0x8c26 <__addsf3>
    8514:	dc 01       	movw	r26, r24
    8516:	cb 01       	movw	r24, r22
    8518:	6c 01       	movw	r12, r24
    851a:	7d 01       	movw	r14, r26
    851c:	89 81       	ldd	r24, Y+1	; 0x01
    851e:	9a 81       	ldd	r25, Y+2	; 0x02
    8520:	ab 81       	ldd	r26, Y+3	; 0x03
    8522:	bc 81       	ldd	r27, Y+4	; 0x04
    8524:	bc 01       	movw	r22, r24
    8526:	cd 01       	movw	r24, r26
    8528:	0e 94 7b 46 	call	0x8cf6	; 0x8cf6 <cos>
    852c:	dc 01       	movw	r26, r24
    852e:	cb 01       	movw	r24, r22
    8530:	9c 01       	movw	r18, r24
    8532:	ad 01       	movw	r20, r26
    8534:	c7 01       	movw	r24, r14
    8536:	b6 01       	movw	r22, r12
    8538:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    853c:	dc 01       	movw	r26, r24
    853e:	cb 01       	movw	r24, r22
    8540:	6c 01       	movw	r12, r24
    8542:	7d 01       	movw	r14, r26
    8544:	8d 81       	ldd	r24, Y+5	; 0x05
    8546:	9e 81       	ldd	r25, Y+6	; 0x06
    8548:	af 81       	ldd	r26, Y+7	; 0x07
    854a:	b8 85       	ldd	r27, Y+8	; 0x08
    854c:	bc 01       	movw	r22, r24
    854e:	cd 01       	movw	r24, r26
    8550:	0e 94 7b 46 	call	0x8cf6	; 0x8cf6 <cos>
    8554:	dc 01       	movw	r26, r24
    8556:	cb 01       	movw	r24, r22
    8558:	9c 01       	movw	r18, r24
    855a:	ad 01       	movw	r20, r26
    855c:	c7 01       	movw	r24, r14
    855e:	b6 01       	movw	r22, r12
    8560:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    8564:	dc 01       	movw	r26, r24
    8566:	cb 01       	movw	r24, r22
    8568:	29 8d       	ldd	r18, Y+25	; 0x19
    856a:	3a 8d       	ldd	r19, Y+26	; 0x1a
    856c:	f9 01       	movw	r30, r18
    856e:	80 83       	st	Z, r24
    8570:	91 83       	std	Z+1, r25	; 0x01
    8572:	a2 83       	std	Z+2, r26	; 0x02
    8574:	b3 83       	std	Z+3, r27	; 0x03
	ecefY = (Ne + altitudeFeetAgl) * cos(radLat) * sin(radLong);
    8576:	2d 89       	ldd	r18, Y+21	; 0x15
    8578:	3e 89       	ldd	r19, Y+22	; 0x16
    857a:	4f 89       	ldd	r20, Y+23	; 0x17
    857c:	58 8d       	ldd	r21, Y+24	; 0x18
    857e:	69 85       	ldd	r22, Y+9	; 0x09
    8580:	7a 85       	ldd	r23, Y+10	; 0x0a
    8582:	8b 85       	ldd	r24, Y+11	; 0x0b
    8584:	9c 85       	ldd	r25, Y+12	; 0x0c
    8586:	0e 94 13 46 	call	0x8c26	; 0x8c26 <__addsf3>
    858a:	dc 01       	movw	r26, r24
    858c:	cb 01       	movw	r24, r22
    858e:	6c 01       	movw	r12, r24
    8590:	7d 01       	movw	r14, r26
    8592:	89 81       	ldd	r24, Y+1	; 0x01
    8594:	9a 81       	ldd	r25, Y+2	; 0x02
    8596:	ab 81       	ldd	r26, Y+3	; 0x03
    8598:	bc 81       	ldd	r27, Y+4	; 0x04
    859a:	bc 01       	movw	r22, r24
    859c:	cd 01       	movw	r24, r26
    859e:	0e 94 7b 46 	call	0x8cf6	; 0x8cf6 <cos>
    85a2:	dc 01       	movw	r26, r24
    85a4:	cb 01       	movw	r24, r22
    85a6:	9c 01       	movw	r18, r24
    85a8:	ad 01       	movw	r20, r26
    85aa:	c7 01       	movw	r24, r14
    85ac:	b6 01       	movw	r22, r12
    85ae:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    85b2:	dc 01       	movw	r26, r24
    85b4:	cb 01       	movw	r24, r22
    85b6:	6c 01       	movw	r12, r24
    85b8:	7d 01       	movw	r14, r26
    85ba:	8d 81       	ldd	r24, Y+5	; 0x05
    85bc:	9e 81       	ldd	r25, Y+6	; 0x06
    85be:	af 81       	ldd	r26, Y+7	; 0x07
    85c0:	b8 85       	ldd	r27, Y+8	; 0x08
    85c2:	bc 01       	movw	r22, r24
    85c4:	cd 01       	movw	r24, r26
    85c6:	0e 94 08 49 	call	0x9210	; 0x9210 <sin>
    85ca:	dc 01       	movw	r26, r24
    85cc:	cb 01       	movw	r24, r22
    85ce:	9c 01       	movw	r18, r24
    85d0:	ad 01       	movw	r20, r26
    85d2:	c7 01       	movw	r24, r14
    85d4:	b6 01       	movw	r22, r12
    85d6:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    85da:	dc 01       	movw	r26, r24
    85dc:	cb 01       	movw	r24, r22
    85de:	2b 8d       	ldd	r18, Y+27	; 0x1b
    85e0:	3c 8d       	ldd	r19, Y+28	; 0x1c
    85e2:	f9 01       	movw	r30, r18
    85e4:	80 83       	st	Z, r24
    85e6:	91 83       	std	Z+1, r25	; 0x01
    85e8:	a2 83       	std	Z+2, r26	; 0x02
    85ea:	b3 83       	std	Z+3, r27	; 0x03
	ecefZ = ((Ne * (1 - pow(E, 2))) + altitudeFeetAgl) * sin(radLat);
    85ec:	27 e4       	ldi	r18, 0x47	; 71
    85ee:	39 e4       	ldi	r19, 0x49	; 73
    85f0:	4e e7       	ldi	r20, 0x7E	; 126
    85f2:	5f e3       	ldi	r21, 0x3F	; 63
    85f4:	69 85       	ldd	r22, Y+9	; 0x09
    85f6:	7a 85       	ldd	r23, Y+10	; 0x0a
    85f8:	8b 85       	ldd	r24, Y+11	; 0x0b
    85fa:	9c 85       	ldd	r25, Y+12	; 0x0c
    85fc:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    8600:	dc 01       	movw	r26, r24
    8602:	cb 01       	movw	r24, r22
    8604:	2d 89       	ldd	r18, Y+21	; 0x15
    8606:	3e 89       	ldd	r19, Y+22	; 0x16
    8608:	4f 89       	ldd	r20, Y+23	; 0x17
    860a:	58 8d       	ldd	r21, Y+24	; 0x18
    860c:	bc 01       	movw	r22, r24
    860e:	cd 01       	movw	r24, r26
    8610:	0e 94 13 46 	call	0x8c26	; 0x8c26 <__addsf3>
    8614:	dc 01       	movw	r26, r24
    8616:	cb 01       	movw	r24, r22
    8618:	6c 01       	movw	r12, r24
    861a:	7d 01       	movw	r14, r26
    861c:	89 81       	ldd	r24, Y+1	; 0x01
    861e:	9a 81       	ldd	r25, Y+2	; 0x02
    8620:	ab 81       	ldd	r26, Y+3	; 0x03
    8622:	bc 81       	ldd	r27, Y+4	; 0x04
    8624:	bc 01       	movw	r22, r24
    8626:	cd 01       	movw	r24, r26
    8628:	0e 94 08 49 	call	0x9210	; 0x9210 <sin>
    862c:	dc 01       	movw	r26, r24
    862e:	cb 01       	movw	r24, r22
    8630:	9c 01       	movw	r18, r24
    8632:	ad 01       	movw	r20, r26
    8634:	c7 01       	movw	r24, r14
    8636:	b6 01       	movw	r22, r12
    8638:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    863c:	dc 01       	movw	r26, r24
    863e:	cb 01       	movw	r24, r22
    8640:	2d 8d       	ldd	r18, Y+29	; 0x1d
    8642:	3e 8d       	ldd	r19, Y+30	; 0x1e
    8644:	f9 01       	movw	r30, r18
    8646:	80 83       	st	Z, r24
    8648:	91 83       	std	Z+1, r25	; 0x01
    864a:	a2 83       	std	Z+2, r26	; 0x02
    864c:	b3 83       	std	Z+3, r27	; 0x03
}
    864e:	6e 96       	adiw	r28, 0x1e	; 30
    8650:	0f b6       	in	r0, 0x3f	; 63
    8652:	f8 94       	cli
    8654:	de bf       	out	0x3e, r29	; 62
    8656:	0f be       	out	0x3f, r0	; 63
    8658:	cd bf       	out	0x3d, r28	; 61
    865a:	df 91       	pop	r29
    865c:	cf 91       	pop	r28
    865e:	1f 91       	pop	r17
    8660:	0f 91       	pop	r16
    8662:	ff 90       	pop	r15
    8664:	ef 90       	pop	r14
    8666:	df 90       	pop	r13
    8668:	cf 90       	pop	r12
    866a:	bf 90       	pop	r11
    866c:	af 90       	pop	r10
    866e:	9f 90       	pop	r9
    8670:	8f 90       	pop	r8
    8672:	08 95       	ret

00008674 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_>:

void CoordinateUtil::ConvertFromECEFToLocalNED(float ecefReferenceX, float ecefReferenceY, float ecefReferenceZ,
	float ecefX, float ecefY, float ecefZ, float ecefToLocalNEDRotationMatrix[][3],
	float &localNEDX, float &localNEDY, float &localNEDZ)
{
    8674:	af 92       	push	r10
    8676:	bf 92       	push	r11
    8678:	cf 92       	push	r12
    867a:	df 92       	push	r13
    867c:	ef 92       	push	r14
    867e:	ff 92       	push	r15
    8680:	0f 93       	push	r16
    8682:	1f 93       	push	r17
    8684:	cf 93       	push	r28
    8686:	df 93       	push	r29
    8688:	cd b7       	in	r28, 0x3d	; 61
    868a:	de b7       	in	r29, 0x3e	; 62
    868c:	e8 97       	sbiw	r28, 0x38	; 56
    868e:	0f b6       	in	r0, 0x3f	; 63
    8690:	f8 94       	cli
    8692:	de bf       	out	0x3e, r29	; 62
    8694:	0f be       	out	0x3f, r0	; 63
    8696:	cd bf       	out	0x3d, r28	; 61
    8698:	69 a7       	std	Y+41, r22	; 0x29
    869a:	7a a7       	std	Y+42, r23	; 0x2a
    869c:	8b a7       	std	Y+43, r24	; 0x2b
    869e:	9c a7       	std	Y+44, r25	; 0x2c
    86a0:	2d a7       	std	Y+45, r18	; 0x2d
    86a2:	3e a7       	std	Y+46, r19	; 0x2e
    86a4:	4f a7       	std	Y+47, r20	; 0x2f
    86a6:	58 ab       	std	Y+48, r21	; 0x30
    86a8:	e9 aa       	std	Y+49, r14	; 0x31
    86aa:	fa aa       	std	Y+50, r15	; 0x32
    86ac:	0b ab       	std	Y+51, r16	; 0x33
    86ae:	1c ab       	std	Y+52, r17	; 0x34
    86b0:	ad aa       	std	Y+53, r10	; 0x35
    86b2:	be aa       	std	Y+54, r11	; 0x36
    86b4:	cf aa       	std	Y+55, r12	; 0x37
    86b6:	d8 ae       	std	Y+56, r13	; 0x38
	//Get the current helicopters position relative to it's starting point in ecef.
	float differenceXECEF = ecefX - ecefReferenceX;
    86b8:	29 a5       	ldd	r18, Y+41	; 0x29
    86ba:	3a a5       	ldd	r19, Y+42	; 0x2a
    86bc:	4b a5       	ldd	r20, Y+43	; 0x2b
    86be:	5c a5       	ldd	r21, Y+44	; 0x2c
    86c0:	6d a9       	ldd	r22, Y+53	; 0x35
    86c2:	7e a9       	ldd	r23, Y+54	; 0x36
    86c4:	8f a9       	ldd	r24, Y+55	; 0x37
    86c6:	98 ad       	ldd	r25, Y+56	; 0x38
    86c8:	0e 94 12 46 	call	0x8c24	; 0x8c24 <__subsf3>
    86cc:	dc 01       	movw	r26, r24
    86ce:	cb 01       	movw	r24, r22
    86d0:	8d 83       	std	Y+5, r24	; 0x05
    86d2:	9e 83       	std	Y+6, r25	; 0x06
    86d4:	af 83       	std	Y+7, r26	; 0x07
    86d6:	b8 87       	std	Y+8, r27	; 0x08
	float differenceYECEF = ecefY - ecefReferenceY;
    86d8:	2d a5       	ldd	r18, Y+45	; 0x2d
    86da:	3e a5       	ldd	r19, Y+46	; 0x2e
    86dc:	4f a5       	ldd	r20, Y+47	; 0x2f
    86de:	58 a9       	ldd	r21, Y+48	; 0x30
    86e0:	2a 96       	adiw	r28, 0x0a	; 10
    86e2:	6c ad       	ldd	r22, Y+60	; 0x3c
    86e4:	7d ad       	ldd	r23, Y+61	; 0x3d
    86e6:	8e ad       	ldd	r24, Y+62	; 0x3e
    86e8:	9f ad       	ldd	r25, Y+63	; 0x3f
    86ea:	2a 97       	sbiw	r28, 0x0a	; 10
    86ec:	0e 94 12 46 	call	0x8c24	; 0x8c24 <__subsf3>
    86f0:	dc 01       	movw	r26, r24
    86f2:	cb 01       	movw	r24, r22
    86f4:	89 87       	std	Y+9, r24	; 0x09
    86f6:	9a 87       	std	Y+10, r25	; 0x0a
    86f8:	ab 87       	std	Y+11, r26	; 0x0b
    86fa:	bc 87       	std	Y+12, r27	; 0x0c
	float differenceZECEF = ecefZ - ecefReferenceZ;
    86fc:	29 a9       	ldd	r18, Y+49	; 0x31
    86fe:	3a a9       	ldd	r19, Y+50	; 0x32
    8700:	4b a9       	ldd	r20, Y+51	; 0x33
    8702:	5c a9       	ldd	r21, Y+52	; 0x34
    8704:	2e 96       	adiw	r28, 0x0e	; 14
    8706:	6c ad       	ldd	r22, Y+60	; 0x3c
    8708:	7d ad       	ldd	r23, Y+61	; 0x3d
    870a:	8e ad       	ldd	r24, Y+62	; 0x3e
    870c:	9f ad       	ldd	r25, Y+63	; 0x3f
    870e:	2e 97       	sbiw	r28, 0x0e	; 14
    8710:	0e 94 12 46 	call	0x8c24	; 0x8c24 <__subsf3>
    8714:	dc 01       	movw	r26, r24
    8716:	cb 01       	movw	r24, r22
    8718:	8d 87       	std	Y+13, r24	; 0x0d
    871a:	9e 87       	std	Y+14, r25	; 0x0e
    871c:	af 87       	std	Y+15, r26	; 0x0f
    871e:	b8 8b       	std	Y+16, r27	; 0x10
	
	float rotatedMatrix[3] = {};
    8720:	2c e0       	ldi	r18, 0x0C	; 12
    8722:	ce 01       	movw	r24, r28
    8724:	41 96       	adiw	r24, 0x11	; 17
    8726:	fc 01       	movw	r30, r24
    8728:	32 2f       	mov	r19, r18
    872a:	11 92       	st	Z+, r1
    872c:	3a 95       	dec	r19
    872e:	e9 f7       	brne	.-6      	; 0x872a <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0xb6>
	float positionMatrix[3] = {differenceXECEF, differenceYECEF, differenceZECEF};
    8730:	8d 81       	ldd	r24, Y+5	; 0x05
    8732:	9e 81       	ldd	r25, Y+6	; 0x06
    8734:	af 81       	ldd	r26, Y+7	; 0x07
    8736:	b8 85       	ldd	r27, Y+8	; 0x08
    8738:	8d 8f       	std	Y+29, r24	; 0x1d
    873a:	9e 8f       	std	Y+30, r25	; 0x1e
    873c:	af 8f       	std	Y+31, r26	; 0x1f
    873e:	b8 a3       	std	Y+32, r27	; 0x20
    8740:	89 85       	ldd	r24, Y+9	; 0x09
    8742:	9a 85       	ldd	r25, Y+10	; 0x0a
    8744:	ab 85       	ldd	r26, Y+11	; 0x0b
    8746:	bc 85       	ldd	r27, Y+12	; 0x0c
    8748:	89 a3       	std	Y+33, r24	; 0x21
    874a:	9a a3       	std	Y+34, r25	; 0x22
    874c:	ab a3       	std	Y+35, r26	; 0x23
    874e:	bc a3       	std	Y+36, r27	; 0x24
    8750:	8d 85       	ldd	r24, Y+13	; 0x0d
    8752:	9e 85       	ldd	r25, Y+14	; 0x0e
    8754:	af 85       	ldd	r26, Y+15	; 0x0f
    8756:	b8 89       	ldd	r27, Y+16	; 0x10
    8758:	8d a3       	std	Y+37, r24	; 0x25
    875a:	9e a3       	std	Y+38, r25	; 0x26
    875c:	af a3       	std	Y+39, r26	; 0x27
    875e:	b8 a7       	std	Y+40, r27	; 0x28
	
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
    8760:	1a 82       	std	Y+2, r1	; 0x02
    8762:	19 82       	std	Y+1, r1	; 0x01
    8764:	78 c0       	rjmp	.+240    	; 0x8856 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1e2>
	{
		//iterate through the columns of the rotation matrix
		for (int j = 0; j < 3; j++)
    8766:	1c 82       	std	Y+4, r1	; 0x04
    8768:	1b 82       	std	Y+3, r1	; 0x03
    876a:	66 c0       	rjmp	.+204    	; 0x8838 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1c4>
		{
			rotatedMatrix[i] += ecefToLocalNEDRotationMatrix[i] [j] * positionMatrix[j];
    876c:	89 81       	ldd	r24, Y+1	; 0x01
    876e:	9a 81       	ldd	r25, Y+2	; 0x02
    8770:	88 0f       	add	r24, r24
    8772:	99 1f       	adc	r25, r25
    8774:	88 0f       	add	r24, r24
    8776:	99 1f       	adc	r25, r25
    8778:	9e 01       	movw	r18, r28
    877a:	2f 5f       	subi	r18, 0xFF	; 255
    877c:	3f 4f       	sbci	r19, 0xFF	; 255
    877e:	82 0f       	add	r24, r18
    8780:	93 1f       	adc	r25, r19
    8782:	40 96       	adiw	r24, 0x10	; 16
    8784:	fc 01       	movw	r30, r24
    8786:	c0 80       	ld	r12, Z
    8788:	d1 80       	ldd	r13, Z+1	; 0x01
    878a:	e2 80       	ldd	r14, Z+2	; 0x02
    878c:	f3 80       	ldd	r15, Z+3	; 0x03
    878e:	29 81       	ldd	r18, Y+1	; 0x01
    8790:	3a 81       	ldd	r19, Y+2	; 0x02
    8792:	c9 01       	movw	r24, r18
    8794:	88 0f       	add	r24, r24
    8796:	99 1f       	adc	r25, r25
    8798:	82 0f       	add	r24, r18
    879a:	93 1f       	adc	r25, r19
    879c:	88 0f       	add	r24, r24
    879e:	99 1f       	adc	r25, r25
    87a0:	88 0f       	add	r24, r24
    87a2:	99 1f       	adc	r25, r25
    87a4:	60 96       	adiw	r28, 0x10	; 16
    87a6:	2e ad       	ldd	r18, Y+62	; 0x3e
    87a8:	3f ad       	ldd	r19, Y+63	; 0x3f
    87aa:	60 97       	sbiw	r28, 0x10	; 16
    87ac:	28 0f       	add	r18, r24
    87ae:	39 1f       	adc	r19, r25
    87b0:	8b 81       	ldd	r24, Y+3	; 0x03
    87b2:	9c 81       	ldd	r25, Y+4	; 0x04
    87b4:	88 0f       	add	r24, r24
    87b6:	99 1f       	adc	r25, r25
    87b8:	88 0f       	add	r24, r24
    87ba:	99 1f       	adc	r25, r25
    87bc:	82 0f       	add	r24, r18
    87be:	93 1f       	adc	r25, r19
    87c0:	fc 01       	movw	r30, r24
    87c2:	80 81       	ld	r24, Z
    87c4:	91 81       	ldd	r25, Z+1	; 0x01
    87c6:	a2 81       	ldd	r26, Z+2	; 0x02
    87c8:	b3 81       	ldd	r27, Z+3	; 0x03
    87ca:	2b 81       	ldd	r18, Y+3	; 0x03
    87cc:	3c 81       	ldd	r19, Y+4	; 0x04
    87ce:	22 0f       	add	r18, r18
    87d0:	33 1f       	adc	r19, r19
    87d2:	22 0f       	add	r18, r18
    87d4:	33 1f       	adc	r19, r19
    87d6:	ae 01       	movw	r20, r28
    87d8:	4f 5f       	subi	r20, 0xFF	; 255
    87da:	5f 4f       	sbci	r21, 0xFF	; 255
    87dc:	24 0f       	add	r18, r20
    87de:	35 1f       	adc	r19, r21
    87e0:	24 5e       	subi	r18, 0xE4	; 228
    87e2:	3f 4f       	sbci	r19, 0xFF	; 255
    87e4:	f9 01       	movw	r30, r18
    87e6:	20 81       	ld	r18, Z
    87e8:	31 81       	ldd	r19, Z+1	; 0x01
    87ea:	42 81       	ldd	r20, Z+2	; 0x02
    87ec:	53 81       	ldd	r21, Z+3	; 0x03
    87ee:	bc 01       	movw	r22, r24
    87f0:	cd 01       	movw	r24, r26
    87f2:	0e 94 59 48 	call	0x90b2	; 0x90b2 <__mulsf3>
    87f6:	dc 01       	movw	r26, r24
    87f8:	cb 01       	movw	r24, r22
    87fa:	9c 01       	movw	r18, r24
    87fc:	ad 01       	movw	r20, r26
    87fe:	c7 01       	movw	r24, r14
    8800:	b6 01       	movw	r22, r12
    8802:	0e 94 13 46 	call	0x8c26	; 0x8c26 <__addsf3>
    8806:	dc 01       	movw	r26, r24
    8808:	cb 01       	movw	r24, r22
    880a:	29 81       	ldd	r18, Y+1	; 0x01
    880c:	3a 81       	ldd	r19, Y+2	; 0x02
    880e:	22 0f       	add	r18, r18
    8810:	33 1f       	adc	r19, r19
    8812:	22 0f       	add	r18, r18
    8814:	33 1f       	adc	r19, r19
    8816:	ae 01       	movw	r20, r28
    8818:	4f 5f       	subi	r20, 0xFF	; 255
    881a:	5f 4f       	sbci	r21, 0xFF	; 255
    881c:	24 0f       	add	r18, r20
    881e:	35 1f       	adc	r19, r21
    8820:	20 5f       	subi	r18, 0xF0	; 240
    8822:	3f 4f       	sbci	r19, 0xFF	; 255
    8824:	f9 01       	movw	r30, r18
    8826:	80 83       	st	Z, r24
    8828:	91 83       	std	Z+1, r25	; 0x01
    882a:	a2 83       	std	Z+2, r26	; 0x02
    882c:	b3 83       	std	Z+3, r27	; 0x03
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
	{
		//iterate through the columns of the rotation matrix
		for (int j = 0; j < 3; j++)
    882e:	8b 81       	ldd	r24, Y+3	; 0x03
    8830:	9c 81       	ldd	r25, Y+4	; 0x04
    8832:	01 96       	adiw	r24, 0x01	; 1
    8834:	9c 83       	std	Y+4, r25	; 0x04
    8836:	8b 83       	std	Y+3, r24	; 0x03
    8838:	21 e0       	ldi	r18, 0x01	; 1
    883a:	8b 81       	ldd	r24, Y+3	; 0x03
    883c:	9c 81       	ldd	r25, Y+4	; 0x04
    883e:	83 30       	cpi	r24, 0x03	; 3
    8840:	91 05       	cpc	r25, r1
    8842:	0c f0       	brlt	.+2      	; 0x8846 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1d2>
    8844:	20 e0       	ldi	r18, 0x00	; 0
    8846:	22 23       	and	r18, r18
    8848:	09 f0       	breq	.+2      	; 0x884c <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1d8>
    884a:	90 cf       	rjmp	.-224    	; 0x876c <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0xf8>
	float rotatedMatrix[3] = {};
	float positionMatrix[3] = {differenceXECEF, differenceYECEF, differenceZECEF};
	
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
    884c:	89 81       	ldd	r24, Y+1	; 0x01
    884e:	9a 81       	ldd	r25, Y+2	; 0x02
    8850:	01 96       	adiw	r24, 0x01	; 1
    8852:	9a 83       	std	Y+2, r25	; 0x02
    8854:	89 83       	std	Y+1, r24	; 0x01
    8856:	21 e0       	ldi	r18, 0x01	; 1
    8858:	89 81       	ldd	r24, Y+1	; 0x01
    885a:	9a 81       	ldd	r25, Y+2	; 0x02
    885c:	83 30       	cpi	r24, 0x03	; 3
    885e:	91 05       	cpc	r25, r1
    8860:	0c f0       	brlt	.+2      	; 0x8864 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1f0>
    8862:	20 e0       	ldi	r18, 0x00	; 0
    8864:	22 23       	and	r18, r18
    8866:	09 f0       	breq	.+2      	; 0x886a <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1f6>
    8868:	7e cf       	rjmp	.-260    	; 0x8766 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0xf2>
		{
			rotatedMatrix[i] += ecefToLocalNEDRotationMatrix[i] [j] * positionMatrix[j];
		}
	}
	
	localNEDX = rotatedMatrix[0];
    886a:	89 89       	ldd	r24, Y+17	; 0x11
    886c:	9a 89       	ldd	r25, Y+18	; 0x12
    886e:	ab 89       	ldd	r26, Y+19	; 0x13
    8870:	bc 89       	ldd	r27, Y+20	; 0x14
    8872:	62 96       	adiw	r28, 0x12	; 18
    8874:	2e ad       	ldd	r18, Y+62	; 0x3e
    8876:	3f ad       	ldd	r19, Y+63	; 0x3f
    8878:	62 97       	sbiw	r28, 0x12	; 18
    887a:	f9 01       	movw	r30, r18
    887c:	80 83       	st	Z, r24
    887e:	91 83       	std	Z+1, r25	; 0x01
    8880:	a2 83       	std	Z+2, r26	; 0x02
    8882:	b3 83       	std	Z+3, r27	; 0x03
	localNEDY = rotatedMatrix[1];
    8884:	8d 89       	ldd	r24, Y+21	; 0x15
    8886:	9e 89       	ldd	r25, Y+22	; 0x16
    8888:	af 89       	ldd	r26, Y+23	; 0x17
    888a:	b8 8d       	ldd	r27, Y+24	; 0x18
    888c:	64 96       	adiw	r28, 0x14	; 20
    888e:	2e ad       	ldd	r18, Y+62	; 0x3e
    8890:	3f ad       	ldd	r19, Y+63	; 0x3f
    8892:	64 97       	sbiw	r28, 0x14	; 20
    8894:	f9 01       	movw	r30, r18
    8896:	80 83       	st	Z, r24
    8898:	91 83       	std	Z+1, r25	; 0x01
    889a:	a2 83       	std	Z+2, r26	; 0x02
    889c:	b3 83       	std	Z+3, r27	; 0x03
	localNEDZ = rotatedMatrix[2];
    889e:	89 8d       	ldd	r24, Y+25	; 0x19
    88a0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    88a2:	ab 8d       	ldd	r26, Y+27	; 0x1b
    88a4:	bc 8d       	ldd	r27, Y+28	; 0x1c
    88a6:	66 96       	adiw	r28, 0x16	; 22
    88a8:	2e ad       	ldd	r18, Y+62	; 0x3e
    88aa:	3f ad       	ldd	r19, Y+63	; 0x3f
    88ac:	66 97       	sbiw	r28, 0x16	; 22
    88ae:	f9 01       	movw	r30, r18
    88b0:	80 83       	st	Z, r24
    88b2:	91 83       	std	Z+1, r25	; 0x01
    88b4:	a2 83       	std	Z+2, r26	; 0x02
    88b6:	b3 83       	std	Z+3, r27	; 0x03
}
    88b8:	e8 96       	adiw	r28, 0x38	; 56
    88ba:	0f b6       	in	r0, 0x3f	; 63
    88bc:	f8 94       	cli
    88be:	de bf       	out	0x3e, r29	; 62
    88c0:	0f be       	out	0x3f, r0	; 63
    88c2:	cd bf       	out	0x3d, r28	; 61
    88c4:	df 91       	pop	r29
    88c6:	cf 91       	pop	r28
    88c8:	1f 91       	pop	r17
    88ca:	0f 91       	pop	r16
    88cc:	ff 90       	pop	r15
    88ce:	ef 90       	pop	r14
    88d0:	df 90       	pop	r13
    88d2:	cf 90       	pop	r12
    88d4:	bf 90       	pop	r11
    88d6:	af 90       	pop	r10
    88d8:	08 95       	ret

000088da <_ZN10helicopter4util14CoordinateUtil29ConvertFromGeodedicToLocalNEDEffffffPA3_fRfS4_S4_>:

void CoordinateUtil::ConvertFromGeodedicToLocalNED(
	float geodedicLatitude, float geodedicLongitude, float altitudeFeetAgl,
	float ecefReferenceX, float ecefReferenceY, float ecefReferenceZ, float ecefToLocalNEDRotationMatrix[][3],
	float &localNEDX,float &localNEDY,float &localNEDZ)
{
    88da:	2f 92       	push	r2
    88dc:	3f 92       	push	r3
    88de:	4f 92       	push	r4
    88e0:	5f 92       	push	r5
    88e2:	6f 92       	push	r6
    88e4:	7f 92       	push	r7
    88e6:	8f 92       	push	r8
    88e8:	9f 92       	push	r9
    88ea:	af 92       	push	r10
    88ec:	bf 92       	push	r11
    88ee:	cf 92       	push	r12
    88f0:	df 92       	push	r13
    88f2:	ef 92       	push	r14
    88f4:	ff 92       	push	r15
    88f6:	0f 93       	push	r16
    88f8:	1f 93       	push	r17
    88fa:	cf 93       	push	r28
    88fc:	df 93       	push	r29
    88fe:	cd b7       	in	r28, 0x3d	; 61
    8900:	de b7       	in	r29, 0x3e	; 62
    8902:	6c 97       	sbiw	r28, 0x1c	; 28
    8904:	0f b6       	in	r0, 0x3f	; 63
    8906:	f8 94       	cli
    8908:	de bf       	out	0x3e, r29	; 62
    890a:	0f be       	out	0x3f, r0	; 63
    890c:	cd bf       	out	0x3d, r28	; 61
    890e:	6d 87       	std	Y+13, r22	; 0x0d
    8910:	7e 87       	std	Y+14, r23	; 0x0e
    8912:	8f 87       	std	Y+15, r24	; 0x0f
    8914:	98 8b       	std	Y+16, r25	; 0x10
    8916:	29 8b       	std	Y+17, r18	; 0x11
    8918:	3a 8b       	std	Y+18, r19	; 0x12
    891a:	4b 8b       	std	Y+19, r20	; 0x13
    891c:	5c 8b       	std	Y+20, r21	; 0x14
    891e:	ed 8a       	std	Y+21, r14	; 0x15
    8920:	fe 8a       	std	Y+22, r15	; 0x16
    8922:	0f 8b       	std	Y+23, r16	; 0x17
    8924:	18 8f       	std	Y+24, r17	; 0x18
    8926:	a9 8e       	std	Y+25, r10	; 0x19
    8928:	ba 8e       	std	Y+26, r11	; 0x1a
    892a:	cb 8e       	std	Y+27, r12	; 0x1b
    892c:	dc 8e       	std	Y+28, r13	; 0x1c
	float ecefX = 0;
    892e:	19 82       	std	Y+1, r1	; 0x01
    8930:	1a 82       	std	Y+2, r1	; 0x02
    8932:	1b 82       	std	Y+3, r1	; 0x03
    8934:	1c 82       	std	Y+4, r1	; 0x04
	float ecefY = 0;
    8936:	1d 82       	std	Y+5, r1	; 0x05
    8938:	1e 82       	std	Y+6, r1	; 0x06
    893a:	1f 82       	std	Y+7, r1	; 0x07
    893c:	18 86       	std	Y+8, r1	; 0x08
	float ecefZ = 0;
    893e:	19 86       	std	Y+9, r1	; 0x09
    8940:	1a 86       	std	Y+10, r1	; 0x0a
    8942:	1b 86       	std	Y+11, r1	; 0x0b
    8944:	1c 86       	std	Y+12, r1	; 0x0c
	
	ConvertFromGeodeticToECEF(geodedicLatitude, geodedicLongitude, altitudeFeetAgl, ecefX, ecefY, ecefZ);
    8946:	fe 01       	movw	r30, r28
    8948:	39 96       	adiw	r30, 0x09	; 9
    894a:	be 01       	movw	r22, r28
    894c:	6b 5f       	subi	r22, 0xFB	; 251
    894e:	7f 4f       	sbci	r23, 0xFF	; 255
    8950:	ed 88       	ldd	r14, Y+21	; 0x15
    8952:	fe 88       	ldd	r15, Y+22	; 0x16
    8954:	0f 89       	ldd	r16, Y+23	; 0x17
    8956:	18 8d       	ldd	r17, Y+24	; 0x18
    8958:	29 89       	ldd	r18, Y+17	; 0x11
    895a:	3a 89       	ldd	r19, Y+18	; 0x12
    895c:	4b 89       	ldd	r20, Y+19	; 0x13
    895e:	5c 89       	ldd	r21, Y+20	; 0x14
    8960:	8d 85       	ldd	r24, Y+13	; 0x0d
    8962:	9e 85       	ldd	r25, Y+14	; 0x0e
    8964:	af 85       	ldd	r26, Y+15	; 0x0f
    8966:	b8 89       	ldd	r27, Y+16	; 0x10
    8968:	4f 01       	movw	r8, r30
    896a:	5b 01       	movw	r10, r22
    896c:	be 01       	movw	r22, r28
    896e:	6f 5f       	subi	r22, 0xFF	; 255
    8970:	7f 4f       	sbci	r23, 0xFF	; 255
    8972:	6b 01       	movw	r12, r22
    8974:	bc 01       	movw	r22, r24
    8976:	cd 01       	movw	r24, r26
    8978:	0e 94 2c 42 	call	0x8458	; 0x8458 <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEfffRfS2_S2_>
	
	ConvertFromECEFToLocalNED(ecefReferenceX, ecefReferenceY, ecefReferenceZ,
		ecefX, ecefY, ecefZ, ecefToLocalNEDRotationMatrix,
		localNEDX, localNEDY, localNEDZ);
    897c:	29 85       	ldd	r18, Y+9	; 0x09
    897e:	3a 85       	ldd	r19, Y+10	; 0x0a
    8980:	4b 85       	ldd	r20, Y+11	; 0x0b
    8982:	5c 85       	ldd	r21, Y+12	; 0x0c
    8984:	8d 81       	ldd	r24, Y+5	; 0x05
    8986:	9e 81       	ldd	r25, Y+6	; 0x06
    8988:	af 81       	ldd	r26, Y+7	; 0x07
    898a:	b8 85       	ldd	r27, Y+8	; 0x08
    898c:	a9 80       	ldd	r10, Y+1	; 0x01
    898e:	ba 80       	ldd	r11, Y+2	; 0x02
    8990:	cb 80       	ldd	r12, Y+3	; 0x03
    8992:	dc 80       	ldd	r13, Y+4	; 0x04
    8994:	ee a8       	ldd	r14, Y+54	; 0x36
    8996:	ff a8       	ldd	r15, Y+55	; 0x37
    8998:	08 ad       	ldd	r16, Y+56	; 0x38
    899a:	19 ad       	ldd	r17, Y+57	; 0x39
    899c:	2a a8       	ldd	r2, Y+50	; 0x32
    899e:	3b a8       	ldd	r3, Y+51	; 0x33
    89a0:	4c a8       	ldd	r4, Y+52	; 0x34
    89a2:	5d a8       	ldd	r5, Y+53	; 0x35
    89a4:	69 8c       	ldd	r6, Y+25	; 0x19
    89a6:	7a 8c       	ldd	r7, Y+26	; 0x1a
    89a8:	8b 8c       	ldd	r8, Y+27	; 0x1b
    89aa:	9c 8c       	ldd	r9, Y+28	; 0x1c
    89ac:	22 96       	adiw	r28, 0x02	; 2
    89ae:	6f ad       	ldd	r22, Y+63	; 0x3f
    89b0:	22 97       	sbiw	r28, 0x02	; 2
    89b2:	6f 93       	push	r22
    89b4:	21 96       	adiw	r28, 0x01	; 1
    89b6:	6f ad       	ldd	r22, Y+63	; 0x3f
    89b8:	21 97       	sbiw	r28, 0x01	; 1
    89ba:	6f 93       	push	r22
    89bc:	6f ad       	ldd	r22, Y+63	; 0x3f
    89be:	6f 93       	push	r22
    89c0:	6e ad       	ldd	r22, Y+62	; 0x3e
    89c2:	6f 93       	push	r22
    89c4:	6d ad       	ldd	r22, Y+61	; 0x3d
    89c6:	6f 93       	push	r22
    89c8:	6c ad       	ldd	r22, Y+60	; 0x3c
    89ca:	6f 93       	push	r22
    89cc:	6b ad       	ldd	r22, Y+59	; 0x3b
    89ce:	6f 93       	push	r22
    89d0:	6a ad       	ldd	r22, Y+58	; 0x3a
    89d2:	6f 93       	push	r22
    89d4:	65 2f       	mov	r22, r21
    89d6:	6f 93       	push	r22
    89d8:	64 2f       	mov	r22, r20
    89da:	6f 93       	push	r22
    89dc:	63 2f       	mov	r22, r19
    89de:	6f 93       	push	r22
    89e0:	2f 93       	push	r18
    89e2:	2b 2f       	mov	r18, r27
    89e4:	2f 93       	push	r18
    89e6:	2a 2f       	mov	r18, r26
    89e8:	2f 93       	push	r18
    89ea:	29 2f       	mov	r18, r25
    89ec:	2f 93       	push	r18
    89ee:	8f 93       	push	r24
    89f0:	a2 01       	movw	r20, r4
    89f2:	91 01       	movw	r18, r2
    89f4:	c4 01       	movw	r24, r8
    89f6:	b3 01       	movw	r22, r6
    89f8:	0e 94 3a 43 	call	0x8674	; 0x8674 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_>
    89fc:	8d b7       	in	r24, 0x3d	; 61
    89fe:	9e b7       	in	r25, 0x3e	; 62
    8a00:	40 96       	adiw	r24, 0x10	; 16
    8a02:	0f b6       	in	r0, 0x3f	; 63
    8a04:	f8 94       	cli
    8a06:	de bf       	out	0x3e, r29	; 62
    8a08:	0f be       	out	0x3f, r0	; 63
    8a0a:	cd bf       	out	0x3d, r28	; 61
    8a0c:	6c 96       	adiw	r28, 0x1c	; 28
    8a0e:	0f b6       	in	r0, 0x3f	; 63
    8a10:	f8 94       	cli
    8a12:	de bf       	out	0x3e, r29	; 62
    8a14:	0f be       	out	0x3f, r0	; 63
    8a16:	cd bf       	out	0x3d, r28	; 61
    8a18:	df 91       	pop	r29
    8a1a:	cf 91       	pop	r28
    8a1c:	1f 91       	pop	r17
    8a1e:	0f 91       	pop	r16
    8a20:	ff 90       	pop	r15
    8a22:	ef 90       	pop	r14
    8a24:	df 90       	pop	r13
    8a26:	cf 90       	pop	r12
    8a28:	bf 90       	pop	r11
    8a2a:	af 90       	pop	r10
    8a2c:	9f 90       	pop	r9
    8a2e:	8f 90       	pop	r8
    8a30:	7f 90       	pop	r7
    8a32:	6f 90       	pop	r6
    8a34:	5f 90       	pop	r5
    8a36:	4f 90       	pop	r4
    8a38:	3f 90       	pop	r3
    8a3a:	2f 90       	pop	r2
    8a3c:	08 95       	ret

00008a3e <_ZN10helicopter4util5Timer10startTimerEv>:
#include "Timer.h"

using namespace helicopter::util;

void Timer::startTimer()
{
    8a3e:	0f 93       	push	r16
    8a40:	1f 93       	push	r17
    8a42:	cf 93       	push	r28
    8a44:	df 93       	push	r29
    8a46:	00 d0       	rcall	.+0      	; 0x8a48 <_ZN10helicopter4util5Timer10startTimerEv+0xa>
    8a48:	1f 92       	push	r1
    8a4a:	cd b7       	in	r28, 0x3d	; 61
    8a4c:	de b7       	in	r29, 0x3e	; 62
    8a4e:	9c 83       	std	Y+4, r25	; 0x04
    8a50:	8b 83       	std	Y+3, r24	; 0x03
	//stop timer in case it was already started.
	stopTimer();
    8a52:	8b 81       	ldd	r24, Y+3	; 0x03
    8a54:	9c 81       	ldd	r25, Y+4	; 0x04
    8a56:	0e 94 f3 45 	call	0x8be6	; 0x8be6 <_ZN10helicopter4util5Timer9stopTimerEv>
	
	int frequency = 0;
    8a5a:	1a 82       	std	Y+2, r1	; 0x02
    8a5c:	19 82       	std	Y+1, r1	; 0x01
	
	if (timeoutMilliseconds > 1000) 
    8a5e:	8b 81       	ldd	r24, Y+3	; 0x03
    8a60:	9c 81       	ldd	r25, Y+4	; 0x04
    8a62:	fc 01       	movw	r30, r24
    8a64:	86 81       	ldd	r24, Z+6	; 0x06
    8a66:	97 81       	ldd	r25, Z+7	; 0x07
    8a68:	89 3e       	cpi	r24, 0xE9	; 233
    8a6a:	f3 e0       	ldi	r31, 0x03	; 3
    8a6c:	9f 07       	cpc	r25, r31
    8a6e:	2c f0       	brlt	.+10     	; 0x8a7a <_ZN10helicopter4util5Timer10startTimerEv+0x3c>
	{
		frequency = 1;
    8a70:	81 e0       	ldi	r24, 0x01	; 1
    8a72:	90 e0       	ldi	r25, 0x00	; 0
    8a74:	9a 83       	std	Y+2, r25	; 0x02
    8a76:	89 83       	std	Y+1, r24	; 0x01
    8a78:	0d c0       	rjmp	.+26     	; 0x8a94 <_ZN10helicopter4util5Timer10startTimerEv+0x56>
	}else
	{
		frequency = 1000 / timeoutMilliseconds;
    8a7a:	8b 81       	ldd	r24, Y+3	; 0x03
    8a7c:	9c 81       	ldd	r25, Y+4	; 0x04
    8a7e:	fc 01       	movw	r30, r24
    8a80:	26 81       	ldd	r18, Z+6	; 0x06
    8a82:	37 81       	ldd	r19, Z+7	; 0x07
    8a84:	88 ee       	ldi	r24, 0xE8	; 232
    8a86:	93 e0       	ldi	r25, 0x03	; 3
    8a88:	b9 01       	movw	r22, r18
    8a8a:	0e 94 73 4a 	call	0x94e6	; 0x94e6 <__divmodhi4>
    8a8e:	9b 01       	movw	r18, r22
    8a90:	3a 83       	std	Y+2, r19	; 0x02
    8a92:	29 83       	std	Y+1, r18	; 0x01
	}

	//setup timer.
	//set the output compare register so that when the Timer Counter (TCNT) matches this output register
	//it indicates that the timer has timed out.
	OCR3A = ((cpuSpeed /  timerPrescaler) / frequency); 
    8a94:	08 e9       	ldi	r16, 0x98	; 152
    8a96:	10 e0       	ldi	r17, 0x00	; 0
    8a98:	8b 81       	ldd	r24, Y+3	; 0x03
    8a9a:	9c 81       	ldd	r25, Y+4	; 0x04
    8a9c:	fc 01       	movw	r30, r24
    8a9e:	80 81       	ld	r24, Z
    8aa0:	91 81       	ldd	r25, Z+1	; 0x01
    8aa2:	a2 81       	ldd	r26, Z+2	; 0x02
    8aa4:	b3 81       	ldd	r27, Z+3	; 0x03
    8aa6:	2b 81       	ldd	r18, Y+3	; 0x03
    8aa8:	3c 81       	ldd	r19, Y+4	; 0x04
    8aaa:	f9 01       	movw	r30, r18
    8aac:	24 81       	ldd	r18, Z+4	; 0x04
    8aae:	35 81       	ldd	r19, Z+5	; 0x05
    8ab0:	44 27       	eor	r20, r20
    8ab2:	37 fd       	sbrc	r19, 7
    8ab4:	40 95       	com	r20
    8ab6:	54 2f       	mov	r21, r20
    8ab8:	bc 01       	movw	r22, r24
    8aba:	cd 01       	movw	r24, r26
    8abc:	0e 94 87 4a 	call	0x950e	; 0x950e <__udivmodsi4>
    8ac0:	da 01       	movw	r26, r20
    8ac2:	c9 01       	movw	r24, r18
    8ac4:	29 81       	ldd	r18, Y+1	; 0x01
    8ac6:	3a 81       	ldd	r19, Y+2	; 0x02
    8ac8:	44 27       	eor	r20, r20
    8aca:	37 fd       	sbrc	r19, 7
    8acc:	40 95       	com	r20
    8ace:	54 2f       	mov	r21, r20
    8ad0:	bc 01       	movw	r22, r24
    8ad2:	cd 01       	movw	r24, r26
    8ad4:	0e 94 87 4a 	call	0x950e	; 0x950e <__udivmodsi4>
    8ad8:	da 01       	movw	r26, r20
    8ada:	c9 01       	movw	r24, r18
    8adc:	f8 01       	movw	r30, r16
    8ade:	91 83       	std	Z+1, r25	; 0x01
    8ae0:	80 83       	st	Z, r24
		
	TCCR3B |= (1 << WGM32); //Configure timer 1 for Clear on Timer Compare (CTC) mode so that if there is a match, the TCNT goes back to 0.
    8ae2:	81 e9       	ldi	r24, 0x91	; 145
    8ae4:	90 e0       	ldi	r25, 0x00	; 0
    8ae6:	21 e9       	ldi	r18, 0x91	; 145
    8ae8:	30 e0       	ldi	r19, 0x00	; 0
    8aea:	f9 01       	movw	r30, r18
    8aec:	20 81       	ld	r18, Z
    8aee:	28 60       	ori	r18, 0x08	; 8
    8af0:	fc 01       	movw	r30, r24
    8af2:	20 83       	st	Z, r18
		
	//Set the Timer Counter Control Register (TCCR) with the appropriate prescaller
	//which causes the timer counter to start (i.e. the timer starts).
	switch(timerPrescaler)
    8af4:	8b 81       	ldd	r24, Y+3	; 0x03
    8af6:	9c 81       	ldd	r25, Y+4	; 0x04
    8af8:	fc 01       	movw	r30, r24
    8afa:	84 81       	ldd	r24, Z+4	; 0x04
    8afc:	95 81       	ldd	r25, Z+5	; 0x05
    8afe:	80 34       	cpi	r24, 0x40	; 64
    8b00:	91 05       	cpc	r25, r1
    8b02:	39 f1       	breq	.+78     	; 0x8b52 <_ZN10helicopter4util5Timer10startTimerEv+0x114>
    8b04:	81 34       	cpi	r24, 0x41	; 65
    8b06:	91 05       	cpc	r25, r1
    8b08:	3c f4       	brge	.+14     	; 0x8b18 <_ZN10helicopter4util5Timer10startTimerEv+0xda>
    8b0a:	81 30       	cpi	r24, 0x01	; 1
    8b0c:	91 05       	cpc	r25, r1
    8b0e:	69 f0       	breq	.+26     	; 0x8b2a <_ZN10helicopter4util5Timer10startTimerEv+0xec>
    8b10:	88 30       	cpi	r24, 0x08	; 8
    8b12:	91 05       	cpc	r25, r1
    8b14:	a1 f0       	breq	.+40     	; 0x8b3e <_ZN10helicopter4util5Timer10startTimerEv+0x100>
    8b16:	3b c0       	rjmp	.+118    	; 0x8b8e <_ZN10helicopter4util5Timer10startTimerEv+0x150>
    8b18:	81 15       	cp	r24, r1
    8b1a:	f1 e0       	ldi	r31, 0x01	; 1
    8b1c:	9f 07       	cpc	r25, r31
    8b1e:	19 f1       	breq	.+70     	; 0x8b66 <_ZN10helicopter4util5Timer10startTimerEv+0x128>
    8b20:	81 15       	cp	r24, r1
    8b22:	24 e0       	ldi	r18, 0x04	; 4
    8b24:	92 07       	cpc	r25, r18
    8b26:	49 f1       	breq	.+82     	; 0x8b7a <_ZN10helicopter4util5Timer10startTimerEv+0x13c>
    8b28:	32 c0       	rjmp	.+100    	; 0x8b8e <_ZN10helicopter4util5Timer10startTimerEv+0x150>
	{
		case NO_PRESCALER:
		TCCR3B |= NoPrescaling;
    8b2a:	81 e9       	ldi	r24, 0x91	; 145
    8b2c:	90 e0       	ldi	r25, 0x00	; 0
    8b2e:	21 e9       	ldi	r18, 0x91	; 145
    8b30:	30 e0       	ldi	r19, 0x00	; 0
    8b32:	f9 01       	movw	r30, r18
    8b34:	20 81       	ld	r18, Z
    8b36:	21 60       	ori	r18, 0x01	; 1
    8b38:	fc 01       	movw	r30, r24
    8b3a:	20 83       	st	Z, r18
		break;
    8b3c:	31 c0       	rjmp	.+98     	; 0x8ba0 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_EIGHT:
		TCCR3B |= PrescaleByEight;
    8b3e:	81 e9       	ldi	r24, 0x91	; 145
    8b40:	90 e0       	ldi	r25, 0x00	; 0
    8b42:	21 e9       	ldi	r18, 0x91	; 145
    8b44:	30 e0       	ldi	r19, 0x00	; 0
    8b46:	f9 01       	movw	r30, r18
    8b48:	20 81       	ld	r18, Z
    8b4a:	22 60       	ori	r18, 0x02	; 2
    8b4c:	fc 01       	movw	r30, r24
    8b4e:	20 83       	st	Z, r18
		break;
    8b50:	27 c0       	rjmp	.+78     	; 0x8ba0 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_SIXTYFOUR:
		TCCR3B |= PrescaleBySixtyFour;
    8b52:	81 e9       	ldi	r24, 0x91	; 145
    8b54:	90 e0       	ldi	r25, 0x00	; 0
    8b56:	21 e9       	ldi	r18, 0x91	; 145
    8b58:	30 e0       	ldi	r19, 0x00	; 0
    8b5a:	f9 01       	movw	r30, r18
    8b5c:	20 81       	ld	r18, Z
    8b5e:	23 60       	ori	r18, 0x03	; 3
    8b60:	fc 01       	movw	r30, r24
    8b62:	20 83       	st	Z, r18
		break;
    8b64:	1d c0       	rjmp	.+58     	; 0x8ba0 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_TWOFIFTYSIX:
		TCCR3B |= PrescaleByTwofiftysix;
    8b66:	81 e9       	ldi	r24, 0x91	; 145
    8b68:	90 e0       	ldi	r25, 0x00	; 0
    8b6a:	21 e9       	ldi	r18, 0x91	; 145
    8b6c:	30 e0       	ldi	r19, 0x00	; 0
    8b6e:	f9 01       	movw	r30, r18
    8b70:	20 81       	ld	r18, Z
    8b72:	24 60       	ori	r18, 0x04	; 4
    8b74:	fc 01       	movw	r30, r24
    8b76:	20 83       	st	Z, r18
		break;
    8b78:	13 c0       	rjmp	.+38     	; 0x8ba0 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_TENTWENTYFOUR:
		TCCR3B |= PrescaleByTentwentyfour;
    8b7a:	81 e9       	ldi	r24, 0x91	; 145
    8b7c:	90 e0       	ldi	r25, 0x00	; 0
    8b7e:	21 e9       	ldi	r18, 0x91	; 145
    8b80:	30 e0       	ldi	r19, 0x00	; 0
    8b82:	f9 01       	movw	r30, r18
    8b84:	20 81       	ld	r18, Z
    8b86:	25 60       	ori	r18, 0x05	; 5
    8b88:	fc 01       	movw	r30, r24
    8b8a:	20 83       	st	Z, r18
		break;
    8b8c:	09 c0       	rjmp	.+18     	; 0x8ba0 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		default:
		TCCR3B |= NoPrescaling;
    8b8e:	81 e9       	ldi	r24, 0x91	; 145
    8b90:	90 e0       	ldi	r25, 0x00	; 0
    8b92:	21 e9       	ldi	r18, 0x91	; 145
    8b94:	30 e0       	ldi	r19, 0x00	; 0
    8b96:	f9 01       	movw	r30, r18
    8b98:	20 81       	ld	r18, Z
    8b9a:	21 60       	ori	r18, 0x01	; 1
    8b9c:	fc 01       	movw	r30, r24
    8b9e:	20 83       	st	Z, r18
	}
}
    8ba0:	0f 90       	pop	r0
    8ba2:	0f 90       	pop	r0
    8ba4:	0f 90       	pop	r0
    8ba6:	0f 90       	pop	r0
    8ba8:	df 91       	pop	r29
    8baa:	cf 91       	pop	r28
    8bac:	1f 91       	pop	r17
    8bae:	0f 91       	pop	r16
    8bb0:	08 95       	ret

00008bb2 <_ZN10helicopter4util5Timer11hasTimedoutEv>:

bool Timer::hasTimedout()
{
    8bb2:	cf 93       	push	r28
    8bb4:	df 93       	push	r29
    8bb6:	1f 92       	push	r1
    8bb8:	1f 92       	push	r1
    8bba:	cd b7       	in	r28, 0x3d	; 61
    8bbc:	de b7       	in	r29, 0x3e	; 62
    8bbe:	9a 83       	std	Y+2, r25	; 0x02
    8bc0:	89 83       	std	Y+1, r24	; 0x01
	//Check the Timer Interrupt Flags Register (TIFR) to determine if the flag was set indicating
	//that the timer has timed out.
	return (TIFR3 & (1<<OCF3A)) != 0;
    8bc2:	88 e3       	ldi	r24, 0x38	; 56
    8bc4:	90 e0       	ldi	r25, 0x00	; 0
    8bc6:	fc 01       	movw	r30, r24
    8bc8:	80 81       	ld	r24, Z
    8bca:	88 2f       	mov	r24, r24
    8bcc:	90 e0       	ldi	r25, 0x00	; 0
    8bce:	82 70       	andi	r24, 0x02	; 2
    8bd0:	99 27       	eor	r25, r25
    8bd2:	21 e0       	ldi	r18, 0x01	; 1
    8bd4:	00 97       	sbiw	r24, 0x00	; 0
    8bd6:	09 f4       	brne	.+2      	; 0x8bda <_ZN10helicopter4util5Timer11hasTimedoutEv+0x28>
    8bd8:	20 e0       	ldi	r18, 0x00	; 0
    8bda:	82 2f       	mov	r24, r18
}
    8bdc:	0f 90       	pop	r0
    8bde:	0f 90       	pop	r0
    8be0:	df 91       	pop	r29
    8be2:	cf 91       	pop	r28
    8be4:	08 95       	ret

00008be6 <_ZN10helicopter4util5Timer9stopTimerEv>:

void Timer::stopTimer()
{
    8be6:	cf 93       	push	r28
    8be8:	df 93       	push	r29
    8bea:	1f 92       	push	r1
    8bec:	1f 92       	push	r1
    8bee:	cd b7       	in	r28, 0x3d	; 61
    8bf0:	de b7       	in	r29, 0x3e	; 62
    8bf2:	9a 83       	std	Y+2, r25	; 0x02
    8bf4:	89 83       	std	Y+1, r24	; 0x01
	//stop the timer
	TCCR3B = 0;
    8bf6:	81 e9       	ldi	r24, 0x91	; 145
    8bf8:	90 e0       	ldi	r25, 0x00	; 0
    8bfa:	fc 01       	movw	r30, r24
    8bfc:	10 82       	st	Z, r1
	
	//Then clear the timer counter (sets the count back to 0 so when the timer starts again, it starts from 0). 
	//Clear after stopping in order to avoid missing a compare match.
	TCNT3 = 0;
    8bfe:	84 e9       	ldi	r24, 0x94	; 148
    8c00:	90 e0       	ldi	r25, 0x00	; 0
    8c02:	fc 01       	movw	r30, r24
    8c04:	11 82       	std	Z+1, r1	; 0x01
    8c06:	10 82       	st	Z, r1
	
	//clear the timeout flag.
	TIFR3 |= (1<<OCF3A);
    8c08:	88 e3       	ldi	r24, 0x38	; 56
    8c0a:	90 e0       	ldi	r25, 0x00	; 0
    8c0c:	28 e3       	ldi	r18, 0x38	; 56
    8c0e:	30 e0       	ldi	r19, 0x00	; 0
    8c10:	f9 01       	movw	r30, r18
    8c12:	20 81       	ld	r18, Z
    8c14:	22 60       	ori	r18, 0x02	; 2
    8c16:	fc 01       	movw	r30, r24
    8c18:	20 83       	st	Z, r18
    8c1a:	0f 90       	pop	r0
    8c1c:	0f 90       	pop	r0
    8c1e:	df 91       	pop	r29
    8c20:	cf 91       	pop	r28
    8c22:	08 95       	ret

00008c24 <__subsf3>:
    8c24:	50 58       	subi	r21, 0x80	; 128

00008c26 <__addsf3>:
    8c26:	bb 27       	eor	r27, r27
    8c28:	aa 27       	eor	r26, r26
    8c2a:	0e d0       	rcall	.+28     	; 0x8c48 <__addsf3x>
    8c2c:	dc c1       	rjmp	.+952    	; 0x8fe6 <__fp_round>
    8c2e:	a5 d1       	rcall	.+842    	; 0x8f7a <__fp_pscA>
    8c30:	30 f0       	brcs	.+12     	; 0x8c3e <__addsf3+0x18>
    8c32:	aa d1       	rcall	.+852    	; 0x8f88 <__fp_pscB>
    8c34:	20 f0       	brcs	.+8      	; 0x8c3e <__addsf3+0x18>
    8c36:	31 f4       	brne	.+12     	; 0x8c44 <__addsf3+0x1e>
    8c38:	9f 3f       	cpi	r25, 0xFF	; 255
    8c3a:	11 f4       	brne	.+4      	; 0x8c40 <__addsf3+0x1a>
    8c3c:	1e f4       	brtc	.+6      	; 0x8c44 <__addsf3+0x1e>
    8c3e:	9a c1       	rjmp	.+820    	; 0x8f74 <__fp_nan>
    8c40:	0e f4       	brtc	.+2      	; 0x8c44 <__addsf3+0x1e>
    8c42:	e0 95       	com	r30
    8c44:	e7 fb       	bst	r30, 7
    8c46:	67 c1       	rjmp	.+718    	; 0x8f16 <__fp_inf>

00008c48 <__addsf3x>:
    8c48:	e9 2f       	mov	r30, r25
    8c4a:	ef d1       	rcall	.+990    	; 0x902a <__fp_split3>
    8c4c:	80 f3       	brcs	.-32     	; 0x8c2e <__addsf3+0x8>
    8c4e:	ba 17       	cp	r27, r26
    8c50:	62 07       	cpc	r22, r18
    8c52:	73 07       	cpc	r23, r19
    8c54:	84 07       	cpc	r24, r20
    8c56:	95 07       	cpc	r25, r21
    8c58:	18 f0       	brcs	.+6      	; 0x8c60 <__addsf3x+0x18>
    8c5a:	71 f4       	brne	.+28     	; 0x8c78 <__addsf3x+0x30>
    8c5c:	9e f5       	brtc	.+102    	; 0x8cc4 <__addsf3x+0x7c>
    8c5e:	1e c2       	rjmp	.+1084   	; 0x909c <__fp_zero>
    8c60:	0e f4       	brtc	.+2      	; 0x8c64 <__addsf3x+0x1c>
    8c62:	e0 95       	com	r30
    8c64:	0b 2e       	mov	r0, r27
    8c66:	ba 2f       	mov	r27, r26
    8c68:	a0 2d       	mov	r26, r0
    8c6a:	0b 01       	movw	r0, r22
    8c6c:	b9 01       	movw	r22, r18
    8c6e:	90 01       	movw	r18, r0
    8c70:	0c 01       	movw	r0, r24
    8c72:	ca 01       	movw	r24, r20
    8c74:	a0 01       	movw	r20, r0
    8c76:	11 24       	eor	r1, r1
    8c78:	ff 27       	eor	r31, r31
    8c7a:	59 1b       	sub	r21, r25
    8c7c:	99 f0       	breq	.+38     	; 0x8ca4 <__addsf3x+0x5c>
    8c7e:	59 3f       	cpi	r21, 0xF9	; 249
    8c80:	50 f4       	brcc	.+20     	; 0x8c96 <__addsf3x+0x4e>
    8c82:	50 3e       	cpi	r21, 0xE0	; 224
    8c84:	68 f1       	brcs	.+90     	; 0x8ce0 <__addsf3x+0x98>
    8c86:	1a 16       	cp	r1, r26
    8c88:	f0 40       	sbci	r31, 0x00	; 0
    8c8a:	a2 2f       	mov	r26, r18
    8c8c:	23 2f       	mov	r18, r19
    8c8e:	34 2f       	mov	r19, r20
    8c90:	44 27       	eor	r20, r20
    8c92:	58 5f       	subi	r21, 0xF8	; 248
    8c94:	f3 cf       	rjmp	.-26     	; 0x8c7c <__addsf3x+0x34>
    8c96:	46 95       	lsr	r20
    8c98:	37 95       	ror	r19
    8c9a:	27 95       	ror	r18
    8c9c:	a7 95       	ror	r26
    8c9e:	f0 40       	sbci	r31, 0x00	; 0
    8ca0:	53 95       	inc	r21
    8ca2:	c9 f7       	brne	.-14     	; 0x8c96 <__addsf3x+0x4e>
    8ca4:	7e f4       	brtc	.+30     	; 0x8cc4 <__addsf3x+0x7c>
    8ca6:	1f 16       	cp	r1, r31
    8ca8:	ba 0b       	sbc	r27, r26
    8caa:	62 0b       	sbc	r22, r18
    8cac:	73 0b       	sbc	r23, r19
    8cae:	84 0b       	sbc	r24, r20
    8cb0:	ba f0       	brmi	.+46     	; 0x8ce0 <__addsf3x+0x98>
    8cb2:	91 50       	subi	r25, 0x01	; 1
    8cb4:	a1 f0       	breq	.+40     	; 0x8cde <__addsf3x+0x96>
    8cb6:	ff 0f       	add	r31, r31
    8cb8:	bb 1f       	adc	r27, r27
    8cba:	66 1f       	adc	r22, r22
    8cbc:	77 1f       	adc	r23, r23
    8cbe:	88 1f       	adc	r24, r24
    8cc0:	c2 f7       	brpl	.-16     	; 0x8cb2 <__addsf3x+0x6a>
    8cc2:	0e c0       	rjmp	.+28     	; 0x8ce0 <__addsf3x+0x98>
    8cc4:	ba 0f       	add	r27, r26
    8cc6:	62 1f       	adc	r22, r18
    8cc8:	73 1f       	adc	r23, r19
    8cca:	84 1f       	adc	r24, r20
    8ccc:	48 f4       	brcc	.+18     	; 0x8ce0 <__addsf3x+0x98>
    8cce:	87 95       	ror	r24
    8cd0:	77 95       	ror	r23
    8cd2:	67 95       	ror	r22
    8cd4:	b7 95       	ror	r27
    8cd6:	f7 95       	ror	r31
    8cd8:	9e 3f       	cpi	r25, 0xFE	; 254
    8cda:	08 f0       	brcs	.+2      	; 0x8cde <__addsf3x+0x96>
    8cdc:	b3 cf       	rjmp	.-154    	; 0x8c44 <__addsf3+0x1e>
    8cde:	93 95       	inc	r25
    8ce0:	88 0f       	add	r24, r24
    8ce2:	08 f0       	brcs	.+2      	; 0x8ce6 <__addsf3x+0x9e>
    8ce4:	99 27       	eor	r25, r25
    8ce6:	ee 0f       	add	r30, r30
    8ce8:	97 95       	ror	r25
    8cea:	87 95       	ror	r24
    8cec:	08 95       	ret

00008cee <__cmpsf2>:
    8cee:	ef d0       	rcall	.+478    	; 0x8ece <__fp_cmp>
    8cf0:	08 f4       	brcc	.+2      	; 0x8cf4 <__cmpsf2+0x6>
    8cf2:	81 e0       	ldi	r24, 0x01	; 1
    8cf4:	08 95       	ret

00008cf6 <cos>:
    8cf6:	50 d1       	rcall	.+672    	; 0x8f98 <__fp_rempio2>
    8cf8:	e3 95       	inc	r30
    8cfa:	86 c1       	rjmp	.+780    	; 0x9008 <__fp_sinus>

00008cfc <__divsf3>:
    8cfc:	0c d0       	rcall	.+24     	; 0x8d16 <__divsf3x>
    8cfe:	73 c1       	rjmp	.+742    	; 0x8fe6 <__fp_round>
    8d00:	43 d1       	rcall	.+646    	; 0x8f88 <__fp_pscB>
    8d02:	40 f0       	brcs	.+16     	; 0x8d14 <__divsf3+0x18>
    8d04:	3a d1       	rcall	.+628    	; 0x8f7a <__fp_pscA>
    8d06:	30 f0       	brcs	.+12     	; 0x8d14 <__divsf3+0x18>
    8d08:	21 f4       	brne	.+8      	; 0x8d12 <__divsf3+0x16>
    8d0a:	5f 3f       	cpi	r21, 0xFF	; 255
    8d0c:	19 f0       	breq	.+6      	; 0x8d14 <__divsf3+0x18>
    8d0e:	03 c1       	rjmp	.+518    	; 0x8f16 <__fp_inf>
    8d10:	51 11       	cpse	r21, r1
    8d12:	c5 c1       	rjmp	.+906    	; 0x909e <__fp_szero>
    8d14:	2f c1       	rjmp	.+606    	; 0x8f74 <__fp_nan>

00008d16 <__divsf3x>:
    8d16:	89 d1       	rcall	.+786    	; 0x902a <__fp_split3>
    8d18:	98 f3       	brcs	.-26     	; 0x8d00 <__divsf3+0x4>

00008d1a <__divsf3_pse>:
    8d1a:	99 23       	and	r25, r25
    8d1c:	c9 f3       	breq	.-14     	; 0x8d10 <__divsf3+0x14>
    8d1e:	55 23       	and	r21, r21
    8d20:	b1 f3       	breq	.-20     	; 0x8d0e <__divsf3+0x12>
    8d22:	95 1b       	sub	r25, r21
    8d24:	55 0b       	sbc	r21, r21
    8d26:	bb 27       	eor	r27, r27
    8d28:	aa 27       	eor	r26, r26
    8d2a:	62 17       	cp	r22, r18
    8d2c:	73 07       	cpc	r23, r19
    8d2e:	84 07       	cpc	r24, r20
    8d30:	38 f0       	brcs	.+14     	; 0x8d40 <__divsf3_pse+0x26>
    8d32:	9f 5f       	subi	r25, 0xFF	; 255
    8d34:	5f 4f       	sbci	r21, 0xFF	; 255
    8d36:	22 0f       	add	r18, r18
    8d38:	33 1f       	adc	r19, r19
    8d3a:	44 1f       	adc	r20, r20
    8d3c:	aa 1f       	adc	r26, r26
    8d3e:	a9 f3       	breq	.-22     	; 0x8d2a <__divsf3_pse+0x10>
    8d40:	33 d0       	rcall	.+102    	; 0x8da8 <__divsf3_pse+0x8e>
    8d42:	0e 2e       	mov	r0, r30
    8d44:	3a f0       	brmi	.+14     	; 0x8d54 <__divsf3_pse+0x3a>
    8d46:	e0 e8       	ldi	r30, 0x80	; 128
    8d48:	30 d0       	rcall	.+96     	; 0x8daa <__divsf3_pse+0x90>
    8d4a:	91 50       	subi	r25, 0x01	; 1
    8d4c:	50 40       	sbci	r21, 0x00	; 0
    8d4e:	e6 95       	lsr	r30
    8d50:	00 1c       	adc	r0, r0
    8d52:	ca f7       	brpl	.-14     	; 0x8d46 <__divsf3_pse+0x2c>
    8d54:	29 d0       	rcall	.+82     	; 0x8da8 <__divsf3_pse+0x8e>
    8d56:	fe 2f       	mov	r31, r30
    8d58:	27 d0       	rcall	.+78     	; 0x8da8 <__divsf3_pse+0x8e>
    8d5a:	66 0f       	add	r22, r22
    8d5c:	77 1f       	adc	r23, r23
    8d5e:	88 1f       	adc	r24, r24
    8d60:	bb 1f       	adc	r27, r27
    8d62:	26 17       	cp	r18, r22
    8d64:	37 07       	cpc	r19, r23
    8d66:	48 07       	cpc	r20, r24
    8d68:	ab 07       	cpc	r26, r27
    8d6a:	b0 e8       	ldi	r27, 0x80	; 128
    8d6c:	09 f0       	breq	.+2      	; 0x8d70 <__divsf3_pse+0x56>
    8d6e:	bb 0b       	sbc	r27, r27
    8d70:	80 2d       	mov	r24, r0
    8d72:	bf 01       	movw	r22, r30
    8d74:	ff 27       	eor	r31, r31
    8d76:	93 58       	subi	r25, 0x83	; 131
    8d78:	5f 4f       	sbci	r21, 0xFF	; 255
    8d7a:	2a f0       	brmi	.+10     	; 0x8d86 <__divsf3_pse+0x6c>
    8d7c:	9e 3f       	cpi	r25, 0xFE	; 254
    8d7e:	51 05       	cpc	r21, r1
    8d80:	68 f0       	brcs	.+26     	; 0x8d9c <__divsf3_pse+0x82>
    8d82:	c9 c0       	rjmp	.+402    	; 0x8f16 <__fp_inf>
    8d84:	8c c1       	rjmp	.+792    	; 0x909e <__fp_szero>
    8d86:	5f 3f       	cpi	r21, 0xFF	; 255
    8d88:	ec f3       	brlt	.-6      	; 0x8d84 <__divsf3_pse+0x6a>
    8d8a:	98 3e       	cpi	r25, 0xE8	; 232
    8d8c:	dc f3       	brlt	.-10     	; 0x8d84 <__divsf3_pse+0x6a>
    8d8e:	86 95       	lsr	r24
    8d90:	77 95       	ror	r23
    8d92:	67 95       	ror	r22
    8d94:	b7 95       	ror	r27
    8d96:	f7 95       	ror	r31
    8d98:	9f 5f       	subi	r25, 0xFF	; 255
    8d9a:	c9 f7       	brne	.-14     	; 0x8d8e <__divsf3_pse+0x74>
    8d9c:	88 0f       	add	r24, r24
    8d9e:	91 1d       	adc	r25, r1
    8da0:	96 95       	lsr	r25
    8da2:	87 95       	ror	r24
    8da4:	97 f9       	bld	r25, 7
    8da6:	08 95       	ret
    8da8:	e1 e0       	ldi	r30, 0x01	; 1
    8daa:	66 0f       	add	r22, r22
    8dac:	77 1f       	adc	r23, r23
    8dae:	88 1f       	adc	r24, r24
    8db0:	bb 1f       	adc	r27, r27
    8db2:	62 17       	cp	r22, r18
    8db4:	73 07       	cpc	r23, r19
    8db6:	84 07       	cpc	r24, r20
    8db8:	ba 07       	cpc	r27, r26
    8dba:	20 f0       	brcs	.+8      	; 0x8dc4 <__divsf3_pse+0xaa>
    8dbc:	62 1b       	sub	r22, r18
    8dbe:	73 0b       	sbc	r23, r19
    8dc0:	84 0b       	sbc	r24, r20
    8dc2:	ba 0b       	sbc	r27, r26
    8dc4:	ee 1f       	adc	r30, r30
    8dc6:	88 f7       	brcc	.-30     	; 0x8daa <__divsf3_pse+0x90>
    8dc8:	e0 95       	com	r30
    8dca:	08 95       	ret

00008dcc <__fixsfsi>:
    8dcc:	04 d0       	rcall	.+8      	; 0x8dd6 <__fixunssfsi>
    8dce:	68 94       	set
    8dd0:	b1 11       	cpse	r27, r1
    8dd2:	65 c1       	rjmp	.+714    	; 0x909e <__fp_szero>
    8dd4:	08 95       	ret

00008dd6 <__fixunssfsi>:
    8dd6:	31 d1       	rcall	.+610    	; 0x903a <__fp_splitA>
    8dd8:	88 f0       	brcs	.+34     	; 0x8dfc <__fixunssfsi+0x26>
    8dda:	9f 57       	subi	r25, 0x7F	; 127
    8ddc:	90 f0       	brcs	.+36     	; 0x8e02 <__fixunssfsi+0x2c>
    8dde:	b9 2f       	mov	r27, r25
    8de0:	99 27       	eor	r25, r25
    8de2:	b7 51       	subi	r27, 0x17	; 23
    8de4:	a0 f0       	brcs	.+40     	; 0x8e0e <__fixunssfsi+0x38>
    8de6:	d1 f0       	breq	.+52     	; 0x8e1c <__fixunssfsi+0x46>
    8de8:	66 0f       	add	r22, r22
    8dea:	77 1f       	adc	r23, r23
    8dec:	88 1f       	adc	r24, r24
    8dee:	99 1f       	adc	r25, r25
    8df0:	1a f0       	brmi	.+6      	; 0x8df8 <__fixunssfsi+0x22>
    8df2:	ba 95       	dec	r27
    8df4:	c9 f7       	brne	.-14     	; 0x8de8 <__fixunssfsi+0x12>
    8df6:	12 c0       	rjmp	.+36     	; 0x8e1c <__fixunssfsi+0x46>
    8df8:	b1 30       	cpi	r27, 0x01	; 1
    8dfa:	81 f0       	breq	.+32     	; 0x8e1c <__fixunssfsi+0x46>
    8dfc:	4f d1       	rcall	.+670    	; 0x909c <__fp_zero>
    8dfe:	b1 e0       	ldi	r27, 0x01	; 1
    8e00:	08 95       	ret
    8e02:	4c c1       	rjmp	.+664    	; 0x909c <__fp_zero>
    8e04:	67 2f       	mov	r22, r23
    8e06:	78 2f       	mov	r23, r24
    8e08:	88 27       	eor	r24, r24
    8e0a:	b8 5f       	subi	r27, 0xF8	; 248
    8e0c:	39 f0       	breq	.+14     	; 0x8e1c <__fixunssfsi+0x46>
    8e0e:	b9 3f       	cpi	r27, 0xF9	; 249
    8e10:	cc f3       	brlt	.-14     	; 0x8e04 <__fixunssfsi+0x2e>
    8e12:	86 95       	lsr	r24
    8e14:	77 95       	ror	r23
    8e16:	67 95       	ror	r22
    8e18:	b3 95       	inc	r27
    8e1a:	d9 f7       	brne	.-10     	; 0x8e12 <__fixunssfsi+0x3c>
    8e1c:	3e f4       	brtc	.+14     	; 0x8e2c <__fixunssfsi+0x56>
    8e1e:	90 95       	com	r25
    8e20:	80 95       	com	r24
    8e22:	70 95       	com	r23
    8e24:	61 95       	neg	r22
    8e26:	7f 4f       	sbci	r23, 0xFF	; 255
    8e28:	8f 4f       	sbci	r24, 0xFF	; 255
    8e2a:	9f 4f       	sbci	r25, 0xFF	; 255
    8e2c:	08 95       	ret

00008e2e <__floatunsisf>:
    8e2e:	e8 94       	clt
    8e30:	09 c0       	rjmp	.+18     	; 0x8e44 <__floatsisf+0x12>

00008e32 <__floatsisf>:
    8e32:	97 fb       	bst	r25, 7
    8e34:	3e f4       	brtc	.+14     	; 0x8e44 <__floatsisf+0x12>
    8e36:	90 95       	com	r25
    8e38:	80 95       	com	r24
    8e3a:	70 95       	com	r23
    8e3c:	61 95       	neg	r22
    8e3e:	7f 4f       	sbci	r23, 0xFF	; 255
    8e40:	8f 4f       	sbci	r24, 0xFF	; 255
    8e42:	9f 4f       	sbci	r25, 0xFF	; 255
    8e44:	99 23       	and	r25, r25
    8e46:	a9 f0       	breq	.+42     	; 0x8e72 <__floatsisf+0x40>
    8e48:	f9 2f       	mov	r31, r25
    8e4a:	96 e9       	ldi	r25, 0x96	; 150
    8e4c:	bb 27       	eor	r27, r27
    8e4e:	93 95       	inc	r25
    8e50:	f6 95       	lsr	r31
    8e52:	87 95       	ror	r24
    8e54:	77 95       	ror	r23
    8e56:	67 95       	ror	r22
    8e58:	b7 95       	ror	r27
    8e5a:	f1 11       	cpse	r31, r1
    8e5c:	f8 cf       	rjmp	.-16     	; 0x8e4e <__floatsisf+0x1c>
    8e5e:	fa f4       	brpl	.+62     	; 0x8e9e <__floatsisf+0x6c>
    8e60:	bb 0f       	add	r27, r27
    8e62:	11 f4       	brne	.+4      	; 0x8e68 <__floatsisf+0x36>
    8e64:	60 ff       	sbrs	r22, 0
    8e66:	1b c0       	rjmp	.+54     	; 0x8e9e <__floatsisf+0x6c>
    8e68:	6f 5f       	subi	r22, 0xFF	; 255
    8e6a:	7f 4f       	sbci	r23, 0xFF	; 255
    8e6c:	8f 4f       	sbci	r24, 0xFF	; 255
    8e6e:	9f 4f       	sbci	r25, 0xFF	; 255
    8e70:	16 c0       	rjmp	.+44     	; 0x8e9e <__floatsisf+0x6c>
    8e72:	88 23       	and	r24, r24
    8e74:	11 f0       	breq	.+4      	; 0x8e7a <__floatsisf+0x48>
    8e76:	96 e9       	ldi	r25, 0x96	; 150
    8e78:	11 c0       	rjmp	.+34     	; 0x8e9c <__floatsisf+0x6a>
    8e7a:	77 23       	and	r23, r23
    8e7c:	21 f0       	breq	.+8      	; 0x8e86 <__floatsisf+0x54>
    8e7e:	9e e8       	ldi	r25, 0x8E	; 142
    8e80:	87 2f       	mov	r24, r23
    8e82:	76 2f       	mov	r23, r22
    8e84:	05 c0       	rjmp	.+10     	; 0x8e90 <__floatsisf+0x5e>
    8e86:	66 23       	and	r22, r22
    8e88:	71 f0       	breq	.+28     	; 0x8ea6 <__floatsisf+0x74>
    8e8a:	96 e8       	ldi	r25, 0x86	; 134
    8e8c:	86 2f       	mov	r24, r22
    8e8e:	70 e0       	ldi	r23, 0x00	; 0
    8e90:	60 e0       	ldi	r22, 0x00	; 0
    8e92:	2a f0       	brmi	.+10     	; 0x8e9e <__floatsisf+0x6c>
    8e94:	9a 95       	dec	r25
    8e96:	66 0f       	add	r22, r22
    8e98:	77 1f       	adc	r23, r23
    8e9a:	88 1f       	adc	r24, r24
    8e9c:	da f7       	brpl	.-10     	; 0x8e94 <__floatsisf+0x62>
    8e9e:	88 0f       	add	r24, r24
    8ea0:	96 95       	lsr	r25
    8ea2:	87 95       	ror	r24
    8ea4:	97 f9       	bld	r25, 7
    8ea6:	08 95       	ret

00008ea8 <floor>:
    8ea8:	e2 d0       	rcall	.+452    	; 0x906e <__fp_trunc>
    8eaa:	80 f0       	brcs	.+32     	; 0x8ecc <floor+0x24>
    8eac:	9f 37       	cpi	r25, 0x7F	; 127
    8eae:	40 f4       	brcc	.+16     	; 0x8ec0 <floor+0x18>
    8eb0:	91 11       	cpse	r25, r1
    8eb2:	0e f0       	brts	.+2      	; 0x8eb6 <floor+0xe>
    8eb4:	f4 c0       	rjmp	.+488    	; 0x909e <__fp_szero>
    8eb6:	60 e0       	ldi	r22, 0x00	; 0
    8eb8:	70 e0       	ldi	r23, 0x00	; 0
    8eba:	80 e8       	ldi	r24, 0x80	; 128
    8ebc:	9f eb       	ldi	r25, 0xBF	; 191
    8ebe:	08 95       	ret
    8ec0:	26 f4       	brtc	.+8      	; 0x8eca <floor+0x22>
    8ec2:	1b 16       	cp	r1, r27
    8ec4:	61 1d       	adc	r22, r1
    8ec6:	71 1d       	adc	r23, r1
    8ec8:	81 1d       	adc	r24, r1
    8eca:	2b c0       	rjmp	.+86     	; 0x8f22 <__fp_mintl>
    8ecc:	45 c0       	rjmp	.+138    	; 0x8f58 <__fp_mpack>

00008ece <__fp_cmp>:
    8ece:	99 0f       	add	r25, r25
    8ed0:	00 08       	sbc	r0, r0
    8ed2:	55 0f       	add	r21, r21
    8ed4:	aa 0b       	sbc	r26, r26
    8ed6:	e0 e8       	ldi	r30, 0x80	; 128
    8ed8:	fe ef       	ldi	r31, 0xFE	; 254
    8eda:	16 16       	cp	r1, r22
    8edc:	17 06       	cpc	r1, r23
    8ede:	e8 07       	cpc	r30, r24
    8ee0:	f9 07       	cpc	r31, r25
    8ee2:	c0 f0       	brcs	.+48     	; 0x8f14 <__fp_cmp+0x46>
    8ee4:	12 16       	cp	r1, r18
    8ee6:	13 06       	cpc	r1, r19
    8ee8:	e4 07       	cpc	r30, r20
    8eea:	f5 07       	cpc	r31, r21
    8eec:	98 f0       	brcs	.+38     	; 0x8f14 <__fp_cmp+0x46>
    8eee:	62 1b       	sub	r22, r18
    8ef0:	73 0b       	sbc	r23, r19
    8ef2:	84 0b       	sbc	r24, r20
    8ef4:	95 0b       	sbc	r25, r21
    8ef6:	39 f4       	brne	.+14     	; 0x8f06 <__fp_cmp+0x38>
    8ef8:	0a 26       	eor	r0, r26
    8efa:	61 f0       	breq	.+24     	; 0x8f14 <__fp_cmp+0x46>
    8efc:	23 2b       	or	r18, r19
    8efe:	24 2b       	or	r18, r20
    8f00:	25 2b       	or	r18, r21
    8f02:	21 f4       	brne	.+8      	; 0x8f0c <__fp_cmp+0x3e>
    8f04:	08 95       	ret
    8f06:	0a 26       	eor	r0, r26
    8f08:	09 f4       	brne	.+2      	; 0x8f0c <__fp_cmp+0x3e>
    8f0a:	a1 40       	sbci	r26, 0x01	; 1
    8f0c:	a6 95       	lsr	r26
    8f0e:	8f ef       	ldi	r24, 0xFF	; 255
    8f10:	81 1d       	adc	r24, r1
    8f12:	81 1d       	adc	r24, r1
    8f14:	08 95       	ret

00008f16 <__fp_inf>:
    8f16:	97 f9       	bld	r25, 7
    8f18:	9f 67       	ori	r25, 0x7F	; 127
    8f1a:	80 e8       	ldi	r24, 0x80	; 128
    8f1c:	70 e0       	ldi	r23, 0x00	; 0
    8f1e:	60 e0       	ldi	r22, 0x00	; 0
    8f20:	08 95       	ret

00008f22 <__fp_mintl>:
    8f22:	88 23       	and	r24, r24
    8f24:	71 f4       	brne	.+28     	; 0x8f42 <__fp_mintl+0x20>
    8f26:	77 23       	and	r23, r23
    8f28:	21 f0       	breq	.+8      	; 0x8f32 <__fp_mintl+0x10>
    8f2a:	98 50       	subi	r25, 0x08	; 8
    8f2c:	87 2b       	or	r24, r23
    8f2e:	76 2f       	mov	r23, r22
    8f30:	07 c0       	rjmp	.+14     	; 0x8f40 <__fp_mintl+0x1e>
    8f32:	66 23       	and	r22, r22
    8f34:	11 f4       	brne	.+4      	; 0x8f3a <__fp_mintl+0x18>
    8f36:	99 27       	eor	r25, r25
    8f38:	0d c0       	rjmp	.+26     	; 0x8f54 <__fp_mintl+0x32>
    8f3a:	90 51       	subi	r25, 0x10	; 16
    8f3c:	86 2b       	or	r24, r22
    8f3e:	70 e0       	ldi	r23, 0x00	; 0
    8f40:	60 e0       	ldi	r22, 0x00	; 0
    8f42:	2a f0       	brmi	.+10     	; 0x8f4e <__fp_mintl+0x2c>
    8f44:	9a 95       	dec	r25
    8f46:	66 0f       	add	r22, r22
    8f48:	77 1f       	adc	r23, r23
    8f4a:	88 1f       	adc	r24, r24
    8f4c:	da f7       	brpl	.-10     	; 0x8f44 <__fp_mintl+0x22>
    8f4e:	88 0f       	add	r24, r24
    8f50:	96 95       	lsr	r25
    8f52:	87 95       	ror	r24
    8f54:	97 f9       	bld	r25, 7
    8f56:	08 95       	ret

00008f58 <__fp_mpack>:
    8f58:	9f 3f       	cpi	r25, 0xFF	; 255
    8f5a:	31 f0       	breq	.+12     	; 0x8f68 <__fp_mpack_finite+0xc>

00008f5c <__fp_mpack_finite>:
    8f5c:	91 50       	subi	r25, 0x01	; 1
    8f5e:	20 f4       	brcc	.+8      	; 0x8f68 <__fp_mpack_finite+0xc>
    8f60:	87 95       	ror	r24
    8f62:	77 95       	ror	r23
    8f64:	67 95       	ror	r22
    8f66:	b7 95       	ror	r27
    8f68:	88 0f       	add	r24, r24
    8f6a:	91 1d       	adc	r25, r1
    8f6c:	96 95       	lsr	r25
    8f6e:	87 95       	ror	r24
    8f70:	97 f9       	bld	r25, 7
    8f72:	08 95       	ret

00008f74 <__fp_nan>:
    8f74:	9f ef       	ldi	r25, 0xFF	; 255
    8f76:	80 ec       	ldi	r24, 0xC0	; 192
    8f78:	08 95       	ret

00008f7a <__fp_pscA>:
    8f7a:	00 24       	eor	r0, r0
    8f7c:	0a 94       	dec	r0
    8f7e:	16 16       	cp	r1, r22
    8f80:	17 06       	cpc	r1, r23
    8f82:	18 06       	cpc	r1, r24
    8f84:	09 06       	cpc	r0, r25
    8f86:	08 95       	ret

00008f88 <__fp_pscB>:
    8f88:	00 24       	eor	r0, r0
    8f8a:	0a 94       	dec	r0
    8f8c:	12 16       	cp	r1, r18
    8f8e:	13 06       	cpc	r1, r19
    8f90:	14 06       	cpc	r1, r20
    8f92:	05 06       	cpc	r0, r21
    8f94:	08 95       	ret
    8f96:	ee cf       	rjmp	.-36     	; 0x8f74 <__fp_nan>

00008f98 <__fp_rempio2>:
    8f98:	50 d0       	rcall	.+160    	; 0x903a <__fp_splitA>
    8f9a:	e8 f3       	brcs	.-6      	; 0x8f96 <__fp_pscB+0xe>
    8f9c:	e8 94       	clt
    8f9e:	e0 e0       	ldi	r30, 0x00	; 0
    8fa0:	bb 27       	eor	r27, r27
    8fa2:	9f 57       	subi	r25, 0x7F	; 127
    8fa4:	f0 f0       	brcs	.+60     	; 0x8fe2 <__fp_rempio2+0x4a>
    8fa6:	2a ed       	ldi	r18, 0xDA	; 218
    8fa8:	3f e0       	ldi	r19, 0x0F	; 15
    8faa:	49 ec       	ldi	r20, 0xC9	; 201
    8fac:	06 c0       	rjmp	.+12     	; 0x8fba <__fp_rempio2+0x22>
    8fae:	ee 0f       	add	r30, r30
    8fb0:	bb 0f       	add	r27, r27
    8fb2:	66 1f       	adc	r22, r22
    8fb4:	77 1f       	adc	r23, r23
    8fb6:	88 1f       	adc	r24, r24
    8fb8:	28 f0       	brcs	.+10     	; 0x8fc4 <__fp_rempio2+0x2c>
    8fba:	b2 3a       	cpi	r27, 0xA2	; 162
    8fbc:	62 07       	cpc	r22, r18
    8fbe:	73 07       	cpc	r23, r19
    8fc0:	84 07       	cpc	r24, r20
    8fc2:	28 f0       	brcs	.+10     	; 0x8fce <__fp_rempio2+0x36>
    8fc4:	b2 5a       	subi	r27, 0xA2	; 162
    8fc6:	62 0b       	sbc	r22, r18
    8fc8:	73 0b       	sbc	r23, r19
    8fca:	84 0b       	sbc	r24, r20
    8fcc:	e3 95       	inc	r30
    8fce:	9a 95       	dec	r25
    8fd0:	72 f7       	brpl	.-36     	; 0x8fae <__fp_rempio2+0x16>
    8fd2:	80 38       	cpi	r24, 0x80	; 128
    8fd4:	30 f4       	brcc	.+12     	; 0x8fe2 <__fp_rempio2+0x4a>
    8fd6:	9a 95       	dec	r25
    8fd8:	bb 0f       	add	r27, r27
    8fda:	66 1f       	adc	r22, r22
    8fdc:	77 1f       	adc	r23, r23
    8fde:	88 1f       	adc	r24, r24
    8fe0:	d2 f7       	brpl	.-12     	; 0x8fd6 <__fp_rempio2+0x3e>
    8fe2:	90 48       	sbci	r25, 0x80	; 128
    8fe4:	bb cf       	rjmp	.-138    	; 0x8f5c <__fp_mpack_finite>

00008fe6 <__fp_round>:
    8fe6:	09 2e       	mov	r0, r25
    8fe8:	03 94       	inc	r0
    8fea:	00 0c       	add	r0, r0
    8fec:	11 f4       	brne	.+4      	; 0x8ff2 <__fp_round+0xc>
    8fee:	88 23       	and	r24, r24
    8ff0:	52 f0       	brmi	.+20     	; 0x9006 <__fp_round+0x20>
    8ff2:	bb 0f       	add	r27, r27
    8ff4:	40 f4       	brcc	.+16     	; 0x9006 <__fp_round+0x20>
    8ff6:	bf 2b       	or	r27, r31
    8ff8:	11 f4       	brne	.+4      	; 0x8ffe <__fp_round+0x18>
    8ffa:	60 ff       	sbrs	r22, 0
    8ffc:	04 c0       	rjmp	.+8      	; 0x9006 <__fp_round+0x20>
    8ffe:	6f 5f       	subi	r22, 0xFF	; 255
    9000:	7f 4f       	sbci	r23, 0xFF	; 255
    9002:	8f 4f       	sbci	r24, 0xFF	; 255
    9004:	9f 4f       	sbci	r25, 0xFF	; 255
    9006:	08 95       	ret

00009008 <__fp_sinus>:
    9008:	ef 93       	push	r30
    900a:	e0 ff       	sbrs	r30, 0
    900c:	06 c0       	rjmp	.+12     	; 0x901a <__fp_sinus+0x12>
    900e:	a2 ea       	ldi	r26, 0xA2	; 162
    9010:	2a ed       	ldi	r18, 0xDA	; 218
    9012:	3f e0       	ldi	r19, 0x0F	; 15
    9014:	49 ec       	ldi	r20, 0xC9	; 201
    9016:	5f eb       	ldi	r21, 0xBF	; 191
    9018:	17 de       	rcall	.-978    	; 0x8c48 <__addsf3x>
    901a:	e5 df       	rcall	.-54     	; 0x8fe6 <__fp_round>
    901c:	0f 90       	pop	r0
    901e:	03 94       	inc	r0
    9020:	01 fc       	sbrc	r0, 1
    9022:	90 58       	subi	r25, 0x80	; 128
    9024:	e4 ee       	ldi	r30, 0xE4	; 228
    9026:	f0 e0       	ldi	r31, 0x00	; 0
    9028:	98 c1       	rjmp	.+816    	; 0x935a <__fp_powsodd>

0000902a <__fp_split3>:
    902a:	57 fd       	sbrc	r21, 7
    902c:	90 58       	subi	r25, 0x80	; 128
    902e:	44 0f       	add	r20, r20
    9030:	55 1f       	adc	r21, r21
    9032:	59 f0       	breq	.+22     	; 0x904a <__fp_splitA+0x10>
    9034:	5f 3f       	cpi	r21, 0xFF	; 255
    9036:	71 f0       	breq	.+28     	; 0x9054 <__fp_splitA+0x1a>
    9038:	47 95       	ror	r20

0000903a <__fp_splitA>:
    903a:	88 0f       	add	r24, r24
    903c:	97 fb       	bst	r25, 7
    903e:	99 1f       	adc	r25, r25
    9040:	61 f0       	breq	.+24     	; 0x905a <__fp_splitA+0x20>
    9042:	9f 3f       	cpi	r25, 0xFF	; 255
    9044:	79 f0       	breq	.+30     	; 0x9064 <__fp_splitA+0x2a>
    9046:	87 95       	ror	r24
    9048:	08 95       	ret
    904a:	12 16       	cp	r1, r18
    904c:	13 06       	cpc	r1, r19
    904e:	14 06       	cpc	r1, r20
    9050:	55 1f       	adc	r21, r21
    9052:	f2 cf       	rjmp	.-28     	; 0x9038 <__fp_split3+0xe>
    9054:	46 95       	lsr	r20
    9056:	f1 df       	rcall	.-30     	; 0x903a <__fp_splitA>
    9058:	08 c0       	rjmp	.+16     	; 0x906a <__fp_splitA+0x30>
    905a:	16 16       	cp	r1, r22
    905c:	17 06       	cpc	r1, r23
    905e:	18 06       	cpc	r1, r24
    9060:	99 1f       	adc	r25, r25
    9062:	f1 cf       	rjmp	.-30     	; 0x9046 <__fp_splitA+0xc>
    9064:	86 95       	lsr	r24
    9066:	71 05       	cpc	r23, r1
    9068:	61 05       	cpc	r22, r1
    906a:	08 94       	sec
    906c:	08 95       	ret

0000906e <__fp_trunc>:
    906e:	e5 df       	rcall	.-54     	; 0x903a <__fp_splitA>
    9070:	a0 f0       	brcs	.+40     	; 0x909a <__fp_trunc+0x2c>
    9072:	be e7       	ldi	r27, 0x7E	; 126
    9074:	b9 17       	cp	r27, r25
    9076:	88 f4       	brcc	.+34     	; 0x909a <__fp_trunc+0x2c>
    9078:	bb 27       	eor	r27, r27
    907a:	9f 38       	cpi	r25, 0x8F	; 143
    907c:	60 f4       	brcc	.+24     	; 0x9096 <__fp_trunc+0x28>
    907e:	16 16       	cp	r1, r22
    9080:	b1 1d       	adc	r27, r1
    9082:	67 2f       	mov	r22, r23
    9084:	78 2f       	mov	r23, r24
    9086:	88 27       	eor	r24, r24
    9088:	98 5f       	subi	r25, 0xF8	; 248
    908a:	f7 cf       	rjmp	.-18     	; 0x907a <__fp_trunc+0xc>
    908c:	86 95       	lsr	r24
    908e:	77 95       	ror	r23
    9090:	67 95       	ror	r22
    9092:	b1 1d       	adc	r27, r1
    9094:	93 95       	inc	r25
    9096:	96 39       	cpi	r25, 0x96	; 150
    9098:	c8 f3       	brcs	.-14     	; 0x908c <__fp_trunc+0x1e>
    909a:	08 95       	ret

0000909c <__fp_zero>:
    909c:	e8 94       	clt

0000909e <__fp_szero>:
    909e:	bb 27       	eor	r27, r27
    90a0:	66 27       	eor	r22, r22
    90a2:	77 27       	eor	r23, r23
    90a4:	cb 01       	movw	r24, r22
    90a6:	97 f9       	bld	r25, 7
    90a8:	08 95       	ret

000090aa <__gesf2>:
    90aa:	11 df       	rcall	.-478    	; 0x8ece <__fp_cmp>
    90ac:	08 f4       	brcc	.+2      	; 0x90b0 <__gesf2+0x6>
    90ae:	8f ef       	ldi	r24, 0xFF	; 255
    90b0:	08 95       	ret

000090b2 <__mulsf3>:
    90b2:	0b d0       	rcall	.+22     	; 0x90ca <__mulsf3x>
    90b4:	98 cf       	rjmp	.-208    	; 0x8fe6 <__fp_round>
    90b6:	61 df       	rcall	.-318    	; 0x8f7a <__fp_pscA>
    90b8:	28 f0       	brcs	.+10     	; 0x90c4 <__mulsf3+0x12>
    90ba:	66 df       	rcall	.-308    	; 0x8f88 <__fp_pscB>
    90bc:	18 f0       	brcs	.+6      	; 0x90c4 <__mulsf3+0x12>
    90be:	95 23       	and	r25, r21
    90c0:	09 f0       	breq	.+2      	; 0x90c4 <__mulsf3+0x12>
    90c2:	29 cf       	rjmp	.-430    	; 0x8f16 <__fp_inf>
    90c4:	57 cf       	rjmp	.-338    	; 0x8f74 <__fp_nan>
    90c6:	11 24       	eor	r1, r1
    90c8:	ea cf       	rjmp	.-44     	; 0x909e <__fp_szero>

000090ca <__mulsf3x>:
    90ca:	af df       	rcall	.-162    	; 0x902a <__fp_split3>
    90cc:	a0 f3       	brcs	.-24     	; 0x90b6 <__mulsf3+0x4>

000090ce <__mulsf3_pse>:
    90ce:	95 9f       	mul	r25, r21
    90d0:	d1 f3       	breq	.-12     	; 0x90c6 <__mulsf3+0x14>
    90d2:	95 0f       	add	r25, r21
    90d4:	50 e0       	ldi	r21, 0x00	; 0
    90d6:	55 1f       	adc	r21, r21
    90d8:	62 9f       	mul	r22, r18
    90da:	f0 01       	movw	r30, r0
    90dc:	72 9f       	mul	r23, r18
    90de:	bb 27       	eor	r27, r27
    90e0:	f0 0d       	add	r31, r0
    90e2:	b1 1d       	adc	r27, r1
    90e4:	63 9f       	mul	r22, r19
    90e6:	aa 27       	eor	r26, r26
    90e8:	f0 0d       	add	r31, r0
    90ea:	b1 1d       	adc	r27, r1
    90ec:	aa 1f       	adc	r26, r26
    90ee:	64 9f       	mul	r22, r20
    90f0:	66 27       	eor	r22, r22
    90f2:	b0 0d       	add	r27, r0
    90f4:	a1 1d       	adc	r26, r1
    90f6:	66 1f       	adc	r22, r22
    90f8:	82 9f       	mul	r24, r18
    90fa:	22 27       	eor	r18, r18
    90fc:	b0 0d       	add	r27, r0
    90fe:	a1 1d       	adc	r26, r1
    9100:	62 1f       	adc	r22, r18
    9102:	73 9f       	mul	r23, r19
    9104:	b0 0d       	add	r27, r0
    9106:	a1 1d       	adc	r26, r1
    9108:	62 1f       	adc	r22, r18
    910a:	83 9f       	mul	r24, r19
    910c:	a0 0d       	add	r26, r0
    910e:	61 1d       	adc	r22, r1
    9110:	22 1f       	adc	r18, r18
    9112:	74 9f       	mul	r23, r20
    9114:	33 27       	eor	r19, r19
    9116:	a0 0d       	add	r26, r0
    9118:	61 1d       	adc	r22, r1
    911a:	23 1f       	adc	r18, r19
    911c:	84 9f       	mul	r24, r20
    911e:	60 0d       	add	r22, r0
    9120:	21 1d       	adc	r18, r1
    9122:	82 2f       	mov	r24, r18
    9124:	76 2f       	mov	r23, r22
    9126:	6a 2f       	mov	r22, r26
    9128:	11 24       	eor	r1, r1
    912a:	9f 57       	subi	r25, 0x7F	; 127
    912c:	50 40       	sbci	r21, 0x00	; 0
    912e:	8a f0       	brmi	.+34     	; 0x9152 <__mulsf3_pse+0x84>
    9130:	e1 f0       	breq	.+56     	; 0x916a <__mulsf3_pse+0x9c>
    9132:	88 23       	and	r24, r24
    9134:	4a f0       	brmi	.+18     	; 0x9148 <__mulsf3_pse+0x7a>
    9136:	ee 0f       	add	r30, r30
    9138:	ff 1f       	adc	r31, r31
    913a:	bb 1f       	adc	r27, r27
    913c:	66 1f       	adc	r22, r22
    913e:	77 1f       	adc	r23, r23
    9140:	88 1f       	adc	r24, r24
    9142:	91 50       	subi	r25, 0x01	; 1
    9144:	50 40       	sbci	r21, 0x00	; 0
    9146:	a9 f7       	brne	.-22     	; 0x9132 <__mulsf3_pse+0x64>
    9148:	9e 3f       	cpi	r25, 0xFE	; 254
    914a:	51 05       	cpc	r21, r1
    914c:	70 f0       	brcs	.+28     	; 0x916a <__mulsf3_pse+0x9c>
    914e:	e3 ce       	rjmp	.-570    	; 0x8f16 <__fp_inf>
    9150:	a6 cf       	rjmp	.-180    	; 0x909e <__fp_szero>
    9152:	5f 3f       	cpi	r21, 0xFF	; 255
    9154:	ec f3       	brlt	.-6      	; 0x9150 <__mulsf3_pse+0x82>
    9156:	98 3e       	cpi	r25, 0xE8	; 232
    9158:	dc f3       	brlt	.-10     	; 0x9150 <__mulsf3_pse+0x82>
    915a:	86 95       	lsr	r24
    915c:	77 95       	ror	r23
    915e:	67 95       	ror	r22
    9160:	b7 95       	ror	r27
    9162:	f7 95       	ror	r31
    9164:	e7 95       	ror	r30
    9166:	9f 5f       	subi	r25, 0xFF	; 255
    9168:	c1 f7       	brne	.-16     	; 0x915a <__mulsf3_pse+0x8c>
    916a:	fe 2b       	or	r31, r30
    916c:	88 0f       	add	r24, r24
    916e:	91 1d       	adc	r25, r1
    9170:	96 95       	lsr	r25
    9172:	87 95       	ror	r24
    9174:	97 f9       	bld	r25, 7
    9176:	08 95       	ret

00009178 <pow>:
    9178:	fa 01       	movw	r30, r20
    917a:	ee 0f       	add	r30, r30
    917c:	ff 1f       	adc	r31, r31
    917e:	30 96       	adiw	r30, 0x00	; 0
    9180:	21 05       	cpc	r18, r1
    9182:	31 05       	cpc	r19, r1
    9184:	99 f1       	breq	.+102    	; 0x91ec <pow+0x74>
    9186:	61 15       	cp	r22, r1
    9188:	71 05       	cpc	r23, r1
    918a:	61 f4       	brne	.+24     	; 0x91a4 <pow+0x2c>
    918c:	80 38       	cpi	r24, 0x80	; 128
    918e:	bf e3       	ldi	r27, 0x3F	; 63
    9190:	9b 07       	cpc	r25, r27
    9192:	49 f1       	breq	.+82     	; 0x91e6 <pow+0x6e>
    9194:	68 94       	set
    9196:	90 38       	cpi	r25, 0x80	; 128
    9198:	81 05       	cpc	r24, r1
    919a:	61 f0       	breq	.+24     	; 0x91b4 <pow+0x3c>
    919c:	80 38       	cpi	r24, 0x80	; 128
    919e:	bf ef       	ldi	r27, 0xFF	; 255
    91a0:	9b 07       	cpc	r25, r27
    91a2:	41 f0       	breq	.+16     	; 0x91b4 <pow+0x3c>
    91a4:	99 23       	and	r25, r25
    91a6:	42 f5       	brpl	.+80     	; 0x91f8 <pow+0x80>
    91a8:	ff 3f       	cpi	r31, 0xFF	; 255
    91aa:	e1 05       	cpc	r30, r1
    91ac:	31 05       	cpc	r19, r1
    91ae:	21 05       	cpc	r18, r1
    91b0:	11 f1       	breq	.+68     	; 0x91f6 <pow+0x7e>
    91b2:	e8 94       	clt
    91b4:	08 94       	sec
    91b6:	e7 95       	ror	r30
    91b8:	d9 01       	movw	r26, r18
    91ba:	aa 23       	and	r26, r26
    91bc:	29 f4       	brne	.+10     	; 0x91c8 <pow+0x50>
    91be:	ab 2f       	mov	r26, r27
    91c0:	be 2f       	mov	r27, r30
    91c2:	f8 5f       	subi	r31, 0xF8	; 248
    91c4:	d0 f3       	brcs	.-12     	; 0x91ba <pow+0x42>
    91c6:	10 c0       	rjmp	.+32     	; 0x91e8 <pow+0x70>
    91c8:	ff 5f       	subi	r31, 0xFF	; 255
    91ca:	70 f4       	brcc	.+28     	; 0x91e8 <pow+0x70>
    91cc:	a6 95       	lsr	r26
    91ce:	e0 f7       	brcc	.-8      	; 0x91c8 <pow+0x50>
    91d0:	f7 39       	cpi	r31, 0x97	; 151
    91d2:	50 f0       	brcs	.+20     	; 0x91e8 <pow+0x70>
    91d4:	19 f0       	breq	.+6      	; 0x91dc <pow+0x64>
    91d6:	ff 3a       	cpi	r31, 0xAF	; 175
    91d8:	38 f4       	brcc	.+14     	; 0x91e8 <pow+0x70>
    91da:	9f 77       	andi	r25, 0x7F	; 127
    91dc:	9f 93       	push	r25
    91de:	0c d0       	rcall	.+24     	; 0x91f8 <pow+0x80>
    91e0:	0f 90       	pop	r0
    91e2:	07 fc       	sbrc	r0, 7
    91e4:	90 58       	subi	r25, 0x80	; 128
    91e6:	08 95       	ret
    91e8:	3e f0       	brts	.+14     	; 0x91f8 <pow+0x80>
    91ea:	c4 ce       	rjmp	.-632    	; 0x8f74 <__fp_nan>
    91ec:	60 e0       	ldi	r22, 0x00	; 0
    91ee:	70 e0       	ldi	r23, 0x00	; 0
    91f0:	80 e8       	ldi	r24, 0x80	; 128
    91f2:	9f e3       	ldi	r25, 0x3F	; 63
    91f4:	08 95       	ret
    91f6:	4f e7       	ldi	r20, 0x7F	; 127
    91f8:	9f 77       	andi	r25, 0x7F	; 127
    91fa:	5f 93       	push	r21
    91fc:	4f 93       	push	r20
    91fe:	3f 93       	push	r19
    9200:	2f 93       	push	r18
    9202:	fe d0       	rcall	.+508    	; 0x9400 <log>
    9204:	2f 91       	pop	r18
    9206:	3f 91       	pop	r19
    9208:	4f 91       	pop	r20
    920a:	5f 91       	pop	r21
    920c:	52 df       	rcall	.-348    	; 0x90b2 <__mulsf3>
    920e:	4d c0       	rjmp	.+154    	; 0x92aa <exp>

00009210 <sin>:
    9210:	9f 93       	push	r25
    9212:	c2 de       	rcall	.-636    	; 0x8f98 <__fp_rempio2>
    9214:	0f 90       	pop	r0
    9216:	07 fc       	sbrc	r0, 7
    9218:	ee 5f       	subi	r30, 0xFE	; 254
    921a:	f6 ce       	rjmp	.-532    	; 0x9008 <__fp_sinus>
    921c:	11 f4       	brne	.+4      	; 0x9222 <sin+0x12>
    921e:	0e f4       	brtc	.+2      	; 0x9222 <sin+0x12>
    9220:	a9 ce       	rjmp	.-686    	; 0x8f74 <__fp_nan>
    9222:	9a ce       	rjmp	.-716    	; 0x8f58 <__fp_mpack>

00009224 <sqrt>:
    9224:	0a df       	rcall	.-492    	; 0x903a <__fp_splitA>
    9226:	d0 f3       	brcs	.-12     	; 0x921c <sin+0xc>
    9228:	99 23       	and	r25, r25
    922a:	d9 f3       	breq	.-10     	; 0x9222 <sin+0x12>
    922c:	ce f3       	brts	.-14     	; 0x9220 <sin+0x10>
    922e:	9f 57       	subi	r25, 0x7F	; 127
    9230:	55 0b       	sbc	r21, r21
    9232:	87 ff       	sbrs	r24, 7
    9234:	66 d0       	rcall	.+204    	; 0x9302 <__fp_norm2>
    9236:	00 24       	eor	r0, r0
    9238:	a0 e6       	ldi	r26, 0x60	; 96
    923a:	40 ea       	ldi	r20, 0xA0	; 160
    923c:	90 01       	movw	r18, r0
    923e:	80 58       	subi	r24, 0x80	; 128
    9240:	56 95       	lsr	r21
    9242:	97 95       	ror	r25
    9244:	28 f4       	brcc	.+10     	; 0x9250 <sqrt+0x2c>
    9246:	80 5c       	subi	r24, 0xC0	; 192
    9248:	66 0f       	add	r22, r22
    924a:	77 1f       	adc	r23, r23
    924c:	88 1f       	adc	r24, r24
    924e:	20 f0       	brcs	.+8      	; 0x9258 <sqrt+0x34>
    9250:	26 17       	cp	r18, r22
    9252:	37 07       	cpc	r19, r23
    9254:	48 07       	cpc	r20, r24
    9256:	30 f4       	brcc	.+12     	; 0x9264 <sqrt+0x40>
    9258:	62 1b       	sub	r22, r18
    925a:	73 0b       	sbc	r23, r19
    925c:	84 0b       	sbc	r24, r20
    925e:	20 29       	or	r18, r0
    9260:	31 29       	or	r19, r1
    9262:	4a 2b       	or	r20, r26
    9264:	a6 95       	lsr	r26
    9266:	17 94       	ror	r1
    9268:	07 94       	ror	r0
    926a:	20 25       	eor	r18, r0
    926c:	31 25       	eor	r19, r1
    926e:	4a 27       	eor	r20, r26
    9270:	58 f7       	brcc	.-42     	; 0x9248 <sqrt+0x24>
    9272:	66 0f       	add	r22, r22
    9274:	77 1f       	adc	r23, r23
    9276:	88 1f       	adc	r24, r24
    9278:	20 f0       	brcs	.+8      	; 0x9282 <sqrt+0x5e>
    927a:	26 17       	cp	r18, r22
    927c:	37 07       	cpc	r19, r23
    927e:	48 07       	cpc	r20, r24
    9280:	30 f4       	brcc	.+12     	; 0x928e <sqrt+0x6a>
    9282:	62 0b       	sbc	r22, r18
    9284:	73 0b       	sbc	r23, r19
    9286:	84 0b       	sbc	r24, r20
    9288:	20 0d       	add	r18, r0
    928a:	31 1d       	adc	r19, r1
    928c:	41 1d       	adc	r20, r1
    928e:	a0 95       	com	r26
    9290:	81 f7       	brne	.-32     	; 0x9272 <sqrt+0x4e>
    9292:	b9 01       	movw	r22, r18
    9294:	84 2f       	mov	r24, r20
    9296:	91 58       	subi	r25, 0x81	; 129
    9298:	88 0f       	add	r24, r24
    929a:	96 95       	lsr	r25
    929c:	87 95       	ror	r24
    929e:	08 95       	ret
    92a0:	19 f4       	brne	.+6      	; 0x92a8 <sqrt+0x84>
    92a2:	0e f0       	brts	.+2      	; 0x92a6 <sqrt+0x82>
    92a4:	38 ce       	rjmp	.-912    	; 0x8f16 <__fp_inf>
    92a6:	fa ce       	rjmp	.-524    	; 0x909c <__fp_zero>
    92a8:	65 ce       	rjmp	.-822    	; 0x8f74 <__fp_nan>

000092aa <exp>:
    92aa:	c7 de       	rcall	.-626    	; 0x903a <__fp_splitA>
    92ac:	c8 f3       	brcs	.-14     	; 0x92a0 <sqrt+0x7c>
    92ae:	96 38       	cpi	r25, 0x86	; 134
    92b0:	c0 f7       	brcc	.-16     	; 0x92a2 <sqrt+0x7e>
    92b2:	07 f8       	bld	r0, 7
    92b4:	0f 92       	push	r0
    92b6:	e8 94       	clt
    92b8:	2b e3       	ldi	r18, 0x3B	; 59
    92ba:	3a ea       	ldi	r19, 0xAA	; 170
    92bc:	48 eb       	ldi	r20, 0xB8	; 184
    92be:	5f e7       	ldi	r21, 0x7F	; 127
    92c0:	06 df       	rcall	.-500    	; 0x90ce <__mulsf3_pse>
    92c2:	0f 92       	push	r0
    92c4:	0f 92       	push	r0
    92c6:	0f 92       	push	r0
    92c8:	4d b7       	in	r20, 0x3d	; 61
    92ca:	5e b7       	in	r21, 0x3e	; 62
    92cc:	0f 92       	push	r0
    92ce:	d8 d0       	rcall	.+432    	; 0x9480 <modf>
    92d0:	e2 e0       	ldi	r30, 0x02	; 2
    92d2:	f1 e0       	ldi	r31, 0x01	; 1
    92d4:	1d d0       	rcall	.+58     	; 0x9310 <__fp_powser>
    92d6:	4f 91       	pop	r20
    92d8:	5f 91       	pop	r21
    92da:	ef 91       	pop	r30
    92dc:	ff 91       	pop	r31
    92de:	e5 95       	asr	r30
    92e0:	ee 1f       	adc	r30, r30
    92e2:	ff 1f       	adc	r31, r31
    92e4:	49 f0       	breq	.+18     	; 0x92f8 <exp+0x4e>
    92e6:	fe 57       	subi	r31, 0x7E	; 126
    92e8:	e0 68       	ori	r30, 0x80	; 128
    92ea:	44 27       	eor	r20, r20
    92ec:	ee 0f       	add	r30, r30
    92ee:	44 1f       	adc	r20, r20
    92f0:	fa 95       	dec	r31
    92f2:	e1 f7       	brne	.-8      	; 0x92ec <exp+0x42>
    92f4:	41 95       	neg	r20
    92f6:	55 0b       	sbc	r21, r21
    92f8:	4a d0       	rcall	.+148    	; 0x938e <ldexp>
    92fa:	0f 90       	pop	r0
    92fc:	07 fe       	sbrs	r0, 7
    92fe:	3e c0       	rjmp	.+124    	; 0x937c <inverse>
    9300:	08 95       	ret

00009302 <__fp_norm2>:
    9302:	91 50       	subi	r25, 0x01	; 1
    9304:	50 40       	sbci	r21, 0x00	; 0
    9306:	66 0f       	add	r22, r22
    9308:	77 1f       	adc	r23, r23
    930a:	88 1f       	adc	r24, r24
    930c:	d2 f7       	brpl	.-12     	; 0x9302 <__fp_norm2>
    930e:	08 95       	ret

00009310 <__fp_powser>:
    9310:	df 93       	push	r29
    9312:	cf 93       	push	r28
    9314:	1f 93       	push	r17
    9316:	0f 93       	push	r16
    9318:	ff 92       	push	r15
    931a:	ef 92       	push	r14
    931c:	df 92       	push	r13
    931e:	7b 01       	movw	r14, r22
    9320:	8c 01       	movw	r16, r24
    9322:	68 94       	set
    9324:	05 c0       	rjmp	.+10     	; 0x9330 <__fp_powser+0x20>
    9326:	da 2e       	mov	r13, r26
    9328:	ef 01       	movw	r28, r30
    932a:	cf de       	rcall	.-610    	; 0x90ca <__mulsf3x>
    932c:	fe 01       	movw	r30, r28
    932e:	e8 94       	clt
    9330:	a5 91       	lpm	r26, Z+
    9332:	25 91       	lpm	r18, Z+
    9334:	35 91       	lpm	r19, Z+
    9336:	45 91       	lpm	r20, Z+
    9338:	55 91       	lpm	r21, Z+
    933a:	ae f3       	brts	.-22     	; 0x9326 <__fp_powser+0x16>
    933c:	ef 01       	movw	r28, r30
    933e:	84 dc       	rcall	.-1784   	; 0x8c48 <__addsf3x>
    9340:	fe 01       	movw	r30, r28
    9342:	97 01       	movw	r18, r14
    9344:	a8 01       	movw	r20, r16
    9346:	da 94       	dec	r13
    9348:	79 f7       	brne	.-34     	; 0x9328 <__fp_powser+0x18>
    934a:	df 90       	pop	r13
    934c:	ef 90       	pop	r14
    934e:	ff 90       	pop	r15
    9350:	0f 91       	pop	r16
    9352:	1f 91       	pop	r17
    9354:	cf 91       	pop	r28
    9356:	df 91       	pop	r29
    9358:	08 95       	ret

0000935a <__fp_powsodd>:
    935a:	9f 93       	push	r25
    935c:	8f 93       	push	r24
    935e:	7f 93       	push	r23
    9360:	6f 93       	push	r22
    9362:	ff 93       	push	r31
    9364:	ef 93       	push	r30
    9366:	9b 01       	movw	r18, r22
    9368:	ac 01       	movw	r20, r24
    936a:	a3 de       	rcall	.-698    	; 0x90b2 <__mulsf3>
    936c:	ef 91       	pop	r30
    936e:	ff 91       	pop	r31
    9370:	cf df       	rcall	.-98     	; 0x9310 <__fp_powser>
    9372:	2f 91       	pop	r18
    9374:	3f 91       	pop	r19
    9376:	4f 91       	pop	r20
    9378:	5f 91       	pop	r21
    937a:	9b ce       	rjmp	.-714    	; 0x90b2 <__mulsf3>

0000937c <inverse>:
    937c:	9b 01       	movw	r18, r22
    937e:	ac 01       	movw	r20, r24
    9380:	60 e0       	ldi	r22, 0x00	; 0
    9382:	70 e0       	ldi	r23, 0x00	; 0
    9384:	80 e8       	ldi	r24, 0x80	; 128
    9386:	9f e3       	ldi	r25, 0x3F	; 63
    9388:	b9 cc       	rjmp	.-1678   	; 0x8cfc <__divsf3>
    938a:	c5 cd       	rjmp	.-1142   	; 0x8f16 <__fp_inf>
    938c:	e5 cd       	rjmp	.-1078   	; 0x8f58 <__fp_mpack>

0000938e <ldexp>:
    938e:	55 de       	rcall	.-854    	; 0x903a <__fp_splitA>
    9390:	e8 f3       	brcs	.-6      	; 0x938c <inverse+0x10>
    9392:	99 23       	and	r25, r25
    9394:	d9 f3       	breq	.-10     	; 0x938c <inverse+0x10>
    9396:	94 0f       	add	r25, r20
    9398:	51 1d       	adc	r21, r1
    939a:	bb f3       	brvs	.-18     	; 0x938a <inverse+0xe>
    939c:	91 50       	subi	r25, 0x01	; 1
    939e:	50 40       	sbci	r21, 0x00	; 0
    93a0:	94 f0       	brlt	.+36     	; 0x93c6 <ldexp+0x38>
    93a2:	59 f0       	breq	.+22     	; 0x93ba <ldexp+0x2c>
    93a4:	88 23       	and	r24, r24
    93a6:	32 f0       	brmi	.+12     	; 0x93b4 <ldexp+0x26>
    93a8:	66 0f       	add	r22, r22
    93aa:	77 1f       	adc	r23, r23
    93ac:	88 1f       	adc	r24, r24
    93ae:	91 50       	subi	r25, 0x01	; 1
    93b0:	50 40       	sbci	r21, 0x00	; 0
    93b2:	c1 f7       	brne	.-16     	; 0x93a4 <ldexp+0x16>
    93b4:	9e 3f       	cpi	r25, 0xFE	; 254
    93b6:	51 05       	cpc	r21, r1
    93b8:	44 f7       	brge	.-48     	; 0x938a <inverse+0xe>
    93ba:	88 0f       	add	r24, r24
    93bc:	91 1d       	adc	r25, r1
    93be:	96 95       	lsr	r25
    93c0:	87 95       	ror	r24
    93c2:	97 f9       	bld	r25, 7
    93c4:	08 95       	ret
    93c6:	5f 3f       	cpi	r21, 0xFF	; 255
    93c8:	ac f0       	brlt	.+42     	; 0x93f4 <ldexp+0x66>
    93ca:	98 3e       	cpi	r25, 0xE8	; 232
    93cc:	9c f0       	brlt	.+38     	; 0x93f4 <ldexp+0x66>
    93ce:	bb 27       	eor	r27, r27
    93d0:	86 95       	lsr	r24
    93d2:	77 95       	ror	r23
    93d4:	67 95       	ror	r22
    93d6:	b7 95       	ror	r27
    93d8:	08 f4       	brcc	.+2      	; 0x93dc <ldexp+0x4e>
    93da:	b1 60       	ori	r27, 0x01	; 1
    93dc:	93 95       	inc	r25
    93de:	c1 f7       	brne	.-16     	; 0x93d0 <ldexp+0x42>
    93e0:	bb 0f       	add	r27, r27
    93e2:	58 f7       	brcc	.-42     	; 0x93ba <ldexp+0x2c>
    93e4:	11 f4       	brne	.+4      	; 0x93ea <ldexp+0x5c>
    93e6:	60 ff       	sbrs	r22, 0
    93e8:	e8 cf       	rjmp	.-48     	; 0x93ba <ldexp+0x2c>
    93ea:	6f 5f       	subi	r22, 0xFF	; 255
    93ec:	7f 4f       	sbci	r23, 0xFF	; 255
    93ee:	8f 4f       	sbci	r24, 0xFF	; 255
    93f0:	9f 4f       	sbci	r25, 0xFF	; 255
    93f2:	e3 cf       	rjmp	.-58     	; 0x93ba <ldexp+0x2c>
    93f4:	54 ce       	rjmp	.-856    	; 0x909e <__fp_szero>
    93f6:	0e f0       	brts	.+2      	; 0x93fa <ldexp+0x6c>
    93f8:	af cd       	rjmp	.-1186   	; 0x8f58 <__fp_mpack>
    93fa:	bc cd       	rjmp	.-1160   	; 0x8f74 <__fp_nan>
    93fc:	68 94       	set
    93fe:	8b cd       	rjmp	.-1258   	; 0x8f16 <__fp_inf>

00009400 <log>:
    9400:	1c de       	rcall	.-968    	; 0x903a <__fp_splitA>
    9402:	c8 f3       	brcs	.-14     	; 0x93f6 <ldexp+0x68>
    9404:	99 23       	and	r25, r25
    9406:	d1 f3       	breq	.-12     	; 0x93fc <ldexp+0x6e>
    9408:	c6 f3       	brts	.-16     	; 0x93fa <ldexp+0x6c>
    940a:	df 93       	push	r29
    940c:	cf 93       	push	r28
    940e:	1f 93       	push	r17
    9410:	0f 93       	push	r16
    9412:	ff 92       	push	r15
    9414:	c9 2f       	mov	r28, r25
    9416:	dd 27       	eor	r29, r29
    9418:	88 23       	and	r24, r24
    941a:	2a f0       	brmi	.+10     	; 0x9426 <log+0x26>
    941c:	21 97       	sbiw	r28, 0x01	; 1
    941e:	66 0f       	add	r22, r22
    9420:	77 1f       	adc	r23, r23
    9422:	88 1f       	adc	r24, r24
    9424:	da f7       	brpl	.-10     	; 0x941c <log+0x1c>
    9426:	20 e0       	ldi	r18, 0x00	; 0
    9428:	30 e0       	ldi	r19, 0x00	; 0
    942a:	40 e8       	ldi	r20, 0x80	; 128
    942c:	5f eb       	ldi	r21, 0xBF	; 191
    942e:	9f e3       	ldi	r25, 0x3F	; 63
    9430:	88 39       	cpi	r24, 0x98	; 152
    9432:	20 f0       	brcs	.+8      	; 0x943c <log+0x3c>
    9434:	80 3e       	cpi	r24, 0xE0	; 224
    9436:	30 f0       	brcs	.+12     	; 0x9444 <log+0x44>
    9438:	21 96       	adiw	r28, 0x01	; 1
    943a:	8f 77       	andi	r24, 0x7F	; 127
    943c:	f4 db       	rcall	.-2072   	; 0x8c26 <__addsf3>
    943e:	ea e2       	ldi	r30, 0x2A	; 42
    9440:	f1 e0       	ldi	r31, 0x01	; 1
    9442:	03 c0       	rjmp	.+6      	; 0x944a <log+0x4a>
    9444:	f0 db       	rcall	.-2080   	; 0x8c26 <__addsf3>
    9446:	e7 e5       	ldi	r30, 0x57	; 87
    9448:	f1 e0       	ldi	r31, 0x01	; 1
    944a:	62 df       	rcall	.-316    	; 0x9310 <__fp_powser>
    944c:	8b 01       	movw	r16, r22
    944e:	be 01       	movw	r22, r28
    9450:	ec 01       	movw	r28, r24
    9452:	fb 2e       	mov	r15, r27
    9454:	6f 57       	subi	r22, 0x7F	; 127
    9456:	71 09       	sbc	r23, r1
    9458:	75 95       	asr	r23
    945a:	77 1f       	adc	r23, r23
    945c:	88 0b       	sbc	r24, r24
    945e:	99 0b       	sbc	r25, r25
    9460:	e8 dc       	rcall	.-1584   	; 0x8e32 <__floatsisf>
    9462:	28 e1       	ldi	r18, 0x18	; 24
    9464:	32 e7       	ldi	r19, 0x72	; 114
    9466:	41 e3       	ldi	r20, 0x31	; 49
    9468:	5f e3       	ldi	r21, 0x3F	; 63
    946a:	2f de       	rcall	.-930    	; 0x90ca <__mulsf3x>
    946c:	af 2d       	mov	r26, r15
    946e:	98 01       	movw	r18, r16
    9470:	ae 01       	movw	r20, r28
    9472:	ff 90       	pop	r15
    9474:	0f 91       	pop	r16
    9476:	1f 91       	pop	r17
    9478:	cf 91       	pop	r28
    947a:	df 91       	pop	r29
    947c:	e5 db       	rcall	.-2102   	; 0x8c48 <__addsf3x>
    947e:	b3 cd       	rjmp	.-1178   	; 0x8fe6 <__fp_round>

00009480 <modf>:
    9480:	fa 01       	movw	r30, r20
    9482:	dc 01       	movw	r26, r24
    9484:	aa 0f       	add	r26, r26
    9486:	bb 1f       	adc	r27, r27
    9488:	9b 01       	movw	r18, r22
    948a:	ac 01       	movw	r20, r24
    948c:	bf 57       	subi	r27, 0x7F	; 127
    948e:	28 f4       	brcc	.+10     	; 0x949a <modf+0x1a>
    9490:	22 27       	eor	r18, r18
    9492:	33 27       	eor	r19, r19
    9494:	44 27       	eor	r20, r20
    9496:	50 78       	andi	r21, 0x80	; 128
    9498:	1f c0       	rjmp	.+62     	; 0x94d8 <modf+0x58>
    949a:	b7 51       	subi	r27, 0x17	; 23
    949c:	88 f4       	brcc	.+34     	; 0x94c0 <modf+0x40>
    949e:	ab 2f       	mov	r26, r27
    94a0:	00 24       	eor	r0, r0
    94a2:	46 95       	lsr	r20
    94a4:	37 95       	ror	r19
    94a6:	27 95       	ror	r18
    94a8:	01 1c       	adc	r0, r1
    94aa:	a3 95       	inc	r26
    94ac:	d2 f3       	brmi	.-12     	; 0x94a2 <modf+0x22>
    94ae:	00 20       	and	r0, r0
    94b0:	69 f0       	breq	.+26     	; 0x94cc <modf+0x4c>
    94b2:	22 0f       	add	r18, r18
    94b4:	33 1f       	adc	r19, r19
    94b6:	44 1f       	adc	r20, r20
    94b8:	b3 95       	inc	r27
    94ba:	da f3       	brmi	.-10     	; 0x94b2 <modf+0x32>
    94bc:	0d d0       	rcall	.+26     	; 0x94d8 <modf+0x58>
    94be:	b2 cb       	rjmp	.-2204   	; 0x8c24 <__subsf3>
    94c0:	61 30       	cpi	r22, 0x01	; 1
    94c2:	71 05       	cpc	r23, r1
    94c4:	a0 e8       	ldi	r26, 0x80	; 128
    94c6:	8a 07       	cpc	r24, r26
    94c8:	b9 46       	sbci	r27, 0x69	; 105
    94ca:	30 f4       	brcc	.+12     	; 0x94d8 <modf+0x58>
    94cc:	9b 01       	movw	r18, r22
    94ce:	ac 01       	movw	r20, r24
    94d0:	66 27       	eor	r22, r22
    94d2:	77 27       	eor	r23, r23
    94d4:	88 27       	eor	r24, r24
    94d6:	90 78       	andi	r25, 0x80	; 128
    94d8:	30 96       	adiw	r30, 0x00	; 0
    94da:	21 f0       	breq	.+8      	; 0x94e4 <modf+0x64>
    94dc:	20 83       	st	Z, r18
    94de:	31 83       	std	Z+1, r19	; 0x01
    94e0:	42 83       	std	Z+2, r20	; 0x02
    94e2:	53 83       	std	Z+3, r21	; 0x03
    94e4:	08 95       	ret

000094e6 <__divmodhi4>:
    94e6:	97 fb       	bst	r25, 7
    94e8:	07 2e       	mov	r0, r23
    94ea:	16 f4       	brtc	.+4      	; 0x94f0 <__divmodhi4+0xa>
    94ec:	00 94       	com	r0
    94ee:	07 d0       	rcall	.+14     	; 0x94fe <__divmodhi4_neg1>
    94f0:	77 fd       	sbrc	r23, 7
    94f2:	09 d0       	rcall	.+18     	; 0x9506 <__divmodhi4_neg2>
    94f4:	0e 94 a9 4a 	call	0x9552	; 0x9552 <__udivmodhi4>
    94f8:	07 fc       	sbrc	r0, 7
    94fa:	05 d0       	rcall	.+10     	; 0x9506 <__divmodhi4_neg2>
    94fc:	3e f4       	brtc	.+14     	; 0x950c <__divmodhi4_exit>

000094fe <__divmodhi4_neg1>:
    94fe:	90 95       	com	r25
    9500:	81 95       	neg	r24
    9502:	9f 4f       	sbci	r25, 0xFF	; 255
    9504:	08 95       	ret

00009506 <__divmodhi4_neg2>:
    9506:	70 95       	com	r23
    9508:	61 95       	neg	r22
    950a:	7f 4f       	sbci	r23, 0xFF	; 255

0000950c <__divmodhi4_exit>:
    950c:	08 95       	ret

0000950e <__udivmodsi4>:
    950e:	a1 e2       	ldi	r26, 0x21	; 33
    9510:	1a 2e       	mov	r1, r26
    9512:	aa 1b       	sub	r26, r26
    9514:	bb 1b       	sub	r27, r27
    9516:	fd 01       	movw	r30, r26
    9518:	0d c0       	rjmp	.+26     	; 0x9534 <__udivmodsi4_ep>

0000951a <__udivmodsi4_loop>:
    951a:	aa 1f       	adc	r26, r26
    951c:	bb 1f       	adc	r27, r27
    951e:	ee 1f       	adc	r30, r30
    9520:	ff 1f       	adc	r31, r31
    9522:	a2 17       	cp	r26, r18
    9524:	b3 07       	cpc	r27, r19
    9526:	e4 07       	cpc	r30, r20
    9528:	f5 07       	cpc	r31, r21
    952a:	20 f0       	brcs	.+8      	; 0x9534 <__udivmodsi4_ep>
    952c:	a2 1b       	sub	r26, r18
    952e:	b3 0b       	sbc	r27, r19
    9530:	e4 0b       	sbc	r30, r20
    9532:	f5 0b       	sbc	r31, r21

00009534 <__udivmodsi4_ep>:
    9534:	66 1f       	adc	r22, r22
    9536:	77 1f       	adc	r23, r23
    9538:	88 1f       	adc	r24, r24
    953a:	99 1f       	adc	r25, r25
    953c:	1a 94       	dec	r1
    953e:	69 f7       	brne	.-38     	; 0x951a <__udivmodsi4_loop>
    9540:	60 95       	com	r22
    9542:	70 95       	com	r23
    9544:	80 95       	com	r24
    9546:	90 95       	com	r25
    9548:	9b 01       	movw	r18, r22
    954a:	ac 01       	movw	r20, r24
    954c:	bd 01       	movw	r22, r26
    954e:	cf 01       	movw	r24, r30
    9550:	08 95       	ret

00009552 <__udivmodhi4>:
    9552:	aa 1b       	sub	r26, r26
    9554:	bb 1b       	sub	r27, r27
    9556:	51 e1       	ldi	r21, 0x11	; 17
    9558:	07 c0       	rjmp	.+14     	; 0x9568 <__udivmodhi4_ep>

0000955a <__udivmodhi4_loop>:
    955a:	aa 1f       	adc	r26, r26
    955c:	bb 1f       	adc	r27, r27
    955e:	a6 17       	cp	r26, r22
    9560:	b7 07       	cpc	r27, r23
    9562:	10 f0       	brcs	.+4      	; 0x9568 <__udivmodhi4_ep>
    9564:	a6 1b       	sub	r26, r22
    9566:	b7 0b       	sbc	r27, r23

00009568 <__udivmodhi4_ep>:
    9568:	88 1f       	adc	r24, r24
    956a:	99 1f       	adc	r25, r25
    956c:	5a 95       	dec	r21
    956e:	a9 f7       	brne	.-22     	; 0x955a <__udivmodhi4_loop>
    9570:	80 95       	com	r24
    9572:	90 95       	com	r25
    9574:	bc 01       	movw	r22, r24
    9576:	cd 01       	movw	r24, r26
    9578:	08 95       	ret

0000957a <malloc>:
    957a:	0f 93       	push	r16
    957c:	1f 93       	push	r17
    957e:	cf 93       	push	r28
    9580:	df 93       	push	r29
    9582:	82 30       	cpi	r24, 0x02	; 2
    9584:	91 05       	cpc	r25, r1
    9586:	10 f4       	brcc	.+4      	; 0x958c <malloc+0x12>
    9588:	82 e0       	ldi	r24, 0x02	; 2
    958a:	90 e0       	ldi	r25, 0x00	; 0
    958c:	e0 91 9e 02 	lds	r30, 0x029E
    9590:	f0 91 9f 02 	lds	r31, 0x029F
    9594:	20 e0       	ldi	r18, 0x00	; 0
    9596:	30 e0       	ldi	r19, 0x00	; 0
    9598:	c0 e0       	ldi	r28, 0x00	; 0
    959a:	d0 e0       	ldi	r29, 0x00	; 0
    959c:	23 c0       	rjmp	.+70     	; 0x95e4 <malloc+0x6a>
    959e:	40 81       	ld	r20, Z
    95a0:	51 81       	ldd	r21, Z+1	; 0x01
    95a2:	48 17       	cp	r20, r24
    95a4:	59 07       	cpc	r21, r25
    95a6:	a8 f0       	brcs	.+42     	; 0x95d2 <malloc+0x58>
    95a8:	48 17       	cp	r20, r24
    95aa:	59 07       	cpc	r21, r25
    95ac:	61 f4       	brne	.+24     	; 0x95c6 <malloc+0x4c>
    95ae:	82 81       	ldd	r24, Z+2	; 0x02
    95b0:	93 81       	ldd	r25, Z+3	; 0x03
    95b2:	20 97       	sbiw	r28, 0x00	; 0
    95b4:	19 f0       	breq	.+6      	; 0x95bc <malloc+0x42>
    95b6:	9b 83       	std	Y+3, r25	; 0x03
    95b8:	8a 83       	std	Y+2, r24	; 0x02
    95ba:	2e c0       	rjmp	.+92     	; 0x9618 <malloc+0x9e>
    95bc:	90 93 9f 02 	sts	0x029F, r25
    95c0:	80 93 9e 02 	sts	0x029E, r24
    95c4:	29 c0       	rjmp	.+82     	; 0x9618 <malloc+0x9e>
    95c6:	21 15       	cp	r18, r1
    95c8:	31 05       	cpc	r19, r1
    95ca:	29 f0       	breq	.+10     	; 0x95d6 <malloc+0x5c>
    95cc:	42 17       	cp	r20, r18
    95ce:	53 07       	cpc	r21, r19
    95d0:	10 f0       	brcs	.+4      	; 0x95d6 <malloc+0x5c>
    95d2:	a9 01       	movw	r20, r18
    95d4:	02 c0       	rjmp	.+4      	; 0x95da <malloc+0x60>
    95d6:	be 01       	movw	r22, r28
    95d8:	df 01       	movw	r26, r30
    95da:	02 81       	ldd	r16, Z+2	; 0x02
    95dc:	13 81       	ldd	r17, Z+3	; 0x03
    95de:	ef 01       	movw	r28, r30
    95e0:	9a 01       	movw	r18, r20
    95e2:	f8 01       	movw	r30, r16
    95e4:	30 97       	sbiw	r30, 0x00	; 0
    95e6:	d9 f6       	brne	.-74     	; 0x959e <malloc+0x24>
    95e8:	21 15       	cp	r18, r1
    95ea:	31 05       	cpc	r19, r1
    95ec:	09 f1       	breq	.+66     	; 0x9630 <malloc+0xb6>
    95ee:	28 1b       	sub	r18, r24
    95f0:	39 0b       	sbc	r19, r25
    95f2:	24 30       	cpi	r18, 0x04	; 4
    95f4:	31 05       	cpc	r19, r1
    95f6:	90 f4       	brcc	.+36     	; 0x961c <malloc+0xa2>
    95f8:	12 96       	adiw	r26, 0x02	; 2
    95fa:	8d 91       	ld	r24, X+
    95fc:	9c 91       	ld	r25, X
    95fe:	13 97       	sbiw	r26, 0x03	; 3
    9600:	61 15       	cp	r22, r1
    9602:	71 05       	cpc	r23, r1
    9604:	21 f0       	breq	.+8      	; 0x960e <malloc+0x94>
    9606:	fb 01       	movw	r30, r22
    9608:	93 83       	std	Z+3, r25	; 0x03
    960a:	82 83       	std	Z+2, r24	; 0x02
    960c:	04 c0       	rjmp	.+8      	; 0x9616 <malloc+0x9c>
    960e:	90 93 9f 02 	sts	0x029F, r25
    9612:	80 93 9e 02 	sts	0x029E, r24
    9616:	fd 01       	movw	r30, r26
    9618:	32 96       	adiw	r30, 0x02	; 2
    961a:	44 c0       	rjmp	.+136    	; 0x96a4 <malloc+0x12a>
    961c:	fd 01       	movw	r30, r26
    961e:	e2 0f       	add	r30, r18
    9620:	f3 1f       	adc	r31, r19
    9622:	81 93       	st	Z+, r24
    9624:	91 93       	st	Z+, r25
    9626:	22 50       	subi	r18, 0x02	; 2
    9628:	31 09       	sbc	r19, r1
    962a:	2d 93       	st	X+, r18
    962c:	3c 93       	st	X, r19
    962e:	3a c0       	rjmp	.+116    	; 0x96a4 <malloc+0x12a>
    9630:	20 91 9c 02 	lds	r18, 0x029C
    9634:	30 91 9d 02 	lds	r19, 0x029D
    9638:	23 2b       	or	r18, r19
    963a:	41 f4       	brne	.+16     	; 0x964c <malloc+0xd2>
    963c:	20 91 02 02 	lds	r18, 0x0202
    9640:	30 91 03 02 	lds	r19, 0x0203
    9644:	30 93 9d 02 	sts	0x029D, r19
    9648:	20 93 9c 02 	sts	0x029C, r18
    964c:	20 91 00 02 	lds	r18, 0x0200
    9650:	30 91 01 02 	lds	r19, 0x0201
    9654:	21 15       	cp	r18, r1
    9656:	31 05       	cpc	r19, r1
    9658:	41 f4       	brne	.+16     	; 0x966a <malloc+0xf0>
    965a:	2d b7       	in	r18, 0x3d	; 61
    965c:	3e b7       	in	r19, 0x3e	; 62
    965e:	40 91 04 02 	lds	r20, 0x0204
    9662:	50 91 05 02 	lds	r21, 0x0205
    9666:	24 1b       	sub	r18, r20
    9668:	35 0b       	sbc	r19, r21
    966a:	e0 91 9c 02 	lds	r30, 0x029C
    966e:	f0 91 9d 02 	lds	r31, 0x029D
    9672:	e2 17       	cp	r30, r18
    9674:	f3 07       	cpc	r31, r19
    9676:	a0 f4       	brcc	.+40     	; 0x96a0 <malloc+0x126>
    9678:	2e 1b       	sub	r18, r30
    967a:	3f 0b       	sbc	r19, r31
    967c:	28 17       	cp	r18, r24
    967e:	39 07       	cpc	r19, r25
    9680:	78 f0       	brcs	.+30     	; 0x96a0 <malloc+0x126>
    9682:	ac 01       	movw	r20, r24
    9684:	4e 5f       	subi	r20, 0xFE	; 254
    9686:	5f 4f       	sbci	r21, 0xFF	; 255
    9688:	24 17       	cp	r18, r20
    968a:	35 07       	cpc	r19, r21
    968c:	48 f0       	brcs	.+18     	; 0x96a0 <malloc+0x126>
    968e:	4e 0f       	add	r20, r30
    9690:	5f 1f       	adc	r21, r31
    9692:	50 93 9d 02 	sts	0x029D, r21
    9696:	40 93 9c 02 	sts	0x029C, r20
    969a:	81 93       	st	Z+, r24
    969c:	91 93       	st	Z+, r25
    969e:	02 c0       	rjmp	.+4      	; 0x96a4 <malloc+0x12a>
    96a0:	e0 e0       	ldi	r30, 0x00	; 0
    96a2:	f0 e0       	ldi	r31, 0x00	; 0
    96a4:	cf 01       	movw	r24, r30
    96a6:	df 91       	pop	r29
    96a8:	cf 91       	pop	r28
    96aa:	1f 91       	pop	r17
    96ac:	0f 91       	pop	r16
    96ae:	08 95       	ret

000096b0 <free>:
    96b0:	ef 92       	push	r14
    96b2:	ff 92       	push	r15
    96b4:	0f 93       	push	r16
    96b6:	1f 93       	push	r17
    96b8:	cf 93       	push	r28
    96ba:	df 93       	push	r29
    96bc:	00 97       	sbiw	r24, 0x00	; 0
    96be:	09 f4       	brne	.+2      	; 0x96c2 <free+0x12>
    96c0:	8f c0       	rjmp	.+286    	; 0x97e0 <free+0x130>
    96c2:	dc 01       	movw	r26, r24
    96c4:	12 97       	sbiw	r26, 0x02	; 2
    96c6:	13 96       	adiw	r26, 0x03	; 3
    96c8:	1c 92       	st	X, r1
    96ca:	1e 92       	st	-X, r1
    96cc:	12 97       	sbiw	r26, 0x02	; 2
    96ce:	e0 90 9e 02 	lds	r14, 0x029E
    96d2:	f0 90 9f 02 	lds	r15, 0x029F
    96d6:	e1 14       	cp	r14, r1
    96d8:	f1 04       	cpc	r15, r1
    96da:	89 f4       	brne	.+34     	; 0x96fe <free+0x4e>
    96dc:	2d 91       	ld	r18, X+
    96de:	3c 91       	ld	r19, X
    96e0:	11 97       	sbiw	r26, 0x01	; 1
    96e2:	28 0f       	add	r18, r24
    96e4:	39 1f       	adc	r19, r25
    96e6:	80 91 9c 02 	lds	r24, 0x029C
    96ea:	90 91 9d 02 	lds	r25, 0x029D
    96ee:	82 17       	cp	r24, r18
    96f0:	93 07       	cpc	r25, r19
    96f2:	89 f5       	brne	.+98     	; 0x9756 <free+0xa6>
    96f4:	b0 93 9d 02 	sts	0x029D, r27
    96f8:	a0 93 9c 02 	sts	0x029C, r26
    96fc:	71 c0       	rjmp	.+226    	; 0x97e0 <free+0x130>
    96fe:	e7 01       	movw	r28, r14
    9700:	20 e0       	ldi	r18, 0x00	; 0
    9702:	30 e0       	ldi	r19, 0x00	; 0
    9704:	01 c0       	rjmp	.+2      	; 0x9708 <free+0x58>
    9706:	ea 01       	movw	r28, r20
    9708:	ca 17       	cp	r28, r26
    970a:	db 07       	cpc	r29, r27
    970c:	38 f4       	brcc	.+14     	; 0x971c <free+0x6c>
    970e:	4a 81       	ldd	r20, Y+2	; 0x02
    9710:	5b 81       	ldd	r21, Y+3	; 0x03
    9712:	9e 01       	movw	r18, r28
    9714:	41 15       	cp	r20, r1
    9716:	51 05       	cpc	r21, r1
    9718:	b1 f7       	brne	.-20     	; 0x9706 <free+0x56>
    971a:	22 c0       	rjmp	.+68     	; 0x9760 <free+0xb0>
    971c:	bc 01       	movw	r22, r24
    971e:	62 50       	subi	r22, 0x02	; 2
    9720:	71 09       	sbc	r23, r1
    9722:	fb 01       	movw	r30, r22
    9724:	d3 83       	std	Z+3, r29	; 0x03
    9726:	c2 83       	std	Z+2, r28	; 0x02
    9728:	00 81       	ld	r16, Z
    972a:	11 81       	ldd	r17, Z+1	; 0x01
    972c:	ac 01       	movw	r20, r24
    972e:	40 0f       	add	r20, r16
    9730:	51 1f       	adc	r21, r17
    9732:	4c 17       	cp	r20, r28
    9734:	5d 07       	cpc	r21, r29
    9736:	61 f4       	brne	.+24     	; 0x9750 <free+0xa0>
    9738:	48 81       	ld	r20, Y
    973a:	59 81       	ldd	r21, Y+1	; 0x01
    973c:	40 0f       	add	r20, r16
    973e:	51 1f       	adc	r21, r17
    9740:	4e 5f       	subi	r20, 0xFE	; 254
    9742:	5f 4f       	sbci	r21, 0xFF	; 255
    9744:	51 83       	std	Z+1, r21	; 0x01
    9746:	40 83       	st	Z, r20
    9748:	4a 81       	ldd	r20, Y+2	; 0x02
    974a:	5b 81       	ldd	r21, Y+3	; 0x03
    974c:	53 83       	std	Z+3, r21	; 0x03
    974e:	42 83       	std	Z+2, r20	; 0x02
    9750:	21 15       	cp	r18, r1
    9752:	31 05       	cpc	r19, r1
    9754:	29 f4       	brne	.+10     	; 0x9760 <free+0xb0>
    9756:	b0 93 9f 02 	sts	0x029F, r27
    975a:	a0 93 9e 02 	sts	0x029E, r26
    975e:	40 c0       	rjmp	.+128    	; 0x97e0 <free+0x130>
    9760:	f9 01       	movw	r30, r18
    9762:	b3 83       	std	Z+3, r27	; 0x03
    9764:	a2 83       	std	Z+2, r26	; 0x02
    9766:	e9 01       	movw	r28, r18
    9768:	69 91       	ld	r22, Y+
    976a:	79 91       	ld	r23, Y+
    976c:	c6 0f       	add	r28, r22
    976e:	d7 1f       	adc	r29, r23
    9770:	ac 17       	cp	r26, r28
    9772:	bd 07       	cpc	r27, r29
    9774:	79 f4       	brne	.+30     	; 0x9794 <free+0xe4>
    9776:	dc 01       	movw	r26, r24
    9778:	5e 91       	ld	r21, -X
    977a:	4e 91       	ld	r20, -X
    977c:	46 0f       	add	r20, r22
    977e:	57 1f       	adc	r21, r23
    9780:	4e 5f       	subi	r20, 0xFE	; 254
    9782:	5f 4f       	sbci	r21, 0xFF	; 255
    9784:	51 83       	std	Z+1, r21	; 0x01
    9786:	40 83       	st	Z, r20
    9788:	12 96       	adiw	r26, 0x02	; 2
    978a:	8d 91       	ld	r24, X+
    978c:	9c 91       	ld	r25, X
    978e:	13 97       	sbiw	r26, 0x03	; 3
    9790:	93 83       	std	Z+3, r25	; 0x03
    9792:	82 83       	std	Z+2, r24	; 0x02
    9794:	a0 e0       	ldi	r26, 0x00	; 0
    9796:	b0 e0       	ldi	r27, 0x00	; 0
    9798:	02 c0       	rjmp	.+4      	; 0x979e <free+0xee>
    979a:	d7 01       	movw	r26, r14
    979c:	7c 01       	movw	r14, r24
    979e:	f7 01       	movw	r30, r14
    97a0:	82 81       	ldd	r24, Z+2	; 0x02
    97a2:	93 81       	ldd	r25, Z+3	; 0x03
    97a4:	00 97       	sbiw	r24, 0x00	; 0
    97a6:	c9 f7       	brne	.-14     	; 0x979a <free+0xea>
    97a8:	c7 01       	movw	r24, r14
    97aa:	02 96       	adiw	r24, 0x02	; 2
    97ac:	20 81       	ld	r18, Z
    97ae:	31 81       	ldd	r19, Z+1	; 0x01
    97b0:	82 0f       	add	r24, r18
    97b2:	93 1f       	adc	r25, r19
    97b4:	20 91 9c 02 	lds	r18, 0x029C
    97b8:	30 91 9d 02 	lds	r19, 0x029D
    97bc:	28 17       	cp	r18, r24
    97be:	39 07       	cpc	r19, r25
    97c0:	79 f4       	brne	.+30     	; 0x97e0 <free+0x130>
    97c2:	10 97       	sbiw	r26, 0x00	; 0
    97c4:	29 f4       	brne	.+10     	; 0x97d0 <free+0x120>
    97c6:	10 92 9f 02 	sts	0x029F, r1
    97ca:	10 92 9e 02 	sts	0x029E, r1
    97ce:	04 c0       	rjmp	.+8      	; 0x97d8 <free+0x128>
    97d0:	13 96       	adiw	r26, 0x03	; 3
    97d2:	1c 92       	st	X, r1
    97d4:	1e 92       	st	-X, r1
    97d6:	12 97       	sbiw	r26, 0x02	; 2
    97d8:	f0 92 9d 02 	sts	0x029D, r15
    97dc:	e0 92 9c 02 	sts	0x029C, r14
    97e0:	df 91       	pop	r29
    97e2:	cf 91       	pop	r28
    97e4:	1f 91       	pop	r17
    97e6:	0f 91       	pop	r16
    97e8:	ff 90       	pop	r15
    97ea:	ef 90       	pop	r14
    97ec:	08 95       	ret

000097ee <memcpy>:
    97ee:	fb 01       	movw	r30, r22
    97f0:	dc 01       	movw	r26, r24
    97f2:	02 c0       	rjmp	.+4      	; 0x97f8 <memcpy+0xa>
    97f4:	01 90       	ld	r0, Z+
    97f6:	0d 92       	st	X+, r0
    97f8:	41 50       	subi	r20, 0x01	; 1
    97fa:	50 40       	sbci	r21, 0x00	; 0
    97fc:	d8 f7       	brcc	.-10     	; 0x97f4 <memcpy+0x6>
    97fe:	08 95       	ret

00009800 <_exit>:
    9800:	f8 94       	cli

00009802 <__stop_program>:
    9802:	ff cf       	rjmp	.-2      	; 0x9802 <__stop_program>
