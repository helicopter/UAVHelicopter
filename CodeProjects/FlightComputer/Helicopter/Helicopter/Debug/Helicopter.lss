
Helicopter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a4  00800200  000091e2  00009276  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000091e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008002a4  008002a4  0000931a  2**0
                  ALLOC
  3 .stab         000043e0  00000000  00000000  0000931c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000011bd  00000000  00000000  0000d6fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000e8b9  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000d48  00000000  00000000  0000e8e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00014094  00000000  00000000  0000f630  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003240  00000000  00000000  000236c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000031b6  00000000  00000000  00026904  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00003330  00000000  00000000  00029abc  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00006368  00000000  00000000  0002cdec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00007482  00000000  00000000  00033154  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000bc0  00000000  00000000  0003a5d6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
	//TODO should this be delete[]?
	delete this->records;
}

void Buffer::enqueue(Record *record)
{
       0:	0c 94 1a 01 	jmp	0x234	; 0x234 <__ctors_end>
       4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
       8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
       c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      10:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
	if (record != NULL)
      14:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      18:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      1c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
	{
		//Copy the record
		//TODO danger not deep copy. 
		Record *newRecord = record->Copy();
      20:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      24:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      28:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
		
		//Add the record to the linked list.
		if (this->records == NULL)
      2c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      30:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      34:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
		{
			records = newRecord;
      38:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      3c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      40:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      44:	0c 94 0c 35 	jmp	0x6a18	; 0x6a18 <__vector_17>
			firstRecord = newRecord;
      48:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      4c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      50:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
			lastRecord = newRecord;
      54:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      58:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      5c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      60:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
		}else
		{
			lastRecord->setNextRecord(newRecord);
      64:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      68:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      6c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      70:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      74:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
			newRecord->setPreviousRecord(lastRecord);
      78:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      7c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      80:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      84:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      88:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
			lastRecord = newRecord;
      8c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      90:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      94:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      98:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
		}
		
		bufferSize++;
      9c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      a0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      a4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      a8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      ac:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      b0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
	}
}
      b4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      b8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      bc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      c0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      c4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 * This method uses Euler angle rotations.
 */
double MagnetometerSensor::getFRDY()
{
	return (rawMagX * (cos(theta)*sin(sai))) + (rawMagY * (sin(phi)*sin(theta)*sin(sai) + cos(phi)*cos(sai))) + (rawMagZ * (cos(phi)*sin(theta)*sin(sai) - sin(phi)*cos(sai)));
}
      c8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      cc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      d0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      d4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      d8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      dc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      e0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      e4:	05 a8       	ldd	r0, Z+53	; 0x35
      e6:	4c cd       	rjmp	.-1384   	; 0xfffffb80 <__eeprom_end+0xff7efb80>
      e8:	b2 d4       	rcall	.+2404   	; 0xa4e <_ZN10helicopter5model11SystemModel13YProportionalEf+0x18>
      ea:	4e b9       	out	0x0e, r20	; 14
      ec:	38 36       	cpi	r19, 0x68	; 104
      ee:	a9 02       	muls	r26, r25
      f0:	0c 50       	subi	r16, 0x0C	; 12
      f2:	b9 91       	ld	r27, Y+
      f4:	86 88       	ldd	r8, Z+22	; 0x16
      f6:	08 3c       	cpi	r16, 0xC8	; 200
      f8:	a6 aa       	std	Z+54, r10	; 0x36
      fa:	aa 2a       	or	r10, r26
      fc:	be 00       	.word	0x00be	; ????
      fe:	00 00       	nop
     100:	80 3f       	cpi	r24, 0xF0	; 240
     102:	07 63       	ori	r16, 0x37	; 55
     104:	42 36       	cpi	r20, 0x62	; 98
     106:	b7 9b       	sbis	0x16, 7	; 22
     108:	d8 a7       	std	Y+40, r29	; 0x28
     10a:	1a 39       	cpi	r17, 0x9A	; 154
     10c:	68 56       	subi	r22, 0x68	; 104
     10e:	18 ae       	std	Y+56, r1	; 0x38
     110:	ba ab       	std	Y+50, r27	; 0x32
     112:	55 8c       	ldd	r5, Z+29	; 0x1d
     114:	1d 3c       	cpi	r17, 0xCD	; 205
     116:	b7 cc       	rjmp	.-1682   	; 0xfffffa86 <__eeprom_end+0xff7efa86>
     118:	57 63       	ori	r21, 0x37	; 55
     11a:	bd 6d       	ori	r27, 0xDD	; 221
     11c:	ed fd       	.word	0xfded	; ????
     11e:	75 3e       	cpi	r23, 0xE5	; 229
     120:	f6 17       	cp	r31, r22
     122:	72 31       	cpi	r23, 0x12	; 18
     124:	bf 00       	.word	0x00bf	; ????
     126:	00 00       	nop
     128:	80 3f       	cpi	r24, 0xF0	; 240
     12a:	08 00       	.word	0x0008	; ????
     12c:	00 00       	nop
     12e:	be 92       	st	-X, r11
     130:	24 49       	sbci	r18, 0x94	; 148
     132:	12 3e       	cpi	r17, 0xE2	; 226
     134:	ab aa       	std	Y+51, r10	; 0x33
     136:	aa 2a       	or	r10, r26
     138:	be cd       	rjmp	.-1156   	; 0xfffffcb6 <__eeprom_end+0xff7efcb6>
     13a:	cc cc       	rjmp	.-1640   	; 0xfffffad4 <__eeprom_end+0xff7efad4>
     13c:	4c 3e       	cpi	r20, 0xEC	; 236
     13e:	00 00       	nop
     140:	00 80       	ld	r0, Z
     142:	be ab       	std	Y+54, r27	; 0x36
     144:	aa aa       	std	Y+50, r10	; 0x32
     146:	aa 3e       	cpi	r26, 0xEA	; 234
     148:	00 00       	nop
     14a:	00 00       	nop
     14c:	bf 00       	.word	0x00bf	; ????
     14e:	00 00       	nop
     150:	80 3f       	cpi	r24, 0xF0	; 240
     152:	00 00       	nop
     154:	00 00       	nop
     156:	00 08       	sbc	r0, r0
     158:	41 78       	andi	r20, 0x81	; 129
     15a:	d3 bb       	out	0x13, r29	; 19
     15c:	43 87       	std	Z+11, r20	; 0x0b
     15e:	d1 13       	cpse	r29, r17
     160:	3d 19       	sub	r19, r13
     162:	0e 3c       	cpi	r16, 0xCE	; 206
     164:	c3 bd       	out	0x23, r28	; 35
     166:	42 82       	std	Z+2, r4	; 0x02
     168:	ad 2b       	or	r26, r29
     16a:	3e 68       	ori	r19, 0x8E	; 142
     16c:	ec 82       	std	Y+4, r14	; 0x04
     16e:	76 be       	out	0x36, r7	; 54
     170:	d9 8f       	std	Y+25, r29	; 0x19
     172:	e1 a9       	ldd	r30, Z+49	; 0x31
     174:	3e 4c       	sbci	r19, 0xCE	; 206
     176:	80 ef       	ldi	r24, 0xF0	; 240
     178:	ff be       	out	0x3f, r15	; 63
     17a:	01 c4       	rjmp	.+2050   	; 0x97e <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv+0x1e>
     17c:	ff 7f       	andi	r31, 0xFF	; 255
     17e:	3f 00       	.word	0x003f	; ????
     180:	00 00       	nop
	...

00000184 <__trampolines_start>:
     184:	0c 94 dd 11 	jmp	0x23ba	; 0x23ba <_ZN10helicopter7drivers12SerialDriverD1Ev>
     188:	0c 94 84 13 	jmp	0x2708	; 0x2708 <_ZN10helicopter7drivers11ServoDriverD1Ev>
     18c:	0c 94 fd 2c 	jmp	0x59fa	; 0x59fa <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh>
     190:	0c 94 ec 3c 	jmp	0x79d8	; 0x79d8 <_ZN10helicopter5tasks21TransmitTelemetryTaskD0Ev>
     194:	0c 94 60 36 	jmp	0x6cc0	; 0x6cc0 <_ZN10helicopter5tasks16PIDOuterLoopTask11runTaskImplEv>
     198:	0c 94 fb 11 	jmp	0x23f6	; 0x23f6 <_ZN10helicopter7drivers12SerialDriverD0Ev>
     19c:	0c 94 ac 38 	jmp	0x7158	; 0x7158 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>
     1a0:	0c 94 f7 35 	jmp	0x6bee	; 0x6bee <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>
     1a4:	0c 94 b2 37 	jmp	0x6f64	; 0x6f64 <_ZN10helicopter5tasks20SensorProcessingTask11runTaskImplEv>
     1a8:	0c 94 b8 39 	jmp	0x7370	; 0x7370 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv>
     1ac:	0c 94 89 36 	jmp	0x6d12	; 0x6d12 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>
     1b0:	0c 94 84 20 	jmp	0x4108	; 0x4108 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>
     1b4:	0c 94 1f 13 	jmp	0x263e	; 0x263e <_ZN10helicopter7drivers12SerialDriver11receiveByteERh>
     1b8:	0c 94 34 2a 	jmp	0x5468	; 0x5468 <_ZN10helicopter8messages22SystemTelemetryMessageD0Ev>
     1bc:	0c 94 5e 23 	jmp	0x46bc	; 0x46bc <_ZN10helicopter8messages7MessageD1Ev>
     1c0:	0c 94 a3 23 	jmp	0x4746	; 0x4746 <_ZN10helicopter8messages7Message8getBytesEv>
     1c4:	0c 94 ab 36 	jmp	0x6d56	; 0x6d56 <_ZN10helicopter5tasks16PIDOuterLoopTaskD0Ev>
     1c8:	0c 94 c6 12 	jmp	0x258c	; 0x258c <_ZN10helicopter7drivers12SerialDriver12transmitByteEh>
     1cc:	0c 94 ce 38 	jmp	0x719c	; 0x719c <_ZN10helicopter5tasks20SensorProcessingTaskD0Ev>
     1d0:	0c 94 27 24 	jmp	0x484e	; 0x484e <_ZN10helicopter8messages11SyncMessageD0Ev>
     1d4:	0c 94 12 2a 	jmp	0x5424	; 0x5424 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>
     1d8:	0c 94 ed 3b 	jmp	0x77da	; 0x77da <_ZN10helicopter5tasks16SimTelemetryTaskD0Ev>
     1dc:	0c 94 19 36 	jmp	0x6c32	; 0x6c32 <_ZN10helicopter5tasks16PIDInnerLoopTaskD0Ev>
     1e0:	0c 94 02 3c 	jmp	0x7804	; 0x7804 <_ZN10helicopter5tasks4Task11runTaskImplEv>
     1e4:	0c 94 9d 35 	jmp	0x6b3a	; 0x6b3a <_ZN10helicopter5tasks4Task4initEv>
     1e8:	0c 94 05 24 	jmp	0x480a	; 0x480a <_ZN10helicopter8messages11SyncMessageD1Ev>
     1ec:	0c 94 dc 35 	jmp	0x6bb8	; 0x6bb8 <_ZN10helicopter5tasks16PIDInnerLoopTask11runTaskImplEv>
     1f0:	0c 94 49 2a 	jmp	0x5492	; 0x5492 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv>
     1f4:	0c 94 cc 14 	jmp	0x2998	; 0x2998 <_ZN10helicopter5tasks12FlashLEDTask4initEv>
     1f8:	0c 94 a6 20 	jmp	0x414c	; 0x414c <_ZN10helicopter5tasks12FlashLEDTaskD0Ev>
     1fc:	0c 94 cb 3b 	jmp	0x7796	; 0x7796 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>
     200:	0c 94 a2 13 	jmp	0x2744	; 0x2744 <_ZN10helicopter7drivers11ServoDriverD0Ev>
     204:	0c 94 3d 3c 	jmp	0x787a	; 0x787a <_ZN10helicopter5tasks4Task7runTaskEv>
     208:	0c 94 f0 14 	jmp	0x29e0	; 0x29e0 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv>
     20c:	0c 94 ca 3c 	jmp	0x7994	; 0x7994 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>
     210:	0c 94 61 24 	jmp	0x48c2	; 0x48c2 <_ZN10helicopter8messages11SyncMessage12buildMessageEPh>
     214:	0c 94 24 14 	jmp	0x2848	; 0x2848 <_ZN10helicopter7drivers11ServoDriver30controlTailRotorCollectiveImplEd>
     218:	0c 94 63 14 	jmp	0x28c6	; 0x28c6 <_ZN10helicopter5tasks4TaskD1Ev>
     21c:	0c 94 81 14 	jmp	0x2902	; 0x2902 <_ZN10helicopter5tasks4TaskD0Ev>
     220:	0c 94 10 12 	jmp	0x2420	; 0x2420 <_ZN10helicopter7drivers12SerialDriver10initializeEv>
     224:	0c 94 3c 24 	jmp	0x4878	; 0x4878 <_ZN10helicopter8messages11SyncMessage8getBytesEv>
     228:	0c 94 b2 23 	jmp	0x4764	; 0x4764 <_ZN10helicopter8messages7Message12buildMessageEPh>
     22c:	0c 94 7c 23 	jmp	0x46f8	; 0x46f8 <_ZN10helicopter8messages7MessageD0Ev>
     230:	0c 94 97 3c 	jmp	0x792e	; 0x792e <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv>

00000234 <__ctors_end>:
     234:	11 24       	eor	r1, r1
     236:	1f be       	out	0x3f, r1	; 63
     238:	cf ef       	ldi	r28, 0xFF	; 255
     23a:	d1 e2       	ldi	r29, 0x21	; 33
     23c:	de bf       	out	0x3e, r29	; 62
     23e:	cd bf       	out	0x3d, r28	; 61
     240:	00 e0       	ldi	r16, 0x00	; 0
     242:	0c bf       	out	0x3c, r16	; 60

00000244 <__do_copy_data>:
     244:	12 e0       	ldi	r17, 0x02	; 2
     246:	a0 e0       	ldi	r26, 0x00	; 0
     248:	b2 e0       	ldi	r27, 0x02	; 2
     24a:	e2 ee       	ldi	r30, 0xE2	; 226
     24c:	f1 e9       	ldi	r31, 0x91	; 145
     24e:	00 e0       	ldi	r16, 0x00	; 0
     250:	0b bf       	out	0x3b, r16	; 59
     252:	02 c0       	rjmp	.+4      	; 0x258 <__do_copy_data+0x14>
     254:	07 90       	elpm	r0, Z+
     256:	0d 92       	st	X+, r0
     258:	a4 3a       	cpi	r26, 0xA4	; 164
     25a:	b1 07       	cpc	r27, r17
     25c:	d9 f7       	brne	.-10     	; 0x254 <__do_copy_data+0x10>

0000025e <__do_clear_bss>:
     25e:	22 e0       	ldi	r18, 0x02	; 2
     260:	a4 ea       	ldi	r26, 0xA4	; 164
     262:	b2 e0       	ldi	r27, 0x02	; 2
     264:	01 c0       	rjmp	.+2      	; 0x268 <.do_clear_bss_start>

00000266 <.do_clear_bss_loop>:
     266:	1d 92       	st	X+, r1

00000268 <.do_clear_bss_start>:
     268:	aa 3a       	cpi	r26, 0xAA	; 170
     26a:	b2 07       	cpc	r27, r18
     26c:	e1 f7       	brne	.-8      	; 0x266 <.do_clear_bss_loop>
     26e:	0e 94 12 1e 	call	0x3c24	; 0x3c24 <main>
     272:	0c 94 ef 48 	jmp	0x91de	; 0x91de <_exit>

00000276 <__bad_interrupt>:
     276:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000027a <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>:
			 * Y axis is pointing behind the FC
			 * Z axis is pointing up out of the FC
			 */
			

			float MagYawDegrees() const { return magYawDegrees; }
     27a:	cf 93       	push	r28
     27c:	df 93       	push	r29
     27e:	1f 92       	push	r1
     280:	1f 92       	push	r1
     282:	cd b7       	in	r28, 0x3d	; 61
     284:	de b7       	in	r29, 0x3e	; 62
     286:	9a 83       	std	Y+2, r25	; 0x02
     288:	89 83       	std	Y+1, r24	; 0x01
     28a:	89 81       	ldd	r24, Y+1	; 0x01
     28c:	9a 81       	ldd	r25, Y+2	; 0x02
     28e:	fc 01       	movw	r30, r24
     290:	80 81       	ld	r24, Z
     292:	91 81       	ldd	r25, Z+1	; 0x01
     294:	a2 81       	ldd	r26, Z+2	; 0x02
     296:	b3 81       	ldd	r27, Z+3	; 0x03
     298:	bc 01       	movw	r22, r24
     29a:	cd 01       	movw	r24, r26
     29c:	0f 90       	pop	r0
     29e:	0f 90       	pop	r0
     2a0:	df 91       	pop	r29
     2a2:	cf 91       	pop	r28
     2a4:	08 95       	ret

000002a6 <_ZNK10helicopter5model11SystemModel22ReferenceMagYawDegreesEv>:
			void MagYawDegrees(float val) { magYawDegrees = val; }	
				
				
				
			float ReferenceMagYawDegrees() const {return referenceMagYawDegrees;}
     2a6:	cf 93       	push	r28
     2a8:	df 93       	push	r29
     2aa:	1f 92       	push	r1
     2ac:	1f 92       	push	r1
     2ae:	cd b7       	in	r28, 0x3d	; 61
     2b0:	de b7       	in	r29, 0x3e	; 62
     2b2:	9a 83       	std	Y+2, r25	; 0x02
     2b4:	89 83       	std	Y+1, r24	; 0x01
     2b6:	89 81       	ldd	r24, Y+1	; 0x01
     2b8:	9a 81       	ldd	r25, Y+2	; 0x02
     2ba:	fc 01       	movw	r30, r24
     2bc:	84 81       	ldd	r24, Z+4	; 0x04
     2be:	95 81       	ldd	r25, Z+5	; 0x05
     2c0:	a6 81       	ldd	r26, Z+6	; 0x06
     2c2:	b7 81       	ldd	r27, Z+7	; 0x07
     2c4:	bc 01       	movw	r22, r24
     2c6:	cd 01       	movw	r24, r26
     2c8:	0f 90       	pop	r0
     2ca:	0f 90       	pop	r0
     2cc:	df 91       	pop	r29
     2ce:	cf 91       	pop	r28
     2d0:	08 95       	ret

000002d2 <_ZNK10helicopter5model11SystemModel10YawControlEv>:
			void ReferenceMagYawDegrees(float val) { referenceMagYawDegrees = val;}
				
				
			float YawControl() const {return yawControl;}
     2d2:	cf 93       	push	r28
     2d4:	df 93       	push	r29
     2d6:	1f 92       	push	r1
     2d8:	1f 92       	push	r1
     2da:	cd b7       	in	r28, 0x3d	; 61
     2dc:	de b7       	in	r29, 0x3e	; 62
     2de:	9a 83       	std	Y+2, r25	; 0x02
     2e0:	89 83       	std	Y+1, r24	; 0x01
     2e2:	89 81       	ldd	r24, Y+1	; 0x01
     2e4:	9a 81       	ldd	r25, Y+2	; 0x02
     2e6:	fc 01       	movw	r30, r24
     2e8:	80 85       	ldd	r24, Z+8	; 0x08
     2ea:	91 85       	ldd	r25, Z+9	; 0x09
     2ec:	a2 85       	ldd	r26, Z+10	; 0x0a
     2ee:	b3 85       	ldd	r27, Z+11	; 0x0b
     2f0:	bc 01       	movw	r22, r24
     2f2:	cd 01       	movw	r24, r26
     2f4:	0f 90       	pop	r0
     2f6:	0f 90       	pop	r0
     2f8:	df 91       	pop	r29
     2fa:	cf 91       	pop	r28
     2fc:	08 95       	ret

000002fe <_ZN10helicopter5model11SystemModel10YawControlEf>:
			void YawControl(float val) { yawControl = val;}
     2fe:	cf 93       	push	r28
     300:	df 93       	push	r29
     302:	00 d0       	rcall	.+0      	; 0x304 <_ZN10helicopter5model11SystemModel10YawControlEf+0x6>
     304:	00 d0       	rcall	.+0      	; 0x306 <_ZN10helicopter5model11SystemModel10YawControlEf+0x8>
     306:	cd b7       	in	r28, 0x3d	; 61
     308:	de b7       	in	r29, 0x3e	; 62
     30a:	9a 83       	std	Y+2, r25	; 0x02
     30c:	89 83       	std	Y+1, r24	; 0x01
     30e:	4b 83       	std	Y+3, r20	; 0x03
     310:	5c 83       	std	Y+4, r21	; 0x04
     312:	6d 83       	std	Y+5, r22	; 0x05
     314:	7e 83       	std	Y+6, r23	; 0x06
     316:	29 81       	ldd	r18, Y+1	; 0x01
     318:	3a 81       	ldd	r19, Y+2	; 0x02
     31a:	8b 81       	ldd	r24, Y+3	; 0x03
     31c:	9c 81       	ldd	r25, Y+4	; 0x04
     31e:	ad 81       	ldd	r26, Y+5	; 0x05
     320:	be 81       	ldd	r27, Y+6	; 0x06
     322:	f9 01       	movw	r30, r18
     324:	80 87       	std	Z+8, r24	; 0x08
     326:	91 87       	std	Z+9, r25	; 0x09
     328:	a2 87       	std	Z+10, r26	; 0x0a
     32a:	b3 87       	std	Z+11, r27	; 0x0b
     32c:	26 96       	adiw	r28, 0x06	; 6
     32e:	0f b6       	in	r0, 0x3f	; 63
     330:	f8 94       	cli
     332:	de bf       	out	0x3e, r29	; 62
     334:	0f be       	out	0x3f, r0	; 63
     336:	cd bf       	out	0x3d, r28	; 61
     338:	df 91       	pop	r29
     33a:	cf 91       	pop	r28
     33c:	08 95       	ret

0000033e <_ZNK10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEv>:
				
			float YawControlBeforeServoLimitsAdjustment() const {return yawControlBeforeServoLimitsAdjustment;}
     33e:	cf 93       	push	r28
     340:	df 93       	push	r29
     342:	1f 92       	push	r1
     344:	1f 92       	push	r1
     346:	cd b7       	in	r28, 0x3d	; 61
     348:	de b7       	in	r29, 0x3e	; 62
     34a:	9a 83       	std	Y+2, r25	; 0x02
     34c:	89 83       	std	Y+1, r24	; 0x01
     34e:	89 81       	ldd	r24, Y+1	; 0x01
     350:	9a 81       	ldd	r25, Y+2	; 0x02
     352:	fc 01       	movw	r30, r24
     354:	84 85       	ldd	r24, Z+12	; 0x0c
     356:	95 85       	ldd	r25, Z+13	; 0x0d
     358:	a6 85       	ldd	r26, Z+14	; 0x0e
     35a:	b7 85       	ldd	r27, Z+15	; 0x0f
     35c:	bc 01       	movw	r22, r24
     35e:	cd 01       	movw	r24, r26
     360:	0f 90       	pop	r0
     362:	0f 90       	pop	r0
     364:	df 91       	pop	r29
     366:	cf 91       	pop	r28
     368:	08 95       	ret

0000036a <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf>:
			void YawControlBeforeServoLimitsAdjustment(float val) { yawControlBeforeServoLimitsAdjustment = val;}
     36a:	cf 93       	push	r28
     36c:	df 93       	push	r29
     36e:	00 d0       	rcall	.+0      	; 0x370 <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf+0x6>
     370:	00 d0       	rcall	.+0      	; 0x372 <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf+0x8>
     372:	cd b7       	in	r28, 0x3d	; 61
     374:	de b7       	in	r29, 0x3e	; 62
     376:	9a 83       	std	Y+2, r25	; 0x02
     378:	89 83       	std	Y+1, r24	; 0x01
     37a:	4b 83       	std	Y+3, r20	; 0x03
     37c:	5c 83       	std	Y+4, r21	; 0x04
     37e:	6d 83       	std	Y+5, r22	; 0x05
     380:	7e 83       	std	Y+6, r23	; 0x06
     382:	29 81       	ldd	r18, Y+1	; 0x01
     384:	3a 81       	ldd	r19, Y+2	; 0x02
     386:	8b 81       	ldd	r24, Y+3	; 0x03
     388:	9c 81       	ldd	r25, Y+4	; 0x04
     38a:	ad 81       	ldd	r26, Y+5	; 0x05
     38c:	be 81       	ldd	r27, Y+6	; 0x06
     38e:	f9 01       	movw	r30, r18
     390:	84 87       	std	Z+12, r24	; 0x0c
     392:	95 87       	std	Z+13, r25	; 0x0d
     394:	a6 87       	std	Z+14, r26	; 0x0e
     396:	b7 87       	std	Z+15, r27	; 0x0f
     398:	26 96       	adiw	r28, 0x06	; 6
     39a:	0f b6       	in	r0, 0x3f	; 63
     39c:	f8 94       	cli
     39e:	de bf       	out	0x3e, r29	; 62
     3a0:	0f be       	out	0x3f, r0	; 63
     3a2:	cd bf       	out	0x3d, r28	; 61
     3a4:	df 91       	pop	r29
     3a6:	cf 91       	pop	r28
     3a8:	08 95       	ret

000003aa <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>:
				
			float YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
     3aa:	cf 93       	push	r28
     3ac:	df 93       	push	r29
     3ae:	1f 92       	push	r1
     3b0:	1f 92       	push	r1
     3b2:	cd b7       	in	r28, 0x3d	; 61
     3b4:	de b7       	in	r29, 0x3e	; 62
     3b6:	9a 83       	std	Y+2, r25	; 0x02
     3b8:	89 83       	std	Y+1, r24	; 0x01
     3ba:	89 81       	ldd	r24, Y+1	; 0x01
     3bc:	9a 81       	ldd	r25, Y+2	; 0x02
     3be:	fc 01       	movw	r30, r24
     3c0:	80 89       	ldd	r24, Z+16	; 0x10
     3c2:	91 89       	ldd	r25, Z+17	; 0x11
     3c4:	a2 89       	ldd	r26, Z+18	; 0x12
     3c6:	b3 89       	ldd	r27, Z+19	; 0x13
     3c8:	bc 01       	movw	r22, r24
     3ca:	cd 01       	movw	r24, r26
     3cc:	0f 90       	pop	r0
     3ce:	0f 90       	pop	r0
     3d0:	df 91       	pop	r29
     3d2:	cf 91       	pop	r28
     3d4:	08 95       	ret

000003d6 <_ZNK10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEv>:
			void YawVelocityDegreesPerSecond(float val) { yawVelocityDegreesPerSecond = val;}
				
			float ReferenceYawVelocityDegreesPerSecond() const {return referenceYawVelocityDegreesPerSecond;}
     3d6:	cf 93       	push	r28
     3d8:	df 93       	push	r29
     3da:	1f 92       	push	r1
     3dc:	1f 92       	push	r1
     3de:	cd b7       	in	r28, 0x3d	; 61
     3e0:	de b7       	in	r29, 0x3e	; 62
     3e2:	9a 83       	std	Y+2, r25	; 0x02
     3e4:	89 83       	std	Y+1, r24	; 0x01
     3e6:	89 81       	ldd	r24, Y+1	; 0x01
     3e8:	9a 81       	ldd	r25, Y+2	; 0x02
     3ea:	fc 01       	movw	r30, r24
     3ec:	84 89       	ldd	r24, Z+20	; 0x14
     3ee:	95 89       	ldd	r25, Z+21	; 0x15
     3f0:	a6 89       	ldd	r26, Z+22	; 0x16
     3f2:	b7 89       	ldd	r27, Z+23	; 0x17
     3f4:	bc 01       	movw	r22, r24
     3f6:	cd 01       	movw	r24, r26
     3f8:	0f 90       	pop	r0
     3fa:	0f 90       	pop	r0
     3fc:	df 91       	pop	r29
     3fe:	cf 91       	pop	r28
     400:	08 95       	ret

00000402 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>:
			void ReferenceYawVelocityDegreesPerSecond(float val) { referenceYawVelocityDegreesPerSecond = val;}
				
			float YawIntegral() const {return yawIntegral;}
     402:	cf 93       	push	r28
     404:	df 93       	push	r29
     406:	1f 92       	push	r1
     408:	1f 92       	push	r1
     40a:	cd b7       	in	r28, 0x3d	; 61
     40c:	de b7       	in	r29, 0x3e	; 62
     40e:	9a 83       	std	Y+2, r25	; 0x02
     410:	89 83       	std	Y+1, r24	; 0x01
     412:	89 81       	ldd	r24, Y+1	; 0x01
     414:	9a 81       	ldd	r25, Y+2	; 0x02
     416:	fc 01       	movw	r30, r24
     418:	80 8d       	ldd	r24, Z+24	; 0x18
     41a:	91 8d       	ldd	r25, Z+25	; 0x19
     41c:	a2 8d       	ldd	r26, Z+26	; 0x1a
     41e:	b3 8d       	ldd	r27, Z+27	; 0x1b
     420:	bc 01       	movw	r22, r24
     422:	cd 01       	movw	r24, r26
     424:	0f 90       	pop	r0
     426:	0f 90       	pop	r0
     428:	df 91       	pop	r29
     42a:	cf 91       	pop	r28
     42c:	08 95       	ret

0000042e <_ZN10helicopter5model11SystemModel11YawIntegralEf>:
			void YawIntegral(float val) { yawIntegral = val;}
     42e:	cf 93       	push	r28
     430:	df 93       	push	r29
     432:	00 d0       	rcall	.+0      	; 0x434 <_ZN10helicopter5model11SystemModel11YawIntegralEf+0x6>
     434:	00 d0       	rcall	.+0      	; 0x436 <_ZN10helicopter5model11SystemModel11YawIntegralEf+0x8>
     436:	cd b7       	in	r28, 0x3d	; 61
     438:	de b7       	in	r29, 0x3e	; 62
     43a:	9a 83       	std	Y+2, r25	; 0x02
     43c:	89 83       	std	Y+1, r24	; 0x01
     43e:	4b 83       	std	Y+3, r20	; 0x03
     440:	5c 83       	std	Y+4, r21	; 0x04
     442:	6d 83       	std	Y+5, r22	; 0x05
     444:	7e 83       	std	Y+6, r23	; 0x06
     446:	29 81       	ldd	r18, Y+1	; 0x01
     448:	3a 81       	ldd	r19, Y+2	; 0x02
     44a:	8b 81       	ldd	r24, Y+3	; 0x03
     44c:	9c 81       	ldd	r25, Y+4	; 0x04
     44e:	ad 81       	ldd	r26, Y+5	; 0x05
     450:	be 81       	ldd	r27, Y+6	; 0x06
     452:	f9 01       	movw	r30, r18
     454:	80 8f       	std	Z+24, r24	; 0x18
     456:	91 8f       	std	Z+25, r25	; 0x19
     458:	a2 8f       	std	Z+26, r26	; 0x1a
     45a:	b3 8f       	std	Z+27, r27	; 0x1b
     45c:	26 96       	adiw	r28, 0x06	; 6
     45e:	0f b6       	in	r0, 0x3f	; 63
     460:	f8 94       	cli
     462:	de bf       	out	0x3e, r29	; 62
     464:	0f be       	out	0x3f, r0	; 63
     466:	cd bf       	out	0x3d, r28	; 61
     468:	df 91       	pop	r29
     46a:	cf 91       	pop	r28
     46c:	08 95       	ret

0000046e <_ZN10helicopter5model11SystemModel15YawProportionalEf>:

			float YawProportional() const {return yawProportional;}
			void YawProportional(float val) { yawProportional = val;}
     46e:	cf 93       	push	r28
     470:	df 93       	push	r29
     472:	00 d0       	rcall	.+0      	; 0x474 <_ZN10helicopter5model11SystemModel15YawProportionalEf+0x6>
     474:	00 d0       	rcall	.+0      	; 0x476 <_ZN10helicopter5model11SystemModel15YawProportionalEf+0x8>
     476:	cd b7       	in	r28, 0x3d	; 61
     478:	de b7       	in	r29, 0x3e	; 62
     47a:	9a 83       	std	Y+2, r25	; 0x02
     47c:	89 83       	std	Y+1, r24	; 0x01
     47e:	4b 83       	std	Y+3, r20	; 0x03
     480:	5c 83       	std	Y+4, r21	; 0x04
     482:	6d 83       	std	Y+5, r22	; 0x05
     484:	7e 83       	std	Y+6, r23	; 0x06
     486:	29 81       	ldd	r18, Y+1	; 0x01
     488:	3a 81       	ldd	r19, Y+2	; 0x02
     48a:	8b 81       	ldd	r24, Y+3	; 0x03
     48c:	9c 81       	ldd	r25, Y+4	; 0x04
     48e:	ad 81       	ldd	r26, Y+5	; 0x05
     490:	be 81       	ldd	r27, Y+6	; 0x06
     492:	f9 01       	movw	r30, r18
     494:	84 8f       	std	Z+28, r24	; 0x1c
     496:	95 8f       	std	Z+29, r25	; 0x1d
     498:	a6 8f       	std	Z+30, r26	; 0x1e
     49a:	b7 8f       	std	Z+31, r27	; 0x1f
     49c:	26 96       	adiw	r28, 0x06	; 6
     49e:	0f b6       	in	r0, 0x3f	; 63
     4a0:	f8 94       	cli
     4a2:	de bf       	out	0x3e, r29	; 62
     4a4:	0f be       	out	0x3f, r0	; 63
     4a6:	cd bf       	out	0x3d, r28	; 61
     4a8:	df 91       	pop	r29
     4aa:	cf 91       	pop	r28
     4ac:	08 95       	ret

000004ae <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf>:

			float YawDerivativeError() const {return yawDerivativeError;}
			void YawDerivativeError(float val) { yawDerivativeError = val;}								
     4ae:	cf 93       	push	r28
     4b0:	df 93       	push	r29
     4b2:	00 d0       	rcall	.+0      	; 0x4b4 <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf+0x6>
     4b4:	00 d0       	rcall	.+0      	; 0x4b6 <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf+0x8>
     4b6:	cd b7       	in	r28, 0x3d	; 61
     4b8:	de b7       	in	r29, 0x3e	; 62
     4ba:	9a 83       	std	Y+2, r25	; 0x02
     4bc:	89 83       	std	Y+1, r24	; 0x01
     4be:	4b 83       	std	Y+3, r20	; 0x03
     4c0:	5c 83       	std	Y+4, r21	; 0x04
     4c2:	6d 83       	std	Y+5, r22	; 0x05
     4c4:	7e 83       	std	Y+6, r23	; 0x06
     4c6:	29 81       	ldd	r18, Y+1	; 0x01
     4c8:	3a 81       	ldd	r19, Y+2	; 0x02
     4ca:	8b 81       	ldd	r24, Y+3	; 0x03
     4cc:	9c 81       	ldd	r25, Y+4	; 0x04
     4ce:	ad 81       	ldd	r26, Y+5	; 0x05
     4d0:	be 81       	ldd	r27, Y+6	; 0x06
     4d2:	f9 01       	movw	r30, r18
     4d4:	80 a3       	std	Z+32, r24	; 0x20
     4d6:	91 a3       	std	Z+33, r25	; 0x21
     4d8:	a2 a3       	std	Z+34, r26	; 0x22
     4da:	b3 a3       	std	Z+35, r27	; 0x23
     4dc:	26 96       	adiw	r28, 0x06	; 6
     4de:	0f b6       	in	r0, 0x3f	; 63
     4e0:	f8 94       	cli
     4e2:	de bf       	out	0x3e, r29	; 62
     4e4:	0f be       	out	0x3f, r0	; 63
     4e6:	cd bf       	out	0x3d, r28	; 61
     4e8:	df 91       	pop	r29
     4ea:	cf 91       	pop	r28
     4ec:	08 95       	ret

000004ee <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>:
																							
		
		
		
			float XNEDBodyFrame() const {return xNEDBodyFrame;}
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	1f 92       	push	r1
     4f4:	1f 92       	push	r1
     4f6:	cd b7       	in	r28, 0x3d	; 61
     4f8:	de b7       	in	r29, 0x3e	; 62
     4fa:	9a 83       	std	Y+2, r25	; 0x02
     4fc:	89 83       	std	Y+1, r24	; 0x01
     4fe:	89 81       	ldd	r24, Y+1	; 0x01
     500:	9a 81       	ldd	r25, Y+2	; 0x02
     502:	fc 01       	movw	r30, r24
     504:	84 a1       	ldd	r24, Z+36	; 0x24
     506:	95 a1       	ldd	r25, Z+37	; 0x25
     508:	a6 a1       	ldd	r26, Z+38	; 0x26
     50a:	b7 a1       	ldd	r27, Z+39	; 0x27
     50c:	bc 01       	movw	r22, r24
     50e:	cd 01       	movw	r24, r26
     510:	0f 90       	pop	r0
     512:	0f 90       	pop	r0
     514:	df 91       	pop	r29
     516:	cf 91       	pop	r28
     518:	08 95       	ret

0000051a <_ZNK10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEv>:
			void XNEDBodyFrame(float val) { xNEDBodyFrame = val;}
						
			float ReferenceXNEDBodyFrame() const {return referenceXNEDBodyFrame;}
     51a:	cf 93       	push	r28
     51c:	df 93       	push	r29
     51e:	1f 92       	push	r1
     520:	1f 92       	push	r1
     522:	cd b7       	in	r28, 0x3d	; 61
     524:	de b7       	in	r29, 0x3e	; 62
     526:	9a 83       	std	Y+2, r25	; 0x02
     528:	89 83       	std	Y+1, r24	; 0x01
     52a:	89 81       	ldd	r24, Y+1	; 0x01
     52c:	9a 81       	ldd	r25, Y+2	; 0x02
     52e:	fc 01       	movw	r30, r24
     530:	80 a5       	ldd	r24, Z+40	; 0x28
     532:	91 a5       	ldd	r25, Z+41	; 0x29
     534:	a2 a5       	ldd	r26, Z+42	; 0x2a
     536:	b3 a5       	ldd	r27, Z+43	; 0x2b
     538:	bc 01       	movw	r22, r24
     53a:	cd 01       	movw	r24, r26
     53c:	0f 90       	pop	r0
     53e:	0f 90       	pop	r0
     540:	df 91       	pop	r29
     542:	cf 91       	pop	r28
     544:	08 95       	ret

00000546 <_ZNK10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEv>:
			void ReferenceXNEDBodyFrame(float val) { referenceXNEDBodyFrame = val;}

			float LongitudeControlBeforeServoLimitsAdjustment() const {return longitudeControlBeforeServoLimitsAdjustment;}
     546:	cf 93       	push	r28
     548:	df 93       	push	r29
     54a:	1f 92       	push	r1
     54c:	1f 92       	push	r1
     54e:	cd b7       	in	r28, 0x3d	; 61
     550:	de b7       	in	r29, 0x3e	; 62
     552:	9a 83       	std	Y+2, r25	; 0x02
     554:	89 83       	std	Y+1, r24	; 0x01
     556:	89 81       	ldd	r24, Y+1	; 0x01
     558:	9a 81       	ldd	r25, Y+2	; 0x02
     55a:	fc 01       	movw	r30, r24
     55c:	84 a5       	ldd	r24, Z+44	; 0x2c
     55e:	95 a5       	ldd	r25, Z+45	; 0x2d
     560:	a6 a5       	ldd	r26, Z+46	; 0x2e
     562:	b7 a5       	ldd	r27, Z+47	; 0x2f
     564:	bc 01       	movw	r22, r24
     566:	cd 01       	movw	r24, r26
     568:	0f 90       	pop	r0
     56a:	0f 90       	pop	r0
     56c:	df 91       	pop	r29
     56e:	cf 91       	pop	r28
     570:	08 95       	ret

00000572 <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf>:
			void LongitudeControlBeforeServoLimitsAdjustment(float val) { longitudeControlBeforeServoLimitsAdjustment = val;}
     572:	cf 93       	push	r28
     574:	df 93       	push	r29
     576:	00 d0       	rcall	.+0      	; 0x578 <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf+0x6>
     578:	00 d0       	rcall	.+0      	; 0x57a <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf+0x8>
     57a:	cd b7       	in	r28, 0x3d	; 61
     57c:	de b7       	in	r29, 0x3e	; 62
     57e:	9a 83       	std	Y+2, r25	; 0x02
     580:	89 83       	std	Y+1, r24	; 0x01
     582:	4b 83       	std	Y+3, r20	; 0x03
     584:	5c 83       	std	Y+4, r21	; 0x04
     586:	6d 83       	std	Y+5, r22	; 0x05
     588:	7e 83       	std	Y+6, r23	; 0x06
     58a:	29 81       	ldd	r18, Y+1	; 0x01
     58c:	3a 81       	ldd	r19, Y+2	; 0x02
     58e:	8b 81       	ldd	r24, Y+3	; 0x03
     590:	9c 81       	ldd	r25, Y+4	; 0x04
     592:	ad 81       	ldd	r26, Y+5	; 0x05
     594:	be 81       	ldd	r27, Y+6	; 0x06
     596:	f9 01       	movw	r30, r18
     598:	84 a7       	std	Z+44, r24	; 0x2c
     59a:	95 a7       	std	Z+45, r25	; 0x2d
     59c:	a6 a7       	std	Z+46, r26	; 0x2e
     59e:	b7 a7       	std	Z+47, r27	; 0x2f
     5a0:	26 96       	adiw	r28, 0x06	; 6
     5a2:	0f b6       	in	r0, 0x3f	; 63
     5a4:	f8 94       	cli
     5a6:	de bf       	out	0x3e, r29	; 62
     5a8:	0f be       	out	0x3f, r0	; 63
     5aa:	cd bf       	out	0x3d, r28	; 61
     5ac:	df 91       	pop	r29
     5ae:	cf 91       	pop	r28
     5b0:	08 95       	ret

000005b2 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>:

			float LongitudeControl() const {return longitudeControl;}
     5b2:	cf 93       	push	r28
     5b4:	df 93       	push	r29
     5b6:	1f 92       	push	r1
     5b8:	1f 92       	push	r1
     5ba:	cd b7       	in	r28, 0x3d	; 61
     5bc:	de b7       	in	r29, 0x3e	; 62
     5be:	9a 83       	std	Y+2, r25	; 0x02
     5c0:	89 83       	std	Y+1, r24	; 0x01
     5c2:	89 81       	ldd	r24, Y+1	; 0x01
     5c4:	9a 81       	ldd	r25, Y+2	; 0x02
     5c6:	fc 01       	movw	r30, r24
     5c8:	80 a9       	ldd	r24, Z+48	; 0x30
     5ca:	91 a9       	ldd	r25, Z+49	; 0x31
     5cc:	a2 a9       	ldd	r26, Z+50	; 0x32
     5ce:	b3 a9       	ldd	r27, Z+51	; 0x33
     5d0:	bc 01       	movw	r22, r24
     5d2:	cd 01       	movw	r24, r26
     5d4:	0f 90       	pop	r0
     5d6:	0f 90       	pop	r0
     5d8:	df 91       	pop	r29
     5da:	cf 91       	pop	r28
     5dc:	08 95       	ret

000005de <_ZN10helicopter5model11SystemModel16LongitudeControlEf>:
			void LongitudeControl(float val) { longitudeControl = val;}
     5de:	cf 93       	push	r28
     5e0:	df 93       	push	r29
     5e2:	00 d0       	rcall	.+0      	; 0x5e4 <_ZN10helicopter5model11SystemModel16LongitudeControlEf+0x6>
     5e4:	00 d0       	rcall	.+0      	; 0x5e6 <_ZN10helicopter5model11SystemModel16LongitudeControlEf+0x8>
     5e6:	cd b7       	in	r28, 0x3d	; 61
     5e8:	de b7       	in	r29, 0x3e	; 62
     5ea:	9a 83       	std	Y+2, r25	; 0x02
     5ec:	89 83       	std	Y+1, r24	; 0x01
     5ee:	4b 83       	std	Y+3, r20	; 0x03
     5f0:	5c 83       	std	Y+4, r21	; 0x04
     5f2:	6d 83       	std	Y+5, r22	; 0x05
     5f4:	7e 83       	std	Y+6, r23	; 0x06
     5f6:	29 81       	ldd	r18, Y+1	; 0x01
     5f8:	3a 81       	ldd	r19, Y+2	; 0x02
     5fa:	8b 81       	ldd	r24, Y+3	; 0x03
     5fc:	9c 81       	ldd	r25, Y+4	; 0x04
     5fe:	ad 81       	ldd	r26, Y+5	; 0x05
     600:	be 81       	ldd	r27, Y+6	; 0x06
     602:	f9 01       	movw	r30, r18
     604:	80 ab       	std	Z+48, r24	; 0x30
     606:	91 ab       	std	Z+49, r25	; 0x31
     608:	a2 ab       	std	Z+50, r26	; 0x32
     60a:	b3 ab       	std	Z+51, r27	; 0x33
     60c:	26 96       	adiw	r28, 0x06	; 6
     60e:	0f b6       	in	r0, 0x3f	; 63
     610:	f8 94       	cli
     612:	de bf       	out	0x3e, r29	; 62
     614:	0f be       	out	0x3f, r0	; 63
     616:	cd bf       	out	0x3d, r28	; 61
     618:	df 91       	pop	r29
     61a:	cf 91       	pop	r28
     61c:	08 95       	ret

0000061e <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>:
				
			float XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
     61e:	cf 93       	push	r28
     620:	df 93       	push	r29
     622:	1f 92       	push	r1
     624:	1f 92       	push	r1
     626:	cd b7       	in	r28, 0x3d	; 61
     628:	de b7       	in	r29, 0x3e	; 62
     62a:	9a 83       	std	Y+2, r25	; 0x02
     62c:	89 83       	std	Y+1, r24	; 0x01
     62e:	89 81       	ldd	r24, Y+1	; 0x01
     630:	9a 81       	ldd	r25, Y+2	; 0x02
     632:	fc 01       	movw	r30, r24
     634:	84 a9       	ldd	r24, Z+52	; 0x34
     636:	95 a9       	ldd	r25, Z+53	; 0x35
     638:	a6 a9       	ldd	r26, Z+54	; 0x36
     63a:	b7 a9       	ldd	r27, Z+55	; 0x37
     63c:	bc 01       	movw	r22, r24
     63e:	cd 01       	movw	r24, r26
     640:	0f 90       	pop	r0
     642:	0f 90       	pop	r0
     644:	df 91       	pop	r29
     646:	cf 91       	pop	r28
     648:	08 95       	ret

0000064a <_ZNK10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEv>:
			void XVelocityMetersPerSecond(float val) { xVelocityMetersPerSecond = val;}
				
			float ReferenceXVelocityMetersPerSecond() const {return referenceXVelocityMetersPerSecond;}
     64a:	cf 93       	push	r28
     64c:	df 93       	push	r29
     64e:	1f 92       	push	r1
     650:	1f 92       	push	r1
     652:	cd b7       	in	r28, 0x3d	; 61
     654:	de b7       	in	r29, 0x3e	; 62
     656:	9a 83       	std	Y+2, r25	; 0x02
     658:	89 83       	std	Y+1, r24	; 0x01
     65a:	89 81       	ldd	r24, Y+1	; 0x01
     65c:	9a 81       	ldd	r25, Y+2	; 0x02
     65e:	fc 01       	movw	r30, r24
     660:	80 ad       	ldd	r24, Z+56	; 0x38
     662:	91 ad       	ldd	r25, Z+57	; 0x39
     664:	a2 ad       	ldd	r26, Z+58	; 0x3a
     666:	b3 ad       	ldd	r27, Z+59	; 0x3b
     668:	bc 01       	movw	r22, r24
     66a:	cd 01       	movw	r24, r26
     66c:	0f 90       	pop	r0
     66e:	0f 90       	pop	r0
     670:	df 91       	pop	r29
     672:	cf 91       	pop	r28
     674:	08 95       	ret

00000676 <_ZNK10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEv>:
			void ReferenceXVelocityMetersPerSecond(float val) { referenceXVelocityMetersPerSecond = val;}
				
			float XLongitudinalOuterLoopControl() const {return xLongitudinalOuterLoopControl;}
     676:	cf 93       	push	r28
     678:	df 93       	push	r29
     67a:	1f 92       	push	r1
     67c:	1f 92       	push	r1
     67e:	cd b7       	in	r28, 0x3d	; 61
     680:	de b7       	in	r29, 0x3e	; 62
     682:	9a 83       	std	Y+2, r25	; 0x02
     684:	89 83       	std	Y+1, r24	; 0x01
     686:	89 81       	ldd	r24, Y+1	; 0x01
     688:	9a 81       	ldd	r25, Y+2	; 0x02
     68a:	fc 01       	movw	r30, r24
     68c:	84 ad       	ldd	r24, Z+60	; 0x3c
     68e:	95 ad       	ldd	r25, Z+61	; 0x3d
     690:	a6 ad       	ldd	r26, Z+62	; 0x3e
     692:	b7 ad       	ldd	r27, Z+63	; 0x3f
     694:	bc 01       	movw	r22, r24
     696:	cd 01       	movw	r24, r26
     698:	0f 90       	pop	r0
     69a:	0f 90       	pop	r0
     69c:	df 91       	pop	r29
     69e:	cf 91       	pop	r28
     6a0:	08 95       	ret

000006a2 <_ZN10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEf>:
			void XLongitudinalOuterLoopControl(float val) { xLongitudinalOuterLoopControl = val;}
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	00 d0       	rcall	.+0      	; 0x6a8 <_ZN10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEf+0x6>
     6a8:	00 d0       	rcall	.+0      	; 0x6aa <_ZN10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEf+0x8>
     6aa:	cd b7       	in	r28, 0x3d	; 61
     6ac:	de b7       	in	r29, 0x3e	; 62
     6ae:	9a 83       	std	Y+2, r25	; 0x02
     6b0:	89 83       	std	Y+1, r24	; 0x01
     6b2:	4b 83       	std	Y+3, r20	; 0x03
     6b4:	5c 83       	std	Y+4, r21	; 0x04
     6b6:	6d 83       	std	Y+5, r22	; 0x05
     6b8:	7e 83       	std	Y+6, r23	; 0x06
     6ba:	29 81       	ldd	r18, Y+1	; 0x01
     6bc:	3a 81       	ldd	r19, Y+2	; 0x02
     6be:	8b 81       	ldd	r24, Y+3	; 0x03
     6c0:	9c 81       	ldd	r25, Y+4	; 0x04
     6c2:	ad 81       	ldd	r26, Y+5	; 0x05
     6c4:	be 81       	ldd	r27, Y+6	; 0x06
     6c6:	f9 01       	movw	r30, r18
     6c8:	84 af       	std	Z+60, r24	; 0x3c
     6ca:	95 af       	std	Z+61, r25	; 0x3d
     6cc:	a6 af       	std	Z+62, r26	; 0x3e
     6ce:	b7 af       	std	Z+63, r27	; 0x3f
     6d0:	26 96       	adiw	r28, 0x06	; 6
     6d2:	0f b6       	in	r0, 0x3f	; 63
     6d4:	f8 94       	cli
     6d6:	de bf       	out	0x3e, r29	; 62
     6d8:	0f be       	out	0x3f, r0	; 63
     6da:	cd bf       	out	0x3d, r28	; 61
     6dc:	df 91       	pop	r29
     6de:	cf 91       	pop	r28
     6e0:	08 95       	ret

000006e2 <_ZN10helicopter5model11SystemModel13XProportionalEf>:
				
			float XProportional() const {return xProportional;}
			void XProportional(float val) { xProportional = val;}
     6e2:	cf 93       	push	r28
     6e4:	df 93       	push	r29
     6e6:	00 d0       	rcall	.+0      	; 0x6e8 <_ZN10helicopter5model11SystemModel13XProportionalEf+0x6>
     6e8:	00 d0       	rcall	.+0      	; 0x6ea <_ZN10helicopter5model11SystemModel13XProportionalEf+0x8>
     6ea:	cd b7       	in	r28, 0x3d	; 61
     6ec:	de b7       	in	r29, 0x3e	; 62
     6ee:	9a 83       	std	Y+2, r25	; 0x02
     6f0:	89 83       	std	Y+1, r24	; 0x01
     6f2:	4b 83       	std	Y+3, r20	; 0x03
     6f4:	5c 83       	std	Y+4, r21	; 0x04
     6f6:	6d 83       	std	Y+5, r22	; 0x05
     6f8:	7e 83       	std	Y+6, r23	; 0x06
     6fa:	89 81       	ldd	r24, Y+1	; 0x01
     6fc:	9a 81       	ldd	r25, Y+2	; 0x02
     6fe:	9c 01       	movw	r18, r24
     700:	20 5c       	subi	r18, 0xC0	; 192
     702:	3f 4f       	sbci	r19, 0xFF	; 255
     704:	8b 81       	ldd	r24, Y+3	; 0x03
     706:	9c 81       	ldd	r25, Y+4	; 0x04
     708:	ad 81       	ldd	r26, Y+5	; 0x05
     70a:	be 81       	ldd	r27, Y+6	; 0x06
     70c:	f9 01       	movw	r30, r18
     70e:	80 83       	st	Z, r24
     710:	91 83       	std	Z+1, r25	; 0x01
     712:	a2 83       	std	Z+2, r26	; 0x02
     714:	b3 83       	std	Z+3, r27	; 0x03
     716:	26 96       	adiw	r28, 0x06	; 6
     718:	0f b6       	in	r0, 0x3f	; 63
     71a:	f8 94       	cli
     71c:	de bf       	out	0x3e, r29	; 62
     71e:	0f be       	out	0x3f, r0	; 63
     720:	cd bf       	out	0x3d, r28	; 61
     722:	df 91       	pop	r29
     724:	cf 91       	pop	r28
     726:	08 95       	ret

00000728 <_ZNK10helicopter5model11SystemModel9XIntegralEv>:
				
			float XIntegral() const {return xIntegral;}
     728:	cf 93       	push	r28
     72a:	df 93       	push	r29
     72c:	1f 92       	push	r1
     72e:	1f 92       	push	r1
     730:	cd b7       	in	r28, 0x3d	; 61
     732:	de b7       	in	r29, 0x3e	; 62
     734:	9a 83       	std	Y+2, r25	; 0x02
     736:	89 83       	std	Y+1, r24	; 0x01
     738:	89 81       	ldd	r24, Y+1	; 0x01
     73a:	9a 81       	ldd	r25, Y+2	; 0x02
     73c:	8c 5b       	subi	r24, 0xBC	; 188
     73e:	9f 4f       	sbci	r25, 0xFF	; 255
     740:	fc 01       	movw	r30, r24
     742:	80 81       	ld	r24, Z
     744:	91 81       	ldd	r25, Z+1	; 0x01
     746:	a2 81       	ldd	r26, Z+2	; 0x02
     748:	b3 81       	ldd	r27, Z+3	; 0x03
     74a:	bc 01       	movw	r22, r24
     74c:	cd 01       	movw	r24, r26
     74e:	0f 90       	pop	r0
     750:	0f 90       	pop	r0
     752:	df 91       	pop	r29
     754:	cf 91       	pop	r28
     756:	08 95       	ret

00000758 <_ZN10helicopter5model11SystemModel9XIntegralEf>:
			void XIntegral(float val) { xIntegral = val;}
     758:	cf 93       	push	r28
     75a:	df 93       	push	r29
     75c:	00 d0       	rcall	.+0      	; 0x75e <_ZN10helicopter5model11SystemModel9XIntegralEf+0x6>
     75e:	00 d0       	rcall	.+0      	; 0x760 <_ZN10helicopter5model11SystemModel9XIntegralEf+0x8>
     760:	cd b7       	in	r28, 0x3d	; 61
     762:	de b7       	in	r29, 0x3e	; 62
     764:	9a 83       	std	Y+2, r25	; 0x02
     766:	89 83       	std	Y+1, r24	; 0x01
     768:	4b 83       	std	Y+3, r20	; 0x03
     76a:	5c 83       	std	Y+4, r21	; 0x04
     76c:	6d 83       	std	Y+5, r22	; 0x05
     76e:	7e 83       	std	Y+6, r23	; 0x06
     770:	89 81       	ldd	r24, Y+1	; 0x01
     772:	9a 81       	ldd	r25, Y+2	; 0x02
     774:	9c 01       	movw	r18, r24
     776:	2c 5b       	subi	r18, 0xBC	; 188
     778:	3f 4f       	sbci	r19, 0xFF	; 255
     77a:	8b 81       	ldd	r24, Y+3	; 0x03
     77c:	9c 81       	ldd	r25, Y+4	; 0x04
     77e:	ad 81       	ldd	r26, Y+5	; 0x05
     780:	be 81       	ldd	r27, Y+6	; 0x06
     782:	f9 01       	movw	r30, r18
     784:	80 83       	st	Z, r24
     786:	91 83       	std	Z+1, r25	; 0x01
     788:	a2 83       	std	Z+2, r26	; 0x02
     78a:	b3 83       	std	Z+3, r27	; 0x03
     78c:	26 96       	adiw	r28, 0x06	; 6
     78e:	0f b6       	in	r0, 0x3f	; 63
     790:	f8 94       	cli
     792:	de bf       	out	0x3e, r29	; 62
     794:	0f be       	out	0x3f, r0	; 63
     796:	cd bf       	out	0x3d, r28	; 61
     798:	df 91       	pop	r29
     79a:	cf 91       	pop	r28
     79c:	08 95       	ret

0000079e <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf>:
				
			float XDerivativeError() const {return xDerivativeError;}
			void XDerivativeError(float val) { xDerivativeError = val;}
     79e:	cf 93       	push	r28
     7a0:	df 93       	push	r29
     7a2:	00 d0       	rcall	.+0      	; 0x7a4 <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf+0x6>
     7a4:	00 d0       	rcall	.+0      	; 0x7a6 <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf+0x8>
     7a6:	cd b7       	in	r28, 0x3d	; 61
     7a8:	de b7       	in	r29, 0x3e	; 62
     7aa:	9a 83       	std	Y+2, r25	; 0x02
     7ac:	89 83       	std	Y+1, r24	; 0x01
     7ae:	4b 83       	std	Y+3, r20	; 0x03
     7b0:	5c 83       	std	Y+4, r21	; 0x04
     7b2:	6d 83       	std	Y+5, r22	; 0x05
     7b4:	7e 83       	std	Y+6, r23	; 0x06
     7b6:	89 81       	ldd	r24, Y+1	; 0x01
     7b8:	9a 81       	ldd	r25, Y+2	; 0x02
     7ba:	9c 01       	movw	r18, r24
     7bc:	28 5b       	subi	r18, 0xB8	; 184
     7be:	3f 4f       	sbci	r19, 0xFF	; 255
     7c0:	8b 81       	ldd	r24, Y+3	; 0x03
     7c2:	9c 81       	ldd	r25, Y+4	; 0x04
     7c4:	ad 81       	ldd	r26, Y+5	; 0x05
     7c6:	be 81       	ldd	r27, Y+6	; 0x06
     7c8:	f9 01       	movw	r30, r18
     7ca:	80 83       	st	Z, r24
     7cc:	91 83       	std	Z+1, r25	; 0x01
     7ce:	a2 83       	std	Z+2, r26	; 0x02
     7d0:	b3 83       	std	Z+3, r27	; 0x03
     7d2:	26 96       	adiw	r28, 0x06	; 6
     7d4:	0f b6       	in	r0, 0x3f	; 63
     7d6:	f8 94       	cli
     7d8:	de bf       	out	0x3e, r29	; 62
     7da:	0f be       	out	0x3f, r0	; 63
     7dc:	cd bf       	out	0x3d, r28	; 61
     7de:	df 91       	pop	r29
     7e0:	cf 91       	pop	r28
     7e2:	08 95       	ret

000007e4 <_ZNK10helicopter5model11SystemModel17ThetaPitchDegreesEv>:
				
		
			float ThetaPitchDegrees() const {return thetaPitchDegrees;}
     7e4:	cf 93       	push	r28
     7e6:	df 93       	push	r29
     7e8:	1f 92       	push	r1
     7ea:	1f 92       	push	r1
     7ec:	cd b7       	in	r28, 0x3d	; 61
     7ee:	de b7       	in	r29, 0x3e	; 62
     7f0:	9a 83       	std	Y+2, r25	; 0x02
     7f2:	89 83       	std	Y+1, r24	; 0x01
     7f4:	89 81       	ldd	r24, Y+1	; 0x01
     7f6:	9a 81       	ldd	r25, Y+2	; 0x02
     7f8:	84 5b       	subi	r24, 0xB4	; 180
     7fa:	9f 4f       	sbci	r25, 0xFF	; 255
     7fc:	fc 01       	movw	r30, r24
     7fe:	80 81       	ld	r24, Z
     800:	91 81       	ldd	r25, Z+1	; 0x01
     802:	a2 81       	ldd	r26, Z+2	; 0x02
     804:	b3 81       	ldd	r27, Z+3	; 0x03
     806:	bc 01       	movw	r22, r24
     808:	cd 01       	movw	r24, r26
     80a:	0f 90       	pop	r0
     80c:	0f 90       	pop	r0
     80e:	df 91       	pop	r29
     810:	cf 91       	pop	r28
     812:	08 95       	ret

00000814 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>:
						
						
						


			float YNEDBodyFrame() const {return yNEDBodyFrame;}
     814:	cf 93       	push	r28
     816:	df 93       	push	r29
     818:	1f 92       	push	r1
     81a:	1f 92       	push	r1
     81c:	cd b7       	in	r28, 0x3d	; 61
     81e:	de b7       	in	r29, 0x3e	; 62
     820:	9a 83       	std	Y+2, r25	; 0x02
     822:	89 83       	std	Y+1, r24	; 0x01
     824:	89 81       	ldd	r24, Y+1	; 0x01
     826:	9a 81       	ldd	r25, Y+2	; 0x02
     828:	80 5b       	subi	r24, 0xB0	; 176
     82a:	9f 4f       	sbci	r25, 0xFF	; 255
     82c:	fc 01       	movw	r30, r24
     82e:	80 81       	ld	r24, Z
     830:	91 81       	ldd	r25, Z+1	; 0x01
     832:	a2 81       	ldd	r26, Z+2	; 0x02
     834:	b3 81       	ldd	r27, Z+3	; 0x03
     836:	bc 01       	movw	r22, r24
     838:	cd 01       	movw	r24, r26
     83a:	0f 90       	pop	r0
     83c:	0f 90       	pop	r0
     83e:	df 91       	pop	r29
     840:	cf 91       	pop	r28
     842:	08 95       	ret

00000844 <_ZNK10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEv>:
			void YNEDBodyFrame(float val) { yNEDBodyFrame = val;}

			float ReferenceYNEDBodyFrame() const {return referenceYNEDBodyFrame;}
     844:	cf 93       	push	r28
     846:	df 93       	push	r29
     848:	1f 92       	push	r1
     84a:	1f 92       	push	r1
     84c:	cd b7       	in	r28, 0x3d	; 61
     84e:	de b7       	in	r29, 0x3e	; 62
     850:	9a 83       	std	Y+2, r25	; 0x02
     852:	89 83       	std	Y+1, r24	; 0x01
     854:	89 81       	ldd	r24, Y+1	; 0x01
     856:	9a 81       	ldd	r25, Y+2	; 0x02
     858:	8c 5a       	subi	r24, 0xAC	; 172
     85a:	9f 4f       	sbci	r25, 0xFF	; 255
     85c:	fc 01       	movw	r30, r24
     85e:	80 81       	ld	r24, Z
     860:	91 81       	ldd	r25, Z+1	; 0x01
     862:	a2 81       	ldd	r26, Z+2	; 0x02
     864:	b3 81       	ldd	r27, Z+3	; 0x03
     866:	bc 01       	movw	r22, r24
     868:	cd 01       	movw	r24, r26
     86a:	0f 90       	pop	r0
     86c:	0f 90       	pop	r0
     86e:	df 91       	pop	r29
     870:	cf 91       	pop	r28
     872:	08 95       	ret

00000874 <_ZNK10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEv>:
			void ReferenceYNEDBodyFrame(float val) { referenceYNEDBodyFrame = val;}

			float LateralControlBeforeServoLimitsAdjustment() const {return lateralControlBeforeServoLimitsAdjustment;}
     874:	cf 93       	push	r28
     876:	df 93       	push	r29
     878:	1f 92       	push	r1
     87a:	1f 92       	push	r1
     87c:	cd b7       	in	r28, 0x3d	; 61
     87e:	de b7       	in	r29, 0x3e	; 62
     880:	9a 83       	std	Y+2, r25	; 0x02
     882:	89 83       	std	Y+1, r24	; 0x01
     884:	89 81       	ldd	r24, Y+1	; 0x01
     886:	9a 81       	ldd	r25, Y+2	; 0x02
     888:	88 5a       	subi	r24, 0xA8	; 168
     88a:	9f 4f       	sbci	r25, 0xFF	; 255
     88c:	fc 01       	movw	r30, r24
     88e:	80 81       	ld	r24, Z
     890:	91 81       	ldd	r25, Z+1	; 0x01
     892:	a2 81       	ldd	r26, Z+2	; 0x02
     894:	b3 81       	ldd	r27, Z+3	; 0x03
     896:	bc 01       	movw	r22, r24
     898:	cd 01       	movw	r24, r26
     89a:	0f 90       	pop	r0
     89c:	0f 90       	pop	r0
     89e:	df 91       	pop	r29
     8a0:	cf 91       	pop	r28
     8a2:	08 95       	ret

000008a4 <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf>:
			void LateralControlBeforeServoLimitsAdjustment(float val) { lateralControlBeforeServoLimitsAdjustment = val;}
     8a4:	cf 93       	push	r28
     8a6:	df 93       	push	r29
     8a8:	00 d0       	rcall	.+0      	; 0x8aa <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf+0x6>
     8aa:	00 d0       	rcall	.+0      	; 0x8ac <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf+0x8>
     8ac:	cd b7       	in	r28, 0x3d	; 61
     8ae:	de b7       	in	r29, 0x3e	; 62
     8b0:	9a 83       	std	Y+2, r25	; 0x02
     8b2:	89 83       	std	Y+1, r24	; 0x01
     8b4:	4b 83       	std	Y+3, r20	; 0x03
     8b6:	5c 83       	std	Y+4, r21	; 0x04
     8b8:	6d 83       	std	Y+5, r22	; 0x05
     8ba:	7e 83       	std	Y+6, r23	; 0x06
     8bc:	89 81       	ldd	r24, Y+1	; 0x01
     8be:	9a 81       	ldd	r25, Y+2	; 0x02
     8c0:	9c 01       	movw	r18, r24
     8c2:	28 5a       	subi	r18, 0xA8	; 168
     8c4:	3f 4f       	sbci	r19, 0xFF	; 255
     8c6:	8b 81       	ldd	r24, Y+3	; 0x03
     8c8:	9c 81       	ldd	r25, Y+4	; 0x04
     8ca:	ad 81       	ldd	r26, Y+5	; 0x05
     8cc:	be 81       	ldd	r27, Y+6	; 0x06
     8ce:	f9 01       	movw	r30, r18
     8d0:	80 83       	st	Z, r24
     8d2:	91 83       	std	Z+1, r25	; 0x01
     8d4:	a2 83       	std	Z+2, r26	; 0x02
     8d6:	b3 83       	std	Z+3, r27	; 0x03
     8d8:	26 96       	adiw	r28, 0x06	; 6
     8da:	0f b6       	in	r0, 0x3f	; 63
     8dc:	f8 94       	cli
     8de:	de bf       	out	0x3e, r29	; 62
     8e0:	0f be       	out	0x3f, r0	; 63
     8e2:	cd bf       	out	0x3d, r28	; 61
     8e4:	df 91       	pop	r29
     8e6:	cf 91       	pop	r28
     8e8:	08 95       	ret

000008ea <_ZNK10helicopter5model11SystemModel14LateralControlEv>:

			float LateralControl() const {return lateralControl;}
     8ea:	cf 93       	push	r28
     8ec:	df 93       	push	r29
     8ee:	1f 92       	push	r1
     8f0:	1f 92       	push	r1
     8f2:	cd b7       	in	r28, 0x3d	; 61
     8f4:	de b7       	in	r29, 0x3e	; 62
     8f6:	9a 83       	std	Y+2, r25	; 0x02
     8f8:	89 83       	std	Y+1, r24	; 0x01
     8fa:	89 81       	ldd	r24, Y+1	; 0x01
     8fc:	9a 81       	ldd	r25, Y+2	; 0x02
     8fe:	84 5a       	subi	r24, 0xA4	; 164
     900:	9f 4f       	sbci	r25, 0xFF	; 255
     902:	fc 01       	movw	r30, r24
     904:	80 81       	ld	r24, Z
     906:	91 81       	ldd	r25, Z+1	; 0x01
     908:	a2 81       	ldd	r26, Z+2	; 0x02
     90a:	b3 81       	ldd	r27, Z+3	; 0x03
     90c:	bc 01       	movw	r22, r24
     90e:	cd 01       	movw	r24, r26
     910:	0f 90       	pop	r0
     912:	0f 90       	pop	r0
     914:	df 91       	pop	r29
     916:	cf 91       	pop	r28
     918:	08 95       	ret

0000091a <_ZN10helicopter5model11SystemModel14LateralControlEf>:
			void LateralControl(float val) { lateralControl = val;}
     91a:	cf 93       	push	r28
     91c:	df 93       	push	r29
     91e:	00 d0       	rcall	.+0      	; 0x920 <_ZN10helicopter5model11SystemModel14LateralControlEf+0x6>
     920:	00 d0       	rcall	.+0      	; 0x922 <_ZN10helicopter5model11SystemModel14LateralControlEf+0x8>
     922:	cd b7       	in	r28, 0x3d	; 61
     924:	de b7       	in	r29, 0x3e	; 62
     926:	9a 83       	std	Y+2, r25	; 0x02
     928:	89 83       	std	Y+1, r24	; 0x01
     92a:	4b 83       	std	Y+3, r20	; 0x03
     92c:	5c 83       	std	Y+4, r21	; 0x04
     92e:	6d 83       	std	Y+5, r22	; 0x05
     930:	7e 83       	std	Y+6, r23	; 0x06
     932:	89 81       	ldd	r24, Y+1	; 0x01
     934:	9a 81       	ldd	r25, Y+2	; 0x02
     936:	9c 01       	movw	r18, r24
     938:	24 5a       	subi	r18, 0xA4	; 164
     93a:	3f 4f       	sbci	r19, 0xFF	; 255
     93c:	8b 81       	ldd	r24, Y+3	; 0x03
     93e:	9c 81       	ldd	r25, Y+4	; 0x04
     940:	ad 81       	ldd	r26, Y+5	; 0x05
     942:	be 81       	ldd	r27, Y+6	; 0x06
     944:	f9 01       	movw	r30, r18
     946:	80 83       	st	Z, r24
     948:	91 83       	std	Z+1, r25	; 0x01
     94a:	a2 83       	std	Z+2, r26	; 0x02
     94c:	b3 83       	std	Z+3, r27	; 0x03
     94e:	26 96       	adiw	r28, 0x06	; 6
     950:	0f b6       	in	r0, 0x3f	; 63
     952:	f8 94       	cli
     954:	de bf       	out	0x3e, r29	; 62
     956:	0f be       	out	0x3f, r0	; 63
     958:	cd bf       	out	0x3d, r28	; 61
     95a:	df 91       	pop	r29
     95c:	cf 91       	pop	r28
     95e:	08 95       	ret

00000960 <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>:

			float YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
     960:	cf 93       	push	r28
     962:	df 93       	push	r29
     964:	1f 92       	push	r1
     966:	1f 92       	push	r1
     968:	cd b7       	in	r28, 0x3d	; 61
     96a:	de b7       	in	r29, 0x3e	; 62
     96c:	9a 83       	std	Y+2, r25	; 0x02
     96e:	89 83       	std	Y+1, r24	; 0x01
     970:	89 81       	ldd	r24, Y+1	; 0x01
     972:	9a 81       	ldd	r25, Y+2	; 0x02
     974:	80 5a       	subi	r24, 0xA0	; 160
     976:	9f 4f       	sbci	r25, 0xFF	; 255
     978:	fc 01       	movw	r30, r24
     97a:	80 81       	ld	r24, Z
     97c:	91 81       	ldd	r25, Z+1	; 0x01
     97e:	a2 81       	ldd	r26, Z+2	; 0x02
     980:	b3 81       	ldd	r27, Z+3	; 0x03
     982:	bc 01       	movw	r22, r24
     984:	cd 01       	movw	r24, r26
     986:	0f 90       	pop	r0
     988:	0f 90       	pop	r0
     98a:	df 91       	pop	r29
     98c:	cf 91       	pop	r28
     98e:	08 95       	ret

00000990 <_ZNK10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEv>:
			void YVelocityMetersPerSecond(float val) { yVelocityMetersPerSecond = val;}

			float ReferenceYVelocityMetersPerSecond() const {return referenceYVelocityMetersPerSecond;}
     990:	cf 93       	push	r28
     992:	df 93       	push	r29
     994:	1f 92       	push	r1
     996:	1f 92       	push	r1
     998:	cd b7       	in	r28, 0x3d	; 61
     99a:	de b7       	in	r29, 0x3e	; 62
     99c:	9a 83       	std	Y+2, r25	; 0x02
     99e:	89 83       	std	Y+1, r24	; 0x01
     9a0:	89 81       	ldd	r24, Y+1	; 0x01
     9a2:	9a 81       	ldd	r25, Y+2	; 0x02
     9a4:	8c 59       	subi	r24, 0x9C	; 156
     9a6:	9f 4f       	sbci	r25, 0xFF	; 255
     9a8:	fc 01       	movw	r30, r24
     9aa:	80 81       	ld	r24, Z
     9ac:	91 81       	ldd	r25, Z+1	; 0x01
     9ae:	a2 81       	ldd	r26, Z+2	; 0x02
     9b0:	b3 81       	ldd	r27, Z+3	; 0x03
     9b2:	bc 01       	movw	r22, r24
     9b4:	cd 01       	movw	r24, r26
     9b6:	0f 90       	pop	r0
     9b8:	0f 90       	pop	r0
     9ba:	df 91       	pop	r29
     9bc:	cf 91       	pop	r28
     9be:	08 95       	ret

000009c0 <_ZNK10helicopter5model11SystemModel24YLateralOuterLoopControlEv>:
			void ReferenceYVelocityMetersPerSecond(float val) { referenceYVelocityMetersPerSecond = val;}

			float YLateralOuterLoopControl() const {return yLateralOuterLoopControl;}
     9c0:	cf 93       	push	r28
     9c2:	df 93       	push	r29
     9c4:	1f 92       	push	r1
     9c6:	1f 92       	push	r1
     9c8:	cd b7       	in	r28, 0x3d	; 61
     9ca:	de b7       	in	r29, 0x3e	; 62
     9cc:	9a 83       	std	Y+2, r25	; 0x02
     9ce:	89 83       	std	Y+1, r24	; 0x01
     9d0:	89 81       	ldd	r24, Y+1	; 0x01
     9d2:	9a 81       	ldd	r25, Y+2	; 0x02
     9d4:	88 59       	subi	r24, 0x98	; 152
     9d6:	9f 4f       	sbci	r25, 0xFF	; 255
     9d8:	fc 01       	movw	r30, r24
     9da:	80 81       	ld	r24, Z
     9dc:	91 81       	ldd	r25, Z+1	; 0x01
     9de:	a2 81       	ldd	r26, Z+2	; 0x02
     9e0:	b3 81       	ldd	r27, Z+3	; 0x03
     9e2:	bc 01       	movw	r22, r24
     9e4:	cd 01       	movw	r24, r26
     9e6:	0f 90       	pop	r0
     9e8:	0f 90       	pop	r0
     9ea:	df 91       	pop	r29
     9ec:	cf 91       	pop	r28
     9ee:	08 95       	ret

000009f0 <_ZN10helicopter5model11SystemModel24YLateralOuterLoopControlEf>:
			void YLateralOuterLoopControl(float val) { yLateralOuterLoopControl = val;}
     9f0:	cf 93       	push	r28
     9f2:	df 93       	push	r29
     9f4:	00 d0       	rcall	.+0      	; 0x9f6 <_ZN10helicopter5model11SystemModel24YLateralOuterLoopControlEf+0x6>
     9f6:	00 d0       	rcall	.+0      	; 0x9f8 <_ZN10helicopter5model11SystemModel24YLateralOuterLoopControlEf+0x8>
     9f8:	cd b7       	in	r28, 0x3d	; 61
     9fa:	de b7       	in	r29, 0x3e	; 62
     9fc:	9a 83       	std	Y+2, r25	; 0x02
     9fe:	89 83       	std	Y+1, r24	; 0x01
     a00:	4b 83       	std	Y+3, r20	; 0x03
     a02:	5c 83       	std	Y+4, r21	; 0x04
     a04:	6d 83       	std	Y+5, r22	; 0x05
     a06:	7e 83       	std	Y+6, r23	; 0x06
     a08:	89 81       	ldd	r24, Y+1	; 0x01
     a0a:	9a 81       	ldd	r25, Y+2	; 0x02
     a0c:	9c 01       	movw	r18, r24
     a0e:	28 59       	subi	r18, 0x98	; 152
     a10:	3f 4f       	sbci	r19, 0xFF	; 255
     a12:	8b 81       	ldd	r24, Y+3	; 0x03
     a14:	9c 81       	ldd	r25, Y+4	; 0x04
     a16:	ad 81       	ldd	r26, Y+5	; 0x05
     a18:	be 81       	ldd	r27, Y+6	; 0x06
     a1a:	f9 01       	movw	r30, r18
     a1c:	80 83       	st	Z, r24
     a1e:	91 83       	std	Z+1, r25	; 0x01
     a20:	a2 83       	std	Z+2, r26	; 0x02
     a22:	b3 83       	std	Z+3, r27	; 0x03
     a24:	26 96       	adiw	r28, 0x06	; 6
     a26:	0f b6       	in	r0, 0x3f	; 63
     a28:	f8 94       	cli
     a2a:	de bf       	out	0x3e, r29	; 62
     a2c:	0f be       	out	0x3f, r0	; 63
     a2e:	cd bf       	out	0x3d, r28	; 61
     a30:	df 91       	pop	r29
     a32:	cf 91       	pop	r28
     a34:	08 95       	ret

00000a36 <_ZN10helicopter5model11SystemModel13YProportionalEf>:

			float YProportional() const {return yProportional;}
			void YProportional(float val) { yProportional = val;}
     a36:	cf 93       	push	r28
     a38:	df 93       	push	r29
     a3a:	00 d0       	rcall	.+0      	; 0xa3c <_ZN10helicopter5model11SystemModel13YProportionalEf+0x6>
     a3c:	00 d0       	rcall	.+0      	; 0xa3e <_ZN10helicopter5model11SystemModel13YProportionalEf+0x8>
     a3e:	cd b7       	in	r28, 0x3d	; 61
     a40:	de b7       	in	r29, 0x3e	; 62
     a42:	9a 83       	std	Y+2, r25	; 0x02
     a44:	89 83       	std	Y+1, r24	; 0x01
     a46:	4b 83       	std	Y+3, r20	; 0x03
     a48:	5c 83       	std	Y+4, r21	; 0x04
     a4a:	6d 83       	std	Y+5, r22	; 0x05
     a4c:	7e 83       	std	Y+6, r23	; 0x06
     a4e:	89 81       	ldd	r24, Y+1	; 0x01
     a50:	9a 81       	ldd	r25, Y+2	; 0x02
     a52:	9c 01       	movw	r18, r24
     a54:	24 59       	subi	r18, 0x94	; 148
     a56:	3f 4f       	sbci	r19, 0xFF	; 255
     a58:	8b 81       	ldd	r24, Y+3	; 0x03
     a5a:	9c 81       	ldd	r25, Y+4	; 0x04
     a5c:	ad 81       	ldd	r26, Y+5	; 0x05
     a5e:	be 81       	ldd	r27, Y+6	; 0x06
     a60:	f9 01       	movw	r30, r18
     a62:	80 83       	st	Z, r24
     a64:	91 83       	std	Z+1, r25	; 0x01
     a66:	a2 83       	std	Z+2, r26	; 0x02
     a68:	b3 83       	std	Z+3, r27	; 0x03
     a6a:	26 96       	adiw	r28, 0x06	; 6
     a6c:	0f b6       	in	r0, 0x3f	; 63
     a6e:	f8 94       	cli
     a70:	de bf       	out	0x3e, r29	; 62
     a72:	0f be       	out	0x3f, r0	; 63
     a74:	cd bf       	out	0x3d, r28	; 61
     a76:	df 91       	pop	r29
     a78:	cf 91       	pop	r28
     a7a:	08 95       	ret

00000a7c <_ZNK10helicopter5model11SystemModel9YIntegralEv>:

			float YIntegral() const {return yIntegral;}
     a7c:	cf 93       	push	r28
     a7e:	df 93       	push	r29
     a80:	1f 92       	push	r1
     a82:	1f 92       	push	r1
     a84:	cd b7       	in	r28, 0x3d	; 61
     a86:	de b7       	in	r29, 0x3e	; 62
     a88:	9a 83       	std	Y+2, r25	; 0x02
     a8a:	89 83       	std	Y+1, r24	; 0x01
     a8c:	89 81       	ldd	r24, Y+1	; 0x01
     a8e:	9a 81       	ldd	r25, Y+2	; 0x02
     a90:	80 59       	subi	r24, 0x90	; 144
     a92:	9f 4f       	sbci	r25, 0xFF	; 255
     a94:	fc 01       	movw	r30, r24
     a96:	80 81       	ld	r24, Z
     a98:	91 81       	ldd	r25, Z+1	; 0x01
     a9a:	a2 81       	ldd	r26, Z+2	; 0x02
     a9c:	b3 81       	ldd	r27, Z+3	; 0x03
     a9e:	bc 01       	movw	r22, r24
     aa0:	cd 01       	movw	r24, r26
     aa2:	0f 90       	pop	r0
     aa4:	0f 90       	pop	r0
     aa6:	df 91       	pop	r29
     aa8:	cf 91       	pop	r28
     aaa:	08 95       	ret

00000aac <_ZN10helicopter5model11SystemModel9YIntegralEf>:
			void YIntegral(float val) { yIntegral = val;}
     aac:	cf 93       	push	r28
     aae:	df 93       	push	r29
     ab0:	00 d0       	rcall	.+0      	; 0xab2 <_ZN10helicopter5model11SystemModel9YIntegralEf+0x6>
     ab2:	00 d0       	rcall	.+0      	; 0xab4 <_ZN10helicopter5model11SystemModel9YIntegralEf+0x8>
     ab4:	cd b7       	in	r28, 0x3d	; 61
     ab6:	de b7       	in	r29, 0x3e	; 62
     ab8:	9a 83       	std	Y+2, r25	; 0x02
     aba:	89 83       	std	Y+1, r24	; 0x01
     abc:	4b 83       	std	Y+3, r20	; 0x03
     abe:	5c 83       	std	Y+4, r21	; 0x04
     ac0:	6d 83       	std	Y+5, r22	; 0x05
     ac2:	7e 83       	std	Y+6, r23	; 0x06
     ac4:	89 81       	ldd	r24, Y+1	; 0x01
     ac6:	9a 81       	ldd	r25, Y+2	; 0x02
     ac8:	9c 01       	movw	r18, r24
     aca:	20 59       	subi	r18, 0x90	; 144
     acc:	3f 4f       	sbci	r19, 0xFF	; 255
     ace:	8b 81       	ldd	r24, Y+3	; 0x03
     ad0:	9c 81       	ldd	r25, Y+4	; 0x04
     ad2:	ad 81       	ldd	r26, Y+5	; 0x05
     ad4:	be 81       	ldd	r27, Y+6	; 0x06
     ad6:	f9 01       	movw	r30, r18
     ad8:	80 83       	st	Z, r24
     ada:	91 83       	std	Z+1, r25	; 0x01
     adc:	a2 83       	std	Z+2, r26	; 0x02
     ade:	b3 83       	std	Z+3, r27	; 0x03
     ae0:	26 96       	adiw	r28, 0x06	; 6
     ae2:	0f b6       	in	r0, 0x3f	; 63
     ae4:	f8 94       	cli
     ae6:	de bf       	out	0x3e, r29	; 62
     ae8:	0f be       	out	0x3f, r0	; 63
     aea:	cd bf       	out	0x3d, r28	; 61
     aec:	df 91       	pop	r29
     aee:	cf 91       	pop	r28
     af0:	08 95       	ret

00000af2 <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf>:

			float YDerivativeError() const {return yDerivativeError;}
			void YDerivativeError(float val) { yDerivativeError = val;}
     af2:	cf 93       	push	r28
     af4:	df 93       	push	r29
     af6:	00 d0       	rcall	.+0      	; 0xaf8 <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf+0x6>
     af8:	00 d0       	rcall	.+0      	; 0xafa <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf+0x8>
     afa:	cd b7       	in	r28, 0x3d	; 61
     afc:	de b7       	in	r29, 0x3e	; 62
     afe:	9a 83       	std	Y+2, r25	; 0x02
     b00:	89 83       	std	Y+1, r24	; 0x01
     b02:	4b 83       	std	Y+3, r20	; 0x03
     b04:	5c 83       	std	Y+4, r21	; 0x04
     b06:	6d 83       	std	Y+5, r22	; 0x05
     b08:	7e 83       	std	Y+6, r23	; 0x06
     b0a:	89 81       	ldd	r24, Y+1	; 0x01
     b0c:	9a 81       	ldd	r25, Y+2	; 0x02
     b0e:	9c 01       	movw	r18, r24
     b10:	2c 58       	subi	r18, 0x8C	; 140
     b12:	3f 4f       	sbci	r19, 0xFF	; 255
     b14:	8b 81       	ldd	r24, Y+3	; 0x03
     b16:	9c 81       	ldd	r25, Y+4	; 0x04
     b18:	ad 81       	ldd	r26, Y+5	; 0x05
     b1a:	be 81       	ldd	r27, Y+6	; 0x06
     b1c:	f9 01       	movw	r30, r18
     b1e:	80 83       	st	Z, r24
     b20:	91 83       	std	Z+1, r25	; 0x01
     b22:	a2 83       	std	Z+2, r26	; 0x02
     b24:	b3 83       	std	Z+3, r27	; 0x03
     b26:	26 96       	adiw	r28, 0x06	; 6
     b28:	0f b6       	in	r0, 0x3f	; 63
     b2a:	f8 94       	cli
     b2c:	de bf       	out	0x3e, r29	; 62
     b2e:	0f be       	out	0x3f, r0	; 63
     b30:	cd bf       	out	0x3d, r28	; 61
     b32:	df 91       	pop	r29
     b34:	cf 91       	pop	r28
     b36:	08 95       	ret

00000b38 <_ZNK10helicopter5model11SystemModel14PhiRollDegreesEv>:


			float PhiRollDegrees() const {return phiRollDegrees;}
     b38:	cf 93       	push	r28
     b3a:	df 93       	push	r29
     b3c:	1f 92       	push	r1
     b3e:	1f 92       	push	r1
     b40:	cd b7       	in	r28, 0x3d	; 61
     b42:	de b7       	in	r29, 0x3e	; 62
     b44:	9a 83       	std	Y+2, r25	; 0x02
     b46:	89 83       	std	Y+1, r24	; 0x01
     b48:	89 81       	ldd	r24, Y+1	; 0x01
     b4a:	9a 81       	ldd	r25, Y+2	; 0x02
     b4c:	88 58       	subi	r24, 0x88	; 136
     b4e:	9f 4f       	sbci	r25, 0xFF	; 255
     b50:	fc 01       	movw	r30, r24
     b52:	80 81       	ld	r24, Z
     b54:	91 81       	ldd	r25, Z+1	; 0x01
     b56:	a2 81       	ldd	r26, Z+2	; 0x02
     b58:	b3 81       	ldd	r27, Z+3	; 0x03
     b5a:	bc 01       	movw	r22, r24
     b5c:	cd 01       	movw	r24, r26
     b5e:	0f 90       	pop	r0
     b60:	0f 90       	pop	r0
     b62:	df 91       	pop	r29
     b64:	cf 91       	pop	r28
     b66:	08 95       	ret

00000b68 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>:
						
						
						
						

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
     b68:	cf 93       	push	r28
     b6a:	df 93       	push	r29
     b6c:	1f 92       	push	r1
     b6e:	1f 92       	push	r1
     b70:	cd b7       	in	r28, 0x3d	; 61
     b72:	de b7       	in	r29, 0x3e	; 62
     b74:	9a 83       	std	Y+2, r25	; 0x02
     b76:	89 83       	std	Y+1, r24	; 0x01
     b78:	89 81       	ldd	r24, Y+1	; 0x01
     b7a:	9a 81       	ldd	r25, Y+2	; 0x02
     b7c:	84 58       	subi	r24, 0x84	; 132
     b7e:	9f 4f       	sbci	r25, 0xFF	; 255
     b80:	fc 01       	movw	r30, r24
     b82:	80 81       	ld	r24, Z
     b84:	91 81       	ldd	r25, Z+1	; 0x01
     b86:	a2 81       	ldd	r26, Z+2	; 0x02
     b88:	b3 81       	ldd	r27, Z+3	; 0x03
     b8a:	bc 01       	movw	r22, r24
     b8c:	cd 01       	movw	r24, r26
     b8e:	0f 90       	pop	r0
     b90:	0f 90       	pop	r0
     b92:	df 91       	pop	r29
     b94:	cf 91       	pop	r28
     b96:	08 95       	ret

00000b98 <_ZNK10helicopter5model11SystemModel21ReferenceAltitudeFeetEv>:

			float ZNEDBodyFrame() const { return zNEDBodyFrame; }
			void ZNEDBodyFrame(float val) { zNEDBodyFrame = val; }


			float ReferenceAltitudeFeet() const {return referenceAltitudeFeet;}
     b98:	cf 93       	push	r28
     b9a:	df 93       	push	r29
     b9c:	1f 92       	push	r1
     b9e:	1f 92       	push	r1
     ba0:	cd b7       	in	r28, 0x3d	; 61
     ba2:	de b7       	in	r29, 0x3e	; 62
     ba4:	9a 83       	std	Y+2, r25	; 0x02
     ba6:	89 83       	std	Y+1, r24	; 0x01
     ba8:	89 81       	ldd	r24, Y+1	; 0x01
     baa:	9a 81       	ldd	r25, Y+2	; 0x02
     bac:	8c 57       	subi	r24, 0x7C	; 124
     bae:	9f 4f       	sbci	r25, 0xFF	; 255
     bb0:	fc 01       	movw	r30, r24
     bb2:	80 81       	ld	r24, Z
     bb4:	91 81       	ldd	r25, Z+1	; 0x01
     bb6:	a2 81       	ldd	r26, Z+2	; 0x02
     bb8:	b3 81       	ldd	r27, Z+3	; 0x03
     bba:	bc 01       	movw	r22, r24
     bbc:	cd 01       	movw	r24, r26
     bbe:	0f 90       	pop	r0
     bc0:	0f 90       	pop	r0
     bc2:	df 91       	pop	r29
     bc4:	cf 91       	pop	r28
     bc6:	08 95       	ret

00000bc8 <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>:
			void ReferenceAltitudeFeet(float val) { referenceAltitudeFeet = val;}


			float MainRotorCollectiveControl() const {return mainRotorControl;}
     bc8:	cf 93       	push	r28
     bca:	df 93       	push	r29
     bcc:	1f 92       	push	r1
     bce:	1f 92       	push	r1
     bd0:	cd b7       	in	r28, 0x3d	; 61
     bd2:	de b7       	in	r29, 0x3e	; 62
     bd4:	9a 83       	std	Y+2, r25	; 0x02
     bd6:	89 83       	std	Y+1, r24	; 0x01
     bd8:	89 81       	ldd	r24, Y+1	; 0x01
     bda:	9a 81       	ldd	r25, Y+2	; 0x02
     bdc:	88 57       	subi	r24, 0x78	; 120
     bde:	9f 4f       	sbci	r25, 0xFF	; 255
     be0:	fc 01       	movw	r30, r24
     be2:	80 81       	ld	r24, Z
     be4:	91 81       	ldd	r25, Z+1	; 0x01
     be6:	a2 81       	ldd	r26, Z+2	; 0x02
     be8:	b3 81       	ldd	r27, Z+3	; 0x03
     bea:	bc 01       	movw	r22, r24
     bec:	cd 01       	movw	r24, r26
     bee:	0f 90       	pop	r0
     bf0:	0f 90       	pop	r0
     bf2:	df 91       	pop	r29
     bf4:	cf 91       	pop	r28
     bf6:	08 95       	ret

00000bf8 <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf>:
			void MainRotorCollectiveControl(float val) { mainRotorControl = val;}
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
     bfc:	00 d0       	rcall	.+0      	; 0xbfe <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf+0x6>
     bfe:	00 d0       	rcall	.+0      	; 0xc00 <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf+0x8>
     c00:	cd b7       	in	r28, 0x3d	; 61
     c02:	de b7       	in	r29, 0x3e	; 62
     c04:	9a 83       	std	Y+2, r25	; 0x02
     c06:	89 83       	std	Y+1, r24	; 0x01
     c08:	4b 83       	std	Y+3, r20	; 0x03
     c0a:	5c 83       	std	Y+4, r21	; 0x04
     c0c:	6d 83       	std	Y+5, r22	; 0x05
     c0e:	7e 83       	std	Y+6, r23	; 0x06
     c10:	89 81       	ldd	r24, Y+1	; 0x01
     c12:	9a 81       	ldd	r25, Y+2	; 0x02
     c14:	9c 01       	movw	r18, r24
     c16:	28 57       	subi	r18, 0x78	; 120
     c18:	3f 4f       	sbci	r19, 0xFF	; 255
     c1a:	8b 81       	ldd	r24, Y+3	; 0x03
     c1c:	9c 81       	ldd	r25, Y+4	; 0x04
     c1e:	ad 81       	ldd	r26, Y+5	; 0x05
     c20:	be 81       	ldd	r27, Y+6	; 0x06
     c22:	f9 01       	movw	r30, r18
     c24:	80 83       	st	Z, r24
     c26:	91 83       	std	Z+1, r25	; 0x01
     c28:	a2 83       	std	Z+2, r26	; 0x02
     c2a:	b3 83       	std	Z+3, r27	; 0x03
     c2c:	26 96       	adiw	r28, 0x06	; 6
     c2e:	0f b6       	in	r0, 0x3f	; 63
     c30:	f8 94       	cli
     c32:	de bf       	out	0x3e, r29	; 62
     c34:	0f be       	out	0x3f, r0	; 63
     c36:	cd bf       	out	0x3d, r28	; 61
     c38:	df 91       	pop	r29
     c3a:	cf 91       	pop	r28
     c3c:	08 95       	ret

00000c3e <_ZNK10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEv>:

			float MainRotorControlBeforeServoLimitsAdjustment() const {return mainRotorControlBeforeServoLimitsAdjustment;}
     c3e:	cf 93       	push	r28
     c40:	df 93       	push	r29
     c42:	1f 92       	push	r1
     c44:	1f 92       	push	r1
     c46:	cd b7       	in	r28, 0x3d	; 61
     c48:	de b7       	in	r29, 0x3e	; 62
     c4a:	9a 83       	std	Y+2, r25	; 0x02
     c4c:	89 83       	std	Y+1, r24	; 0x01
     c4e:	89 81       	ldd	r24, Y+1	; 0x01
     c50:	9a 81       	ldd	r25, Y+2	; 0x02
     c52:	84 57       	subi	r24, 0x74	; 116
     c54:	9f 4f       	sbci	r25, 0xFF	; 255
     c56:	fc 01       	movw	r30, r24
     c58:	80 81       	ld	r24, Z
     c5a:	91 81       	ldd	r25, Z+1	; 0x01
     c5c:	a2 81       	ldd	r26, Z+2	; 0x02
     c5e:	b3 81       	ldd	r27, Z+3	; 0x03
     c60:	bc 01       	movw	r22, r24
     c62:	cd 01       	movw	r24, r26
     c64:	0f 90       	pop	r0
     c66:	0f 90       	pop	r0
     c68:	df 91       	pop	r29
     c6a:	cf 91       	pop	r28
     c6c:	08 95       	ret

00000c6e <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf>:
			void MainRotorControlBeforeServoLimitsAdjustment(float val) { mainRotorControlBeforeServoLimitsAdjustment = val;}
     c6e:	cf 93       	push	r28
     c70:	df 93       	push	r29
     c72:	00 d0       	rcall	.+0      	; 0xc74 <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf+0x6>
     c74:	00 d0       	rcall	.+0      	; 0xc76 <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf+0x8>
     c76:	cd b7       	in	r28, 0x3d	; 61
     c78:	de b7       	in	r29, 0x3e	; 62
     c7a:	9a 83       	std	Y+2, r25	; 0x02
     c7c:	89 83       	std	Y+1, r24	; 0x01
     c7e:	4b 83       	std	Y+3, r20	; 0x03
     c80:	5c 83       	std	Y+4, r21	; 0x04
     c82:	6d 83       	std	Y+5, r22	; 0x05
     c84:	7e 83       	std	Y+6, r23	; 0x06
     c86:	89 81       	ldd	r24, Y+1	; 0x01
     c88:	9a 81       	ldd	r25, Y+2	; 0x02
     c8a:	9c 01       	movw	r18, r24
     c8c:	24 57       	subi	r18, 0x74	; 116
     c8e:	3f 4f       	sbci	r19, 0xFF	; 255
     c90:	8b 81       	ldd	r24, Y+3	; 0x03
     c92:	9c 81       	ldd	r25, Y+4	; 0x04
     c94:	ad 81       	ldd	r26, Y+5	; 0x05
     c96:	be 81       	ldd	r27, Y+6	; 0x06
     c98:	f9 01       	movw	r30, r18
     c9a:	80 83       	st	Z, r24
     c9c:	91 83       	std	Z+1, r25	; 0x01
     c9e:	a2 83       	std	Z+2, r26	; 0x02
     ca0:	b3 83       	std	Z+3, r27	; 0x03
     ca2:	26 96       	adiw	r28, 0x06	; 6
     ca4:	0f b6       	in	r0, 0x3f	; 63
     ca6:	f8 94       	cli
     ca8:	de bf       	out	0x3e, r29	; 62
     caa:	0f be       	out	0x3f, r0	; 63
     cac:	cd bf       	out	0x3d, r28	; 61
     cae:	df 91       	pop	r29
     cb0:	cf 91       	pop	r28
     cb2:	08 95       	ret

00000cb4 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>:

			float ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
     cb4:	cf 93       	push	r28
     cb6:	df 93       	push	r29
     cb8:	1f 92       	push	r1
     cba:	1f 92       	push	r1
     cbc:	cd b7       	in	r28, 0x3d	; 61
     cbe:	de b7       	in	r29, 0x3e	; 62
     cc0:	9a 83       	std	Y+2, r25	; 0x02
     cc2:	89 83       	std	Y+1, r24	; 0x01
     cc4:	89 81       	ldd	r24, Y+1	; 0x01
     cc6:	9a 81       	ldd	r25, Y+2	; 0x02
     cc8:	80 57       	subi	r24, 0x70	; 112
     cca:	9f 4f       	sbci	r25, 0xFF	; 255
     ccc:	fc 01       	movw	r30, r24
     cce:	80 81       	ld	r24, Z
     cd0:	91 81       	ldd	r25, Z+1	; 0x01
     cd2:	a2 81       	ldd	r26, Z+2	; 0x02
     cd4:	b3 81       	ldd	r27, Z+3	; 0x03
     cd6:	bc 01       	movw	r22, r24
     cd8:	cd 01       	movw	r24, r26
     cda:	0f 90       	pop	r0
     cdc:	0f 90       	pop	r0
     cde:	df 91       	pop	r29
     ce0:	cf 91       	pop	r28
     ce2:	08 95       	ret

00000ce4 <_ZNK10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEv>:
			void ZVelocityFeetPerSecond(float val) { zVelocityFeetPerSecond = val;}

			float ReferenceZVelocityFeetPerSecond() const {return referenceZVelocityFeetPerSecond;}
     ce4:	cf 93       	push	r28
     ce6:	df 93       	push	r29
     ce8:	1f 92       	push	r1
     cea:	1f 92       	push	r1
     cec:	cd b7       	in	r28, 0x3d	; 61
     cee:	de b7       	in	r29, 0x3e	; 62
     cf0:	9a 83       	std	Y+2, r25	; 0x02
     cf2:	89 83       	std	Y+1, r24	; 0x01
     cf4:	89 81       	ldd	r24, Y+1	; 0x01
     cf6:	9a 81       	ldd	r25, Y+2	; 0x02
     cf8:	8c 56       	subi	r24, 0x6C	; 108
     cfa:	9f 4f       	sbci	r25, 0xFF	; 255
     cfc:	fc 01       	movw	r30, r24
     cfe:	80 81       	ld	r24, Z
     d00:	91 81       	ldd	r25, Z+1	; 0x01
     d02:	a2 81       	ldd	r26, Z+2	; 0x02
     d04:	b3 81       	ldd	r27, Z+3	; 0x03
     d06:	bc 01       	movw	r22, r24
     d08:	cd 01       	movw	r24, r26
     d0a:	0f 90       	pop	r0
     d0c:	0f 90       	pop	r0
     d0e:	df 91       	pop	r29
     d10:	cf 91       	pop	r28
     d12:	08 95       	ret

00000d14 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>:
			void ReferenceZVelocityFeetPerSecond(float val) { referenceZVelocityFeetPerSecond = val;}

			float ZIntegral() const {return zIntegral;}
     d14:	cf 93       	push	r28
     d16:	df 93       	push	r29
     d18:	1f 92       	push	r1
     d1a:	1f 92       	push	r1
     d1c:	cd b7       	in	r28, 0x3d	; 61
     d1e:	de b7       	in	r29, 0x3e	; 62
     d20:	9a 83       	std	Y+2, r25	; 0x02
     d22:	89 83       	std	Y+1, r24	; 0x01
     d24:	89 81       	ldd	r24, Y+1	; 0x01
     d26:	9a 81       	ldd	r25, Y+2	; 0x02
     d28:	88 56       	subi	r24, 0x68	; 104
     d2a:	9f 4f       	sbci	r25, 0xFF	; 255
     d2c:	fc 01       	movw	r30, r24
     d2e:	80 81       	ld	r24, Z
     d30:	91 81       	ldd	r25, Z+1	; 0x01
     d32:	a2 81       	ldd	r26, Z+2	; 0x02
     d34:	b3 81       	ldd	r27, Z+3	; 0x03
     d36:	bc 01       	movw	r22, r24
     d38:	cd 01       	movw	r24, r26
     d3a:	0f 90       	pop	r0
     d3c:	0f 90       	pop	r0
     d3e:	df 91       	pop	r29
     d40:	cf 91       	pop	r28
     d42:	08 95       	ret

00000d44 <_ZN10helicopter5model11SystemModel9ZIntegralEf>:
			void ZIntegral(float val) { zIntegral = val;}
     d44:	cf 93       	push	r28
     d46:	df 93       	push	r29
     d48:	00 d0       	rcall	.+0      	; 0xd4a <_ZN10helicopter5model11SystemModel9ZIntegralEf+0x6>
     d4a:	00 d0       	rcall	.+0      	; 0xd4c <_ZN10helicopter5model11SystemModel9ZIntegralEf+0x8>
     d4c:	cd b7       	in	r28, 0x3d	; 61
     d4e:	de b7       	in	r29, 0x3e	; 62
     d50:	9a 83       	std	Y+2, r25	; 0x02
     d52:	89 83       	std	Y+1, r24	; 0x01
     d54:	4b 83       	std	Y+3, r20	; 0x03
     d56:	5c 83       	std	Y+4, r21	; 0x04
     d58:	6d 83       	std	Y+5, r22	; 0x05
     d5a:	7e 83       	std	Y+6, r23	; 0x06
     d5c:	89 81       	ldd	r24, Y+1	; 0x01
     d5e:	9a 81       	ldd	r25, Y+2	; 0x02
     d60:	9c 01       	movw	r18, r24
     d62:	28 56       	subi	r18, 0x68	; 104
     d64:	3f 4f       	sbci	r19, 0xFF	; 255
     d66:	8b 81       	ldd	r24, Y+3	; 0x03
     d68:	9c 81       	ldd	r25, Y+4	; 0x04
     d6a:	ad 81       	ldd	r26, Y+5	; 0x05
     d6c:	be 81       	ldd	r27, Y+6	; 0x06
     d6e:	f9 01       	movw	r30, r18
     d70:	80 83       	st	Z, r24
     d72:	91 83       	std	Z+1, r25	; 0x01
     d74:	a2 83       	std	Z+2, r26	; 0x02
     d76:	b3 83       	std	Z+3, r27	; 0x03
     d78:	26 96       	adiw	r28, 0x06	; 6
     d7a:	0f b6       	in	r0, 0x3f	; 63
     d7c:	f8 94       	cli
     d7e:	de bf       	out	0x3e, r29	; 62
     d80:	0f be       	out	0x3f, r0	; 63
     d82:	cd bf       	out	0x3d, r28	; 61
     d84:	df 91       	pop	r29
     d86:	cf 91       	pop	r28
     d88:	08 95       	ret

00000d8a <_ZN10helicopter5model11SystemModel13ZProportionalEf>:

			float ZProportional() const {return zProportional;}
			void ZProportional(float val) { zProportional = val;}
     d8a:	cf 93       	push	r28
     d8c:	df 93       	push	r29
     d8e:	00 d0       	rcall	.+0      	; 0xd90 <_ZN10helicopter5model11SystemModel13ZProportionalEf+0x6>
     d90:	00 d0       	rcall	.+0      	; 0xd92 <_ZN10helicopter5model11SystemModel13ZProportionalEf+0x8>
     d92:	cd b7       	in	r28, 0x3d	; 61
     d94:	de b7       	in	r29, 0x3e	; 62
     d96:	9a 83       	std	Y+2, r25	; 0x02
     d98:	89 83       	std	Y+1, r24	; 0x01
     d9a:	4b 83       	std	Y+3, r20	; 0x03
     d9c:	5c 83       	std	Y+4, r21	; 0x04
     d9e:	6d 83       	std	Y+5, r22	; 0x05
     da0:	7e 83       	std	Y+6, r23	; 0x06
     da2:	89 81       	ldd	r24, Y+1	; 0x01
     da4:	9a 81       	ldd	r25, Y+2	; 0x02
     da6:	9c 01       	movw	r18, r24
     da8:	24 56       	subi	r18, 0x64	; 100
     daa:	3f 4f       	sbci	r19, 0xFF	; 255
     dac:	8b 81       	ldd	r24, Y+3	; 0x03
     dae:	9c 81       	ldd	r25, Y+4	; 0x04
     db0:	ad 81       	ldd	r26, Y+5	; 0x05
     db2:	be 81       	ldd	r27, Y+6	; 0x06
     db4:	f9 01       	movw	r30, r18
     db6:	80 83       	st	Z, r24
     db8:	91 83       	std	Z+1, r25	; 0x01
     dba:	a2 83       	std	Z+2, r26	; 0x02
     dbc:	b3 83       	std	Z+3, r27	; 0x03
     dbe:	26 96       	adiw	r28, 0x06	; 6
     dc0:	0f b6       	in	r0, 0x3f	; 63
     dc2:	f8 94       	cli
     dc4:	de bf       	out	0x3e, r29	; 62
     dc6:	0f be       	out	0x3f, r0	; 63
     dc8:	cd bf       	out	0x3d, r28	; 61
     dca:	df 91       	pop	r29
     dcc:	cf 91       	pop	r28
     dce:	08 95       	ret

00000dd0 <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf>:

			float ZDerivativeError() const {return zDerivativeError;}
			void ZDerivativeError(float val) { zDerivativeError = val;}						
     dd0:	cf 93       	push	r28
     dd2:	df 93       	push	r29
     dd4:	00 d0       	rcall	.+0      	; 0xdd6 <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf+0x6>
     dd6:	00 d0       	rcall	.+0      	; 0xdd8 <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf+0x8>
     dd8:	cd b7       	in	r28, 0x3d	; 61
     dda:	de b7       	in	r29, 0x3e	; 62
     ddc:	9a 83       	std	Y+2, r25	; 0x02
     dde:	89 83       	std	Y+1, r24	; 0x01
     de0:	4b 83       	std	Y+3, r20	; 0x03
     de2:	5c 83       	std	Y+4, r21	; 0x04
     de4:	6d 83       	std	Y+5, r22	; 0x05
     de6:	7e 83       	std	Y+6, r23	; 0x06
     de8:	89 81       	ldd	r24, Y+1	; 0x01
     dea:	9a 81       	ldd	r25, Y+2	; 0x02
     dec:	9c 01       	movw	r18, r24
     dee:	20 56       	subi	r18, 0x60	; 96
     df0:	3f 4f       	sbci	r19, 0xFF	; 255
     df2:	8b 81       	ldd	r24, Y+3	; 0x03
     df4:	9c 81       	ldd	r25, Y+4	; 0x04
     df6:	ad 81       	ldd	r26, Y+5	; 0x05
     df8:	be 81       	ldd	r27, Y+6	; 0x06
     dfa:	f9 01       	movw	r30, r18
     dfc:	80 83       	st	Z, r24
     dfe:	91 83       	std	Z+1, r25	; 0x01
     e00:	a2 83       	std	Z+2, r26	; 0x02
     e02:	b3 83       	std	Z+3, r27	; 0x03
     e04:	26 96       	adiw	r28, 0x06	; 6
     e06:	0f b6       	in	r0, 0x3f	; 63
     e08:	f8 94       	cli
     e0a:	de bf       	out	0x3e, r29	; 62
     e0c:	0f be       	out	0x3f, r0	; 63
     e0e:	cd bf       	out	0x3d, r28	; 61
     e10:	df 91       	pop	r29
     e12:	cf 91       	pop	r28
     e14:	08 95       	ret

00000e16 <_ZNK10helicopter5model11SystemModel11BlownFramesEv>:
			void UnrecognizedMsgTypes(long val) { unrecognizedMsgTypes = val; }
			
			long ChecksumErrors() const {return checksumErrors; }
			void ChecksumErrors(long val) { checksumErrors = val; }
			
			long  BlownFrames() const {return numOfFramesBlown;}
     e16:	cf 93       	push	r28
     e18:	df 93       	push	r29
     e1a:	1f 92       	push	r1
     e1c:	1f 92       	push	r1
     e1e:	cd b7       	in	r28, 0x3d	; 61
     e20:	de b7       	in	r29, 0x3e	; 62
     e22:	9a 83       	std	Y+2, r25	; 0x02
     e24:	89 83       	std	Y+1, r24	; 0x01
     e26:	89 81       	ldd	r24, Y+1	; 0x01
     e28:	9a 81       	ldd	r25, Y+2	; 0x02
     e2a:	88 54       	subi	r24, 0x48	; 72
     e2c:	9f 4f       	sbci	r25, 0xFF	; 255
     e2e:	fc 01       	movw	r30, r24
     e30:	80 81       	ld	r24, Z
     e32:	91 81       	ldd	r25, Z+1	; 0x01
     e34:	a2 81       	ldd	r26, Z+2	; 0x02
     e36:	b3 81       	ldd	r27, Z+3	; 0x03
     e38:	bc 01       	movw	r22, r24
     e3a:	cd 01       	movw	r24, r26
     e3c:	0f 90       	pop	r0
     e3e:	0f 90       	pop	r0
     e40:	df 91       	pop	r29
     e42:	cf 91       	pop	r28
     e44:	08 95       	ret

00000e46 <_ZN10helicopter5model11SystemModel11BlownFramesEl>:
			void BlownFrames( long val ) { numOfFramesBlown = val;}
     e46:	cf 93       	push	r28
     e48:	df 93       	push	r29
     e4a:	00 d0       	rcall	.+0      	; 0xe4c <_ZN10helicopter5model11SystemModel11BlownFramesEl+0x6>
     e4c:	00 d0       	rcall	.+0      	; 0xe4e <_ZN10helicopter5model11SystemModel11BlownFramesEl+0x8>
     e4e:	cd b7       	in	r28, 0x3d	; 61
     e50:	de b7       	in	r29, 0x3e	; 62
     e52:	9a 83       	std	Y+2, r25	; 0x02
     e54:	89 83       	std	Y+1, r24	; 0x01
     e56:	4b 83       	std	Y+3, r20	; 0x03
     e58:	5c 83       	std	Y+4, r21	; 0x04
     e5a:	6d 83       	std	Y+5, r22	; 0x05
     e5c:	7e 83       	std	Y+6, r23	; 0x06
     e5e:	89 81       	ldd	r24, Y+1	; 0x01
     e60:	9a 81       	ldd	r25, Y+2	; 0x02
     e62:	9c 01       	movw	r18, r24
     e64:	28 54       	subi	r18, 0x48	; 72
     e66:	3f 4f       	sbci	r19, 0xFF	; 255
     e68:	8b 81       	ldd	r24, Y+3	; 0x03
     e6a:	9c 81       	ldd	r25, Y+4	; 0x04
     e6c:	ad 81       	ldd	r26, Y+5	; 0x05
     e6e:	be 81       	ldd	r27, Y+6	; 0x06
     e70:	f9 01       	movw	r30, r18
     e72:	80 83       	st	Z, r24
     e74:	91 83       	std	Z+1, r25	; 0x01
     e76:	a2 83       	std	Z+2, r26	; 0x02
     e78:	b3 83       	std	Z+3, r27	; 0x03
     e7a:	26 96       	adiw	r28, 0x06	; 6
     e7c:	0f b6       	in	r0, 0x3f	; 63
     e7e:	f8 94       	cli
     e80:	de bf       	out	0x3e, r29	; 62
     e82:	0f be       	out	0x3f, r0	; 63
     e84:	cd bf       	out	0x3d, r28	; 61
     e86:	df 91       	pop	r29
     e88:	cf 91       	pop	r28
     e8a:	08 95       	ret

00000e8c <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelEPNS_7drivers11ServoDriverE>:

#include "PIDController.h"

using namespace helicopter::controller;

PIDController::PIDController(SystemModel *model, ServoDriver *servoDriver): 
     e8c:	cf 93       	push	r28
     e8e:	df 93       	push	r29
     e90:	00 d0       	rcall	.+0      	; 0xe92 <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelEPNS_7drivers11ServoDriverE+0x6>
     e92:	00 d0       	rcall	.+0      	; 0xe94 <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelEPNS_7drivers11ServoDriverE+0x8>
     e94:	cd b7       	in	r28, 0x3d	; 61
     e96:	de b7       	in	r29, 0x3e	; 62
     e98:	9a 83       	std	Y+2, r25	; 0x02
     e9a:	89 83       	std	Y+1, r24	; 0x01
     e9c:	7c 83       	std	Y+4, r23	; 0x04
     e9e:	6b 83       	std	Y+3, r22	; 0x03
     ea0:	5e 83       	std	Y+6, r21	; 0x06
     ea2:	4d 83       	std	Y+5, r20	; 0x05
minMainRotorServoControlValue(0),
maxMainRotorServoControlValue(0),

intervalPeriodSecs(0),
controlMaxValue(0),
controlMinValue(0)
     ea4:	89 81       	ldd	r24, Y+1	; 0x01
     ea6:	9a 81       	ldd	r25, Y+2	; 0x02
     ea8:	2b 81       	ldd	r18, Y+3	; 0x03
     eaa:	3c 81       	ldd	r19, Y+4	; 0x04
     eac:	fc 01       	movw	r30, r24
     eae:	31 83       	std	Z+1, r19	; 0x01
     eb0:	20 83       	st	Z, r18
     eb2:	89 81       	ldd	r24, Y+1	; 0x01
     eb4:	9a 81       	ldd	r25, Y+2	; 0x02
     eb6:	2d 81       	ldd	r18, Y+5	; 0x05
     eb8:	3e 81       	ldd	r19, Y+6	; 0x06
     eba:	fc 01       	movw	r30, r24
     ebc:	33 83       	std	Z+3, r19	; 0x03
     ebe:	22 83       	std	Z+2, r18	; 0x02
     ec0:	89 81       	ldd	r24, Y+1	; 0x01
     ec2:	9a 81       	ldd	r25, Y+2	; 0x02
     ec4:	fc 01       	movw	r30, r24
     ec6:	14 82       	std	Z+4, r1	; 0x04
     ec8:	15 82       	std	Z+5, r1	; 0x05
     eca:	16 82       	std	Z+6, r1	; 0x06
     ecc:	17 82       	std	Z+7, r1	; 0x07
     ece:	89 81       	ldd	r24, Y+1	; 0x01
     ed0:	9a 81       	ldd	r25, Y+2	; 0x02
     ed2:	fc 01       	movw	r30, r24
     ed4:	10 86       	std	Z+8, r1	; 0x08
     ed6:	11 86       	std	Z+9, r1	; 0x09
     ed8:	12 86       	std	Z+10, r1	; 0x0a
     eda:	13 86       	std	Z+11, r1	; 0x0b
     edc:	89 81       	ldd	r24, Y+1	; 0x01
     ede:	9a 81       	ldd	r25, Y+2	; 0x02
     ee0:	fc 01       	movw	r30, r24
     ee2:	14 86       	std	Z+12, r1	; 0x0c
     ee4:	15 86       	std	Z+13, r1	; 0x0d
     ee6:	16 86       	std	Z+14, r1	; 0x0e
     ee8:	17 86       	std	Z+15, r1	; 0x0f
     eea:	89 81       	ldd	r24, Y+1	; 0x01
     eec:	9a 81       	ldd	r25, Y+2	; 0x02
     eee:	fc 01       	movw	r30, r24
     ef0:	10 8a       	std	Z+16, r1	; 0x10
     ef2:	11 8a       	std	Z+17, r1	; 0x11
     ef4:	12 8a       	std	Z+18, r1	; 0x12
     ef6:	13 8a       	std	Z+19, r1	; 0x13
     ef8:	89 81       	ldd	r24, Y+1	; 0x01
     efa:	9a 81       	ldd	r25, Y+2	; 0x02
     efc:	fc 01       	movw	r30, r24
     efe:	14 8a       	std	Z+20, r1	; 0x14
     f00:	15 8a       	std	Z+21, r1	; 0x15
     f02:	16 8a       	std	Z+22, r1	; 0x16
     f04:	17 8a       	std	Z+23, r1	; 0x17
     f06:	89 81       	ldd	r24, Y+1	; 0x01
     f08:	9a 81       	ldd	r25, Y+2	; 0x02
     f0a:	fc 01       	movw	r30, r24
     f0c:	10 8e       	std	Z+24, r1	; 0x18
     f0e:	11 8e       	std	Z+25, r1	; 0x19
     f10:	12 8e       	std	Z+26, r1	; 0x1a
     f12:	13 8e       	std	Z+27, r1	; 0x1b
     f14:	89 81       	ldd	r24, Y+1	; 0x01
     f16:	9a 81       	ldd	r25, Y+2	; 0x02
     f18:	fc 01       	movw	r30, r24
     f1a:	14 8e       	std	Z+28, r1	; 0x1c
     f1c:	15 8e       	std	Z+29, r1	; 0x1d
     f1e:	16 8e       	std	Z+30, r1	; 0x1e
     f20:	17 8e       	std	Z+31, r1	; 0x1f
     f22:	89 81       	ldd	r24, Y+1	; 0x01
     f24:	9a 81       	ldd	r25, Y+2	; 0x02
     f26:	fc 01       	movw	r30, r24
     f28:	10 a2       	std	Z+32, r1	; 0x20
     f2a:	11 a2       	std	Z+33, r1	; 0x21
     f2c:	12 a2       	std	Z+34, r1	; 0x22
     f2e:	13 a2       	std	Z+35, r1	; 0x23
     f30:	89 81       	ldd	r24, Y+1	; 0x01
     f32:	9a 81       	ldd	r25, Y+2	; 0x02
     f34:	fc 01       	movw	r30, r24
     f36:	14 a2       	std	Z+36, r1	; 0x24
     f38:	15 a2       	std	Z+37, r1	; 0x25
     f3a:	16 a2       	std	Z+38, r1	; 0x26
     f3c:	17 a2       	std	Z+39, r1	; 0x27
     f3e:	89 81       	ldd	r24, Y+1	; 0x01
     f40:	9a 81       	ldd	r25, Y+2	; 0x02
     f42:	fc 01       	movw	r30, r24
     f44:	10 a6       	std	Z+40, r1	; 0x28
     f46:	11 a6       	std	Z+41, r1	; 0x29
     f48:	12 a6       	std	Z+42, r1	; 0x2a
     f4a:	13 a6       	std	Z+43, r1	; 0x2b
     f4c:	89 81       	ldd	r24, Y+1	; 0x01
     f4e:	9a 81       	ldd	r25, Y+2	; 0x02
     f50:	fc 01       	movw	r30, r24
     f52:	14 a6       	std	Z+44, r1	; 0x2c
     f54:	15 a6       	std	Z+45, r1	; 0x2d
     f56:	16 a6       	std	Z+46, r1	; 0x2e
     f58:	17 a6       	std	Z+47, r1	; 0x2f
     f5a:	89 81       	ldd	r24, Y+1	; 0x01
     f5c:	9a 81       	ldd	r25, Y+2	; 0x02
     f5e:	fc 01       	movw	r30, r24
     f60:	10 aa       	std	Z+48, r1	; 0x30
     f62:	11 aa       	std	Z+49, r1	; 0x31
     f64:	12 aa       	std	Z+50, r1	; 0x32
     f66:	13 aa       	std	Z+51, r1	; 0x33
     f68:	89 81       	ldd	r24, Y+1	; 0x01
     f6a:	9a 81       	ldd	r25, Y+2	; 0x02
     f6c:	fc 01       	movw	r30, r24
     f6e:	14 aa       	std	Z+52, r1	; 0x34
     f70:	15 aa       	std	Z+53, r1	; 0x35
     f72:	16 aa       	std	Z+54, r1	; 0x36
     f74:	17 aa       	std	Z+55, r1	; 0x37
     f76:	89 81       	ldd	r24, Y+1	; 0x01
     f78:	9a 81       	ldd	r25, Y+2	; 0x02
     f7a:	fc 01       	movw	r30, r24
     f7c:	10 ae       	std	Z+56, r1	; 0x38
     f7e:	11 ae       	std	Z+57, r1	; 0x39
     f80:	12 ae       	std	Z+58, r1	; 0x3a
     f82:	13 ae       	std	Z+59, r1	; 0x3b
     f84:	89 81       	ldd	r24, Y+1	; 0x01
     f86:	9a 81       	ldd	r25, Y+2	; 0x02
     f88:	fc 01       	movw	r30, r24
     f8a:	14 ae       	std	Z+60, r1	; 0x3c
     f8c:	15 ae       	std	Z+61, r1	; 0x3d
     f8e:	16 ae       	std	Z+62, r1	; 0x3e
     f90:	17 ae       	std	Z+63, r1	; 0x3f
     f92:	89 81       	ldd	r24, Y+1	; 0x01
     f94:	9a 81       	ldd	r25, Y+2	; 0x02
     f96:	80 5c       	subi	r24, 0xC0	; 192
     f98:	9f 4f       	sbci	r25, 0xFF	; 255
     f9a:	fc 01       	movw	r30, r24
     f9c:	10 82       	st	Z, r1
     f9e:	11 82       	std	Z+1, r1	; 0x01
     fa0:	12 82       	std	Z+2, r1	; 0x02
     fa2:	13 82       	std	Z+3, r1	; 0x03
     fa4:	89 81       	ldd	r24, Y+1	; 0x01
     fa6:	9a 81       	ldd	r25, Y+2	; 0x02
     fa8:	8c 5b       	subi	r24, 0xBC	; 188
     faa:	9f 4f       	sbci	r25, 0xFF	; 255
     fac:	fc 01       	movw	r30, r24
     fae:	10 82       	st	Z, r1
     fb0:	11 82       	std	Z+1, r1	; 0x01
     fb2:	12 82       	std	Z+2, r1	; 0x02
     fb4:	13 82       	std	Z+3, r1	; 0x03
     fb6:	89 81       	ldd	r24, Y+1	; 0x01
     fb8:	9a 81       	ldd	r25, Y+2	; 0x02
     fba:	88 5b       	subi	r24, 0xB8	; 184
     fbc:	9f 4f       	sbci	r25, 0xFF	; 255
     fbe:	fc 01       	movw	r30, r24
     fc0:	10 82       	st	Z, r1
     fc2:	11 82       	std	Z+1, r1	; 0x01
     fc4:	12 82       	std	Z+2, r1	; 0x02
     fc6:	13 82       	std	Z+3, r1	; 0x03
     fc8:	89 81       	ldd	r24, Y+1	; 0x01
     fca:	9a 81       	ldd	r25, Y+2	; 0x02
     fcc:	84 5b       	subi	r24, 0xB4	; 180
     fce:	9f 4f       	sbci	r25, 0xFF	; 255
     fd0:	fc 01       	movw	r30, r24
     fd2:	10 82       	st	Z, r1
     fd4:	11 82       	std	Z+1, r1	; 0x01
     fd6:	12 82       	std	Z+2, r1	; 0x02
     fd8:	13 82       	std	Z+3, r1	; 0x03
     fda:	89 81       	ldd	r24, Y+1	; 0x01
     fdc:	9a 81       	ldd	r25, Y+2	; 0x02
     fde:	80 5b       	subi	r24, 0xB0	; 176
     fe0:	9f 4f       	sbci	r25, 0xFF	; 255
     fe2:	fc 01       	movw	r30, r24
     fe4:	10 82       	st	Z, r1
     fe6:	11 82       	std	Z+1, r1	; 0x01
     fe8:	12 82       	std	Z+2, r1	; 0x02
     fea:	13 82       	std	Z+3, r1	; 0x03
     fec:	89 81       	ldd	r24, Y+1	; 0x01
     fee:	9a 81       	ldd	r25, Y+2	; 0x02
     ff0:	8c 5a       	subi	r24, 0xAC	; 172
     ff2:	9f 4f       	sbci	r25, 0xFF	; 255
     ff4:	fc 01       	movw	r30, r24
     ff6:	10 82       	st	Z, r1
     ff8:	11 82       	std	Z+1, r1	; 0x01
     ffa:	12 82       	std	Z+2, r1	; 0x02
     ffc:	13 82       	std	Z+3, r1	; 0x03
     ffe:	89 81       	ldd	r24, Y+1	; 0x01
    1000:	9a 81       	ldd	r25, Y+2	; 0x02
    1002:	88 5a       	subi	r24, 0xA8	; 168
    1004:	9f 4f       	sbci	r25, 0xFF	; 255
    1006:	fc 01       	movw	r30, r24
    1008:	10 82       	st	Z, r1
    100a:	11 82       	std	Z+1, r1	; 0x01
    100c:	12 82       	std	Z+2, r1	; 0x02
    100e:	13 82       	std	Z+3, r1	; 0x03
    1010:	89 81       	ldd	r24, Y+1	; 0x01
    1012:	9a 81       	ldd	r25, Y+2	; 0x02
    1014:	84 5a       	subi	r24, 0xA4	; 164
    1016:	9f 4f       	sbci	r25, 0xFF	; 255
    1018:	fc 01       	movw	r30, r24
    101a:	10 82       	st	Z, r1
    101c:	11 82       	std	Z+1, r1	; 0x01
    101e:	12 82       	std	Z+2, r1	; 0x02
    1020:	13 82       	std	Z+3, r1	; 0x03
    1022:	89 81       	ldd	r24, Y+1	; 0x01
    1024:	9a 81       	ldd	r25, Y+2	; 0x02
    1026:	80 5a       	subi	r24, 0xA0	; 160
    1028:	9f 4f       	sbci	r25, 0xFF	; 255
    102a:	fc 01       	movw	r30, r24
    102c:	10 82       	st	Z, r1
    102e:	11 82       	std	Z+1, r1	; 0x01
    1030:	12 82       	std	Z+2, r1	; 0x02
    1032:	13 82       	std	Z+3, r1	; 0x03
    1034:	89 81       	ldd	r24, Y+1	; 0x01
    1036:	9a 81       	ldd	r25, Y+2	; 0x02
    1038:	8c 59       	subi	r24, 0x9C	; 156
    103a:	9f 4f       	sbci	r25, 0xFF	; 255
    103c:	fc 01       	movw	r30, r24
    103e:	10 82       	st	Z, r1
    1040:	11 82       	std	Z+1, r1	; 0x01
    1042:	12 82       	std	Z+2, r1	; 0x02
    1044:	13 82       	std	Z+3, r1	; 0x03
    1046:	89 81       	ldd	r24, Y+1	; 0x01
    1048:	9a 81       	ldd	r25, Y+2	; 0x02
    104a:	88 59       	subi	r24, 0x98	; 152
    104c:	9f 4f       	sbci	r25, 0xFF	; 255
    104e:	fc 01       	movw	r30, r24
    1050:	10 82       	st	Z, r1
    1052:	11 82       	std	Z+1, r1	; 0x01
    1054:	12 82       	std	Z+2, r1	; 0x02
    1056:	13 82       	std	Z+3, r1	; 0x03
    1058:	89 81       	ldd	r24, Y+1	; 0x01
    105a:	9a 81       	ldd	r25, Y+2	; 0x02
    105c:	84 59       	subi	r24, 0x94	; 148
    105e:	9f 4f       	sbci	r25, 0xFF	; 255
    1060:	fc 01       	movw	r30, r24
    1062:	10 82       	st	Z, r1
    1064:	11 82       	std	Z+1, r1	; 0x01
    1066:	12 82       	std	Z+2, r1	; 0x02
    1068:	13 82       	std	Z+3, r1	; 0x03
    106a:	89 81       	ldd	r24, Y+1	; 0x01
    106c:	9a 81       	ldd	r25, Y+2	; 0x02
    106e:	80 59       	subi	r24, 0x90	; 144
    1070:	9f 4f       	sbci	r25, 0xFF	; 255
    1072:	fc 01       	movw	r30, r24
    1074:	10 82       	st	Z, r1
    1076:	11 82       	std	Z+1, r1	; 0x01
    1078:	12 82       	std	Z+2, r1	; 0x02
    107a:	13 82       	std	Z+3, r1	; 0x03
    107c:	89 81       	ldd	r24, Y+1	; 0x01
    107e:	9a 81       	ldd	r25, Y+2	; 0x02
    1080:	8c 58       	subi	r24, 0x8C	; 140
    1082:	9f 4f       	sbci	r25, 0xFF	; 255
    1084:	fc 01       	movw	r30, r24
    1086:	10 82       	st	Z, r1
    1088:	11 82       	std	Z+1, r1	; 0x01
    108a:	12 82       	std	Z+2, r1	; 0x02
    108c:	13 82       	std	Z+3, r1	; 0x03
{
	
}
    108e:	26 96       	adiw	r28, 0x06	; 6
    1090:	0f b6       	in	r0, 0x3f	; 63
    1092:	f8 94       	cli
    1094:	de bf       	out	0x3e, r29	; 62
    1096:	0f be       	out	0x3f, r0	; 63
    1098:	cd bf       	out	0x3d, r28	; 61
    109a:	df 91       	pop	r29
    109c:	cf 91       	pop	r28
    109e:	08 95       	ret

000010a0 <_ZN10helicopter10controller13PIDController21calculateProportionalEff>:
{
	delete model;
}

float PIDController::calculateProportional(float currentValue, float referenceValue)
{
    10a0:	0f 93       	push	r16
    10a2:	1f 93       	push	r17
    10a4:	cf 93       	push	r28
    10a6:	df 93       	push	r29
    10a8:	cd b7       	in	r28, 0x3d	; 61
    10aa:	de b7       	in	r29, 0x3e	; 62
    10ac:	2a 97       	sbiw	r28, 0x0a	; 10
    10ae:	0f b6       	in	r0, 0x3f	; 63
    10b0:	f8 94       	cli
    10b2:	de bf       	out	0x3e, r29	; 62
    10b4:	0f be       	out	0x3f, r0	; 63
    10b6:	cd bf       	out	0x3d, r28	; 61
    10b8:	9a 83       	std	Y+2, r25	; 0x02
    10ba:	89 83       	std	Y+1, r24	; 0x01
    10bc:	4b 83       	std	Y+3, r20	; 0x03
    10be:	5c 83       	std	Y+4, r21	; 0x04
    10c0:	6d 83       	std	Y+5, r22	; 0x05
    10c2:	7e 83       	std	Y+6, r23	; 0x06
    10c4:	0f 83       	std	Y+7, r16	; 0x07
    10c6:	18 87       	std	Y+8, r17	; 0x08
    10c8:	29 87       	std	Y+9, r18	; 0x09
    10ca:	3a 87       	std	Y+10, r19	; 0x0a
	return currentValue - referenceValue;
    10cc:	2f 81       	ldd	r18, Y+7	; 0x07
    10ce:	38 85       	ldd	r19, Y+8	; 0x08
    10d0:	49 85       	ldd	r20, Y+9	; 0x09
    10d2:	5a 85       	ldd	r21, Y+10	; 0x0a
    10d4:	6b 81       	ldd	r22, Y+3	; 0x03
    10d6:	7c 81       	ldd	r23, Y+4	; 0x04
    10d8:	8d 81       	ldd	r24, Y+5	; 0x05
    10da:	9e 81       	ldd	r25, Y+6	; 0x06
    10dc:	0e 94 01 43 	call	0x8602	; 0x8602 <__subsf3>
    10e0:	dc 01       	movw	r26, r24
    10e2:	cb 01       	movw	r24, r22
}
    10e4:	bc 01       	movw	r22, r24
    10e6:	cd 01       	movw	r24, r26
    10e8:	2a 96       	adiw	r28, 0x0a	; 10
    10ea:	0f b6       	in	r0, 0x3f	; 63
    10ec:	f8 94       	cli
    10ee:	de bf       	out	0x3e, r29	; 62
    10f0:	0f be       	out	0x3f, r0	; 63
    10f2:	cd bf       	out	0x3d, r28	; 61
    10f4:	df 91       	pop	r29
    10f6:	cf 91       	pop	r28
    10f8:	1f 91       	pop	r17
    10fa:	0f 91       	pop	r16
    10fc:	08 95       	ret

000010fe <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>:


//TODO refactor to make this common for all PID calculations. I'll want to include the specific
//variables max values as parameters so I can 'generalize' it.
float PIDController::calculateIntegralAntiWindup(float oldControlPreServoAdj, float oldControl, float antiWindupGain)
{
    10fe:	cf 92       	push	r12
    1100:	df 92       	push	r13
    1102:	ef 92       	push	r14
    1104:	ff 92       	push	r15
    1106:	0f 93       	push	r16
    1108:	1f 93       	push	r17
    110a:	cf 93       	push	r28
    110c:	df 93       	push	r29
    110e:	cd b7       	in	r28, 0x3d	; 61
    1110:	de b7       	in	r29, 0x3e	; 62
    1112:	62 97       	sbiw	r28, 0x12	; 18
    1114:	0f b6       	in	r0, 0x3f	; 63
    1116:	f8 94       	cli
    1118:	de bf       	out	0x3e, r29	; 62
    111a:	0f be       	out	0x3f, r0	; 63
    111c:	cd bf       	out	0x3d, r28	; 61
    111e:	9e 83       	std	Y+6, r25	; 0x06
    1120:	8d 83       	std	Y+5, r24	; 0x05
    1122:	4f 83       	std	Y+7, r20	; 0x07
    1124:	58 87       	std	Y+8, r21	; 0x08
    1126:	69 87       	std	Y+9, r22	; 0x09
    1128:	7a 87       	std	Y+10, r23	; 0x0a
    112a:	0b 87       	std	Y+11, r16	; 0x0b
    112c:	1c 87       	std	Y+12, r17	; 0x0c
    112e:	2d 87       	std	Y+13, r18	; 0x0d
    1130:	3e 87       	std	Y+14, r19	; 0x0e
    1132:	cf 86       	std	Y+15, r12	; 0x0f
    1134:	d8 8a       	std	Y+16, r13	; 0x10
    1136:	e9 8a       	std	Y+17, r14	; 0x11
    1138:	fa 8a       	std	Y+18, r15	; 0x12
	float antiWindup = 0;
    113a:	19 82       	std	Y+1, r1	; 0x01
    113c:	1a 82       	std	Y+2, r1	; 0x02
    113e:	1b 82       	std	Y+3, r1	; 0x03
    1140:	1c 82       	std	Y+4, r1	; 0x04
	
	antiWindup = antiWindupGain * (oldControlPreServoAdj - oldControl);
    1142:	2b 85       	ldd	r18, Y+11	; 0x0b
    1144:	3c 85       	ldd	r19, Y+12	; 0x0c
    1146:	4d 85       	ldd	r20, Y+13	; 0x0d
    1148:	5e 85       	ldd	r21, Y+14	; 0x0e
    114a:	6f 81       	ldd	r22, Y+7	; 0x07
    114c:	78 85       	ldd	r23, Y+8	; 0x08
    114e:	89 85       	ldd	r24, Y+9	; 0x09
    1150:	9a 85       	ldd	r25, Y+10	; 0x0a
    1152:	0e 94 01 43 	call	0x8602	; 0x8602 <__subsf3>
    1156:	dc 01       	movw	r26, r24
    1158:	cb 01       	movw	r24, r22
    115a:	2f 85       	ldd	r18, Y+15	; 0x0f
    115c:	38 89       	ldd	r19, Y+16	; 0x10
    115e:	49 89       	ldd	r20, Y+17	; 0x11
    1160:	5a 89       	ldd	r21, Y+18	; 0x12
    1162:	bc 01       	movw	r22, r24
    1164:	cd 01       	movw	r24, r26
    1166:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    116a:	dc 01       	movw	r26, r24
    116c:	cb 01       	movw	r24, r22
    116e:	89 83       	std	Y+1, r24	; 0x01
    1170:	9a 83       	std	Y+2, r25	; 0x02
    1172:	ab 83       	std	Y+3, r26	; 0x03
    1174:	bc 83       	std	Y+4, r27	; 0x04
	{
		antiWindup = yawAntiWindupGain * (oldYawControlValue - minYawServoControlValue);
	}
	*/
	
	return antiWindup;
    1176:	89 81       	ldd	r24, Y+1	; 0x01
    1178:	9a 81       	ldd	r25, Y+2	; 0x02
    117a:	ab 81       	ldd	r26, Y+3	; 0x03
    117c:	bc 81       	ldd	r27, Y+4	; 0x04
}
    117e:	bc 01       	movw	r22, r24
    1180:	cd 01       	movw	r24, r26
    1182:	62 96       	adiw	r28, 0x12	; 18
    1184:	0f b6       	in	r0, 0x3f	; 63
    1186:	f8 94       	cli
    1188:	de bf       	out	0x3e, r29	; 62
    118a:	0f be       	out	0x3f, r0	; 63
    118c:	cd bf       	out	0x3d, r28	; 61
    118e:	df 91       	pop	r29
    1190:	cf 91       	pop	r28
    1192:	1f 91       	pop	r17
    1194:	0f 91       	pop	r16
    1196:	ff 90       	pop	r15
    1198:	ef 90       	pop	r14
    119a:	df 90       	pop	r13
    119c:	cf 90       	pop	r12
    119e:	08 95       	ret

000011a0 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>:

/**
 * Anti-windup algorithm provided by Control Systems Design by Karl Johan Astrom 2002. chapter 6
 */
float PIDController::calculateIntegral(float proportional, float oldIntegral, float antiWindup, float integralGain)
{
    11a0:	8f 92       	push	r8
    11a2:	9f 92       	push	r9
    11a4:	af 92       	push	r10
    11a6:	bf 92       	push	r11
    11a8:	cf 92       	push	r12
    11aa:	df 92       	push	r13
    11ac:	ef 92       	push	r14
    11ae:	ff 92       	push	r15
    11b0:	0f 93       	push	r16
    11b2:	1f 93       	push	r17
    11b4:	cf 93       	push	r28
    11b6:	df 93       	push	r29
    11b8:	cd b7       	in	r28, 0x3d	; 61
    11ba:	de b7       	in	r29, 0x3e	; 62
    11bc:	66 97       	sbiw	r28, 0x16	; 22
    11be:	0f b6       	in	r0, 0x3f	; 63
    11c0:	f8 94       	cli
    11c2:	de bf       	out	0x3e, r29	; 62
    11c4:	0f be       	out	0x3f, r0	; 63
    11c6:	cd bf       	out	0x3d, r28	; 61
    11c8:	9e 83       	std	Y+6, r25	; 0x06
    11ca:	8d 83       	std	Y+5, r24	; 0x05
    11cc:	4f 83       	std	Y+7, r20	; 0x07
    11ce:	58 87       	std	Y+8, r21	; 0x08
    11d0:	69 87       	std	Y+9, r22	; 0x09
    11d2:	7a 87       	std	Y+10, r23	; 0x0a
    11d4:	0b 87       	std	Y+11, r16	; 0x0b
    11d6:	1c 87       	std	Y+12, r17	; 0x0c
    11d8:	2d 87       	std	Y+13, r18	; 0x0d
    11da:	3e 87       	std	Y+14, r19	; 0x0e
    11dc:	cf 86       	std	Y+15, r12	; 0x0f
    11de:	d8 8a       	std	Y+16, r13	; 0x10
    11e0:	e9 8a       	std	Y+17, r14	; 0x11
    11e2:	fa 8a       	std	Y+18, r15	; 0x12
    11e4:	8b 8a       	std	Y+19, r8	; 0x13
    11e6:	9c 8a       	std	Y+20, r9	; 0x14
    11e8:	ad 8a       	std	Y+21, r10	; 0x15
    11ea:	be 8a       	std	Y+22, r11	; 0x16
	
	float workingIntegral = 0;
    11ec:	19 82       	std	Y+1, r1	; 0x01
    11ee:	1a 82       	std	Y+2, r1	; 0x02
    11f0:	1b 82       	std	Y+3, r1	; 0x03
    11f2:	1c 82       	std	Y+4, r1	; 0x04
	
	workingIntegral = proportional * intervalPeriodSecs * integralGain;
    11f4:	8d 81       	ldd	r24, Y+5	; 0x05
    11f6:	9e 81       	ldd	r25, Y+6	; 0x06
    11f8:	84 59       	subi	r24, 0x94	; 148
    11fa:	9f 4f       	sbci	r25, 0xFF	; 255
    11fc:	fc 01       	movw	r30, r24
    11fe:	80 81       	ld	r24, Z
    1200:	91 81       	ldd	r25, Z+1	; 0x01
    1202:	a2 81       	ldd	r26, Z+2	; 0x02
    1204:	b3 81       	ldd	r27, Z+3	; 0x03
    1206:	2f 81       	ldd	r18, Y+7	; 0x07
    1208:	38 85       	ldd	r19, Y+8	; 0x08
    120a:	49 85       	ldd	r20, Y+9	; 0x09
    120c:	5a 85       	ldd	r21, Y+10	; 0x0a
    120e:	bc 01       	movw	r22, r24
    1210:	cd 01       	movw	r24, r26
    1212:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    1216:	dc 01       	movw	r26, r24
    1218:	cb 01       	movw	r24, r22
    121a:	2b 89       	ldd	r18, Y+19	; 0x13
    121c:	3c 89       	ldd	r19, Y+20	; 0x14
    121e:	4d 89       	ldd	r20, Y+21	; 0x15
    1220:	5e 89       	ldd	r21, Y+22	; 0x16
    1222:	bc 01       	movw	r22, r24
    1224:	cd 01       	movw	r24, r26
    1226:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    122a:	dc 01       	movw	r26, r24
    122c:	cb 01       	movw	r24, r22
    122e:	89 83       	std	Y+1, r24	; 0x01
    1230:	9a 83       	std	Y+2, r25	; 0x02
    1232:	ab 83       	std	Y+3, r26	; 0x03
    1234:	bc 83       	std	Y+4, r27	; 0x04
	//Integrate (i.e. sum this working value with the current integral value).
	//Note: i'm going out of order from what is defined in the book referenced above.
	//I am summing before subtracting the antiwindup value to make it easier.
	//I also find it odd that the integral 'gain' is being applied before 
	//accounting for the anti-windup. But this could be to compensate for large errors.
	workingIntegral = workingIntegral + oldIntegral;
    1236:	2b 85       	ldd	r18, Y+11	; 0x0b
    1238:	3c 85       	ldd	r19, Y+12	; 0x0c
    123a:	4d 85       	ldd	r20, Y+13	; 0x0d
    123c:	5e 85       	ldd	r21, Y+14	; 0x0e
    123e:	69 81       	ldd	r22, Y+1	; 0x01
    1240:	7a 81       	ldd	r23, Y+2	; 0x02
    1242:	8b 81       	ldd	r24, Y+3	; 0x03
    1244:	9c 81       	ldd	r25, Y+4	; 0x04
    1246:	0e 94 02 43 	call	0x8604	; 0x8604 <__addsf3>
    124a:	dc 01       	movw	r26, r24
    124c:	cb 01       	movw	r24, r22
    124e:	89 83       	std	Y+1, r24	; 0x01
    1250:	9a 83       	std	Y+2, r25	; 0x02
    1252:	ab 83       	std	Y+3, r26	; 0x03
    1254:	bc 83       	std	Y+4, r27	; 0x04
	
	if (antiWindup != 0)
    1256:	20 e0       	ldi	r18, 0x00	; 0
    1258:	30 e0       	ldi	r19, 0x00	; 0
    125a:	a9 01       	movw	r20, r18
    125c:	6f 85       	ldd	r22, Y+15	; 0x0f
    125e:	78 89       	ldd	r23, Y+16	; 0x10
    1260:	89 89       	ldd	r24, Y+17	; 0x11
    1262:	9a 89       	ldd	r25, Y+18	; 0x12
    1264:	0e 94 66 43 	call	0x86cc	; 0x86cc <__cmpsf2>
    1268:	88 23       	and	r24, r24
    126a:	09 f4       	brne	.+2      	; 0x126e <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0xce>
    126c:	52 c0       	rjmp	.+164    	; 0x1312 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x172>
	{
		//We want to know if the integral is greater than 0 or less than 0 so that when we subtract
		//the antiwindup value, we get closer to 0, and don't exceed 0.
		if (workingIntegral > 0 && antiWindup > workingIntegral)
    126e:	20 e0       	ldi	r18, 0x00	; 0
    1270:	30 e0       	ldi	r19, 0x00	; 0
    1272:	a9 01       	movw	r20, r18
    1274:	69 81       	ldd	r22, Y+1	; 0x01
    1276:	7a 81       	ldd	r23, Y+2	; 0x02
    1278:	8b 81       	ldd	r24, Y+3	; 0x03
    127a:	9c 81       	ldd	r25, Y+4	; 0x04
    127c:	0e 94 44 45 	call	0x8a88	; 0x8a88 <__gesf2>
    1280:	18 16       	cp	r1, r24
    1282:	8c f4       	brge	.+34     	; 0x12a6 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x106>
    1284:	29 81       	ldd	r18, Y+1	; 0x01
    1286:	3a 81       	ldd	r19, Y+2	; 0x02
    1288:	4b 81       	ldd	r20, Y+3	; 0x03
    128a:	5c 81       	ldd	r21, Y+4	; 0x04
    128c:	6f 85       	ldd	r22, Y+15	; 0x0f
    128e:	78 89       	ldd	r23, Y+16	; 0x10
    1290:	89 89       	ldd	r24, Y+17	; 0x11
    1292:	9a 89       	ldd	r25, Y+18	; 0x12
    1294:	0e 94 44 45 	call	0x8a88	; 0x8a88 <__gesf2>
    1298:	18 16       	cp	r1, r24
    129a:	2c f4       	brge	.+10     	; 0x12a6 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x106>
		{
			workingIntegral = 0;
    129c:	19 82       	std	Y+1, r1	; 0x01
    129e:	1a 82       	std	Y+2, r1	; 0x02
    12a0:	1b 82       	std	Y+3, r1	; 0x03
    12a2:	1c 82       	std	Y+4, r1	; 0x04
    12a4:	1b c0       	rjmp	.+54     	; 0x12dc <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x13c>
		}else if (workingIntegral < 0 && antiWindup < workingIntegral)
    12a6:	20 e0       	ldi	r18, 0x00	; 0
    12a8:	30 e0       	ldi	r19, 0x00	; 0
    12aa:	a9 01       	movw	r20, r18
    12ac:	69 81       	ldd	r22, Y+1	; 0x01
    12ae:	7a 81       	ldd	r23, Y+2	; 0x02
    12b0:	8b 81       	ldd	r24, Y+3	; 0x03
    12b2:	9c 81       	ldd	r25, Y+4	; 0x04
    12b4:	0e 94 66 43 	call	0x86cc	; 0x86cc <__cmpsf2>
    12b8:	88 23       	and	r24, r24
    12ba:	84 f4       	brge	.+32     	; 0x12dc <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x13c>
    12bc:	29 81       	ldd	r18, Y+1	; 0x01
    12be:	3a 81       	ldd	r19, Y+2	; 0x02
    12c0:	4b 81       	ldd	r20, Y+3	; 0x03
    12c2:	5c 81       	ldd	r21, Y+4	; 0x04
    12c4:	6f 85       	ldd	r22, Y+15	; 0x0f
    12c6:	78 89       	ldd	r23, Y+16	; 0x10
    12c8:	89 89       	ldd	r24, Y+17	; 0x11
    12ca:	9a 89       	ldd	r25, Y+18	; 0x12
    12cc:	0e 94 66 43 	call	0x86cc	; 0x86cc <__cmpsf2>
    12d0:	88 23       	and	r24, r24
    12d2:	24 f4       	brge	.+8      	; 0x12dc <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x13c>
		{
			workingIntegral = 0;
    12d4:	19 82       	std	Y+1, r1	; 0x01
    12d6:	1a 82       	std	Y+2, r1	; 0x02
    12d8:	1b 82       	std	Y+3, r1	; 0x03
    12da:	1c 82       	std	Y+4, r1	; 0x04
		}
		
		if (workingIntegral != 0)
    12dc:	20 e0       	ldi	r18, 0x00	; 0
    12de:	30 e0       	ldi	r19, 0x00	; 0
    12e0:	a9 01       	movw	r20, r18
    12e2:	69 81       	ldd	r22, Y+1	; 0x01
    12e4:	7a 81       	ldd	r23, Y+2	; 0x02
    12e6:	8b 81       	ldd	r24, Y+3	; 0x03
    12e8:	9c 81       	ldd	r25, Y+4	; 0x04
    12ea:	0e 94 66 43 	call	0x86cc	; 0x86cc <__cmpsf2>
    12ee:	88 23       	and	r24, r24
    12f0:	81 f0       	breq	.+32     	; 0x1312 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x172>
		{
				//Subtract the anti-windup value from the working integral. 
			workingIntegral = workingIntegral - antiWindup;
    12f2:	2f 85       	ldd	r18, Y+15	; 0x0f
    12f4:	38 89       	ldd	r19, Y+16	; 0x10
    12f6:	49 89       	ldd	r20, Y+17	; 0x11
    12f8:	5a 89       	ldd	r21, Y+18	; 0x12
    12fa:	69 81       	ldd	r22, Y+1	; 0x01
    12fc:	7a 81       	ldd	r23, Y+2	; 0x02
    12fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1300:	9c 81       	ldd	r25, Y+4	; 0x04
    1302:	0e 94 01 43 	call	0x8602	; 0x8602 <__subsf3>
    1306:	dc 01       	movw	r26, r24
    1308:	cb 01       	movw	r24, r22
    130a:	89 83       	std	Y+1, r24	; 0x01
    130c:	9a 83       	std	Y+2, r25	; 0x02
    130e:	ab 83       	std	Y+3, r26	; 0x03
    1310:	bc 83       	std	Y+4, r27	; 0x04
		}
	}
	
	return workingIntegral;
    1312:	89 81       	ldd	r24, Y+1	; 0x01
    1314:	9a 81       	ldd	r25, Y+2	; 0x02
    1316:	ab 81       	ldd	r26, Y+3	; 0x03
    1318:	bc 81       	ldd	r27, Y+4	; 0x04
}
    131a:	bc 01       	movw	r22, r24
    131c:	cd 01       	movw	r24, r26
    131e:	66 96       	adiw	r28, 0x16	; 22
    1320:	0f b6       	in	r0, 0x3f	; 63
    1322:	f8 94       	cli
    1324:	de bf       	out	0x3e, r29	; 62
    1326:	0f be       	out	0x3f, r0	; 63
    1328:	cd bf       	out	0x3d, r28	; 61
    132a:	df 91       	pop	r29
    132c:	cf 91       	pop	r28
    132e:	1f 91       	pop	r17
    1330:	0f 91       	pop	r16
    1332:	ff 90       	pop	r15
    1334:	ef 90       	pop	r14
    1336:	df 90       	pop	r13
    1338:	cf 90       	pop	r12
    133a:	bf 90       	pop	r11
    133c:	af 90       	pop	r10
    133e:	9f 90       	pop	r9
    1340:	8f 90       	pop	r8
    1342:	08 95       	ret

00001344 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>:
	//return integral;
//}


float PIDController::calculateVelocityError(float currentVelocity, float referenceVelocity)
{
    1344:	0f 93       	push	r16
    1346:	1f 93       	push	r17
    1348:	cf 93       	push	r28
    134a:	df 93       	push	r29
    134c:	cd b7       	in	r28, 0x3d	; 61
    134e:	de b7       	in	r29, 0x3e	; 62
    1350:	2a 97       	sbiw	r28, 0x0a	; 10
    1352:	0f b6       	in	r0, 0x3f	; 63
    1354:	f8 94       	cli
    1356:	de bf       	out	0x3e, r29	; 62
    1358:	0f be       	out	0x3f, r0	; 63
    135a:	cd bf       	out	0x3d, r28	; 61
    135c:	9a 83       	std	Y+2, r25	; 0x02
    135e:	89 83       	std	Y+1, r24	; 0x01
    1360:	4b 83       	std	Y+3, r20	; 0x03
    1362:	5c 83       	std	Y+4, r21	; 0x04
    1364:	6d 83       	std	Y+5, r22	; 0x05
    1366:	7e 83       	std	Y+6, r23	; 0x06
    1368:	0f 83       	std	Y+7, r16	; 0x07
    136a:	18 87       	std	Y+8, r17	; 0x08
    136c:	29 87       	std	Y+9, r18	; 0x09
    136e:	3a 87       	std	Y+10, r19	; 0x0a
	return currentVelocity - referenceVelocity;
    1370:	2f 81       	ldd	r18, Y+7	; 0x07
    1372:	38 85       	ldd	r19, Y+8	; 0x08
    1374:	49 85       	ldd	r20, Y+9	; 0x09
    1376:	5a 85       	ldd	r21, Y+10	; 0x0a
    1378:	6b 81       	ldd	r22, Y+3	; 0x03
    137a:	7c 81       	ldd	r23, Y+4	; 0x04
    137c:	8d 81       	ldd	r24, Y+5	; 0x05
    137e:	9e 81       	ldd	r25, Y+6	; 0x06
    1380:	0e 94 01 43 	call	0x8602	; 0x8602 <__subsf3>
    1384:	dc 01       	movw	r26, r24
    1386:	cb 01       	movw	r24, r22
}
    1388:	bc 01       	movw	r22, r24
    138a:	cd 01       	movw	r24, r26
    138c:	2a 96       	adiw	r28, 0x0a	; 10
    138e:	0f b6       	in	r0, 0x3f	; 63
    1390:	f8 94       	cli
    1392:	de bf       	out	0x3e, r29	; 62
    1394:	0f be       	out	0x3f, r0	; 63
    1396:	cd bf       	out	0x3d, r28	; 61
    1398:	df 91       	pop	r29
    139a:	cf 91       	pop	r28
    139c:	1f 91       	pop	r17
    139e:	0f 91       	pop	r16
    13a0:	08 95       	ret

000013a2 <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>:

float PIDController::calculateOuterLoopControlValue(float proportionalError, float velocityError, float integral, float proportionalGain, float derivativeGain)
{
    13a2:	8f 92       	push	r8
    13a4:	9f 92       	push	r9
    13a6:	af 92       	push	r10
    13a8:	bf 92       	push	r11
    13aa:	cf 92       	push	r12
    13ac:	df 92       	push	r13
    13ae:	ef 92       	push	r14
    13b0:	ff 92       	push	r15
    13b2:	0f 93       	push	r16
    13b4:	1f 93       	push	r17
    13b6:	cf 93       	push	r28
    13b8:	df 93       	push	r29
    13ba:	cd b7       	in	r28, 0x3d	; 61
    13bc:	de b7       	in	r29, 0x3e	; 62
    13be:	66 97       	sbiw	r28, 0x16	; 22
    13c0:	0f b6       	in	r0, 0x3f	; 63
    13c2:	f8 94       	cli
    13c4:	de bf       	out	0x3e, r29	; 62
    13c6:	0f be       	out	0x3f, r0	; 63
    13c8:	cd bf       	out	0x3d, r28	; 61
    13ca:	9e 83       	std	Y+6, r25	; 0x06
    13cc:	8d 83       	std	Y+5, r24	; 0x05
    13ce:	4f 83       	std	Y+7, r20	; 0x07
    13d0:	58 87       	std	Y+8, r21	; 0x08
    13d2:	69 87       	std	Y+9, r22	; 0x09
    13d4:	7a 87       	std	Y+10, r23	; 0x0a
    13d6:	0b 87       	std	Y+11, r16	; 0x0b
    13d8:	1c 87       	std	Y+12, r17	; 0x0c
    13da:	2d 87       	std	Y+13, r18	; 0x0d
    13dc:	3e 87       	std	Y+14, r19	; 0x0e
    13de:	cf 86       	std	Y+15, r12	; 0x0f
    13e0:	d8 8a       	std	Y+16, r13	; 0x10
    13e2:	e9 8a       	std	Y+17, r14	; 0x11
    13e4:	fa 8a       	std	Y+18, r15	; 0x12
    13e6:	8b 8a       	std	Y+19, r8	; 0x13
    13e8:	9c 8a       	std	Y+20, r9	; 0x14
    13ea:	ad 8a       	std	Y+21, r10	; 0x15
    13ec:	be 8a       	std	Y+22, r11	; 0x16
	float controlValue = 0;
    13ee:	19 82       	std	Y+1, r1	; 0x01
    13f0:	1a 82       	std	Y+2, r1	; 0x02
    13f2:	1b 82       	std	Y+3, r1	; 0x03
    13f4:	1c 82       	std	Y+4, r1	; 0x04
	
	controlValue = integral  + proportionalError * proportionalGain + velocityError * derivativeGain;
    13f6:	2b 89       	ldd	r18, Y+19	; 0x13
    13f8:	3c 89       	ldd	r19, Y+20	; 0x14
    13fa:	4d 89       	ldd	r20, Y+21	; 0x15
    13fc:	5e 89       	ldd	r21, Y+22	; 0x16
    13fe:	6f 81       	ldd	r22, Y+7	; 0x07
    1400:	78 85       	ldd	r23, Y+8	; 0x08
    1402:	89 85       	ldd	r24, Y+9	; 0x09
    1404:	9a 85       	ldd	r25, Y+10	; 0x0a
    1406:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    140a:	dc 01       	movw	r26, r24
    140c:	cb 01       	movw	r24, r22
    140e:	2f 85       	ldd	r18, Y+15	; 0x0f
    1410:	38 89       	ldd	r19, Y+16	; 0x10
    1412:	49 89       	ldd	r20, Y+17	; 0x11
    1414:	5a 89       	ldd	r21, Y+18	; 0x12
    1416:	bc 01       	movw	r22, r24
    1418:	cd 01       	movw	r24, r26
    141a:	0e 94 02 43 	call	0x8604	; 0x8604 <__addsf3>
    141e:	dc 01       	movw	r26, r24
    1420:	cb 01       	movw	r24, r22
    1422:	6c 01       	movw	r12, r24
    1424:	7d 01       	movw	r14, r26
    1426:	2e a1       	ldd	r18, Y+38	; 0x26
    1428:	3f a1       	ldd	r19, Y+39	; 0x27
    142a:	48 a5       	ldd	r20, Y+40	; 0x28
    142c:	59 a5       	ldd	r21, Y+41	; 0x29
    142e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1430:	7c 85       	ldd	r23, Y+12	; 0x0c
    1432:	8d 85       	ldd	r24, Y+13	; 0x0d
    1434:	9e 85       	ldd	r25, Y+14	; 0x0e
    1436:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    143a:	dc 01       	movw	r26, r24
    143c:	cb 01       	movw	r24, r22
    143e:	9c 01       	movw	r18, r24
    1440:	ad 01       	movw	r20, r26
    1442:	c7 01       	movw	r24, r14
    1444:	b6 01       	movw	r22, r12
    1446:	0e 94 02 43 	call	0x8604	; 0x8604 <__addsf3>
    144a:	dc 01       	movw	r26, r24
    144c:	cb 01       	movw	r24, r22
    144e:	89 83       	std	Y+1, r24	; 0x01
    1450:	9a 83       	std	Y+2, r25	; 0x02
    1452:	ab 83       	std	Y+3, r26	; 0x03
    1454:	bc 83       	std	Y+4, r27	; 0x04
	{
		controlValue = controlMinValue;
	}
	*/
	
	return controlValue;
    1456:	89 81       	ldd	r24, Y+1	; 0x01
    1458:	9a 81       	ldd	r25, Y+2	; 0x02
    145a:	ab 81       	ldd	r26, Y+3	; 0x03
    145c:	bc 81       	ldd	r27, Y+4	; 0x04
}
    145e:	bc 01       	movw	r22, r24
    1460:	cd 01       	movw	r24, r26
    1462:	66 96       	adiw	r28, 0x16	; 22
    1464:	0f b6       	in	r0, 0x3f	; 63
    1466:	f8 94       	cli
    1468:	de bf       	out	0x3e, r29	; 62
    146a:	0f be       	out	0x3f, r0	; 63
    146c:	cd bf       	out	0x3d, r28	; 61
    146e:	df 91       	pop	r29
    1470:	cf 91       	pop	r28
    1472:	1f 91       	pop	r17
    1474:	0f 91       	pop	r16
    1476:	ff 90       	pop	r15
    1478:	ef 90       	pop	r14
    147a:	df 90       	pop	r13
    147c:	cf 90       	pop	r12
    147e:	bf 90       	pop	r11
    1480:	af 90       	pop	r10
    1482:	9f 90       	pop	r9
    1484:	8f 90       	pop	r8
    1486:	08 95       	ret

00001488 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>:


float PIDController::adjustControlForServoLimits( float controlValueToAdjust, float minServoControlValue, float maxServoControlValue )
{
    1488:	cf 92       	push	r12
    148a:	df 92       	push	r13
    148c:	ef 92       	push	r14
    148e:	ff 92       	push	r15
    1490:	0f 93       	push	r16
    1492:	1f 93       	push	r17
    1494:	cf 93       	push	r28
    1496:	df 93       	push	r29
    1498:	cd b7       	in	r28, 0x3d	; 61
    149a:	de b7       	in	r29, 0x3e	; 62
    149c:	2e 97       	sbiw	r28, 0x0e	; 14
    149e:	0f b6       	in	r0, 0x3f	; 63
    14a0:	f8 94       	cli
    14a2:	de bf       	out	0x3e, r29	; 62
    14a4:	0f be       	out	0x3f, r0	; 63
    14a6:	cd bf       	out	0x3d, r28	; 61
    14a8:	9a 83       	std	Y+2, r25	; 0x02
    14aa:	89 83       	std	Y+1, r24	; 0x01
    14ac:	4b 83       	std	Y+3, r20	; 0x03
    14ae:	5c 83       	std	Y+4, r21	; 0x04
    14b0:	6d 83       	std	Y+5, r22	; 0x05
    14b2:	7e 83       	std	Y+6, r23	; 0x06
    14b4:	0f 83       	std	Y+7, r16	; 0x07
    14b6:	18 87       	std	Y+8, r17	; 0x08
    14b8:	29 87       	std	Y+9, r18	; 0x09
    14ba:	3a 87       	std	Y+10, r19	; 0x0a
    14bc:	cb 86       	std	Y+11, r12	; 0x0b
    14be:	dc 86       	std	Y+12, r13	; 0x0c
    14c0:	ed 86       	std	Y+13, r14	; 0x0d
    14c2:	fe 86       	std	Y+14, r15	; 0x0e

	//TODO: when generalizing ensure to change this value. 
	//Todo revisit including trim.
	//controlValue += yawServoTrim;
	
	if (controlValueToAdjust > maxServoControlValue)
    14c4:	2b 85       	ldd	r18, Y+11	; 0x0b
    14c6:	3c 85       	ldd	r19, Y+12	; 0x0c
    14c8:	4d 85       	ldd	r20, Y+13	; 0x0d
    14ca:	5e 85       	ldd	r21, Y+14	; 0x0e
    14cc:	6b 81       	ldd	r22, Y+3	; 0x03
    14ce:	7c 81       	ldd	r23, Y+4	; 0x04
    14d0:	8d 81       	ldd	r24, Y+5	; 0x05
    14d2:	9e 81       	ldd	r25, Y+6	; 0x06
    14d4:	0e 94 44 45 	call	0x8a88	; 0x8a88 <__gesf2>
    14d8:	18 16       	cp	r1, r24
    14da:	4c f4       	brge	.+18     	; 0x14ee <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff+0x66>
	{
		controlValueToAdjust = maxServoControlValue;
    14dc:	8b 85       	ldd	r24, Y+11	; 0x0b
    14de:	9c 85       	ldd	r25, Y+12	; 0x0c
    14e0:	ad 85       	ldd	r26, Y+13	; 0x0d
    14e2:	be 85       	ldd	r27, Y+14	; 0x0e
    14e4:	8b 83       	std	Y+3, r24	; 0x03
    14e6:	9c 83       	std	Y+4, r25	; 0x04
    14e8:	ad 83       	std	Y+5, r26	; 0x05
    14ea:	be 83       	std	Y+6, r27	; 0x06
    14ec:	14 c0       	rjmp	.+40     	; 0x1516 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff+0x8e>
	}else if (controlValueToAdjust < minServoControlValue)
    14ee:	2f 81       	ldd	r18, Y+7	; 0x07
    14f0:	38 85       	ldd	r19, Y+8	; 0x08
    14f2:	49 85       	ldd	r20, Y+9	; 0x09
    14f4:	5a 85       	ldd	r21, Y+10	; 0x0a
    14f6:	6b 81       	ldd	r22, Y+3	; 0x03
    14f8:	7c 81       	ldd	r23, Y+4	; 0x04
    14fa:	8d 81       	ldd	r24, Y+5	; 0x05
    14fc:	9e 81       	ldd	r25, Y+6	; 0x06
    14fe:	0e 94 66 43 	call	0x86cc	; 0x86cc <__cmpsf2>
    1502:	88 23       	and	r24, r24
    1504:	44 f4       	brge	.+16     	; 0x1516 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff+0x8e>
	{
		controlValueToAdjust = minServoControlValue;
    1506:	8f 81       	ldd	r24, Y+7	; 0x07
    1508:	98 85       	ldd	r25, Y+8	; 0x08
    150a:	a9 85       	ldd	r26, Y+9	; 0x09
    150c:	ba 85       	ldd	r27, Y+10	; 0x0a
    150e:	8b 83       	std	Y+3, r24	; 0x03
    1510:	9c 83       	std	Y+4, r25	; 0x04
    1512:	ad 83       	std	Y+5, r26	; 0x05
    1514:	be 83       	std	Y+6, r27	; 0x06
	}
	
	return controlValueToAdjust;
    1516:	8b 81       	ldd	r24, Y+3	; 0x03
    1518:	9c 81       	ldd	r25, Y+4	; 0x04
    151a:	ad 81       	ldd	r26, Y+5	; 0x05
    151c:	be 81       	ldd	r27, Y+6	; 0x06
}
    151e:	bc 01       	movw	r22, r24
    1520:	cd 01       	movw	r24, r26
    1522:	2e 96       	adiw	r28, 0x0e	; 14
    1524:	0f b6       	in	r0, 0x3f	; 63
    1526:	f8 94       	cli
    1528:	de bf       	out	0x3e, r29	; 62
    152a:	0f be       	out	0x3f, r0	; 63
    152c:	cd bf       	out	0x3d, r28	; 61
    152e:	df 91       	pop	r29
    1530:	cf 91       	pop	r28
    1532:	1f 91       	pop	r17
    1534:	0f 91       	pop	r16
    1536:	ff 90       	pop	r15
    1538:	ef 90       	pop	r14
    153a:	df 90       	pop	r13
    153c:	cf 90       	pop	r12
    153e:	08 95       	ret

00001540 <_Z30calculateInnerLoopControlValuefff>:


float calculateInnerLoopControlValue( float outerLoopSetpoint, float measuredValue, float gain )
{
    1540:	ef 92       	push	r14
    1542:	ff 92       	push	r15
    1544:	0f 93       	push	r16
    1546:	1f 93       	push	r17
    1548:	cf 93       	push	r28
    154a:	df 93       	push	r29
    154c:	cd b7       	in	r28, 0x3d	; 61
    154e:	de b7       	in	r29, 0x3e	; 62
    1550:	2c 97       	sbiw	r28, 0x0c	; 12
    1552:	0f b6       	in	r0, 0x3f	; 63
    1554:	f8 94       	cli
    1556:	de bf       	out	0x3e, r29	; 62
    1558:	0f be       	out	0x3f, r0	; 63
    155a:	cd bf       	out	0x3d, r28	; 61
    155c:	69 83       	std	Y+1, r22	; 0x01
    155e:	7a 83       	std	Y+2, r23	; 0x02
    1560:	8b 83       	std	Y+3, r24	; 0x03
    1562:	9c 83       	std	Y+4, r25	; 0x04
    1564:	2d 83       	std	Y+5, r18	; 0x05
    1566:	3e 83       	std	Y+6, r19	; 0x06
    1568:	4f 83       	std	Y+7, r20	; 0x07
    156a:	58 87       	std	Y+8, r21	; 0x08
    156c:	e9 86       	std	Y+9, r14	; 0x09
    156e:	fa 86       	std	Y+10, r15	; 0x0a
    1570:	0b 87       	std	Y+11, r16	; 0x0b
    1572:	1c 87       	std	Y+12, r17	; 0x0c
	//NOTE: IN MY OTHER IMPLEMENTATION I SUBTRACT THE VELOCITY (YES VELOCITY) OF THE ANGULAR MOTION.
	return gain * (measuredValue - outerLoopSetpoint);
    1574:	29 81       	ldd	r18, Y+1	; 0x01
    1576:	3a 81       	ldd	r19, Y+2	; 0x02
    1578:	4b 81       	ldd	r20, Y+3	; 0x03
    157a:	5c 81       	ldd	r21, Y+4	; 0x04
    157c:	6d 81       	ldd	r22, Y+5	; 0x05
    157e:	7e 81       	ldd	r23, Y+6	; 0x06
    1580:	8f 81       	ldd	r24, Y+7	; 0x07
    1582:	98 85       	ldd	r25, Y+8	; 0x08
    1584:	0e 94 01 43 	call	0x8602	; 0x8602 <__subsf3>
    1588:	dc 01       	movw	r26, r24
    158a:	cb 01       	movw	r24, r22
    158c:	29 85       	ldd	r18, Y+9	; 0x09
    158e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1590:	4b 85       	ldd	r20, Y+11	; 0x0b
    1592:	5c 85       	ldd	r21, Y+12	; 0x0c
    1594:	bc 01       	movw	r22, r24
    1596:	cd 01       	movw	r24, r26
    1598:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    159c:	dc 01       	movw	r26, r24
    159e:	cb 01       	movw	r24, r22
}
    15a0:	bc 01       	movw	r22, r24
    15a2:	cd 01       	movw	r24, r26
    15a4:	2c 96       	adiw	r28, 0x0c	; 12
    15a6:	0f b6       	in	r0, 0x3f	; 63
    15a8:	f8 94       	cli
    15aa:	de bf       	out	0x3e, r29	; 62
    15ac:	0f be       	out	0x3f, r0	; 63
    15ae:	cd bf       	out	0x3d, r28	; 61
    15b0:	df 91       	pop	r29
    15b2:	cf 91       	pop	r28
    15b4:	1f 91       	pop	r17
    15b6:	0f 91       	pop	r16
    15b8:	ff 90       	pop	r15
    15ba:	ef 90       	pop	r14
    15bc:	08 95       	ret

000015be <_ZN10helicopter10controller13PIDController30cyclicLongitudeOuterLoopUpdateEv>:

//side motion / roll / lateral

//forward motion / pitch / longitud
void PIDController::cyclicLongitudeOuterLoopUpdate()
{
    15be:	7f 92       	push	r7
    15c0:	8f 92       	push	r8
    15c2:	9f 92       	push	r9
    15c4:	af 92       	push	r10
    15c6:	bf 92       	push	r11
    15c8:	cf 92       	push	r12
    15ca:	df 92       	push	r13
    15cc:	ef 92       	push	r14
    15ce:	ff 92       	push	r15
    15d0:	0f 93       	push	r16
    15d2:	1f 93       	push	r17
    15d4:	cf 93       	push	r28
    15d6:	df 93       	push	r29
    15d8:	cd b7       	in	r28, 0x3d	; 61
    15da:	de b7       	in	r29, 0x3e	; 62
    15dc:	66 97       	sbiw	r28, 0x16	; 22
    15de:	0f b6       	in	r0, 0x3f	; 63
    15e0:	f8 94       	cli
    15e2:	de bf       	out	0x3e, r29	; 62
    15e4:	0f be       	out	0x3f, r0	; 63
    15e6:	cd bf       	out	0x3d, r28	; 61
    15e8:	9e 8b       	std	Y+22, r25	; 0x16
    15ea:	8d 8b       	std	Y+21, r24	; 0x15
	//float yawProportional = calculateYawProportional(model->MagYawDegrees(), model->ReferenceMagYawDegrees());
	float xProportional = calculateProportional(model->XNEDBodyFrame(), model->ReferenceXNEDBodyFrame());
    15ec:	8d 89       	ldd	r24, Y+21	; 0x15
    15ee:	9e 89       	ldd	r25, Y+22	; 0x16
    15f0:	fc 01       	movw	r30, r24
    15f2:	80 81       	ld	r24, Z
    15f4:	91 81       	ldd	r25, Z+1	; 0x01
    15f6:	0e 94 8d 02 	call	0x51a	; 0x51a <_ZNK10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEv>
    15fa:	6b 01       	movw	r12, r22
    15fc:	7c 01       	movw	r14, r24
    15fe:	8d 89       	ldd	r24, Y+21	; 0x15
    1600:	9e 89       	ldd	r25, Y+22	; 0x16
    1602:	fc 01       	movw	r30, r24
    1604:	80 81       	ld	r24, Z
    1606:	91 81       	ldd	r25, Z+1	; 0x01
    1608:	0e 94 77 02 	call	0x4ee	; 0x4ee <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>
    160c:	dc 01       	movw	r26, r24
    160e:	cb 01       	movw	r24, r22
    1610:	ed 89       	ldd	r30, Y+21	; 0x15
    1612:	fe 89       	ldd	r31, Y+22	; 0x16
    1614:	97 01       	movw	r18, r14
    1616:	86 01       	movw	r16, r12
    1618:	ac 01       	movw	r20, r24
    161a:	bd 01       	movw	r22, r26
    161c:	cf 01       	movw	r24, r30
    161e:	0e 94 50 08 	call	0x10a0	; 0x10a0 <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    1622:	dc 01       	movw	r26, r24
    1624:	cb 01       	movw	r24, r22
    1626:	89 83       	std	Y+1, r24	; 0x01
    1628:	9a 83       	std	Y+2, r25	; 0x02
    162a:	ab 83       	std	Y+3, r26	; 0x03
    162c:	bc 83       	std	Y+4, r27	; 0x04
	float xIntegralAntiWindup = calculateIntegralAntiWindup(model->LongitudeControlBeforeServoLimitsAdjustment(), model->LongitudeControl(), xAntiWindupGain);
    162e:	8d 89       	ldd	r24, Y+21	; 0x15
    1630:	9e 89       	ldd	r25, Y+22	; 0x16
    1632:	fc 01       	movw	r30, r24
    1634:	c0 a0       	ldd	r12, Z+32	; 0x20
    1636:	d1 a0       	ldd	r13, Z+33	; 0x21
    1638:	e2 a0       	ldd	r14, Z+34	; 0x22
    163a:	f3 a0       	ldd	r15, Z+35	; 0x23
    163c:	8d 89       	ldd	r24, Y+21	; 0x15
    163e:	9e 89       	ldd	r25, Y+22	; 0x16
    1640:	fc 01       	movw	r30, r24
    1642:	80 81       	ld	r24, Z
    1644:	91 81       	ldd	r25, Z+1	; 0x01
    1646:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>
    164a:	4b 01       	movw	r8, r22
    164c:	5c 01       	movw	r10, r24
    164e:	8d 89       	ldd	r24, Y+21	; 0x15
    1650:	9e 89       	ldd	r25, Y+22	; 0x16
    1652:	fc 01       	movw	r30, r24
    1654:	80 81       	ld	r24, Z
    1656:	91 81       	ldd	r25, Z+1	; 0x01
    1658:	0e 94 a3 02 	call	0x546	; 0x546 <_ZNK10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEv>
    165c:	dc 01       	movw	r26, r24
    165e:	cb 01       	movw	r24, r22
    1660:	ed 89       	ldd	r30, Y+21	; 0x15
    1662:	fe 89       	ldd	r31, Y+22	; 0x16
    1664:	95 01       	movw	r18, r10
    1666:	84 01       	movw	r16, r8
    1668:	ac 01       	movw	r20, r24
    166a:	bd 01       	movw	r22, r26
    166c:	cf 01       	movw	r24, r30
    166e:	0e 94 7f 08 	call	0x10fe	; 0x10fe <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    1672:	dc 01       	movw	r26, r24
    1674:	cb 01       	movw	r24, r22
    1676:	8d 83       	std	Y+5, r24	; 0x05
    1678:	9e 83       	std	Y+6, r25	; 0x06
    167a:	af 83       	std	Y+7, r26	; 0x07
    167c:	b8 87       	std	Y+8, r27	; 0x08
	float weightedXIntegral = calculateIntegral(xProportional, model->XIntegral(), xIntegralAntiWindup, xIntegralGain);
    167e:	8d 89       	ldd	r24, Y+21	; 0x15
    1680:	9e 89       	ldd	r25, Y+22	; 0x16
    1682:	fc 01       	movw	r30, r24
    1684:	a4 88       	ldd	r10, Z+20	; 0x14
    1686:	b5 88       	ldd	r11, Z+21	; 0x15
    1688:	c6 88       	ldd	r12, Z+22	; 0x16
    168a:	d7 88       	ldd	r13, Z+23	; 0x17
    168c:	8d 89       	ldd	r24, Y+21	; 0x15
    168e:	9e 89       	ldd	r25, Y+22	; 0x16
    1690:	fc 01       	movw	r30, r24
    1692:	80 81       	ld	r24, Z
    1694:	91 81       	ldd	r25, Z+1	; 0x01
    1696:	0e 94 94 03 	call	0x728	; 0x728 <_ZNK10helicopter5model11SystemModel9XIntegralEv>
    169a:	9b 01       	movw	r18, r22
    169c:	ac 01       	movw	r20, r24
    169e:	ed 80       	ldd	r14, Y+5	; 0x05
    16a0:	fe 80       	ldd	r15, Y+6	; 0x06
    16a2:	0f 81       	ldd	r16, Y+7	; 0x07
    16a4:	18 85       	ldd	r17, Y+8	; 0x08
    16a6:	89 81       	ldd	r24, Y+1	; 0x01
    16a8:	9a 81       	ldd	r25, Y+2	; 0x02
    16aa:	ab 81       	ldd	r26, Y+3	; 0x03
    16ac:	bc 81       	ldd	r27, Y+4	; 0x04
    16ae:	ed 89       	ldd	r30, Y+21	; 0x15
    16b0:	fe 89       	ldd	r31, Y+22	; 0x16
    16b2:	45 01       	movw	r8, r10
    16b4:	56 01       	movw	r10, r12
    16b6:	67 01       	movw	r12, r14
    16b8:	78 01       	movw	r14, r16
    16ba:	89 01       	movw	r16, r18
    16bc:	9a 01       	movw	r18, r20
    16be:	ac 01       	movw	r20, r24
    16c0:	bd 01       	movw	r22, r26
    16c2:	cf 01       	movw	r24, r30
    16c4:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    16c8:	dc 01       	movw	r26, r24
    16ca:	cb 01       	movw	r24, r22
    16cc:	89 87       	std	Y+9, r24	; 0x09
    16ce:	9a 87       	std	Y+10, r25	; 0x0a
    16d0:	ab 87       	std	Y+11, r26	; 0x0b
    16d2:	bc 87       	std	Y+12, r27	; 0x0c
	float xDerivativeError = calculateVelocityError(model->XVelocityMetersPerSecond(), model->ReferenceXVelocityMetersPerSecond());
    16d4:	8d 89       	ldd	r24, Y+21	; 0x15
    16d6:	9e 89       	ldd	r25, Y+22	; 0x16
    16d8:	fc 01       	movw	r30, r24
    16da:	80 81       	ld	r24, Z
    16dc:	91 81       	ldd	r25, Z+1	; 0x01
    16de:	0e 94 25 03 	call	0x64a	; 0x64a <_ZNK10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEv>
    16e2:	6b 01       	movw	r12, r22
    16e4:	7c 01       	movw	r14, r24
    16e6:	8d 89       	ldd	r24, Y+21	; 0x15
    16e8:	9e 89       	ldd	r25, Y+22	; 0x16
    16ea:	fc 01       	movw	r30, r24
    16ec:	80 81       	ld	r24, Z
    16ee:	91 81       	ldd	r25, Z+1	; 0x01
    16f0:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>
    16f4:	dc 01       	movw	r26, r24
    16f6:	cb 01       	movw	r24, r22
    16f8:	ed 89       	ldd	r30, Y+21	; 0x15
    16fa:	fe 89       	ldd	r31, Y+22	; 0x16
    16fc:	97 01       	movw	r18, r14
    16fe:	86 01       	movw	r16, r12
    1700:	ac 01       	movw	r20, r24
    1702:	bd 01       	movw	r22, r26
    1704:	cf 01       	movw	r24, r30
    1706:	0e 94 a2 09 	call	0x1344	; 0x1344 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    170a:	dc 01       	movw	r26, r24
    170c:	cb 01       	movw	r24, r22
    170e:	8d 87       	std	Y+13, r24	; 0x0d
    1710:	9e 87       	std	Y+14, r25	; 0x0e
    1712:	af 87       	std	Y+15, r26	; 0x0f
    1714:	b8 8b       	std	Y+16, r27	; 0x10
	float xLongitudinalOuterLoopControl = calculateOuterLoopControlValue(xProportional, xDerivativeError, weightedXIntegral, xProportionalGain, xDerivativeGain);
    1716:	8d 89       	ldd	r24, Y+21	; 0x15
    1718:	9e 89       	ldd	r25, Y+22	; 0x16
    171a:	fc 01       	movw	r30, r24
    171c:	80 8d       	ldd	r24, Z+24	; 0x18
    171e:	91 8d       	ldd	r25, Z+25	; 0x19
    1720:	a2 8d       	ldd	r26, Z+26	; 0x1a
    1722:	b3 8d       	ldd	r27, Z+27	; 0x1b
    1724:	2d 89       	ldd	r18, Y+21	; 0x15
    1726:	3e 89       	ldd	r19, Y+22	; 0x16
    1728:	f9 01       	movw	r30, r18
    172a:	84 8c       	ldd	r8, Z+28	; 0x1c
    172c:	95 8c       	ldd	r9, Z+29	; 0x1d
    172e:	a6 8c       	ldd	r10, Z+30	; 0x1e
    1730:	b7 8c       	ldd	r11, Z+31	; 0x1f
    1732:	c9 84       	ldd	r12, Y+9	; 0x09
    1734:	da 84       	ldd	r13, Y+10	; 0x0a
    1736:	eb 84       	ldd	r14, Y+11	; 0x0b
    1738:	fc 84       	ldd	r15, Y+12	; 0x0c
    173a:	0d 85       	ldd	r16, Y+13	; 0x0d
    173c:	1e 85       	ldd	r17, Y+14	; 0x0e
    173e:	2f 85       	ldd	r18, Y+15	; 0x0f
    1740:	38 89       	ldd	r19, Y+16	; 0x10
    1742:	49 81       	ldd	r20, Y+1	; 0x01
    1744:	5a 81       	ldd	r21, Y+2	; 0x02
    1746:	6b 81       	ldd	r22, Y+3	; 0x03
    1748:	7c 81       	ldd	r23, Y+4	; 0x04
    174a:	ed 89       	ldd	r30, Y+21	; 0x15
    174c:	fe 89       	ldd	r31, Y+22	; 0x16
    174e:	7b 2e       	mov	r7, r27
    1750:	7f 92       	push	r7
    1752:	7a 2e       	mov	r7, r26
    1754:	7f 92       	push	r7
    1756:	79 2e       	mov	r7, r25
    1758:	7f 92       	push	r7
    175a:	8f 93       	push	r24
    175c:	cf 01       	movw	r24, r30
    175e:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>
    1762:	0f 90       	pop	r0
    1764:	0f 90       	pop	r0
    1766:	0f 90       	pop	r0
    1768:	0f 90       	pop	r0
    176a:	dc 01       	movw	r26, r24
    176c:	cb 01       	movw	r24, r22
    176e:	89 8b       	std	Y+17, r24	; 0x11
    1770:	9a 8b       	std	Y+18, r25	; 0x12
    1772:	ab 8b       	std	Y+19, r26	; 0x13
    1774:	bc 8b       	std	Y+20, r27	; 0x14
	//float xOuterLoopControl = adjustControlForServoLimits(xControlBeforeServoLimitsAdjustment);
	
	model->XLongitudinalOuterLoopControl(xLongitudinalOuterLoopControl);
    1776:	8d 89       	ldd	r24, Y+21	; 0x15
    1778:	9e 89       	ldd	r25, Y+22	; 0x16
    177a:	fc 01       	movw	r30, r24
    177c:	20 81       	ld	r18, Z
    177e:	31 81       	ldd	r19, Z+1	; 0x01
    1780:	89 89       	ldd	r24, Y+17	; 0x11
    1782:	9a 89       	ldd	r25, Y+18	; 0x12
    1784:	ab 89       	ldd	r26, Y+19	; 0x13
    1786:	bc 89       	ldd	r27, Y+20	; 0x14
    1788:	ac 01       	movw	r20, r24
    178a:	bd 01       	movw	r22, r26
    178c:	c9 01       	movw	r24, r18
    178e:	0e 94 51 03 	call	0x6a2	; 0x6a2 <_ZN10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEf>
	//model->YawControlBeforeServoLimitsAdjustment(yawControlBeforeServoLimitsAdjustment);
	model->XIntegral(weightedXIntegral);
    1792:	8d 89       	ldd	r24, Y+21	; 0x15
    1794:	9e 89       	ldd	r25, Y+22	; 0x16
    1796:	fc 01       	movw	r30, r24
    1798:	20 81       	ld	r18, Z
    179a:	31 81       	ldd	r19, Z+1	; 0x01
    179c:	89 85       	ldd	r24, Y+9	; 0x09
    179e:	9a 85       	ldd	r25, Y+10	; 0x0a
    17a0:	ab 85       	ldd	r26, Y+11	; 0x0b
    17a2:	bc 85       	ldd	r27, Y+12	; 0x0c
    17a4:	ac 01       	movw	r20, r24
    17a6:	bd 01       	movw	r22, r26
    17a8:	c9 01       	movw	r24, r18
    17aa:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN10helicopter5model11SystemModel9XIntegralEf>
	model->XProportional(xProportional);
    17ae:	8d 89       	ldd	r24, Y+21	; 0x15
    17b0:	9e 89       	ldd	r25, Y+22	; 0x16
    17b2:	fc 01       	movw	r30, r24
    17b4:	20 81       	ld	r18, Z
    17b6:	31 81       	ldd	r19, Z+1	; 0x01
    17b8:	89 81       	ldd	r24, Y+1	; 0x01
    17ba:	9a 81       	ldd	r25, Y+2	; 0x02
    17bc:	ab 81       	ldd	r26, Y+3	; 0x03
    17be:	bc 81       	ldd	r27, Y+4	; 0x04
    17c0:	ac 01       	movw	r20, r24
    17c2:	bd 01       	movw	r22, r26
    17c4:	c9 01       	movw	r24, r18
    17c6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN10helicopter5model11SystemModel13XProportionalEf>
	model->XDerivativeError(xDerivativeError);
    17ca:	8d 89       	ldd	r24, Y+21	; 0x15
    17cc:	9e 89       	ldd	r25, Y+22	; 0x16
    17ce:	fc 01       	movw	r30, r24
    17d0:	20 81       	ld	r18, Z
    17d2:	31 81       	ldd	r19, Z+1	; 0x01
    17d4:	8d 85       	ldd	r24, Y+13	; 0x0d
    17d6:	9e 85       	ldd	r25, Y+14	; 0x0e
    17d8:	af 85       	ldd	r26, Y+15	; 0x0f
    17da:	b8 89       	ldd	r27, Y+16	; 0x10
    17dc:	ac 01       	movw	r20, r24
    17de:	bd 01       	movw	r22, r26
    17e0:	c9 01       	movw	r24, r18
    17e2:	0e 94 cf 03 	call	0x79e	; 0x79e <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf>
	
	
	
//	servoDriver->controlTailRotorCollective(xControl);
}
    17e6:	66 96       	adiw	r28, 0x16	; 22
    17e8:	0f b6       	in	r0, 0x3f	; 63
    17ea:	f8 94       	cli
    17ec:	de bf       	out	0x3e, r29	; 62
    17ee:	0f be       	out	0x3f, r0	; 63
    17f0:	cd bf       	out	0x3d, r28	; 61
    17f2:	df 91       	pop	r29
    17f4:	cf 91       	pop	r28
    17f6:	1f 91       	pop	r17
    17f8:	0f 91       	pop	r16
    17fa:	ff 90       	pop	r15
    17fc:	ef 90       	pop	r14
    17fe:	df 90       	pop	r13
    1800:	cf 90       	pop	r12
    1802:	bf 90       	pop	r11
    1804:	af 90       	pop	r10
    1806:	9f 90       	pop	r9
    1808:	8f 90       	pop	r8
    180a:	7f 90       	pop	r7
    180c:	08 95       	ret

0000180e <_ZN10helicopter10controller13PIDController28cyclicLateralOuterLoopUpdateEv>:

void PIDController::cyclicLateralOuterLoopUpdate()
{
    180e:	7f 92       	push	r7
    1810:	8f 92       	push	r8
    1812:	9f 92       	push	r9
    1814:	af 92       	push	r10
    1816:	bf 92       	push	r11
    1818:	cf 92       	push	r12
    181a:	df 92       	push	r13
    181c:	ef 92       	push	r14
    181e:	ff 92       	push	r15
    1820:	0f 93       	push	r16
    1822:	1f 93       	push	r17
    1824:	cf 93       	push	r28
    1826:	df 93       	push	r29
    1828:	cd b7       	in	r28, 0x3d	; 61
    182a:	de b7       	in	r29, 0x3e	; 62
    182c:	66 97       	sbiw	r28, 0x16	; 22
    182e:	0f b6       	in	r0, 0x3f	; 63
    1830:	f8 94       	cli
    1832:	de bf       	out	0x3e, r29	; 62
    1834:	0f be       	out	0x3f, r0	; 63
    1836:	cd bf       	out	0x3d, r28	; 61
    1838:	9e 8b       	std	Y+22, r25	; 0x16
    183a:	8d 8b       	std	Y+21, r24	; 0x15
	//float yawProportional = calculateYawProportional(model->MagYawDegrees(), model->ReferenceMagYawDegrees());
	float yProportional = calculateProportional(model->YNEDBodyFrame(), model->ReferenceYNEDBodyFrame());
    183c:	8d 89       	ldd	r24, Y+21	; 0x15
    183e:	9e 89       	ldd	r25, Y+22	; 0x16
    1840:	fc 01       	movw	r30, r24
    1842:	80 81       	ld	r24, Z
    1844:	91 81       	ldd	r25, Z+1	; 0x01
    1846:	0e 94 22 04 	call	0x844	; 0x844 <_ZNK10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEv>
    184a:	6b 01       	movw	r12, r22
    184c:	7c 01       	movw	r14, r24
    184e:	8d 89       	ldd	r24, Y+21	; 0x15
    1850:	9e 89       	ldd	r25, Y+22	; 0x16
    1852:	fc 01       	movw	r30, r24
    1854:	80 81       	ld	r24, Z
    1856:	91 81       	ldd	r25, Z+1	; 0x01
    1858:	0e 94 0a 04 	call	0x814	; 0x814 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>
    185c:	dc 01       	movw	r26, r24
    185e:	cb 01       	movw	r24, r22
    1860:	ed 89       	ldd	r30, Y+21	; 0x15
    1862:	fe 89       	ldd	r31, Y+22	; 0x16
    1864:	97 01       	movw	r18, r14
    1866:	86 01       	movw	r16, r12
    1868:	ac 01       	movw	r20, r24
    186a:	bd 01       	movw	r22, r26
    186c:	cf 01       	movw	r24, r30
    186e:	0e 94 50 08 	call	0x10a0	; 0x10a0 <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    1872:	dc 01       	movw	r26, r24
    1874:	cb 01       	movw	r24, r22
    1876:	89 83       	std	Y+1, r24	; 0x01
    1878:	9a 83       	std	Y+2, r25	; 0x02
    187a:	ab 83       	std	Y+3, r26	; 0x03
    187c:	bc 83       	std	Y+4, r27	; 0x04
	float yIntegralAntiWindup = calculateIntegralAntiWindup(model->LateralControlBeforeServoLimitsAdjustment(), model->LateralControl(), yAntiWindupGain);
    187e:	8d 89       	ldd	r24, Y+21	; 0x15
    1880:	9e 89       	ldd	r25, Y+22	; 0x16
    1882:	fc 01       	movw	r30, r24
    1884:	c4 a8       	ldd	r12, Z+52	; 0x34
    1886:	d5 a8       	ldd	r13, Z+53	; 0x35
    1888:	e6 a8       	ldd	r14, Z+54	; 0x36
    188a:	f7 a8       	ldd	r15, Z+55	; 0x37
    188c:	8d 89       	ldd	r24, Y+21	; 0x15
    188e:	9e 89       	ldd	r25, Y+22	; 0x16
    1890:	fc 01       	movw	r30, r24
    1892:	80 81       	ld	r24, Z
    1894:	91 81       	ldd	r25, Z+1	; 0x01
    1896:	0e 94 75 04 	call	0x8ea	; 0x8ea <_ZNK10helicopter5model11SystemModel14LateralControlEv>
    189a:	4b 01       	movw	r8, r22
    189c:	5c 01       	movw	r10, r24
    189e:	8d 89       	ldd	r24, Y+21	; 0x15
    18a0:	9e 89       	ldd	r25, Y+22	; 0x16
    18a2:	fc 01       	movw	r30, r24
    18a4:	80 81       	ld	r24, Z
    18a6:	91 81       	ldd	r25, Z+1	; 0x01
    18a8:	0e 94 3a 04 	call	0x874	; 0x874 <_ZNK10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEv>
    18ac:	dc 01       	movw	r26, r24
    18ae:	cb 01       	movw	r24, r22
    18b0:	ed 89       	ldd	r30, Y+21	; 0x15
    18b2:	fe 89       	ldd	r31, Y+22	; 0x16
    18b4:	95 01       	movw	r18, r10
    18b6:	84 01       	movw	r16, r8
    18b8:	ac 01       	movw	r20, r24
    18ba:	bd 01       	movw	r22, r26
    18bc:	cf 01       	movw	r24, r30
    18be:	0e 94 7f 08 	call	0x10fe	; 0x10fe <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    18c2:	dc 01       	movw	r26, r24
    18c4:	cb 01       	movw	r24, r22
    18c6:	8d 83       	std	Y+5, r24	; 0x05
    18c8:	9e 83       	std	Y+6, r25	; 0x06
    18ca:	af 83       	std	Y+7, r26	; 0x07
    18cc:	b8 87       	std	Y+8, r27	; 0x08
	float weightedYIntegral = calculateIntegral(yProportional, model->YIntegral(), yIntegralAntiWindup, yIntegralGain);
    18ce:	8d 89       	ldd	r24, Y+21	; 0x15
    18d0:	9e 89       	ldd	r25, Y+22	; 0x16
    18d2:	fc 01       	movw	r30, r24
    18d4:	a0 a4       	ldd	r10, Z+40	; 0x28
    18d6:	b1 a4       	ldd	r11, Z+41	; 0x29
    18d8:	c2 a4       	ldd	r12, Z+42	; 0x2a
    18da:	d3 a4       	ldd	r13, Z+43	; 0x2b
    18dc:	8d 89       	ldd	r24, Y+21	; 0x15
    18de:	9e 89       	ldd	r25, Y+22	; 0x16
    18e0:	fc 01       	movw	r30, r24
    18e2:	80 81       	ld	r24, Z
    18e4:	91 81       	ldd	r25, Z+1	; 0x01
    18e6:	0e 94 3e 05 	call	0xa7c	; 0xa7c <_ZNK10helicopter5model11SystemModel9YIntegralEv>
    18ea:	9b 01       	movw	r18, r22
    18ec:	ac 01       	movw	r20, r24
    18ee:	ed 80       	ldd	r14, Y+5	; 0x05
    18f0:	fe 80       	ldd	r15, Y+6	; 0x06
    18f2:	0f 81       	ldd	r16, Y+7	; 0x07
    18f4:	18 85       	ldd	r17, Y+8	; 0x08
    18f6:	89 81       	ldd	r24, Y+1	; 0x01
    18f8:	9a 81       	ldd	r25, Y+2	; 0x02
    18fa:	ab 81       	ldd	r26, Y+3	; 0x03
    18fc:	bc 81       	ldd	r27, Y+4	; 0x04
    18fe:	ed 89       	ldd	r30, Y+21	; 0x15
    1900:	fe 89       	ldd	r31, Y+22	; 0x16
    1902:	45 01       	movw	r8, r10
    1904:	56 01       	movw	r10, r12
    1906:	67 01       	movw	r12, r14
    1908:	78 01       	movw	r14, r16
    190a:	89 01       	movw	r16, r18
    190c:	9a 01       	movw	r18, r20
    190e:	ac 01       	movw	r20, r24
    1910:	bd 01       	movw	r22, r26
    1912:	cf 01       	movw	r24, r30
    1914:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    1918:	dc 01       	movw	r26, r24
    191a:	cb 01       	movw	r24, r22
    191c:	89 87       	std	Y+9, r24	; 0x09
    191e:	9a 87       	std	Y+10, r25	; 0x0a
    1920:	ab 87       	std	Y+11, r26	; 0x0b
    1922:	bc 87       	std	Y+12, r27	; 0x0c
	float yDerivativeError = calculateVelocityError(model->YVelocityMetersPerSecond(), model->ReferenceYVelocityMetersPerSecond());
    1924:	8d 89       	ldd	r24, Y+21	; 0x15
    1926:	9e 89       	ldd	r25, Y+22	; 0x16
    1928:	fc 01       	movw	r30, r24
    192a:	80 81       	ld	r24, Z
    192c:	91 81       	ldd	r25, Z+1	; 0x01
    192e:	0e 94 c8 04 	call	0x990	; 0x990 <_ZNK10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEv>
    1932:	6b 01       	movw	r12, r22
    1934:	7c 01       	movw	r14, r24
    1936:	8d 89       	ldd	r24, Y+21	; 0x15
    1938:	9e 89       	ldd	r25, Y+22	; 0x16
    193a:	fc 01       	movw	r30, r24
    193c:	80 81       	ld	r24, Z
    193e:	91 81       	ldd	r25, Z+1	; 0x01
    1940:	0e 94 b0 04 	call	0x960	; 0x960 <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>
    1944:	dc 01       	movw	r26, r24
    1946:	cb 01       	movw	r24, r22
    1948:	ed 89       	ldd	r30, Y+21	; 0x15
    194a:	fe 89       	ldd	r31, Y+22	; 0x16
    194c:	97 01       	movw	r18, r14
    194e:	86 01       	movw	r16, r12
    1950:	ac 01       	movw	r20, r24
    1952:	bd 01       	movw	r22, r26
    1954:	cf 01       	movw	r24, r30
    1956:	0e 94 a2 09 	call	0x1344	; 0x1344 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    195a:	dc 01       	movw	r26, r24
    195c:	cb 01       	movw	r24, r22
    195e:	8d 87       	std	Y+13, r24	; 0x0d
    1960:	9e 87       	std	Y+14, r25	; 0x0e
    1962:	af 87       	std	Y+15, r26	; 0x0f
    1964:	b8 8b       	std	Y+16, r27	; 0x10
	float yLateralOuterLoopControl = calculateOuterLoopControlValue(yProportional, yDerivativeError, weightedYIntegral, yProportionalGain, yDerivativeGain);
    1966:	8d 89       	ldd	r24, Y+21	; 0x15
    1968:	9e 89       	ldd	r25, Y+22	; 0x16
    196a:	fc 01       	movw	r30, r24
    196c:	84 a5       	ldd	r24, Z+44	; 0x2c
    196e:	95 a5       	ldd	r25, Z+45	; 0x2d
    1970:	a6 a5       	ldd	r26, Z+46	; 0x2e
    1972:	b7 a5       	ldd	r27, Z+47	; 0x2f
    1974:	2d 89       	ldd	r18, Y+21	; 0x15
    1976:	3e 89       	ldd	r19, Y+22	; 0x16
    1978:	f9 01       	movw	r30, r18
    197a:	80 a8       	ldd	r8, Z+48	; 0x30
    197c:	91 a8       	ldd	r9, Z+49	; 0x31
    197e:	a2 a8       	ldd	r10, Z+50	; 0x32
    1980:	b3 a8       	ldd	r11, Z+51	; 0x33
    1982:	c9 84       	ldd	r12, Y+9	; 0x09
    1984:	da 84       	ldd	r13, Y+10	; 0x0a
    1986:	eb 84       	ldd	r14, Y+11	; 0x0b
    1988:	fc 84       	ldd	r15, Y+12	; 0x0c
    198a:	0d 85       	ldd	r16, Y+13	; 0x0d
    198c:	1e 85       	ldd	r17, Y+14	; 0x0e
    198e:	2f 85       	ldd	r18, Y+15	; 0x0f
    1990:	38 89       	ldd	r19, Y+16	; 0x10
    1992:	49 81       	ldd	r20, Y+1	; 0x01
    1994:	5a 81       	ldd	r21, Y+2	; 0x02
    1996:	6b 81       	ldd	r22, Y+3	; 0x03
    1998:	7c 81       	ldd	r23, Y+4	; 0x04
    199a:	ed 89       	ldd	r30, Y+21	; 0x15
    199c:	fe 89       	ldd	r31, Y+22	; 0x16
    199e:	7b 2e       	mov	r7, r27
    19a0:	7f 92       	push	r7
    19a2:	7a 2e       	mov	r7, r26
    19a4:	7f 92       	push	r7
    19a6:	79 2e       	mov	r7, r25
    19a8:	7f 92       	push	r7
    19aa:	8f 93       	push	r24
    19ac:	cf 01       	movw	r24, r30
    19ae:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>
    19b2:	0f 90       	pop	r0
    19b4:	0f 90       	pop	r0
    19b6:	0f 90       	pop	r0
    19b8:	0f 90       	pop	r0
    19ba:	dc 01       	movw	r26, r24
    19bc:	cb 01       	movw	r24, r22
    19be:	89 8b       	std	Y+17, r24	; 0x11
    19c0:	9a 8b       	std	Y+18, r25	; 0x12
    19c2:	ab 8b       	std	Y+19, r26	; 0x13
    19c4:	bc 8b       	std	Y+20, r27	; 0x14
	//float xOuterLoopControl = adjustControlForServoLimits(xControlBeforeServoLimitsAdjustment);
	
	model->YLateralOuterLoopControl(yLateralOuterLoopControl);
    19c6:	8d 89       	ldd	r24, Y+21	; 0x15
    19c8:	9e 89       	ldd	r25, Y+22	; 0x16
    19ca:	fc 01       	movw	r30, r24
    19cc:	20 81       	ld	r18, Z
    19ce:	31 81       	ldd	r19, Z+1	; 0x01
    19d0:	89 89       	ldd	r24, Y+17	; 0x11
    19d2:	9a 89       	ldd	r25, Y+18	; 0x12
    19d4:	ab 89       	ldd	r26, Y+19	; 0x13
    19d6:	bc 89       	ldd	r27, Y+20	; 0x14
    19d8:	ac 01       	movw	r20, r24
    19da:	bd 01       	movw	r22, r26
    19dc:	c9 01       	movw	r24, r18
    19de:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <_ZN10helicopter5model11SystemModel24YLateralOuterLoopControlEf>
	//model->YawControlBeforeServoLimitsAdjustment(yawControlBeforeServoLimitsAdjustment);
	model->YIntegral(weightedYIntegral);
    19e2:	8d 89       	ldd	r24, Y+21	; 0x15
    19e4:	9e 89       	ldd	r25, Y+22	; 0x16
    19e6:	fc 01       	movw	r30, r24
    19e8:	20 81       	ld	r18, Z
    19ea:	31 81       	ldd	r19, Z+1	; 0x01
    19ec:	89 85       	ldd	r24, Y+9	; 0x09
    19ee:	9a 85       	ldd	r25, Y+10	; 0x0a
    19f0:	ab 85       	ldd	r26, Y+11	; 0x0b
    19f2:	bc 85       	ldd	r27, Y+12	; 0x0c
    19f4:	ac 01       	movw	r20, r24
    19f6:	bd 01       	movw	r22, r26
    19f8:	c9 01       	movw	r24, r18
    19fa:	0e 94 56 05 	call	0xaac	; 0xaac <_ZN10helicopter5model11SystemModel9YIntegralEf>
	model->YProportional(yProportional);
    19fe:	8d 89       	ldd	r24, Y+21	; 0x15
    1a00:	9e 89       	ldd	r25, Y+22	; 0x16
    1a02:	fc 01       	movw	r30, r24
    1a04:	20 81       	ld	r18, Z
    1a06:	31 81       	ldd	r19, Z+1	; 0x01
    1a08:	89 81       	ldd	r24, Y+1	; 0x01
    1a0a:	9a 81       	ldd	r25, Y+2	; 0x02
    1a0c:	ab 81       	ldd	r26, Y+3	; 0x03
    1a0e:	bc 81       	ldd	r27, Y+4	; 0x04
    1a10:	ac 01       	movw	r20, r24
    1a12:	bd 01       	movw	r22, r26
    1a14:	c9 01       	movw	r24, r18
    1a16:	0e 94 1b 05 	call	0xa36	; 0xa36 <_ZN10helicopter5model11SystemModel13YProportionalEf>
	model->YDerivativeError(yDerivativeError);
    1a1a:	8d 89       	ldd	r24, Y+21	; 0x15
    1a1c:	9e 89       	ldd	r25, Y+22	; 0x16
    1a1e:	fc 01       	movw	r30, r24
    1a20:	20 81       	ld	r18, Z
    1a22:	31 81       	ldd	r19, Z+1	; 0x01
    1a24:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a26:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a28:	af 85       	ldd	r26, Y+15	; 0x0f
    1a2a:	b8 89       	ldd	r27, Y+16	; 0x10
    1a2c:	ac 01       	movw	r20, r24
    1a2e:	bd 01       	movw	r22, r26
    1a30:	c9 01       	movw	r24, r18
    1a32:	0e 94 79 05 	call	0xaf2	; 0xaf2 <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf>
	
	//	servoDriver->controlTailRotorCollective(xControl);
}
    1a36:	66 96       	adiw	r28, 0x16	; 22
    1a38:	0f b6       	in	r0, 0x3f	; 63
    1a3a:	f8 94       	cli
    1a3c:	de bf       	out	0x3e, r29	; 62
    1a3e:	0f be       	out	0x3f, r0	; 63
    1a40:	cd bf       	out	0x3d, r28	; 61
    1a42:	df 91       	pop	r29
    1a44:	cf 91       	pop	r28
    1a46:	1f 91       	pop	r17
    1a48:	0f 91       	pop	r16
    1a4a:	ff 90       	pop	r15
    1a4c:	ef 90       	pop	r14
    1a4e:	df 90       	pop	r13
    1a50:	cf 90       	pop	r12
    1a52:	bf 90       	pop	r11
    1a54:	af 90       	pop	r10
    1a56:	9f 90       	pop	r9
    1a58:	8f 90       	pop	r8
    1a5a:	7f 90       	pop	r7
    1a5c:	08 95       	ret

00001a5e <_ZN10helicopter10controller13PIDController30cyclicLongitudeInnerLoopUpdateEv>:

void PIDController::cyclicLongitudeInnerLoopUpdate()
{
    1a5e:	6f 92       	push	r6
    1a60:	7f 92       	push	r7
    1a62:	8f 92       	push	r8
    1a64:	9f 92       	push	r9
    1a66:	af 92       	push	r10
    1a68:	bf 92       	push	r11
    1a6a:	cf 92       	push	r12
    1a6c:	df 92       	push	r13
    1a6e:	ef 92       	push	r14
    1a70:	ff 92       	push	r15
    1a72:	0f 93       	push	r16
    1a74:	1f 93       	push	r17
    1a76:	cf 93       	push	r28
    1a78:	df 93       	push	r29
    1a7a:	cd b7       	in	r28, 0x3d	; 61
    1a7c:	de b7       	in	r29, 0x3e	; 62
    1a7e:	2a 97       	sbiw	r28, 0x0a	; 10
    1a80:	0f b6       	in	r0, 0x3f	; 63
    1a82:	f8 94       	cli
    1a84:	de bf       	out	0x3e, r29	; 62
    1a86:	0f be       	out	0x3f, r0	; 63
    1a88:	cd bf       	out	0x3d, r28	; 61
    1a8a:	9a 87       	std	Y+10, r25	; 0x0a
    1a8c:	89 87       	std	Y+9, r24	; 0x09
	float xLongitudinalInnerLoopControlBeforeServoLimits = calculateInnerLoopControlValue(model->XLongitudinalOuterLoopControl(), model->ThetaPitchDegrees(), longitudeInnerLoopGain);
    1a8e:	89 85       	ldd	r24, Y+9	; 0x09
    1a90:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a92:	fc 01       	movw	r30, r24
    1a94:	64 a0       	ldd	r6, Z+36	; 0x24
    1a96:	75 a0       	ldd	r7, Z+37	; 0x25
    1a98:	86 a0       	ldd	r8, Z+38	; 0x26
    1a9a:	97 a0       	ldd	r9, Z+39	; 0x27
    1a9c:	89 85       	ldd	r24, Y+9	; 0x09
    1a9e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1aa0:	fc 01       	movw	r30, r24
    1aa2:	80 81       	ld	r24, Z
    1aa4:	91 81       	ldd	r25, Z+1	; 0x01
    1aa6:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <_ZNK10helicopter5model11SystemModel17ThetaPitchDegreesEv>
    1aaa:	5b 01       	movw	r10, r22
    1aac:	6c 01       	movw	r12, r24
    1aae:	89 85       	ldd	r24, Y+9	; 0x09
    1ab0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ab2:	fc 01       	movw	r30, r24
    1ab4:	80 81       	ld	r24, Z
    1ab6:	91 81       	ldd	r25, Z+1	; 0x01
    1ab8:	0e 94 3b 03 	call	0x676	; 0x676 <_ZNK10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEv>
    1abc:	dc 01       	movw	r26, r24
    1abe:	cb 01       	movw	r24, r22
    1ac0:	84 01       	movw	r16, r8
    1ac2:	73 01       	movw	r14, r6
    1ac4:	a6 01       	movw	r20, r12
    1ac6:	95 01       	movw	r18, r10
    1ac8:	bc 01       	movw	r22, r24
    1aca:	cd 01       	movw	r24, r26
    1acc:	0e 94 a0 0a 	call	0x1540	; 0x1540 <_Z30calculateInnerLoopControlValuefff>
    1ad0:	dc 01       	movw	r26, r24
    1ad2:	cb 01       	movw	r24, r22
    1ad4:	89 83       	std	Y+1, r24	; 0x01
    1ad6:	9a 83       	std	Y+2, r25	; 0x02
    1ad8:	ab 83       	std	Y+3, r26	; 0x03
    1ada:	bc 83       	std	Y+4, r27	; 0x04
	
	float xLongitudinalInnerLoopControl = adjustControlForServoLimits(xLongitudinalInnerLoopControlBeforeServoLimits, minLongitudeServoControlValue, maxLongitudeServoControlValue);
    1adc:	89 85       	ldd	r24, Y+9	; 0x09
    1ade:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ae0:	88 5a       	subi	r24, 0xA8	; 168
    1ae2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ae4:	fc 01       	movw	r30, r24
    1ae6:	e0 80       	ld	r14, Z
    1ae8:	f1 80       	ldd	r15, Z+1	; 0x01
    1aea:	02 81       	ldd	r16, Z+2	; 0x02
    1aec:	13 81       	ldd	r17, Z+3	; 0x03
    1aee:	89 85       	ldd	r24, Y+9	; 0x09
    1af0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1af2:	8c 5a       	subi	r24, 0xAC	; 172
    1af4:	9f 4f       	sbci	r25, 0xFF	; 255
    1af6:	fc 01       	movw	r30, r24
    1af8:	20 81       	ld	r18, Z
    1afa:	31 81       	ldd	r19, Z+1	; 0x01
    1afc:	42 81       	ldd	r20, Z+2	; 0x02
    1afe:	53 81       	ldd	r21, Z+3	; 0x03
    1b00:	89 81       	ldd	r24, Y+1	; 0x01
    1b02:	9a 81       	ldd	r25, Y+2	; 0x02
    1b04:	ab 81       	ldd	r26, Y+3	; 0x03
    1b06:	bc 81       	ldd	r27, Y+4	; 0x04
    1b08:	e9 85       	ldd	r30, Y+9	; 0x09
    1b0a:	fa 85       	ldd	r31, Y+10	; 0x0a
    1b0c:	67 01       	movw	r12, r14
    1b0e:	78 01       	movw	r14, r16
    1b10:	89 01       	movw	r16, r18
    1b12:	9a 01       	movw	r18, r20
    1b14:	ac 01       	movw	r20, r24
    1b16:	bd 01       	movw	r22, r26
    1b18:	cf 01       	movw	r24, r30
    1b1a:	0e 94 44 0a 	call	0x1488	; 0x1488 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    1b1e:	dc 01       	movw	r26, r24
    1b20:	cb 01       	movw	r24, r22
    1b22:	8d 83       	std	Y+5, r24	; 0x05
    1b24:	9e 83       	std	Y+6, r25	; 0x06
    1b26:	af 83       	std	Y+7, r26	; 0x07
    1b28:	b8 87       	std	Y+8, r27	; 0x08
	
	model->LongitudeControlBeforeServoLimitsAdjustment(xLongitudinalInnerLoopControlBeforeServoLimits);
    1b2a:	89 85       	ldd	r24, Y+9	; 0x09
    1b2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b2e:	fc 01       	movw	r30, r24
    1b30:	20 81       	ld	r18, Z
    1b32:	31 81       	ldd	r19, Z+1	; 0x01
    1b34:	89 81       	ldd	r24, Y+1	; 0x01
    1b36:	9a 81       	ldd	r25, Y+2	; 0x02
    1b38:	ab 81       	ldd	r26, Y+3	; 0x03
    1b3a:	bc 81       	ldd	r27, Y+4	; 0x04
    1b3c:	ac 01       	movw	r20, r24
    1b3e:	bd 01       	movw	r22, r26
    1b40:	c9 01       	movw	r24, r18
    1b42:	0e 94 b9 02 	call	0x572	; 0x572 <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf>
	
	model->LongitudeControl(xLongitudinalInnerLoopControl);
    1b46:	89 85       	ldd	r24, Y+9	; 0x09
    1b48:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b4a:	fc 01       	movw	r30, r24
    1b4c:	20 81       	ld	r18, Z
    1b4e:	31 81       	ldd	r19, Z+1	; 0x01
    1b50:	8d 81       	ldd	r24, Y+5	; 0x05
    1b52:	9e 81       	ldd	r25, Y+6	; 0x06
    1b54:	af 81       	ldd	r26, Y+7	; 0x07
    1b56:	b8 85       	ldd	r27, Y+8	; 0x08
    1b58:	ac 01       	movw	r20, r24
    1b5a:	bd 01       	movw	r22, r26
    1b5c:	c9 01       	movw	r24, r18
    1b5e:	0e 94 ef 02 	call	0x5de	; 0x5de <_ZN10helicopter5model11SystemModel16LongitudeControlEf>
	
	servoDriver->controlLongitudinal(xLongitudinalInnerLoopControl);
    1b62:	89 85       	ldd	r24, Y+9	; 0x09
    1b64:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b66:	fc 01       	movw	r30, r24
    1b68:	22 81       	ldd	r18, Z+2	; 0x02
    1b6a:	33 81       	ldd	r19, Z+3	; 0x03
    1b6c:	8d 81       	ldd	r24, Y+5	; 0x05
    1b6e:	9e 81       	ldd	r25, Y+6	; 0x06
    1b70:	af 81       	ldd	r26, Y+7	; 0x07
    1b72:	b8 85       	ldd	r27, Y+8	; 0x08
    1b74:	ac 01       	movw	r20, r24
    1b76:	bd 01       	movw	r22, r26
    1b78:	c9 01       	movw	r24, r18
    1b7a:	0e 94 39 14 	call	0x2872	; 0x2872 <_ZN10helicopter7drivers11ServoDriver19controlLongitudinalEd>
}
    1b7e:	2a 96       	adiw	r28, 0x0a	; 10
    1b80:	0f b6       	in	r0, 0x3f	; 63
    1b82:	f8 94       	cli
    1b84:	de bf       	out	0x3e, r29	; 62
    1b86:	0f be       	out	0x3f, r0	; 63
    1b88:	cd bf       	out	0x3d, r28	; 61
    1b8a:	df 91       	pop	r29
    1b8c:	cf 91       	pop	r28
    1b8e:	1f 91       	pop	r17
    1b90:	0f 91       	pop	r16
    1b92:	ff 90       	pop	r15
    1b94:	ef 90       	pop	r14
    1b96:	df 90       	pop	r13
    1b98:	cf 90       	pop	r12
    1b9a:	bf 90       	pop	r11
    1b9c:	af 90       	pop	r10
    1b9e:	9f 90       	pop	r9
    1ba0:	8f 90       	pop	r8
    1ba2:	7f 90       	pop	r7
    1ba4:	6f 90       	pop	r6
    1ba6:	08 95       	ret

00001ba8 <_ZN10helicopter10controller13PIDController28cyclicLateralInnerLoopUpdateEv>:

void PIDController::cyclicLateralInnerLoopUpdate()
{
    1ba8:	6f 92       	push	r6
    1baa:	7f 92       	push	r7
    1bac:	8f 92       	push	r8
    1bae:	9f 92       	push	r9
    1bb0:	af 92       	push	r10
    1bb2:	bf 92       	push	r11
    1bb4:	cf 92       	push	r12
    1bb6:	df 92       	push	r13
    1bb8:	ef 92       	push	r14
    1bba:	ff 92       	push	r15
    1bbc:	0f 93       	push	r16
    1bbe:	1f 93       	push	r17
    1bc0:	cf 93       	push	r28
    1bc2:	df 93       	push	r29
    1bc4:	cd b7       	in	r28, 0x3d	; 61
    1bc6:	de b7       	in	r29, 0x3e	; 62
    1bc8:	2a 97       	sbiw	r28, 0x0a	; 10
    1bca:	0f b6       	in	r0, 0x3f	; 63
    1bcc:	f8 94       	cli
    1bce:	de bf       	out	0x3e, r29	; 62
    1bd0:	0f be       	out	0x3f, r0	; 63
    1bd2:	cd bf       	out	0x3d, r28	; 61
    1bd4:	9a 87       	std	Y+10, r25	; 0x0a
    1bd6:	89 87       	std	Y+9, r24	; 0x09
	float yLateralInnerLoopControlBeforeServoLimits = calculateInnerLoopControlValue(model->YLateralOuterLoopControl(), model->PhiRollDegrees(), lateralInnerLoopGain);
    1bd8:	89 85       	ldd	r24, Y+9	; 0x09
    1bda:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bdc:	fc 01       	movw	r30, r24
    1bde:	60 ac       	ldd	r6, Z+56	; 0x38
    1be0:	71 ac       	ldd	r7, Z+57	; 0x39
    1be2:	82 ac       	ldd	r8, Z+58	; 0x3a
    1be4:	93 ac       	ldd	r9, Z+59	; 0x3b
    1be6:	89 85       	ldd	r24, Y+9	; 0x09
    1be8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bea:	fc 01       	movw	r30, r24
    1bec:	80 81       	ld	r24, Z
    1bee:	91 81       	ldd	r25, Z+1	; 0x01
    1bf0:	0e 94 9c 05 	call	0xb38	; 0xb38 <_ZNK10helicopter5model11SystemModel14PhiRollDegreesEv>
    1bf4:	5b 01       	movw	r10, r22
    1bf6:	6c 01       	movw	r12, r24
    1bf8:	89 85       	ldd	r24, Y+9	; 0x09
    1bfa:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bfc:	fc 01       	movw	r30, r24
    1bfe:	80 81       	ld	r24, Z
    1c00:	91 81       	ldd	r25, Z+1	; 0x01
    1c02:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <_ZNK10helicopter5model11SystemModel24YLateralOuterLoopControlEv>
    1c06:	dc 01       	movw	r26, r24
    1c08:	cb 01       	movw	r24, r22
    1c0a:	84 01       	movw	r16, r8
    1c0c:	73 01       	movw	r14, r6
    1c0e:	a6 01       	movw	r20, r12
    1c10:	95 01       	movw	r18, r10
    1c12:	bc 01       	movw	r22, r24
    1c14:	cd 01       	movw	r24, r26
    1c16:	0e 94 a0 0a 	call	0x1540	; 0x1540 <_Z30calculateInnerLoopControlValuefff>
    1c1a:	dc 01       	movw	r26, r24
    1c1c:	cb 01       	movw	r24, r22
    1c1e:	89 83       	std	Y+1, r24	; 0x01
    1c20:	9a 83       	std	Y+2, r25	; 0x02
    1c22:	ab 83       	std	Y+3, r26	; 0x03
    1c24:	bc 83       	std	Y+4, r27	; 0x04
	
	float yLateralInnerLoopControl = adjustControlForServoLimits(yLateralInnerLoopControlBeforeServoLimits, minLateralServoControlValue, maxLateralServoControlValue);
    1c26:	89 85       	ldd	r24, Y+9	; 0x09
    1c28:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c2a:	80 5a       	subi	r24, 0xA0	; 160
    1c2c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c2e:	fc 01       	movw	r30, r24
    1c30:	e0 80       	ld	r14, Z
    1c32:	f1 80       	ldd	r15, Z+1	; 0x01
    1c34:	02 81       	ldd	r16, Z+2	; 0x02
    1c36:	13 81       	ldd	r17, Z+3	; 0x03
    1c38:	89 85       	ldd	r24, Y+9	; 0x09
    1c3a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c3c:	84 5a       	subi	r24, 0xA4	; 164
    1c3e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c40:	fc 01       	movw	r30, r24
    1c42:	20 81       	ld	r18, Z
    1c44:	31 81       	ldd	r19, Z+1	; 0x01
    1c46:	42 81       	ldd	r20, Z+2	; 0x02
    1c48:	53 81       	ldd	r21, Z+3	; 0x03
    1c4a:	89 81       	ldd	r24, Y+1	; 0x01
    1c4c:	9a 81       	ldd	r25, Y+2	; 0x02
    1c4e:	ab 81       	ldd	r26, Y+3	; 0x03
    1c50:	bc 81       	ldd	r27, Y+4	; 0x04
    1c52:	e9 85       	ldd	r30, Y+9	; 0x09
    1c54:	fa 85       	ldd	r31, Y+10	; 0x0a
    1c56:	67 01       	movw	r12, r14
    1c58:	78 01       	movw	r14, r16
    1c5a:	89 01       	movw	r16, r18
    1c5c:	9a 01       	movw	r18, r20
    1c5e:	ac 01       	movw	r20, r24
    1c60:	bd 01       	movw	r22, r26
    1c62:	cf 01       	movw	r24, r30
    1c64:	0e 94 44 0a 	call	0x1488	; 0x1488 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    1c68:	dc 01       	movw	r26, r24
    1c6a:	cb 01       	movw	r24, r22
    1c6c:	8d 83       	std	Y+5, r24	; 0x05
    1c6e:	9e 83       	std	Y+6, r25	; 0x06
    1c70:	af 83       	std	Y+7, r26	; 0x07
    1c72:	b8 87       	std	Y+8, r27	; 0x08
	
	model->LateralControlBeforeServoLimitsAdjustment(yLateralInnerLoopControlBeforeServoLimits);
    1c74:	89 85       	ldd	r24, Y+9	; 0x09
    1c76:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c78:	fc 01       	movw	r30, r24
    1c7a:	20 81       	ld	r18, Z
    1c7c:	31 81       	ldd	r19, Z+1	; 0x01
    1c7e:	89 81       	ldd	r24, Y+1	; 0x01
    1c80:	9a 81       	ldd	r25, Y+2	; 0x02
    1c82:	ab 81       	ldd	r26, Y+3	; 0x03
    1c84:	bc 81       	ldd	r27, Y+4	; 0x04
    1c86:	ac 01       	movw	r20, r24
    1c88:	bd 01       	movw	r22, r26
    1c8a:	c9 01       	movw	r24, r18
    1c8c:	0e 94 52 04 	call	0x8a4	; 0x8a4 <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf>
	
	model->LateralControl(yLateralInnerLoopControl);
    1c90:	89 85       	ldd	r24, Y+9	; 0x09
    1c92:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c94:	fc 01       	movw	r30, r24
    1c96:	20 81       	ld	r18, Z
    1c98:	31 81       	ldd	r19, Z+1	; 0x01
    1c9a:	8d 81       	ldd	r24, Y+5	; 0x05
    1c9c:	9e 81       	ldd	r25, Y+6	; 0x06
    1c9e:	af 81       	ldd	r26, Y+7	; 0x07
    1ca0:	b8 85       	ldd	r27, Y+8	; 0x08
    1ca2:	ac 01       	movw	r20, r24
    1ca4:	bd 01       	movw	r22, r26
    1ca6:	c9 01       	movw	r24, r18
    1ca8:	0e 94 8d 04 	call	0x91a	; 0x91a <_ZN10helicopter5model11SystemModel14LateralControlEf>
	
	servoDriver->controlLongitudinal(yLateralInnerLoopControl);
    1cac:	89 85       	ldd	r24, Y+9	; 0x09
    1cae:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cb0:	fc 01       	movw	r30, r24
    1cb2:	22 81       	ldd	r18, Z+2	; 0x02
    1cb4:	33 81       	ldd	r19, Z+3	; 0x03
    1cb6:	8d 81       	ldd	r24, Y+5	; 0x05
    1cb8:	9e 81       	ldd	r25, Y+6	; 0x06
    1cba:	af 81       	ldd	r26, Y+7	; 0x07
    1cbc:	b8 85       	ldd	r27, Y+8	; 0x08
    1cbe:	ac 01       	movw	r20, r24
    1cc0:	bd 01       	movw	r22, r26
    1cc2:	c9 01       	movw	r24, r18
    1cc4:	0e 94 39 14 	call	0x2872	; 0x2872 <_ZN10helicopter7drivers11ServoDriver19controlLongitudinalEd>
}
    1cc8:	2a 96       	adiw	r28, 0x0a	; 10
    1cca:	0f b6       	in	r0, 0x3f	; 63
    1ccc:	f8 94       	cli
    1cce:	de bf       	out	0x3e, r29	; 62
    1cd0:	0f be       	out	0x3f, r0	; 63
    1cd2:	cd bf       	out	0x3d, r28	; 61
    1cd4:	df 91       	pop	r29
    1cd6:	cf 91       	pop	r28
    1cd8:	1f 91       	pop	r17
    1cda:	0f 91       	pop	r16
    1cdc:	ff 90       	pop	r15
    1cde:	ef 90       	pop	r14
    1ce0:	df 90       	pop	r13
    1ce2:	cf 90       	pop	r12
    1ce4:	bf 90       	pop	r11
    1ce6:	af 90       	pop	r10
    1ce8:	9f 90       	pop	r9
    1cea:	8f 90       	pop	r8
    1cec:	7f 90       	pop	r7
    1cee:	6f 90       	pop	r6
    1cf0:	08 95       	ret

00001cf2 <_ZN10helicopter10controller13PIDController34tailRotorCollectiveOuterLoopUpdateEv>:

void PIDController::tailRotorCollectiveOuterLoopUpdate()
{
    1cf2:	7f 92       	push	r7
    1cf4:	8f 92       	push	r8
    1cf6:	9f 92       	push	r9
    1cf8:	af 92       	push	r10
    1cfa:	bf 92       	push	r11
    1cfc:	cf 92       	push	r12
    1cfe:	df 92       	push	r13
    1d00:	ef 92       	push	r14
    1d02:	ff 92       	push	r15
    1d04:	0f 93       	push	r16
    1d06:	1f 93       	push	r17
    1d08:	cf 93       	push	r28
    1d0a:	df 93       	push	r29
    1d0c:	cd b7       	in	r28, 0x3d	; 61
    1d0e:	de b7       	in	r29, 0x3e	; 62
    1d10:	6a 97       	sbiw	r28, 0x1a	; 26
    1d12:	0f b6       	in	r0, 0x3f	; 63
    1d14:	f8 94       	cli
    1d16:	de bf       	out	0x3e, r29	; 62
    1d18:	0f be       	out	0x3f, r0	; 63
    1d1a:	cd bf       	out	0x3d, r28	; 61
    1d1c:	9a 8f       	std	Y+26, r25	; 0x1a
    1d1e:	89 8f       	std	Y+25, r24	; 0x19
	float yawProportional = calculateProportional(model->MagYawDegrees(), model->ReferenceMagYawDegrees());
    1d20:	89 8d       	ldd	r24, Y+25	; 0x19
    1d22:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1d24:	fc 01       	movw	r30, r24
    1d26:	80 81       	ld	r24, Z
    1d28:	91 81       	ldd	r25, Z+1	; 0x01
    1d2a:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_ZNK10helicopter5model11SystemModel22ReferenceMagYawDegreesEv>
    1d2e:	6b 01       	movw	r12, r22
    1d30:	7c 01       	movw	r14, r24
    1d32:	89 8d       	ldd	r24, Y+25	; 0x19
    1d34:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1d36:	fc 01       	movw	r30, r24
    1d38:	80 81       	ld	r24, Z
    1d3a:	91 81       	ldd	r25, Z+1	; 0x01
    1d3c:	0e 94 3d 01 	call	0x27a	; 0x27a <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>
    1d40:	dc 01       	movw	r26, r24
    1d42:	cb 01       	movw	r24, r22
    1d44:	e9 8d       	ldd	r30, Y+25	; 0x19
    1d46:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1d48:	97 01       	movw	r18, r14
    1d4a:	86 01       	movw	r16, r12
    1d4c:	ac 01       	movw	r20, r24
    1d4e:	bd 01       	movw	r22, r26
    1d50:	cf 01       	movw	r24, r30
    1d52:	0e 94 50 08 	call	0x10a0	; 0x10a0 <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    1d56:	dc 01       	movw	r26, r24
    1d58:	cb 01       	movw	r24, r22
    1d5a:	89 83       	std	Y+1, r24	; 0x01
    1d5c:	9a 83       	std	Y+2, r25	; 0x02
    1d5e:	ab 83       	std	Y+3, r26	; 0x03
    1d60:	bc 83       	std	Y+4, r27	; 0x04
	
	yawProportional = convertYawErrorFrom360to180(yawProportional);
    1d62:	89 81       	ldd	r24, Y+1	; 0x01
    1d64:	9a 81       	ldd	r25, Y+2	; 0x02
    1d66:	ab 81       	ldd	r26, Y+3	; 0x03
    1d68:	bc 81       	ldd	r27, Y+4	; 0x04
    1d6a:	29 8d       	ldd	r18, Y+25	; 0x19
    1d6c:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1d6e:	ac 01       	movw	r20, r24
    1d70:	bd 01       	movw	r22, r26
    1d72:	c9 01       	movw	r24, r18
    1d74:	0e 94 89 11 	call	0x2312	; 0x2312 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef>
    1d78:	dc 01       	movw	r26, r24
    1d7a:	cb 01       	movw	r24, r22
    1d7c:	89 83       	std	Y+1, r24	; 0x01
    1d7e:	9a 83       	std	Y+2, r25	; 0x02
    1d80:	ab 83       	std	Y+3, r26	; 0x03
    1d82:	bc 83       	std	Y+4, r27	; 0x04
	
	float yawIntegralAntiWindup = calculateIntegralAntiWindup(model->YawControlBeforeServoLimitsAdjustment(), model->YawControl(), yawAntiWindupGain);
    1d84:	89 8d       	ldd	r24, Y+25	; 0x19
    1d86:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1d88:	fc 01       	movw	r30, r24
    1d8a:	c0 88       	ldd	r12, Z+16	; 0x10
    1d8c:	d1 88       	ldd	r13, Z+17	; 0x11
    1d8e:	e2 88       	ldd	r14, Z+18	; 0x12
    1d90:	f3 88       	ldd	r15, Z+19	; 0x13
    1d92:	89 8d       	ldd	r24, Y+25	; 0x19
    1d94:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1d96:	fc 01       	movw	r30, r24
    1d98:	80 81       	ld	r24, Z
    1d9a:	91 81       	ldd	r25, Z+1	; 0x01
    1d9c:	0e 94 69 01 	call	0x2d2	; 0x2d2 <_ZNK10helicopter5model11SystemModel10YawControlEv>
    1da0:	4b 01       	movw	r8, r22
    1da2:	5c 01       	movw	r10, r24
    1da4:	89 8d       	ldd	r24, Y+25	; 0x19
    1da6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1da8:	fc 01       	movw	r30, r24
    1daa:	80 81       	ld	r24, Z
    1dac:	91 81       	ldd	r25, Z+1	; 0x01
    1dae:	0e 94 9f 01 	call	0x33e	; 0x33e <_ZNK10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEv>
    1db2:	dc 01       	movw	r26, r24
    1db4:	cb 01       	movw	r24, r22
    1db6:	e9 8d       	ldd	r30, Y+25	; 0x19
    1db8:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1dba:	95 01       	movw	r18, r10
    1dbc:	84 01       	movw	r16, r8
    1dbe:	ac 01       	movw	r20, r24
    1dc0:	bd 01       	movw	r22, r26
    1dc2:	cf 01       	movw	r24, r30
    1dc4:	0e 94 7f 08 	call	0x10fe	; 0x10fe <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    1dc8:	dc 01       	movw	r26, r24
    1dca:	cb 01       	movw	r24, r22
    1dcc:	8d 83       	std	Y+5, r24	; 0x05
    1dce:	9e 83       	std	Y+6, r25	; 0x06
    1dd0:	af 83       	std	Y+7, r26	; 0x07
    1dd2:	b8 87       	std	Y+8, r27	; 0x08
	float weightedYawIntegral = calculateIntegral(yawProportional, model->YawIntegral(), yawIntegralAntiWindup, yawIntegralGain);
    1dd4:	89 8d       	ldd	r24, Y+25	; 0x19
    1dd6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1dd8:	fc 01       	movw	r30, r24
    1dda:	a4 80       	ldd	r10, Z+4	; 0x04
    1ddc:	b5 80       	ldd	r11, Z+5	; 0x05
    1dde:	c6 80       	ldd	r12, Z+6	; 0x06
    1de0:	d7 80       	ldd	r13, Z+7	; 0x07
    1de2:	89 8d       	ldd	r24, Y+25	; 0x19
    1de4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1de6:	fc 01       	movw	r30, r24
    1de8:	80 81       	ld	r24, Z
    1dea:	91 81       	ldd	r25, Z+1	; 0x01
    1dec:	0e 94 01 02 	call	0x402	; 0x402 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>
    1df0:	9b 01       	movw	r18, r22
    1df2:	ac 01       	movw	r20, r24
    1df4:	ed 80       	ldd	r14, Y+5	; 0x05
    1df6:	fe 80       	ldd	r15, Y+6	; 0x06
    1df8:	0f 81       	ldd	r16, Y+7	; 0x07
    1dfa:	18 85       	ldd	r17, Y+8	; 0x08
    1dfc:	89 81       	ldd	r24, Y+1	; 0x01
    1dfe:	9a 81       	ldd	r25, Y+2	; 0x02
    1e00:	ab 81       	ldd	r26, Y+3	; 0x03
    1e02:	bc 81       	ldd	r27, Y+4	; 0x04
    1e04:	e9 8d       	ldd	r30, Y+25	; 0x19
    1e06:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1e08:	45 01       	movw	r8, r10
    1e0a:	56 01       	movw	r10, r12
    1e0c:	67 01       	movw	r12, r14
    1e0e:	78 01       	movw	r14, r16
    1e10:	89 01       	movw	r16, r18
    1e12:	9a 01       	movw	r18, r20
    1e14:	ac 01       	movw	r20, r24
    1e16:	bd 01       	movw	r22, r26
    1e18:	cf 01       	movw	r24, r30
    1e1a:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    1e1e:	dc 01       	movw	r26, r24
    1e20:	cb 01       	movw	r24, r22
    1e22:	89 87       	std	Y+9, r24	; 0x09
    1e24:	9a 87       	std	Y+10, r25	; 0x0a
    1e26:	ab 87       	std	Y+11, r26	; 0x0b
    1e28:	bc 87       	std	Y+12, r27	; 0x0c
	float yawDerivativeError = calculateVelocityError(model->YawVelocityDegreesPerSecond(), model->ReferenceYawVelocityDegreesPerSecond());
    1e2a:	89 8d       	ldd	r24, Y+25	; 0x19
    1e2c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1e2e:	fc 01       	movw	r30, r24
    1e30:	80 81       	ld	r24, Z
    1e32:	91 81       	ldd	r25, Z+1	; 0x01
    1e34:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_ZNK10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEv>
    1e38:	6b 01       	movw	r12, r22
    1e3a:	7c 01       	movw	r14, r24
    1e3c:	89 8d       	ldd	r24, Y+25	; 0x19
    1e3e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1e40:	fc 01       	movw	r30, r24
    1e42:	80 81       	ld	r24, Z
    1e44:	91 81       	ldd	r25, Z+1	; 0x01
    1e46:	0e 94 d5 01 	call	0x3aa	; 0x3aa <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>
    1e4a:	dc 01       	movw	r26, r24
    1e4c:	cb 01       	movw	r24, r22
    1e4e:	e9 8d       	ldd	r30, Y+25	; 0x19
    1e50:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1e52:	97 01       	movw	r18, r14
    1e54:	86 01       	movw	r16, r12
    1e56:	ac 01       	movw	r20, r24
    1e58:	bd 01       	movw	r22, r26
    1e5a:	cf 01       	movw	r24, r30
    1e5c:	0e 94 a2 09 	call	0x1344	; 0x1344 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    1e60:	dc 01       	movw	r26, r24
    1e62:	cb 01       	movw	r24, r22
    1e64:	8d 87       	std	Y+13, r24	; 0x0d
    1e66:	9e 87       	std	Y+14, r25	; 0x0e
    1e68:	af 87       	std	Y+15, r26	; 0x0f
    1e6a:	b8 8b       	std	Y+16, r27	; 0x10
	float yawControlBeforeServoLimitsAdjustment = calculateOuterLoopControlValue(yawProportional, yawDerivativeError, weightedYawIntegral, yawProportionalGain, yawDerivativeGain);
    1e6c:	89 8d       	ldd	r24, Y+25	; 0x19
    1e6e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1e70:	fc 01       	movw	r30, r24
    1e72:	80 85       	ldd	r24, Z+8	; 0x08
    1e74:	91 85       	ldd	r25, Z+9	; 0x09
    1e76:	a2 85       	ldd	r26, Z+10	; 0x0a
    1e78:	b3 85       	ldd	r27, Z+11	; 0x0b
    1e7a:	29 8d       	ldd	r18, Y+25	; 0x19
    1e7c:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1e7e:	f9 01       	movw	r30, r18
    1e80:	84 84       	ldd	r8, Z+12	; 0x0c
    1e82:	95 84       	ldd	r9, Z+13	; 0x0d
    1e84:	a6 84       	ldd	r10, Z+14	; 0x0e
    1e86:	b7 84       	ldd	r11, Z+15	; 0x0f
    1e88:	c9 84       	ldd	r12, Y+9	; 0x09
    1e8a:	da 84       	ldd	r13, Y+10	; 0x0a
    1e8c:	eb 84       	ldd	r14, Y+11	; 0x0b
    1e8e:	fc 84       	ldd	r15, Y+12	; 0x0c
    1e90:	0d 85       	ldd	r16, Y+13	; 0x0d
    1e92:	1e 85       	ldd	r17, Y+14	; 0x0e
    1e94:	2f 85       	ldd	r18, Y+15	; 0x0f
    1e96:	38 89       	ldd	r19, Y+16	; 0x10
    1e98:	49 81       	ldd	r20, Y+1	; 0x01
    1e9a:	5a 81       	ldd	r21, Y+2	; 0x02
    1e9c:	6b 81       	ldd	r22, Y+3	; 0x03
    1e9e:	7c 81       	ldd	r23, Y+4	; 0x04
    1ea0:	e9 8d       	ldd	r30, Y+25	; 0x19
    1ea2:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1ea4:	7b 2e       	mov	r7, r27
    1ea6:	7f 92       	push	r7
    1ea8:	7a 2e       	mov	r7, r26
    1eaa:	7f 92       	push	r7
    1eac:	79 2e       	mov	r7, r25
    1eae:	7f 92       	push	r7
    1eb0:	8f 93       	push	r24
    1eb2:	cf 01       	movw	r24, r30
    1eb4:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>
    1eb8:	0f 90       	pop	r0
    1eba:	0f 90       	pop	r0
    1ebc:	0f 90       	pop	r0
    1ebe:	0f 90       	pop	r0
    1ec0:	dc 01       	movw	r26, r24
    1ec2:	cb 01       	movw	r24, r22
    1ec4:	89 8b       	std	Y+17, r24	; 0x11
    1ec6:	9a 8b       	std	Y+18, r25	; 0x12
    1ec8:	ab 8b       	std	Y+19, r26	; 0x13
    1eca:	bc 8b       	std	Y+20, r27	; 0x14
	float yawControl = adjustControlForServoLimits(yawControlBeforeServoLimitsAdjustment, minYawServoControlValue, maxYawServoControlValue);
    1ecc:	89 8d       	ldd	r24, Y+25	; 0x19
    1ece:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1ed0:	80 5b       	subi	r24, 0xB0	; 176
    1ed2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ed4:	fc 01       	movw	r30, r24
    1ed6:	e0 80       	ld	r14, Z
    1ed8:	f1 80       	ldd	r15, Z+1	; 0x01
    1eda:	02 81       	ldd	r16, Z+2	; 0x02
    1edc:	13 81       	ldd	r17, Z+3	; 0x03
    1ede:	89 8d       	ldd	r24, Y+25	; 0x19
    1ee0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1ee2:	84 5b       	subi	r24, 0xB4	; 180
    1ee4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ee6:	fc 01       	movw	r30, r24
    1ee8:	20 81       	ld	r18, Z
    1eea:	31 81       	ldd	r19, Z+1	; 0x01
    1eec:	42 81       	ldd	r20, Z+2	; 0x02
    1eee:	53 81       	ldd	r21, Z+3	; 0x03
    1ef0:	89 89       	ldd	r24, Y+17	; 0x11
    1ef2:	9a 89       	ldd	r25, Y+18	; 0x12
    1ef4:	ab 89       	ldd	r26, Y+19	; 0x13
    1ef6:	bc 89       	ldd	r27, Y+20	; 0x14
    1ef8:	e9 8d       	ldd	r30, Y+25	; 0x19
    1efa:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1efc:	67 01       	movw	r12, r14
    1efe:	78 01       	movw	r14, r16
    1f00:	89 01       	movw	r16, r18
    1f02:	9a 01       	movw	r18, r20
    1f04:	ac 01       	movw	r20, r24
    1f06:	bd 01       	movw	r22, r26
    1f08:	cf 01       	movw	r24, r30
    1f0a:	0e 94 44 0a 	call	0x1488	; 0x1488 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    1f0e:	dc 01       	movw	r26, r24
    1f10:	cb 01       	movw	r24, r22
    1f12:	8d 8b       	std	Y+21, r24	; 0x15
    1f14:	9e 8b       	std	Y+22, r25	; 0x16
    1f16:	af 8b       	std	Y+23, r26	; 0x17
    1f18:	b8 8f       	std	Y+24, r27	; 0x18
	
	model->YawControl(yawControl);
    1f1a:	89 8d       	ldd	r24, Y+25	; 0x19
    1f1c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1f1e:	fc 01       	movw	r30, r24
    1f20:	20 81       	ld	r18, Z
    1f22:	31 81       	ldd	r19, Z+1	; 0x01
    1f24:	8d 89       	ldd	r24, Y+21	; 0x15
    1f26:	9e 89       	ldd	r25, Y+22	; 0x16
    1f28:	af 89       	ldd	r26, Y+23	; 0x17
    1f2a:	b8 8d       	ldd	r27, Y+24	; 0x18
    1f2c:	ac 01       	movw	r20, r24
    1f2e:	bd 01       	movw	r22, r26
    1f30:	c9 01       	movw	r24, r18
    1f32:	0e 94 7f 01 	call	0x2fe	; 0x2fe <_ZN10helicopter5model11SystemModel10YawControlEf>
	model->YawControlBeforeServoLimitsAdjustment(yawControlBeforeServoLimitsAdjustment);
    1f36:	89 8d       	ldd	r24, Y+25	; 0x19
    1f38:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1f3a:	fc 01       	movw	r30, r24
    1f3c:	20 81       	ld	r18, Z
    1f3e:	31 81       	ldd	r19, Z+1	; 0x01
    1f40:	89 89       	ldd	r24, Y+17	; 0x11
    1f42:	9a 89       	ldd	r25, Y+18	; 0x12
    1f44:	ab 89       	ldd	r26, Y+19	; 0x13
    1f46:	bc 89       	ldd	r27, Y+20	; 0x14
    1f48:	ac 01       	movw	r20, r24
    1f4a:	bd 01       	movw	r22, r26
    1f4c:	c9 01       	movw	r24, r18
    1f4e:	0e 94 b5 01 	call	0x36a	; 0x36a <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf>
	model->YawIntegral(weightedYawIntegral);
    1f52:	89 8d       	ldd	r24, Y+25	; 0x19
    1f54:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1f56:	fc 01       	movw	r30, r24
    1f58:	20 81       	ld	r18, Z
    1f5a:	31 81       	ldd	r19, Z+1	; 0x01
    1f5c:	89 85       	ldd	r24, Y+9	; 0x09
    1f5e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f60:	ab 85       	ldd	r26, Y+11	; 0x0b
    1f62:	bc 85       	ldd	r27, Y+12	; 0x0c
    1f64:	ac 01       	movw	r20, r24
    1f66:	bd 01       	movw	r22, r26
    1f68:	c9 01       	movw	r24, r18
    1f6a:	0e 94 17 02 	call	0x42e	; 0x42e <_ZN10helicopter5model11SystemModel11YawIntegralEf>
	model->YawProportional(yawProportional);
    1f6e:	89 8d       	ldd	r24, Y+25	; 0x19
    1f70:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1f72:	fc 01       	movw	r30, r24
    1f74:	20 81       	ld	r18, Z
    1f76:	31 81       	ldd	r19, Z+1	; 0x01
    1f78:	89 81       	ldd	r24, Y+1	; 0x01
    1f7a:	9a 81       	ldd	r25, Y+2	; 0x02
    1f7c:	ab 81       	ldd	r26, Y+3	; 0x03
    1f7e:	bc 81       	ldd	r27, Y+4	; 0x04
    1f80:	ac 01       	movw	r20, r24
    1f82:	bd 01       	movw	r22, r26
    1f84:	c9 01       	movw	r24, r18
    1f86:	0e 94 37 02 	call	0x46e	; 0x46e <_ZN10helicopter5model11SystemModel15YawProportionalEf>
	model->YawDerivativeError(yawDerivativeError);
    1f8a:	89 8d       	ldd	r24, Y+25	; 0x19
    1f8c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1f8e:	fc 01       	movw	r30, r24
    1f90:	20 81       	ld	r18, Z
    1f92:	31 81       	ldd	r19, Z+1	; 0x01
    1f94:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f96:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f98:	af 85       	ldd	r26, Y+15	; 0x0f
    1f9a:	b8 89       	ldd	r27, Y+16	; 0x10
    1f9c:	ac 01       	movw	r20, r24
    1f9e:	bd 01       	movw	r22, r26
    1fa0:	c9 01       	movw	r24, r18
    1fa2:	0e 94 57 02 	call	0x4ae	; 0x4ae <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf>
	
	servoDriver->controlTailRotorCollective(yawControl);
    1fa6:	89 8d       	ldd	r24, Y+25	; 0x19
    1fa8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1faa:	fc 01       	movw	r30, r24
    1fac:	22 81       	ldd	r18, Z+2	; 0x02
    1fae:	33 81       	ldd	r19, Z+3	; 0x03
    1fb0:	8d 89       	ldd	r24, Y+21	; 0x15
    1fb2:	9e 89       	ldd	r25, Y+22	; 0x16
    1fb4:	af 89       	ldd	r26, Y+23	; 0x17
    1fb6:	b8 8d       	ldd	r27, Y+24	; 0x18
    1fb8:	ac 01       	movw	r20, r24
    1fba:	bd 01       	movw	r22, r26
    1fbc:	c9 01       	movw	r24, r18
    1fbe:	0e 94 b7 13 	call	0x276e	; 0x276e <_ZN10helicopter7drivers11ServoDriver26controlTailRotorCollectiveEd>
}
    1fc2:	6a 96       	adiw	r28, 0x1a	; 26
    1fc4:	0f b6       	in	r0, 0x3f	; 63
    1fc6:	f8 94       	cli
    1fc8:	de bf       	out	0x3e, r29	; 62
    1fca:	0f be       	out	0x3f, r0	; 63
    1fcc:	cd bf       	out	0x3d, r28	; 61
    1fce:	df 91       	pop	r29
    1fd0:	cf 91       	pop	r28
    1fd2:	1f 91       	pop	r17
    1fd4:	0f 91       	pop	r16
    1fd6:	ff 90       	pop	r15
    1fd8:	ef 90       	pop	r14
    1fda:	df 90       	pop	r13
    1fdc:	cf 90       	pop	r12
    1fde:	bf 90       	pop	r11
    1fe0:	af 90       	pop	r10
    1fe2:	9f 90       	pop	r9
    1fe4:	8f 90       	pop	r8
    1fe6:	7f 90       	pop	r7
    1fe8:	08 95       	ret

00001fea <_ZN10helicopter10controller13PIDController34mainRotorCollectiveOuterLoopUpdateEv>:

void PIDController::mainRotorCollectiveOuterLoopUpdate()
{
    1fea:	7f 92       	push	r7
    1fec:	8f 92       	push	r8
    1fee:	9f 92       	push	r9
    1ff0:	af 92       	push	r10
    1ff2:	bf 92       	push	r11
    1ff4:	cf 92       	push	r12
    1ff6:	df 92       	push	r13
    1ff8:	ef 92       	push	r14
    1ffa:	ff 92       	push	r15
    1ffc:	0f 93       	push	r16
    1ffe:	1f 93       	push	r17
    2000:	cf 93       	push	r28
    2002:	df 93       	push	r29
    2004:	cd b7       	in	r28, 0x3d	; 61
    2006:	de b7       	in	r29, 0x3e	; 62
    2008:	6a 97       	sbiw	r28, 0x1a	; 26
    200a:	0f b6       	in	r0, 0x3f	; 63
    200c:	f8 94       	cli
    200e:	de bf       	out	0x3e, r29	; 62
    2010:	0f be       	out	0x3f, r0	; 63
    2012:	cd bf       	out	0x3d, r28	; 61
    2014:	9a 8f       	std	Y+26, r25	; 0x1a
    2016:	89 8f       	std	Y+25, r24	; 0x19
	float zProportional = calculateProportional(model->AltitudeFeetAgl(), model->ReferenceAltitudeFeet());
    2018:	89 8d       	ldd	r24, Y+25	; 0x19
    201a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    201c:	fc 01       	movw	r30, r24
    201e:	80 81       	ld	r24, Z
    2020:	91 81       	ldd	r25, Z+1	; 0x01
    2022:	0e 94 cc 05 	call	0xb98	; 0xb98 <_ZNK10helicopter5model11SystemModel21ReferenceAltitudeFeetEv>
    2026:	6b 01       	movw	r12, r22
    2028:	7c 01       	movw	r14, r24
    202a:	89 8d       	ldd	r24, Y+25	; 0x19
    202c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    202e:	fc 01       	movw	r30, r24
    2030:	80 81       	ld	r24, Z
    2032:	91 81       	ldd	r25, Z+1	; 0x01
    2034:	0e 94 b4 05 	call	0xb68	; 0xb68 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    2038:	dc 01       	movw	r26, r24
    203a:	cb 01       	movw	r24, r22
    203c:	e9 8d       	ldd	r30, Y+25	; 0x19
    203e:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2040:	97 01       	movw	r18, r14
    2042:	86 01       	movw	r16, r12
    2044:	ac 01       	movw	r20, r24
    2046:	bd 01       	movw	r22, r26
    2048:	cf 01       	movw	r24, r30
    204a:	0e 94 50 08 	call	0x10a0	; 0x10a0 <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    204e:	dc 01       	movw	r26, r24
    2050:	cb 01       	movw	r24, r22
    2052:	89 83       	std	Y+1, r24	; 0x01
    2054:	9a 83       	std	Y+2, r25	; 0x02
    2056:	ab 83       	std	Y+3, r26	; 0x03
    2058:	bc 83       	std	Y+4, r27	; 0x04
	
	float zIntegralAntiWindup = calculateIntegralAntiWindup(model->MainRotorControlBeforeServoLimitsAdjustment(), model->MainRotorCollectiveControl(), zAntiWindupGain);
    205a:	89 8d       	ldd	r24, Y+25	; 0x19
    205c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    205e:	88 5b       	subi	r24, 0xB8	; 184
    2060:	9f 4f       	sbci	r25, 0xFF	; 255
    2062:	fc 01       	movw	r30, r24
    2064:	c0 80       	ld	r12, Z
    2066:	d1 80       	ldd	r13, Z+1	; 0x01
    2068:	e2 80       	ldd	r14, Z+2	; 0x02
    206a:	f3 80       	ldd	r15, Z+3	; 0x03
    206c:	89 8d       	ldd	r24, Y+25	; 0x19
    206e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2070:	fc 01       	movw	r30, r24
    2072:	80 81       	ld	r24, Z
    2074:	91 81       	ldd	r25, Z+1	; 0x01
    2076:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>
    207a:	4b 01       	movw	r8, r22
    207c:	5c 01       	movw	r10, r24
    207e:	89 8d       	ldd	r24, Y+25	; 0x19
    2080:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2082:	fc 01       	movw	r30, r24
    2084:	80 81       	ld	r24, Z
    2086:	91 81       	ldd	r25, Z+1	; 0x01
    2088:	0e 94 1f 06 	call	0xc3e	; 0xc3e <_ZNK10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEv>
    208c:	dc 01       	movw	r26, r24
    208e:	cb 01       	movw	r24, r22
    2090:	e9 8d       	ldd	r30, Y+25	; 0x19
    2092:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2094:	95 01       	movw	r18, r10
    2096:	84 01       	movw	r16, r8
    2098:	ac 01       	movw	r20, r24
    209a:	bd 01       	movw	r22, r26
    209c:	cf 01       	movw	r24, r30
    209e:	0e 94 7f 08 	call	0x10fe	; 0x10fe <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    20a2:	dc 01       	movw	r26, r24
    20a4:	cb 01       	movw	r24, r22
    20a6:	8d 83       	std	Y+5, r24	; 0x05
    20a8:	9e 83       	std	Y+6, r25	; 0x06
    20aa:	af 83       	std	Y+7, r26	; 0x07
    20ac:	b8 87       	std	Y+8, r27	; 0x08
	float weightedZIntegral = calculateIntegral(zProportional, model->ZIntegral(), zIntegralAntiWindup, zIntegralGain);
    20ae:	89 8d       	ldd	r24, Y+25	; 0x19
    20b0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    20b2:	fc 01       	movw	r30, r24
    20b4:	a4 ac       	ldd	r10, Z+60	; 0x3c
    20b6:	b5 ac       	ldd	r11, Z+61	; 0x3d
    20b8:	c6 ac       	ldd	r12, Z+62	; 0x3e
    20ba:	d7 ac       	ldd	r13, Z+63	; 0x3f
    20bc:	89 8d       	ldd	r24, Y+25	; 0x19
    20be:	9a 8d       	ldd	r25, Y+26	; 0x1a
    20c0:	fc 01       	movw	r30, r24
    20c2:	80 81       	ld	r24, Z
    20c4:	91 81       	ldd	r25, Z+1	; 0x01
    20c6:	0e 94 8a 06 	call	0xd14	; 0xd14 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>
    20ca:	9b 01       	movw	r18, r22
    20cc:	ac 01       	movw	r20, r24
    20ce:	ed 80       	ldd	r14, Y+5	; 0x05
    20d0:	fe 80       	ldd	r15, Y+6	; 0x06
    20d2:	0f 81       	ldd	r16, Y+7	; 0x07
    20d4:	18 85       	ldd	r17, Y+8	; 0x08
    20d6:	89 81       	ldd	r24, Y+1	; 0x01
    20d8:	9a 81       	ldd	r25, Y+2	; 0x02
    20da:	ab 81       	ldd	r26, Y+3	; 0x03
    20dc:	bc 81       	ldd	r27, Y+4	; 0x04
    20de:	e9 8d       	ldd	r30, Y+25	; 0x19
    20e0:	fa 8d       	ldd	r31, Y+26	; 0x1a
    20e2:	45 01       	movw	r8, r10
    20e4:	56 01       	movw	r10, r12
    20e6:	67 01       	movw	r12, r14
    20e8:	78 01       	movw	r14, r16
    20ea:	89 01       	movw	r16, r18
    20ec:	9a 01       	movw	r18, r20
    20ee:	ac 01       	movw	r20, r24
    20f0:	bd 01       	movw	r22, r26
    20f2:	cf 01       	movw	r24, r30
    20f4:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    20f8:	dc 01       	movw	r26, r24
    20fa:	cb 01       	movw	r24, r22
    20fc:	89 87       	std	Y+9, r24	; 0x09
    20fe:	9a 87       	std	Y+10, r25	; 0x0a
    2100:	ab 87       	std	Y+11, r26	; 0x0b
    2102:	bc 87       	std	Y+12, r27	; 0x0c
	float zDerivativeError = calculateVelocityError(model->ZVelocityFeetPerSecond(), model->ReferenceZVelocityFeetPerSecond());
    2104:	89 8d       	ldd	r24, Y+25	; 0x19
    2106:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2108:	fc 01       	movw	r30, r24
    210a:	80 81       	ld	r24, Z
    210c:	91 81       	ldd	r25, Z+1	; 0x01
    210e:	0e 94 72 06 	call	0xce4	; 0xce4 <_ZNK10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEv>
    2112:	6b 01       	movw	r12, r22
    2114:	7c 01       	movw	r14, r24
    2116:	89 8d       	ldd	r24, Y+25	; 0x19
    2118:	9a 8d       	ldd	r25, Y+26	; 0x1a
    211a:	fc 01       	movw	r30, r24
    211c:	80 81       	ld	r24, Z
    211e:	91 81       	ldd	r25, Z+1	; 0x01
    2120:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>
    2124:	dc 01       	movw	r26, r24
    2126:	cb 01       	movw	r24, r22
    2128:	e9 8d       	ldd	r30, Y+25	; 0x19
    212a:	fa 8d       	ldd	r31, Y+26	; 0x1a
    212c:	97 01       	movw	r18, r14
    212e:	86 01       	movw	r16, r12
    2130:	ac 01       	movw	r20, r24
    2132:	bd 01       	movw	r22, r26
    2134:	cf 01       	movw	r24, r30
    2136:	0e 94 a2 09 	call	0x1344	; 0x1344 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    213a:	dc 01       	movw	r26, r24
    213c:	cb 01       	movw	r24, r22
    213e:	8d 87       	std	Y+13, r24	; 0x0d
    2140:	9e 87       	std	Y+14, r25	; 0x0e
    2142:	af 87       	std	Y+15, r26	; 0x0f
    2144:	b8 8b       	std	Y+16, r27	; 0x10
	float mainRotorControlBeforeServoLimitsAdjustment = calculateOuterLoopControlValue(zProportional, zDerivativeError, weightedZIntegral, zProportionalGain, zDerivativeGain);
    2146:	89 8d       	ldd	r24, Y+25	; 0x19
    2148:	9a 8d       	ldd	r25, Y+26	; 0x1a
    214a:	80 5c       	subi	r24, 0xC0	; 192
    214c:	9f 4f       	sbci	r25, 0xFF	; 255
    214e:	fc 01       	movw	r30, r24
    2150:	80 81       	ld	r24, Z
    2152:	91 81       	ldd	r25, Z+1	; 0x01
    2154:	a2 81       	ldd	r26, Z+2	; 0x02
    2156:	b3 81       	ldd	r27, Z+3	; 0x03
    2158:	29 8d       	ldd	r18, Y+25	; 0x19
    215a:	3a 8d       	ldd	r19, Y+26	; 0x1a
    215c:	2c 5b       	subi	r18, 0xBC	; 188
    215e:	3f 4f       	sbci	r19, 0xFF	; 255
    2160:	f9 01       	movw	r30, r18
    2162:	80 80       	ld	r8, Z
    2164:	91 80       	ldd	r9, Z+1	; 0x01
    2166:	a2 80       	ldd	r10, Z+2	; 0x02
    2168:	b3 80       	ldd	r11, Z+3	; 0x03
    216a:	c9 84       	ldd	r12, Y+9	; 0x09
    216c:	da 84       	ldd	r13, Y+10	; 0x0a
    216e:	eb 84       	ldd	r14, Y+11	; 0x0b
    2170:	fc 84       	ldd	r15, Y+12	; 0x0c
    2172:	0d 85       	ldd	r16, Y+13	; 0x0d
    2174:	1e 85       	ldd	r17, Y+14	; 0x0e
    2176:	2f 85       	ldd	r18, Y+15	; 0x0f
    2178:	38 89       	ldd	r19, Y+16	; 0x10
    217a:	49 81       	ldd	r20, Y+1	; 0x01
    217c:	5a 81       	ldd	r21, Y+2	; 0x02
    217e:	6b 81       	ldd	r22, Y+3	; 0x03
    2180:	7c 81       	ldd	r23, Y+4	; 0x04
    2182:	e9 8d       	ldd	r30, Y+25	; 0x19
    2184:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2186:	7b 2e       	mov	r7, r27
    2188:	7f 92       	push	r7
    218a:	7a 2e       	mov	r7, r26
    218c:	7f 92       	push	r7
    218e:	79 2e       	mov	r7, r25
    2190:	7f 92       	push	r7
    2192:	8f 93       	push	r24
    2194:	cf 01       	movw	r24, r30
    2196:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>
    219a:	0f 90       	pop	r0
    219c:	0f 90       	pop	r0
    219e:	0f 90       	pop	r0
    21a0:	0f 90       	pop	r0
    21a2:	dc 01       	movw	r26, r24
    21a4:	cb 01       	movw	r24, r22
    21a6:	89 8b       	std	Y+17, r24	; 0x11
    21a8:	9a 8b       	std	Y+18, r25	; 0x12
    21aa:	ab 8b       	std	Y+19, r26	; 0x13
    21ac:	bc 8b       	std	Y+20, r27	; 0x14
	float mainRotorControl = adjustControlForServoLimits(mainRotorControlBeforeServoLimitsAdjustment, minMainRotorServoControlValue, maxMainRotorServoControlValue);
    21ae:	89 8d       	ldd	r24, Y+25	; 0x19
    21b0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    21b2:	88 59       	subi	r24, 0x98	; 152
    21b4:	9f 4f       	sbci	r25, 0xFF	; 255
    21b6:	fc 01       	movw	r30, r24
    21b8:	e0 80       	ld	r14, Z
    21ba:	f1 80       	ldd	r15, Z+1	; 0x01
    21bc:	02 81       	ldd	r16, Z+2	; 0x02
    21be:	13 81       	ldd	r17, Z+3	; 0x03
    21c0:	89 8d       	ldd	r24, Y+25	; 0x19
    21c2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    21c4:	8c 59       	subi	r24, 0x9C	; 156
    21c6:	9f 4f       	sbci	r25, 0xFF	; 255
    21c8:	fc 01       	movw	r30, r24
    21ca:	20 81       	ld	r18, Z
    21cc:	31 81       	ldd	r19, Z+1	; 0x01
    21ce:	42 81       	ldd	r20, Z+2	; 0x02
    21d0:	53 81       	ldd	r21, Z+3	; 0x03
    21d2:	89 89       	ldd	r24, Y+17	; 0x11
    21d4:	9a 89       	ldd	r25, Y+18	; 0x12
    21d6:	ab 89       	ldd	r26, Y+19	; 0x13
    21d8:	bc 89       	ldd	r27, Y+20	; 0x14
    21da:	e9 8d       	ldd	r30, Y+25	; 0x19
    21dc:	fa 8d       	ldd	r31, Y+26	; 0x1a
    21de:	67 01       	movw	r12, r14
    21e0:	78 01       	movw	r14, r16
    21e2:	89 01       	movw	r16, r18
    21e4:	9a 01       	movw	r18, r20
    21e6:	ac 01       	movw	r20, r24
    21e8:	bd 01       	movw	r22, r26
    21ea:	cf 01       	movw	r24, r30
    21ec:	0e 94 44 0a 	call	0x1488	; 0x1488 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    21f0:	dc 01       	movw	r26, r24
    21f2:	cb 01       	movw	r24, r22
    21f4:	8d 8b       	std	Y+21, r24	; 0x15
    21f6:	9e 8b       	std	Y+22, r25	; 0x16
    21f8:	af 8b       	std	Y+23, r26	; 0x17
    21fa:	b8 8f       	std	Y+24, r27	; 0x18
	
	model->MainRotorCollectiveControl(mainRotorControl);
    21fc:	89 8d       	ldd	r24, Y+25	; 0x19
    21fe:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2200:	fc 01       	movw	r30, r24
    2202:	20 81       	ld	r18, Z
    2204:	31 81       	ldd	r19, Z+1	; 0x01
    2206:	8d 89       	ldd	r24, Y+21	; 0x15
    2208:	9e 89       	ldd	r25, Y+22	; 0x16
    220a:	af 89       	ldd	r26, Y+23	; 0x17
    220c:	b8 8d       	ldd	r27, Y+24	; 0x18
    220e:	ac 01       	movw	r20, r24
    2210:	bd 01       	movw	r22, r26
    2212:	c9 01       	movw	r24, r18
    2214:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf>
	model->MainRotorControlBeforeServoLimitsAdjustment(mainRotorControlBeforeServoLimitsAdjustment);
    2218:	89 8d       	ldd	r24, Y+25	; 0x19
    221a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    221c:	fc 01       	movw	r30, r24
    221e:	20 81       	ld	r18, Z
    2220:	31 81       	ldd	r19, Z+1	; 0x01
    2222:	89 89       	ldd	r24, Y+17	; 0x11
    2224:	9a 89       	ldd	r25, Y+18	; 0x12
    2226:	ab 89       	ldd	r26, Y+19	; 0x13
    2228:	bc 89       	ldd	r27, Y+20	; 0x14
    222a:	ac 01       	movw	r20, r24
    222c:	bd 01       	movw	r22, r26
    222e:	c9 01       	movw	r24, r18
    2230:	0e 94 37 06 	call	0xc6e	; 0xc6e <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf>
	model->ZIntegral(weightedZIntegral);
    2234:	89 8d       	ldd	r24, Y+25	; 0x19
    2236:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2238:	fc 01       	movw	r30, r24
    223a:	20 81       	ld	r18, Z
    223c:	31 81       	ldd	r19, Z+1	; 0x01
    223e:	89 85       	ldd	r24, Y+9	; 0x09
    2240:	9a 85       	ldd	r25, Y+10	; 0x0a
    2242:	ab 85       	ldd	r26, Y+11	; 0x0b
    2244:	bc 85       	ldd	r27, Y+12	; 0x0c
    2246:	ac 01       	movw	r20, r24
    2248:	bd 01       	movw	r22, r26
    224a:	c9 01       	movw	r24, r18
    224c:	0e 94 a2 06 	call	0xd44	; 0xd44 <_ZN10helicopter5model11SystemModel9ZIntegralEf>
	model->ZProportional(zProportional);
    2250:	89 8d       	ldd	r24, Y+25	; 0x19
    2252:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2254:	fc 01       	movw	r30, r24
    2256:	20 81       	ld	r18, Z
    2258:	31 81       	ldd	r19, Z+1	; 0x01
    225a:	89 81       	ldd	r24, Y+1	; 0x01
    225c:	9a 81       	ldd	r25, Y+2	; 0x02
    225e:	ab 81       	ldd	r26, Y+3	; 0x03
    2260:	bc 81       	ldd	r27, Y+4	; 0x04
    2262:	ac 01       	movw	r20, r24
    2264:	bd 01       	movw	r22, r26
    2266:	c9 01       	movw	r24, r18
    2268:	0e 94 c5 06 	call	0xd8a	; 0xd8a <_ZN10helicopter5model11SystemModel13ZProportionalEf>
	model->ZDerivativeError(zDerivativeError);
    226c:	89 8d       	ldd	r24, Y+25	; 0x19
    226e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2270:	fc 01       	movw	r30, r24
    2272:	20 81       	ld	r18, Z
    2274:	31 81       	ldd	r19, Z+1	; 0x01
    2276:	8d 85       	ldd	r24, Y+13	; 0x0d
    2278:	9e 85       	ldd	r25, Y+14	; 0x0e
    227a:	af 85       	ldd	r26, Y+15	; 0x0f
    227c:	b8 89       	ldd	r27, Y+16	; 0x10
    227e:	ac 01       	movw	r20, r24
    2280:	bd 01       	movw	r22, r26
    2282:	c9 01       	movw	r24, r18
    2284:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf>
	
	servoDriver->controlMainRotorCollective(mainRotorControl);
    2288:	89 8d       	ldd	r24, Y+25	; 0x19
    228a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    228c:	fc 01       	movw	r30, r24
    228e:	22 81       	ldd	r18, Z+2	; 0x02
    2290:	33 81       	ldd	r19, Z+3	; 0x03
    2292:	8d 89       	ldd	r24, Y+21	; 0x15
    2294:	9e 89       	ldd	r25, Y+22	; 0x16
    2296:	af 89       	ldd	r26, Y+23	; 0x17
    2298:	b8 8d       	ldd	r27, Y+24	; 0x18
    229a:	ac 01       	movw	r20, r24
    229c:	bd 01       	movw	r22, r26
    229e:	c9 01       	movw	r24, r18
    22a0:	0e 94 4e 14 	call	0x289c	; 0x289c <_ZN10helicopter7drivers11ServoDriver26controlMainRotorCollectiveEd>
}
    22a4:	6a 96       	adiw	r28, 0x1a	; 26
    22a6:	0f b6       	in	r0, 0x3f	; 63
    22a8:	f8 94       	cli
    22aa:	de bf       	out	0x3e, r29	; 62
    22ac:	0f be       	out	0x3f, r0	; 63
    22ae:	cd bf       	out	0x3d, r28	; 61
    22b0:	df 91       	pop	r29
    22b2:	cf 91       	pop	r28
    22b4:	1f 91       	pop	r17
    22b6:	0f 91       	pop	r16
    22b8:	ff 90       	pop	r15
    22ba:	ef 90       	pop	r14
    22bc:	df 90       	pop	r13
    22be:	cf 90       	pop	r12
    22c0:	bf 90       	pop	r11
    22c2:	af 90       	pop	r10
    22c4:	9f 90       	pop	r9
    22c6:	8f 90       	pop	r8
    22c8:	7f 90       	pop	r7
    22ca:	08 95       	ret

000022cc <_ZN10helicopter10controller13PIDController13addBlownFrameEv>:



//TODO WTF IS THIS DOING HERE?? THIS IS THE WRONG CONTROLLER!!
void PIDController::addBlownFrame()
{
    22cc:	cf 93       	push	r28
    22ce:	df 93       	push	r29
    22d0:	1f 92       	push	r1
    22d2:	1f 92       	push	r1
    22d4:	cd b7       	in	r28, 0x3d	; 61
    22d6:	de b7       	in	r29, 0x3e	; 62
    22d8:	9a 83       	std	Y+2, r25	; 0x02
    22da:	89 83       	std	Y+1, r24	; 0x01
	model->BlownFrames(model->BlownFrames() + 1);
    22dc:	89 81       	ldd	r24, Y+1	; 0x01
    22de:	9a 81       	ldd	r25, Y+2	; 0x02
    22e0:	fc 01       	movw	r30, r24
    22e2:	80 81       	ld	r24, Z
    22e4:	91 81       	ldd	r25, Z+1	; 0x01
    22e6:	0e 94 0b 07 	call	0xe16	; 0xe16 <_ZNK10helicopter5model11SystemModel11BlownFramesEv>
    22ea:	dc 01       	movw	r26, r24
    22ec:	cb 01       	movw	r24, r22
    22ee:	01 96       	adiw	r24, 0x01	; 1
    22f0:	a1 1d       	adc	r26, r1
    22f2:	b1 1d       	adc	r27, r1
    22f4:	29 81       	ldd	r18, Y+1	; 0x01
    22f6:	3a 81       	ldd	r19, Y+2	; 0x02
    22f8:	f9 01       	movw	r30, r18
    22fa:	20 81       	ld	r18, Z
    22fc:	31 81       	ldd	r19, Z+1	; 0x01
    22fe:	ac 01       	movw	r20, r24
    2300:	bd 01       	movw	r22, r26
    2302:	c9 01       	movw	r24, r18
    2304:	0e 94 23 07 	call	0xe46	; 0xe46 <_ZN10helicopter5model11SystemModel11BlownFramesEl>
}
    2308:	0f 90       	pop	r0
    230a:	0f 90       	pop	r0
    230c:	df 91       	pop	r29
    230e:	cf 91       	pop	r28
    2310:	08 95       	ret

00002312 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef>:

float PIDController::convertYawErrorFrom360to180( float yawError ) 
{
    2312:	cf 93       	push	r28
    2314:	df 93       	push	r29
    2316:	00 d0       	rcall	.+0      	; 0x2318 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x6>
    2318:	00 d0       	rcall	.+0      	; 0x231a <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x8>
    231a:	cd b7       	in	r28, 0x3d	; 61
    231c:	de b7       	in	r29, 0x3e	; 62
    231e:	9a 83       	std	Y+2, r25	; 0x02
    2320:	89 83       	std	Y+1, r24	; 0x01
    2322:	4b 83       	std	Y+3, r20	; 0x03
    2324:	5c 83       	std	Y+4, r21	; 0x04
    2326:	6d 83       	std	Y+5, r22	; 0x05
    2328:	7e 83       	std	Y+6, r23	; 0x06
	if (yawError >= 180)
    232a:	20 e0       	ldi	r18, 0x00	; 0
    232c:	30 e0       	ldi	r19, 0x00	; 0
    232e:	44 e3       	ldi	r20, 0x34	; 52
    2330:	53 e4       	ldi	r21, 0x43	; 67
    2332:	6b 81       	ldd	r22, Y+3	; 0x03
    2334:	7c 81       	ldd	r23, Y+4	; 0x04
    2336:	8d 81       	ldd	r24, Y+5	; 0x05
    2338:	9e 81       	ldd	r25, Y+6	; 0x06
    233a:	0e 94 44 45 	call	0x8a88	; 0x8a88 <__gesf2>
    233e:	88 23       	and	r24, r24
    2340:	8c f0       	brlt	.+34     	; 0x2364 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x52>
	{
		yawError = yawError - 360;
    2342:	20 e0       	ldi	r18, 0x00	; 0
    2344:	30 e0       	ldi	r19, 0x00	; 0
    2346:	44 eb       	ldi	r20, 0xB4	; 180
    2348:	53 e4       	ldi	r21, 0x43	; 67
    234a:	6b 81       	ldd	r22, Y+3	; 0x03
    234c:	7c 81       	ldd	r23, Y+4	; 0x04
    234e:	8d 81       	ldd	r24, Y+5	; 0x05
    2350:	9e 81       	ldd	r25, Y+6	; 0x06
    2352:	0e 94 01 43 	call	0x8602	; 0x8602 <__subsf3>
    2356:	dc 01       	movw	r26, r24
    2358:	cb 01       	movw	r24, r22
    235a:	8b 83       	std	Y+3, r24	; 0x03
    235c:	9c 83       	std	Y+4, r25	; 0x04
    235e:	ad 83       	std	Y+5, r26	; 0x05
    2360:	be 83       	std	Y+6, r27	; 0x06
    2362:	1c c0       	rjmp	.+56     	; 0x239c <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x8a>
	}
	else if (yawError < -180)
    2364:	20 e0       	ldi	r18, 0x00	; 0
    2366:	30 e0       	ldi	r19, 0x00	; 0
    2368:	44 e3       	ldi	r20, 0x34	; 52
    236a:	53 ec       	ldi	r21, 0xC3	; 195
    236c:	6b 81       	ldd	r22, Y+3	; 0x03
    236e:	7c 81       	ldd	r23, Y+4	; 0x04
    2370:	8d 81       	ldd	r24, Y+5	; 0x05
    2372:	9e 81       	ldd	r25, Y+6	; 0x06
    2374:	0e 94 66 43 	call	0x86cc	; 0x86cc <__cmpsf2>
    2378:	88 23       	and	r24, r24
    237a:	84 f4       	brge	.+32     	; 0x239c <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x8a>
	{
		yawError = yawError + 360;
    237c:	20 e0       	ldi	r18, 0x00	; 0
    237e:	30 e0       	ldi	r19, 0x00	; 0
    2380:	44 eb       	ldi	r20, 0xB4	; 180
    2382:	53 e4       	ldi	r21, 0x43	; 67
    2384:	6b 81       	ldd	r22, Y+3	; 0x03
    2386:	7c 81       	ldd	r23, Y+4	; 0x04
    2388:	8d 81       	ldd	r24, Y+5	; 0x05
    238a:	9e 81       	ldd	r25, Y+6	; 0x06
    238c:	0e 94 02 43 	call	0x8604	; 0x8604 <__addsf3>
    2390:	dc 01       	movw	r26, r24
    2392:	cb 01       	movw	r24, r22
    2394:	8b 83       	std	Y+3, r24	; 0x03
    2396:	9c 83       	std	Y+4, r25	; 0x04
    2398:	ad 83       	std	Y+5, r26	; 0x05
    239a:	be 83       	std	Y+6, r27	; 0x06
	}	
	
	return yawError;
    239c:	8b 81       	ldd	r24, Y+3	; 0x03
    239e:	9c 81       	ldd	r25, Y+4	; 0x04
    23a0:	ad 81       	ldd	r26, Y+5	; 0x05
    23a2:	be 81       	ldd	r27, Y+6	; 0x06
}
    23a4:	bc 01       	movw	r22, r24
    23a6:	cd 01       	movw	r24, r26
    23a8:	26 96       	adiw	r28, 0x06	; 6
    23aa:	0f b6       	in	r0, 0x3f	; 63
    23ac:	f8 94       	cli
    23ae:	de bf       	out	0x3e, r29	; 62
    23b0:	0f be       	out	0x3f, r0	; 63
    23b2:	cd bf       	out	0x3d, r28	; 61
    23b4:	df 91       	pop	r29
    23b6:	cf 91       	pop	r28
    23b8:	08 95       	ret

000023ba <_ZN10helicopter7drivers12SerialDriverD1Ev>:
				useDoubleSpeedMode(useDoubleSpeedMode)
				{
					
				}
						
				virtual ~SerialDriver()
    23ba:	cf 93       	push	r28
    23bc:	df 93       	push	r29
    23be:	1f 92       	push	r1
    23c0:	1f 92       	push	r1
    23c2:	cd b7       	in	r28, 0x3d	; 61
    23c4:	de b7       	in	r29, 0x3e	; 62
    23c6:	9a 83       	std	Y+2, r25	; 0x02
    23c8:	89 83       	std	Y+1, r24	; 0x01
				{
    23ca:	89 81       	ldd	r24, Y+1	; 0x01
    23cc:	9a 81       	ldd	r25, Y+2	; 0x02
    23ce:	2a e0       	ldi	r18, 0x0A	; 10
    23d0:	32 e0       	ldi	r19, 0x02	; 2
    23d2:	fc 01       	movw	r30, r24
    23d4:	31 83       	std	Z+1, r19	; 0x01
    23d6:	20 83       	st	Z, r18
					
				}
    23d8:	80 e0       	ldi	r24, 0x00	; 0
    23da:	90 e0       	ldi	r25, 0x00	; 0
    23dc:	81 70       	andi	r24, 0x01	; 1
    23de:	99 27       	eor	r25, r25
    23e0:	00 97       	sbiw	r24, 0x00	; 0
    23e2:	21 f0       	breq	.+8      	; 0x23ec <_ZN10helicopter7drivers12SerialDriverD1Ev+0x32>
    23e4:	89 81       	ldd	r24, Y+1	; 0x01
    23e6:	9a 81       	ldd	r25, Y+2	; 0x02
    23e8:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    23ec:	0f 90       	pop	r0
    23ee:	0f 90       	pop	r0
    23f0:	df 91       	pop	r29
    23f2:	cf 91       	pop	r28
    23f4:	08 95       	ret

000023f6 <_ZN10helicopter7drivers12SerialDriverD0Ev>:
				useDoubleSpeedMode(useDoubleSpeedMode)
				{
					
				}
						
				virtual ~SerialDriver()
    23f6:	cf 93       	push	r28
    23f8:	df 93       	push	r29
    23fa:	1f 92       	push	r1
    23fc:	1f 92       	push	r1
    23fe:	cd b7       	in	r28, 0x3d	; 61
    2400:	de b7       	in	r29, 0x3e	; 62
    2402:	9a 83       	std	Y+2, r25	; 0x02
    2404:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    2406:	89 81       	ldd	r24, Y+1	; 0x01
    2408:	9a 81       	ldd	r25, Y+2	; 0x02
    240a:	0e 94 dd 11 	call	0x23ba	; 0x23ba <_ZN10helicopter7drivers12SerialDriverD1Ev>
    240e:	89 81       	ldd	r24, Y+1	; 0x01
    2410:	9a 81       	ldd	r25, Y+2	; 0x02
    2412:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    2416:	0f 90       	pop	r0
    2418:	0f 90       	pop	r0
    241a:	df 91       	pop	r29
    241c:	cf 91       	pop	r28
    241e:	08 95       	ret

00002420 <_ZN10helicopter7drivers12SerialDriver10initializeEv>:
#include "CommonHeader.h"

using namespace helicopter::drivers;

void SerialDriver::initialize()
{
    2420:	cf 93       	push	r28
    2422:	df 93       	push	r29
    2424:	00 d0       	rcall	.+0      	; 0x2426 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x6>
    2426:	1f 92       	push	r1
    2428:	cd b7       	in	r28, 0x3d	; 61
    242a:	de b7       	in	r29, 0x3e	; 62
    242c:	9c 83       	std	Y+4, r25	; 0x04
    242e:	8b 83       	std	Y+3, r24	; 0x03
	unsigned int baudPrescaller = 0;
    2430:	1a 82       	std	Y+2, r1	; 0x02
    2432:	19 82       	std	Y+1, r1	; 0x01
	
	if (useDoubleSpeedMode)
    2434:	8b 81       	ldd	r24, Y+3	; 0x03
    2436:	9c 81       	ldd	r25, Y+4	; 0x04
    2438:	fc 01       	movw	r30, r24
    243a:	82 85       	ldd	r24, Z+10	; 0x0a
    243c:	88 23       	and	r24, r24
    243e:	b9 f1       	breq	.+110    	; 0x24ae <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x8e>
	{
		baudPrescaller = floor((((F_CPU / (baudRate * 8UL))) - 1UL));
    2440:	8b 81       	ldd	r24, Y+3	; 0x03
    2442:	9c 81       	ldd	r25, Y+4	; 0x04
    2444:	fc 01       	movw	r30, r24
    2446:	82 81       	ldd	r24, Z+2	; 0x02
    2448:	93 81       	ldd	r25, Z+3	; 0x03
    244a:	a4 81       	ldd	r26, Z+4	; 0x04
    244c:	b5 81       	ldd	r27, Z+5	; 0x05
    244e:	88 0f       	add	r24, r24
    2450:	99 1f       	adc	r25, r25
    2452:	aa 1f       	adc	r26, r26
    2454:	bb 1f       	adc	r27, r27
    2456:	88 0f       	add	r24, r24
    2458:	99 1f       	adc	r25, r25
    245a:	aa 1f       	adc	r26, r26
    245c:	bb 1f       	adc	r27, r27
    245e:	88 0f       	add	r24, r24
    2460:	99 1f       	adc	r25, r25
    2462:	aa 1f       	adc	r26, r26
    2464:	bb 1f       	adc	r27, r27
    2466:	9c 01       	movw	r18, r24
    2468:	ad 01       	movw	r20, r26
    246a:	80 e0       	ldi	r24, 0x00	; 0
    246c:	94 e2       	ldi	r25, 0x24	; 36
    246e:	a4 ef       	ldi	r26, 0xF4	; 244
    2470:	b0 e0       	ldi	r27, 0x00	; 0
    2472:	bc 01       	movw	r22, r24
    2474:	cd 01       	movw	r24, r26
    2476:	0e 94 76 47 	call	0x8eec	; 0x8eec <__udivmodsi4>
    247a:	da 01       	movw	r26, r20
    247c:	c9 01       	movw	r24, r18
    247e:	01 97       	sbiw	r24, 0x01	; 1
    2480:	a1 09       	sbc	r26, r1
    2482:	b1 09       	sbc	r27, r1
    2484:	bc 01       	movw	r22, r24
    2486:	cd 01       	movw	r24, r26
    2488:	0e 94 06 44 	call	0x880c	; 0x880c <__floatunsisf>
    248c:	dc 01       	movw	r26, r24
    248e:	cb 01       	movw	r24, r22
    2490:	bc 01       	movw	r22, r24
    2492:	cd 01       	movw	r24, r26
    2494:	0e 94 43 44 	call	0x8886	; 0x8886 <floor>
    2498:	dc 01       	movw	r26, r24
    249a:	cb 01       	movw	r24, r22
    249c:	bc 01       	movw	r22, r24
    249e:	cd 01       	movw	r24, r26
    24a0:	0e 94 da 43 	call	0x87b4	; 0x87b4 <__fixunssfsi>
    24a4:	dc 01       	movw	r26, r24
    24a6:	cb 01       	movw	r24, r22
    24a8:	9a 83       	std	Y+2, r25	; 0x02
    24aa:	89 83       	std	Y+1, r24	; 0x01
    24ac:	3a c0       	rjmp	.+116    	; 0x2522 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x102>
	}else
	{
		//Calculation for the baud prescaller 
		baudPrescaller = floor((((F_CPU / (baudRate * 16UL))) - 1UL));
    24ae:	8b 81       	ldd	r24, Y+3	; 0x03
    24b0:	9c 81       	ldd	r25, Y+4	; 0x04
    24b2:	fc 01       	movw	r30, r24
    24b4:	82 81       	ldd	r24, Z+2	; 0x02
    24b6:	93 81       	ldd	r25, Z+3	; 0x03
    24b8:	a4 81       	ldd	r26, Z+4	; 0x04
    24ba:	b5 81       	ldd	r27, Z+5	; 0x05
    24bc:	88 0f       	add	r24, r24
    24be:	99 1f       	adc	r25, r25
    24c0:	aa 1f       	adc	r26, r26
    24c2:	bb 1f       	adc	r27, r27
    24c4:	88 0f       	add	r24, r24
    24c6:	99 1f       	adc	r25, r25
    24c8:	aa 1f       	adc	r26, r26
    24ca:	bb 1f       	adc	r27, r27
    24cc:	88 0f       	add	r24, r24
    24ce:	99 1f       	adc	r25, r25
    24d0:	aa 1f       	adc	r26, r26
    24d2:	bb 1f       	adc	r27, r27
    24d4:	88 0f       	add	r24, r24
    24d6:	99 1f       	adc	r25, r25
    24d8:	aa 1f       	adc	r26, r26
    24da:	bb 1f       	adc	r27, r27
    24dc:	9c 01       	movw	r18, r24
    24de:	ad 01       	movw	r20, r26
    24e0:	80 e0       	ldi	r24, 0x00	; 0
    24e2:	94 e2       	ldi	r25, 0x24	; 36
    24e4:	a4 ef       	ldi	r26, 0xF4	; 244
    24e6:	b0 e0       	ldi	r27, 0x00	; 0
    24e8:	bc 01       	movw	r22, r24
    24ea:	cd 01       	movw	r24, r26
    24ec:	0e 94 76 47 	call	0x8eec	; 0x8eec <__udivmodsi4>
    24f0:	da 01       	movw	r26, r20
    24f2:	c9 01       	movw	r24, r18
    24f4:	01 97       	sbiw	r24, 0x01	; 1
    24f6:	a1 09       	sbc	r26, r1
    24f8:	b1 09       	sbc	r27, r1
    24fa:	bc 01       	movw	r22, r24
    24fc:	cd 01       	movw	r24, r26
    24fe:	0e 94 06 44 	call	0x880c	; 0x880c <__floatunsisf>
    2502:	dc 01       	movw	r26, r24
    2504:	cb 01       	movw	r24, r22
    2506:	bc 01       	movw	r22, r24
    2508:	cd 01       	movw	r24, r26
    250a:	0e 94 43 44 	call	0x8886	; 0x8886 <floor>
    250e:	dc 01       	movw	r26, r24
    2510:	cb 01       	movw	r24, r22
    2512:	bc 01       	movw	r22, r24
    2514:	cd 01       	movw	r24, r26
    2516:	0e 94 da 43 	call	0x87b4	; 0x87b4 <__fixunssfsi>
    251a:	dc 01       	movw	r26, r24
    251c:	cb 01       	movw	r24, r22
    251e:	9a 83       	std	Y+2, r25	; 0x02
    2520:	89 83       	std	Y+1, r24	; 0x01
	}
	
	
	if (uartPort == Zero)
    2522:	8b 81       	ldd	r24, Y+3	; 0x03
    2524:	9c 81       	ldd	r25, Y+4	; 0x04
    2526:	fc 01       	movw	r30, r24
    2528:	86 81       	ldd	r24, Z+6	; 0x06
    252a:	88 23       	and	r24, r24
    252c:	41 f5       	brne	.+80     	; 0x257e <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x15e>
	{
		/* Set baud rate */
		UBRR0 = baudPrescaller;
    252e:	84 ec       	ldi	r24, 0xC4	; 196
    2530:	90 e0       	ldi	r25, 0x00	; 0
    2532:	29 81       	ldd	r18, Y+1	; 0x01
    2534:	3a 81       	ldd	r19, Y+2	; 0x02
    2536:	fc 01       	movw	r30, r24
    2538:	31 83       	std	Z+1, r19	; 0x01
    253a:	20 83       	st	Z, r18
		
		/* Set frame format: asynchronous usart, no parity 1stop bit, 8 bits of data, */
		UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);
    253c:	82 ec       	ldi	r24, 0xC2	; 194
    253e:	90 e0       	ldi	r25, 0x00	; 0
    2540:	22 ec       	ldi	r18, 0xC2	; 194
    2542:	30 e0       	ldi	r19, 0x00	; 0
    2544:	f9 01       	movw	r30, r18
    2546:	20 81       	ld	r18, Z
    2548:	26 60       	ori	r18, 0x06	; 6
    254a:	fc 01       	movw	r30, r24
    254c:	20 83       	st	Z, r18
		
		//If double speed mode flag was set, set the U2X0 flag to enable double speed mode.
		if (useDoubleSpeedMode)
    254e:	8b 81       	ldd	r24, Y+3	; 0x03
    2550:	9c 81       	ldd	r25, Y+4	; 0x04
    2552:	fc 01       	movw	r30, r24
    2554:	82 85       	ldd	r24, Z+10	; 0x0a
    2556:	88 23       	and	r24, r24
    2558:	49 f0       	breq	.+18     	; 0x256c <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x14c>
		{
			UCSR0A |= (1<<U2X0);
    255a:	80 ec       	ldi	r24, 0xC0	; 192
    255c:	90 e0       	ldi	r25, 0x00	; 0
    255e:	20 ec       	ldi	r18, 0xC0	; 192
    2560:	30 e0       	ldi	r19, 0x00	; 0
    2562:	f9 01       	movw	r30, r18
    2564:	20 81       	ld	r18, Z
    2566:	22 60       	ori	r18, 0x02	; 2
    2568:	fc 01       	movw	r30, r24
    256a:	20 83       	st	Z, r18
		}
		
			
			
		/* Enable receiver and transmitter */
		UCSR0B |= (1<<RXEN0) | (1<<TXEN0);
    256c:	81 ec       	ldi	r24, 0xC1	; 193
    256e:	90 e0       	ldi	r25, 0x00	; 0
    2570:	21 ec       	ldi	r18, 0xC1	; 193
    2572:	30 e0       	ldi	r19, 0x00	; 0
    2574:	f9 01       	movw	r30, r18
    2576:	20 81       	ld	r18, Z
    2578:	28 61       	ori	r18, 0x18	; 24
    257a:	fc 01       	movw	r30, r24
    257c:	20 83       	st	Z, r18
	}
}
    257e:	0f 90       	pop	r0
    2580:	0f 90       	pop	r0
    2582:	0f 90       	pop	r0
    2584:	0f 90       	pop	r0
    2586:	df 91       	pop	r29
    2588:	cf 91       	pop	r28
    258a:	08 95       	ret

0000258c <_ZN10helicopter7drivers12SerialDriver12transmitByteEh>:

int SerialDriver::transmitByte(byte byteToSend)
{
    258c:	cf 93       	push	r28
    258e:	df 93       	push	r29
    2590:	00 d0       	rcall	.+0      	; 0x2592 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6>
    2592:	cd b7       	in	r28, 0x3d	; 61
    2594:	de b7       	in	r29, 0x3e	; 62
    2596:	9a 83       	std	Y+2, r25	; 0x02
    2598:	89 83       	std	Y+1, r24	; 0x01
    259a:	6b 83       	std	Y+3, r22	; 0x03
	if (uartPort == Zero)
    259c:	89 81       	ldd	r24, Y+1	; 0x01
    259e:	9a 81       	ldd	r25, Y+2	; 0x02
    25a0:	fc 01       	movw	r30, r24
    25a2:	86 81       	ldd	r24, Z+6	; 0x06
    25a4:	88 23       	and	r24, r24
    25a6:	09 f0       	breq	.+2      	; 0x25aa <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x1e>
    25a8:	42 c0       	rjmp	.+132    	; 0x262e <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0xa2>
	{
		if (isTimeoutEnabled)
    25aa:	89 81       	ldd	r24, Y+1	; 0x01
    25ac:	9a 81       	ldd	r25, Y+2	; 0x02
    25ae:	fc 01       	movw	r30, r24
    25b0:	81 85       	ldd	r24, Z+9	; 0x09
    25b2:	88 23       	and	r24, r24
    25b4:	09 f1       	breq	.+66     	; 0x25f8 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6c>
		{
			timer->startTimer();
    25b6:	89 81       	ldd	r24, Y+1	; 0x01
    25b8:	9a 81       	ldd	r25, Y+2	; 0x02
    25ba:	fc 01       	movw	r30, r24
    25bc:	87 81       	ldd	r24, Z+7	; 0x07
    25be:	90 85       	ldd	r25, Z+8	; 0x08
    25c0:	0e 94 0e 42 	call	0x841c	; 0x841c <_ZN10helicopter4util5Timer10startTimerEv>
		}
		
		/* Wait for empty transmit buffer */
		while ( !( UCSR0A & (1<<UDRE0)) )
    25c4:	19 c0       	rjmp	.+50     	; 0x25f8 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6c>
		{
			//Check for timeout
			if (isTimeoutEnabled)
    25c6:	89 81       	ldd	r24, Y+1	; 0x01
    25c8:	9a 81       	ldd	r25, Y+2	; 0x02
    25ca:	fc 01       	movw	r30, r24
    25cc:	81 85       	ldd	r24, Z+9	; 0x09
    25ce:	88 23       	and	r24, r24
    25d0:	a1 f0       	breq	.+40     	; 0x25fa <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6e>
			{
				if (timer->hasTimedout())
    25d2:	89 81       	ldd	r24, Y+1	; 0x01
    25d4:	9a 81       	ldd	r25, Y+2	; 0x02
    25d6:	fc 01       	movw	r30, r24
    25d8:	87 81       	ldd	r24, Z+7	; 0x07
    25da:	90 85       	ldd	r25, Z+8	; 0x08
    25dc:	0e 94 c8 42 	call	0x8590	; 0x8590 <_ZN10helicopter4util5Timer11hasTimedoutEv>
    25e0:	88 23       	and	r24, r24
    25e2:	59 f0       	breq	.+22     	; 0x25fa <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6e>
				{
					timer->stopTimer();
    25e4:	89 81       	ldd	r24, Y+1	; 0x01
    25e6:	9a 81       	ldd	r25, Y+2	; 0x02
    25e8:	fc 01       	movw	r30, r24
    25ea:	87 81       	ldd	r24, Z+7	; 0x07
    25ec:	90 85       	ldd	r25, Z+8	; 0x08
    25ee:	0e 94 e2 42 	call	0x85c4	; 0x85c4 <_ZN10helicopter4util5Timer9stopTimerEv>
					return -1;
    25f2:	8f ef       	ldi	r24, 0xFF	; 255
    25f4:	9f ef       	ldi	r25, 0xFF	; 255
    25f6:	1d c0       	rjmp	.+58     	; 0x2632 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0xa6>
		{
			timer->startTimer();
		}
		
		/* Wait for empty transmit buffer */
		while ( !( UCSR0A & (1<<UDRE0)) )
    25f8:	00 00       	nop
    25fa:	80 ec       	ldi	r24, 0xC0	; 192
    25fc:	90 e0       	ldi	r25, 0x00	; 0
    25fe:	fc 01       	movw	r30, r24
    2600:	80 81       	ld	r24, Z
    2602:	88 2f       	mov	r24, r24
    2604:	90 e0       	ldi	r25, 0x00	; 0
    2606:	80 72       	andi	r24, 0x20	; 32
    2608:	99 27       	eor	r25, r25
    260a:	21 e0       	ldi	r18, 0x01	; 1
    260c:	00 97       	sbiw	r24, 0x00	; 0
    260e:	09 f0       	breq	.+2      	; 0x2612 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x86>
    2610:	20 e0       	ldi	r18, 0x00	; 0
    2612:	22 23       	and	r18, r18
    2614:	c1 f6       	brne	.-80     	; 0x25c6 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x3a>
			}
		}
				
				
		/* Put data into buffer, sends the data */
		UDR0 = byteToSend;
    2616:	86 ec       	ldi	r24, 0xC6	; 198
    2618:	90 e0       	ldi	r25, 0x00	; 0
    261a:	2b 81       	ldd	r18, Y+3	; 0x03
    261c:	fc 01       	movw	r30, r24
    261e:	20 83       	st	Z, r18
		
		timer->stopTimer();
    2620:	89 81       	ldd	r24, Y+1	; 0x01
    2622:	9a 81       	ldd	r25, Y+2	; 0x02
    2624:	fc 01       	movw	r30, r24
    2626:	87 81       	ldd	r24, Z+7	; 0x07
    2628:	90 85       	ldd	r25, Z+8	; 0x08
    262a:	0e 94 e2 42 	call	0x85c4	; 0x85c4 <_ZN10helicopter4util5Timer9stopTimerEv>
	}
	
	return 0;
    262e:	80 e0       	ldi	r24, 0x00	; 0
    2630:	90 e0       	ldi	r25, 0x00	; 0
}
    2632:	0f 90       	pop	r0
    2634:	0f 90       	pop	r0
    2636:	0f 90       	pop	r0
    2638:	df 91       	pop	r29
    263a:	cf 91       	pop	r28
    263c:	08 95       	ret

0000263e <_ZN10helicopter7drivers12SerialDriver11receiveByteERh>:

int SerialDriver::receiveByte(byte &receivedByte)
{
    263e:	cf 93       	push	r28
    2640:	df 93       	push	r29
    2642:	00 d0       	rcall	.+0      	; 0x2644 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x6>
    2644:	1f 92       	push	r1
    2646:	1f 92       	push	r1
    2648:	cd b7       	in	r28, 0x3d	; 61
    264a:	de b7       	in	r29, 0x3e	; 62
    264c:	9b 83       	std	Y+3, r25	; 0x03
    264e:	8a 83       	std	Y+2, r24	; 0x02
    2650:	7d 83       	std	Y+5, r23	; 0x05
    2652:	6c 83       	std	Y+4, r22	; 0x04
	bool hasDataOverrun = false;
    2654:	19 82       	std	Y+1, r1	; 0x01
	
	if (uartPort == Zero)
    2656:	8a 81       	ldd	r24, Y+2	; 0x02
    2658:	9b 81       	ldd	r25, Y+3	; 0x03
    265a:	fc 01       	movw	r30, r24
    265c:	86 81       	ldd	r24, Z+6	; 0x06
    265e:	88 23       	and	r24, r24
    2660:	09 f0       	breq	.+2      	; 0x2664 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x26>
    2662:	41 c0       	rjmp	.+130    	; 0x26e6 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0xa8>
	{
		
		if (isTimeoutEnabled)
    2664:	8a 81       	ldd	r24, Y+2	; 0x02
    2666:	9b 81       	ldd	r25, Y+3	; 0x03
    2668:	fc 01       	movw	r30, r24
    266a:	81 85       	ldd	r24, Z+9	; 0x09
    266c:	88 23       	and	r24, r24
    266e:	d9 f0       	breq	.+54     	; 0x26a6 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x68>
		{
			timer->startTimer();
    2670:	8a 81       	ldd	r24, Y+2	; 0x02
    2672:	9b 81       	ldd	r25, Y+3	; 0x03
    2674:	fc 01       	movw	r30, r24
    2676:	87 81       	ldd	r24, Z+7	; 0x07
    2678:	90 85       	ldd	r25, Z+8	; 0x08
    267a:	0e 94 0e 42 	call	0x841c	; 0x841c <_ZN10helicopter4util5Timer10startTimerEv>
		}
		//int counter = 0;
		
		/* Wait for data on the receive buffer */
		while ( !(UCSR0A & (1<<RXC0)) )
    267e:	13 c0       	rjmp	.+38     	; 0x26a6 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x68>
		{
			if (timer->hasTimedout())
    2680:	8a 81       	ldd	r24, Y+2	; 0x02
    2682:	9b 81       	ldd	r25, Y+3	; 0x03
    2684:	fc 01       	movw	r30, r24
    2686:	87 81       	ldd	r24, Z+7	; 0x07
    2688:	90 85       	ldd	r25, Z+8	; 0x08
    268a:	0e 94 c8 42 	call	0x8590	; 0x8590 <_ZN10helicopter4util5Timer11hasTimedoutEv>
    268e:	88 23       	and	r24, r24
    2690:	59 f0       	breq	.+22     	; 0x26a8 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x6a>
			{
				timer->stopTimer();
    2692:	8a 81       	ldd	r24, Y+2	; 0x02
    2694:	9b 81       	ldd	r25, Y+3	; 0x03
    2696:	fc 01       	movw	r30, r24
    2698:	87 81       	ldd	r24, Z+7	; 0x07
    269a:	90 85       	ldd	r25, Z+8	; 0x08
    269c:	0e 94 e2 42 	call	0x85c4	; 0x85c4 <_ZN10helicopter4util5Timer9stopTimerEv>
				return -1;
    26a0:	8f ef       	ldi	r24, 0xFF	; 255
    26a2:	9f ef       	ldi	r25, 0xFF	; 255
    26a4:	29 c0       	rjmp	.+82     	; 0x26f8 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0xba>
			timer->startTimer();
		}
		//int counter = 0;
		
		/* Wait for data on the receive buffer */
		while ( !(UCSR0A & (1<<RXC0)) )
    26a6:	00 00       	nop
    26a8:	80 ec       	ldi	r24, 0xC0	; 192
    26aa:	90 e0       	ldi	r25, 0x00	; 0
    26ac:	fc 01       	movw	r30, r24
    26ae:	80 81       	ld	r24, Z
    26b0:	80 95       	com	r24
    26b2:	88 1f       	adc	r24, r24
    26b4:	88 27       	eor	r24, r24
    26b6:	88 1f       	adc	r24, r24
    26b8:	88 23       	and	r24, r24
    26ba:	11 f7       	brne	.-60     	; 0x2680 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x42>
			}*/
		}
		
		//determine if there has been a data overrun.
		//Swallow the overrun because nothing can be done.
		hasDataOverrun = (UCSR0A & (1 << DOR0)) != 0;
    26bc:	80 ec       	ldi	r24, 0xC0	; 192
    26be:	90 e0       	ldi	r25, 0x00	; 0
    26c0:	fc 01       	movw	r30, r24
    26c2:	80 81       	ld	r24, Z
    26c4:	88 2f       	mov	r24, r24
    26c6:	90 e0       	ldi	r25, 0x00	; 0
    26c8:	88 70       	andi	r24, 0x08	; 8
    26ca:	99 27       	eor	r25, r25
    26cc:	21 e0       	ldi	r18, 0x01	; 1
    26ce:	00 97       	sbiw	r24, 0x00	; 0
    26d0:	09 f4       	brne	.+2      	; 0x26d4 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x96>
    26d2:	20 e0       	ldi	r18, 0x00	; 0
    26d4:	29 83       	std	Y+1, r18	; 0x01
		
		/* Read the data from the serial port buffer */
		receivedByte = UDR0;
    26d6:	86 ec       	ldi	r24, 0xC6	; 198
    26d8:	90 e0       	ldi	r25, 0x00	; 0
    26da:	fc 01       	movw	r30, r24
    26dc:	20 81       	ld	r18, Z
    26de:	8c 81       	ldd	r24, Y+4	; 0x04
    26e0:	9d 81       	ldd	r25, Y+5	; 0x05
    26e2:	fc 01       	movw	r30, r24
    26e4:	20 83       	st	Z, r18
	}
	
	timer->stopTimer();
    26e6:	8a 81       	ldd	r24, Y+2	; 0x02
    26e8:	9b 81       	ldd	r25, Y+3	; 0x03
    26ea:	fc 01       	movw	r30, r24
    26ec:	87 81       	ldd	r24, Z+7	; 0x07
    26ee:	90 85       	ldd	r25, Z+8	; 0x08
    26f0:	0e 94 e2 42 	call	0x85c4	; 0x85c4 <_ZN10helicopter4util5Timer9stopTimerEv>
	
	return 0;
    26f4:	80 e0       	ldi	r24, 0x00	; 0
    26f6:	90 e0       	ldi	r25, 0x00	; 0
    26f8:	0f 90       	pop	r0
    26fa:	0f 90       	pop	r0
    26fc:	0f 90       	pop	r0
    26fe:	0f 90       	pop	r0
    2700:	0f 90       	pop	r0
    2702:	df 91       	pop	r29
    2704:	cf 91       	pop	r28
    2706:	08 95       	ret

00002708 <_ZN10helicopter7drivers11ServoDriverD1Ev>:
					maxControlValue(0)
				{
					
				}
				
				virtual ~ServoDriver()
    2708:	cf 93       	push	r28
    270a:	df 93       	push	r29
    270c:	1f 92       	push	r1
    270e:	1f 92       	push	r1
    2710:	cd b7       	in	r28, 0x3d	; 61
    2712:	de b7       	in	r29, 0x3e	; 62
    2714:	9a 83       	std	Y+2, r25	; 0x02
    2716:	89 83       	std	Y+1, r24	; 0x01
				{
    2718:	89 81       	ldd	r24, Y+1	; 0x01
    271a:	9a 81       	ldd	r25, Y+2	; 0x02
    271c:	28 e1       	ldi	r18, 0x18	; 24
    271e:	32 e0       	ldi	r19, 0x02	; 2
    2720:	fc 01       	movw	r30, r24
    2722:	31 83       	std	Z+1, r19	; 0x01
    2724:	20 83       	st	Z, r18
					
				}
    2726:	80 e0       	ldi	r24, 0x00	; 0
    2728:	90 e0       	ldi	r25, 0x00	; 0
    272a:	81 70       	andi	r24, 0x01	; 1
    272c:	99 27       	eor	r25, r25
    272e:	00 97       	sbiw	r24, 0x00	; 0
    2730:	21 f0       	breq	.+8      	; 0x273a <_ZN10helicopter7drivers11ServoDriverD1Ev+0x32>
    2732:	89 81       	ldd	r24, Y+1	; 0x01
    2734:	9a 81       	ldd	r25, Y+2	; 0x02
    2736:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    273a:	0f 90       	pop	r0
    273c:	0f 90       	pop	r0
    273e:	df 91       	pop	r29
    2740:	cf 91       	pop	r28
    2742:	08 95       	ret

00002744 <_ZN10helicopter7drivers11ServoDriverD0Ev>:
					maxControlValue(0)
				{
					
				}
				
				virtual ~ServoDriver()
    2744:	cf 93       	push	r28
    2746:	df 93       	push	r29
    2748:	1f 92       	push	r1
    274a:	1f 92       	push	r1
    274c:	cd b7       	in	r28, 0x3d	; 61
    274e:	de b7       	in	r29, 0x3e	; 62
    2750:	9a 83       	std	Y+2, r25	; 0x02
    2752:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    2754:	89 81       	ldd	r24, Y+1	; 0x01
    2756:	9a 81       	ldd	r25, Y+2	; 0x02
    2758:	0e 94 84 13 	call	0x2708	; 0x2708 <_ZN10helicopter7drivers11ServoDriverD1Ev>
    275c:	89 81       	ldd	r24, Y+1	; 0x01
    275e:	9a 81       	ldd	r25, Y+2	; 0x02
    2760:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    2764:	0f 90       	pop	r0
    2766:	0f 90       	pop	r0
    2768:	df 91       	pop	r29
    276a:	cf 91       	pop	r28
    276c:	08 95       	ret

0000276e <_ZN10helicopter7drivers11ServoDriver26controlTailRotorCollectiveEd>:
#include "ServoDriver.h"

using namespace helicopter::drivers;

void ServoDriver::controlTailRotorCollective(double controlTailRotorCollective)
{
    276e:	cf 93       	push	r28
    2770:	df 93       	push	r29
    2772:	cd b7       	in	r28, 0x3d	; 61
    2774:	de b7       	in	r29, 0x3e	; 62
    2776:	2a 97       	sbiw	r28, 0x0a	; 10
    2778:	0f b6       	in	r0, 0x3f	; 63
    277a:	f8 94       	cli
    277c:	de bf       	out	0x3e, r29	; 62
    277e:	0f be       	out	0x3f, r0	; 63
    2780:	cd bf       	out	0x3d, r28	; 61
    2782:	9e 83       	std	Y+6, r25	; 0x06
    2784:	8d 83       	std	Y+5, r24	; 0x05
    2786:	4f 83       	std	Y+7, r20	; 0x07
    2788:	58 87       	std	Y+8, r21	; 0x08
    278a:	69 87       	std	Y+9, r22	; 0x09
    278c:	7a 87       	std	Y+10, r23	; 0x0a
	double control = controlTailRotorCollective;
    278e:	8f 81       	ldd	r24, Y+7	; 0x07
    2790:	98 85       	ldd	r25, Y+8	; 0x08
    2792:	a9 85       	ldd	r26, Y+9	; 0x09
    2794:	ba 85       	ldd	r27, Y+10	; 0x0a
    2796:	89 83       	std	Y+1, r24	; 0x01
    2798:	9a 83       	std	Y+2, r25	; 0x02
    279a:	ab 83       	std	Y+3, r26	; 0x03
    279c:	bc 83       	std	Y+4, r27	; 0x04
	
	if (control > maxControlValue)
    279e:	8d 81       	ldd	r24, Y+5	; 0x05
    27a0:	9e 81       	ldd	r25, Y+6	; 0x06
    27a2:	fc 01       	movw	r30, r24
    27a4:	86 81       	ldd	r24, Z+6	; 0x06
    27a6:	97 81       	ldd	r25, Z+7	; 0x07
    27a8:	a0 85       	ldd	r26, Z+8	; 0x08
    27aa:	b1 85       	ldd	r27, Z+9	; 0x09
    27ac:	29 81       	ldd	r18, Y+1	; 0x01
    27ae:	3a 81       	ldd	r19, Y+2	; 0x02
    27b0:	4b 81       	ldd	r20, Y+3	; 0x03
    27b2:	5c 81       	ldd	r21, Y+4	; 0x04
    27b4:	bc 01       	movw	r22, r24
    27b6:	cd 01       	movw	r24, r26
    27b8:	0e 94 66 43 	call	0x86cc	; 0x86cc <__cmpsf2>
    27bc:	88 23       	and	r24, r24
    27be:	5c f4       	brge	.+22     	; 0x27d6 <_ZN10helicopter7drivers11ServoDriver26controlTailRotorCollectiveEd+0x68>
	{
		control = maxControlValue;
    27c0:	8d 81       	ldd	r24, Y+5	; 0x05
    27c2:	9e 81       	ldd	r25, Y+6	; 0x06
    27c4:	fc 01       	movw	r30, r24
    27c6:	86 81       	ldd	r24, Z+6	; 0x06
    27c8:	97 81       	ldd	r25, Z+7	; 0x07
    27ca:	a0 85       	ldd	r26, Z+8	; 0x08
    27cc:	b1 85       	ldd	r27, Z+9	; 0x09
    27ce:	89 83       	std	Y+1, r24	; 0x01
    27d0:	9a 83       	std	Y+2, r25	; 0x02
    27d2:	ab 83       	std	Y+3, r26	; 0x03
    27d4:	bc 83       	std	Y+4, r27	; 0x04
	}
	
	if (control < minControlValue)
    27d6:	8d 81       	ldd	r24, Y+5	; 0x05
    27d8:	9e 81       	ldd	r25, Y+6	; 0x06
    27da:	fc 01       	movw	r30, r24
    27dc:	82 81       	ldd	r24, Z+2	; 0x02
    27de:	93 81       	ldd	r25, Z+3	; 0x03
    27e0:	a4 81       	ldd	r26, Z+4	; 0x04
    27e2:	b5 81       	ldd	r27, Z+5	; 0x05
    27e4:	29 81       	ldd	r18, Y+1	; 0x01
    27e6:	3a 81       	ldd	r19, Y+2	; 0x02
    27e8:	4b 81       	ldd	r20, Y+3	; 0x03
    27ea:	5c 81       	ldd	r21, Y+4	; 0x04
    27ec:	bc 01       	movw	r22, r24
    27ee:	cd 01       	movw	r24, r26
    27f0:	0e 94 44 45 	call	0x8a88	; 0x8a88 <__gesf2>
    27f4:	18 16       	cp	r1, r24
    27f6:	5c f4       	brge	.+22     	; 0x280e <_ZN10helicopter7drivers11ServoDriver26controlTailRotorCollectiveEd+0xa0>
	{
		control = minControlValue;
    27f8:	8d 81       	ldd	r24, Y+5	; 0x05
    27fa:	9e 81       	ldd	r25, Y+6	; 0x06
    27fc:	fc 01       	movw	r30, r24
    27fe:	82 81       	ldd	r24, Z+2	; 0x02
    2800:	93 81       	ldd	r25, Z+3	; 0x03
    2802:	a4 81       	ldd	r26, Z+4	; 0x04
    2804:	b5 81       	ldd	r27, Z+5	; 0x05
    2806:	89 83       	std	Y+1, r24	; 0x01
    2808:	9a 83       	std	Y+2, r25	; 0x02
    280a:	ab 83       	std	Y+3, r26	; 0x03
    280c:	bc 83       	std	Y+4, r27	; 0x04
	}
	
	controlTailRotorCollectiveImpl(control);
    280e:	8d 81       	ldd	r24, Y+5	; 0x05
    2810:	9e 81       	ldd	r25, Y+6	; 0x06
    2812:	fc 01       	movw	r30, r24
    2814:	80 81       	ld	r24, Z
    2816:	91 81       	ldd	r25, Z+1	; 0x01
    2818:	04 96       	adiw	r24, 0x04	; 4
    281a:	fc 01       	movw	r30, r24
    281c:	20 81       	ld	r18, Z
    281e:	31 81       	ldd	r19, Z+1	; 0x01
    2820:	89 81       	ldd	r24, Y+1	; 0x01
    2822:	9a 81       	ldd	r25, Y+2	; 0x02
    2824:	ab 81       	ldd	r26, Y+3	; 0x03
    2826:	bc 81       	ldd	r27, Y+4	; 0x04
    2828:	ed 81       	ldd	r30, Y+5	; 0x05
    282a:	fe 81       	ldd	r31, Y+6	; 0x06
    282c:	ac 01       	movw	r20, r24
    282e:	bd 01       	movw	r22, r26
    2830:	cf 01       	movw	r24, r30
    2832:	f9 01       	movw	r30, r18
    2834:	19 95       	eicall
}
    2836:	2a 96       	adiw	r28, 0x0a	; 10
    2838:	0f b6       	in	r0, 0x3f	; 63
    283a:	f8 94       	cli
    283c:	de bf       	out	0x3e, r29	; 62
    283e:	0f be       	out	0x3f, r0	; 63
    2840:	cd bf       	out	0x3d, r28	; 61
    2842:	df 91       	pop	r29
    2844:	cf 91       	pop	r28
    2846:	08 95       	ret

00002848 <_ZN10helicopter7drivers11ServoDriver30controlTailRotorCollectiveImplEd>:


void ServoDriver::controlTailRotorCollectiveImpl(double controlTailRotorCollective)
{
    2848:	cf 93       	push	r28
    284a:	df 93       	push	r29
    284c:	00 d0       	rcall	.+0      	; 0x284e <_ZN10helicopter7drivers11ServoDriver30controlTailRotorCollectiveImplEd+0x6>
    284e:	00 d0       	rcall	.+0      	; 0x2850 <_ZN10helicopter7drivers11ServoDriver30controlTailRotorCollectiveImplEd+0x8>
    2850:	cd b7       	in	r28, 0x3d	; 61
    2852:	de b7       	in	r29, 0x3e	; 62
    2854:	9a 83       	std	Y+2, r25	; 0x02
    2856:	89 83       	std	Y+1, r24	; 0x01
    2858:	4b 83       	std	Y+3, r20	; 0x03
    285a:	5c 83       	std	Y+4, r21	; 0x04
    285c:	6d 83       	std	Y+5, r22	; 0x05
    285e:	7e 83       	std	Y+6, r23	; 0x06
	
}
    2860:	26 96       	adiw	r28, 0x06	; 6
    2862:	0f b6       	in	r0, 0x3f	; 63
    2864:	f8 94       	cli
    2866:	de bf       	out	0x3e, r29	; 62
    2868:	0f be       	out	0x3f, r0	; 63
    286a:	cd bf       	out	0x3d, r28	; 61
    286c:	df 91       	pop	r29
    286e:	cf 91       	pop	r28
    2870:	08 95       	ret

00002872 <_ZN10helicopter7drivers11ServoDriver19controlLongitudinalEd>:


void ServoDriver::controlLongitudinal(double controlTailRotorCollective)
{
    2872:	cf 93       	push	r28
    2874:	df 93       	push	r29
    2876:	00 d0       	rcall	.+0      	; 0x2878 <_ZN10helicopter7drivers11ServoDriver19controlLongitudinalEd+0x6>
    2878:	00 d0       	rcall	.+0      	; 0x287a <_ZN10helicopter7drivers11ServoDriver19controlLongitudinalEd+0x8>
    287a:	cd b7       	in	r28, 0x3d	; 61
    287c:	de b7       	in	r29, 0x3e	; 62
    287e:	9a 83       	std	Y+2, r25	; 0x02
    2880:	89 83       	std	Y+1, r24	; 0x01
    2882:	4b 83       	std	Y+3, r20	; 0x03
    2884:	5c 83       	std	Y+4, r21	; 0x04
    2886:	6d 83       	std	Y+5, r22	; 0x05
    2888:	7e 83       	std	Y+6, r23	; 0x06
	
}
    288a:	26 96       	adiw	r28, 0x06	; 6
    288c:	0f b6       	in	r0, 0x3f	; 63
    288e:	f8 94       	cli
    2890:	de bf       	out	0x3e, r29	; 62
    2892:	0f be       	out	0x3f, r0	; 63
    2894:	cd bf       	out	0x3d, r28	; 61
    2896:	df 91       	pop	r29
    2898:	cf 91       	pop	r28
    289a:	08 95       	ret

0000289c <_ZN10helicopter7drivers11ServoDriver26controlMainRotorCollectiveEd>:

void ServoDriver::controlMainRotorCollective( double mainRotorControl )
{
    289c:	cf 93       	push	r28
    289e:	df 93       	push	r29
    28a0:	00 d0       	rcall	.+0      	; 0x28a2 <_ZN10helicopter7drivers11ServoDriver26controlMainRotorCollectiveEd+0x6>
    28a2:	00 d0       	rcall	.+0      	; 0x28a4 <_ZN10helicopter7drivers11ServoDriver26controlMainRotorCollectiveEd+0x8>
    28a4:	cd b7       	in	r28, 0x3d	; 61
    28a6:	de b7       	in	r29, 0x3e	; 62
    28a8:	9a 83       	std	Y+2, r25	; 0x02
    28aa:	89 83       	std	Y+1, r24	; 0x01
    28ac:	4b 83       	std	Y+3, r20	; 0x03
    28ae:	5c 83       	std	Y+4, r21	; 0x04
    28b0:	6d 83       	std	Y+5, r22	; 0x05
    28b2:	7e 83       	std	Y+6, r23	; 0x06

}
    28b4:	26 96       	adiw	r28, 0x06	; 6
    28b6:	0f b6       	in	r0, 0x3f	; 63
    28b8:	f8 94       	cli
    28ba:	de bf       	out	0x3e, r29	; 62
    28bc:	0f be       	out	0x3f, r0	; 63
    28be:	cd bf       	out	0x3d, r28	; 61
    28c0:	df 91       	pop	r29
    28c2:	cf 91       	pop	r28
    28c4:	08 95       	ret

000028c6 <_ZN10helicopter5tasks4TaskD1Ev>:
				 * @param period The number of scheduler 'ticks' to be executed before
				 * this task is ready to run.
				 */
				Task (int delay, int period);
				
				virtual ~Task(){}
    28c6:	cf 93       	push	r28
    28c8:	df 93       	push	r29
    28ca:	1f 92       	push	r1
    28cc:	1f 92       	push	r1
    28ce:	cd b7       	in	r28, 0x3d	; 61
    28d0:	de b7       	in	r29, 0x3e	; 62
    28d2:	9a 83       	std	Y+2, r25	; 0x02
    28d4:	89 83       	std	Y+1, r24	; 0x01
    28d6:	89 81       	ldd	r24, Y+1	; 0x01
    28d8:	9a 81       	ldd	r25, Y+2	; 0x02
    28da:	2c e8       	ldi	r18, 0x8C	; 140
    28dc:	32 e0       	ldi	r19, 0x02	; 2
    28de:	fc 01       	movw	r30, r24
    28e0:	31 83       	std	Z+1, r19	; 0x01
    28e2:	20 83       	st	Z, r18
    28e4:	80 e0       	ldi	r24, 0x00	; 0
    28e6:	90 e0       	ldi	r25, 0x00	; 0
    28e8:	81 70       	andi	r24, 0x01	; 1
    28ea:	99 27       	eor	r25, r25
    28ec:	00 97       	sbiw	r24, 0x00	; 0
    28ee:	21 f0       	breq	.+8      	; 0x28f8 <_ZN10helicopter5tasks4TaskD1Ev+0x32>
    28f0:	89 81       	ldd	r24, Y+1	; 0x01
    28f2:	9a 81       	ldd	r25, Y+2	; 0x02
    28f4:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    28f8:	0f 90       	pop	r0
    28fa:	0f 90       	pop	r0
    28fc:	df 91       	pop	r29
    28fe:	cf 91       	pop	r28
    2900:	08 95       	ret

00002902 <_ZN10helicopter5tasks4TaskD0Ev>:
    2902:	cf 93       	push	r28
    2904:	df 93       	push	r29
    2906:	1f 92       	push	r1
    2908:	1f 92       	push	r1
    290a:	cd b7       	in	r28, 0x3d	; 61
    290c:	de b7       	in	r29, 0x3e	; 62
    290e:	9a 83       	std	Y+2, r25	; 0x02
    2910:	89 83       	std	Y+1, r24	; 0x01
    2912:	89 81       	ldd	r24, Y+1	; 0x01
    2914:	9a 81       	ldd	r25, Y+2	; 0x02
    2916:	0e 94 63 14 	call	0x28c6	; 0x28c6 <_ZN10helicopter5tasks4TaskD1Ev>
    291a:	89 81       	ldd	r24, Y+1	; 0x01
    291c:	9a 81       	ldd	r25, Y+2	; 0x02
    291e:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    2922:	0f 90       	pop	r0
    2924:	0f 90       	pop	r0
    2926:	df 91       	pop	r29
    2928:	cf 91       	pop	r28
    292a:	08 95       	ret

0000292c <_ZN10helicopter5tasks12FlashLEDTaskC1Eiii>:
					
				int ledToBlink;
				
			public:

			FlashLEDTask (int delay, int period, int ledToBlink = BLUELED) : 
    292c:	cf 93       	push	r28
    292e:	df 93       	push	r29
    2930:	cd b7       	in	r28, 0x3d	; 61
    2932:	de b7       	in	r29, 0x3e	; 62
    2934:	28 97       	sbiw	r28, 0x08	; 8
    2936:	0f b6       	in	r0, 0x3f	; 63
    2938:	f8 94       	cli
    293a:	de bf       	out	0x3e, r29	; 62
    293c:	0f be       	out	0x3f, r0	; 63
    293e:	cd bf       	out	0x3d, r28	; 61
    2940:	9a 83       	std	Y+2, r25	; 0x02
    2942:	89 83       	std	Y+1, r24	; 0x01
    2944:	7c 83       	std	Y+4, r23	; 0x04
    2946:	6b 83       	std	Y+3, r22	; 0x03
    2948:	5e 83       	std	Y+6, r21	; 0x06
    294a:	4d 83       	std	Y+5, r20	; 0x05
    294c:	38 87       	std	Y+8, r19	; 0x08
    294e:	2f 83       	std	Y+7, r18	; 0x07
				Task(delay, period),
				isOff(false),
				ledToBlink(ledToBlink)
    2950:	89 81       	ldd	r24, Y+1	; 0x01
    2952:	9a 81       	ldd	r25, Y+2	; 0x02
    2954:	4d 81       	ldd	r20, Y+5	; 0x05
    2956:	5e 81       	ldd	r21, Y+6	; 0x06
    2958:	2b 81       	ldd	r18, Y+3	; 0x03
    295a:	3c 81       	ldd	r19, Y+4	; 0x04
    295c:	b9 01       	movw	r22, r18
    295e:	0e 94 0f 3c 	call	0x781e	; 0x781e <_ZN10helicopter5tasks4TaskC1Eii>
    2962:	89 81       	ldd	r24, Y+1	; 0x01
    2964:	9a 81       	ldd	r25, Y+2	; 0x02
    2966:	22 e2       	ldi	r18, 0x22	; 34
    2968:	32 e0       	ldi	r19, 0x02	; 2
    296a:	fc 01       	movw	r30, r24
    296c:	31 83       	std	Z+1, r19	; 0x01
    296e:	20 83       	st	Z, r18
    2970:	89 81       	ldd	r24, Y+1	; 0x01
    2972:	9a 81       	ldd	r25, Y+2	; 0x02
    2974:	fc 01       	movw	r30, r24
    2976:	17 82       	std	Z+7, r1	; 0x07
    2978:	89 81       	ldd	r24, Y+1	; 0x01
    297a:	9a 81       	ldd	r25, Y+2	; 0x02
    297c:	2f 81       	ldd	r18, Y+7	; 0x07
    297e:	38 85       	ldd	r19, Y+8	; 0x08
    2980:	fc 01       	movw	r30, r24
    2982:	31 87       	std	Z+9, r19	; 0x09
    2984:	20 87       	std	Z+8, r18	; 0x08
			{
					
			}
    2986:	28 96       	adiw	r28, 0x08	; 8
    2988:	0f b6       	in	r0, 0x3f	; 63
    298a:	f8 94       	cli
    298c:	de bf       	out	0x3e, r29	; 62
    298e:	0f be       	out	0x3f, r0	; 63
    2990:	cd bf       	out	0x3d, r28	; 61
    2992:	df 91       	pop	r29
    2994:	cf 91       	pop	r28
    2996:	08 95       	ret

00002998 <_ZN10helicopter5tasks12FlashLEDTask4initEv>:
	
			void init()
    2998:	cf 93       	push	r28
    299a:	df 93       	push	r29
    299c:	1f 92       	push	r1
    299e:	1f 92       	push	r1
    29a0:	cd b7       	in	r28, 0x3d	; 61
    29a2:	de b7       	in	r29, 0x3e	; 62
    29a4:	9a 83       	std	Y+2, r25	; 0x02
    29a6:	89 83       	std	Y+1, r24	; 0x01
			{
				DDRA |= (1<<ledToBlink);
    29a8:	81 e2       	ldi	r24, 0x21	; 33
    29aa:	90 e0       	ldi	r25, 0x00	; 0
    29ac:	21 e2       	ldi	r18, 0x21	; 33
    29ae:	30 e0       	ldi	r19, 0x00	; 0
    29b0:	f9 01       	movw	r30, r18
    29b2:	20 81       	ld	r18, Z
    29b4:	62 2f       	mov	r22, r18
    29b6:	29 81       	ldd	r18, Y+1	; 0x01
    29b8:	3a 81       	ldd	r19, Y+2	; 0x02
    29ba:	f9 01       	movw	r30, r18
    29bc:	40 85       	ldd	r20, Z+8	; 0x08
    29be:	51 85       	ldd	r21, Z+9	; 0x09
    29c0:	21 e0       	ldi	r18, 0x01	; 1
    29c2:	30 e0       	ldi	r19, 0x00	; 0
    29c4:	04 2e       	mov	r0, r20
    29c6:	02 c0       	rjmp	.+4      	; 0x29cc <_ZN10helicopter5tasks12FlashLEDTask4initEv+0x34>
    29c8:	22 0f       	add	r18, r18
    29ca:	33 1f       	adc	r19, r19
    29cc:	0a 94       	dec	r0
    29ce:	e2 f7       	brpl	.-8      	; 0x29c8 <_ZN10helicopter5tasks12FlashLEDTask4initEv+0x30>
    29d0:	26 2b       	or	r18, r22
    29d2:	fc 01       	movw	r30, r24
    29d4:	20 83       	st	Z, r18
			}
    29d6:	0f 90       	pop	r0
    29d8:	0f 90       	pop	r0
    29da:	df 91       	pop	r29
    29dc:	cf 91       	pop	r28
    29de:	08 95       	ret

000029e0 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv>:
	
			/**
				* Flashes the LED
				*/
			void runTaskImpl() {
    29e0:	cf 93       	push	r28
    29e2:	df 93       	push	r29
    29e4:	1f 92       	push	r1
    29e6:	1f 92       	push	r1
    29e8:	cd b7       	in	r28, 0x3d	; 61
    29ea:	de b7       	in	r29, 0x3e	; 62
    29ec:	9a 83       	std	Y+2, r25	; 0x02
    29ee:	89 83       	std	Y+1, r24	; 0x01
				if (isOff)
    29f0:	89 81       	ldd	r24, Y+1	; 0x01
    29f2:	9a 81       	ldd	r25, Y+2	; 0x02
    29f4:	fc 01       	movw	r30, r24
    29f6:	87 81       	ldd	r24, Z+7	; 0x07
    29f8:	88 23       	and	r24, r24
    29fa:	e9 f0       	breq	.+58     	; 0x2a36 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x56>
				{
					//Turn On the LED
					PORTA &= ~(1<<ledToBlink);
    29fc:	82 e2       	ldi	r24, 0x22	; 34
    29fe:	90 e0       	ldi	r25, 0x00	; 0
    2a00:	22 e2       	ldi	r18, 0x22	; 34
    2a02:	30 e0       	ldi	r19, 0x00	; 0
    2a04:	f9 01       	movw	r30, r18
    2a06:	20 81       	ld	r18, Z
    2a08:	62 2f       	mov	r22, r18
    2a0a:	29 81       	ldd	r18, Y+1	; 0x01
    2a0c:	3a 81       	ldd	r19, Y+2	; 0x02
    2a0e:	f9 01       	movw	r30, r18
    2a10:	40 85       	ldd	r20, Z+8	; 0x08
    2a12:	51 85       	ldd	r21, Z+9	; 0x09
    2a14:	21 e0       	ldi	r18, 0x01	; 1
    2a16:	30 e0       	ldi	r19, 0x00	; 0
    2a18:	04 2e       	mov	r0, r20
    2a1a:	02 c0       	rjmp	.+4      	; 0x2a20 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x40>
    2a1c:	22 0f       	add	r18, r18
    2a1e:	33 1f       	adc	r19, r19
    2a20:	0a 94       	dec	r0
    2a22:	e2 f7       	brpl	.-8      	; 0x2a1c <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x3c>
    2a24:	20 95       	com	r18
    2a26:	26 23       	and	r18, r22
    2a28:	fc 01       	movw	r30, r24
    2a2a:	20 83       	st	Z, r18
					isOff = false;
    2a2c:	89 81       	ldd	r24, Y+1	; 0x01
    2a2e:	9a 81       	ldd	r25, Y+2	; 0x02
    2a30:	fc 01       	movw	r30, r24
    2a32:	17 82       	std	Z+7, r1	; 0x07
    2a34:	1c c0       	rjmp	.+56     	; 0x2a6e <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x8e>
				}else
				{
					//Turn Off the LED
					PORTA |= (1<<ledToBlink);
    2a36:	82 e2       	ldi	r24, 0x22	; 34
    2a38:	90 e0       	ldi	r25, 0x00	; 0
    2a3a:	22 e2       	ldi	r18, 0x22	; 34
    2a3c:	30 e0       	ldi	r19, 0x00	; 0
    2a3e:	f9 01       	movw	r30, r18
    2a40:	20 81       	ld	r18, Z
    2a42:	62 2f       	mov	r22, r18
    2a44:	29 81       	ldd	r18, Y+1	; 0x01
    2a46:	3a 81       	ldd	r19, Y+2	; 0x02
    2a48:	f9 01       	movw	r30, r18
    2a4a:	40 85       	ldd	r20, Z+8	; 0x08
    2a4c:	51 85       	ldd	r21, Z+9	; 0x09
    2a4e:	21 e0       	ldi	r18, 0x01	; 1
    2a50:	30 e0       	ldi	r19, 0x00	; 0
    2a52:	04 2e       	mov	r0, r20
    2a54:	02 c0       	rjmp	.+4      	; 0x2a5a <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x7a>
    2a56:	22 0f       	add	r18, r18
    2a58:	33 1f       	adc	r19, r19
    2a5a:	0a 94       	dec	r0
    2a5c:	e2 f7       	brpl	.-8      	; 0x2a56 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x76>
    2a5e:	26 2b       	or	r18, r22
    2a60:	fc 01       	movw	r30, r24
    2a62:	20 83       	st	Z, r18
					isOff = true;
    2a64:	89 81       	ldd	r24, Y+1	; 0x01
    2a66:	9a 81       	ldd	r25, Y+2	; 0x02
    2a68:	21 e0       	ldi	r18, 0x01	; 1
    2a6a:	fc 01       	movw	r30, r24
    2a6c:	27 83       	std	Z+7, r18	; 0x07
				}
			}
    2a6e:	0f 90       	pop	r0
    2a70:	0f 90       	pop	r0
    2a72:	df 91       	pop	r29
    2a74:	cf 91       	pop	r28
    2a76:	08 95       	ret

00002a78 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEv>:
				 * Detects if the processing was completed before the next scheduler triggered.
				 * @return True if the scheduler timer triggered again before the tasks were fully processes,
				 * False if all the tasks were finished processing (i.e. the dispatch method finished) before
				 * the timer triggered again.
				 */
				bool hasBlownFrame()
    2a78:	cf 93       	push	r28
    2a7a:	df 93       	push	r29
    2a7c:	1f 92       	push	r1
    2a7e:	1f 92       	push	r1
    2a80:	cd b7       	in	r28, 0x3d	; 61
    2a82:	de b7       	in	r29, 0x3e	; 62
    2a84:	9a 83       	std	Y+2, r25	; 0x02
    2a86:	89 83       	std	Y+1, r24	; 0x01
				{
					return blowFrameDetected;
    2a88:	89 81       	ldd	r24, Y+1	; 0x01
    2a8a:	9a 81       	ldd	r25, Y+2	; 0x02
    2a8c:	fc 01       	movw	r30, r24
    2a8e:	82 8d       	ldd	r24, Z+26	; 0x1a
				}
    2a90:	0f 90       	pop	r0
    2a92:	0f 90       	pop	r0
    2a94:	df 91       	pop	r29
    2a96:	cf 91       	pop	r28
    2a98:	08 95       	ret

00002a9a <_ZN10helicopter4util5TimerC1Em9PRESCALERm>:
				 * @timeoutMilliseconds the milliseconds that should go by before the
				 * timer times out. This value must be under 1000.
				 * These variables will have to adhere to this equation:
				 * OCR = ((cpuSpeed /  timerPrescaler) / frequency)
				 */
				Timer (unsigned long cpuSpeed, PRESCALER timerPrescaler, unsigned long timeoutMilliseconds):
    2a9a:	ef 92       	push	r14
    2a9c:	ff 92       	push	r15
    2a9e:	0f 93       	push	r16
    2aa0:	1f 93       	push	r17
    2aa2:	cf 93       	push	r28
    2aa4:	df 93       	push	r29
    2aa6:	cd b7       	in	r28, 0x3d	; 61
    2aa8:	de b7       	in	r29, 0x3e	; 62
    2aaa:	2c 97       	sbiw	r28, 0x0c	; 12
    2aac:	0f b6       	in	r0, 0x3f	; 63
    2aae:	f8 94       	cli
    2ab0:	de bf       	out	0x3e, r29	; 62
    2ab2:	0f be       	out	0x3f, r0	; 63
    2ab4:	cd bf       	out	0x3d, r28	; 61
    2ab6:	9a 83       	std	Y+2, r25	; 0x02
    2ab8:	89 83       	std	Y+1, r24	; 0x01
    2aba:	4b 83       	std	Y+3, r20	; 0x03
    2abc:	5c 83       	std	Y+4, r21	; 0x04
    2abe:	6d 83       	std	Y+5, r22	; 0x05
    2ac0:	7e 83       	std	Y+6, r23	; 0x06
    2ac2:	38 87       	std	Y+8, r19	; 0x08
    2ac4:	2f 83       	std	Y+7, r18	; 0x07
    2ac6:	e9 86       	std	Y+9, r14	; 0x09
    2ac8:	fa 86       	std	Y+10, r15	; 0x0a
    2aca:	0b 87       	std	Y+11, r16	; 0x0b
    2acc:	1c 87       	std	Y+12, r17	; 0x0c
					cpuSpeed(cpuSpeed), timerPrescaler(timerPrescaler), timeoutMilliseconds(timeoutMilliseconds)
    2ace:	29 81       	ldd	r18, Y+1	; 0x01
    2ad0:	3a 81       	ldd	r19, Y+2	; 0x02
    2ad2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ad4:	9c 81       	ldd	r25, Y+4	; 0x04
    2ad6:	ad 81       	ldd	r26, Y+5	; 0x05
    2ad8:	be 81       	ldd	r27, Y+6	; 0x06
    2ada:	f9 01       	movw	r30, r18
    2adc:	80 83       	st	Z, r24
    2ade:	91 83       	std	Z+1, r25	; 0x01
    2ae0:	a2 83       	std	Z+2, r26	; 0x02
    2ae2:	b3 83       	std	Z+3, r27	; 0x03
    2ae4:	89 81       	ldd	r24, Y+1	; 0x01
    2ae6:	9a 81       	ldd	r25, Y+2	; 0x02
    2ae8:	2f 81       	ldd	r18, Y+7	; 0x07
    2aea:	38 85       	ldd	r19, Y+8	; 0x08
    2aec:	fc 01       	movw	r30, r24
    2aee:	35 83       	std	Z+5, r19	; 0x05
    2af0:	24 83       	std	Z+4, r18	; 0x04
    2af2:	29 85       	ldd	r18, Y+9	; 0x09
    2af4:	3a 85       	ldd	r19, Y+10	; 0x0a
    2af6:	89 81       	ldd	r24, Y+1	; 0x01
    2af8:	9a 81       	ldd	r25, Y+2	; 0x02
    2afa:	fc 01       	movw	r30, r24
    2afc:	37 83       	std	Z+7, r19	; 0x07
    2afe:	26 83       	std	Z+6, r18	; 0x06
					{
						
					}
    2b00:	2c 96       	adiw	r28, 0x0c	; 12
    2b02:	0f b6       	in	r0, 0x3f	; 63
    2b04:	f8 94       	cli
    2b06:	de bf       	out	0x3e, r29	; 62
    2b08:	0f be       	out	0x3f, r0	; 63
    2b0a:	cd bf       	out	0x3d, r28	; 61
    2b0c:	df 91       	pop	r29
    2b0e:	cf 91       	pop	r28
    2b10:	1f 91       	pop	r17
    2b12:	0f 91       	pop	r16
    2b14:	ff 90       	pop	r15
    2b16:	ef 90       	pop	r14
    2b18:	08 95       	ret

00002b1a <_ZN10helicopter7drivers12SerialDriverC1EmNS1_8UartPortEPNS_4util5TimerEbb>:
				 * only used when enableTimeout = true.
				 * @param enableTimeout Bool indicating if the system should timeout
				 * while waiting to send or receive data. True by default so that the
				 * driver will timeout if it can't send or receive data after a short timeout period.
				 */		
				SerialDriver(
    2b1a:	cf 92       	push	r12
    2b1c:	ef 92       	push	r14
    2b1e:	0f 93       	push	r16
    2b20:	1f 93       	push	r17
    2b22:	cf 93       	push	r28
    2b24:	df 93       	push	r29
    2b26:	cd b7       	in	r28, 0x3d	; 61
    2b28:	de b7       	in	r29, 0x3e	; 62
    2b2a:	2b 97       	sbiw	r28, 0x0b	; 11
    2b2c:	0f b6       	in	r0, 0x3f	; 63
    2b2e:	f8 94       	cli
    2b30:	de bf       	out	0x3e, r29	; 62
    2b32:	0f be       	out	0x3f, r0	; 63
    2b34:	cd bf       	out	0x3d, r28	; 61
    2b36:	9a 83       	std	Y+2, r25	; 0x02
    2b38:	89 83       	std	Y+1, r24	; 0x01
    2b3a:	4b 83       	std	Y+3, r20	; 0x03
    2b3c:	5c 83       	std	Y+4, r21	; 0x04
    2b3e:	6d 83       	std	Y+5, r22	; 0x05
    2b40:	7e 83       	std	Y+6, r23	; 0x06
    2b42:	2f 83       	std	Y+7, r18	; 0x07
    2b44:	19 87       	std	Y+9, r17	; 0x09
    2b46:	08 87       	std	Y+8, r16	; 0x08
    2b48:	ea 86       	std	Y+10, r14	; 0x0a
    2b4a:	cb 86       	std	Y+11, r12	; 0x0b
					bool useDoubleSpeedMode = false) :
				baudRate(baudRate),
				uartPort(uartPort),
				timer(timer),
				isTimeoutEnabled(enableTimeout),
				useDoubleSpeedMode(useDoubleSpeedMode)
    2b4c:	89 81       	ldd	r24, Y+1	; 0x01
    2b4e:	9a 81       	ldd	r25, Y+2	; 0x02
    2b50:	2a e0       	ldi	r18, 0x0A	; 10
    2b52:	32 e0       	ldi	r19, 0x02	; 2
    2b54:	fc 01       	movw	r30, r24
    2b56:	31 83       	std	Z+1, r19	; 0x01
    2b58:	20 83       	st	Z, r18
    2b5a:	29 81       	ldd	r18, Y+1	; 0x01
    2b5c:	3a 81       	ldd	r19, Y+2	; 0x02
    2b5e:	8b 81       	ldd	r24, Y+3	; 0x03
    2b60:	9c 81       	ldd	r25, Y+4	; 0x04
    2b62:	ad 81       	ldd	r26, Y+5	; 0x05
    2b64:	be 81       	ldd	r27, Y+6	; 0x06
    2b66:	f9 01       	movw	r30, r18
    2b68:	82 83       	std	Z+2, r24	; 0x02
    2b6a:	93 83       	std	Z+3, r25	; 0x03
    2b6c:	a4 83       	std	Z+4, r26	; 0x04
    2b6e:	b5 83       	std	Z+5, r27	; 0x05
    2b70:	89 81       	ldd	r24, Y+1	; 0x01
    2b72:	9a 81       	ldd	r25, Y+2	; 0x02
    2b74:	2f 81       	ldd	r18, Y+7	; 0x07
    2b76:	fc 01       	movw	r30, r24
    2b78:	26 83       	std	Z+6, r18	; 0x06
    2b7a:	89 81       	ldd	r24, Y+1	; 0x01
    2b7c:	9a 81       	ldd	r25, Y+2	; 0x02
    2b7e:	28 85       	ldd	r18, Y+8	; 0x08
    2b80:	39 85       	ldd	r19, Y+9	; 0x09
    2b82:	fc 01       	movw	r30, r24
    2b84:	30 87       	std	Z+8, r19	; 0x08
    2b86:	27 83       	std	Z+7, r18	; 0x07
    2b88:	89 81       	ldd	r24, Y+1	; 0x01
    2b8a:	9a 81       	ldd	r25, Y+2	; 0x02
    2b8c:	2a 85       	ldd	r18, Y+10	; 0x0a
    2b8e:	fc 01       	movw	r30, r24
    2b90:	21 87       	std	Z+9, r18	; 0x09
    2b92:	89 81       	ldd	r24, Y+1	; 0x01
    2b94:	9a 81       	ldd	r25, Y+2	; 0x02
    2b96:	2b 85       	ldd	r18, Y+11	; 0x0b
    2b98:	fc 01       	movw	r30, r24
    2b9a:	22 87       	std	Z+10, r18	; 0x0a
				{
					
				}
    2b9c:	2b 96       	adiw	r28, 0x0b	; 11
    2b9e:	0f b6       	in	r0, 0x3f	; 63
    2ba0:	f8 94       	cli
    2ba2:	de bf       	out	0x3e, r29	; 62
    2ba4:	0f be       	out	0x3f, r0	; 63
    2ba6:	cd bf       	out	0x3d, r28	; 61
    2ba8:	df 91       	pop	r29
    2baa:	cf 91       	pop	r28
    2bac:	1f 91       	pop	r17
    2bae:	0f 91       	pop	r16
    2bb0:	ef 90       	pop	r14
    2bb2:	cf 90       	pop	r12
    2bb4:	08 95       	ret

00002bb6 <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverE>:
				 * at the same time interval (i.e. 20 milliseconds) for both transmitting a byte as well
				 * as receiving a byte.
				 * @param serialDriver the driver used to communicate with the serial port
				 * which is used to communicate with the Ground Control Station.
				 */
				GroundControlStationInterface(SerialDriver *serialDriver):
    2bb6:	cf 93       	push	r28
    2bb8:	df 93       	push	r29
    2bba:	00 d0       	rcall	.+0      	; 0x2bbc <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverE+0x6>
    2bbc:	1f 92       	push	r1
    2bbe:	cd b7       	in	r28, 0x3d	; 61
    2bc0:	de b7       	in	r29, 0x3e	; 62
    2bc2:	9a 83       	std	Y+2, r25	; 0x02
    2bc4:	89 83       	std	Y+1, r24	; 0x01
    2bc6:	7c 83       	std	Y+4, r23	; 0x04
    2bc8:	6b 83       	std	Y+3, r22	; 0x03
					serialDriver(serialDriver)
    2bca:	89 81       	ldd	r24, Y+1	; 0x01
    2bcc:	9a 81       	ldd	r25, Y+2	; 0x02
    2bce:	2b 81       	ldd	r18, Y+3	; 0x03
    2bd0:	3c 81       	ldd	r19, Y+4	; 0x04
    2bd2:	fc 01       	movw	r30, r24
    2bd4:	31 83       	std	Z+1, r19	; 0x01
    2bd6:	20 83       	st	Z, r18
					{}
    2bd8:	0f 90       	pop	r0
    2bda:	0f 90       	pop	r0
    2bdc:	0f 90       	pop	r0
    2bde:	0f 90       	pop	r0
    2be0:	df 91       	pop	r29
    2be2:	cf 91       	pop	r28
    2be4:	08 95       	ret

00002be6 <_ZN10helicopter5model11SystemModelC1Ev>:
			
			public:
			
			float EcefToLocalNEDRotationMatrix[3][3];
			
			SystemModel():
    2be6:	cf 93       	push	r28
    2be8:	df 93       	push	r29
    2bea:	1f 92       	push	r1
    2bec:	1f 92       	push	r1
    2bee:	cd b7       	in	r28, 0x3d	; 61
    2bf0:	de b7       	in	r29, 0x3e	; 62
    2bf2:	9a 83       	std	Y+2, r25	; 0x02
    2bf4:	89 83       	std	Y+1, r24	; 0x01
				checksumErrors(0),
				numOfFramesBlown(0),
				
				initialXPositionEcef(0),
				initialYPositionEcef(0),
				initialZPositionEcef(0)
    2bf6:	89 81       	ldd	r24, Y+1	; 0x01
    2bf8:	9a 81       	ldd	r25, Y+2	; 0x02
    2bfa:	fc 01       	movw	r30, r24
    2bfc:	10 82       	st	Z, r1
    2bfe:	11 82       	std	Z+1, r1	; 0x01
    2c00:	12 82       	std	Z+2, r1	; 0x02
    2c02:	13 82       	std	Z+3, r1	; 0x03
    2c04:	89 81       	ldd	r24, Y+1	; 0x01
    2c06:	9a 81       	ldd	r25, Y+2	; 0x02
    2c08:	fc 01       	movw	r30, r24
    2c0a:	14 82       	std	Z+4, r1	; 0x04
    2c0c:	15 82       	std	Z+5, r1	; 0x05
    2c0e:	16 82       	std	Z+6, r1	; 0x06
    2c10:	17 82       	std	Z+7, r1	; 0x07
    2c12:	89 81       	ldd	r24, Y+1	; 0x01
    2c14:	9a 81       	ldd	r25, Y+2	; 0x02
    2c16:	fc 01       	movw	r30, r24
    2c18:	10 86       	std	Z+8, r1	; 0x08
    2c1a:	11 86       	std	Z+9, r1	; 0x09
    2c1c:	12 86       	std	Z+10, r1	; 0x0a
    2c1e:	13 86       	std	Z+11, r1	; 0x0b
    2c20:	89 81       	ldd	r24, Y+1	; 0x01
    2c22:	9a 81       	ldd	r25, Y+2	; 0x02
    2c24:	fc 01       	movw	r30, r24
    2c26:	14 86       	std	Z+12, r1	; 0x0c
    2c28:	15 86       	std	Z+13, r1	; 0x0d
    2c2a:	16 86       	std	Z+14, r1	; 0x0e
    2c2c:	17 86       	std	Z+15, r1	; 0x0f
    2c2e:	89 81       	ldd	r24, Y+1	; 0x01
    2c30:	9a 81       	ldd	r25, Y+2	; 0x02
    2c32:	fc 01       	movw	r30, r24
    2c34:	10 8a       	std	Z+16, r1	; 0x10
    2c36:	11 8a       	std	Z+17, r1	; 0x11
    2c38:	12 8a       	std	Z+18, r1	; 0x12
    2c3a:	13 8a       	std	Z+19, r1	; 0x13
    2c3c:	89 81       	ldd	r24, Y+1	; 0x01
    2c3e:	9a 81       	ldd	r25, Y+2	; 0x02
    2c40:	fc 01       	movw	r30, r24
    2c42:	14 8a       	std	Z+20, r1	; 0x14
    2c44:	15 8a       	std	Z+21, r1	; 0x15
    2c46:	16 8a       	std	Z+22, r1	; 0x16
    2c48:	17 8a       	std	Z+23, r1	; 0x17
    2c4a:	89 81       	ldd	r24, Y+1	; 0x01
    2c4c:	9a 81       	ldd	r25, Y+2	; 0x02
    2c4e:	fc 01       	movw	r30, r24
    2c50:	10 8e       	std	Z+24, r1	; 0x18
    2c52:	11 8e       	std	Z+25, r1	; 0x19
    2c54:	12 8e       	std	Z+26, r1	; 0x1a
    2c56:	13 8e       	std	Z+27, r1	; 0x1b
    2c58:	89 81       	ldd	r24, Y+1	; 0x01
    2c5a:	9a 81       	ldd	r25, Y+2	; 0x02
    2c5c:	fc 01       	movw	r30, r24
    2c5e:	14 8e       	std	Z+28, r1	; 0x1c
    2c60:	15 8e       	std	Z+29, r1	; 0x1d
    2c62:	16 8e       	std	Z+30, r1	; 0x1e
    2c64:	17 8e       	std	Z+31, r1	; 0x1f
    2c66:	89 81       	ldd	r24, Y+1	; 0x01
    2c68:	9a 81       	ldd	r25, Y+2	; 0x02
    2c6a:	fc 01       	movw	r30, r24
    2c6c:	10 a2       	std	Z+32, r1	; 0x20
    2c6e:	11 a2       	std	Z+33, r1	; 0x21
    2c70:	12 a2       	std	Z+34, r1	; 0x22
    2c72:	13 a2       	std	Z+35, r1	; 0x23
    2c74:	89 81       	ldd	r24, Y+1	; 0x01
    2c76:	9a 81       	ldd	r25, Y+2	; 0x02
    2c78:	fc 01       	movw	r30, r24
    2c7a:	14 a2       	std	Z+36, r1	; 0x24
    2c7c:	15 a2       	std	Z+37, r1	; 0x25
    2c7e:	16 a2       	std	Z+38, r1	; 0x26
    2c80:	17 a2       	std	Z+39, r1	; 0x27
    2c82:	89 81       	ldd	r24, Y+1	; 0x01
    2c84:	9a 81       	ldd	r25, Y+2	; 0x02
    2c86:	fc 01       	movw	r30, r24
    2c88:	10 a6       	std	Z+40, r1	; 0x28
    2c8a:	11 a6       	std	Z+41, r1	; 0x29
    2c8c:	12 a6       	std	Z+42, r1	; 0x2a
    2c8e:	13 a6       	std	Z+43, r1	; 0x2b
    2c90:	89 81       	ldd	r24, Y+1	; 0x01
    2c92:	9a 81       	ldd	r25, Y+2	; 0x02
    2c94:	fc 01       	movw	r30, r24
    2c96:	14 a6       	std	Z+44, r1	; 0x2c
    2c98:	15 a6       	std	Z+45, r1	; 0x2d
    2c9a:	16 a6       	std	Z+46, r1	; 0x2e
    2c9c:	17 a6       	std	Z+47, r1	; 0x2f
    2c9e:	89 81       	ldd	r24, Y+1	; 0x01
    2ca0:	9a 81       	ldd	r25, Y+2	; 0x02
    2ca2:	fc 01       	movw	r30, r24
    2ca4:	10 aa       	std	Z+48, r1	; 0x30
    2ca6:	11 aa       	std	Z+49, r1	; 0x31
    2ca8:	12 aa       	std	Z+50, r1	; 0x32
    2caa:	13 aa       	std	Z+51, r1	; 0x33
    2cac:	89 81       	ldd	r24, Y+1	; 0x01
    2cae:	9a 81       	ldd	r25, Y+2	; 0x02
    2cb0:	fc 01       	movw	r30, r24
    2cb2:	14 aa       	std	Z+52, r1	; 0x34
    2cb4:	15 aa       	std	Z+53, r1	; 0x35
    2cb6:	16 aa       	std	Z+54, r1	; 0x36
    2cb8:	17 aa       	std	Z+55, r1	; 0x37
    2cba:	89 81       	ldd	r24, Y+1	; 0x01
    2cbc:	9a 81       	ldd	r25, Y+2	; 0x02
    2cbe:	fc 01       	movw	r30, r24
    2cc0:	10 ae       	std	Z+56, r1	; 0x38
    2cc2:	11 ae       	std	Z+57, r1	; 0x39
    2cc4:	12 ae       	std	Z+58, r1	; 0x3a
    2cc6:	13 ae       	std	Z+59, r1	; 0x3b
    2cc8:	89 81       	ldd	r24, Y+1	; 0x01
    2cca:	9a 81       	ldd	r25, Y+2	; 0x02
    2ccc:	fc 01       	movw	r30, r24
    2cce:	14 ae       	std	Z+60, r1	; 0x3c
    2cd0:	15 ae       	std	Z+61, r1	; 0x3d
    2cd2:	16 ae       	std	Z+62, r1	; 0x3e
    2cd4:	17 ae       	std	Z+63, r1	; 0x3f
    2cd6:	89 81       	ldd	r24, Y+1	; 0x01
    2cd8:	9a 81       	ldd	r25, Y+2	; 0x02
    2cda:	80 5c       	subi	r24, 0xC0	; 192
    2cdc:	9f 4f       	sbci	r25, 0xFF	; 255
    2cde:	fc 01       	movw	r30, r24
    2ce0:	10 82       	st	Z, r1
    2ce2:	11 82       	std	Z+1, r1	; 0x01
    2ce4:	12 82       	std	Z+2, r1	; 0x02
    2ce6:	13 82       	std	Z+3, r1	; 0x03
    2ce8:	89 81       	ldd	r24, Y+1	; 0x01
    2cea:	9a 81       	ldd	r25, Y+2	; 0x02
    2cec:	8c 5b       	subi	r24, 0xBC	; 188
    2cee:	9f 4f       	sbci	r25, 0xFF	; 255
    2cf0:	fc 01       	movw	r30, r24
    2cf2:	10 82       	st	Z, r1
    2cf4:	11 82       	std	Z+1, r1	; 0x01
    2cf6:	12 82       	std	Z+2, r1	; 0x02
    2cf8:	13 82       	std	Z+3, r1	; 0x03
    2cfa:	89 81       	ldd	r24, Y+1	; 0x01
    2cfc:	9a 81       	ldd	r25, Y+2	; 0x02
    2cfe:	88 5b       	subi	r24, 0xB8	; 184
    2d00:	9f 4f       	sbci	r25, 0xFF	; 255
    2d02:	fc 01       	movw	r30, r24
    2d04:	10 82       	st	Z, r1
    2d06:	11 82       	std	Z+1, r1	; 0x01
    2d08:	12 82       	std	Z+2, r1	; 0x02
    2d0a:	13 82       	std	Z+3, r1	; 0x03
    2d0c:	89 81       	ldd	r24, Y+1	; 0x01
    2d0e:	9a 81       	ldd	r25, Y+2	; 0x02
    2d10:	84 5b       	subi	r24, 0xB4	; 180
    2d12:	9f 4f       	sbci	r25, 0xFF	; 255
    2d14:	fc 01       	movw	r30, r24
    2d16:	10 82       	st	Z, r1
    2d18:	11 82       	std	Z+1, r1	; 0x01
    2d1a:	12 82       	std	Z+2, r1	; 0x02
    2d1c:	13 82       	std	Z+3, r1	; 0x03
    2d1e:	89 81       	ldd	r24, Y+1	; 0x01
    2d20:	9a 81       	ldd	r25, Y+2	; 0x02
    2d22:	80 5b       	subi	r24, 0xB0	; 176
    2d24:	9f 4f       	sbci	r25, 0xFF	; 255
    2d26:	fc 01       	movw	r30, r24
    2d28:	10 82       	st	Z, r1
    2d2a:	11 82       	std	Z+1, r1	; 0x01
    2d2c:	12 82       	std	Z+2, r1	; 0x02
    2d2e:	13 82       	std	Z+3, r1	; 0x03
    2d30:	89 81       	ldd	r24, Y+1	; 0x01
    2d32:	9a 81       	ldd	r25, Y+2	; 0x02
    2d34:	8c 5a       	subi	r24, 0xAC	; 172
    2d36:	9f 4f       	sbci	r25, 0xFF	; 255
    2d38:	fc 01       	movw	r30, r24
    2d3a:	10 82       	st	Z, r1
    2d3c:	11 82       	std	Z+1, r1	; 0x01
    2d3e:	12 82       	std	Z+2, r1	; 0x02
    2d40:	13 82       	std	Z+3, r1	; 0x03
    2d42:	89 81       	ldd	r24, Y+1	; 0x01
    2d44:	9a 81       	ldd	r25, Y+2	; 0x02
    2d46:	88 5a       	subi	r24, 0xA8	; 168
    2d48:	9f 4f       	sbci	r25, 0xFF	; 255
    2d4a:	fc 01       	movw	r30, r24
    2d4c:	10 82       	st	Z, r1
    2d4e:	11 82       	std	Z+1, r1	; 0x01
    2d50:	12 82       	std	Z+2, r1	; 0x02
    2d52:	13 82       	std	Z+3, r1	; 0x03
    2d54:	89 81       	ldd	r24, Y+1	; 0x01
    2d56:	9a 81       	ldd	r25, Y+2	; 0x02
    2d58:	84 5a       	subi	r24, 0xA4	; 164
    2d5a:	9f 4f       	sbci	r25, 0xFF	; 255
    2d5c:	fc 01       	movw	r30, r24
    2d5e:	10 82       	st	Z, r1
    2d60:	11 82       	std	Z+1, r1	; 0x01
    2d62:	12 82       	std	Z+2, r1	; 0x02
    2d64:	13 82       	std	Z+3, r1	; 0x03
    2d66:	89 81       	ldd	r24, Y+1	; 0x01
    2d68:	9a 81       	ldd	r25, Y+2	; 0x02
    2d6a:	80 5a       	subi	r24, 0xA0	; 160
    2d6c:	9f 4f       	sbci	r25, 0xFF	; 255
    2d6e:	fc 01       	movw	r30, r24
    2d70:	10 82       	st	Z, r1
    2d72:	11 82       	std	Z+1, r1	; 0x01
    2d74:	12 82       	std	Z+2, r1	; 0x02
    2d76:	13 82       	std	Z+3, r1	; 0x03
    2d78:	89 81       	ldd	r24, Y+1	; 0x01
    2d7a:	9a 81       	ldd	r25, Y+2	; 0x02
    2d7c:	8c 59       	subi	r24, 0x9C	; 156
    2d7e:	9f 4f       	sbci	r25, 0xFF	; 255
    2d80:	fc 01       	movw	r30, r24
    2d82:	10 82       	st	Z, r1
    2d84:	11 82       	std	Z+1, r1	; 0x01
    2d86:	12 82       	std	Z+2, r1	; 0x02
    2d88:	13 82       	std	Z+3, r1	; 0x03
    2d8a:	89 81       	ldd	r24, Y+1	; 0x01
    2d8c:	9a 81       	ldd	r25, Y+2	; 0x02
    2d8e:	88 59       	subi	r24, 0x98	; 152
    2d90:	9f 4f       	sbci	r25, 0xFF	; 255
    2d92:	fc 01       	movw	r30, r24
    2d94:	10 82       	st	Z, r1
    2d96:	11 82       	std	Z+1, r1	; 0x01
    2d98:	12 82       	std	Z+2, r1	; 0x02
    2d9a:	13 82       	std	Z+3, r1	; 0x03
    2d9c:	89 81       	ldd	r24, Y+1	; 0x01
    2d9e:	9a 81       	ldd	r25, Y+2	; 0x02
    2da0:	84 59       	subi	r24, 0x94	; 148
    2da2:	9f 4f       	sbci	r25, 0xFF	; 255
    2da4:	fc 01       	movw	r30, r24
    2da6:	10 82       	st	Z, r1
    2da8:	11 82       	std	Z+1, r1	; 0x01
    2daa:	12 82       	std	Z+2, r1	; 0x02
    2dac:	13 82       	std	Z+3, r1	; 0x03
    2dae:	89 81       	ldd	r24, Y+1	; 0x01
    2db0:	9a 81       	ldd	r25, Y+2	; 0x02
    2db2:	80 59       	subi	r24, 0x90	; 144
    2db4:	9f 4f       	sbci	r25, 0xFF	; 255
    2db6:	fc 01       	movw	r30, r24
    2db8:	10 82       	st	Z, r1
    2dba:	11 82       	std	Z+1, r1	; 0x01
    2dbc:	12 82       	std	Z+2, r1	; 0x02
    2dbe:	13 82       	std	Z+3, r1	; 0x03
    2dc0:	89 81       	ldd	r24, Y+1	; 0x01
    2dc2:	9a 81       	ldd	r25, Y+2	; 0x02
    2dc4:	8c 58       	subi	r24, 0x8C	; 140
    2dc6:	9f 4f       	sbci	r25, 0xFF	; 255
    2dc8:	fc 01       	movw	r30, r24
    2dca:	10 82       	st	Z, r1
    2dcc:	11 82       	std	Z+1, r1	; 0x01
    2dce:	12 82       	std	Z+2, r1	; 0x02
    2dd0:	13 82       	std	Z+3, r1	; 0x03
    2dd2:	89 81       	ldd	r24, Y+1	; 0x01
    2dd4:	9a 81       	ldd	r25, Y+2	; 0x02
    2dd6:	88 58       	subi	r24, 0x88	; 136
    2dd8:	9f 4f       	sbci	r25, 0xFF	; 255
    2dda:	fc 01       	movw	r30, r24
    2ddc:	10 82       	st	Z, r1
    2dde:	11 82       	std	Z+1, r1	; 0x01
    2de0:	12 82       	std	Z+2, r1	; 0x02
    2de2:	13 82       	std	Z+3, r1	; 0x03
    2de4:	89 81       	ldd	r24, Y+1	; 0x01
    2de6:	9a 81       	ldd	r25, Y+2	; 0x02
    2de8:	84 58       	subi	r24, 0x84	; 132
    2dea:	9f 4f       	sbci	r25, 0xFF	; 255
    2dec:	fc 01       	movw	r30, r24
    2dee:	10 82       	st	Z, r1
    2df0:	11 82       	std	Z+1, r1	; 0x01
    2df2:	12 82       	std	Z+2, r1	; 0x02
    2df4:	13 82       	std	Z+3, r1	; 0x03
    2df6:	89 81       	ldd	r24, Y+1	; 0x01
    2df8:	9a 81       	ldd	r25, Y+2	; 0x02
    2dfa:	80 58       	subi	r24, 0x80	; 128
    2dfc:	9f 4f       	sbci	r25, 0xFF	; 255
    2dfe:	fc 01       	movw	r30, r24
    2e00:	10 82       	st	Z, r1
    2e02:	11 82       	std	Z+1, r1	; 0x01
    2e04:	12 82       	std	Z+2, r1	; 0x02
    2e06:	13 82       	std	Z+3, r1	; 0x03
    2e08:	89 81       	ldd	r24, Y+1	; 0x01
    2e0a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e0c:	8c 57       	subi	r24, 0x7C	; 124
    2e0e:	9f 4f       	sbci	r25, 0xFF	; 255
    2e10:	fc 01       	movw	r30, r24
    2e12:	10 82       	st	Z, r1
    2e14:	11 82       	std	Z+1, r1	; 0x01
    2e16:	12 82       	std	Z+2, r1	; 0x02
    2e18:	13 82       	std	Z+3, r1	; 0x03
    2e1a:	89 81       	ldd	r24, Y+1	; 0x01
    2e1c:	9a 81       	ldd	r25, Y+2	; 0x02
    2e1e:	88 57       	subi	r24, 0x78	; 120
    2e20:	9f 4f       	sbci	r25, 0xFF	; 255
    2e22:	fc 01       	movw	r30, r24
    2e24:	10 82       	st	Z, r1
    2e26:	11 82       	std	Z+1, r1	; 0x01
    2e28:	12 82       	std	Z+2, r1	; 0x02
    2e2a:	13 82       	std	Z+3, r1	; 0x03
    2e2c:	89 81       	ldd	r24, Y+1	; 0x01
    2e2e:	9a 81       	ldd	r25, Y+2	; 0x02
    2e30:	84 57       	subi	r24, 0x74	; 116
    2e32:	9f 4f       	sbci	r25, 0xFF	; 255
    2e34:	fc 01       	movw	r30, r24
    2e36:	10 82       	st	Z, r1
    2e38:	11 82       	std	Z+1, r1	; 0x01
    2e3a:	12 82       	std	Z+2, r1	; 0x02
    2e3c:	13 82       	std	Z+3, r1	; 0x03
    2e3e:	89 81       	ldd	r24, Y+1	; 0x01
    2e40:	9a 81       	ldd	r25, Y+2	; 0x02
    2e42:	80 57       	subi	r24, 0x70	; 112
    2e44:	9f 4f       	sbci	r25, 0xFF	; 255
    2e46:	fc 01       	movw	r30, r24
    2e48:	10 82       	st	Z, r1
    2e4a:	11 82       	std	Z+1, r1	; 0x01
    2e4c:	12 82       	std	Z+2, r1	; 0x02
    2e4e:	13 82       	std	Z+3, r1	; 0x03
    2e50:	89 81       	ldd	r24, Y+1	; 0x01
    2e52:	9a 81       	ldd	r25, Y+2	; 0x02
    2e54:	8c 56       	subi	r24, 0x6C	; 108
    2e56:	9f 4f       	sbci	r25, 0xFF	; 255
    2e58:	fc 01       	movw	r30, r24
    2e5a:	10 82       	st	Z, r1
    2e5c:	11 82       	std	Z+1, r1	; 0x01
    2e5e:	12 82       	std	Z+2, r1	; 0x02
    2e60:	13 82       	std	Z+3, r1	; 0x03
    2e62:	89 81       	ldd	r24, Y+1	; 0x01
    2e64:	9a 81       	ldd	r25, Y+2	; 0x02
    2e66:	88 56       	subi	r24, 0x68	; 104
    2e68:	9f 4f       	sbci	r25, 0xFF	; 255
    2e6a:	fc 01       	movw	r30, r24
    2e6c:	10 82       	st	Z, r1
    2e6e:	11 82       	std	Z+1, r1	; 0x01
    2e70:	12 82       	std	Z+2, r1	; 0x02
    2e72:	13 82       	std	Z+3, r1	; 0x03
    2e74:	89 81       	ldd	r24, Y+1	; 0x01
    2e76:	9a 81       	ldd	r25, Y+2	; 0x02
    2e78:	84 56       	subi	r24, 0x64	; 100
    2e7a:	9f 4f       	sbci	r25, 0xFF	; 255
    2e7c:	fc 01       	movw	r30, r24
    2e7e:	10 82       	st	Z, r1
    2e80:	11 82       	std	Z+1, r1	; 0x01
    2e82:	12 82       	std	Z+2, r1	; 0x02
    2e84:	13 82       	std	Z+3, r1	; 0x03
    2e86:	89 81       	ldd	r24, Y+1	; 0x01
    2e88:	9a 81       	ldd	r25, Y+2	; 0x02
    2e8a:	80 56       	subi	r24, 0x60	; 96
    2e8c:	9f 4f       	sbci	r25, 0xFF	; 255
    2e8e:	fc 01       	movw	r30, r24
    2e90:	10 82       	st	Z, r1
    2e92:	11 82       	std	Z+1, r1	; 0x01
    2e94:	12 82       	std	Z+2, r1	; 0x02
    2e96:	13 82       	std	Z+3, r1	; 0x03
    2e98:	89 81       	ldd	r24, Y+1	; 0x01
    2e9a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e9c:	8c 55       	subi	r24, 0x5C	; 92
    2e9e:	9f 4f       	sbci	r25, 0xFF	; 255
    2ea0:	fc 01       	movw	r30, r24
    2ea2:	10 82       	st	Z, r1
    2ea4:	11 82       	std	Z+1, r1	; 0x01
    2ea6:	12 82       	std	Z+2, r1	; 0x02
    2ea8:	13 82       	std	Z+3, r1	; 0x03
    2eaa:	89 81       	ldd	r24, Y+1	; 0x01
    2eac:	9a 81       	ldd	r25, Y+2	; 0x02
    2eae:	88 55       	subi	r24, 0x58	; 88
    2eb0:	9f 4f       	sbci	r25, 0xFF	; 255
    2eb2:	fc 01       	movw	r30, r24
    2eb4:	10 82       	st	Z, r1
    2eb6:	11 82       	std	Z+1, r1	; 0x01
    2eb8:	12 82       	std	Z+2, r1	; 0x02
    2eba:	13 82       	std	Z+3, r1	; 0x03
    2ebc:	89 81       	ldd	r24, Y+1	; 0x01
    2ebe:	9a 81       	ldd	r25, Y+2	; 0x02
    2ec0:	84 55       	subi	r24, 0x54	; 84
    2ec2:	9f 4f       	sbci	r25, 0xFF	; 255
    2ec4:	fc 01       	movw	r30, r24
    2ec6:	10 82       	st	Z, r1
    2ec8:	11 82       	std	Z+1, r1	; 0x01
    2eca:	12 82       	std	Z+2, r1	; 0x02
    2ecc:	13 82       	std	Z+3, r1	; 0x03
    2ece:	89 81       	ldd	r24, Y+1	; 0x01
    2ed0:	9a 81       	ldd	r25, Y+2	; 0x02
    2ed2:	80 55       	subi	r24, 0x50	; 80
    2ed4:	9f 4f       	sbci	r25, 0xFF	; 255
    2ed6:	fc 01       	movw	r30, r24
    2ed8:	10 82       	st	Z, r1
    2eda:	11 82       	std	Z+1, r1	; 0x01
    2edc:	12 82       	std	Z+2, r1	; 0x02
    2ede:	13 82       	std	Z+3, r1	; 0x03
    2ee0:	89 81       	ldd	r24, Y+1	; 0x01
    2ee2:	9a 81       	ldd	r25, Y+2	; 0x02
    2ee4:	8c 54       	subi	r24, 0x4C	; 76
    2ee6:	9f 4f       	sbci	r25, 0xFF	; 255
    2ee8:	fc 01       	movw	r30, r24
    2eea:	10 82       	st	Z, r1
    2eec:	11 82       	std	Z+1, r1	; 0x01
    2eee:	12 82       	std	Z+2, r1	; 0x02
    2ef0:	13 82       	std	Z+3, r1	; 0x03
    2ef2:	89 81       	ldd	r24, Y+1	; 0x01
    2ef4:	9a 81       	ldd	r25, Y+2	; 0x02
    2ef6:	88 54       	subi	r24, 0x48	; 72
    2ef8:	9f 4f       	sbci	r25, 0xFF	; 255
    2efa:	fc 01       	movw	r30, r24
    2efc:	10 82       	st	Z, r1
    2efe:	11 82       	std	Z+1, r1	; 0x01
    2f00:	12 82       	std	Z+2, r1	; 0x02
    2f02:	13 82       	std	Z+3, r1	; 0x03
    2f04:	89 81       	ldd	r24, Y+1	; 0x01
    2f06:	9a 81       	ldd	r25, Y+2	; 0x02
    2f08:	84 54       	subi	r24, 0x44	; 68
    2f0a:	9f 4f       	sbci	r25, 0xFF	; 255
    2f0c:	fc 01       	movw	r30, r24
    2f0e:	10 82       	st	Z, r1
    2f10:	11 82       	std	Z+1, r1	; 0x01
    2f12:	12 82       	std	Z+2, r1	; 0x02
    2f14:	13 82       	std	Z+3, r1	; 0x03
    2f16:	89 81       	ldd	r24, Y+1	; 0x01
    2f18:	9a 81       	ldd	r25, Y+2	; 0x02
    2f1a:	80 54       	subi	r24, 0x40	; 64
    2f1c:	9f 4f       	sbci	r25, 0xFF	; 255
    2f1e:	fc 01       	movw	r30, r24
    2f20:	10 82       	st	Z, r1
    2f22:	11 82       	std	Z+1, r1	; 0x01
    2f24:	12 82       	std	Z+2, r1	; 0x02
    2f26:	13 82       	std	Z+3, r1	; 0x03
    2f28:	89 81       	ldd	r24, Y+1	; 0x01
    2f2a:	9a 81       	ldd	r25, Y+2	; 0x02
    2f2c:	8c 53       	subi	r24, 0x3C	; 60
    2f2e:	9f 4f       	sbci	r25, 0xFF	; 255
    2f30:	fc 01       	movw	r30, r24
    2f32:	10 82       	st	Z, r1
    2f34:	11 82       	std	Z+1, r1	; 0x01
    2f36:	12 82       	std	Z+2, r1	; 0x02
    2f38:	13 82       	std	Z+3, r1	; 0x03
			{
				EcefToLocalNEDRotationMatrix[0][0] = 0;
    2f3a:	89 81       	ldd	r24, Y+1	; 0x01
    2f3c:	9a 81       	ldd	r25, Y+2	; 0x02
    2f3e:	88 53       	subi	r24, 0x38	; 56
    2f40:	9f 4f       	sbci	r25, 0xFF	; 255
    2f42:	fc 01       	movw	r30, r24
    2f44:	10 82       	st	Z, r1
    2f46:	11 82       	std	Z+1, r1	; 0x01
    2f48:	12 82       	std	Z+2, r1	; 0x02
    2f4a:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[0][1] = 0;
    2f4c:	89 81       	ldd	r24, Y+1	; 0x01
    2f4e:	9a 81       	ldd	r25, Y+2	; 0x02
    2f50:	84 53       	subi	r24, 0x34	; 52
    2f52:	9f 4f       	sbci	r25, 0xFF	; 255
    2f54:	fc 01       	movw	r30, r24
    2f56:	10 82       	st	Z, r1
    2f58:	11 82       	std	Z+1, r1	; 0x01
    2f5a:	12 82       	std	Z+2, r1	; 0x02
    2f5c:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[0][2] = 0;
    2f5e:	89 81       	ldd	r24, Y+1	; 0x01
    2f60:	9a 81       	ldd	r25, Y+2	; 0x02
    2f62:	80 53       	subi	r24, 0x30	; 48
    2f64:	9f 4f       	sbci	r25, 0xFF	; 255
    2f66:	fc 01       	movw	r30, r24
    2f68:	10 82       	st	Z, r1
    2f6a:	11 82       	std	Z+1, r1	; 0x01
    2f6c:	12 82       	std	Z+2, r1	; 0x02
    2f6e:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][0] = 0;
    2f70:	89 81       	ldd	r24, Y+1	; 0x01
    2f72:	9a 81       	ldd	r25, Y+2	; 0x02
    2f74:	8c 52       	subi	r24, 0x2C	; 44
    2f76:	9f 4f       	sbci	r25, 0xFF	; 255
    2f78:	fc 01       	movw	r30, r24
    2f7a:	10 82       	st	Z, r1
    2f7c:	11 82       	std	Z+1, r1	; 0x01
    2f7e:	12 82       	std	Z+2, r1	; 0x02
    2f80:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][1] = 0;
    2f82:	89 81       	ldd	r24, Y+1	; 0x01
    2f84:	9a 81       	ldd	r25, Y+2	; 0x02
    2f86:	88 52       	subi	r24, 0x28	; 40
    2f88:	9f 4f       	sbci	r25, 0xFF	; 255
    2f8a:	fc 01       	movw	r30, r24
    2f8c:	10 82       	st	Z, r1
    2f8e:	11 82       	std	Z+1, r1	; 0x01
    2f90:	12 82       	std	Z+2, r1	; 0x02
    2f92:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][2] = 0;
    2f94:	89 81       	ldd	r24, Y+1	; 0x01
    2f96:	9a 81       	ldd	r25, Y+2	; 0x02
    2f98:	84 52       	subi	r24, 0x24	; 36
    2f9a:	9f 4f       	sbci	r25, 0xFF	; 255
    2f9c:	fc 01       	movw	r30, r24
    2f9e:	10 82       	st	Z, r1
    2fa0:	11 82       	std	Z+1, r1	; 0x01
    2fa2:	12 82       	std	Z+2, r1	; 0x02
    2fa4:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][0] = 0;
    2fa6:	89 81       	ldd	r24, Y+1	; 0x01
    2fa8:	9a 81       	ldd	r25, Y+2	; 0x02
    2faa:	80 52       	subi	r24, 0x20	; 32
    2fac:	9f 4f       	sbci	r25, 0xFF	; 255
    2fae:	fc 01       	movw	r30, r24
    2fb0:	10 82       	st	Z, r1
    2fb2:	11 82       	std	Z+1, r1	; 0x01
    2fb4:	12 82       	std	Z+2, r1	; 0x02
    2fb6:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][1] = 0;
    2fb8:	89 81       	ldd	r24, Y+1	; 0x01
    2fba:	9a 81       	ldd	r25, Y+2	; 0x02
    2fbc:	8c 51       	subi	r24, 0x1C	; 28
    2fbe:	9f 4f       	sbci	r25, 0xFF	; 255
    2fc0:	fc 01       	movw	r30, r24
    2fc2:	10 82       	st	Z, r1
    2fc4:	11 82       	std	Z+1, r1	; 0x01
    2fc6:	12 82       	std	Z+2, r1	; 0x02
    2fc8:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][2] = 0;								
    2fca:	89 81       	ldd	r24, Y+1	; 0x01
    2fcc:	9a 81       	ldd	r25, Y+2	; 0x02
    2fce:	88 51       	subi	r24, 0x18	; 24
    2fd0:	9f 4f       	sbci	r25, 0xFF	; 255
    2fd2:	fc 01       	movw	r30, r24
    2fd4:	10 82       	st	Z, r1
    2fd6:	11 82       	std	Z+1, r1	; 0x01
    2fd8:	12 82       	std	Z+2, r1	; 0x02
    2fda:	13 82       	std	Z+3, r1	; 0x03
			}
    2fdc:	0f 90       	pop	r0
    2fde:	0f 90       	pop	r0
    2fe0:	df 91       	pop	r29
    2fe2:	cf 91       	pop	r28
    2fe4:	08 95       	ret

00002fe6 <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf>:
			void MagYawDegrees(float val) { magYawDegrees = val; }	
				
				
				
			float ReferenceMagYawDegrees() const {return referenceMagYawDegrees;}
			void ReferenceMagYawDegrees(float val) { referenceMagYawDegrees = val;}
    2fe6:	cf 93       	push	r28
    2fe8:	df 93       	push	r29
    2fea:	00 d0       	rcall	.+0      	; 0x2fec <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf+0x6>
    2fec:	00 d0       	rcall	.+0      	; 0x2fee <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf+0x8>
    2fee:	cd b7       	in	r28, 0x3d	; 61
    2ff0:	de b7       	in	r29, 0x3e	; 62
    2ff2:	9a 83       	std	Y+2, r25	; 0x02
    2ff4:	89 83       	std	Y+1, r24	; 0x01
    2ff6:	4b 83       	std	Y+3, r20	; 0x03
    2ff8:	5c 83       	std	Y+4, r21	; 0x04
    2ffa:	6d 83       	std	Y+5, r22	; 0x05
    2ffc:	7e 83       	std	Y+6, r23	; 0x06
    2ffe:	29 81       	ldd	r18, Y+1	; 0x01
    3000:	3a 81       	ldd	r19, Y+2	; 0x02
    3002:	8b 81       	ldd	r24, Y+3	; 0x03
    3004:	9c 81       	ldd	r25, Y+4	; 0x04
    3006:	ad 81       	ldd	r26, Y+5	; 0x05
    3008:	be 81       	ldd	r27, Y+6	; 0x06
    300a:	f9 01       	movw	r30, r18
    300c:	84 83       	std	Z+4, r24	; 0x04
    300e:	95 83       	std	Z+5, r25	; 0x05
    3010:	a6 83       	std	Z+6, r26	; 0x06
    3012:	b7 83       	std	Z+7, r27	; 0x07
    3014:	26 96       	adiw	r28, 0x06	; 6
    3016:	0f b6       	in	r0, 0x3f	; 63
    3018:	f8 94       	cli
    301a:	de bf       	out	0x3e, r29	; 62
    301c:	0f be       	out	0x3f, r0	; 63
    301e:	cd bf       	out	0x3d, r28	; 61
    3020:	df 91       	pop	r29
    3022:	cf 91       	pop	r28
    3024:	08 95       	ret

00003026 <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf>:
				
			float YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
			void YawVelocityDegreesPerSecond(float val) { yawVelocityDegreesPerSecond = val;}
				
			float ReferenceYawVelocityDegreesPerSecond() const {return referenceYawVelocityDegreesPerSecond;}
			void ReferenceYawVelocityDegreesPerSecond(float val) { referenceYawVelocityDegreesPerSecond = val;}
    3026:	cf 93       	push	r28
    3028:	df 93       	push	r29
    302a:	00 d0       	rcall	.+0      	; 0x302c <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf+0x6>
    302c:	00 d0       	rcall	.+0      	; 0x302e <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf+0x8>
    302e:	cd b7       	in	r28, 0x3d	; 61
    3030:	de b7       	in	r29, 0x3e	; 62
    3032:	9a 83       	std	Y+2, r25	; 0x02
    3034:	89 83       	std	Y+1, r24	; 0x01
    3036:	4b 83       	std	Y+3, r20	; 0x03
    3038:	5c 83       	std	Y+4, r21	; 0x04
    303a:	6d 83       	std	Y+5, r22	; 0x05
    303c:	7e 83       	std	Y+6, r23	; 0x06
    303e:	29 81       	ldd	r18, Y+1	; 0x01
    3040:	3a 81       	ldd	r19, Y+2	; 0x02
    3042:	8b 81       	ldd	r24, Y+3	; 0x03
    3044:	9c 81       	ldd	r25, Y+4	; 0x04
    3046:	ad 81       	ldd	r26, Y+5	; 0x05
    3048:	be 81       	ldd	r27, Y+6	; 0x06
    304a:	f9 01       	movw	r30, r18
    304c:	84 8b       	std	Z+20, r24	; 0x14
    304e:	95 8b       	std	Z+21, r25	; 0x15
    3050:	a6 8b       	std	Z+22, r26	; 0x16
    3052:	b7 8b       	std	Z+23, r27	; 0x17
    3054:	26 96       	adiw	r28, 0x06	; 6
    3056:	0f b6       	in	r0, 0x3f	; 63
    3058:	f8 94       	cli
    305a:	de bf       	out	0x3e, r29	; 62
    305c:	0f be       	out	0x3f, r0	; 63
    305e:	cd bf       	out	0x3d, r28	; 61
    3060:	df 91       	pop	r29
    3062:	cf 91       	pop	r28
    3064:	08 95       	ret

00003066 <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf>:
		
			float XNEDBodyFrame() const {return xNEDBodyFrame;}
			void XNEDBodyFrame(float val) { xNEDBodyFrame = val;}
						
			float ReferenceXNEDBodyFrame() const {return referenceXNEDBodyFrame;}
			void ReferenceXNEDBodyFrame(float val) { referenceXNEDBodyFrame = val;}
    3066:	cf 93       	push	r28
    3068:	df 93       	push	r29
    306a:	00 d0       	rcall	.+0      	; 0x306c <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf+0x6>
    306c:	00 d0       	rcall	.+0      	; 0x306e <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf+0x8>
    306e:	cd b7       	in	r28, 0x3d	; 61
    3070:	de b7       	in	r29, 0x3e	; 62
    3072:	9a 83       	std	Y+2, r25	; 0x02
    3074:	89 83       	std	Y+1, r24	; 0x01
    3076:	4b 83       	std	Y+3, r20	; 0x03
    3078:	5c 83       	std	Y+4, r21	; 0x04
    307a:	6d 83       	std	Y+5, r22	; 0x05
    307c:	7e 83       	std	Y+6, r23	; 0x06
    307e:	29 81       	ldd	r18, Y+1	; 0x01
    3080:	3a 81       	ldd	r19, Y+2	; 0x02
    3082:	8b 81       	ldd	r24, Y+3	; 0x03
    3084:	9c 81       	ldd	r25, Y+4	; 0x04
    3086:	ad 81       	ldd	r26, Y+5	; 0x05
    3088:	be 81       	ldd	r27, Y+6	; 0x06
    308a:	f9 01       	movw	r30, r18
    308c:	80 a7       	std	Z+40, r24	; 0x28
    308e:	91 a7       	std	Z+41, r25	; 0x29
    3090:	a2 a7       	std	Z+42, r26	; 0x2a
    3092:	b3 a7       	std	Z+43, r27	; 0x2b
    3094:	26 96       	adiw	r28, 0x06	; 6
    3096:	0f b6       	in	r0, 0x3f	; 63
    3098:	f8 94       	cli
    309a:	de bf       	out	0x3e, r29	; 62
    309c:	0f be       	out	0x3f, r0	; 63
    309e:	cd bf       	out	0x3d, r28	; 61
    30a0:	df 91       	pop	r29
    30a2:	cf 91       	pop	r28
    30a4:	08 95       	ret

000030a6 <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf>:
				
			float XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
			void XVelocityMetersPerSecond(float val) { xVelocityMetersPerSecond = val;}
				
			float ReferenceXVelocityMetersPerSecond() const {return referenceXVelocityMetersPerSecond;}
			void ReferenceXVelocityMetersPerSecond(float val) { referenceXVelocityMetersPerSecond = val;}
    30a6:	cf 93       	push	r28
    30a8:	df 93       	push	r29
    30aa:	00 d0       	rcall	.+0      	; 0x30ac <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf+0x6>
    30ac:	00 d0       	rcall	.+0      	; 0x30ae <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf+0x8>
    30ae:	cd b7       	in	r28, 0x3d	; 61
    30b0:	de b7       	in	r29, 0x3e	; 62
    30b2:	9a 83       	std	Y+2, r25	; 0x02
    30b4:	89 83       	std	Y+1, r24	; 0x01
    30b6:	4b 83       	std	Y+3, r20	; 0x03
    30b8:	5c 83       	std	Y+4, r21	; 0x04
    30ba:	6d 83       	std	Y+5, r22	; 0x05
    30bc:	7e 83       	std	Y+6, r23	; 0x06
    30be:	29 81       	ldd	r18, Y+1	; 0x01
    30c0:	3a 81       	ldd	r19, Y+2	; 0x02
    30c2:	8b 81       	ldd	r24, Y+3	; 0x03
    30c4:	9c 81       	ldd	r25, Y+4	; 0x04
    30c6:	ad 81       	ldd	r26, Y+5	; 0x05
    30c8:	be 81       	ldd	r27, Y+6	; 0x06
    30ca:	f9 01       	movw	r30, r18
    30cc:	80 af       	std	Z+56, r24	; 0x38
    30ce:	91 af       	std	Z+57, r25	; 0x39
    30d0:	a2 af       	std	Z+58, r26	; 0x3a
    30d2:	b3 af       	std	Z+59, r27	; 0x3b
    30d4:	26 96       	adiw	r28, 0x06	; 6
    30d6:	0f b6       	in	r0, 0x3f	; 63
    30d8:	f8 94       	cli
    30da:	de bf       	out	0x3e, r29	; 62
    30dc:	0f be       	out	0x3f, r0	; 63
    30de:	cd bf       	out	0x3d, r28	; 61
    30e0:	df 91       	pop	r29
    30e2:	cf 91       	pop	r28
    30e4:	08 95       	ret

000030e6 <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf>:

			float YNEDBodyFrame() const {return yNEDBodyFrame;}
			void YNEDBodyFrame(float val) { yNEDBodyFrame = val;}

			float ReferenceYNEDBodyFrame() const {return referenceYNEDBodyFrame;}
			void ReferenceYNEDBodyFrame(float val) { referenceYNEDBodyFrame = val;}
    30e6:	cf 93       	push	r28
    30e8:	df 93       	push	r29
    30ea:	00 d0       	rcall	.+0      	; 0x30ec <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf+0x6>
    30ec:	00 d0       	rcall	.+0      	; 0x30ee <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf+0x8>
    30ee:	cd b7       	in	r28, 0x3d	; 61
    30f0:	de b7       	in	r29, 0x3e	; 62
    30f2:	9a 83       	std	Y+2, r25	; 0x02
    30f4:	89 83       	std	Y+1, r24	; 0x01
    30f6:	4b 83       	std	Y+3, r20	; 0x03
    30f8:	5c 83       	std	Y+4, r21	; 0x04
    30fa:	6d 83       	std	Y+5, r22	; 0x05
    30fc:	7e 83       	std	Y+6, r23	; 0x06
    30fe:	89 81       	ldd	r24, Y+1	; 0x01
    3100:	9a 81       	ldd	r25, Y+2	; 0x02
    3102:	9c 01       	movw	r18, r24
    3104:	2c 5a       	subi	r18, 0xAC	; 172
    3106:	3f 4f       	sbci	r19, 0xFF	; 255
    3108:	8b 81       	ldd	r24, Y+3	; 0x03
    310a:	9c 81       	ldd	r25, Y+4	; 0x04
    310c:	ad 81       	ldd	r26, Y+5	; 0x05
    310e:	be 81       	ldd	r27, Y+6	; 0x06
    3110:	f9 01       	movw	r30, r18
    3112:	80 83       	st	Z, r24
    3114:	91 83       	std	Z+1, r25	; 0x01
    3116:	a2 83       	std	Z+2, r26	; 0x02
    3118:	b3 83       	std	Z+3, r27	; 0x03
    311a:	26 96       	adiw	r28, 0x06	; 6
    311c:	0f b6       	in	r0, 0x3f	; 63
    311e:	f8 94       	cli
    3120:	de bf       	out	0x3e, r29	; 62
    3122:	0f be       	out	0x3f, r0	; 63
    3124:	cd bf       	out	0x3d, r28	; 61
    3126:	df 91       	pop	r29
    3128:	cf 91       	pop	r28
    312a:	08 95       	ret

0000312c <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf>:

			float YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
			void YVelocityMetersPerSecond(float val) { yVelocityMetersPerSecond = val;}

			float ReferenceYVelocityMetersPerSecond() const {return referenceYVelocityMetersPerSecond;}
			void ReferenceYVelocityMetersPerSecond(float val) { referenceYVelocityMetersPerSecond = val;}
    312c:	cf 93       	push	r28
    312e:	df 93       	push	r29
    3130:	00 d0       	rcall	.+0      	; 0x3132 <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf+0x6>
    3132:	00 d0       	rcall	.+0      	; 0x3134 <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf+0x8>
    3134:	cd b7       	in	r28, 0x3d	; 61
    3136:	de b7       	in	r29, 0x3e	; 62
    3138:	9a 83       	std	Y+2, r25	; 0x02
    313a:	89 83       	std	Y+1, r24	; 0x01
    313c:	4b 83       	std	Y+3, r20	; 0x03
    313e:	5c 83       	std	Y+4, r21	; 0x04
    3140:	6d 83       	std	Y+5, r22	; 0x05
    3142:	7e 83       	std	Y+6, r23	; 0x06
    3144:	89 81       	ldd	r24, Y+1	; 0x01
    3146:	9a 81       	ldd	r25, Y+2	; 0x02
    3148:	9c 01       	movw	r18, r24
    314a:	2c 59       	subi	r18, 0x9C	; 156
    314c:	3f 4f       	sbci	r19, 0xFF	; 255
    314e:	8b 81       	ldd	r24, Y+3	; 0x03
    3150:	9c 81       	ldd	r25, Y+4	; 0x04
    3152:	ad 81       	ldd	r26, Y+5	; 0x05
    3154:	be 81       	ldd	r27, Y+6	; 0x06
    3156:	f9 01       	movw	r30, r18
    3158:	80 83       	st	Z, r24
    315a:	91 83       	std	Z+1, r25	; 0x01
    315c:	a2 83       	std	Z+2, r26	; 0x02
    315e:	b3 83       	std	Z+3, r27	; 0x03
    3160:	26 96       	adiw	r28, 0x06	; 6
    3162:	0f b6       	in	r0, 0x3f	; 63
    3164:	f8 94       	cli
    3166:	de bf       	out	0x3e, r29	; 62
    3168:	0f be       	out	0x3f, r0	; 63
    316a:	cd bf       	out	0x3d, r28	; 61
    316c:	df 91       	pop	r29
    316e:	cf 91       	pop	r28
    3170:	08 95       	ret

00003172 <_ZN10helicopter5model11SystemModel21ReferenceAltitudeFeetEf>:
			float ZNEDBodyFrame() const { return zNEDBodyFrame; }
			void ZNEDBodyFrame(float val) { zNEDBodyFrame = val; }


			float ReferenceAltitudeFeet() const {return referenceAltitudeFeet;}
			void ReferenceAltitudeFeet(float val) { referenceAltitudeFeet = val;}
    3172:	cf 93       	push	r28
    3174:	df 93       	push	r29
    3176:	00 d0       	rcall	.+0      	; 0x3178 <_ZN10helicopter5model11SystemModel21ReferenceAltitudeFeetEf+0x6>
    3178:	00 d0       	rcall	.+0      	; 0x317a <_ZN10helicopter5model11SystemModel21ReferenceAltitudeFeetEf+0x8>
    317a:	cd b7       	in	r28, 0x3d	; 61
    317c:	de b7       	in	r29, 0x3e	; 62
    317e:	9a 83       	std	Y+2, r25	; 0x02
    3180:	89 83       	std	Y+1, r24	; 0x01
    3182:	4b 83       	std	Y+3, r20	; 0x03
    3184:	5c 83       	std	Y+4, r21	; 0x04
    3186:	6d 83       	std	Y+5, r22	; 0x05
    3188:	7e 83       	std	Y+6, r23	; 0x06
    318a:	89 81       	ldd	r24, Y+1	; 0x01
    318c:	9a 81       	ldd	r25, Y+2	; 0x02
    318e:	9c 01       	movw	r18, r24
    3190:	2c 57       	subi	r18, 0x7C	; 124
    3192:	3f 4f       	sbci	r19, 0xFF	; 255
    3194:	8b 81       	ldd	r24, Y+3	; 0x03
    3196:	9c 81       	ldd	r25, Y+4	; 0x04
    3198:	ad 81       	ldd	r26, Y+5	; 0x05
    319a:	be 81       	ldd	r27, Y+6	; 0x06
    319c:	f9 01       	movw	r30, r18
    319e:	80 83       	st	Z, r24
    31a0:	91 83       	std	Z+1, r25	; 0x01
    31a2:	a2 83       	std	Z+2, r26	; 0x02
    31a4:	b3 83       	std	Z+3, r27	; 0x03
    31a6:	26 96       	adiw	r28, 0x06	; 6
    31a8:	0f b6       	in	r0, 0x3f	; 63
    31aa:	f8 94       	cli
    31ac:	de bf       	out	0x3e, r29	; 62
    31ae:	0f be       	out	0x3f, r0	; 63
    31b0:	cd bf       	out	0x3d, r28	; 61
    31b2:	df 91       	pop	r29
    31b4:	cf 91       	pop	r28
    31b6:	08 95       	ret

000031b8 <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf>:

			float ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
			void ZVelocityFeetPerSecond(float val) { zVelocityFeetPerSecond = val;}

			float ReferenceZVelocityFeetPerSecond() const {return referenceZVelocityFeetPerSecond;}
			void ReferenceZVelocityFeetPerSecond(float val) { referenceZVelocityFeetPerSecond = val;}
    31b8:	cf 93       	push	r28
    31ba:	df 93       	push	r29
    31bc:	00 d0       	rcall	.+0      	; 0x31be <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf+0x6>
    31be:	00 d0       	rcall	.+0      	; 0x31c0 <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf+0x8>
    31c0:	cd b7       	in	r28, 0x3d	; 61
    31c2:	de b7       	in	r29, 0x3e	; 62
    31c4:	9a 83       	std	Y+2, r25	; 0x02
    31c6:	89 83       	std	Y+1, r24	; 0x01
    31c8:	4b 83       	std	Y+3, r20	; 0x03
    31ca:	5c 83       	std	Y+4, r21	; 0x04
    31cc:	6d 83       	std	Y+5, r22	; 0x05
    31ce:	7e 83       	std	Y+6, r23	; 0x06
    31d0:	89 81       	ldd	r24, Y+1	; 0x01
    31d2:	9a 81       	ldd	r25, Y+2	; 0x02
    31d4:	9c 01       	movw	r18, r24
    31d6:	2c 56       	subi	r18, 0x6C	; 108
    31d8:	3f 4f       	sbci	r19, 0xFF	; 255
    31da:	8b 81       	ldd	r24, Y+3	; 0x03
    31dc:	9c 81       	ldd	r25, Y+4	; 0x04
    31de:	ad 81       	ldd	r26, Y+5	; 0x05
    31e0:	be 81       	ldd	r27, Y+6	; 0x06
    31e2:	f9 01       	movw	r30, r18
    31e4:	80 83       	st	Z, r24
    31e6:	91 83       	std	Z+1, r25	; 0x01
    31e8:	a2 83       	std	Z+2, r26	; 0x02
    31ea:	b3 83       	std	Z+3, r27	; 0x03
    31ec:	26 96       	adiw	r28, 0x06	; 6
    31ee:	0f b6       	in	r0, 0x3f	; 63
    31f0:	f8 94       	cli
    31f2:	de bf       	out	0x3e, r29	; 62
    31f4:	0f be       	out	0x3f, r0	; 63
    31f6:	cd bf       	out	0x3d, r28	; 61
    31f8:	df 91       	pop	r29
    31fa:	cf 91       	pop	r28
    31fc:	08 95       	ret

000031fe <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>:

			float ZDerivativeError() const {return zDerivativeError;}
			void ZDerivativeError(float val) { zDerivativeError = val;}						
						
						
			float LatitudeDegrees() const {return latitudeDegrees;}
    31fe:	cf 93       	push	r28
    3200:	df 93       	push	r29
    3202:	1f 92       	push	r1
    3204:	1f 92       	push	r1
    3206:	cd b7       	in	r28, 0x3d	; 61
    3208:	de b7       	in	r29, 0x3e	; 62
    320a:	9a 83       	std	Y+2, r25	; 0x02
    320c:	89 83       	std	Y+1, r24	; 0x01
    320e:	89 81       	ldd	r24, Y+1	; 0x01
    3210:	9a 81       	ldd	r25, Y+2	; 0x02
    3212:	8c 55       	subi	r24, 0x5C	; 92
    3214:	9f 4f       	sbci	r25, 0xFF	; 255
    3216:	fc 01       	movw	r30, r24
    3218:	80 81       	ld	r24, Z
    321a:	91 81       	ldd	r25, Z+1	; 0x01
    321c:	a2 81       	ldd	r26, Z+2	; 0x02
    321e:	b3 81       	ldd	r27, Z+3	; 0x03
    3220:	bc 01       	movw	r22, r24
    3222:	cd 01       	movw	r24, r26
    3224:	0f 90       	pop	r0
    3226:	0f 90       	pop	r0
    3228:	df 91       	pop	r29
    322a:	cf 91       	pop	r28
    322c:	08 95       	ret

0000322e <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>:
			void LatitudeDegrees(float val) { latitudeDegrees = val;}						

			float LongitudeDegrees() const {return longitudeDegrees;}
    322e:	cf 93       	push	r28
    3230:	df 93       	push	r29
    3232:	1f 92       	push	r1
    3234:	1f 92       	push	r1
    3236:	cd b7       	in	r28, 0x3d	; 61
    3238:	de b7       	in	r29, 0x3e	; 62
    323a:	9a 83       	std	Y+2, r25	; 0x02
    323c:	89 83       	std	Y+1, r24	; 0x01
    323e:	89 81       	ldd	r24, Y+1	; 0x01
    3240:	9a 81       	ldd	r25, Y+2	; 0x02
    3242:	88 55       	subi	r24, 0x58	; 88
    3244:	9f 4f       	sbci	r25, 0xFF	; 255
    3246:	fc 01       	movw	r30, r24
    3248:	80 81       	ld	r24, Z
    324a:	91 81       	ldd	r25, Z+1	; 0x01
    324c:	a2 81       	ldd	r26, Z+2	; 0x02
    324e:	b3 81       	ldd	r27, Z+3	; 0x03
    3250:	bc 01       	movw	r22, r24
    3252:	cd 01       	movw	r24, r26
    3254:	0f 90       	pop	r0
    3256:	0f 90       	pop	r0
    3258:	df 91       	pop	r29
    325a:	cf 91       	pop	r28
    325c:	08 95       	ret

0000325e <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl>:
			
			long  BlownFrames() const {return numOfFramesBlown;}
			void BlownFrames( long val ) { numOfFramesBlown = val;}

			long  InitialXPositionEcef() const {return initialXPositionEcef;}
			void InitialXPositionEcef( long val ) { initialXPositionEcef = val;}			
    325e:	cf 93       	push	r28
    3260:	df 93       	push	r29
    3262:	00 d0       	rcall	.+0      	; 0x3264 <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl+0x6>
    3264:	00 d0       	rcall	.+0      	; 0x3266 <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl+0x8>
    3266:	cd b7       	in	r28, 0x3d	; 61
    3268:	de b7       	in	r29, 0x3e	; 62
    326a:	9a 83       	std	Y+2, r25	; 0x02
    326c:	89 83       	std	Y+1, r24	; 0x01
    326e:	4b 83       	std	Y+3, r20	; 0x03
    3270:	5c 83       	std	Y+4, r21	; 0x04
    3272:	6d 83       	std	Y+5, r22	; 0x05
    3274:	7e 83       	std	Y+6, r23	; 0x06
    3276:	6b 81       	ldd	r22, Y+3	; 0x03
    3278:	7c 81       	ldd	r23, Y+4	; 0x04
    327a:	8d 81       	ldd	r24, Y+5	; 0x05
    327c:	9e 81       	ldd	r25, Y+6	; 0x06
    327e:	0e 94 08 44 	call	0x8810	; 0x8810 <__floatsisf>
    3282:	dc 01       	movw	r26, r24
    3284:	cb 01       	movw	r24, r22
    3286:	29 81       	ldd	r18, Y+1	; 0x01
    3288:	3a 81       	ldd	r19, Y+2	; 0x02
    328a:	24 54       	subi	r18, 0x44	; 68
    328c:	3f 4f       	sbci	r19, 0xFF	; 255
    328e:	f9 01       	movw	r30, r18
    3290:	80 83       	st	Z, r24
    3292:	91 83       	std	Z+1, r25	; 0x01
    3294:	a2 83       	std	Z+2, r26	; 0x02
    3296:	b3 83       	std	Z+3, r27	; 0x03
    3298:	26 96       	adiw	r28, 0x06	; 6
    329a:	0f b6       	in	r0, 0x3f	; 63
    329c:	f8 94       	cli
    329e:	de bf       	out	0x3e, r29	; 62
    32a0:	0f be       	out	0x3f, r0	; 63
    32a2:	cd bf       	out	0x3d, r28	; 61
    32a4:	df 91       	pop	r29
    32a6:	cf 91       	pop	r28
    32a8:	08 95       	ret

000032aa <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl>:

			long  InitialYPositionEcef() const {return initialYPositionEcef;}
			void InitialYPositionEcef( long val ) { initialYPositionEcef = val;}
    32aa:	cf 93       	push	r28
    32ac:	df 93       	push	r29
    32ae:	00 d0       	rcall	.+0      	; 0x32b0 <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl+0x6>
    32b0:	00 d0       	rcall	.+0      	; 0x32b2 <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl+0x8>
    32b2:	cd b7       	in	r28, 0x3d	; 61
    32b4:	de b7       	in	r29, 0x3e	; 62
    32b6:	9a 83       	std	Y+2, r25	; 0x02
    32b8:	89 83       	std	Y+1, r24	; 0x01
    32ba:	4b 83       	std	Y+3, r20	; 0x03
    32bc:	5c 83       	std	Y+4, r21	; 0x04
    32be:	6d 83       	std	Y+5, r22	; 0x05
    32c0:	7e 83       	std	Y+6, r23	; 0x06
    32c2:	6b 81       	ldd	r22, Y+3	; 0x03
    32c4:	7c 81       	ldd	r23, Y+4	; 0x04
    32c6:	8d 81       	ldd	r24, Y+5	; 0x05
    32c8:	9e 81       	ldd	r25, Y+6	; 0x06
    32ca:	0e 94 08 44 	call	0x8810	; 0x8810 <__floatsisf>
    32ce:	dc 01       	movw	r26, r24
    32d0:	cb 01       	movw	r24, r22
    32d2:	29 81       	ldd	r18, Y+1	; 0x01
    32d4:	3a 81       	ldd	r19, Y+2	; 0x02
    32d6:	20 54       	subi	r18, 0x40	; 64
    32d8:	3f 4f       	sbci	r19, 0xFF	; 255
    32da:	f9 01       	movw	r30, r18
    32dc:	80 83       	st	Z, r24
    32de:	91 83       	std	Z+1, r25	; 0x01
    32e0:	a2 83       	std	Z+2, r26	; 0x02
    32e2:	b3 83       	std	Z+3, r27	; 0x03
    32e4:	26 96       	adiw	r28, 0x06	; 6
    32e6:	0f b6       	in	r0, 0x3f	; 63
    32e8:	f8 94       	cli
    32ea:	de bf       	out	0x3e, r29	; 62
    32ec:	0f be       	out	0x3f, r0	; 63
    32ee:	cd bf       	out	0x3d, r28	; 61
    32f0:	df 91       	pop	r29
    32f2:	cf 91       	pop	r28
    32f4:	08 95       	ret

000032f6 <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl>:

			long  InitialZPositionEcef() const {return initialZPositionEcef;}
			void InitialZPositionEcef( long val ) { initialZPositionEcef = val;}							
    32f6:	cf 93       	push	r28
    32f8:	df 93       	push	r29
    32fa:	00 d0       	rcall	.+0      	; 0x32fc <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl+0x6>
    32fc:	00 d0       	rcall	.+0      	; 0x32fe <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl+0x8>
    32fe:	cd b7       	in	r28, 0x3d	; 61
    3300:	de b7       	in	r29, 0x3e	; 62
    3302:	9a 83       	std	Y+2, r25	; 0x02
    3304:	89 83       	std	Y+1, r24	; 0x01
    3306:	4b 83       	std	Y+3, r20	; 0x03
    3308:	5c 83       	std	Y+4, r21	; 0x04
    330a:	6d 83       	std	Y+5, r22	; 0x05
    330c:	7e 83       	std	Y+6, r23	; 0x06
    330e:	6b 81       	ldd	r22, Y+3	; 0x03
    3310:	7c 81       	ldd	r23, Y+4	; 0x04
    3312:	8d 81       	ldd	r24, Y+5	; 0x05
    3314:	9e 81       	ldd	r25, Y+6	; 0x06
    3316:	0e 94 08 44 	call	0x8810	; 0x8810 <__floatsisf>
    331a:	dc 01       	movw	r26, r24
    331c:	cb 01       	movw	r24, r22
    331e:	29 81       	ldd	r18, Y+1	; 0x01
    3320:	3a 81       	ldd	r19, Y+2	; 0x02
    3322:	2c 53       	subi	r18, 0x3C	; 60
    3324:	3f 4f       	sbci	r19, 0xFF	; 255
    3326:	f9 01       	movw	r30, r18
    3328:	80 83       	st	Z, r24
    332a:	91 83       	std	Z+1, r25	; 0x01
    332c:	a2 83       	std	Z+2, r26	; 0x02
    332e:	b3 83       	std	Z+3, r27	; 0x03
    3330:	26 96       	adiw	r28, 0x06	; 6
    3332:	0f b6       	in	r0, 0x3f	; 63
    3334:	f8 94       	cli
    3336:	de bf       	out	0x3e, r29	; 62
    3338:	0f be       	out	0x3f, r0	; 63
    333a:	cd bf       	out	0x3d, r28	; 61
    333c:	df 91       	pop	r29
    333e:	cf 91       	pop	r28
    3340:	08 95       	ret

00003342 <_ZN10helicopter7drivers11ServoDriverC1Ev>:
				double minControlValue;
				double maxControlValue;
					
				
			public:
				ServoDriver(): 
    3342:	cf 93       	push	r28
    3344:	df 93       	push	r29
    3346:	1f 92       	push	r1
    3348:	1f 92       	push	r1
    334a:	cd b7       	in	r28, 0x3d	; 61
    334c:	de b7       	in	r29, 0x3e	; 62
    334e:	9a 83       	std	Y+2, r25	; 0x02
    3350:	89 83       	std	Y+1, r24	; 0x01
					minControlValue(0), 
					maxControlValue(0)
    3352:	89 81       	ldd	r24, Y+1	; 0x01
    3354:	9a 81       	ldd	r25, Y+2	; 0x02
    3356:	28 e1       	ldi	r18, 0x18	; 24
    3358:	32 e0       	ldi	r19, 0x02	; 2
    335a:	fc 01       	movw	r30, r24
    335c:	31 83       	std	Z+1, r19	; 0x01
    335e:	20 83       	st	Z, r18
    3360:	89 81       	ldd	r24, Y+1	; 0x01
    3362:	9a 81       	ldd	r25, Y+2	; 0x02
    3364:	fc 01       	movw	r30, r24
    3366:	12 82       	std	Z+2, r1	; 0x02
    3368:	13 82       	std	Z+3, r1	; 0x03
    336a:	14 82       	std	Z+4, r1	; 0x04
    336c:	15 82       	std	Z+5, r1	; 0x05
    336e:	89 81       	ldd	r24, Y+1	; 0x01
    3370:	9a 81       	ldd	r25, Y+2	; 0x02
    3372:	fc 01       	movw	r30, r24
    3374:	16 82       	std	Z+6, r1	; 0x06
    3376:	17 82       	std	Z+7, r1	; 0x07
    3378:	10 86       	std	Z+8, r1	; 0x08
    337a:	11 86       	std	Z+9, r1	; 0x09
				{
					
				}
    337c:	0f 90       	pop	r0
    337e:	0f 90       	pop	r0
    3380:	df 91       	pop	r29
    3382:	cf 91       	pop	r28
    3384:	08 95       	ret

00003386 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf>:
			public:
				PIDController (SystemModel *model, ServoDriver *servoDriver);
					
				~PIDController();
				
				void setXIntegralGain(float val)
    3386:	cf 93       	push	r28
    3388:	df 93       	push	r29
    338a:	00 d0       	rcall	.+0      	; 0x338c <_ZN10helicopter10controller13PIDController16setXIntegralGainEf+0x6>
    338c:	00 d0       	rcall	.+0      	; 0x338e <_ZN10helicopter10controller13PIDController16setXIntegralGainEf+0x8>
    338e:	cd b7       	in	r28, 0x3d	; 61
    3390:	de b7       	in	r29, 0x3e	; 62
    3392:	9a 83       	std	Y+2, r25	; 0x02
    3394:	89 83       	std	Y+1, r24	; 0x01
    3396:	4b 83       	std	Y+3, r20	; 0x03
    3398:	5c 83       	std	Y+4, r21	; 0x04
    339a:	6d 83       	std	Y+5, r22	; 0x05
    339c:	7e 83       	std	Y+6, r23	; 0x06
				{
					xIntegralGain = val;
    339e:	29 81       	ldd	r18, Y+1	; 0x01
    33a0:	3a 81       	ldd	r19, Y+2	; 0x02
    33a2:	8b 81       	ldd	r24, Y+3	; 0x03
    33a4:	9c 81       	ldd	r25, Y+4	; 0x04
    33a6:	ad 81       	ldd	r26, Y+5	; 0x05
    33a8:	be 81       	ldd	r27, Y+6	; 0x06
    33aa:	f9 01       	movw	r30, r18
    33ac:	84 8b       	std	Z+20, r24	; 0x14
    33ae:	95 8b       	std	Z+21, r25	; 0x15
    33b0:	a6 8b       	std	Z+22, r26	; 0x16
    33b2:	b7 8b       	std	Z+23, r27	; 0x17
				}
    33b4:	26 96       	adiw	r28, 0x06	; 6
    33b6:	0f b6       	in	r0, 0x3f	; 63
    33b8:	f8 94       	cli
    33ba:	de bf       	out	0x3e, r29	; 62
    33bc:	0f be       	out	0x3f, r0	; 63
    33be:	cd bf       	out	0x3d, r28	; 61
    33c0:	df 91       	pop	r29
    33c2:	cf 91       	pop	r28
    33c4:	08 95       	ret

000033c6 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf>:
				
				void setXDerivativeGain(float val)
    33c6:	cf 93       	push	r28
    33c8:	df 93       	push	r29
    33ca:	00 d0       	rcall	.+0      	; 0x33cc <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf+0x6>
    33cc:	00 d0       	rcall	.+0      	; 0x33ce <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf+0x8>
    33ce:	cd b7       	in	r28, 0x3d	; 61
    33d0:	de b7       	in	r29, 0x3e	; 62
    33d2:	9a 83       	std	Y+2, r25	; 0x02
    33d4:	89 83       	std	Y+1, r24	; 0x01
    33d6:	4b 83       	std	Y+3, r20	; 0x03
    33d8:	5c 83       	std	Y+4, r21	; 0x04
    33da:	6d 83       	std	Y+5, r22	; 0x05
    33dc:	7e 83       	std	Y+6, r23	; 0x06
				{
					xDerivativeGain = val;
    33de:	29 81       	ldd	r18, Y+1	; 0x01
    33e0:	3a 81       	ldd	r19, Y+2	; 0x02
    33e2:	8b 81       	ldd	r24, Y+3	; 0x03
    33e4:	9c 81       	ldd	r25, Y+4	; 0x04
    33e6:	ad 81       	ldd	r26, Y+5	; 0x05
    33e8:	be 81       	ldd	r27, Y+6	; 0x06
    33ea:	f9 01       	movw	r30, r18
    33ec:	80 8f       	std	Z+24, r24	; 0x18
    33ee:	91 8f       	std	Z+25, r25	; 0x19
    33f0:	a2 8f       	std	Z+26, r26	; 0x1a
    33f2:	b3 8f       	std	Z+27, r27	; 0x1b
				}
    33f4:	26 96       	adiw	r28, 0x06	; 6
    33f6:	0f b6       	in	r0, 0x3f	; 63
    33f8:	f8 94       	cli
    33fa:	de bf       	out	0x3e, r29	; 62
    33fc:	0f be       	out	0x3f, r0	; 63
    33fe:	cd bf       	out	0x3d, r28	; 61
    3400:	df 91       	pop	r29
    3402:	cf 91       	pop	r28
    3404:	08 95       	ret

00003406 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf>:
				
				void setXProportionalGain(float val)
    3406:	cf 93       	push	r28
    3408:	df 93       	push	r29
    340a:	00 d0       	rcall	.+0      	; 0x340c <_ZN10helicopter10controller13PIDController20setXProportionalGainEf+0x6>
    340c:	00 d0       	rcall	.+0      	; 0x340e <_ZN10helicopter10controller13PIDController20setXProportionalGainEf+0x8>
    340e:	cd b7       	in	r28, 0x3d	; 61
    3410:	de b7       	in	r29, 0x3e	; 62
    3412:	9a 83       	std	Y+2, r25	; 0x02
    3414:	89 83       	std	Y+1, r24	; 0x01
    3416:	4b 83       	std	Y+3, r20	; 0x03
    3418:	5c 83       	std	Y+4, r21	; 0x04
    341a:	6d 83       	std	Y+5, r22	; 0x05
    341c:	7e 83       	std	Y+6, r23	; 0x06
				{
					xProportionalGain = val;
    341e:	29 81       	ldd	r18, Y+1	; 0x01
    3420:	3a 81       	ldd	r19, Y+2	; 0x02
    3422:	8b 81       	ldd	r24, Y+3	; 0x03
    3424:	9c 81       	ldd	r25, Y+4	; 0x04
    3426:	ad 81       	ldd	r26, Y+5	; 0x05
    3428:	be 81       	ldd	r27, Y+6	; 0x06
    342a:	f9 01       	movw	r30, r18
    342c:	84 8f       	std	Z+28, r24	; 0x1c
    342e:	95 8f       	std	Z+29, r25	; 0x1d
    3430:	a6 8f       	std	Z+30, r26	; 0x1e
    3432:	b7 8f       	std	Z+31, r27	; 0x1f
				}
    3434:	26 96       	adiw	r28, 0x06	; 6
    3436:	0f b6       	in	r0, 0x3f	; 63
    3438:	f8 94       	cli
    343a:	de bf       	out	0x3e, r29	; 62
    343c:	0f be       	out	0x3f, r0	; 63
    343e:	cd bf       	out	0x3d, r28	; 61
    3440:	df 91       	pop	r29
    3442:	cf 91       	pop	r28
    3444:	08 95       	ret

00003446 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf>:
				
				void setXAntiWindupGain(float val)
    3446:	cf 93       	push	r28
    3448:	df 93       	push	r29
    344a:	00 d0       	rcall	.+0      	; 0x344c <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf+0x6>
    344c:	00 d0       	rcall	.+0      	; 0x344e <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf+0x8>
    344e:	cd b7       	in	r28, 0x3d	; 61
    3450:	de b7       	in	r29, 0x3e	; 62
    3452:	9a 83       	std	Y+2, r25	; 0x02
    3454:	89 83       	std	Y+1, r24	; 0x01
    3456:	4b 83       	std	Y+3, r20	; 0x03
    3458:	5c 83       	std	Y+4, r21	; 0x04
    345a:	6d 83       	std	Y+5, r22	; 0x05
    345c:	7e 83       	std	Y+6, r23	; 0x06
				{
					xAntiWindupGain = val;
    345e:	29 81       	ldd	r18, Y+1	; 0x01
    3460:	3a 81       	ldd	r19, Y+2	; 0x02
    3462:	8b 81       	ldd	r24, Y+3	; 0x03
    3464:	9c 81       	ldd	r25, Y+4	; 0x04
    3466:	ad 81       	ldd	r26, Y+5	; 0x05
    3468:	be 81       	ldd	r27, Y+6	; 0x06
    346a:	f9 01       	movw	r30, r18
    346c:	80 a3       	std	Z+32, r24	; 0x20
    346e:	91 a3       	std	Z+33, r25	; 0x21
    3470:	a2 a3       	std	Z+34, r26	; 0x22
    3472:	b3 a3       	std	Z+35, r27	; 0x23
				}
    3474:	26 96       	adiw	r28, 0x06	; 6
    3476:	0f b6       	in	r0, 0x3f	; 63
    3478:	f8 94       	cli
    347a:	de bf       	out	0x3e, r29	; 62
    347c:	0f be       	out	0x3f, r0	; 63
    347e:	cd bf       	out	0x3d, r28	; 61
    3480:	df 91       	pop	r29
    3482:	cf 91       	pop	r28
    3484:	08 95       	ret

00003486 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf>:
				
				void setLongitudeInnerLoopGain(float val)
    3486:	cf 93       	push	r28
    3488:	df 93       	push	r29
    348a:	00 d0       	rcall	.+0      	; 0x348c <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf+0x6>
    348c:	00 d0       	rcall	.+0      	; 0x348e <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf+0x8>
    348e:	cd b7       	in	r28, 0x3d	; 61
    3490:	de b7       	in	r29, 0x3e	; 62
    3492:	9a 83       	std	Y+2, r25	; 0x02
    3494:	89 83       	std	Y+1, r24	; 0x01
    3496:	4b 83       	std	Y+3, r20	; 0x03
    3498:	5c 83       	std	Y+4, r21	; 0x04
    349a:	6d 83       	std	Y+5, r22	; 0x05
    349c:	7e 83       	std	Y+6, r23	; 0x06
				{
					longitudeInnerLoopGain = val;
    349e:	29 81       	ldd	r18, Y+1	; 0x01
    34a0:	3a 81       	ldd	r19, Y+2	; 0x02
    34a2:	8b 81       	ldd	r24, Y+3	; 0x03
    34a4:	9c 81       	ldd	r25, Y+4	; 0x04
    34a6:	ad 81       	ldd	r26, Y+5	; 0x05
    34a8:	be 81       	ldd	r27, Y+6	; 0x06
    34aa:	f9 01       	movw	r30, r18
    34ac:	84 a3       	std	Z+36, r24	; 0x24
    34ae:	95 a3       	std	Z+37, r25	; 0x25
    34b0:	a6 a3       	std	Z+38, r26	; 0x26
    34b2:	b7 a3       	std	Z+39, r27	; 0x27
				}
    34b4:	26 96       	adiw	r28, 0x06	; 6
    34b6:	0f b6       	in	r0, 0x3f	; 63
    34b8:	f8 94       	cli
    34ba:	de bf       	out	0x3e, r29	; 62
    34bc:	0f be       	out	0x3f, r0	; 63
    34be:	cd bf       	out	0x3d, r28	; 61
    34c0:	df 91       	pop	r29
    34c2:	cf 91       	pop	r28
    34c4:	08 95       	ret

000034c6 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf>:
				
				void setMinLongitudeServoControlValue(float val)
    34c6:	cf 93       	push	r28
    34c8:	df 93       	push	r29
    34ca:	00 d0       	rcall	.+0      	; 0x34cc <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf+0x6>
    34cc:	00 d0       	rcall	.+0      	; 0x34ce <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf+0x8>
    34ce:	cd b7       	in	r28, 0x3d	; 61
    34d0:	de b7       	in	r29, 0x3e	; 62
    34d2:	9a 83       	std	Y+2, r25	; 0x02
    34d4:	89 83       	std	Y+1, r24	; 0x01
    34d6:	4b 83       	std	Y+3, r20	; 0x03
    34d8:	5c 83       	std	Y+4, r21	; 0x04
    34da:	6d 83       	std	Y+5, r22	; 0x05
    34dc:	7e 83       	std	Y+6, r23	; 0x06
				{
					minLongitudeServoControlValue = val;
    34de:	89 81       	ldd	r24, Y+1	; 0x01
    34e0:	9a 81       	ldd	r25, Y+2	; 0x02
    34e2:	9c 01       	movw	r18, r24
    34e4:	2c 5a       	subi	r18, 0xAC	; 172
    34e6:	3f 4f       	sbci	r19, 0xFF	; 255
    34e8:	8b 81       	ldd	r24, Y+3	; 0x03
    34ea:	9c 81       	ldd	r25, Y+4	; 0x04
    34ec:	ad 81       	ldd	r26, Y+5	; 0x05
    34ee:	be 81       	ldd	r27, Y+6	; 0x06
    34f0:	f9 01       	movw	r30, r18
    34f2:	80 83       	st	Z, r24
    34f4:	91 83       	std	Z+1, r25	; 0x01
    34f6:	a2 83       	std	Z+2, r26	; 0x02
    34f8:	b3 83       	std	Z+3, r27	; 0x03
				}
    34fa:	26 96       	adiw	r28, 0x06	; 6
    34fc:	0f b6       	in	r0, 0x3f	; 63
    34fe:	f8 94       	cli
    3500:	de bf       	out	0x3e, r29	; 62
    3502:	0f be       	out	0x3f, r0	; 63
    3504:	cd bf       	out	0x3d, r28	; 61
    3506:	df 91       	pop	r29
    3508:	cf 91       	pop	r28
    350a:	08 95       	ret

0000350c <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf>:
				
				void setMaxLongitudeServoControlValue(float val)
    350c:	cf 93       	push	r28
    350e:	df 93       	push	r29
    3510:	00 d0       	rcall	.+0      	; 0x3512 <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf+0x6>
    3512:	00 d0       	rcall	.+0      	; 0x3514 <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf+0x8>
    3514:	cd b7       	in	r28, 0x3d	; 61
    3516:	de b7       	in	r29, 0x3e	; 62
    3518:	9a 83       	std	Y+2, r25	; 0x02
    351a:	89 83       	std	Y+1, r24	; 0x01
    351c:	4b 83       	std	Y+3, r20	; 0x03
    351e:	5c 83       	std	Y+4, r21	; 0x04
    3520:	6d 83       	std	Y+5, r22	; 0x05
    3522:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxLongitudeServoControlValue = val;
    3524:	89 81       	ldd	r24, Y+1	; 0x01
    3526:	9a 81       	ldd	r25, Y+2	; 0x02
    3528:	9c 01       	movw	r18, r24
    352a:	28 5a       	subi	r18, 0xA8	; 168
    352c:	3f 4f       	sbci	r19, 0xFF	; 255
    352e:	8b 81       	ldd	r24, Y+3	; 0x03
    3530:	9c 81       	ldd	r25, Y+4	; 0x04
    3532:	ad 81       	ldd	r26, Y+5	; 0x05
    3534:	be 81       	ldd	r27, Y+6	; 0x06
    3536:	f9 01       	movw	r30, r18
    3538:	80 83       	st	Z, r24
    353a:	91 83       	std	Z+1, r25	; 0x01
    353c:	a2 83       	std	Z+2, r26	; 0x02
    353e:	b3 83       	std	Z+3, r27	; 0x03
				}
    3540:	26 96       	adiw	r28, 0x06	; 6
    3542:	0f b6       	in	r0, 0x3f	; 63
    3544:	f8 94       	cli
    3546:	de bf       	out	0x3e, r29	; 62
    3548:	0f be       	out	0x3f, r0	; 63
    354a:	cd bf       	out	0x3d, r28	; 61
    354c:	df 91       	pop	r29
    354e:	cf 91       	pop	r28
    3550:	08 95       	ret

00003552 <_ZN10helicopter10controller13PIDController16setYIntegralGainEf>:
				
				
				
				
				
				void setYIntegralGain(float val)
    3552:	cf 93       	push	r28
    3554:	df 93       	push	r29
    3556:	00 d0       	rcall	.+0      	; 0x3558 <_ZN10helicopter10controller13PIDController16setYIntegralGainEf+0x6>
    3558:	00 d0       	rcall	.+0      	; 0x355a <_ZN10helicopter10controller13PIDController16setYIntegralGainEf+0x8>
    355a:	cd b7       	in	r28, 0x3d	; 61
    355c:	de b7       	in	r29, 0x3e	; 62
    355e:	9a 83       	std	Y+2, r25	; 0x02
    3560:	89 83       	std	Y+1, r24	; 0x01
    3562:	4b 83       	std	Y+3, r20	; 0x03
    3564:	5c 83       	std	Y+4, r21	; 0x04
    3566:	6d 83       	std	Y+5, r22	; 0x05
    3568:	7e 83       	std	Y+6, r23	; 0x06
				{
					yIntegralGain = val;
    356a:	29 81       	ldd	r18, Y+1	; 0x01
    356c:	3a 81       	ldd	r19, Y+2	; 0x02
    356e:	8b 81       	ldd	r24, Y+3	; 0x03
    3570:	9c 81       	ldd	r25, Y+4	; 0x04
    3572:	ad 81       	ldd	r26, Y+5	; 0x05
    3574:	be 81       	ldd	r27, Y+6	; 0x06
    3576:	f9 01       	movw	r30, r18
    3578:	80 a7       	std	Z+40, r24	; 0x28
    357a:	91 a7       	std	Z+41, r25	; 0x29
    357c:	a2 a7       	std	Z+42, r26	; 0x2a
    357e:	b3 a7       	std	Z+43, r27	; 0x2b
				}
    3580:	26 96       	adiw	r28, 0x06	; 6
    3582:	0f b6       	in	r0, 0x3f	; 63
    3584:	f8 94       	cli
    3586:	de bf       	out	0x3e, r29	; 62
    3588:	0f be       	out	0x3f, r0	; 63
    358a:	cd bf       	out	0x3d, r28	; 61
    358c:	df 91       	pop	r29
    358e:	cf 91       	pop	r28
    3590:	08 95       	ret

00003592 <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf>:
				
				void setYDerivativeGain(float val)
    3592:	cf 93       	push	r28
    3594:	df 93       	push	r29
    3596:	00 d0       	rcall	.+0      	; 0x3598 <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf+0x6>
    3598:	00 d0       	rcall	.+0      	; 0x359a <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf+0x8>
    359a:	cd b7       	in	r28, 0x3d	; 61
    359c:	de b7       	in	r29, 0x3e	; 62
    359e:	9a 83       	std	Y+2, r25	; 0x02
    35a0:	89 83       	std	Y+1, r24	; 0x01
    35a2:	4b 83       	std	Y+3, r20	; 0x03
    35a4:	5c 83       	std	Y+4, r21	; 0x04
    35a6:	6d 83       	std	Y+5, r22	; 0x05
    35a8:	7e 83       	std	Y+6, r23	; 0x06
				{
					yDerivativeGain = val;
    35aa:	29 81       	ldd	r18, Y+1	; 0x01
    35ac:	3a 81       	ldd	r19, Y+2	; 0x02
    35ae:	8b 81       	ldd	r24, Y+3	; 0x03
    35b0:	9c 81       	ldd	r25, Y+4	; 0x04
    35b2:	ad 81       	ldd	r26, Y+5	; 0x05
    35b4:	be 81       	ldd	r27, Y+6	; 0x06
    35b6:	f9 01       	movw	r30, r18
    35b8:	84 a7       	std	Z+44, r24	; 0x2c
    35ba:	95 a7       	std	Z+45, r25	; 0x2d
    35bc:	a6 a7       	std	Z+46, r26	; 0x2e
    35be:	b7 a7       	std	Z+47, r27	; 0x2f
				}
    35c0:	26 96       	adiw	r28, 0x06	; 6
    35c2:	0f b6       	in	r0, 0x3f	; 63
    35c4:	f8 94       	cli
    35c6:	de bf       	out	0x3e, r29	; 62
    35c8:	0f be       	out	0x3f, r0	; 63
    35ca:	cd bf       	out	0x3d, r28	; 61
    35cc:	df 91       	pop	r29
    35ce:	cf 91       	pop	r28
    35d0:	08 95       	ret

000035d2 <_ZN10helicopter10controller13PIDController20setYProportionalGainEf>:
				
				void setYProportionalGain(float val)
    35d2:	cf 93       	push	r28
    35d4:	df 93       	push	r29
    35d6:	00 d0       	rcall	.+0      	; 0x35d8 <_ZN10helicopter10controller13PIDController20setYProportionalGainEf+0x6>
    35d8:	00 d0       	rcall	.+0      	; 0x35da <_ZN10helicopter10controller13PIDController20setYProportionalGainEf+0x8>
    35da:	cd b7       	in	r28, 0x3d	; 61
    35dc:	de b7       	in	r29, 0x3e	; 62
    35de:	9a 83       	std	Y+2, r25	; 0x02
    35e0:	89 83       	std	Y+1, r24	; 0x01
    35e2:	4b 83       	std	Y+3, r20	; 0x03
    35e4:	5c 83       	std	Y+4, r21	; 0x04
    35e6:	6d 83       	std	Y+5, r22	; 0x05
    35e8:	7e 83       	std	Y+6, r23	; 0x06
				{
					yProportionalGain = val;
    35ea:	29 81       	ldd	r18, Y+1	; 0x01
    35ec:	3a 81       	ldd	r19, Y+2	; 0x02
    35ee:	8b 81       	ldd	r24, Y+3	; 0x03
    35f0:	9c 81       	ldd	r25, Y+4	; 0x04
    35f2:	ad 81       	ldd	r26, Y+5	; 0x05
    35f4:	be 81       	ldd	r27, Y+6	; 0x06
    35f6:	f9 01       	movw	r30, r18
    35f8:	80 ab       	std	Z+48, r24	; 0x30
    35fa:	91 ab       	std	Z+49, r25	; 0x31
    35fc:	a2 ab       	std	Z+50, r26	; 0x32
    35fe:	b3 ab       	std	Z+51, r27	; 0x33
				}
    3600:	26 96       	adiw	r28, 0x06	; 6
    3602:	0f b6       	in	r0, 0x3f	; 63
    3604:	f8 94       	cli
    3606:	de bf       	out	0x3e, r29	; 62
    3608:	0f be       	out	0x3f, r0	; 63
    360a:	cd bf       	out	0x3d, r28	; 61
    360c:	df 91       	pop	r29
    360e:	cf 91       	pop	r28
    3610:	08 95       	ret

00003612 <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf>:
				
				void setYAntiWindupGain(float val)
    3612:	cf 93       	push	r28
    3614:	df 93       	push	r29
    3616:	00 d0       	rcall	.+0      	; 0x3618 <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf+0x6>
    3618:	00 d0       	rcall	.+0      	; 0x361a <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf+0x8>
    361a:	cd b7       	in	r28, 0x3d	; 61
    361c:	de b7       	in	r29, 0x3e	; 62
    361e:	9a 83       	std	Y+2, r25	; 0x02
    3620:	89 83       	std	Y+1, r24	; 0x01
    3622:	4b 83       	std	Y+3, r20	; 0x03
    3624:	5c 83       	std	Y+4, r21	; 0x04
    3626:	6d 83       	std	Y+5, r22	; 0x05
    3628:	7e 83       	std	Y+6, r23	; 0x06
				{
					yAntiWindupGain = val;
    362a:	29 81       	ldd	r18, Y+1	; 0x01
    362c:	3a 81       	ldd	r19, Y+2	; 0x02
    362e:	8b 81       	ldd	r24, Y+3	; 0x03
    3630:	9c 81       	ldd	r25, Y+4	; 0x04
    3632:	ad 81       	ldd	r26, Y+5	; 0x05
    3634:	be 81       	ldd	r27, Y+6	; 0x06
    3636:	f9 01       	movw	r30, r18
    3638:	84 ab       	std	Z+52, r24	; 0x34
    363a:	95 ab       	std	Z+53, r25	; 0x35
    363c:	a6 ab       	std	Z+54, r26	; 0x36
    363e:	b7 ab       	std	Z+55, r27	; 0x37
				}
    3640:	26 96       	adiw	r28, 0x06	; 6
    3642:	0f b6       	in	r0, 0x3f	; 63
    3644:	f8 94       	cli
    3646:	de bf       	out	0x3e, r29	; 62
    3648:	0f be       	out	0x3f, r0	; 63
    364a:	cd bf       	out	0x3d, r28	; 61
    364c:	df 91       	pop	r29
    364e:	cf 91       	pop	r28
    3650:	08 95       	ret

00003652 <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf>:
				
				void setLateralInnerLoopGain(float val)
    3652:	cf 93       	push	r28
    3654:	df 93       	push	r29
    3656:	00 d0       	rcall	.+0      	; 0x3658 <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf+0x6>
    3658:	00 d0       	rcall	.+0      	; 0x365a <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf+0x8>
    365a:	cd b7       	in	r28, 0x3d	; 61
    365c:	de b7       	in	r29, 0x3e	; 62
    365e:	9a 83       	std	Y+2, r25	; 0x02
    3660:	89 83       	std	Y+1, r24	; 0x01
    3662:	4b 83       	std	Y+3, r20	; 0x03
    3664:	5c 83       	std	Y+4, r21	; 0x04
    3666:	6d 83       	std	Y+5, r22	; 0x05
    3668:	7e 83       	std	Y+6, r23	; 0x06
				{
					lateralInnerLoopGain = val;
    366a:	29 81       	ldd	r18, Y+1	; 0x01
    366c:	3a 81       	ldd	r19, Y+2	; 0x02
    366e:	8b 81       	ldd	r24, Y+3	; 0x03
    3670:	9c 81       	ldd	r25, Y+4	; 0x04
    3672:	ad 81       	ldd	r26, Y+5	; 0x05
    3674:	be 81       	ldd	r27, Y+6	; 0x06
    3676:	f9 01       	movw	r30, r18
    3678:	80 af       	std	Z+56, r24	; 0x38
    367a:	91 af       	std	Z+57, r25	; 0x39
    367c:	a2 af       	std	Z+58, r26	; 0x3a
    367e:	b3 af       	std	Z+59, r27	; 0x3b
				}
    3680:	26 96       	adiw	r28, 0x06	; 6
    3682:	0f b6       	in	r0, 0x3f	; 63
    3684:	f8 94       	cli
    3686:	de bf       	out	0x3e, r29	; 62
    3688:	0f be       	out	0x3f, r0	; 63
    368a:	cd bf       	out	0x3d, r28	; 61
    368c:	df 91       	pop	r29
    368e:	cf 91       	pop	r28
    3690:	08 95       	ret

00003692 <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf>:
				
				void setMinLateralServoControlValue(float val)
    3692:	cf 93       	push	r28
    3694:	df 93       	push	r29
    3696:	00 d0       	rcall	.+0      	; 0x3698 <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf+0x6>
    3698:	00 d0       	rcall	.+0      	; 0x369a <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf+0x8>
    369a:	cd b7       	in	r28, 0x3d	; 61
    369c:	de b7       	in	r29, 0x3e	; 62
    369e:	9a 83       	std	Y+2, r25	; 0x02
    36a0:	89 83       	std	Y+1, r24	; 0x01
    36a2:	4b 83       	std	Y+3, r20	; 0x03
    36a4:	5c 83       	std	Y+4, r21	; 0x04
    36a6:	6d 83       	std	Y+5, r22	; 0x05
    36a8:	7e 83       	std	Y+6, r23	; 0x06
				{
					minLateralServoControlValue = val;
    36aa:	89 81       	ldd	r24, Y+1	; 0x01
    36ac:	9a 81       	ldd	r25, Y+2	; 0x02
    36ae:	9c 01       	movw	r18, r24
    36b0:	24 5a       	subi	r18, 0xA4	; 164
    36b2:	3f 4f       	sbci	r19, 0xFF	; 255
    36b4:	8b 81       	ldd	r24, Y+3	; 0x03
    36b6:	9c 81       	ldd	r25, Y+4	; 0x04
    36b8:	ad 81       	ldd	r26, Y+5	; 0x05
    36ba:	be 81       	ldd	r27, Y+6	; 0x06
    36bc:	f9 01       	movw	r30, r18
    36be:	80 83       	st	Z, r24
    36c0:	91 83       	std	Z+1, r25	; 0x01
    36c2:	a2 83       	std	Z+2, r26	; 0x02
    36c4:	b3 83       	std	Z+3, r27	; 0x03
				}
    36c6:	26 96       	adiw	r28, 0x06	; 6
    36c8:	0f b6       	in	r0, 0x3f	; 63
    36ca:	f8 94       	cli
    36cc:	de bf       	out	0x3e, r29	; 62
    36ce:	0f be       	out	0x3f, r0	; 63
    36d0:	cd bf       	out	0x3d, r28	; 61
    36d2:	df 91       	pop	r29
    36d4:	cf 91       	pop	r28
    36d6:	08 95       	ret

000036d8 <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf>:
				
				void setMaxLateralServoControlValue(float val)
    36d8:	cf 93       	push	r28
    36da:	df 93       	push	r29
    36dc:	00 d0       	rcall	.+0      	; 0x36de <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf+0x6>
    36de:	00 d0       	rcall	.+0      	; 0x36e0 <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf+0x8>
    36e0:	cd b7       	in	r28, 0x3d	; 61
    36e2:	de b7       	in	r29, 0x3e	; 62
    36e4:	9a 83       	std	Y+2, r25	; 0x02
    36e6:	89 83       	std	Y+1, r24	; 0x01
    36e8:	4b 83       	std	Y+3, r20	; 0x03
    36ea:	5c 83       	std	Y+4, r21	; 0x04
    36ec:	6d 83       	std	Y+5, r22	; 0x05
    36ee:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxLateralServoControlValue = val;
    36f0:	89 81       	ldd	r24, Y+1	; 0x01
    36f2:	9a 81       	ldd	r25, Y+2	; 0x02
    36f4:	9c 01       	movw	r18, r24
    36f6:	20 5a       	subi	r18, 0xA0	; 160
    36f8:	3f 4f       	sbci	r19, 0xFF	; 255
    36fa:	8b 81       	ldd	r24, Y+3	; 0x03
    36fc:	9c 81       	ldd	r25, Y+4	; 0x04
    36fe:	ad 81       	ldd	r26, Y+5	; 0x05
    3700:	be 81       	ldd	r27, Y+6	; 0x06
    3702:	f9 01       	movw	r30, r18
    3704:	80 83       	st	Z, r24
    3706:	91 83       	std	Z+1, r25	; 0x01
    3708:	a2 83       	std	Z+2, r26	; 0x02
    370a:	b3 83       	std	Z+3, r27	; 0x03
				}
    370c:	26 96       	adiw	r28, 0x06	; 6
    370e:	0f b6       	in	r0, 0x3f	; 63
    3710:	f8 94       	cli
    3712:	de bf       	out	0x3e, r29	; 62
    3714:	0f be       	out	0x3f, r0	; 63
    3716:	cd bf       	out	0x3d, r28	; 61
    3718:	df 91       	pop	r29
    371a:	cf 91       	pop	r28
    371c:	08 95       	ret

0000371e <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf>:
				void setZAntiWindupGain(float val)
				{
					zAntiWindupGain = val;
				}
				
				void setMinMainRotorServoControlValue(float val)
    371e:	cf 93       	push	r28
    3720:	df 93       	push	r29
    3722:	00 d0       	rcall	.+0      	; 0x3724 <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf+0x6>
    3724:	00 d0       	rcall	.+0      	; 0x3726 <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf+0x8>
    3726:	cd b7       	in	r28, 0x3d	; 61
    3728:	de b7       	in	r29, 0x3e	; 62
    372a:	9a 83       	std	Y+2, r25	; 0x02
    372c:	89 83       	std	Y+1, r24	; 0x01
    372e:	4b 83       	std	Y+3, r20	; 0x03
    3730:	5c 83       	std	Y+4, r21	; 0x04
    3732:	6d 83       	std	Y+5, r22	; 0x05
    3734:	7e 83       	std	Y+6, r23	; 0x06
				{
					minMainRotorServoControlValue = val;
    3736:	89 81       	ldd	r24, Y+1	; 0x01
    3738:	9a 81       	ldd	r25, Y+2	; 0x02
    373a:	9c 01       	movw	r18, r24
    373c:	2c 59       	subi	r18, 0x9C	; 156
    373e:	3f 4f       	sbci	r19, 0xFF	; 255
    3740:	8b 81       	ldd	r24, Y+3	; 0x03
    3742:	9c 81       	ldd	r25, Y+4	; 0x04
    3744:	ad 81       	ldd	r26, Y+5	; 0x05
    3746:	be 81       	ldd	r27, Y+6	; 0x06
    3748:	f9 01       	movw	r30, r18
    374a:	80 83       	st	Z, r24
    374c:	91 83       	std	Z+1, r25	; 0x01
    374e:	a2 83       	std	Z+2, r26	; 0x02
    3750:	b3 83       	std	Z+3, r27	; 0x03
				}
    3752:	26 96       	adiw	r28, 0x06	; 6
    3754:	0f b6       	in	r0, 0x3f	; 63
    3756:	f8 94       	cli
    3758:	de bf       	out	0x3e, r29	; 62
    375a:	0f be       	out	0x3f, r0	; 63
    375c:	cd bf       	out	0x3d, r28	; 61
    375e:	df 91       	pop	r29
    3760:	cf 91       	pop	r28
    3762:	08 95       	ret

00003764 <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf>:
				
				void setMaxMainRotorServoControlValue(float val)
    3764:	cf 93       	push	r28
    3766:	df 93       	push	r29
    3768:	00 d0       	rcall	.+0      	; 0x376a <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf+0x6>
    376a:	00 d0       	rcall	.+0      	; 0x376c <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf+0x8>
    376c:	cd b7       	in	r28, 0x3d	; 61
    376e:	de b7       	in	r29, 0x3e	; 62
    3770:	9a 83       	std	Y+2, r25	; 0x02
    3772:	89 83       	std	Y+1, r24	; 0x01
    3774:	4b 83       	std	Y+3, r20	; 0x03
    3776:	5c 83       	std	Y+4, r21	; 0x04
    3778:	6d 83       	std	Y+5, r22	; 0x05
    377a:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxMainRotorServoControlValue = val;
    377c:	89 81       	ldd	r24, Y+1	; 0x01
    377e:	9a 81       	ldd	r25, Y+2	; 0x02
    3780:	9c 01       	movw	r18, r24
    3782:	28 59       	subi	r18, 0x98	; 152
    3784:	3f 4f       	sbci	r19, 0xFF	; 255
    3786:	8b 81       	ldd	r24, Y+3	; 0x03
    3788:	9c 81       	ldd	r25, Y+4	; 0x04
    378a:	ad 81       	ldd	r26, Y+5	; 0x05
    378c:	be 81       	ldd	r27, Y+6	; 0x06
    378e:	f9 01       	movw	r30, r18
    3790:	80 83       	st	Z, r24
    3792:	91 83       	std	Z+1, r25	; 0x01
    3794:	a2 83       	std	Z+2, r26	; 0x02
    3796:	b3 83       	std	Z+3, r27	; 0x03
				}
    3798:	26 96       	adiw	r28, 0x06	; 6
    379a:	0f b6       	in	r0, 0x3f	; 63
    379c:	f8 94       	cli
    379e:	de bf       	out	0x3e, r29	; 62
    37a0:	0f be       	out	0x3f, r0	; 63
    37a2:	cd bf       	out	0x3d, r28	; 61
    37a4:	df 91       	pop	r29
    37a6:	cf 91       	pop	r28
    37a8:	08 95       	ret

000037aa <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf>:
				
				
				/**
				 * Gain value applied to the yaw proportional error
				 */
				void setYawProportionalGain(float yawProportionalGain)
    37aa:	cf 93       	push	r28
    37ac:	df 93       	push	r29
    37ae:	00 d0       	rcall	.+0      	; 0x37b0 <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf+0x6>
    37b0:	00 d0       	rcall	.+0      	; 0x37b2 <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf+0x8>
    37b2:	cd b7       	in	r28, 0x3d	; 61
    37b4:	de b7       	in	r29, 0x3e	; 62
    37b6:	9a 83       	std	Y+2, r25	; 0x02
    37b8:	89 83       	std	Y+1, r24	; 0x01
    37ba:	4b 83       	std	Y+3, r20	; 0x03
    37bc:	5c 83       	std	Y+4, r21	; 0x04
    37be:	6d 83       	std	Y+5, r22	; 0x05
    37c0:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawProportionalGain = yawProportionalGain;
    37c2:	29 81       	ldd	r18, Y+1	; 0x01
    37c4:	3a 81       	ldd	r19, Y+2	; 0x02
    37c6:	8b 81       	ldd	r24, Y+3	; 0x03
    37c8:	9c 81       	ldd	r25, Y+4	; 0x04
    37ca:	ad 81       	ldd	r26, Y+5	; 0x05
    37cc:	be 81       	ldd	r27, Y+6	; 0x06
    37ce:	f9 01       	movw	r30, r18
    37d0:	84 87       	std	Z+12, r24	; 0x0c
    37d2:	95 87       	std	Z+13, r25	; 0x0d
    37d4:	a6 87       	std	Z+14, r26	; 0x0e
    37d6:	b7 87       	std	Z+15, r27	; 0x0f
				}
    37d8:	26 96       	adiw	r28, 0x06	; 6
    37da:	0f b6       	in	r0, 0x3f	; 63
    37dc:	f8 94       	cli
    37de:	de bf       	out	0x3e, r29	; 62
    37e0:	0f be       	out	0x3f, r0	; 63
    37e2:	cd bf       	out	0x3d, r28	; 61
    37e4:	df 91       	pop	r29
    37e6:	cf 91       	pop	r28
    37e8:	08 95       	ret

000037ea <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf>:
				
				/**
				 * Gain value applied to the yaw integral
				 */
				void setYawIntegralGain(float yawIntegralGain)
    37ea:	cf 93       	push	r28
    37ec:	df 93       	push	r29
    37ee:	00 d0       	rcall	.+0      	; 0x37f0 <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf+0x6>
    37f0:	00 d0       	rcall	.+0      	; 0x37f2 <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf+0x8>
    37f2:	cd b7       	in	r28, 0x3d	; 61
    37f4:	de b7       	in	r29, 0x3e	; 62
    37f6:	9a 83       	std	Y+2, r25	; 0x02
    37f8:	89 83       	std	Y+1, r24	; 0x01
    37fa:	4b 83       	std	Y+3, r20	; 0x03
    37fc:	5c 83       	std	Y+4, r21	; 0x04
    37fe:	6d 83       	std	Y+5, r22	; 0x05
    3800:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawIntegralGain = yawIntegralGain;
    3802:	29 81       	ldd	r18, Y+1	; 0x01
    3804:	3a 81       	ldd	r19, Y+2	; 0x02
    3806:	8b 81       	ldd	r24, Y+3	; 0x03
    3808:	9c 81       	ldd	r25, Y+4	; 0x04
    380a:	ad 81       	ldd	r26, Y+5	; 0x05
    380c:	be 81       	ldd	r27, Y+6	; 0x06
    380e:	f9 01       	movw	r30, r18
    3810:	84 83       	std	Z+4, r24	; 0x04
    3812:	95 83       	std	Z+5, r25	; 0x05
    3814:	a6 83       	std	Z+6, r26	; 0x06
    3816:	b7 83       	std	Z+7, r27	; 0x07
				}
    3818:	26 96       	adiw	r28, 0x06	; 6
    381a:	0f b6       	in	r0, 0x3f	; 63
    381c:	f8 94       	cli
    381e:	de bf       	out	0x3e, r29	; 62
    3820:	0f be       	out	0x3f, r0	; 63
    3822:	cd bf       	out	0x3d, r28	; 61
    3824:	df 91       	pop	r29
    3826:	cf 91       	pop	r28
    3828:	08 95       	ret

0000382a <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf>:
				
				/**
				 * Gain value applied to the derivative
				 */
				void setYawDerivativeGain(float yawDerivativeGain)
    382a:	cf 93       	push	r28
    382c:	df 93       	push	r29
    382e:	00 d0       	rcall	.+0      	; 0x3830 <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf+0x6>
    3830:	00 d0       	rcall	.+0      	; 0x3832 <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf+0x8>
    3832:	cd b7       	in	r28, 0x3d	; 61
    3834:	de b7       	in	r29, 0x3e	; 62
    3836:	9a 83       	std	Y+2, r25	; 0x02
    3838:	89 83       	std	Y+1, r24	; 0x01
    383a:	4b 83       	std	Y+3, r20	; 0x03
    383c:	5c 83       	std	Y+4, r21	; 0x04
    383e:	6d 83       	std	Y+5, r22	; 0x05
    3840:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawDerivativeGain = yawDerivativeGain;
    3842:	29 81       	ldd	r18, Y+1	; 0x01
    3844:	3a 81       	ldd	r19, Y+2	; 0x02
    3846:	8b 81       	ldd	r24, Y+3	; 0x03
    3848:	9c 81       	ldd	r25, Y+4	; 0x04
    384a:	ad 81       	ldd	r26, Y+5	; 0x05
    384c:	be 81       	ldd	r27, Y+6	; 0x06
    384e:	f9 01       	movw	r30, r18
    3850:	80 87       	std	Z+8, r24	; 0x08
    3852:	91 87       	std	Z+9, r25	; 0x09
    3854:	a2 87       	std	Z+10, r26	; 0x0a
    3856:	b3 87       	std	Z+11, r27	; 0x0b
				}
    3858:	26 96       	adiw	r28, 0x06	; 6
    385a:	0f b6       	in	r0, 0x3f	; 63
    385c:	f8 94       	cli
    385e:	de bf       	out	0x3e, r29	; 62
    3860:	0f be       	out	0x3f, r0	; 63
    3862:	cd bf       	out	0x3d, r28	; 61
    3864:	df 91       	pop	r29
    3866:	cf 91       	pop	r28
    3868:	08 95       	ret

0000386a <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf>:
				
				/**
				 * The number of seconds between pid controller updates. This number
				 * should generally be less than 1. Like .05 for a 20 hz rate.
				 */
				void setIntervalPeriodSecs(float intervalPeriodSecs)
    386a:	cf 93       	push	r28
    386c:	df 93       	push	r29
    386e:	00 d0       	rcall	.+0      	; 0x3870 <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf+0x6>
    3870:	00 d0       	rcall	.+0      	; 0x3872 <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf+0x8>
    3872:	cd b7       	in	r28, 0x3d	; 61
    3874:	de b7       	in	r29, 0x3e	; 62
    3876:	9a 83       	std	Y+2, r25	; 0x02
    3878:	89 83       	std	Y+1, r24	; 0x01
    387a:	4b 83       	std	Y+3, r20	; 0x03
    387c:	5c 83       	std	Y+4, r21	; 0x04
    387e:	6d 83       	std	Y+5, r22	; 0x05
    3880:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->intervalPeriodSecs = intervalPeriodSecs;
    3882:	89 81       	ldd	r24, Y+1	; 0x01
    3884:	9a 81       	ldd	r25, Y+2	; 0x02
    3886:	9c 01       	movw	r18, r24
    3888:	24 59       	subi	r18, 0x94	; 148
    388a:	3f 4f       	sbci	r19, 0xFF	; 255
    388c:	8b 81       	ldd	r24, Y+3	; 0x03
    388e:	9c 81       	ldd	r25, Y+4	; 0x04
    3890:	ad 81       	ldd	r26, Y+5	; 0x05
    3892:	be 81       	ldd	r27, Y+6	; 0x06
    3894:	f9 01       	movw	r30, r18
    3896:	80 83       	st	Z, r24
    3898:	91 83       	std	Z+1, r25	; 0x01
    389a:	a2 83       	std	Z+2, r26	; 0x02
    389c:	b3 83       	std	Z+3, r27	; 0x03
				}
    389e:	26 96       	adiw	r28, 0x06	; 6
    38a0:	0f b6       	in	r0, 0x3f	; 63
    38a2:	f8 94       	cli
    38a4:	de bf       	out	0x3e, r29	; 62
    38a6:	0f be       	out	0x3f, r0	; 63
    38a8:	cd bf       	out	0x3d, r28	; 61
    38aa:	df 91       	pop	r29
    38ac:	cf 91       	pop	r28
    38ae:	08 95       	ret

000038b0 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf>:
				 * keeps increasing despite the helicopter already at the maximum possible control values.
				 * @param yawAntiWindupGain The gain value which represents how fast the integral will
				 * go back to 0 when the servos are saturated.
				 * Some simple rule that have been suggested for the tracking time are ~ Tt = TiTd and Tt = (Ti + Td)/2.
				 */
				void setYawAntiWindupGain(float yawAntiWindupGain)
    38b0:	cf 93       	push	r28
    38b2:	df 93       	push	r29
    38b4:	00 d0       	rcall	.+0      	; 0x38b6 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf+0x6>
    38b6:	00 d0       	rcall	.+0      	; 0x38b8 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf+0x8>
    38b8:	cd b7       	in	r28, 0x3d	; 61
    38ba:	de b7       	in	r29, 0x3e	; 62
    38bc:	9a 83       	std	Y+2, r25	; 0x02
    38be:	89 83       	std	Y+1, r24	; 0x01
    38c0:	4b 83       	std	Y+3, r20	; 0x03
    38c2:	5c 83       	std	Y+4, r21	; 0x04
    38c4:	6d 83       	std	Y+5, r22	; 0x05
    38c6:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawAntiWindupGain = yawAntiWindupGain;
    38c8:	29 81       	ldd	r18, Y+1	; 0x01
    38ca:	3a 81       	ldd	r19, Y+2	; 0x02
    38cc:	8b 81       	ldd	r24, Y+3	; 0x03
    38ce:	9c 81       	ldd	r25, Y+4	; 0x04
    38d0:	ad 81       	ldd	r26, Y+5	; 0x05
    38d2:	be 81       	ldd	r27, Y+6	; 0x06
    38d4:	f9 01       	movw	r30, r18
    38d6:	80 8b       	std	Z+16, r24	; 0x10
    38d8:	91 8b       	std	Z+17, r25	; 0x11
    38da:	a2 8b       	std	Z+18, r26	; 0x12
    38dc:	b3 8b       	std	Z+19, r27	; 0x13
				}
    38de:	26 96       	adiw	r28, 0x06	; 6
    38e0:	0f b6       	in	r0, 0x3f	; 63
    38e2:	f8 94       	cli
    38e4:	de bf       	out	0x3e, r29	; 62
    38e6:	0f be       	out	0x3f, r0	; 63
    38e8:	cd bf       	out	0x3d, r28	; 61
    38ea:	df 91       	pop	r29
    38ec:	cf 91       	pop	r28
    38ee:	08 95       	ret

000038f0 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf>:
				/**
				 * The minimum control value that the yaw actuators can be set too. This is used for 
				 * integral anti-windup to determine when the actuators would be saturated.
				 * The value should be no smaller than the controlMinValue (e.g. no less than -1)
				 */
				void setMinYawServoControl(float minYawServoControlValue)
    38f0:	cf 93       	push	r28
    38f2:	df 93       	push	r29
    38f4:	00 d0       	rcall	.+0      	; 0x38f6 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf+0x6>
    38f6:	00 d0       	rcall	.+0      	; 0x38f8 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf+0x8>
    38f8:	cd b7       	in	r28, 0x3d	; 61
    38fa:	de b7       	in	r29, 0x3e	; 62
    38fc:	9a 83       	std	Y+2, r25	; 0x02
    38fe:	89 83       	std	Y+1, r24	; 0x01
    3900:	4b 83       	std	Y+3, r20	; 0x03
    3902:	5c 83       	std	Y+4, r21	; 0x04
    3904:	6d 83       	std	Y+5, r22	; 0x05
    3906:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->minYawServoControlValue = minYawServoControlValue;
    3908:	89 81       	ldd	r24, Y+1	; 0x01
    390a:	9a 81       	ldd	r25, Y+2	; 0x02
    390c:	9c 01       	movw	r18, r24
    390e:	24 5b       	subi	r18, 0xB4	; 180
    3910:	3f 4f       	sbci	r19, 0xFF	; 255
    3912:	8b 81       	ldd	r24, Y+3	; 0x03
    3914:	9c 81       	ldd	r25, Y+4	; 0x04
    3916:	ad 81       	ldd	r26, Y+5	; 0x05
    3918:	be 81       	ldd	r27, Y+6	; 0x06
    391a:	f9 01       	movw	r30, r18
    391c:	80 83       	st	Z, r24
    391e:	91 83       	std	Z+1, r25	; 0x01
    3920:	a2 83       	std	Z+2, r26	; 0x02
    3922:	b3 83       	std	Z+3, r27	; 0x03
				}
    3924:	26 96       	adiw	r28, 0x06	; 6
    3926:	0f b6       	in	r0, 0x3f	; 63
    3928:	f8 94       	cli
    392a:	de bf       	out	0x3e, r29	; 62
    392c:	0f be       	out	0x3f, r0	; 63
    392e:	cd bf       	out	0x3d, r28	; 61
    3930:	df 91       	pop	r29
    3932:	cf 91       	pop	r28
    3934:	08 95       	ret

00003936 <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf>:
				/**
				 * The maximum control value that the yaw actuators can be set too. This is used for 
				 * integral anti-windup to determine when the actuators would be saturated.
				 * The value should be no larger than the controlMaxValue (e.g. no greater than 1)
				 */
				void setMaxYawServoControl(float maxYawServoControlValue)
    3936:	cf 93       	push	r28
    3938:	df 93       	push	r29
    393a:	00 d0       	rcall	.+0      	; 0x393c <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf+0x6>
    393c:	00 d0       	rcall	.+0      	; 0x393e <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf+0x8>
    393e:	cd b7       	in	r28, 0x3d	; 61
    3940:	de b7       	in	r29, 0x3e	; 62
    3942:	9a 83       	std	Y+2, r25	; 0x02
    3944:	89 83       	std	Y+1, r24	; 0x01
    3946:	4b 83       	std	Y+3, r20	; 0x03
    3948:	5c 83       	std	Y+4, r21	; 0x04
    394a:	6d 83       	std	Y+5, r22	; 0x05
    394c:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->maxYawServoControlValue = maxYawServoControlValue;
    394e:	89 81       	ldd	r24, Y+1	; 0x01
    3950:	9a 81       	ldd	r25, Y+2	; 0x02
    3952:	9c 01       	movw	r18, r24
    3954:	20 5b       	subi	r18, 0xB0	; 176
    3956:	3f 4f       	sbci	r19, 0xFF	; 255
    3958:	8b 81       	ldd	r24, Y+3	; 0x03
    395a:	9c 81       	ldd	r25, Y+4	; 0x04
    395c:	ad 81       	ldd	r26, Y+5	; 0x05
    395e:	be 81       	ldd	r27, Y+6	; 0x06
    3960:	f9 01       	movw	r30, r18
    3962:	80 83       	st	Z, r24
    3964:	91 83       	std	Z+1, r25	; 0x01
    3966:	a2 83       	std	Z+2, r26	; 0x02
    3968:	b3 83       	std	Z+3, r27	; 0x03
				}
    396a:	26 96       	adiw	r28, 0x06	; 6
    396c:	0f b6       	in	r0, 0x3f	; 63
    396e:	f8 94       	cli
    3970:	de bf       	out	0x3e, r29	; 62
    3972:	0f be       	out	0x3f, r0	; 63
    3974:	cd bf       	out	0x3d, r28	; 61
    3976:	df 91       	pop	r29
    3978:	cf 91       	pop	r28
    397a:	08 95       	ret

0000397c <_ZN10helicopter10controller13PIDController18setControlMaxValueEf>:
				
				/**
				 * This is the maximum possible output value for a control signal.
				 * Generally, this should be set to 1.
				 */
				void setControlMaxValue(float controlMaxValue)
    397c:	cf 93       	push	r28
    397e:	df 93       	push	r29
    3980:	00 d0       	rcall	.+0      	; 0x3982 <_ZN10helicopter10controller13PIDController18setControlMaxValueEf+0x6>
    3982:	00 d0       	rcall	.+0      	; 0x3984 <_ZN10helicopter10controller13PIDController18setControlMaxValueEf+0x8>
    3984:	cd b7       	in	r28, 0x3d	; 61
    3986:	de b7       	in	r29, 0x3e	; 62
    3988:	9a 83       	std	Y+2, r25	; 0x02
    398a:	89 83       	std	Y+1, r24	; 0x01
    398c:	4b 83       	std	Y+3, r20	; 0x03
    398e:	5c 83       	std	Y+4, r21	; 0x04
    3990:	6d 83       	std	Y+5, r22	; 0x05
    3992:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->controlMaxValue = controlMaxValue;
    3994:	89 81       	ldd	r24, Y+1	; 0x01
    3996:	9a 81       	ldd	r25, Y+2	; 0x02
    3998:	9c 01       	movw	r18, r24
    399a:	20 59       	subi	r18, 0x90	; 144
    399c:	3f 4f       	sbci	r19, 0xFF	; 255
    399e:	8b 81       	ldd	r24, Y+3	; 0x03
    39a0:	9c 81       	ldd	r25, Y+4	; 0x04
    39a2:	ad 81       	ldd	r26, Y+5	; 0x05
    39a4:	be 81       	ldd	r27, Y+6	; 0x06
    39a6:	f9 01       	movw	r30, r18
    39a8:	80 83       	st	Z, r24
    39aa:	91 83       	std	Z+1, r25	; 0x01
    39ac:	a2 83       	std	Z+2, r26	; 0x02
    39ae:	b3 83       	std	Z+3, r27	; 0x03
				}
    39b0:	26 96       	adiw	r28, 0x06	; 6
    39b2:	0f b6       	in	r0, 0x3f	; 63
    39b4:	f8 94       	cli
    39b6:	de bf       	out	0x3e, r29	; 62
    39b8:	0f be       	out	0x3f, r0	; 63
    39ba:	cd bf       	out	0x3d, r28	; 61
    39bc:	df 91       	pop	r29
    39be:	cf 91       	pop	r28
    39c0:	08 95       	ret

000039c2 <_ZN10helicopter10controller13PIDController18setControlMinValueEf>:
				
				/**
				 * This is the minimum possible value for a control signal.
				 * Generally, this should be set to -1.
				 */
				void setControlMinValue(float controlMinValue)
    39c2:	cf 93       	push	r28
    39c4:	df 93       	push	r29
    39c6:	00 d0       	rcall	.+0      	; 0x39c8 <_ZN10helicopter10controller13PIDController18setControlMinValueEf+0x6>
    39c8:	00 d0       	rcall	.+0      	; 0x39ca <_ZN10helicopter10controller13PIDController18setControlMinValueEf+0x8>
    39ca:	cd b7       	in	r28, 0x3d	; 61
    39cc:	de b7       	in	r29, 0x3e	; 62
    39ce:	9a 83       	std	Y+2, r25	; 0x02
    39d0:	89 83       	std	Y+1, r24	; 0x01
    39d2:	4b 83       	std	Y+3, r20	; 0x03
    39d4:	5c 83       	std	Y+4, r21	; 0x04
    39d6:	6d 83       	std	Y+5, r22	; 0x05
    39d8:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->controlMinValue = controlMinValue;
    39da:	89 81       	ldd	r24, Y+1	; 0x01
    39dc:	9a 81       	ldd	r25, Y+2	; 0x02
    39de:	9c 01       	movw	r18, r24
    39e0:	2c 58       	subi	r18, 0x8C	; 140
    39e2:	3f 4f       	sbci	r19, 0xFF	; 255
    39e4:	8b 81       	ldd	r24, Y+3	; 0x03
    39e6:	9c 81       	ldd	r25, Y+4	; 0x04
    39e8:	ad 81       	ldd	r26, Y+5	; 0x05
    39ea:	be 81       	ldd	r27, Y+6	; 0x06
    39ec:	f9 01       	movw	r30, r18
    39ee:	80 83       	st	Z, r24
    39f0:	91 83       	std	Z+1, r25	; 0x01
    39f2:	a2 83       	std	Z+2, r26	; 0x02
    39f4:	b3 83       	std	Z+3, r27	; 0x03
				}			
    39f6:	26 96       	adiw	r28, 0x06	; 6
    39f8:	0f b6       	in	r0, 0x3f	; 63
    39fa:	f8 94       	cli
    39fc:	de bf       	out	0x3e, r29	; 62
    39fe:	0f be       	out	0x3f, r0	; 63
    3a00:	cd bf       	out	0x3d, r28	; 61
    3a02:	df 91       	pop	r29
    3a04:	cf 91       	pop	r28
    3a06:	08 95       	ret

00003a08 <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE>:
using namespace helicopter::model;
using namespace helicopter::controller;
using namespace helicopter::util;

void setupDefaultsandReferencePosition(SystemModel *model, PIDController *pidController)
{	
    3a08:	cf 93       	push	r28
    3a0a:	df 93       	push	r29
    3a0c:	00 d0       	rcall	.+0      	; 0x3a0e <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE+0x6>
    3a0e:	1f 92       	push	r1
    3a10:	cd b7       	in	r28, 0x3d	; 61
    3a12:	de b7       	in	r29, 0x3e	; 62
    3a14:	9a 83       	std	Y+2, r25	; 0x02
    3a16:	89 83       	std	Y+1, r24	; 0x01
    3a18:	7c 83       	std	Y+4, r23	; 0x04
    3a1a:	6b 83       	std	Y+3, r22	; 0x03
	/**
	 * Set reference position of the helicopter.
	 * These are the setpoints that the helicopter to navigate/orient to.
	 * This includes the final location that the helicopter should travel to.
	 */
	model->ReferenceMagYawDegrees(0.0); //point north
    3a1c:	89 81       	ldd	r24, Y+1	; 0x01
    3a1e:	9a 81       	ldd	r25, Y+2	; 0x02
    3a20:	40 e0       	ldi	r20, 0x00	; 0
    3a22:	50 e0       	ldi	r21, 0x00	; 0
    3a24:	ba 01       	movw	r22, r20
    3a26:	0e 94 f3 17 	call	0x2fe6	; 0x2fe6 <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf>
	model->ReferenceYawVelocityDegreesPerSecond(0.0);
    3a2a:	89 81       	ldd	r24, Y+1	; 0x01
    3a2c:	9a 81       	ldd	r25, Y+2	; 0x02
    3a2e:	40 e0       	ldi	r20, 0x00	; 0
    3a30:	50 e0       	ldi	r21, 0x00	; 0
    3a32:	ba 01       	movw	r22, r20
    3a34:	0e 94 13 18 	call	0x3026	; 0x3026 <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf>
	
	//Negative values because positive values are 'down' in NED. So we want a negative altitude setpoint.
	model->ReferenceAltitudeFeet(-100);
    3a38:	89 81       	ldd	r24, Y+1	; 0x01
    3a3a:	9a 81       	ldd	r25, Y+2	; 0x02
    3a3c:	40 e0       	ldi	r20, 0x00	; 0
    3a3e:	50 e0       	ldi	r21, 0x00	; 0
    3a40:	68 ec       	ldi	r22, 0xC8	; 200
    3a42:	72 ec       	ldi	r23, 0xC2	; 194
    3a44:	0e 94 b9 18 	call	0x3172	; 0x3172 <_ZN10helicopter5model11SystemModel21ReferenceAltitudeFeetEf>
	model->ReferenceZVelocityFeetPerSecond(0);
    3a48:	89 81       	ldd	r24, Y+1	; 0x01
    3a4a:	9a 81       	ldd	r25, Y+2	; 0x02
    3a4c:	40 e0       	ldi	r20, 0x00	; 0
    3a4e:	50 e0       	ldi	r21, 0x00	; 0
    3a50:	ba 01       	movw	r22, r20
    3a52:	0e 94 dc 18 	call	0x31b8	; 0x31b8 <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf>
	model->ReferenceXNEDBodyFrame(0);
    3a56:	89 81       	ldd	r24, Y+1	; 0x01
    3a58:	9a 81       	ldd	r25, Y+2	; 0x02
    3a5a:	40 e0       	ldi	r20, 0x00	; 0
    3a5c:	50 e0       	ldi	r21, 0x00	; 0
    3a5e:	ba 01       	movw	r22, r20
    3a60:	0e 94 33 18 	call	0x3066	; 0x3066 <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf>
	model->ReferenceXVelocityMetersPerSecond(0);
    3a64:	89 81       	ldd	r24, Y+1	; 0x01
    3a66:	9a 81       	ldd	r25, Y+2	; 0x02
    3a68:	40 e0       	ldi	r20, 0x00	; 0
    3a6a:	50 e0       	ldi	r21, 0x00	; 0
    3a6c:	ba 01       	movw	r22, r20
    3a6e:	0e 94 53 18 	call	0x30a6	; 0x30a6 <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf>
	model->ReferenceYNEDBodyFrame(0);
    3a72:	89 81       	ldd	r24, Y+1	; 0x01
    3a74:	9a 81       	ldd	r25, Y+2	; 0x02
    3a76:	40 e0       	ldi	r20, 0x00	; 0
    3a78:	50 e0       	ldi	r21, 0x00	; 0
    3a7a:	ba 01       	movw	r22, r20
    3a7c:	0e 94 73 18 	call	0x30e6	; 0x30e6 <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf>
	model->ReferenceYVelocityMetersPerSecond(0);
    3a80:	89 81       	ldd	r24, Y+1	; 0x01
    3a82:	9a 81       	ldd	r25, Y+2	; 0x02
    3a84:	40 e0       	ldi	r20, 0x00	; 0
    3a86:	50 e0       	ldi	r21, 0x00	; 0
    3a88:	ba 01       	movw	r22, r20
    3a8a:	0e 94 96 18 	call	0x312c	; 0x312c <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf>
	
	
	pidController->setYawProportionalGain(3.0);
    3a8e:	8b 81       	ldd	r24, Y+3	; 0x03
    3a90:	9c 81       	ldd	r25, Y+4	; 0x04
    3a92:	40 e0       	ldi	r20, 0x00	; 0
    3a94:	50 e0       	ldi	r21, 0x00	; 0
    3a96:	60 e4       	ldi	r22, 0x40	; 64
    3a98:	70 e4       	ldi	r23, 0x40	; 64
    3a9a:	0e 94 d5 1b 	call	0x37aa	; 0x37aa <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf>
	pidController->setYawIntegralGain(.008);
    3a9e:	8b 81       	ldd	r24, Y+3	; 0x03
    3aa0:	9c 81       	ldd	r25, Y+4	; 0x04
    3aa2:	4f e6       	ldi	r20, 0x6F	; 111
    3aa4:	52 e1       	ldi	r21, 0x12	; 18
    3aa6:	63 e0       	ldi	r22, 0x03	; 3
    3aa8:	7c e3       	ldi	r23, 0x3C	; 60
    3aaa:	0e 94 f5 1b 	call	0x37ea	; 0x37ea <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf>
	pidController->setYawDerivativeGain(.85);
    3aae:	8b 81       	ldd	r24, Y+3	; 0x03
    3ab0:	9c 81       	ldd	r25, Y+4	; 0x04
    3ab2:	4a e9       	ldi	r20, 0x9A	; 154
    3ab4:	59 e9       	ldi	r21, 0x99	; 153
    3ab6:	69 e5       	ldi	r22, 0x59	; 89
    3ab8:	7f e3       	ldi	r23, 0x3F	; 63
    3aba:	0e 94 15 1c 	call	0x382a	; 0x382a <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf>
	pidController->setYawAntiWindupGain(.1);
    3abe:	8b 81       	ldd	r24, Y+3	; 0x03
    3ac0:	9c 81       	ldd	r25, Y+4	; 0x04
    3ac2:	4d ec       	ldi	r20, 0xCD	; 205
    3ac4:	5c ec       	ldi	r21, 0xCC	; 204
    3ac6:	6c ec       	ldi	r22, 0xCC	; 204
    3ac8:	7d e3       	ldi	r23, 0x3D	; 61
    3aca:	0e 94 58 1c 	call	0x38b0	; 0x38b0 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf>
	
	pidController->setXProportionalGain(.289);
    3ace:	8b 81       	ldd	r24, Y+3	; 0x03
    3ad0:	9c 81       	ldd	r25, Y+4	; 0x04
    3ad2:	4f ec       	ldi	r20, 0xCF	; 207
    3ad4:	57 ef       	ldi	r21, 0xF7	; 247
    3ad6:	63 e9       	ldi	r22, 0x93	; 147
    3ad8:	7e e3       	ldi	r23, 0x3E	; 62
    3ada:	0e 94 03 1a 	call	0x3406	; 0x3406 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf>
	pidController->setXIntegralGain(0);
    3ade:	8b 81       	ldd	r24, Y+3	; 0x03
    3ae0:	9c 81       	ldd	r25, Y+4	; 0x04
    3ae2:	40 e0       	ldi	r20, 0x00	; 0
    3ae4:	50 e0       	ldi	r21, 0x00	; 0
    3ae6:	ba 01       	movw	r22, r20
    3ae8:	0e 94 c3 19 	call	0x3386	; 0x3386 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf>
	pidController->setXDerivativeGain(1.859);
    3aec:	8b 81       	ldd	r24, Y+3	; 0x03
    3aee:	9c 81       	ldd	r25, Y+4	; 0x04
    3af0:	46 eb       	ldi	r20, 0xB6	; 182
    3af2:	53 ef       	ldi	r21, 0xF3	; 243
    3af4:	6d ee       	ldi	r22, 0xED	; 237
    3af6:	7f e3       	ldi	r23, 0x3F	; 63
    3af8:	0e 94 e3 19 	call	0x33c6	; 0x33c6 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf>
	pidController->setXAntiWindupGain(0);
    3afc:	8b 81       	ldd	r24, Y+3	; 0x03
    3afe:	9c 81       	ldd	r25, Y+4	; 0x04
    3b00:	40 e0       	ldi	r20, 0x00	; 0
    3b02:	50 e0       	ldi	r21, 0x00	; 0
    3b04:	ba 01       	movw	r22, r20
    3b06:	0e 94 23 1a 	call	0x3446	; 0x3446 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf>
	pidController->setLongitudeInnerLoopGain(.031);
    3b0a:	8b 81       	ldd	r24, Y+3	; 0x03
    3b0c:	9c 81       	ldd	r25, Y+4	; 0x04
    3b0e:	46 eb       	ldi	r20, 0xB6	; 182
    3b10:	53 ef       	ldi	r21, 0xF3	; 243
    3b12:	6d ef       	ldi	r22, 0xFD	; 253
    3b14:	7c e3       	ldi	r23, 0x3C	; 60
    3b16:	0e 94 43 1a 	call	0x3486	; 0x3486 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf>
	
	pidController->setYProportionalGain(1.437);
    3b1a:	8b 81       	ldd	r24, Y+3	; 0x03
    3b1c:	9c 81       	ldd	r25, Y+4	; 0x04
    3b1e:	4e e9       	ldi	r20, 0x9E	; 158
    3b20:	5f ee       	ldi	r21, 0xEF	; 239
    3b22:	67 eb       	ldi	r22, 0xB7	; 183
    3b24:	7f e3       	ldi	r23, 0x3F	; 63
    3b26:	0e 94 e9 1a 	call	0x35d2	; 0x35d2 <_ZN10helicopter10controller13PIDController20setYProportionalGainEf>
	pidController->setYIntegralGain(0);
    3b2a:	8b 81       	ldd	r24, Y+3	; 0x03
    3b2c:	9c 81       	ldd	r25, Y+4	; 0x04
    3b2e:	40 e0       	ldi	r20, 0x00	; 0
    3b30:	50 e0       	ldi	r21, 0x00	; 0
    3b32:	ba 01       	movw	r22, r20
    3b34:	0e 94 a9 1a 	call	0x3552	; 0x3552 <_ZN10helicopter10controller13PIDController16setYIntegralGainEf>
	pidController->setYDerivativeGain(2.8363);
    3b38:	8b 81       	ldd	r24, Y+3	; 0x03
    3b3a:	9c 81       	ldd	r25, Y+4	; 0x04
    3b3c:	40 ef       	ldi	r20, 0xF0	; 240
    3b3e:	55 e8       	ldi	r21, 0x85	; 133
    3b40:	65 e3       	ldi	r22, 0x35	; 53
    3b42:	70 e4       	ldi	r23, 0x40	; 64
    3b44:	0e 94 c9 1a 	call	0x3592	; 0x3592 <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf>
	pidController->setYAntiWindupGain(0);
    3b48:	8b 81       	ldd	r24, Y+3	; 0x03
    3b4a:	9c 81       	ldd	r25, Y+4	; 0x04
    3b4c:	40 e0       	ldi	r20, 0x00	; 0
    3b4e:	50 e0       	ldi	r21, 0x00	; 0
    3b50:	ba 01       	movw	r22, r20
    3b52:	0e 94 09 1b 	call	0x3612	; 0x3612 <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf>
	pidController->setLateralInnerLoopGain(.092);	
    3b56:	8b 81       	ldd	r24, Y+3	; 0x03
    3b58:	9c 81       	ldd	r25, Y+4	; 0x04
    3b5a:	4f e7       	ldi	r20, 0x7F	; 127
    3b5c:	5a e6       	ldi	r21, 0x6A	; 106
    3b5e:	6c eb       	ldi	r22, 0xBC	; 188
    3b60:	7d e3       	ldi	r23, 0x3D	; 61
    3b62:	0e 94 29 1b 	call	0x3652	; 0x3652 <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf>
	
	//TODO: Don't forget that there is a difference between how often the sensors
	//are read and how often the control algorithm runs. 
	pidController->setIntervalPeriodSecs(PID_OUTER_LOOP_PERIOD);
    3b66:	8b 81       	ldd	r24, Y+3	; 0x03
    3b68:	9c 81       	ldd	r25, Y+4	; 0x04
    3b6a:	4d ec       	ldi	r20, 0xCD	; 205
    3b6c:	5c ec       	ldi	r21, 0xCC	; 204
    3b6e:	6c e4       	ldi	r22, 0x4C	; 76
    3b70:	7d e3       	ldi	r23, 0x3D	; 61
    3b72:	0e 94 35 1c 	call	0x386a	; 0x386a <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf>
//pidController->setMinYawServoControl (-10);
//pidController->setMaxYawServoControl(10);



	pidController->setControlMaxValue(1.0d);
    3b76:	8b 81       	ldd	r24, Y+3	; 0x03
    3b78:	9c 81       	ldd	r25, Y+4	; 0x04
    3b7a:	40 e0       	ldi	r20, 0x00	; 0
    3b7c:	50 e0       	ldi	r21, 0x00	; 0
    3b7e:	60 e8       	ldi	r22, 0x80	; 128
    3b80:	7f e3       	ldi	r23, 0x3F	; 63
    3b82:	0e 94 be 1c 	call	0x397c	; 0x397c <_ZN10helicopter10controller13PIDController18setControlMaxValueEf>
	pidController->setControlMinValue(-1.0d);
    3b86:	8b 81       	ldd	r24, Y+3	; 0x03
    3b88:	9c 81       	ldd	r25, Y+4	; 0x04
    3b8a:	40 e0       	ldi	r20, 0x00	; 0
    3b8c:	50 e0       	ldi	r21, 0x00	; 0
    3b8e:	60 e8       	ldi	r22, 0x80	; 128
    3b90:	7f eb       	ldi	r23, 0xBF	; 191
    3b92:	0e 94 e1 1c 	call	0x39c2	; 0x39c2 <_ZN10helicopter10controller13PIDController18setControlMinValueEf>
	
	pidController->setMinYawServoControl (-1.0d);
    3b96:	8b 81       	ldd	r24, Y+3	; 0x03
    3b98:	9c 81       	ldd	r25, Y+4	; 0x04
    3b9a:	40 e0       	ldi	r20, 0x00	; 0
    3b9c:	50 e0       	ldi	r21, 0x00	; 0
    3b9e:	60 e8       	ldi	r22, 0x80	; 128
    3ba0:	7f eb       	ldi	r23, 0xBF	; 191
    3ba2:	0e 94 78 1c 	call	0x38f0	; 0x38f0 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf>
	pidController->setMaxYawServoControl (1.0d);
    3ba6:	8b 81       	ldd	r24, Y+3	; 0x03
    3ba8:	9c 81       	ldd	r25, Y+4	; 0x04
    3baa:	40 e0       	ldi	r20, 0x00	; 0
    3bac:	50 e0       	ldi	r21, 0x00	; 0
    3bae:	60 e8       	ldi	r22, 0x80	; 128
    3bb0:	7f e3       	ldi	r23, 0x3F	; 63
    3bb2:	0e 94 9b 1c 	call	0x3936	; 0x3936 <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf>
	
	pidController->setMaxLongitudeServoControlValue(1.0d);
    3bb6:	8b 81       	ldd	r24, Y+3	; 0x03
    3bb8:	9c 81       	ldd	r25, Y+4	; 0x04
    3bba:	40 e0       	ldi	r20, 0x00	; 0
    3bbc:	50 e0       	ldi	r21, 0x00	; 0
    3bbe:	60 e8       	ldi	r22, 0x80	; 128
    3bc0:	7f e3       	ldi	r23, 0x3F	; 63
    3bc2:	0e 94 86 1a 	call	0x350c	; 0x350c <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf>
	pidController->setMinLongitudeServoControlValue(-1.0d);
    3bc6:	8b 81       	ldd	r24, Y+3	; 0x03
    3bc8:	9c 81       	ldd	r25, Y+4	; 0x04
    3bca:	40 e0       	ldi	r20, 0x00	; 0
    3bcc:	50 e0       	ldi	r21, 0x00	; 0
    3bce:	60 e8       	ldi	r22, 0x80	; 128
    3bd0:	7f eb       	ldi	r23, 0xBF	; 191
    3bd2:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf>
	
	pidController->setMaxLateralServoControlValue(1.0d);
    3bd6:	8b 81       	ldd	r24, Y+3	; 0x03
    3bd8:	9c 81       	ldd	r25, Y+4	; 0x04
    3bda:	40 e0       	ldi	r20, 0x00	; 0
    3bdc:	50 e0       	ldi	r21, 0x00	; 0
    3bde:	60 e8       	ldi	r22, 0x80	; 128
    3be0:	7f e3       	ldi	r23, 0x3F	; 63
    3be2:	0e 94 6c 1b 	call	0x36d8	; 0x36d8 <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf>
	pidController->setMinLateralServoControlValue(-1.0d);
    3be6:	8b 81       	ldd	r24, Y+3	; 0x03
    3be8:	9c 81       	ldd	r25, Y+4	; 0x04
    3bea:	40 e0       	ldi	r20, 0x00	; 0
    3bec:	50 e0       	ldi	r21, 0x00	; 0
    3bee:	60 e8       	ldi	r22, 0x80	; 128
    3bf0:	7f eb       	ldi	r23, 0xBF	; 191
    3bf2:	0e 94 49 1b 	call	0x3692	; 0x3692 <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf>
	
	pidController->setMaxMainRotorServoControlValue(1.0d);
    3bf6:	8b 81       	ldd	r24, Y+3	; 0x03
    3bf8:	9c 81       	ldd	r25, Y+4	; 0x04
    3bfa:	40 e0       	ldi	r20, 0x00	; 0
    3bfc:	50 e0       	ldi	r21, 0x00	; 0
    3bfe:	60 e8       	ldi	r22, 0x80	; 128
    3c00:	7f e3       	ldi	r23, 0x3F	; 63
    3c02:	0e 94 b2 1b 	call	0x3764	; 0x3764 <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf>
	pidController->setMinMainRotorServoControlValue(-1.0d);
    3c06:	8b 81       	ldd	r24, Y+3	; 0x03
    3c08:	9c 81       	ldd	r25, Y+4	; 0x04
    3c0a:	40 e0       	ldi	r20, 0x00	; 0
    3c0c:	50 e0       	ldi	r21, 0x00	; 0
    3c0e:	60 e8       	ldi	r22, 0x80	; 128
    3c10:	7f eb       	ldi	r23, 0xBF	; 191
    3c12:	0e 94 8f 1b 	call	0x371e	; 0x371e <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf>
}
    3c16:	0f 90       	pop	r0
    3c18:	0f 90       	pop	r0
    3c1a:	0f 90       	pop	r0
    3c1c:	0f 90       	pop	r0
    3c1e:	df 91       	pop	r29
    3c20:	cf 91       	pop	r28
    3c22:	08 95       	ret

00003c24 <main>:


int main(void)
{	
    3c24:	4f 92       	push	r4
    3c26:	5f 92       	push	r5
    3c28:	6f 92       	push	r6
    3c2a:	7f 92       	push	r7
    3c2c:	8f 92       	push	r8
    3c2e:	9f 92       	push	r9
    3c30:	af 92       	push	r10
    3c32:	bf 92       	push	r11
    3c34:	cf 92       	push	r12
    3c36:	df 92       	push	r13
    3c38:	ef 92       	push	r14
    3c3a:	ff 92       	push	r15
    3c3c:	0f 93       	push	r16
    3c3e:	1f 93       	push	r17
    3c40:	cf 93       	push	r28
    3c42:	df 93       	push	r29
    3c44:	cd b7       	in	r28, 0x3d	; 61
    3c46:	de b7       	in	r29, 0x3e	; 62
    3c48:	e9 97       	sbiw	r28, 0x39	; 57
    3c4a:	0f b6       	in	r0, 0x3f	; 63
    3c4c:	f8 94       	cli
    3c4e:	de bf       	out	0x3e, r29	; 62
    3c50:	0f be       	out	0x3f, r0	; 63
    3c52:	cd bf       	out	0x3d, r28	; 61
	SystemModel *model = new SystemModel();
    3c54:	8c ee       	ldi	r24, 0xEC	; 236
    3c56:	90 e0       	ldi	r25, 0x00	; 0
    3c58:	0e 94 01 3d 	call	0x7a02	; 0x7a02 <_Znwj>
    3c5c:	8c 01       	movw	r16, r24
    3c5e:	c8 01       	movw	r24, r16
    3c60:	0e 94 f3 15 	call	0x2be6	; 0x2be6 <_ZN10helicopter5model11SystemModelC1Ev>
    3c64:	1b 83       	std	Y+3, r17	; 0x03
    3c66:	0a 83       	std	Y+2, r16	; 0x02
	
	
	//TODO: This somehow needs to be a simulator servo driver
	//TODO: Setup the code so that it can be setup for a simulator or not setup for a simulator.
	ServoDriver *servoDriver = new ServoDriver();
    3c68:	8a e0       	ldi	r24, 0x0A	; 10
    3c6a:	90 e0       	ldi	r25, 0x00	; 0
    3c6c:	0e 94 01 3d 	call	0x7a02	; 0x7a02 <_Znwj>
    3c70:	8c 01       	movw	r16, r24
    3c72:	c8 01       	movw	r24, r16
    3c74:	0e 94 a1 19 	call	0x3342	; 0x3342 <_ZN10helicopter7drivers11ServoDriverC1Ev>
    3c78:	1d 83       	std	Y+5, r17	; 0x05
    3c7a:	0c 83       	std	Y+4, r16	; 0x04
	
	PIDController *pidController = new PIDController(model, servoDriver);
    3c7c:	88 e7       	ldi	r24, 0x78	; 120
    3c7e:	90 e0       	ldi	r25, 0x00	; 0
    3c80:	0e 94 01 3d 	call	0x7a02	; 0x7a02 <_Znwj>
    3c84:	8c 01       	movw	r16, r24
    3c86:	2c 81       	ldd	r18, Y+4	; 0x04
    3c88:	3d 81       	ldd	r19, Y+5	; 0x05
    3c8a:	8a 81       	ldd	r24, Y+2	; 0x02
    3c8c:	9b 81       	ldd	r25, Y+3	; 0x03
    3c8e:	a9 01       	movw	r20, r18
    3c90:	bc 01       	movw	r22, r24
    3c92:	c8 01       	movw	r24, r16
    3c94:	0e 94 46 07 	call	0xe8c	; 0xe8c <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelEPNS_7drivers11ServoDriverE>
    3c98:	1f 83       	std	Y+7, r17	; 0x07
    3c9a:	0e 83       	std	Y+6, r16	; 0x06
	
	
	
	setupDefaultsandReferencePosition(model, pidController);
    3c9c:	2e 81       	ldd	r18, Y+6	; 0x06
    3c9e:	3f 81       	ldd	r19, Y+7	; 0x07
    3ca0:	8a 81       	ldd	r24, Y+2	; 0x02
    3ca2:	9b 81       	ldd	r25, Y+3	; 0x03
    3ca4:	b9 01       	movw	r22, r18
    3ca6:	0e 94 04 1d 	call	0x3a08	; 0x3a08 <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE>
	
	//Timer *timer = new Timer(F_CPU,PRESCALE_BY_TENTWENTYFOUR,75); //Good timeout when using the radio
	Timer *timer = new Timer(F_CPU, PRESCALE_BY_TENTWENTYFOUR, 10); //Good timeout when using the USB
    3caa:	88 e0       	ldi	r24, 0x08	; 8
    3cac:	90 e0       	ldi	r25, 0x00	; 0
    3cae:	0e 94 01 3d 	call	0x7a02	; 0x7a02 <_Znwj>
    3cb2:	6c 01       	movw	r12, r24
    3cb4:	1a e0       	ldi	r17, 0x0A	; 10
    3cb6:	e1 2e       	mov	r14, r17
    3cb8:	f1 2c       	mov	r15, r1
    3cba:	00 e0       	ldi	r16, 0x00	; 0
    3cbc:	10 e0       	ldi	r17, 0x00	; 0
    3cbe:	20 e0       	ldi	r18, 0x00	; 0
    3cc0:	34 e0       	ldi	r19, 0x04	; 4
    3cc2:	40 e0       	ldi	r20, 0x00	; 0
    3cc4:	54 e2       	ldi	r21, 0x24	; 36
    3cc6:	64 ef       	ldi	r22, 0xF4	; 244
    3cc8:	70 e0       	ldi	r23, 0x00	; 0
    3cca:	c6 01       	movw	r24, r12
    3ccc:	0e 94 4d 15 	call	0x2a9a	; 0x2a9a <_ZN10helicopter4util5TimerC1Em9PRESCALERm>
    3cd0:	d9 86       	std	Y+9, r13	; 0x09
    3cd2:	c8 86       	std	Y+8, r12	; 0x08
	
	//Create a driver for communicating with the Ground Control Station (GCS).
	//SerialDriver *serialDriver = new SerialDriver(57600, SerialDriver::Zero, timer, true, true);  
	SerialDriver *serialDriver = new SerialDriver(76800, SerialDriver::Zero, timer, true, true);  
    3cd4:	8b e0       	ldi	r24, 0x0B	; 11
    3cd6:	90 e0       	ldi	r25, 0x00	; 0
    3cd8:	0e 94 01 3d 	call	0x7a02	; 0x7a02 <_Znwj>
    3cdc:	5c 01       	movw	r10, r24
    3cde:	88 85       	ldd	r24, Y+8	; 0x08
    3ce0:	99 85       	ldd	r25, Y+9	; 0x09
    3ce2:	cc 24       	eor	r12, r12
    3ce4:	c3 94       	inc	r12
    3ce6:	ee 24       	eor	r14, r14
    3ce8:	e3 94       	inc	r14
    3cea:	8c 01       	movw	r16, r24
    3cec:	20 e0       	ldi	r18, 0x00	; 0
    3cee:	40 e0       	ldi	r20, 0x00	; 0
    3cf0:	5c e2       	ldi	r21, 0x2C	; 44
    3cf2:	61 e0       	ldi	r22, 0x01	; 1
    3cf4:	70 e0       	ldi	r23, 0x00	; 0
    3cf6:	c5 01       	movw	r24, r10
    3cf8:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <_ZN10helicopter7drivers12SerialDriverC1EmNS1_8UartPortEPNS_4util5TimerEbb>
    3cfc:	bb 86       	std	Y+11, r11	; 0x0b
    3cfe:	aa 86       	std	Y+10, r10	; 0x0a
	serialDriver->initialize();
    3d00:	8a 85       	ldd	r24, Y+10	; 0x0a
    3d02:	9b 85       	ldd	r25, Y+11	; 0x0b
    3d04:	fc 01       	movw	r30, r24
    3d06:	80 81       	ld	r24, Z
    3d08:	91 81       	ldd	r25, Z+1	; 0x01
    3d0a:	04 96       	adiw	r24, 0x04	; 4
    3d0c:	fc 01       	movw	r30, r24
    3d0e:	20 81       	ld	r18, Z
    3d10:	31 81       	ldd	r19, Z+1	; 0x01
    3d12:	8a 85       	ldd	r24, Y+10	; 0x0a
    3d14:	9b 85       	ldd	r25, Y+11	; 0x0b
    3d16:	f9 01       	movw	r30, r18
    3d18:	19 95       	eicall
	
	GroundControlStationInterface *gcsInterface = new GroundControlStationInterface(serialDriver);
    3d1a:	82 e0       	ldi	r24, 0x02	; 2
    3d1c:	90 e0       	ldi	r25, 0x00	; 0
    3d1e:	0e 94 01 3d 	call	0x7a02	; 0x7a02 <_Znwj>
    3d22:	8c 01       	movw	r16, r24
    3d24:	8a 85       	ldd	r24, Y+10	; 0x0a
    3d26:	9b 85       	ldd	r25, Y+11	; 0x0b
    3d28:	bc 01       	movw	r22, r24
    3d2a:	c8 01       	movw	r24, r16
    3d2c:	0e 94 db 15 	call	0x2bb6	; 0x2bb6 <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverE>
    3d30:	1d 87       	std	Y+13, r17	; 0x0d
    3d32:	0c 87       	std	Y+12, r16	; 0x0c
	//This frequency works well for radio.
//	SimTelemetryTask *simTelemTask = new SimTelemetryTask(radioInterface, model, 0, 10);//starting at tick 1, execute 20 times a second
//	TransmitTelemetryTask *transTelemTask = new TransmitTelemetryTask(radioInterface, model, 1, 10);//starting at tick 2, execute 20 times a second

	//this frequency works well for USB.
	SimTelemetryTask *simTelemTask = new SimTelemetryTask(gcsInterface, model, pidController,0, 4);//starting at tick 0, execute 50 times a second
    3d34:	8d e0       	ldi	r24, 0x0D	; 13
    3d36:	90 e0       	ldi	r25, 0x00	; 0
    3d38:	0e 94 01 3d 	call	0x7a02	; 0x7a02 <_Znwj>
    3d3c:	6c 01       	movw	r12, r24
    3d3e:	2e 81       	ldd	r18, Y+6	; 0x06
    3d40:	3f 81       	ldd	r19, Y+7	; 0x07
    3d42:	4a 81       	ldd	r20, Y+2	; 0x02
    3d44:	5b 81       	ldd	r21, Y+3	; 0x03
    3d46:	8c 85       	ldd	r24, Y+12	; 0x0c
    3d48:	9d 85       	ldd	r25, Y+13	; 0x0d
    3d4a:	68 94       	set
    3d4c:	ee 24       	eor	r14, r14
    3d4e:	e2 f8       	bld	r14, 2
    3d50:	f1 2c       	mov	r15, r1
    3d52:	00 e0       	ldi	r16, 0x00	; 0
    3d54:	10 e0       	ldi	r17, 0x00	; 0
    3d56:	bc 01       	movw	r22, r24
    3d58:	c6 01       	movw	r24, r12
    3d5a:	0e 94 6c 39 	call	0x72d8	; 0x72d8 <_ZN10helicopter5tasks16SimTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEPNS_10controller13PIDControllerEii>
    3d5e:	df 86       	std	Y+15, r13	; 0x0f
    3d60:	ce 86       	std	Y+14, r12	; 0x0e
	TransmitTelemetryTask *transTelemTask = new TransmitTelemetryTask(gcsInterface, model, 1, 4);//starting at tick 1, execute 50 times a second
    3d62:	8b e0       	ldi	r24, 0x0B	; 11
    3d64:	90 e0       	ldi	r25, 0x00	; 0
    3d66:	0e 94 01 3d 	call	0x7a02	; 0x7a02 <_Znwj>
    3d6a:	7c 01       	movw	r14, r24
    3d6c:	4a 81       	ldd	r20, Y+2	; 0x02
    3d6e:	5b 81       	ldd	r21, Y+3	; 0x03
    3d70:	8c 85       	ldd	r24, Y+12	; 0x0c
    3d72:	9d 85       	ldd	r25, Y+13	; 0x0d
    3d74:	04 e0       	ldi	r16, 0x04	; 4
    3d76:	10 e0       	ldi	r17, 0x00	; 0
    3d78:	21 e0       	ldi	r18, 0x01	; 1
    3d7a:	30 e0       	ldi	r19, 0x00	; 0
    3d7c:	bc 01       	movw	r22, r24
    3d7e:	c7 01       	movw	r24, r14
    3d80:	0e 94 58 3c 	call	0x78b0	; 0x78b0 <_ZN10helicopter5tasks21TransmitTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEii>
    3d84:	f9 8a       	std	Y+17, r15	; 0x11
    3d86:	e8 8a       	std	Y+16, r14	; 0x10
	
	FlashLEDTask *flashTask = new FlashLEDTask(2, SCHEDULER_TICK_FREQUENCY_HZ);//starting at tick 2, execute once a second
    3d88:	8a e0       	ldi	r24, 0x0A	; 10
    3d8a:	90 e0       	ldi	r25, 0x00	; 0
    3d8c:	0e 94 01 3d 	call	0x7a02	; 0x7a02 <_Znwj>
    3d90:	8c 01       	movw	r16, r24
    3d92:	23 e0       	ldi	r18, 0x03	; 3
    3d94:	30 e0       	ldi	r19, 0x00	; 0
    3d96:	46 e4       	ldi	r20, 0x46	; 70
    3d98:	50 e0       	ldi	r21, 0x00	; 0
    3d9a:	62 e0       	ldi	r22, 0x02	; 2
    3d9c:	70 e0       	ldi	r23, 0x00	; 0
    3d9e:	c8 01       	movw	r24, r16
    3da0:	0e 94 96 14 	call	0x292c	; 0x292c <_ZN10helicopter5tasks12FlashLEDTaskC1Eiii>
    3da4:	1b 8b       	std	Y+19, r17	; 0x13
    3da6:	0a 8b       	std	Y+18, r16	; 0x12
		
		
	SensorProcessingTask *sensorProcessingTask = new SensorProcessingTask(model, 5, 4);
    3da8:	89 e0       	ldi	r24, 0x09	; 9
    3daa:	90 e0       	ldi	r25, 0x00	; 0
    3dac:	0e 94 01 3d 	call	0x7a02	; 0x7a02 <_Znwj>
    3db0:	8c 01       	movw	r16, r24
    3db2:	8a 81       	ldd	r24, Y+2	; 0x02
    3db4:	9b 81       	ldd	r25, Y+3	; 0x03
    3db6:	24 e0       	ldi	r18, 0x04	; 4
    3db8:	30 e0       	ldi	r19, 0x00	; 0
    3dba:	45 e0       	ldi	r20, 0x05	; 5
    3dbc:	50 e0       	ldi	r21, 0x00	; 0
    3dbe:	bc 01       	movw	r22, r24
    3dc0:	c8 01       	movw	r24, r16
    3dc2:	0e 94 80 37 	call	0x6f00	; 0x6f00 <_ZN10helicopter5tasks20SensorProcessingTaskC1EPNS_5model11SystemModelEii>
    3dc6:	1d 8b       	std	Y+21, r17	; 0x15
    3dc8:	0c 8b       	std	Y+20, r16	; 0x14
		
	//execute the pid outer loop at the PID_OUTER_LOOP_PERIOD rate. The division is to convert the period into ticks for the scheduler.
	PIDOuterLoopTask *pidOuterLoop = new PIDOuterLoopTask(pidController, 3, (SCHEDULER_TICK_FREQUENCY_HZ / (1/PID_OUTER_LOOP_PERIOD)));
    3dca:	89 e0       	ldi	r24, 0x09	; 9
    3dcc:	90 e0       	ldi	r25, 0x00	; 0
    3dce:	0e 94 01 3d 	call	0x7a02	; 0x7a02 <_Znwj>
    3dd2:	8c 01       	movw	r16, r24
    3dd4:	8e 81       	ldd	r24, Y+6	; 0x06
    3dd6:	9f 81       	ldd	r25, Y+7	; 0x07
    3dd8:	23 e0       	ldi	r18, 0x03	; 3
    3dda:	30 e0       	ldi	r19, 0x00	; 0
    3ddc:	43 e0       	ldi	r20, 0x03	; 3
    3dde:	50 e0       	ldi	r21, 0x00	; 0
    3de0:	bc 01       	movw	r22, r24
    3de2:	c8 01       	movw	r24, r16
    3de4:	0e 94 2e 36 	call	0x6c5c	; 0x6c5c <_ZN10helicopter5tasks16PIDOuterLoopTaskC1EPNS_10controller13PIDControllerEii>
    3de8:	1f 8b       	std	Y+23, r17	; 0x17
    3dea:	0e 8b       	std	Y+22, r16	; 0x16
	PIDInnerLoopTask *pidInnerLoop = new PIDInnerLoopTask(pidController, 4, (SCHEDULER_TICK_FREQUENCY_HZ / (1/PID_OUTER_LOOP_PERIOD)));
    3dec:	89 e0       	ldi	r24, 0x09	; 9
    3dee:	90 e0       	ldi	r25, 0x00	; 0
    3df0:	0e 94 01 3d 	call	0x7a02	; 0x7a02 <_Znwj>
    3df4:	8c 01       	movw	r16, r24
    3df6:	8e 81       	ldd	r24, Y+6	; 0x06
    3df8:	9f 81       	ldd	r25, Y+7	; 0x07
    3dfa:	23 e0       	ldi	r18, 0x03	; 3
    3dfc:	30 e0       	ldi	r19, 0x00	; 0
    3dfe:	44 e0       	ldi	r20, 0x04	; 4
    3e00:	50 e0       	ldi	r21, 0x00	; 0
    3e02:	bc 01       	movw	r22, r24
    3e04:	c8 01       	movw	r24, r16
    3e06:	0e 94 aa 35 	call	0x6b54	; 0x6b54 <_ZN10helicopter5tasks16PIDInnerLoopTaskC1EPNS_10controller13PIDControllerEii>
    3e0a:	19 8f       	std	Y+25, r17	; 0x19
    3e0c:	08 8f       	std	Y+24, r16	; 0x18
	


	Scheduler *scheduler = Scheduler::getScheduler();
    3e0e:	0e 94 06 33 	call	0x660c	; 0x660c <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>
    3e12:	9b 8f       	std	Y+27, r25	; 0x1b
    3e14:	8a 8f       	std	Y+26, r24	; 0x1a
	
	scheduler->addTask(flashTask);
    3e16:	2a 89       	ldd	r18, Y+18	; 0x12
    3e18:	3b 89       	ldd	r19, Y+19	; 0x13
    3e1a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3e1c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3e1e:	b9 01       	movw	r22, r18
    3e20:	0e 94 96 33 	call	0x672c	; 0x672c <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(simTelemTask);
    3e24:	2e 85       	ldd	r18, Y+14	; 0x0e
    3e26:	3f 85       	ldd	r19, Y+15	; 0x0f
    3e28:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3e2a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3e2c:	b9 01       	movw	r22, r18
    3e2e:	0e 94 96 33 	call	0x672c	; 0x672c <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(transTelemTask);
    3e32:	28 89       	ldd	r18, Y+16	; 0x10
    3e34:	39 89       	ldd	r19, Y+17	; 0x11
    3e36:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3e38:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3e3a:	b9 01       	movw	r22, r18
    3e3c:	0e 94 96 33 	call	0x672c	; 0x672c <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(pidOuterLoop);
    3e40:	2e 89       	ldd	r18, Y+22	; 0x16
    3e42:	3f 89       	ldd	r19, Y+23	; 0x17
    3e44:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3e46:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3e48:	b9 01       	movw	r22, r18
    3e4a:	0e 94 96 33 	call	0x672c	; 0x672c <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(pidInnerLoop);
    3e4e:	28 8d       	ldd	r18, Y+24	; 0x18
    3e50:	39 8d       	ldd	r19, Y+25	; 0x19
    3e52:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3e54:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3e56:	b9 01       	movw	r22, r18
    3e58:	0e 94 96 33 	call	0x672c	; 0x672c <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(sensorProcessingTask);
    3e5c:	2c 89       	ldd	r18, Y+20	; 0x14
    3e5e:	3d 89       	ldd	r19, Y+21	; 0x15
    3e60:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3e62:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3e64:	b9 01       	movw	r22, r18
    3e66:	0e 94 96 33 	call	0x672c	; 0x672c <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	
	//Wait until we receive location data before starting the scheduler
	//TODO rework this
	bool isInitialized = false;
    3e6a:	19 82       	std	Y+1, r1	; 0x01
	while (!isInitialized)
    3e6c:	2e c1       	rjmp	.+604    	; 0x40ca <main+0x4a6>
	{
		simTelemTask->runTaskImpl();
    3e6e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3e70:	9f 85       	ldd	r25, Y+15	; 0x0f
    3e72:	fc 01       	movw	r30, r24
    3e74:	80 81       	ld	r24, Z
    3e76:	91 81       	ldd	r25, Z+1	; 0x01
    3e78:	fc 01       	movw	r30, r24
    3e7a:	20 81       	ld	r18, Z
    3e7c:	31 81       	ldd	r19, Z+1	; 0x01
    3e7e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3e80:	9f 85       	ldd	r25, Y+15	; 0x0f
    3e82:	f9 01       	movw	r30, r18
    3e84:	19 95       	eicall
		
		if (model->LatitudeDegrees() != 0 && model->LongitudeDegrees() != 0)
    3e86:	8a 81       	ldd	r24, Y+2	; 0x02
    3e88:	9b 81       	ldd	r25, Y+3	; 0x03
    3e8a:	0e 94 ff 18 	call	0x31fe	; 0x31fe <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    3e8e:	dc 01       	movw	r26, r24
    3e90:	cb 01       	movw	r24, r22
    3e92:	20 e0       	ldi	r18, 0x00	; 0
    3e94:	30 e0       	ldi	r19, 0x00	; 0
    3e96:	a9 01       	movw	r20, r18
    3e98:	bc 01       	movw	r22, r24
    3e9a:	cd 01       	movw	r24, r26
    3e9c:	0e 94 66 43 	call	0x86cc	; 0x86cc <__cmpsf2>
    3ea0:	88 23       	and	r24, r24
    3ea2:	89 f0       	breq	.+34     	; 0x3ec6 <main+0x2a2>
    3ea4:	8a 81       	ldd	r24, Y+2	; 0x02
    3ea6:	9b 81       	ldd	r25, Y+3	; 0x03
    3ea8:	0e 94 17 19 	call	0x322e	; 0x322e <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    3eac:	dc 01       	movw	r26, r24
    3eae:	cb 01       	movw	r24, r22
    3eb0:	20 e0       	ldi	r18, 0x00	; 0
    3eb2:	30 e0       	ldi	r19, 0x00	; 0
    3eb4:	a9 01       	movw	r20, r18
    3eb6:	bc 01       	movw	r22, r24
    3eb8:	cd 01       	movw	r24, r26
    3eba:	0e 94 66 43 	call	0x86cc	; 0x86cc <__cmpsf2>
    3ebe:	88 23       	and	r24, r24
    3ec0:	11 f0       	breq	.+4      	; 0x3ec6 <main+0x2a2>
    3ec2:	81 e0       	ldi	r24, 0x01	; 1
    3ec4:	01 c0       	rjmp	.+2      	; 0x3ec8 <main+0x2a4>
    3ec6:	80 e0       	ldi	r24, 0x00	; 0
    3ec8:	88 23       	and	r24, r24
    3eca:	09 f4       	brne	.+2      	; 0x3ece <main+0x2aa>
    3ecc:	82 c0       	rjmp	.+260    	; 0x3fd2 <main+0x3ae>
		{
			isInitialized = true;
    3ece:	81 e0       	ldi	r24, 0x01	; 1
    3ed0:	89 83       	std	Y+1, r24	; 0x01
			
			//ecefReferenceX, ecefReferenceY, ecefReferenceZ,ecefToLocalNEDRotationMatrix,
			CoordinateUtil::CalculateECEFToLocalNEDRotationMatrix(model->LatitudeDegrees(), model->LongitudeDegrees(), model->EcefToLocalNEDRotationMatrix);
    3ed2:	8a 81       	ldd	r24, Y+2	; 0x02
    3ed4:	9b 81       	ldd	r25, Y+3	; 0x03
    3ed6:	8c 01       	movw	r16, r24
    3ed8:	08 53       	subi	r16, 0x38	; 56
    3eda:	1f 4f       	sbci	r17, 0xFF	; 255
    3edc:	8a 81       	ldd	r24, Y+2	; 0x02
    3ede:	9b 81       	ldd	r25, Y+3	; 0x03
    3ee0:	0e 94 17 19 	call	0x322e	; 0x322e <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    3ee4:	6b 01       	movw	r12, r22
    3ee6:	7c 01       	movw	r14, r24
    3ee8:	8a 81       	ldd	r24, Y+2	; 0x02
    3eea:	9b 81       	ldd	r25, Y+3	; 0x03
    3eec:	0e 94 ff 18 	call	0x31fe	; 0x31fe <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    3ef0:	dc 01       	movw	r26, r24
    3ef2:	cb 01       	movw	r24, r22
    3ef4:	a7 01       	movw	r20, r14
    3ef6:	96 01       	movw	r18, r12
    3ef8:	bc 01       	movw	r22, r24
    3efa:	cd 01       	movw	r24, r26
    3efc:	0e 94 6c 3d 	call	0x7ad8	; 0x7ad8 <_ZN10helicopter4util14CoordinateUtil37CalculateECEFToLocalNEDRotationMatrixEffPA3_f>
	
			float initialXPositionEcef = 0;
    3f00:	1a a6       	std	Y+42, r1	; 0x2a
    3f02:	1b a6       	std	Y+43, r1	; 0x2b
    3f04:	1c a6       	std	Y+44, r1	; 0x2c
    3f06:	1d a6       	std	Y+45, r1	; 0x2d
			float initialYPositionEcef = 0;
    3f08:	1e a6       	std	Y+46, r1	; 0x2e
    3f0a:	1f a6       	std	Y+47, r1	; 0x2f
    3f0c:	18 aa       	std	Y+48, r1	; 0x30
    3f0e:	19 aa       	std	Y+49, r1	; 0x31
			float initialZPositionEcef = 0;
    3f10:	1a aa       	std	Y+50, r1	; 0x32
    3f12:	1b aa       	std	Y+51, r1	; 0x33
    3f14:	1c aa       	std	Y+52, r1	; 0x34
    3f16:	1d aa       	std	Y+53, r1	; 0x35
			CoordinateUtil::ConvertFromGeodeticToECEF(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), initialXPositionEcef, initialYPositionEcef, initialZPositionEcef);
    3f18:	8a 81       	ldd	r24, Y+2	; 0x02
    3f1a:	9b 81       	ldd	r25, Y+3	; 0x03
    3f1c:	0e 94 b4 05 	call	0xb68	; 0xb68 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    3f20:	6e ab       	std	Y+54, r22	; 0x36
    3f22:	7f ab       	std	Y+55, r23	; 0x37
    3f24:	88 af       	std	Y+56, r24	; 0x38
    3f26:	99 af       	std	Y+57, r25	; 0x39
    3f28:	8a 81       	ldd	r24, Y+2	; 0x02
    3f2a:	9b 81       	ldd	r25, Y+3	; 0x03
    3f2c:	0e 94 17 19 	call	0x322e	; 0x322e <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    3f30:	2b 01       	movw	r4, r22
    3f32:	3c 01       	movw	r6, r24
    3f34:	8a 81       	ldd	r24, Y+2	; 0x02
    3f36:	9b 81       	ldd	r25, Y+3	; 0x03
    3f38:	0e 94 ff 18 	call	0x31fe	; 0x31fe <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    3f3c:	dc 01       	movw	r26, r24
    3f3e:	cb 01       	movw	r24, r22
    3f40:	be 01       	movw	r22, r28
    3f42:	6e 5c       	subi	r22, 0xCE	; 206
    3f44:	7f 4f       	sbci	r23, 0xFF	; 255
    3f46:	ae 01       	movw	r20, r28
    3f48:	42 5d       	subi	r20, 0xD2	; 210
    3f4a:	5f 4f       	sbci	r21, 0xFF	; 255
    3f4c:	9e 01       	movw	r18, r28
    3f4e:	26 5d       	subi	r18, 0xD6	; 214
    3f50:	3f 4f       	sbci	r19, 0xFF	; 255
    3f52:	4b 01       	movw	r8, r22
    3f54:	5a 01       	movw	r10, r20
    3f56:	69 01       	movw	r12, r18
    3f58:	ee a8       	ldd	r14, Y+54	; 0x36
    3f5a:	ff a8       	ldd	r15, Y+55	; 0x37
    3f5c:	08 ad       	ldd	r16, Y+56	; 0x38
    3f5e:	19 ad       	ldd	r17, Y+57	; 0x39
    3f60:	a3 01       	movw	r20, r6
    3f62:	92 01       	movw	r18, r4
    3f64:	bc 01       	movw	r22, r24
    3f66:	cd 01       	movw	r24, r26
    3f68:	0e 94 1b 3f 	call	0x7e36	; 0x7e36 <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEfffRfS2_S2_>
			
			model->InitialXPositionEcef(initialXPositionEcef);
    3f6c:	8a a5       	ldd	r24, Y+42	; 0x2a
    3f6e:	9b a5       	ldd	r25, Y+43	; 0x2b
    3f70:	ac a5       	ldd	r26, Y+44	; 0x2c
    3f72:	bd a5       	ldd	r27, Y+45	; 0x2d
    3f74:	bc 01       	movw	r22, r24
    3f76:	cd 01       	movw	r24, r26
    3f78:	0e 94 d5 43 	call	0x87aa	; 0x87aa <__fixsfsi>
    3f7c:	dc 01       	movw	r26, r24
    3f7e:	cb 01       	movw	r24, r22
    3f80:	2a 81       	ldd	r18, Y+2	; 0x02
    3f82:	3b 81       	ldd	r19, Y+3	; 0x03
    3f84:	ac 01       	movw	r20, r24
    3f86:	bd 01       	movw	r22, r26
    3f88:	c9 01       	movw	r24, r18
    3f8a:	0e 94 2f 19 	call	0x325e	; 0x325e <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl>
			model->InitialYPositionEcef(initialYPositionEcef);
    3f8e:	8e a5       	ldd	r24, Y+46	; 0x2e
    3f90:	9f a5       	ldd	r25, Y+47	; 0x2f
    3f92:	a8 a9       	ldd	r26, Y+48	; 0x30
    3f94:	b9 a9       	ldd	r27, Y+49	; 0x31
    3f96:	bc 01       	movw	r22, r24
    3f98:	cd 01       	movw	r24, r26
    3f9a:	0e 94 d5 43 	call	0x87aa	; 0x87aa <__fixsfsi>
    3f9e:	dc 01       	movw	r26, r24
    3fa0:	cb 01       	movw	r24, r22
    3fa2:	2a 81       	ldd	r18, Y+2	; 0x02
    3fa4:	3b 81       	ldd	r19, Y+3	; 0x03
    3fa6:	ac 01       	movw	r20, r24
    3fa8:	bd 01       	movw	r22, r26
    3faa:	c9 01       	movw	r24, r18
    3fac:	0e 94 55 19 	call	0x32aa	; 0x32aa <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl>
			model->InitialZPositionEcef(initialZPositionEcef);
    3fb0:	8a a9       	ldd	r24, Y+50	; 0x32
    3fb2:	9b a9       	ldd	r25, Y+51	; 0x33
    3fb4:	ac a9       	ldd	r26, Y+52	; 0x34
    3fb6:	bd a9       	ldd	r27, Y+53	; 0x35
    3fb8:	bc 01       	movw	r22, r24
    3fba:	cd 01       	movw	r24, r26
    3fbc:	0e 94 d5 43 	call	0x87aa	; 0x87aa <__fixsfsi>
    3fc0:	dc 01       	movw	r26, r24
    3fc2:	cb 01       	movw	r24, r22
    3fc4:	2a 81       	ldd	r18, Y+2	; 0x02
    3fc6:	3b 81       	ldd	r19, Y+3	; 0x03
    3fc8:	ac 01       	movw	r20, r24
    3fca:	bd 01       	movw	r22, r26
    3fcc:	c9 01       	movw	r24, r18
    3fce:	0e 94 7b 19 	call	0x32f6	; 0x32f6 <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl>
    3fd2:	80 e0       	ldi	r24, 0x00	; 0
    3fd4:	90 e0       	ldi	r25, 0x00	; 0
    3fd6:	a8 ec       	ldi	r26, 0xC8	; 200
    3fd8:	b2 e4       	ldi	r27, 0x42	; 66
    3fda:	8c 8f       	std	Y+28, r24	; 0x1c
    3fdc:	9d 8f       	std	Y+29, r25	; 0x1d
    3fde:	ae 8f       	std	Y+30, r26	; 0x1e
    3fe0:	bf 8f       	std	Y+31, r27	; 0x1f
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    3fe2:	20 e0       	ldi	r18, 0x00	; 0
    3fe4:	30 e0       	ldi	r19, 0x00	; 0
    3fe6:	4a e7       	ldi	r20, 0x7A	; 122
    3fe8:	55 e4       	ldi	r21, 0x45	; 69
    3fea:	6c 8d       	ldd	r22, Y+28	; 0x1c
    3fec:	7d 8d       	ldd	r23, Y+29	; 0x1d
    3fee:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3ff0:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3ff2:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    3ff6:	dc 01       	movw	r26, r24
    3ff8:	cb 01       	movw	r24, r22
    3ffa:	88 a3       	std	Y+32, r24	; 0x20
    3ffc:	99 a3       	std	Y+33, r25	; 0x21
    3ffe:	aa a3       	std	Y+34, r26	; 0x22
    4000:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    4002:	20 e0       	ldi	r18, 0x00	; 0
    4004:	30 e0       	ldi	r19, 0x00	; 0
    4006:	40 e8       	ldi	r20, 0x80	; 128
    4008:	5f e3       	ldi	r21, 0x3F	; 63
    400a:	68 a1       	ldd	r22, Y+32	; 0x20
    400c:	79 a1       	ldd	r23, Y+33	; 0x21
    400e:	8a a1       	ldd	r24, Y+34	; 0x22
    4010:	9b a1       	ldd	r25, Y+35	; 0x23
    4012:	0e 94 66 43 	call	0x86cc	; 0x86cc <__cmpsf2>
    4016:	88 23       	and	r24, r24
    4018:	2c f4       	brge	.+10     	; 0x4024 <main+0x400>
		__ticks = 1;
    401a:	81 e0       	ldi	r24, 0x01	; 1
    401c:	90 e0       	ldi	r25, 0x00	; 0
    401e:	9d a3       	std	Y+37, r25	; 0x25
    4020:	8c a3       	std	Y+36, r24	; 0x24
    4022:	46 c0       	rjmp	.+140    	; 0x40b0 <main+0x48c>
	else if (__tmp > 65535)
    4024:	20 e0       	ldi	r18, 0x00	; 0
    4026:	3f ef       	ldi	r19, 0xFF	; 255
    4028:	4f e7       	ldi	r20, 0x7F	; 127
    402a:	57 e4       	ldi	r21, 0x47	; 71
    402c:	68 a1       	ldd	r22, Y+32	; 0x20
    402e:	79 a1       	ldd	r23, Y+33	; 0x21
    4030:	8a a1       	ldd	r24, Y+34	; 0x22
    4032:	9b a1       	ldd	r25, Y+35	; 0x23
    4034:	0e 94 44 45 	call	0x8a88	; 0x8a88 <__gesf2>
    4038:	18 16       	cp	r1, r24
    403a:	84 f5       	brge	.+96     	; 0x409c <main+0x478>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    403c:	20 e0       	ldi	r18, 0x00	; 0
    403e:	30 e0       	ldi	r19, 0x00	; 0
    4040:	40 e2       	ldi	r20, 0x20	; 32
    4042:	51 e4       	ldi	r21, 0x41	; 65
    4044:	6c 8d       	ldd	r22, Y+28	; 0x1c
    4046:	7d 8d       	ldd	r23, Y+29	; 0x1d
    4048:	8e 8d       	ldd	r24, Y+30	; 0x1e
    404a:	9f 8d       	ldd	r25, Y+31	; 0x1f
    404c:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    4050:	dc 01       	movw	r26, r24
    4052:	cb 01       	movw	r24, r22
    4054:	bc 01       	movw	r22, r24
    4056:	cd 01       	movw	r24, r26
    4058:	0e 94 da 43 	call	0x87b4	; 0x87b4 <__fixunssfsi>
    405c:	dc 01       	movw	r26, r24
    405e:	cb 01       	movw	r24, r22
    4060:	9d a3       	std	Y+37, r25	; 0x25
    4062:	8c a3       	std	Y+36, r24	; 0x24
    4064:	12 c0       	rjmp	.+36     	; 0x408a <main+0x466>
    4066:	80 e9       	ldi	r24, 0x90	; 144
    4068:	91 e0       	ldi	r25, 0x01	; 1
    406a:	9f a3       	std	Y+39, r25	; 0x27
    406c:	8e a3       	std	Y+38, r24	; 0x26
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    406e:	8e a1       	ldd	r24, Y+38	; 0x26
    4070:	9f a1       	ldd	r25, Y+39	; 0x27
    4072:	8c 01       	movw	r16, r24
    4074:	c8 01       	movw	r24, r16
    4076:	01 97       	sbiw	r24, 0x01	; 1
    4078:	f1 f7       	brne	.-4      	; 0x4076 <main+0x452>
    407a:	8c 01       	movw	r16, r24
    407c:	1f a3       	std	Y+39, r17	; 0x27
    407e:	0e a3       	std	Y+38, r16	; 0x26
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4080:	8c a1       	ldd	r24, Y+36	; 0x24
    4082:	9d a1       	ldd	r25, Y+37	; 0x25
    4084:	01 97       	sbiw	r24, 0x01	; 1
    4086:	9d a3       	std	Y+37, r25	; 0x25
    4088:	8c a3       	std	Y+36, r24	; 0x24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    408a:	21 e0       	ldi	r18, 0x01	; 1
    408c:	8c a1       	ldd	r24, Y+36	; 0x24
    408e:	9d a1       	ldd	r25, Y+37	; 0x25
    4090:	00 97       	sbiw	r24, 0x00	; 0
    4092:	09 f4       	brne	.+2      	; 0x4096 <main+0x472>
    4094:	20 e0       	ldi	r18, 0x00	; 0
    4096:	22 23       	and	r18, r18
    4098:	31 f7       	brne	.-52     	; 0x4066 <main+0x442>
    409a:	17 c0       	rjmp	.+46     	; 0x40ca <main+0x4a6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    409c:	68 a1       	ldd	r22, Y+32	; 0x20
    409e:	79 a1       	ldd	r23, Y+33	; 0x21
    40a0:	8a a1       	ldd	r24, Y+34	; 0x22
    40a2:	9b a1       	ldd	r25, Y+35	; 0x23
    40a4:	0e 94 da 43 	call	0x87b4	; 0x87b4 <__fixunssfsi>
    40a8:	dc 01       	movw	r26, r24
    40aa:	cb 01       	movw	r24, r22
    40ac:	9d a3       	std	Y+37, r25	; 0x25
    40ae:	8c a3       	std	Y+36, r24	; 0x24
    40b0:	8c a1       	ldd	r24, Y+36	; 0x24
    40b2:	9d a1       	ldd	r25, Y+37	; 0x25
    40b4:	99 a7       	std	Y+41, r25	; 0x29
    40b6:	88 a7       	std	Y+40, r24	; 0x28
    40b8:	88 a5       	ldd	r24, Y+40	; 0x28
    40ba:	99 a5       	ldd	r25, Y+41	; 0x29
    40bc:	8c 01       	movw	r16, r24
    40be:	f8 01       	movw	r30, r16
    40c0:	31 97       	sbiw	r30, 0x01	; 1
    40c2:	f1 f7       	brne	.-4      	; 0x40c0 <main+0x49c>
    40c4:	8f 01       	movw	r16, r30
    40c6:	19 a7       	std	Y+41, r17	; 0x29
    40c8:	08 a7       	std	Y+40, r16	; 0x28
	
	
	//Wait until we receive location data before starting the scheduler
	//TODO rework this
	bool isInitialized = false;
	while (!isInitialized)
    40ca:	99 81       	ldd	r25, Y+1	; 0x01
    40cc:	81 e0       	ldi	r24, 0x01	; 1
    40ce:	89 27       	eor	r24, r25
    40d0:	88 23       	and	r24, r24
    40d2:	09 f0       	breq	.+2      	; 0x40d6 <main+0x4b2>
    40d4:	cc ce       	rjmp	.-616    	; 0x3e6e <main+0x24a>
		_delay_ms(100);
	}
	
	
	
	scheduler->init(); //Sets up the timer registers, inits all tasks,
    40d6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    40d8:	9b 8d       	ldd	r25, Y+27	; 0x1b
    40da:	0e 94 d1 33 	call	0x67a2	; 0x67a2 <_ZN10helicopter9scheduler9Scheduler4initEv>
	
	scheduler->start();
    40de:	8a 8d       	ldd	r24, Y+26	; 0x1a
    40e0:	9b 8d       	ldd	r25, Y+27	; 0x1b
    40e2:	0e 94 a9 34 	call	0x6952	; 0x6952 <_ZN10helicopter9scheduler9Scheduler5startEv>
    40e6:	01 c0       	rjmp	.+2      	; 0x40ea <main+0x4c6>
	
	
	while(1)
    40e8:	00 00       	nop
	{
		//Checks to see if any tasks are ready to run an executes them.
		//goes to sleep (until the next timer tick) after processing all available tasks.
		scheduler->dispatch();
    40ea:	8a 8d       	ldd	r24, Y+26	; 0x1a
    40ec:	9b 8d       	ldd	r25, Y+27	; 0x1b
    40ee:	0e 94 32 34 	call	0x6864	; 0x6864 <_ZN10helicopter9scheduler9Scheduler8dispatchEv>
		
		/**
		 * Determine if the last processing frame was blown.
		 */
		if (scheduler->hasBlownFrame())
    40f2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    40f4:	9b 8d       	ldd	r25, Y+27	; 0x1b
    40f6:	0e 94 3c 15 	call	0x2a78	; 0x2a78 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEv>
    40fa:	88 23       	and	r24, r24
    40fc:	a9 f3       	breq	.-22     	; 0x40e8 <main+0x4c4>
		{
			pidController->addBlownFrame();
    40fe:	8e 81       	ldd	r24, Y+6	; 0x06
    4100:	9f 81       	ldd	r25, Y+7	; 0x07
    4102:	0e 94 66 11 	call	0x22cc	; 0x22cc <_ZN10helicopter10controller13PIDController13addBlownFrameEv>
	scheduler->init(); //Sets up the timer registers, inits all tasks,
	
	scheduler->start();
	
	
	while(1)
    4106:	f0 cf       	rjmp	.-32     	; 0x40e8 <main+0x4c4>

00004108 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>:
	namespace tasks
	{
		/**
			* This task is used to periodically flash an LED on the flight computer.
			*/
		class FlashLEDTask : public Task
    4108:	cf 93       	push	r28
    410a:	df 93       	push	r29
    410c:	1f 92       	push	r1
    410e:	1f 92       	push	r1
    4110:	cd b7       	in	r28, 0x3d	; 61
    4112:	de b7       	in	r29, 0x3e	; 62
    4114:	9a 83       	std	Y+2, r25	; 0x02
    4116:	89 83       	std	Y+1, r24	; 0x01
    4118:	89 81       	ldd	r24, Y+1	; 0x01
    411a:	9a 81       	ldd	r25, Y+2	; 0x02
    411c:	22 e2       	ldi	r18, 0x22	; 34
    411e:	32 e0       	ldi	r19, 0x02	; 2
    4120:	fc 01       	movw	r30, r24
    4122:	31 83       	std	Z+1, r19	; 0x01
    4124:	20 83       	st	Z, r18
    4126:	89 81       	ldd	r24, Y+1	; 0x01
    4128:	9a 81       	ldd	r25, Y+2	; 0x02
    412a:	0e 94 63 14 	call	0x28c6	; 0x28c6 <_ZN10helicopter5tasks4TaskD1Ev>
    412e:	80 e0       	ldi	r24, 0x00	; 0
    4130:	90 e0       	ldi	r25, 0x00	; 0
    4132:	81 70       	andi	r24, 0x01	; 1
    4134:	99 27       	eor	r25, r25
    4136:	00 97       	sbiw	r24, 0x00	; 0
    4138:	21 f0       	breq	.+8      	; 0x4142 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev+0x3a>
    413a:	89 81       	ldd	r24, Y+1	; 0x01
    413c:	9a 81       	ldd	r25, Y+2	; 0x02
    413e:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    4142:	0f 90       	pop	r0
    4144:	0f 90       	pop	r0
    4146:	df 91       	pop	r29
    4148:	cf 91       	pop	r28
    414a:	08 95       	ret

0000414c <_ZN10helicopter5tasks12FlashLEDTaskD0Ev>:
    414c:	cf 93       	push	r28
    414e:	df 93       	push	r29
    4150:	1f 92       	push	r1
    4152:	1f 92       	push	r1
    4154:	cd b7       	in	r28, 0x3d	; 61
    4156:	de b7       	in	r29, 0x3e	; 62
    4158:	9a 83       	std	Y+2, r25	; 0x02
    415a:	89 83       	std	Y+1, r24	; 0x01
    415c:	89 81       	ldd	r24, Y+1	; 0x01
    415e:	9a 81       	ldd	r25, Y+2	; 0x02
    4160:	0e 94 84 20 	call	0x4108	; 0x4108 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>
    4164:	89 81       	ldd	r24, Y+1	; 0x01
    4166:	9a 81       	ldd	r25, Y+2	; 0x02
    4168:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    416c:	0f 90       	pop	r0
    416e:	0f 90       	pop	r0
    4170:	df 91       	pop	r29
    4172:	cf 91       	pop	r28
    4174:	08 95       	ret

00004176 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>:

using namespace helicopter::util;
using namespace helicopter::interfaces;

void GroundControlStationInterface::calculateChecksum (byte *msgPayload, int payloadSize, byte &checksumA, byte &checksumB)
{
    4176:	0f 93       	push	r16
    4178:	1f 93       	push	r17
    417a:	cf 93       	push	r28
    417c:	df 93       	push	r29
    417e:	cd b7       	in	r28, 0x3d	; 61
    4180:	de b7       	in	r29, 0x3e	; 62
    4182:	2d 97       	sbiw	r28, 0x0d	; 13
    4184:	0f b6       	in	r0, 0x3f	; 63
    4186:	f8 94       	cli
    4188:	de bf       	out	0x3e, r29	; 62
    418a:	0f be       	out	0x3f, r0	; 63
    418c:	cd bf       	out	0x3d, r28	; 61
    418e:	9d 83       	std	Y+5, r25	; 0x05
    4190:	8c 83       	std	Y+4, r24	; 0x04
    4192:	7f 83       	std	Y+7, r23	; 0x07
    4194:	6e 83       	std	Y+6, r22	; 0x06
    4196:	59 87       	std	Y+9, r21	; 0x09
    4198:	48 87       	std	Y+8, r20	; 0x08
    419a:	3b 87       	std	Y+11, r19	; 0x0b
    419c:	2a 87       	std	Y+10, r18	; 0x0a
    419e:	1d 87       	std	Y+13, r17	; 0x0d
    41a0:	0c 87       	std	Y+12, r16	; 0x0c
	for (int i = 0; i < payloadSize; i++)
    41a2:	1a 82       	std	Y+2, r1	; 0x02
    41a4:	19 82       	std	Y+1, r1	; 0x01
    41a6:	26 c0       	rjmp	.+76     	; 0x41f4 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x7e>
	{
		byte b = msgPayload[i];
    41a8:	89 81       	ldd	r24, Y+1	; 0x01
    41aa:	9a 81       	ldd	r25, Y+2	; 0x02
    41ac:	2e 81       	ldd	r18, Y+6	; 0x06
    41ae:	3f 81       	ldd	r19, Y+7	; 0x07
    41b0:	82 0f       	add	r24, r18
    41b2:	93 1f       	adc	r25, r19
    41b4:	fc 01       	movw	r30, r24
    41b6:	80 81       	ld	r24, Z
    41b8:	8b 83       	std	Y+3, r24	; 0x03
		
		//These fields can overflow, but that is intentional.
		checksumA = (byte) (checksumA + b);
    41ba:	8a 85       	ldd	r24, Y+10	; 0x0a
    41bc:	9b 85       	ldd	r25, Y+11	; 0x0b
    41be:	fc 01       	movw	r30, r24
    41c0:	90 81       	ld	r25, Z
    41c2:	8b 81       	ldd	r24, Y+3	; 0x03
    41c4:	29 2f       	mov	r18, r25
    41c6:	28 0f       	add	r18, r24
    41c8:	8a 85       	ldd	r24, Y+10	; 0x0a
    41ca:	9b 85       	ldd	r25, Y+11	; 0x0b
    41cc:	fc 01       	movw	r30, r24
    41ce:	20 83       	st	Z, r18
		checksumB = (byte) (checksumB + checksumA);
    41d0:	8c 85       	ldd	r24, Y+12	; 0x0c
    41d2:	9d 85       	ldd	r25, Y+13	; 0x0d
    41d4:	fc 01       	movw	r30, r24
    41d6:	20 81       	ld	r18, Z
    41d8:	8a 85       	ldd	r24, Y+10	; 0x0a
    41da:	9b 85       	ldd	r25, Y+11	; 0x0b
    41dc:	fc 01       	movw	r30, r24
    41de:	80 81       	ld	r24, Z
    41e0:	28 0f       	add	r18, r24
    41e2:	8c 85       	ldd	r24, Y+12	; 0x0c
    41e4:	9d 85       	ldd	r25, Y+13	; 0x0d
    41e6:	fc 01       	movw	r30, r24
    41e8:	20 83       	st	Z, r18
using namespace helicopter::util;
using namespace helicopter::interfaces;

void GroundControlStationInterface::calculateChecksum (byte *msgPayload, int payloadSize, byte &checksumA, byte &checksumB)
{
	for (int i = 0; i < payloadSize; i++)
    41ea:	89 81       	ldd	r24, Y+1	; 0x01
    41ec:	9a 81       	ldd	r25, Y+2	; 0x02
    41ee:	01 96       	adiw	r24, 0x01	; 1
    41f0:	9a 83       	std	Y+2, r25	; 0x02
    41f2:	89 83       	std	Y+1, r24	; 0x01
    41f4:	41 e0       	ldi	r20, 0x01	; 1
    41f6:	29 81       	ldd	r18, Y+1	; 0x01
    41f8:	3a 81       	ldd	r19, Y+2	; 0x02
    41fa:	88 85       	ldd	r24, Y+8	; 0x08
    41fc:	99 85       	ldd	r25, Y+9	; 0x09
    41fe:	28 17       	cp	r18, r24
    4200:	39 07       	cpc	r19, r25
    4202:	0c f0       	brlt	.+2      	; 0x4206 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x90>
    4204:	40 e0       	ldi	r20, 0x00	; 0
    4206:	44 23       	and	r20, r20
    4208:	79 f6       	brne	.-98     	; 0x41a8 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x32>
		
		//These fields can overflow, but that is intentional.
		checksumA = (byte) (checksumA + b);
		checksumB = (byte) (checksumB + checksumA);
	}
}
    420a:	2d 96       	adiw	r28, 0x0d	; 13
    420c:	0f b6       	in	r0, 0x3f	; 63
    420e:	f8 94       	cli
    4210:	de bf       	out	0x3e, r29	; 62
    4212:	0f be       	out	0x3f, r0	; 63
    4214:	cd bf       	out	0x3d, r28	; 61
    4216:	df 91       	pop	r29
    4218:	cf 91       	pop	r28
    421a:	1f 91       	pop	r17
    421c:	0f 91       	pop	r16
    421e:	08 95       	ret

00004220 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>:

int GroundControlStationInterface::transmit(Message *msgToSend)
{
    4220:	cf 92       	push	r12
    4222:	df 92       	push	r13
    4224:	ef 92       	push	r14
    4226:	ff 92       	push	r15
    4228:	0f 93       	push	r16
    422a:	1f 93       	push	r17
    422c:	cf 93       	push	r28
    422e:	df 93       	push	r29
    4230:	cd b7       	in	r28, 0x3d	; 61
    4232:	de b7       	in	r29, 0x3e	; 62
    4234:	64 97       	sbiw	r28, 0x14	; 20
    4236:	0f b6       	in	r0, 0x3f	; 63
    4238:	f8 94       	cli
    423a:	de bf       	out	0x3e, r29	; 62
    423c:	0f be       	out	0x3f, r0	; 63
    423e:	cd bf       	out	0x3d, r28	; 61
    4240:	9a 8b       	std	Y+18, r25	; 0x12
    4242:	89 8b       	std	Y+17, r24	; 0x11
    4244:	7c 8b       	std	Y+20, r23	; 0x14
    4246:	6b 8b       	std	Y+19, r22	; 0x13
		delete [] msgPayload;
		msgPayload = NULL;
	}
	
	return status;
}
    4248:	ed b6       	in	r14, 0x3d	; 61
    424a:	fe b6       	in	r15, 0x3e	; 62
	}
}

int GroundControlStationInterface::transmit(Message *msgToSend)
{
	int status = 0;
    424c:	1a 82       	std	Y+2, r1	; 0x02
    424e:	19 82       	std	Y+1, r1	; 0x01
	
	if (msgToSend != NULL)
    4250:	8b 89       	ldd	r24, Y+19	; 0x13
    4252:	9c 89       	ldd	r25, Y+20	; 0x14
    4254:	00 97       	sbiw	r24, 0x00	; 0
    4256:	09 f4       	brne	.+2      	; 0x425a <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x3a>
    4258:	b3 c0       	rjmp	.+358    	; 0x43c0 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x1a0>
    425a:	8d b7       	in	r24, 0x3d	; 61
    425c:	9e b7       	in	r25, 0x3e	; 62
    425e:	6c 01       	movw	r12, r24
	{
		byte *msgPayload = msgToSend->getBytes();
    4260:	8b 89       	ldd	r24, Y+19	; 0x13
    4262:	9c 89       	ldd	r25, Y+20	; 0x14
    4264:	fc 01       	movw	r30, r24
    4266:	80 81       	ld	r24, Z
    4268:	91 81       	ldd	r25, Z+1	; 0x01
    426a:	04 96       	adiw	r24, 0x04	; 4
    426c:	fc 01       	movw	r30, r24
    426e:	20 81       	ld	r18, Z
    4270:	31 81       	ldd	r19, Z+1	; 0x01
    4272:	8b 89       	ldd	r24, Y+19	; 0x13
    4274:	9c 89       	ldd	r25, Y+20	; 0x14
    4276:	f9 01       	movw	r30, r18
    4278:	19 95       	eicall
    427a:	9e 83       	std	Y+6, r25	; 0x06
    427c:	8d 83       	std	Y+5, r24	; 0x05
		
		int payloadSize = msgToSend->getMessageSize();
    427e:	8b 89       	ldd	r24, Y+19	; 0x13
    4280:	9c 89       	ldd	r25, Y+20	; 0x14
    4282:	0e 94 91 23 	call	0x4722	; 0x4722 <_ZN10helicopter8messages7Message14getMessageSizeEv>
    4286:	98 87       	std	Y+8, r25	; 0x08
    4288:	8f 83       	std	Y+7, r24	; 0x07
		
		int completeMsgSize = payloadSize + MsgHeaderFooterSize;;
    428a:	8f 81       	ldd	r24, Y+7	; 0x07
    428c:	98 85       	ldd	r25, Y+8	; 0x08
    428e:	05 96       	adiw	r24, 0x05	; 5
    4290:	9a 87       	std	Y+10, r25	; 0x0a
    4292:	89 87       	std	Y+9, r24	; 0x09

		byte completeMsg[completeMsgSize];
    4294:	89 85       	ldd	r24, Y+9	; 0x09
    4296:	9a 85       	ldd	r25, Y+10	; 0x0a
    4298:	01 97       	sbiw	r24, 0x01	; 1
    429a:	9c 87       	std	Y+12, r25	; 0x0c
    429c:	8b 87       	std	Y+11, r24	; 0x0b
    429e:	01 96       	adiw	r24, 0x01	; 1
    42a0:	2d b7       	in	r18, 0x3d	; 61
    42a2:	3e b7       	in	r19, 0x3e	; 62
    42a4:	28 1b       	sub	r18, r24
    42a6:	39 0b       	sbc	r19, r25
    42a8:	0f b6       	in	r0, 0x3f	; 63
    42aa:	f8 94       	cli
    42ac:	3e bf       	out	0x3e, r19	; 62
    42ae:	0f be       	out	0x3f, r0	; 63
    42b0:	2d bf       	out	0x3d, r18	; 61
    42b2:	8d b7       	in	r24, 0x3d	; 61
    42b4:	9e b7       	in	r25, 0x3e	; 62
    42b6:	01 96       	adiw	r24, 0x01	; 1
    42b8:	9e 87       	std	Y+14, r25	; 0x0e
    42ba:	8d 87       	std	Y+13, r24	; 0x0d
		
		completeMsg[0] = GroundControlStationInterface::SyncByte1;
    42bc:	8d 85       	ldd	r24, Y+13	; 0x0d
    42be:	9e 85       	ldd	r25, Y+14	; 0x0e
    42c0:	25 eb       	ldi	r18, 0xB5	; 181
    42c2:	fc 01       	movw	r30, r24
    42c4:	20 83       	st	Z, r18
		completeMsg[1] = GroundControlStationInterface::SyncByte2;
    42c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    42c8:	9e 85       	ldd	r25, Y+14	; 0x0e
    42ca:	22 e6       	ldi	r18, 0x62	; 98
    42cc:	fc 01       	movw	r30, r24
    42ce:	21 83       	std	Z+1, r18	; 0x01
		completeMsg[2] = GroundControlStationInterface::SyncByte3;
    42d0:	8d 85       	ldd	r24, Y+13	; 0x0d
    42d2:	9e 85       	ldd	r25, Y+14	; 0x0e
    42d4:	27 ed       	ldi	r18, 0xD7	; 215
    42d6:	fc 01       	movw	r30, r24
    42d8:	22 83       	std	Z+2, r18	; 0x02
		
		memcpy(&completeMsg[3], msgPayload, payloadSize);
    42da:	4f 81       	ldd	r20, Y+7	; 0x07
    42dc:	58 85       	ldd	r21, Y+8	; 0x08
    42de:	8d 85       	ldd	r24, Y+13	; 0x0d
    42e0:	9e 85       	ldd	r25, Y+14	; 0x0e
    42e2:	03 96       	adiw	r24, 0x03	; 3
    42e4:	2d 81       	ldd	r18, Y+5	; 0x05
    42e6:	3e 81       	ldd	r19, Y+6	; 0x06
    42e8:	b9 01       	movw	r22, r18
    42ea:	0e 94 e6 48 	call	0x91cc	; 0x91cc <memcpy>
		
		byte checksumA = 0;
    42ee:	1f 86       	std	Y+15, r1	; 0x0f
		byte checksumB = 0;
    42f0:	18 8a       	std	Y+16, r1	; 0x10
		
		calculateChecksum(msgPayload, payloadSize, checksumA, checksumB);
    42f2:	fe 01       	movw	r30, r28
    42f4:	70 96       	adiw	r30, 0x10	; 16
    42f6:	9e 01       	movw	r18, r28
    42f8:	21 5f       	subi	r18, 0xF1	; 241
    42fa:	3f 4f       	sbci	r19, 0xFF	; 255
    42fc:	4f 81       	ldd	r20, Y+7	; 0x07
    42fe:	58 85       	ldd	r21, Y+8	; 0x08
    4300:	6d 81       	ldd	r22, Y+5	; 0x05
    4302:	7e 81       	ldd	r23, Y+6	; 0x06
    4304:	89 89       	ldd	r24, Y+17	; 0x11
    4306:	9a 89       	ldd	r25, Y+18	; 0x12
    4308:	8f 01       	movw	r16, r30
    430a:	0e 94 bb 20 	call	0x4176	; 0x4176 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>
		
		completeMsg[completeMsgSize - 2] = checksumA;
    430e:	89 85       	ldd	r24, Y+9	; 0x09
    4310:	9a 85       	ldd	r25, Y+10	; 0x0a
    4312:	02 97       	sbiw	r24, 0x02	; 2
    4314:	4f 85       	ldd	r20, Y+15	; 0x0f
    4316:	2d 85       	ldd	r18, Y+13	; 0x0d
    4318:	3e 85       	ldd	r19, Y+14	; 0x0e
    431a:	82 0f       	add	r24, r18
    431c:	93 1f       	adc	r25, r19
    431e:	fc 01       	movw	r30, r24
    4320:	40 83       	st	Z, r20
		completeMsg[completeMsgSize - 1] = checksumB;
    4322:	89 85       	ldd	r24, Y+9	; 0x09
    4324:	9a 85       	ldd	r25, Y+10	; 0x0a
    4326:	01 97       	sbiw	r24, 0x01	; 1
    4328:	48 89       	ldd	r20, Y+16	; 0x10
    432a:	2d 85       	ldd	r18, Y+13	; 0x0d
    432c:	3e 85       	ldd	r19, Y+14	; 0x0e
    432e:	82 0f       	add	r24, r18
    4330:	93 1f       	adc	r25, r19
    4332:	fc 01       	movw	r30, r24
    4334:	40 83       	st	Z, r20
		
		//iterate over the bytes and transmit them, unless there was an error.
		for (int i = 0; i < completeMsgSize && status == 0; i++)
    4336:	1c 82       	std	Y+4, r1	; 0x04
    4338:	1b 82       	std	Y+3, r1	; 0x03
    433a:	23 c0       	rjmp	.+70     	; 0x4382 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x162>
		{
			status = serialDriver->transmitByte(completeMsg[i]);
    433c:	89 89       	ldd	r24, Y+17	; 0x11
    433e:	9a 89       	ldd	r25, Y+18	; 0x12
    4340:	fc 01       	movw	r30, r24
    4342:	80 81       	ld	r24, Z
    4344:	91 81       	ldd	r25, Z+1	; 0x01
    4346:	fc 01       	movw	r30, r24
    4348:	80 81       	ld	r24, Z
    434a:	91 81       	ldd	r25, Z+1	; 0x01
    434c:	06 96       	adiw	r24, 0x06	; 6
    434e:	fc 01       	movw	r30, r24
    4350:	20 81       	ld	r18, Z
    4352:	31 81       	ldd	r19, Z+1	; 0x01
    4354:	4d 85       	ldd	r20, Y+13	; 0x0d
    4356:	5e 85       	ldd	r21, Y+14	; 0x0e
    4358:	8b 81       	ldd	r24, Y+3	; 0x03
    435a:	9c 81       	ldd	r25, Y+4	; 0x04
    435c:	84 0f       	add	r24, r20
    435e:	95 1f       	adc	r25, r21
    4360:	fc 01       	movw	r30, r24
    4362:	40 81       	ld	r20, Z
    4364:	89 89       	ldd	r24, Y+17	; 0x11
    4366:	9a 89       	ldd	r25, Y+18	; 0x12
    4368:	fc 01       	movw	r30, r24
    436a:	80 81       	ld	r24, Z
    436c:	91 81       	ldd	r25, Z+1	; 0x01
    436e:	64 2f       	mov	r22, r20
    4370:	f9 01       	movw	r30, r18
    4372:	19 95       	eicall
    4374:	9a 83       	std	Y+2, r25	; 0x02
    4376:	89 83       	std	Y+1, r24	; 0x01
		
		completeMsg[completeMsgSize - 2] = checksumA;
		completeMsg[completeMsgSize - 1] = checksumB;
		
		//iterate over the bytes and transmit them, unless there was an error.
		for (int i = 0; i < completeMsgSize && status == 0; i++)
    4378:	8b 81       	ldd	r24, Y+3	; 0x03
    437a:	9c 81       	ldd	r25, Y+4	; 0x04
    437c:	01 96       	adiw	r24, 0x01	; 1
    437e:	9c 83       	std	Y+4, r25	; 0x04
    4380:	8b 83       	std	Y+3, r24	; 0x03
    4382:	2b 81       	ldd	r18, Y+3	; 0x03
    4384:	3c 81       	ldd	r19, Y+4	; 0x04
    4386:	89 85       	ldd	r24, Y+9	; 0x09
    4388:	9a 85       	ldd	r25, Y+10	; 0x0a
    438a:	28 17       	cp	r18, r24
    438c:	39 07       	cpc	r19, r25
    438e:	34 f4       	brge	.+12     	; 0x439c <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x17c>
    4390:	89 81       	ldd	r24, Y+1	; 0x01
    4392:	9a 81       	ldd	r25, Y+2	; 0x02
    4394:	00 97       	sbiw	r24, 0x00	; 0
    4396:	11 f4       	brne	.+4      	; 0x439c <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x17c>
    4398:	81 e0       	ldi	r24, 0x01	; 1
    439a:	01 c0       	rjmp	.+2      	; 0x439e <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x17e>
    439c:	80 e0       	ldi	r24, 0x00	; 0
    439e:	88 23       	and	r24, r24
    43a0:	69 f6       	brne	.-102    	; 0x433c <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x11c>
		{
			status = serialDriver->transmitByte(completeMsg[i]);
		}
		
		delete [] msgPayload;
    43a2:	8d 81       	ldd	r24, Y+5	; 0x05
    43a4:	9e 81       	ldd	r25, Y+6	; 0x06
    43a6:	00 97       	sbiw	r24, 0x00	; 0
    43a8:	21 f0       	breq	.+8      	; 0x43b2 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x192>
    43aa:	8d 81       	ldd	r24, Y+5	; 0x05
    43ac:	9e 81       	ldd	r25, Y+6	; 0x06
    43ae:	0e 94 38 3d 	call	0x7a70	; 0x7a70 <_ZdaPv>
		msgPayload = NULL;
    43b2:	1e 82       	std	Y+6, r1	; 0x06
    43b4:	1d 82       	std	Y+5, r1	; 0x05
    43b6:	0f b6       	in	r0, 0x3f	; 63
    43b8:	f8 94       	cli
    43ba:	de be       	out	0x3e, r13	; 62
    43bc:	0f be       	out	0x3f, r0	; 63
    43be:	cd be       	out	0x3d, r12	; 61
	}
	
	return status;
    43c0:	89 81       	ldd	r24, Y+1	; 0x01
    43c2:	9a 81       	ldd	r25, Y+2	; 0x02
}
    43c4:	0f b6       	in	r0, 0x3f	; 63
    43c6:	f8 94       	cli
    43c8:	fe be       	out	0x3e, r15	; 62
    43ca:	0f be       	out	0x3f, r0	; 63
    43cc:	ed be       	out	0x3d, r14	; 61
    43ce:	64 96       	adiw	r28, 0x14	; 20
    43d0:	0f b6       	in	r0, 0x3f	; 63
    43d2:	f8 94       	cli
    43d4:	de bf       	out	0x3e, r29	; 62
    43d6:	0f be       	out	0x3f, r0	; 63
    43d8:	cd bf       	out	0x3d, r28	; 61
    43da:	df 91       	pop	r29
    43dc:	cf 91       	pop	r28
    43de:	1f 91       	pop	r17
    43e0:	0f 91       	pop	r16
    43e2:	ff 90       	pop	r15
    43e4:	ef 90       	pop	r14
    43e6:	df 90       	pop	r13
    43e8:	cf 90       	pop	r12
    43ea:	08 95       	ret

000043ec <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE>:
 * a lot of data is constantly received before that timeout, and none of the data
 * is a sync byte, then this method will never stop receiving bytes and will
 * lock up the rest of the system. 
 */
int GroundControlStationInterface::receive(Message * &receivedMessage)
{
    43ec:	cf 92       	push	r12
    43ee:	df 92       	push	r13
    43f0:	ef 92       	push	r14
    43f2:	ff 92       	push	r15
    43f4:	0f 93       	push	r16
    43f6:	1f 93       	push	r17
    43f8:	cf 93       	push	r28
    43fa:	df 93       	push	r29
    43fc:	cd b7       	in	r28, 0x3d	; 61
    43fe:	de b7       	in	r29, 0x3e	; 62
    4400:	66 97       	sbiw	r28, 0x16	; 22
    4402:	0f b6       	in	r0, 0x3f	; 63
    4404:	f8 94       	cli
    4406:	de bf       	out	0x3e, r29	; 62
    4408:	0f be       	out	0x3f, r0	; 63
    440a:	cd bf       	out	0x3d, r28	; 61
    440c:	9c 8b       	std	Y+20, r25	; 0x14
    440e:	8b 8b       	std	Y+19, r24	; 0x13
    4410:	7e 8b       	std	Y+22, r23	; 0x16
    4412:	6d 8b       	std	Y+21, r22	; 0x15
	{
		receivedMessage = NULL;
	}
	
	return status;
    4414:	ed b6       	in	r14, 0x3d	; 61
    4416:	fe b6       	in	r15, 0x3e	; 62
 * is a sync byte, then this method will never stop receiving bytes and will
 * lock up the rest of the system. 
 */
int GroundControlStationInterface::receive(Message * &receivedMessage)
{
	int status = 0;
    4418:	1a 82       	std	Y+2, r1	; 0x02
    441a:	19 82       	std	Y+1, r1	; 0x01
	
    byte firstSyncByte = 0;
    441c:	1b 82       	std	Y+3, r1	; 0x03
    byte secondSyncByte = 0;
    441e:	1c 82       	std	Y+4, r1	; 0x04
    byte thirdSyncByte = 0;
    4420:	1d 86       	std	Y+13, r1	; 0x0d
	

	//Read until the sync bytes are received or we time out.
	//Throw away any 'garbage' bytes.
	while(!(firstSyncByte == SyncByte1 && secondSyncByte == SyncByte2 && thirdSyncByte == SyncByte3) && status == 0)
    4422:	1d c0       	rjmp	.+58     	; 0x445e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x72>
	{
		firstSyncByte = secondSyncByte;
    4424:	8c 81       	ldd	r24, Y+4	; 0x04
    4426:	8b 83       	std	Y+3, r24	; 0x03
		secondSyncByte = thirdSyncByte;
    4428:	8d 85       	ldd	r24, Y+13	; 0x0d
    442a:	8c 83       	std	Y+4, r24	; 0x04
		status = serialDriver->receiveByte(thirdSyncByte);
    442c:	8b 89       	ldd	r24, Y+19	; 0x13
    442e:	9c 89       	ldd	r25, Y+20	; 0x14
    4430:	fc 01       	movw	r30, r24
    4432:	80 81       	ld	r24, Z
    4434:	91 81       	ldd	r25, Z+1	; 0x01
    4436:	fc 01       	movw	r30, r24
    4438:	80 81       	ld	r24, Z
    443a:	91 81       	ldd	r25, Z+1	; 0x01
    443c:	08 96       	adiw	r24, 0x08	; 8
    443e:	fc 01       	movw	r30, r24
    4440:	20 81       	ld	r18, Z
    4442:	31 81       	ldd	r19, Z+1	; 0x01
    4444:	8b 89       	ldd	r24, Y+19	; 0x13
    4446:	9c 89       	ldd	r25, Y+20	; 0x14
    4448:	fc 01       	movw	r30, r24
    444a:	80 81       	ld	r24, Z
    444c:	91 81       	ldd	r25, Z+1	; 0x01
    444e:	ae 01       	movw	r20, r28
    4450:	43 5f       	subi	r20, 0xF3	; 243
    4452:	5f 4f       	sbci	r21, 0xFF	; 255
    4454:	ba 01       	movw	r22, r20
    4456:	f9 01       	movw	r30, r18
    4458:	19 95       	eicall
    445a:	9a 83       	std	Y+2, r25	; 0x02
    445c:	89 83       	std	Y+1, r24	; 0x01
    byte thirdSyncByte = 0;
	

	//Read until the sync bytes are received or we time out.
	//Throw away any 'garbage' bytes.
	while(!(firstSyncByte == SyncByte1 && secondSyncByte == SyncByte2 && thirdSyncByte == SyncByte3) && status == 0)
    445e:	8b 81       	ldd	r24, Y+3	; 0x03
    4460:	85 3b       	cpi	r24, 0xB5	; 181
    4462:	31 f4       	brne	.+12     	; 0x4470 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x84>
    4464:	8c 81       	ldd	r24, Y+4	; 0x04
    4466:	82 36       	cpi	r24, 0x62	; 98
    4468:	19 f4       	brne	.+6      	; 0x4470 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x84>
    446a:	8d 85       	ldd	r24, Y+13	; 0x0d
    446c:	87 3d       	cpi	r24, 0xD7	; 215
    446e:	31 f0       	breq	.+12     	; 0x447c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x90>
    4470:	89 81       	ldd	r24, Y+1	; 0x01
    4472:	9a 81       	ldd	r25, Y+2	; 0x02
    4474:	00 97       	sbiw	r24, 0x00	; 0
    4476:	11 f4       	brne	.+4      	; 0x447c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x90>
    4478:	81 e0       	ldi	r24, 0x01	; 1
    447a:	01 c0       	rjmp	.+2      	; 0x447e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x92>
    447c:	80 e0       	ldi	r24, 0x00	; 0
    447e:	88 23       	and	r24, r24
    4480:	89 f6       	brne	.-94     	; 0x4424 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x38>
		firstSyncByte = secondSyncByte;
		secondSyncByte = thirdSyncByte;
		status = serialDriver->receiveByte(thirdSyncByte);
	}
	
	if (status == 0)
    4482:	89 81       	ldd	r24, Y+1	; 0x01
    4484:	9a 81       	ldd	r25, Y+2	; 0x02
    4486:	00 97       	sbiw	r24, 0x00	; 0
    4488:	09 f0       	breq	.+2      	; 0x448c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xa0>
    448a:	f9 c0       	rjmp	.+498    	; 0x467e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x292>
	{
		//once we have found a valid message, get the message ID
		byte msgType = 0;
    448c:	1e 86       	std	Y+14, r1	; 0x0e
		
		status = serialDriver->receiveByte(msgType);
    448e:	8b 89       	ldd	r24, Y+19	; 0x13
    4490:	9c 89       	ldd	r25, Y+20	; 0x14
    4492:	fc 01       	movw	r30, r24
    4494:	80 81       	ld	r24, Z
    4496:	91 81       	ldd	r25, Z+1	; 0x01
    4498:	fc 01       	movw	r30, r24
    449a:	80 81       	ld	r24, Z
    449c:	91 81       	ldd	r25, Z+1	; 0x01
    449e:	08 96       	adiw	r24, 0x08	; 8
    44a0:	fc 01       	movw	r30, r24
    44a2:	20 81       	ld	r18, Z
    44a4:	31 81       	ldd	r19, Z+1	; 0x01
    44a6:	8b 89       	ldd	r24, Y+19	; 0x13
    44a8:	9c 89       	ldd	r25, Y+20	; 0x14
    44aa:	fc 01       	movw	r30, r24
    44ac:	80 81       	ld	r24, Z
    44ae:	91 81       	ldd	r25, Z+1	; 0x01
    44b0:	ae 01       	movw	r20, r28
    44b2:	42 5f       	subi	r20, 0xF2	; 242
    44b4:	5f 4f       	sbci	r21, 0xFF	; 255
    44b6:	ba 01       	movw	r22, r20
    44b8:	f9 01       	movw	r30, r18
    44ba:	19 95       	eicall
    44bc:	9a 83       	std	Y+2, r25	; 0x02
    44be:	89 83       	std	Y+1, r24	; 0x01
		
		if (status == 0)
    44c0:	89 81       	ldd	r24, Y+1	; 0x01
    44c2:	9a 81       	ldd	r25, Y+2	; 0x02
    44c4:	00 97       	sbiw	r24, 0x00	; 0
    44c6:	09 f0       	breq	.+2      	; 0x44ca <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xde>
    44c8:	da c0       	rjmp	.+436    	; 0x467e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x292>
		{
			int msgSize = 0;
    44ca:	1e 82       	std	Y+6, r1	; 0x06
    44cc:	1d 82       	std	Y+5, r1	; 0x05
			
			switch(msgType)
    44ce:	8e 85       	ldd	r24, Y+14	; 0x0e
    44d0:	88 2f       	mov	r24, r24
    44d2:	90 e0       	ldi	r25, 0x00	; 0
    44d4:	82 30       	cpi	r24, 0x02	; 2
    44d6:	91 05       	cpc	r25, r1
    44d8:	29 f4       	brne	.+10     	; 0x44e4 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xf8>
			{
				case SystemTelemetryMessage::MessageType:
					msgSize = SystemTelemetryMessage::MessageSize;
    44da:	89 ec       	ldi	r24, 0xC9	; 201
    44dc:	90 e0       	ldi	r25, 0x00	; 0
    44de:	9e 83       	std	Y+6, r25	; 0x06
    44e0:	8d 83       	std	Y+5, r24	; 0x05
					break;
    44e2:	05 c0       	rjmp	.+10     	; 0x44ee <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x102>
				default:
					//unrecognized message type.
					status = -2;
    44e4:	8e ef       	ldi	r24, 0xFE	; 254
    44e6:	9f ef       	ldi	r25, 0xFF	; 255
    44e8:	9a 83       	std	Y+2, r25	; 0x02
    44ea:	89 83       	std	Y+1, r24	; 0x01
					break;
    44ec:	00 00       	nop
			}
			
			if (status == 0)
    44ee:	89 81       	ldd	r24, Y+1	; 0x01
    44f0:	9a 81       	ldd	r25, Y+2	; 0x02
    44f2:	00 97       	sbiw	r24, 0x00	; 0
    44f4:	09 f0       	breq	.+2      	; 0x44f8 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x10c>
    44f6:	c3 c0       	rjmp	.+390    	; 0x467e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x292>
    44f8:	8d b7       	in	r24, 0x3d	; 61
    44fa:	9e b7       	in	r25, 0x3e	; 62
    44fc:	6c 01       	movw	r12, r24
			{
				byte messagePayload[msgSize];
    44fe:	8d 81       	ldd	r24, Y+5	; 0x05
    4500:	9e 81       	ldd	r25, Y+6	; 0x06
    4502:	01 97       	sbiw	r24, 0x01	; 1
    4504:	9a 87       	std	Y+10, r25	; 0x0a
    4506:	89 87       	std	Y+9, r24	; 0x09
    4508:	01 96       	adiw	r24, 0x01	; 1
    450a:	2d b7       	in	r18, 0x3d	; 61
    450c:	3e b7       	in	r19, 0x3e	; 62
    450e:	28 1b       	sub	r18, r24
    4510:	39 0b       	sbc	r19, r25
    4512:	0f b6       	in	r0, 0x3f	; 63
    4514:	f8 94       	cli
    4516:	3e bf       	out	0x3e, r19	; 62
    4518:	0f be       	out	0x3f, r0	; 63
    451a:	2d bf       	out	0x3d, r18	; 61
    451c:	8d b7       	in	r24, 0x3d	; 61
    451e:	9e b7       	in	r25, 0x3e	; 62
    4520:	01 96       	adiw	r24, 0x01	; 1
    4522:	9c 87       	std	Y+12, r25	; 0x0c
    4524:	8b 87       	std	Y+11, r24	; 0x0b
							
				messagePayload[0] = msgType;
    4526:	2e 85       	ldd	r18, Y+14	; 0x0e
    4528:	8b 85       	ldd	r24, Y+11	; 0x0b
    452a:	9c 85       	ldd	r25, Y+12	; 0x0c
    452c:	fc 01       	movw	r30, r24
    452e:	20 83       	st	Z, r18
							
				//Read the bytes in the payload of the message.
				//skip the first position since thats where the message type is located.
				for (int i = 1; i < msgSize && status == 0; i++)
    4530:	81 e0       	ldi	r24, 0x01	; 1
    4532:	90 e0       	ldi	r25, 0x00	; 0
    4534:	98 87       	std	Y+8, r25	; 0x08
    4536:	8f 83       	std	Y+7, r24	; 0x07
    4538:	21 c0       	rjmp	.+66     	; 0x457c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x190>
				{
					status = serialDriver->receiveByte(messagePayload[i]);
    453a:	8b 89       	ldd	r24, Y+19	; 0x13
    453c:	9c 89       	ldd	r25, Y+20	; 0x14
    453e:	fc 01       	movw	r30, r24
    4540:	80 81       	ld	r24, Z
    4542:	91 81       	ldd	r25, Z+1	; 0x01
    4544:	fc 01       	movw	r30, r24
    4546:	80 81       	ld	r24, Z
    4548:	91 81       	ldd	r25, Z+1	; 0x01
    454a:	08 96       	adiw	r24, 0x08	; 8
    454c:	fc 01       	movw	r30, r24
    454e:	20 81       	ld	r18, Z
    4550:	31 81       	ldd	r19, Z+1	; 0x01
    4552:	4b 85       	ldd	r20, Y+11	; 0x0b
    4554:	5c 85       	ldd	r21, Y+12	; 0x0c
    4556:	8f 81       	ldd	r24, Y+7	; 0x07
    4558:	98 85       	ldd	r25, Y+8	; 0x08
    455a:	48 0f       	add	r20, r24
    455c:	59 1f       	adc	r21, r25
    455e:	8b 89       	ldd	r24, Y+19	; 0x13
    4560:	9c 89       	ldd	r25, Y+20	; 0x14
    4562:	fc 01       	movw	r30, r24
    4564:	80 81       	ld	r24, Z
    4566:	91 81       	ldd	r25, Z+1	; 0x01
    4568:	ba 01       	movw	r22, r20
    456a:	f9 01       	movw	r30, r18
    456c:	19 95       	eicall
    456e:	9a 83       	std	Y+2, r25	; 0x02
    4570:	89 83       	std	Y+1, r24	; 0x01
							
				messagePayload[0] = msgType;
							
				//Read the bytes in the payload of the message.
				//skip the first position since thats where the message type is located.
				for (int i = 1; i < msgSize && status == 0; i++)
    4572:	8f 81       	ldd	r24, Y+7	; 0x07
    4574:	98 85       	ldd	r25, Y+8	; 0x08
    4576:	01 96       	adiw	r24, 0x01	; 1
    4578:	98 87       	std	Y+8, r25	; 0x08
    457a:	8f 83       	std	Y+7, r24	; 0x07
    457c:	2f 81       	ldd	r18, Y+7	; 0x07
    457e:	38 85       	ldd	r19, Y+8	; 0x08
    4580:	8d 81       	ldd	r24, Y+5	; 0x05
    4582:	9e 81       	ldd	r25, Y+6	; 0x06
    4584:	28 17       	cp	r18, r24
    4586:	39 07       	cpc	r19, r25
    4588:	34 f4       	brge	.+12     	; 0x4596 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1aa>
    458a:	89 81       	ldd	r24, Y+1	; 0x01
    458c:	9a 81       	ldd	r25, Y+2	; 0x02
    458e:	00 97       	sbiw	r24, 0x00	; 0
    4590:	11 f4       	brne	.+4      	; 0x4596 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1aa>
    4592:	81 e0       	ldi	r24, 0x01	; 1
    4594:	01 c0       	rjmp	.+2      	; 0x4598 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1ac>
    4596:	80 e0       	ldi	r24, 0x00	; 0
    4598:	88 23       	and	r24, r24
    459a:	79 f6       	brne	.-98     	; 0x453a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x14e>
				{
					status = serialDriver->receiveByte(messagePayload[i]);
				}
							
				if (status == 0)
    459c:	89 81       	ldd	r24, Y+1	; 0x01
    459e:	9a 81       	ldd	r25, Y+2	; 0x02
    45a0:	00 97       	sbiw	r24, 0x00	; 0
    45a2:	09 f0       	breq	.+2      	; 0x45a6 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1ba>
    45a4:	67 c0       	rjmp	.+206    	; 0x4674 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x288>
				{
					//Read the two checksum bytes
					byte messageChecksumA = 0;
    45a6:	1f 86       	std	Y+15, r1	; 0x0f
					byte messageChecksumB = 0;
    45a8:	18 8a       	std	Y+16, r1	; 0x10
					byte calculatedChecksumA = 0;
    45aa:	19 8a       	std	Y+17, r1	; 0x11
					byte calculatedChecksumB = 0;
    45ac:	1a 8a       	std	Y+18, r1	; 0x12
								
					//Note: status is getting overwritten here.
					status = serialDriver->receiveByte(messageChecksumA);
    45ae:	8b 89       	ldd	r24, Y+19	; 0x13
    45b0:	9c 89       	ldd	r25, Y+20	; 0x14
    45b2:	fc 01       	movw	r30, r24
    45b4:	80 81       	ld	r24, Z
    45b6:	91 81       	ldd	r25, Z+1	; 0x01
    45b8:	fc 01       	movw	r30, r24
    45ba:	80 81       	ld	r24, Z
    45bc:	91 81       	ldd	r25, Z+1	; 0x01
    45be:	08 96       	adiw	r24, 0x08	; 8
    45c0:	fc 01       	movw	r30, r24
    45c2:	20 81       	ld	r18, Z
    45c4:	31 81       	ldd	r19, Z+1	; 0x01
    45c6:	8b 89       	ldd	r24, Y+19	; 0x13
    45c8:	9c 89       	ldd	r25, Y+20	; 0x14
    45ca:	fc 01       	movw	r30, r24
    45cc:	80 81       	ld	r24, Z
    45ce:	91 81       	ldd	r25, Z+1	; 0x01
    45d0:	ae 01       	movw	r20, r28
    45d2:	41 5f       	subi	r20, 0xF1	; 241
    45d4:	5f 4f       	sbci	r21, 0xFF	; 255
    45d6:	ba 01       	movw	r22, r20
    45d8:	f9 01       	movw	r30, r18
    45da:	19 95       	eicall
    45dc:	9a 83       	std	Y+2, r25	; 0x02
    45de:	89 83       	std	Y+1, r24	; 0x01
					status = serialDriver->receiveByte(messageChecksumB);
    45e0:	8b 89       	ldd	r24, Y+19	; 0x13
    45e2:	9c 89       	ldd	r25, Y+20	; 0x14
    45e4:	fc 01       	movw	r30, r24
    45e6:	80 81       	ld	r24, Z
    45e8:	91 81       	ldd	r25, Z+1	; 0x01
    45ea:	fc 01       	movw	r30, r24
    45ec:	80 81       	ld	r24, Z
    45ee:	91 81       	ldd	r25, Z+1	; 0x01
    45f0:	08 96       	adiw	r24, 0x08	; 8
    45f2:	fc 01       	movw	r30, r24
    45f4:	20 81       	ld	r18, Z
    45f6:	31 81       	ldd	r19, Z+1	; 0x01
    45f8:	8b 89       	ldd	r24, Y+19	; 0x13
    45fa:	9c 89       	ldd	r25, Y+20	; 0x14
    45fc:	fc 01       	movw	r30, r24
    45fe:	80 81       	ld	r24, Z
    4600:	91 81       	ldd	r25, Z+1	; 0x01
    4602:	ae 01       	movw	r20, r28
    4604:	40 5f       	subi	r20, 0xF0	; 240
    4606:	5f 4f       	sbci	r21, 0xFF	; 255
    4608:	ba 01       	movw	r22, r20
    460a:	f9 01       	movw	r30, r18
    460c:	19 95       	eicall
    460e:	9a 83       	std	Y+2, r25	; 0x02
    4610:	89 83       	std	Y+1, r24	; 0x01
								
					//Generate checksum for the message			
					calculateChecksum(messagePayload, msgSize, calculatedChecksumA, calculatedChecksumB);
    4612:	6b 85       	ldd	r22, Y+11	; 0x0b
    4614:	7c 85       	ldd	r23, Y+12	; 0x0c
    4616:	fe 01       	movw	r30, r28
    4618:	72 96       	adiw	r30, 0x12	; 18
    461a:	9e 01       	movw	r18, r28
    461c:	2f 5e       	subi	r18, 0xEF	; 239
    461e:	3f 4f       	sbci	r19, 0xFF	; 255
    4620:	4d 81       	ldd	r20, Y+5	; 0x05
    4622:	5e 81       	ldd	r21, Y+6	; 0x06
    4624:	8b 89       	ldd	r24, Y+19	; 0x13
    4626:	9c 89       	ldd	r25, Y+20	; 0x14
    4628:	8f 01       	movw	r16, r30
    462a:	0e 94 bb 20 	call	0x4176	; 0x4176 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>
								
					//verify that the checksum is correct
					if (calculatedChecksumA == messageChecksumA && calculatedChecksumB == messageChecksumB)
    462e:	99 89       	ldd	r25, Y+17	; 0x11
    4630:	8f 85       	ldd	r24, Y+15	; 0x0f
    4632:	98 17       	cp	r25, r24
    4634:	d9 f4       	brne	.+54     	; 0x466c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x280>
    4636:	9a 89       	ldd	r25, Y+18	; 0x12
    4638:	88 89       	ldd	r24, Y+16	; 0x10
    463a:	98 17       	cp	r25, r24
    463c:	b9 f4       	brne	.+46     	; 0x466c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x280>
					{
						//build the message
						switch(msgType)
    463e:	8e 85       	ldd	r24, Y+14	; 0x0e
    4640:	88 2f       	mov	r24, r24
    4642:	90 e0       	ldi	r25, 0x00	; 0
    4644:	82 30       	cpi	r24, 0x02	; 2
    4646:	91 05       	cpc	r25, r1
    4648:	59 f4       	brne	.+22     	; 0x4660 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x274>
						{
							case SystemTelemetryMessage::MessageType:
								receivedMessage = SystemTelemetryMessage::buildMessageSt(messagePayload);
    464a:	8b 85       	ldd	r24, Y+11	; 0x0b
    464c:	9c 85       	ldd	r25, Y+12	; 0x0c
    464e:	0e 94 aa 2f 	call	0x5f54	; 0x5f54 <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh>
    4652:	9c 01       	movw	r18, r24
    4654:	8d 89       	ldd	r24, Y+21	; 0x15
    4656:	9e 89       	ldd	r25, Y+22	; 0x16
    4658:	fc 01       	movw	r30, r24
    465a:	31 83       	std	Z+1, r19	; 0x01
    465c:	20 83       	st	Z, r18
							break;
    465e:	05 c0       	rjmp	.+10     	; 0x466a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x27e>
							default:
								//unrecognized message type.
								status = -2;
    4660:	8e ef       	ldi	r24, 0xFE	; 254
    4662:	9f ef       	ldi	r25, 0xFF	; 255
    4664:	9a 83       	std	Y+2, r25	; 0x02
    4666:	89 83       	std	Y+1, r24	; 0x01
							break;
    4668:	00 00       	nop
								
					//verify that the checksum is correct
					if (calculatedChecksumA == messageChecksumA && calculatedChecksumB == messageChecksumB)
					{
						//build the message
						switch(msgType)
    466a:	04 c0       	rjmp	.+8      	; 0x4674 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x288>
							break;
						}
					}else
					{
						//checksum mismatch
						status = -3;
    466c:	8d ef       	ldi	r24, 0xFD	; 253
    466e:	9f ef       	ldi	r25, 0xFF	; 255
    4670:	9a 83       	std	Y+2, r25	; 0x02
    4672:	89 83       	std	Y+1, r24	; 0x01
    4674:	0f b6       	in	r0, 0x3f	; 63
    4676:	f8 94       	cli
    4678:	de be       	out	0x3e, r13	; 62
    467a:	0f be       	out	0x3f, r0	; 63
    467c:	cd be       	out	0x3d, r12	; 61
				}
			}
		}
	}
	
	if (status != 0)
    467e:	89 81       	ldd	r24, Y+1	; 0x01
    4680:	9a 81       	ldd	r25, Y+2	; 0x02
    4682:	00 97       	sbiw	r24, 0x00	; 0
    4684:	29 f0       	breq	.+10     	; 0x4690 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x2a4>
	{
		receivedMessage = NULL;
    4686:	8d 89       	ldd	r24, Y+21	; 0x15
    4688:	9e 89       	ldd	r25, Y+22	; 0x16
    468a:	fc 01       	movw	r30, r24
    468c:	11 82       	std	Z+1, r1	; 0x01
    468e:	10 82       	st	Z, r1
	}
	
	return status;
    4690:	89 81       	ldd	r24, Y+1	; 0x01
    4692:	9a 81       	ldd	r25, Y+2	; 0x02
    4694:	0f b6       	in	r0, 0x3f	; 63
    4696:	f8 94       	cli
    4698:	fe be       	out	0x3e, r15	; 62
    469a:	0f be       	out	0x3f, r0	; 63
    469c:	ed be       	out	0x3d, r14	; 61
    469e:	66 96       	adiw	r28, 0x16	; 22
    46a0:	0f b6       	in	r0, 0x3f	; 63
    46a2:	f8 94       	cli
    46a4:	de bf       	out	0x3e, r29	; 62
    46a6:	0f be       	out	0x3f, r0	; 63
    46a8:	cd bf       	out	0x3d, r28	; 61
    46aa:	df 91       	pop	r29
    46ac:	cf 91       	pop	r28
    46ae:	1f 91       	pop	r17
    46b0:	0f 91       	pop	r16
    46b2:	ff 90       	pop	r15
    46b4:	ef 90       	pop	r14
    46b6:	df 90       	pop	r13
    46b8:	cf 90       	pop	r12
    46ba:	08 95       	ret

000046bc <_ZN10helicopter8messages7MessageD1Ev>:
					msgType(msgType), msgSize(msgSize)
				{
					
				}
				
				virtual ~Message()
    46bc:	cf 93       	push	r28
    46be:	df 93       	push	r29
    46c0:	1f 92       	push	r1
    46c2:	1f 92       	push	r1
    46c4:	cd b7       	in	r28, 0x3d	; 61
    46c6:	de b7       	in	r29, 0x3e	; 62
    46c8:	9a 83       	std	Y+2, r25	; 0x02
    46ca:	89 83       	std	Y+1, r24	; 0x01
				{
    46cc:	89 81       	ldd	r24, Y+1	; 0x01
    46ce:	9a 81       	ldd	r25, Y+2	; 0x02
    46d0:	20 e3       	ldi	r18, 0x30	; 48
    46d2:	32 e0       	ldi	r19, 0x02	; 2
    46d4:	fc 01       	movw	r30, r24
    46d6:	31 83       	std	Z+1, r19	; 0x01
    46d8:	20 83       	st	Z, r18
					
				}
    46da:	80 e0       	ldi	r24, 0x00	; 0
    46dc:	90 e0       	ldi	r25, 0x00	; 0
    46de:	81 70       	andi	r24, 0x01	; 1
    46e0:	99 27       	eor	r25, r25
    46e2:	00 97       	sbiw	r24, 0x00	; 0
    46e4:	21 f0       	breq	.+8      	; 0x46ee <_ZN10helicopter8messages7MessageD1Ev+0x32>
    46e6:	89 81       	ldd	r24, Y+1	; 0x01
    46e8:	9a 81       	ldd	r25, Y+2	; 0x02
    46ea:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    46ee:	0f 90       	pop	r0
    46f0:	0f 90       	pop	r0
    46f2:	df 91       	pop	r29
    46f4:	cf 91       	pop	r28
    46f6:	08 95       	ret

000046f8 <_ZN10helicopter8messages7MessageD0Ev>:
					msgType(msgType), msgSize(msgSize)
				{
					
				}
				
				virtual ~Message()
    46f8:	cf 93       	push	r28
    46fa:	df 93       	push	r29
    46fc:	1f 92       	push	r1
    46fe:	1f 92       	push	r1
    4700:	cd b7       	in	r28, 0x3d	; 61
    4702:	de b7       	in	r29, 0x3e	; 62
    4704:	9a 83       	std	Y+2, r25	; 0x02
    4706:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    4708:	89 81       	ldd	r24, Y+1	; 0x01
    470a:	9a 81       	ldd	r25, Y+2	; 0x02
    470c:	0e 94 5e 23 	call	0x46bc	; 0x46bc <_ZN10helicopter8messages7MessageD1Ev>
    4710:	89 81       	ldd	r24, Y+1	; 0x01
    4712:	9a 81       	ldd	r25, Y+2	; 0x02
    4714:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    4718:	0f 90       	pop	r0
    471a:	0f 90       	pop	r0
    471c:	df 91       	pop	r29
    471e:	cf 91       	pop	r28
    4720:	08 95       	ret

00004722 <_ZN10helicopter8messages7Message14getMessageSizeEv>:
	* Returns the number of bytes in this message. This should
	* be the payload of the message, and not underlying protocol
	* information (sync bytes and checksum bytes)
	*/
int Message::getMessageSize()
{
    4722:	cf 93       	push	r28
    4724:	df 93       	push	r29
    4726:	1f 92       	push	r1
    4728:	1f 92       	push	r1
    472a:	cd b7       	in	r28, 0x3d	; 61
    472c:	de b7       	in	r29, 0x3e	; 62
    472e:	9a 83       	std	Y+2, r25	; 0x02
    4730:	89 83       	std	Y+1, r24	; 0x01
	return msgSize;
    4732:	89 81       	ldd	r24, Y+1	; 0x01
    4734:	9a 81       	ldd	r25, Y+2	; 0x02
    4736:	fc 01       	movw	r30, r24
    4738:	83 81       	ldd	r24, Z+3	; 0x03
    473a:	94 81       	ldd	r25, Z+4	; 0x04
}
    473c:	0f 90       	pop	r0
    473e:	0f 90       	pop	r0
    4740:	df 91       	pop	r29
    4742:	cf 91       	pop	r28
    4744:	08 95       	ret

00004746 <_ZN10helicopter8messages7Message8getBytesEv>:
				
/**
	* Returns the data in this message in raw byte format for transmission.
	*/
byte *Message::getBytes()
{
    4746:	cf 93       	push	r28
    4748:	df 93       	push	r29
    474a:	1f 92       	push	r1
    474c:	1f 92       	push	r1
    474e:	cd b7       	in	r28, 0x3d	; 61
    4750:	de b7       	in	r29, 0x3e	; 62
    4752:	9a 83       	std	Y+2, r25	; 0x02
    4754:	89 83       	std	Y+1, r24	; 0x01
	return NULL;
    4756:	80 e0       	ldi	r24, 0x00	; 0
    4758:	90 e0       	ldi	r25, 0x00	; 0
}
    475a:	0f 90       	pop	r0
    475c:	0f 90       	pop	r0
    475e:	df 91       	pop	r29
    4760:	cf 91       	pop	r28
    4762:	08 95       	ret

00004764 <_ZN10helicopter8messages7Message12buildMessageEPh>:
	* for creating a message object given a stream of bytes.
	* @param message The bytes in the payload of the message which should be used
	* to construct a message object.
	*/
void Message::buildMessage(byte *message)
{
    4764:	cf 93       	push	r28
    4766:	df 93       	push	r29
    4768:	00 d0       	rcall	.+0      	; 0x476a <_ZN10helicopter8messages7Message12buildMessageEPh+0x6>
    476a:	1f 92       	push	r1
    476c:	cd b7       	in	r28, 0x3d	; 61
    476e:	de b7       	in	r29, 0x3e	; 62
    4770:	9a 83       	std	Y+2, r25	; 0x02
    4772:	89 83       	std	Y+1, r24	; 0x01
    4774:	7c 83       	std	Y+4, r23	; 0x04
    4776:	6b 83       	std	Y+3, r22	; 0x03
	//noop. subclass should implement this.
    4778:	0f 90       	pop	r0
    477a:	0f 90       	pop	r0
    477c:	0f 90       	pop	r0
    477e:	0f 90       	pop	r0
    4780:	df 91       	pop	r29
    4782:	cf 91       	pop	r28
    4784:	08 95       	ret

00004786 <_ZN10helicopter8messages7MessageC1Ehi>:
			
				/**
				 * @param msgType The identifier of this message
				 * @param msgSize The size in bytes of this message
				 */
				Message (byte msgType, int msgSize):
    4786:	cf 93       	push	r28
    4788:	df 93       	push	r29
    478a:	00 d0       	rcall	.+0      	; 0x478c <_ZN10helicopter8messages7MessageC1Ehi+0x6>
    478c:	1f 92       	push	r1
    478e:	1f 92       	push	r1
    4790:	cd b7       	in	r28, 0x3d	; 61
    4792:	de b7       	in	r29, 0x3e	; 62
    4794:	9a 83       	std	Y+2, r25	; 0x02
    4796:	89 83       	std	Y+1, r24	; 0x01
    4798:	6b 83       	std	Y+3, r22	; 0x03
    479a:	5d 83       	std	Y+5, r21	; 0x05
    479c:	4c 83       	std	Y+4, r20	; 0x04
					msgType(msgType), msgSize(msgSize)
    479e:	89 81       	ldd	r24, Y+1	; 0x01
    47a0:	9a 81       	ldd	r25, Y+2	; 0x02
    47a2:	20 e3       	ldi	r18, 0x30	; 48
    47a4:	32 e0       	ldi	r19, 0x02	; 2
    47a6:	fc 01       	movw	r30, r24
    47a8:	31 83       	std	Z+1, r19	; 0x01
    47aa:	20 83       	st	Z, r18
    47ac:	89 81       	ldd	r24, Y+1	; 0x01
    47ae:	9a 81       	ldd	r25, Y+2	; 0x02
    47b0:	2b 81       	ldd	r18, Y+3	; 0x03
    47b2:	fc 01       	movw	r30, r24
    47b4:	22 83       	std	Z+2, r18	; 0x02
    47b6:	89 81       	ldd	r24, Y+1	; 0x01
    47b8:	9a 81       	ldd	r25, Y+2	; 0x02
    47ba:	2c 81       	ldd	r18, Y+4	; 0x04
    47bc:	3d 81       	ldd	r19, Y+5	; 0x05
    47be:	fc 01       	movw	r30, r24
    47c0:	34 83       	std	Z+4, r19	; 0x04
    47c2:	23 83       	std	Z+3, r18	; 0x03
				{
					
				}
    47c4:	0f 90       	pop	r0
    47c6:	0f 90       	pop	r0
    47c8:	0f 90       	pop	r0
    47ca:	0f 90       	pop	r0
    47cc:	0f 90       	pop	r0
    47ce:	df 91       	pop	r29
    47d0:	cf 91       	pop	r28
    47d2:	08 95       	ret

000047d4 <_ZN10helicopter8messages11SyncMessageC1Ev>:
				static const byte MessageType = 3;
							
				static const byte MessageSize =
					sizeof(msgType);
							
				SyncMessage(): Message(MessageType,MessageSize)
    47d4:	cf 93       	push	r28
    47d6:	df 93       	push	r29
    47d8:	1f 92       	push	r1
    47da:	1f 92       	push	r1
    47dc:	cd b7       	in	r28, 0x3d	; 61
    47de:	de b7       	in	r29, 0x3e	; 62
    47e0:	9a 83       	std	Y+2, r25	; 0x02
    47e2:	89 83       	std	Y+1, r24	; 0x01
    47e4:	89 81       	ldd	r24, Y+1	; 0x01
    47e6:	9a 81       	ldd	r25, Y+2	; 0x02
    47e8:	41 e0       	ldi	r20, 0x01	; 1
    47ea:	50 e0       	ldi	r21, 0x00	; 0
    47ec:	63 e0       	ldi	r22, 0x03	; 3
    47ee:	0e 94 c3 23 	call	0x4786	; 0x4786 <_ZN10helicopter8messages7MessageC1Ehi>
    47f2:	89 81       	ldd	r24, Y+1	; 0x01
    47f4:	9a 81       	ldd	r25, Y+2	; 0x02
    47f6:	2c e3       	ldi	r18, 0x3C	; 60
    47f8:	32 e0       	ldi	r19, 0x02	; 2
    47fa:	fc 01       	movw	r30, r24
    47fc:	31 83       	std	Z+1, r19	; 0x01
    47fe:	20 83       	st	Z, r18
				{
								
				}
    4800:	0f 90       	pop	r0
    4802:	0f 90       	pop	r0
    4804:	df 91       	pop	r29
    4806:	cf 91       	pop	r28
    4808:	08 95       	ret

0000480a <_ZN10helicopter8messages11SyncMessageD1Ev>:
				
				~SyncMessage()
    480a:	cf 93       	push	r28
    480c:	df 93       	push	r29
    480e:	1f 92       	push	r1
    4810:	1f 92       	push	r1
    4812:	cd b7       	in	r28, 0x3d	; 61
    4814:	de b7       	in	r29, 0x3e	; 62
    4816:	9a 83       	std	Y+2, r25	; 0x02
    4818:	89 83       	std	Y+1, r24	; 0x01
				{
    481a:	89 81       	ldd	r24, Y+1	; 0x01
    481c:	9a 81       	ldd	r25, Y+2	; 0x02
    481e:	2c e3       	ldi	r18, 0x3C	; 60
    4820:	32 e0       	ldi	r19, 0x02	; 2
    4822:	fc 01       	movw	r30, r24
    4824:	31 83       	std	Z+1, r19	; 0x01
    4826:	20 83       	st	Z, r18
    4828:	89 81       	ldd	r24, Y+1	; 0x01
    482a:	9a 81       	ldd	r25, Y+2	; 0x02
    482c:	0e 94 5e 23 	call	0x46bc	; 0x46bc <_ZN10helicopter8messages7MessageD1Ev>
					
				}
    4830:	80 e0       	ldi	r24, 0x00	; 0
    4832:	90 e0       	ldi	r25, 0x00	; 0
    4834:	81 70       	andi	r24, 0x01	; 1
    4836:	99 27       	eor	r25, r25
    4838:	00 97       	sbiw	r24, 0x00	; 0
    483a:	21 f0       	breq	.+8      	; 0x4844 <_ZN10helicopter8messages11SyncMessageD1Ev+0x3a>
    483c:	89 81       	ldd	r24, Y+1	; 0x01
    483e:	9a 81       	ldd	r25, Y+2	; 0x02
    4840:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    4844:	0f 90       	pop	r0
    4846:	0f 90       	pop	r0
    4848:	df 91       	pop	r29
    484a:	cf 91       	pop	r28
    484c:	08 95       	ret

0000484e <_ZN10helicopter8messages11SyncMessageD0Ev>:
				SyncMessage(): Message(MessageType,MessageSize)
				{
								
				}
				
				~SyncMessage()
    484e:	cf 93       	push	r28
    4850:	df 93       	push	r29
    4852:	1f 92       	push	r1
    4854:	1f 92       	push	r1
    4856:	cd b7       	in	r28, 0x3d	; 61
    4858:	de b7       	in	r29, 0x3e	; 62
    485a:	9a 83       	std	Y+2, r25	; 0x02
    485c:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    485e:	89 81       	ldd	r24, Y+1	; 0x01
    4860:	9a 81       	ldd	r25, Y+2	; 0x02
    4862:	0e 94 05 24 	call	0x480a	; 0x480a <_ZN10helicopter8messages11SyncMessageD1Ev>
    4866:	89 81       	ldd	r24, Y+1	; 0x01
    4868:	9a 81       	ldd	r25, Y+2	; 0x02
    486a:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    486e:	0f 90       	pop	r0
    4870:	0f 90       	pop	r0
    4872:	df 91       	pop	r29
    4874:	cf 91       	pop	r28
    4876:	08 95       	ret

00004878 <_ZN10helicopter8messages11SyncMessage8getBytesEv>:

using namespace helicopter::messages;


byte *SyncMessage::getBytes()
{
    4878:	cf 93       	push	r28
    487a:	df 93       	push	r29
    487c:	00 d0       	rcall	.+0      	; 0x487e <_ZN10helicopter8messages11SyncMessage8getBytesEv+0x6>
    487e:	00 d0       	rcall	.+0      	; 0x4880 <_ZN10helicopter8messages11SyncMessage8getBytesEv+0x8>
    4880:	cd b7       	in	r28, 0x3d	; 61
    4882:	de b7       	in	r29, 0x3e	; 62
    4884:	9e 83       	std	Y+6, r25	; 0x06
    4886:	8d 83       	std	Y+5, r24	; 0x05
	byte *msg = new byte[MessageSize];
    4888:	81 e0       	ldi	r24, 0x01	; 1
    488a:	90 e0       	ldi	r25, 0x00	; 0
    488c:	0e 94 27 3d 	call	0x7a4e	; 0x7a4e <_Znaj>
    4890:	9a 83       	std	Y+2, r25	; 0x02
    4892:	89 83       	std	Y+1, r24	; 0x01
	byte *msgPtr = msg;
    4894:	89 81       	ldd	r24, Y+1	; 0x01
    4896:	9a 81       	ldd	r25, Y+2	; 0x02
    4898:	9c 83       	std	Y+4, r25	; 0x04
    489a:	8b 83       	std	Y+3, r24	; 0x03
	msgPtr[0] = this->msgType;
    489c:	8d 81       	ldd	r24, Y+5	; 0x05
    489e:	9e 81       	ldd	r25, Y+6	; 0x06
    48a0:	fc 01       	movw	r30, r24
    48a2:	22 81       	ldd	r18, Z+2	; 0x02
    48a4:	8b 81       	ldd	r24, Y+3	; 0x03
    48a6:	9c 81       	ldd	r25, Y+4	; 0x04
    48a8:	fc 01       	movw	r30, r24
    48aa:	20 83       	st	Z, r18
	
	return msg;
    48ac:	89 81       	ldd	r24, Y+1	; 0x01
    48ae:	9a 81       	ldd	r25, Y+2	; 0x02
}
    48b0:	26 96       	adiw	r28, 0x06	; 6
    48b2:	0f b6       	in	r0, 0x3f	; 63
    48b4:	f8 94       	cli
    48b6:	de bf       	out	0x3e, r29	; 62
    48b8:	0f be       	out	0x3f, r0	; 63
    48ba:	cd bf       	out	0x3d, r28	; 61
    48bc:	df 91       	pop	r29
    48be:	cf 91       	pop	r28
    48c0:	08 95       	ret

000048c2 <_ZN10helicopter8messages11SyncMessage12buildMessageEPh>:

void SyncMessage::buildMessage(byte *message)
{
    48c2:	cf 93       	push	r28
    48c4:	df 93       	push	r29
    48c6:	00 d0       	rcall	.+0      	; 0x48c8 <_ZN10helicopter8messages11SyncMessage12buildMessageEPh+0x6>
    48c8:	1f 92       	push	r1
    48ca:	cd b7       	in	r28, 0x3d	; 61
    48cc:	de b7       	in	r29, 0x3e	; 62
    48ce:	9a 83       	std	Y+2, r25	; 0x02
    48d0:	89 83       	std	Y+1, r24	; 0x01
    48d2:	7c 83       	std	Y+4, r23	; 0x04
    48d4:	6b 83       	std	Y+3, r22	; 0x03
	if (message != NULL)
    48d6:	8b 81       	ldd	r24, Y+3	; 0x03
    48d8:	9c 81       	ldd	r25, Y+4	; 0x04
    48da:	00 97       	sbiw	r24, 0x00	; 0
    48dc:	41 f0       	breq	.+16     	; 0x48ee <_ZN10helicopter8messages11SyncMessage12buildMessageEPh+0x2c>
	{
		msgType = message[0];
    48de:	8b 81       	ldd	r24, Y+3	; 0x03
    48e0:	9c 81       	ldd	r25, Y+4	; 0x04
    48e2:	fc 01       	movw	r30, r24
    48e4:	20 81       	ld	r18, Z
    48e6:	89 81       	ldd	r24, Y+1	; 0x01
    48e8:	9a 81       	ldd	r25, Y+2	; 0x02
    48ea:	fc 01       	movw	r30, r24
    48ec:	22 83       	std	Z+2, r18	; 0x02
	}
}
    48ee:	0f 90       	pop	r0
    48f0:	0f 90       	pop	r0
    48f2:	0f 90       	pop	r0
    48f4:	0f 90       	pop	r0
    48f6:	df 91       	pop	r29
    48f8:	cf 91       	pop	r28
    48fa:	08 95       	ret

000048fc <_ZN10helicopter8messages7Message6encodeERPhRl>:
				
				/**
				 * Mem copies the value into the buffer pointer then increments
				 * the pointer location by the size of the value copied.
				 */
				void encode (byte *&buffPtr, long &val)
    48fc:	cf 93       	push	r28
    48fe:	df 93       	push	r29
    4900:	00 d0       	rcall	.+0      	; 0x4902 <_ZN10helicopter8messages7Message6encodeERPhRl+0x6>
    4902:	00 d0       	rcall	.+0      	; 0x4904 <_ZN10helicopter8messages7Message6encodeERPhRl+0x8>
    4904:	cd b7       	in	r28, 0x3d	; 61
    4906:	de b7       	in	r29, 0x3e	; 62
    4908:	9a 83       	std	Y+2, r25	; 0x02
    490a:	89 83       	std	Y+1, r24	; 0x01
    490c:	7c 83       	std	Y+4, r23	; 0x04
    490e:	6b 83       	std	Y+3, r22	; 0x03
    4910:	5e 83       	std	Y+6, r21	; 0x06
    4912:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(buffPtr, &val, sizeof(val));
    4914:	8b 81       	ldd	r24, Y+3	; 0x03
    4916:	9c 81       	ldd	r25, Y+4	; 0x04
    4918:	fc 01       	movw	r30, r24
    491a:	80 81       	ld	r24, Z
    491c:	91 81       	ldd	r25, Z+1	; 0x01
    491e:	2d 81       	ldd	r18, Y+5	; 0x05
    4920:	3e 81       	ldd	r19, Y+6	; 0x06
    4922:	44 e0       	ldi	r20, 0x04	; 4
    4924:	50 e0       	ldi	r21, 0x00	; 0
    4926:	b9 01       	movw	r22, r18
    4928:	0e 94 e6 48 	call	0x91cc	; 0x91cc <memcpy>
					buffPtr += sizeof(val);
    492c:	8b 81       	ldd	r24, Y+3	; 0x03
    492e:	9c 81       	ldd	r25, Y+4	; 0x04
    4930:	fc 01       	movw	r30, r24
    4932:	80 81       	ld	r24, Z
    4934:	91 81       	ldd	r25, Z+1	; 0x01
    4936:	9c 01       	movw	r18, r24
    4938:	2c 5f       	subi	r18, 0xFC	; 252
    493a:	3f 4f       	sbci	r19, 0xFF	; 255
    493c:	8b 81       	ldd	r24, Y+3	; 0x03
    493e:	9c 81       	ldd	r25, Y+4	; 0x04
    4940:	fc 01       	movw	r30, r24
    4942:	31 83       	std	Z+1, r19	; 0x01
    4944:	20 83       	st	Z, r18
				}
    4946:	26 96       	adiw	r28, 0x06	; 6
    4948:	0f b6       	in	r0, 0x3f	; 63
    494a:	f8 94       	cli
    494c:	de bf       	out	0x3e, r29	; 62
    494e:	0f be       	out	0x3f, r0	; 63
    4950:	cd bf       	out	0x3d, r28	; 61
    4952:	df 91       	pop	r29
    4954:	cf 91       	pop	r28
    4956:	08 95       	ret

00004958 <_ZN10helicopter8messages7Message6encodeERPhRf>:
				
				void encode (byte *&buffPtr, float &val)
    4958:	cf 93       	push	r28
    495a:	df 93       	push	r29
    495c:	00 d0       	rcall	.+0      	; 0x495e <_ZN10helicopter8messages7Message6encodeERPhRf+0x6>
    495e:	00 d0       	rcall	.+0      	; 0x4960 <_ZN10helicopter8messages7Message6encodeERPhRf+0x8>
    4960:	cd b7       	in	r28, 0x3d	; 61
    4962:	de b7       	in	r29, 0x3e	; 62
    4964:	9a 83       	std	Y+2, r25	; 0x02
    4966:	89 83       	std	Y+1, r24	; 0x01
    4968:	7c 83       	std	Y+4, r23	; 0x04
    496a:	6b 83       	std	Y+3, r22	; 0x03
    496c:	5e 83       	std	Y+6, r21	; 0x06
    496e:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(buffPtr, &val, sizeof(val));
    4970:	8b 81       	ldd	r24, Y+3	; 0x03
    4972:	9c 81       	ldd	r25, Y+4	; 0x04
    4974:	fc 01       	movw	r30, r24
    4976:	80 81       	ld	r24, Z
    4978:	91 81       	ldd	r25, Z+1	; 0x01
    497a:	2d 81       	ldd	r18, Y+5	; 0x05
    497c:	3e 81       	ldd	r19, Y+6	; 0x06
    497e:	44 e0       	ldi	r20, 0x04	; 4
    4980:	50 e0       	ldi	r21, 0x00	; 0
    4982:	b9 01       	movw	r22, r18
    4984:	0e 94 e6 48 	call	0x91cc	; 0x91cc <memcpy>
					buffPtr += sizeof(val);
    4988:	8b 81       	ldd	r24, Y+3	; 0x03
    498a:	9c 81       	ldd	r25, Y+4	; 0x04
    498c:	fc 01       	movw	r30, r24
    498e:	80 81       	ld	r24, Z
    4990:	91 81       	ldd	r25, Z+1	; 0x01
    4992:	9c 01       	movw	r18, r24
    4994:	2c 5f       	subi	r18, 0xFC	; 252
    4996:	3f 4f       	sbci	r19, 0xFF	; 255
    4998:	8b 81       	ldd	r24, Y+3	; 0x03
    499a:	9c 81       	ldd	r25, Y+4	; 0x04
    499c:	fc 01       	movw	r30, r24
    499e:	31 83       	std	Z+1, r19	; 0x01
    49a0:	20 83       	st	Z, r18
				}				
    49a2:	26 96       	adiw	r28, 0x06	; 6
    49a4:	0f b6       	in	r0, 0x3f	; 63
    49a6:	f8 94       	cli
    49a8:	de bf       	out	0x3e, r29	; 62
    49aa:	0f be       	out	0x3f, r0	; 63
    49ac:	cd bf       	out	0x3d, r28	; 61
    49ae:	df 91       	pop	r29
    49b0:	cf 91       	pop	r28
    49b2:	08 95       	ret

000049b4 <_ZN10helicopter8messages7Message6encodeERPhRh>:
				{
					memcpy(buffPtr, &val, sizeof(val));
					buffPtr += sizeof(val);
				}		
				
				void encode (byte *&buffPtr, byte &val)
    49b4:	cf 93       	push	r28
    49b6:	df 93       	push	r29
    49b8:	00 d0       	rcall	.+0      	; 0x49ba <_ZN10helicopter8messages7Message6encodeERPhRh+0x6>
    49ba:	00 d0       	rcall	.+0      	; 0x49bc <_ZN10helicopter8messages7Message6encodeERPhRh+0x8>
    49bc:	cd b7       	in	r28, 0x3d	; 61
    49be:	de b7       	in	r29, 0x3e	; 62
    49c0:	9a 83       	std	Y+2, r25	; 0x02
    49c2:	89 83       	std	Y+1, r24	; 0x01
    49c4:	7c 83       	std	Y+4, r23	; 0x04
    49c6:	6b 83       	std	Y+3, r22	; 0x03
    49c8:	5e 83       	std	Y+6, r21	; 0x06
    49ca:	4d 83       	std	Y+5, r20	; 0x05
				{
					*buffPtr = val;
    49cc:	8b 81       	ldd	r24, Y+3	; 0x03
    49ce:	9c 81       	ldd	r25, Y+4	; 0x04
    49d0:	fc 01       	movw	r30, r24
    49d2:	80 81       	ld	r24, Z
    49d4:	91 81       	ldd	r25, Z+1	; 0x01
    49d6:	2d 81       	ldd	r18, Y+5	; 0x05
    49d8:	3e 81       	ldd	r19, Y+6	; 0x06
    49da:	f9 01       	movw	r30, r18
    49dc:	20 81       	ld	r18, Z
    49de:	fc 01       	movw	r30, r24
    49e0:	20 83       	st	Z, r18
					buffPtr += sizeof(val);
    49e2:	8b 81       	ldd	r24, Y+3	; 0x03
    49e4:	9c 81       	ldd	r25, Y+4	; 0x04
    49e6:	fc 01       	movw	r30, r24
    49e8:	80 81       	ld	r24, Z
    49ea:	91 81       	ldd	r25, Z+1	; 0x01
    49ec:	9c 01       	movw	r18, r24
    49ee:	2f 5f       	subi	r18, 0xFF	; 255
    49f0:	3f 4f       	sbci	r19, 0xFF	; 255
    49f2:	8b 81       	ldd	r24, Y+3	; 0x03
    49f4:	9c 81       	ldd	r25, Y+4	; 0x04
    49f6:	fc 01       	movw	r30, r24
    49f8:	31 83       	std	Z+1, r19	; 0x01
    49fa:	20 83       	st	Z, r18
				}
    49fc:	26 96       	adiw	r28, 0x06	; 6
    49fe:	0f b6       	in	r0, 0x3f	; 63
    4a00:	f8 94       	cli
    4a02:	de bf       	out	0x3e, r29	; 62
    4a04:	0f be       	out	0x3f, r0	; 63
    4a06:	cd bf       	out	0x3d, r28	; 61
    4a08:	df 91       	pop	r29
    4a0a:	cf 91       	pop	r28
    4a0c:	08 95       	ret

00004a0e <_ZN10helicopter8messages7Message6decodeERPhRh>:
				
				/**
				 * Copies the the value at the buff pointer location into the given val parameter and
				 * increments the buffer by the sizeof(val)
				 */
				void decode (byte *&buffPtr, byte &val)
    4a0e:	cf 93       	push	r28
    4a10:	df 93       	push	r29
    4a12:	00 d0       	rcall	.+0      	; 0x4a14 <_ZN10helicopter8messages7Message6decodeERPhRh+0x6>
    4a14:	00 d0       	rcall	.+0      	; 0x4a16 <_ZN10helicopter8messages7Message6decodeERPhRh+0x8>
    4a16:	cd b7       	in	r28, 0x3d	; 61
    4a18:	de b7       	in	r29, 0x3e	; 62
    4a1a:	9a 83       	std	Y+2, r25	; 0x02
    4a1c:	89 83       	std	Y+1, r24	; 0x01
    4a1e:	7c 83       	std	Y+4, r23	; 0x04
    4a20:	6b 83       	std	Y+3, r22	; 0x03
    4a22:	5e 83       	std	Y+6, r21	; 0x06
    4a24:	4d 83       	std	Y+5, r20	; 0x05
				{
					val = *buffPtr;
    4a26:	8b 81       	ldd	r24, Y+3	; 0x03
    4a28:	9c 81       	ldd	r25, Y+4	; 0x04
    4a2a:	fc 01       	movw	r30, r24
    4a2c:	80 81       	ld	r24, Z
    4a2e:	91 81       	ldd	r25, Z+1	; 0x01
    4a30:	fc 01       	movw	r30, r24
    4a32:	20 81       	ld	r18, Z
    4a34:	8d 81       	ldd	r24, Y+5	; 0x05
    4a36:	9e 81       	ldd	r25, Y+6	; 0x06
    4a38:	fc 01       	movw	r30, r24
    4a3a:	20 83       	st	Z, r18
					buffPtr += sizeof(val);
    4a3c:	8b 81       	ldd	r24, Y+3	; 0x03
    4a3e:	9c 81       	ldd	r25, Y+4	; 0x04
    4a40:	fc 01       	movw	r30, r24
    4a42:	80 81       	ld	r24, Z
    4a44:	91 81       	ldd	r25, Z+1	; 0x01
    4a46:	9c 01       	movw	r18, r24
    4a48:	2f 5f       	subi	r18, 0xFF	; 255
    4a4a:	3f 4f       	sbci	r19, 0xFF	; 255
    4a4c:	8b 81       	ldd	r24, Y+3	; 0x03
    4a4e:	9c 81       	ldd	r25, Y+4	; 0x04
    4a50:	fc 01       	movw	r30, r24
    4a52:	31 83       	std	Z+1, r19	; 0x01
    4a54:	20 83       	st	Z, r18
				}
    4a56:	26 96       	adiw	r28, 0x06	; 6
    4a58:	0f b6       	in	r0, 0x3f	; 63
    4a5a:	f8 94       	cli
    4a5c:	de bf       	out	0x3e, r29	; 62
    4a5e:	0f be       	out	0x3f, r0	; 63
    4a60:	cd bf       	out	0x3d, r28	; 61
    4a62:	df 91       	pop	r29
    4a64:	cf 91       	pop	r28
    4a66:	08 95       	ret

00004a68 <_ZN10helicopter8messages7Message6decodeERPhRl>:
				
				void decode (byte *&buffPtr, long &val)
    4a68:	cf 93       	push	r28
    4a6a:	df 93       	push	r29
    4a6c:	00 d0       	rcall	.+0      	; 0x4a6e <_ZN10helicopter8messages7Message6decodeERPhRl+0x6>
    4a6e:	00 d0       	rcall	.+0      	; 0x4a70 <_ZN10helicopter8messages7Message6decodeERPhRl+0x8>
    4a70:	cd b7       	in	r28, 0x3d	; 61
    4a72:	de b7       	in	r29, 0x3e	; 62
    4a74:	9a 83       	std	Y+2, r25	; 0x02
    4a76:	89 83       	std	Y+1, r24	; 0x01
    4a78:	7c 83       	std	Y+4, r23	; 0x04
    4a7a:	6b 83       	std	Y+3, r22	; 0x03
    4a7c:	5e 83       	std	Y+6, r21	; 0x06
    4a7e:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(&val, buffPtr, sizeof(val));
    4a80:	8b 81       	ldd	r24, Y+3	; 0x03
    4a82:	9c 81       	ldd	r25, Y+4	; 0x04
    4a84:	fc 01       	movw	r30, r24
    4a86:	20 81       	ld	r18, Z
    4a88:	31 81       	ldd	r19, Z+1	; 0x01
    4a8a:	8d 81       	ldd	r24, Y+5	; 0x05
    4a8c:	9e 81       	ldd	r25, Y+6	; 0x06
    4a8e:	44 e0       	ldi	r20, 0x04	; 4
    4a90:	50 e0       	ldi	r21, 0x00	; 0
    4a92:	b9 01       	movw	r22, r18
    4a94:	0e 94 e6 48 	call	0x91cc	; 0x91cc <memcpy>
					buffPtr += sizeof(val);
    4a98:	8b 81       	ldd	r24, Y+3	; 0x03
    4a9a:	9c 81       	ldd	r25, Y+4	; 0x04
    4a9c:	fc 01       	movw	r30, r24
    4a9e:	80 81       	ld	r24, Z
    4aa0:	91 81       	ldd	r25, Z+1	; 0x01
    4aa2:	9c 01       	movw	r18, r24
    4aa4:	2c 5f       	subi	r18, 0xFC	; 252
    4aa6:	3f 4f       	sbci	r19, 0xFF	; 255
    4aa8:	8b 81       	ldd	r24, Y+3	; 0x03
    4aaa:	9c 81       	ldd	r25, Y+4	; 0x04
    4aac:	fc 01       	movw	r30, r24
    4aae:	31 83       	std	Z+1, r19	; 0x01
    4ab0:	20 83       	st	Z, r18
				}
    4ab2:	26 96       	adiw	r28, 0x06	; 6
    4ab4:	0f b6       	in	r0, 0x3f	; 63
    4ab6:	f8 94       	cli
    4ab8:	de bf       	out	0x3e, r29	; 62
    4aba:	0f be       	out	0x3f, r0	; 63
    4abc:	cd bf       	out	0x3d, r28	; 61
    4abe:	df 91       	pop	r29
    4ac0:	cf 91       	pop	r28
    4ac2:	08 95       	ret

00004ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>:
				
				void decode (byte *&buffPtr, float &val)
    4ac4:	cf 93       	push	r28
    4ac6:	df 93       	push	r29
    4ac8:	00 d0       	rcall	.+0      	; 0x4aca <_ZN10helicopter8messages7Message6decodeERPhRf+0x6>
    4aca:	00 d0       	rcall	.+0      	; 0x4acc <_ZN10helicopter8messages7Message6decodeERPhRf+0x8>
    4acc:	cd b7       	in	r28, 0x3d	; 61
    4ace:	de b7       	in	r29, 0x3e	; 62
    4ad0:	9a 83       	std	Y+2, r25	; 0x02
    4ad2:	89 83       	std	Y+1, r24	; 0x01
    4ad4:	7c 83       	std	Y+4, r23	; 0x04
    4ad6:	6b 83       	std	Y+3, r22	; 0x03
    4ad8:	5e 83       	std	Y+6, r21	; 0x06
    4ada:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(&val, buffPtr, sizeof(val));
    4adc:	8b 81       	ldd	r24, Y+3	; 0x03
    4ade:	9c 81       	ldd	r25, Y+4	; 0x04
    4ae0:	fc 01       	movw	r30, r24
    4ae2:	20 81       	ld	r18, Z
    4ae4:	31 81       	ldd	r19, Z+1	; 0x01
    4ae6:	8d 81       	ldd	r24, Y+5	; 0x05
    4ae8:	9e 81       	ldd	r25, Y+6	; 0x06
    4aea:	44 e0       	ldi	r20, 0x04	; 4
    4aec:	50 e0       	ldi	r21, 0x00	; 0
    4aee:	b9 01       	movw	r22, r18
    4af0:	0e 94 e6 48 	call	0x91cc	; 0x91cc <memcpy>
					buffPtr += sizeof(val);
    4af4:	8b 81       	ldd	r24, Y+3	; 0x03
    4af6:	9c 81       	ldd	r25, Y+4	; 0x04
    4af8:	fc 01       	movw	r30, r24
    4afa:	80 81       	ld	r24, Z
    4afc:	91 81       	ldd	r25, Z+1	; 0x01
    4afe:	9c 01       	movw	r18, r24
    4b00:	2c 5f       	subi	r18, 0xFC	; 252
    4b02:	3f 4f       	sbci	r19, 0xFF	; 255
    4b04:	8b 81       	ldd	r24, Y+3	; 0x03
    4b06:	9c 81       	ldd	r25, Y+4	; 0x04
    4b08:	fc 01       	movw	r30, r24
    4b0a:	31 83       	std	Z+1, r19	; 0x01
    4b0c:	20 83       	st	Z, r18
				}
    4b0e:	26 96       	adiw	r28, 0x06	; 6
    4b10:	0f b6       	in	r0, 0x3f	; 63
    4b12:	f8 94       	cli
    4b14:	de bf       	out	0x3e, r29	; 62
    4b16:	0f be       	out	0x3f, r0	; 63
    4b18:	cd bf       	out	0x3d, r28	; 61
    4b1a:	df 91       	pop	r29
    4b1c:	cf 91       	pop	r28
    4b1e:	08 95       	ret

00004b20 <_ZN10helicopter5model11SystemModel13MagYawDegreesEf>:
			 * Z axis is pointing up out of the FC
			 */
			

			float MagYawDegrees() const { return magYawDegrees; }
			void MagYawDegrees(float val) { magYawDegrees = val; }	
    4b20:	cf 93       	push	r28
    4b22:	df 93       	push	r29
    4b24:	00 d0       	rcall	.+0      	; 0x4b26 <_ZN10helicopter5model11SystemModel13MagYawDegreesEf+0x6>
    4b26:	00 d0       	rcall	.+0      	; 0x4b28 <_ZN10helicopter5model11SystemModel13MagYawDegreesEf+0x8>
    4b28:	cd b7       	in	r28, 0x3d	; 61
    4b2a:	de b7       	in	r29, 0x3e	; 62
    4b2c:	9a 83       	std	Y+2, r25	; 0x02
    4b2e:	89 83       	std	Y+1, r24	; 0x01
    4b30:	4b 83       	std	Y+3, r20	; 0x03
    4b32:	5c 83       	std	Y+4, r21	; 0x04
    4b34:	6d 83       	std	Y+5, r22	; 0x05
    4b36:	7e 83       	std	Y+6, r23	; 0x06
    4b38:	29 81       	ldd	r18, Y+1	; 0x01
    4b3a:	3a 81       	ldd	r19, Y+2	; 0x02
    4b3c:	8b 81       	ldd	r24, Y+3	; 0x03
    4b3e:	9c 81       	ldd	r25, Y+4	; 0x04
    4b40:	ad 81       	ldd	r26, Y+5	; 0x05
    4b42:	be 81       	ldd	r27, Y+6	; 0x06
    4b44:	f9 01       	movw	r30, r18
    4b46:	80 83       	st	Z, r24
    4b48:	91 83       	std	Z+1, r25	; 0x01
    4b4a:	a2 83       	std	Z+2, r26	; 0x02
    4b4c:	b3 83       	std	Z+3, r27	; 0x03
    4b4e:	26 96       	adiw	r28, 0x06	; 6
    4b50:	0f b6       	in	r0, 0x3f	; 63
    4b52:	f8 94       	cli
    4b54:	de bf       	out	0x3e, r29	; 62
    4b56:	0f be       	out	0x3f, r0	; 63
    4b58:	cd bf       	out	0x3d, r28	; 61
    4b5a:	df 91       	pop	r29
    4b5c:	cf 91       	pop	r28
    4b5e:	08 95       	ret

00004b60 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf>:
				
			float YawControlBeforeServoLimitsAdjustment() const {return yawControlBeforeServoLimitsAdjustment;}
			void YawControlBeforeServoLimitsAdjustment(float val) { yawControlBeforeServoLimitsAdjustment = val;}
				
			float YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
			void YawVelocityDegreesPerSecond(float val) { yawVelocityDegreesPerSecond = val;}
    4b60:	cf 93       	push	r28
    4b62:	df 93       	push	r29
    4b64:	00 d0       	rcall	.+0      	; 0x4b66 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf+0x6>
    4b66:	00 d0       	rcall	.+0      	; 0x4b68 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf+0x8>
    4b68:	cd b7       	in	r28, 0x3d	; 61
    4b6a:	de b7       	in	r29, 0x3e	; 62
    4b6c:	9a 83       	std	Y+2, r25	; 0x02
    4b6e:	89 83       	std	Y+1, r24	; 0x01
    4b70:	4b 83       	std	Y+3, r20	; 0x03
    4b72:	5c 83       	std	Y+4, r21	; 0x04
    4b74:	6d 83       	std	Y+5, r22	; 0x05
    4b76:	7e 83       	std	Y+6, r23	; 0x06
    4b78:	29 81       	ldd	r18, Y+1	; 0x01
    4b7a:	3a 81       	ldd	r19, Y+2	; 0x02
    4b7c:	8b 81       	ldd	r24, Y+3	; 0x03
    4b7e:	9c 81       	ldd	r25, Y+4	; 0x04
    4b80:	ad 81       	ldd	r26, Y+5	; 0x05
    4b82:	be 81       	ldd	r27, Y+6	; 0x06
    4b84:	f9 01       	movw	r30, r18
    4b86:	80 8b       	std	Z+16, r24	; 0x10
    4b88:	91 8b       	std	Z+17, r25	; 0x11
    4b8a:	a2 8b       	std	Z+18, r26	; 0x12
    4b8c:	b3 8b       	std	Z+19, r27	; 0x13
    4b8e:	26 96       	adiw	r28, 0x06	; 6
    4b90:	0f b6       	in	r0, 0x3f	; 63
    4b92:	f8 94       	cli
    4b94:	de bf       	out	0x3e, r29	; 62
    4b96:	0f be       	out	0x3f, r0	; 63
    4b98:	cd bf       	out	0x3d, r28	; 61
    4b9a:	df 91       	pop	r29
    4b9c:	cf 91       	pop	r28
    4b9e:	08 95       	ret

00004ba0 <_ZNK10helicopter5model11SystemModel15YawProportionalEv>:
			void ReferenceYawVelocityDegreesPerSecond(float val) { referenceYawVelocityDegreesPerSecond = val;}
				
			float YawIntegral() const {return yawIntegral;}
			void YawIntegral(float val) { yawIntegral = val;}

			float YawProportional() const {return yawProportional;}
    4ba0:	cf 93       	push	r28
    4ba2:	df 93       	push	r29
    4ba4:	1f 92       	push	r1
    4ba6:	1f 92       	push	r1
    4ba8:	cd b7       	in	r28, 0x3d	; 61
    4baa:	de b7       	in	r29, 0x3e	; 62
    4bac:	9a 83       	std	Y+2, r25	; 0x02
    4bae:	89 83       	std	Y+1, r24	; 0x01
    4bb0:	89 81       	ldd	r24, Y+1	; 0x01
    4bb2:	9a 81       	ldd	r25, Y+2	; 0x02
    4bb4:	fc 01       	movw	r30, r24
    4bb6:	84 8d       	ldd	r24, Z+28	; 0x1c
    4bb8:	95 8d       	ldd	r25, Z+29	; 0x1d
    4bba:	a6 8d       	ldd	r26, Z+30	; 0x1e
    4bbc:	b7 8d       	ldd	r27, Z+31	; 0x1f
    4bbe:	bc 01       	movw	r22, r24
    4bc0:	cd 01       	movw	r24, r26
    4bc2:	0f 90       	pop	r0
    4bc4:	0f 90       	pop	r0
    4bc6:	df 91       	pop	r29
    4bc8:	cf 91       	pop	r28
    4bca:	08 95       	ret

00004bcc <_ZNK10helicopter5model11SystemModel18YawDerivativeErrorEv>:
			void YawProportional(float val) { yawProportional = val;}

			float YawDerivativeError() const {return yawDerivativeError;}
    4bcc:	cf 93       	push	r28
    4bce:	df 93       	push	r29
    4bd0:	1f 92       	push	r1
    4bd2:	1f 92       	push	r1
    4bd4:	cd b7       	in	r28, 0x3d	; 61
    4bd6:	de b7       	in	r29, 0x3e	; 62
    4bd8:	9a 83       	std	Y+2, r25	; 0x02
    4bda:	89 83       	std	Y+1, r24	; 0x01
    4bdc:	89 81       	ldd	r24, Y+1	; 0x01
    4bde:	9a 81       	ldd	r25, Y+2	; 0x02
    4be0:	fc 01       	movw	r30, r24
    4be2:	80 a1       	ldd	r24, Z+32	; 0x20
    4be4:	91 a1       	ldd	r25, Z+33	; 0x21
    4be6:	a2 a1       	ldd	r26, Z+34	; 0x22
    4be8:	b3 a1       	ldd	r27, Z+35	; 0x23
    4bea:	bc 01       	movw	r22, r24
    4bec:	cd 01       	movw	r24, r26
    4bee:	0f 90       	pop	r0
    4bf0:	0f 90       	pop	r0
    4bf2:	df 91       	pop	r29
    4bf4:	cf 91       	pop	r28
    4bf6:	08 95       	ret

00004bf8 <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf>:

			float LongitudeControl() const {return longitudeControl;}
			void LongitudeControl(float val) { longitudeControl = val;}
				
			float XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
			void XVelocityMetersPerSecond(float val) { xVelocityMetersPerSecond = val;}
    4bf8:	cf 93       	push	r28
    4bfa:	df 93       	push	r29
    4bfc:	00 d0       	rcall	.+0      	; 0x4bfe <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf+0x6>
    4bfe:	00 d0       	rcall	.+0      	; 0x4c00 <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf+0x8>
    4c00:	cd b7       	in	r28, 0x3d	; 61
    4c02:	de b7       	in	r29, 0x3e	; 62
    4c04:	9a 83       	std	Y+2, r25	; 0x02
    4c06:	89 83       	std	Y+1, r24	; 0x01
    4c08:	4b 83       	std	Y+3, r20	; 0x03
    4c0a:	5c 83       	std	Y+4, r21	; 0x04
    4c0c:	6d 83       	std	Y+5, r22	; 0x05
    4c0e:	7e 83       	std	Y+6, r23	; 0x06
    4c10:	29 81       	ldd	r18, Y+1	; 0x01
    4c12:	3a 81       	ldd	r19, Y+2	; 0x02
    4c14:	8b 81       	ldd	r24, Y+3	; 0x03
    4c16:	9c 81       	ldd	r25, Y+4	; 0x04
    4c18:	ad 81       	ldd	r26, Y+5	; 0x05
    4c1a:	be 81       	ldd	r27, Y+6	; 0x06
    4c1c:	f9 01       	movw	r30, r18
    4c1e:	84 ab       	std	Z+52, r24	; 0x34
    4c20:	95 ab       	std	Z+53, r25	; 0x35
    4c22:	a6 ab       	std	Z+54, r26	; 0x36
    4c24:	b7 ab       	std	Z+55, r27	; 0x37
    4c26:	26 96       	adiw	r28, 0x06	; 6
    4c28:	0f b6       	in	r0, 0x3f	; 63
    4c2a:	f8 94       	cli
    4c2c:	de bf       	out	0x3e, r29	; 62
    4c2e:	0f be       	out	0x3f, r0	; 63
    4c30:	cd bf       	out	0x3d, r28	; 61
    4c32:	df 91       	pop	r29
    4c34:	cf 91       	pop	r28
    4c36:	08 95       	ret

00004c38 <_ZNK10helicopter5model11SystemModel13XProportionalEv>:
			void ReferenceXVelocityMetersPerSecond(float val) { referenceXVelocityMetersPerSecond = val;}
				
			float XLongitudinalOuterLoopControl() const {return xLongitudinalOuterLoopControl;}
			void XLongitudinalOuterLoopControl(float val) { xLongitudinalOuterLoopControl = val;}
				
			float XProportional() const {return xProportional;}
    4c38:	cf 93       	push	r28
    4c3a:	df 93       	push	r29
    4c3c:	1f 92       	push	r1
    4c3e:	1f 92       	push	r1
    4c40:	cd b7       	in	r28, 0x3d	; 61
    4c42:	de b7       	in	r29, 0x3e	; 62
    4c44:	9a 83       	std	Y+2, r25	; 0x02
    4c46:	89 83       	std	Y+1, r24	; 0x01
    4c48:	89 81       	ldd	r24, Y+1	; 0x01
    4c4a:	9a 81       	ldd	r25, Y+2	; 0x02
    4c4c:	80 5c       	subi	r24, 0xC0	; 192
    4c4e:	9f 4f       	sbci	r25, 0xFF	; 255
    4c50:	fc 01       	movw	r30, r24
    4c52:	80 81       	ld	r24, Z
    4c54:	91 81       	ldd	r25, Z+1	; 0x01
    4c56:	a2 81       	ldd	r26, Z+2	; 0x02
    4c58:	b3 81       	ldd	r27, Z+3	; 0x03
    4c5a:	bc 01       	movw	r22, r24
    4c5c:	cd 01       	movw	r24, r26
    4c5e:	0f 90       	pop	r0
    4c60:	0f 90       	pop	r0
    4c62:	df 91       	pop	r29
    4c64:	cf 91       	pop	r28
    4c66:	08 95       	ret

00004c68 <_ZNK10helicopter5model11SystemModel16XDerivativeErrorEv>:
			void XProportional(float val) { xProportional = val;}
				
			float XIntegral() const {return xIntegral;}
			void XIntegral(float val) { xIntegral = val;}
				
			float XDerivativeError() const {return xDerivativeError;}
    4c68:	cf 93       	push	r28
    4c6a:	df 93       	push	r29
    4c6c:	1f 92       	push	r1
    4c6e:	1f 92       	push	r1
    4c70:	cd b7       	in	r28, 0x3d	; 61
    4c72:	de b7       	in	r29, 0x3e	; 62
    4c74:	9a 83       	std	Y+2, r25	; 0x02
    4c76:	89 83       	std	Y+1, r24	; 0x01
    4c78:	89 81       	ldd	r24, Y+1	; 0x01
    4c7a:	9a 81       	ldd	r25, Y+2	; 0x02
    4c7c:	88 5b       	subi	r24, 0xB8	; 184
    4c7e:	9f 4f       	sbci	r25, 0xFF	; 255
    4c80:	fc 01       	movw	r30, r24
    4c82:	80 81       	ld	r24, Z
    4c84:	91 81       	ldd	r25, Z+1	; 0x01
    4c86:	a2 81       	ldd	r26, Z+2	; 0x02
    4c88:	b3 81       	ldd	r27, Z+3	; 0x03
    4c8a:	bc 01       	movw	r22, r24
    4c8c:	cd 01       	movw	r24, r26
    4c8e:	0f 90       	pop	r0
    4c90:	0f 90       	pop	r0
    4c92:	df 91       	pop	r29
    4c94:	cf 91       	pop	r28
    4c96:	08 95       	ret

00004c98 <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf>:
			void XDerivativeError(float val) { xDerivativeError = val;}
				
		
			float ThetaPitchDegrees() const {return thetaPitchDegrees;}
			void ThetaPitchDegrees(float val) {thetaPitchDegrees = val;}
    4c98:	cf 93       	push	r28
    4c9a:	df 93       	push	r29
    4c9c:	00 d0       	rcall	.+0      	; 0x4c9e <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf+0x6>
    4c9e:	00 d0       	rcall	.+0      	; 0x4ca0 <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf+0x8>
    4ca0:	cd b7       	in	r28, 0x3d	; 61
    4ca2:	de b7       	in	r29, 0x3e	; 62
    4ca4:	9a 83       	std	Y+2, r25	; 0x02
    4ca6:	89 83       	std	Y+1, r24	; 0x01
    4ca8:	4b 83       	std	Y+3, r20	; 0x03
    4caa:	5c 83       	std	Y+4, r21	; 0x04
    4cac:	6d 83       	std	Y+5, r22	; 0x05
    4cae:	7e 83       	std	Y+6, r23	; 0x06
    4cb0:	89 81       	ldd	r24, Y+1	; 0x01
    4cb2:	9a 81       	ldd	r25, Y+2	; 0x02
    4cb4:	9c 01       	movw	r18, r24
    4cb6:	24 5b       	subi	r18, 0xB4	; 180
    4cb8:	3f 4f       	sbci	r19, 0xFF	; 255
    4cba:	8b 81       	ldd	r24, Y+3	; 0x03
    4cbc:	9c 81       	ldd	r25, Y+4	; 0x04
    4cbe:	ad 81       	ldd	r26, Y+5	; 0x05
    4cc0:	be 81       	ldd	r27, Y+6	; 0x06
    4cc2:	f9 01       	movw	r30, r18
    4cc4:	80 83       	st	Z, r24
    4cc6:	91 83       	std	Z+1, r25	; 0x01
    4cc8:	a2 83       	std	Z+2, r26	; 0x02
    4cca:	b3 83       	std	Z+3, r27	; 0x03
    4ccc:	26 96       	adiw	r28, 0x06	; 6
    4cce:	0f b6       	in	r0, 0x3f	; 63
    4cd0:	f8 94       	cli
    4cd2:	de bf       	out	0x3e, r29	; 62
    4cd4:	0f be       	out	0x3f, r0	; 63
    4cd6:	cd bf       	out	0x3d, r28	; 61
    4cd8:	df 91       	pop	r29
    4cda:	cf 91       	pop	r28
    4cdc:	08 95       	ret

00004cde <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf>:

			float LateralControl() const {return lateralControl;}
			void LateralControl(float val) { lateralControl = val;}

			float YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
			void YVelocityMetersPerSecond(float val) { yVelocityMetersPerSecond = val;}
    4cde:	cf 93       	push	r28
    4ce0:	df 93       	push	r29
    4ce2:	00 d0       	rcall	.+0      	; 0x4ce4 <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf+0x6>
    4ce4:	00 d0       	rcall	.+0      	; 0x4ce6 <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf+0x8>
    4ce6:	cd b7       	in	r28, 0x3d	; 61
    4ce8:	de b7       	in	r29, 0x3e	; 62
    4cea:	9a 83       	std	Y+2, r25	; 0x02
    4cec:	89 83       	std	Y+1, r24	; 0x01
    4cee:	4b 83       	std	Y+3, r20	; 0x03
    4cf0:	5c 83       	std	Y+4, r21	; 0x04
    4cf2:	6d 83       	std	Y+5, r22	; 0x05
    4cf4:	7e 83       	std	Y+6, r23	; 0x06
    4cf6:	89 81       	ldd	r24, Y+1	; 0x01
    4cf8:	9a 81       	ldd	r25, Y+2	; 0x02
    4cfa:	9c 01       	movw	r18, r24
    4cfc:	20 5a       	subi	r18, 0xA0	; 160
    4cfe:	3f 4f       	sbci	r19, 0xFF	; 255
    4d00:	8b 81       	ldd	r24, Y+3	; 0x03
    4d02:	9c 81       	ldd	r25, Y+4	; 0x04
    4d04:	ad 81       	ldd	r26, Y+5	; 0x05
    4d06:	be 81       	ldd	r27, Y+6	; 0x06
    4d08:	f9 01       	movw	r30, r18
    4d0a:	80 83       	st	Z, r24
    4d0c:	91 83       	std	Z+1, r25	; 0x01
    4d0e:	a2 83       	std	Z+2, r26	; 0x02
    4d10:	b3 83       	std	Z+3, r27	; 0x03
    4d12:	26 96       	adiw	r28, 0x06	; 6
    4d14:	0f b6       	in	r0, 0x3f	; 63
    4d16:	f8 94       	cli
    4d18:	de bf       	out	0x3e, r29	; 62
    4d1a:	0f be       	out	0x3f, r0	; 63
    4d1c:	cd bf       	out	0x3d, r28	; 61
    4d1e:	df 91       	pop	r29
    4d20:	cf 91       	pop	r28
    4d22:	08 95       	ret

00004d24 <_ZNK10helicopter5model11SystemModel13YProportionalEv>:
			void ReferenceYVelocityMetersPerSecond(float val) { referenceYVelocityMetersPerSecond = val;}

			float YLateralOuterLoopControl() const {return yLateralOuterLoopControl;}
			void YLateralOuterLoopControl(float val) { yLateralOuterLoopControl = val;}

			float YProportional() const {return yProportional;}
    4d24:	cf 93       	push	r28
    4d26:	df 93       	push	r29
    4d28:	1f 92       	push	r1
    4d2a:	1f 92       	push	r1
    4d2c:	cd b7       	in	r28, 0x3d	; 61
    4d2e:	de b7       	in	r29, 0x3e	; 62
    4d30:	9a 83       	std	Y+2, r25	; 0x02
    4d32:	89 83       	std	Y+1, r24	; 0x01
    4d34:	89 81       	ldd	r24, Y+1	; 0x01
    4d36:	9a 81       	ldd	r25, Y+2	; 0x02
    4d38:	84 59       	subi	r24, 0x94	; 148
    4d3a:	9f 4f       	sbci	r25, 0xFF	; 255
    4d3c:	fc 01       	movw	r30, r24
    4d3e:	80 81       	ld	r24, Z
    4d40:	91 81       	ldd	r25, Z+1	; 0x01
    4d42:	a2 81       	ldd	r26, Z+2	; 0x02
    4d44:	b3 81       	ldd	r27, Z+3	; 0x03
    4d46:	bc 01       	movw	r22, r24
    4d48:	cd 01       	movw	r24, r26
    4d4a:	0f 90       	pop	r0
    4d4c:	0f 90       	pop	r0
    4d4e:	df 91       	pop	r29
    4d50:	cf 91       	pop	r28
    4d52:	08 95       	ret

00004d54 <_ZNK10helicopter5model11SystemModel16YDerivativeErrorEv>:
			void YProportional(float val) { yProportional = val;}

			float YIntegral() const {return yIntegral;}
			void YIntegral(float val) { yIntegral = val;}

			float YDerivativeError() const {return yDerivativeError;}
    4d54:	cf 93       	push	r28
    4d56:	df 93       	push	r29
    4d58:	1f 92       	push	r1
    4d5a:	1f 92       	push	r1
    4d5c:	cd b7       	in	r28, 0x3d	; 61
    4d5e:	de b7       	in	r29, 0x3e	; 62
    4d60:	9a 83       	std	Y+2, r25	; 0x02
    4d62:	89 83       	std	Y+1, r24	; 0x01
    4d64:	89 81       	ldd	r24, Y+1	; 0x01
    4d66:	9a 81       	ldd	r25, Y+2	; 0x02
    4d68:	8c 58       	subi	r24, 0x8C	; 140
    4d6a:	9f 4f       	sbci	r25, 0xFF	; 255
    4d6c:	fc 01       	movw	r30, r24
    4d6e:	80 81       	ld	r24, Z
    4d70:	91 81       	ldd	r25, Z+1	; 0x01
    4d72:	a2 81       	ldd	r26, Z+2	; 0x02
    4d74:	b3 81       	ldd	r27, Z+3	; 0x03
    4d76:	bc 01       	movw	r22, r24
    4d78:	cd 01       	movw	r24, r26
    4d7a:	0f 90       	pop	r0
    4d7c:	0f 90       	pop	r0
    4d7e:	df 91       	pop	r29
    4d80:	cf 91       	pop	r28
    4d82:	08 95       	ret

00004d84 <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf>:
			void YDerivativeError(float val) { yDerivativeError = val;}


			float PhiRollDegrees() const {return phiRollDegrees;}
			void PhiRollDegrees(float val) {phiRollDegrees = val;}
    4d84:	cf 93       	push	r28
    4d86:	df 93       	push	r29
    4d88:	00 d0       	rcall	.+0      	; 0x4d8a <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf+0x6>
    4d8a:	00 d0       	rcall	.+0      	; 0x4d8c <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf+0x8>
    4d8c:	cd b7       	in	r28, 0x3d	; 61
    4d8e:	de b7       	in	r29, 0x3e	; 62
    4d90:	9a 83       	std	Y+2, r25	; 0x02
    4d92:	89 83       	std	Y+1, r24	; 0x01
    4d94:	4b 83       	std	Y+3, r20	; 0x03
    4d96:	5c 83       	std	Y+4, r21	; 0x04
    4d98:	6d 83       	std	Y+5, r22	; 0x05
    4d9a:	7e 83       	std	Y+6, r23	; 0x06
    4d9c:	89 81       	ldd	r24, Y+1	; 0x01
    4d9e:	9a 81       	ldd	r25, Y+2	; 0x02
    4da0:	9c 01       	movw	r18, r24
    4da2:	28 58       	subi	r18, 0x88	; 136
    4da4:	3f 4f       	sbci	r19, 0xFF	; 255
    4da6:	8b 81       	ldd	r24, Y+3	; 0x03
    4da8:	9c 81       	ldd	r25, Y+4	; 0x04
    4daa:	ad 81       	ldd	r26, Y+5	; 0x05
    4dac:	be 81       	ldd	r27, Y+6	; 0x06
    4dae:	f9 01       	movw	r30, r18
    4db0:	80 83       	st	Z, r24
    4db2:	91 83       	std	Z+1, r25	; 0x01
    4db4:	a2 83       	std	Z+2, r26	; 0x02
    4db6:	b3 83       	std	Z+3, r27	; 0x03
    4db8:	26 96       	adiw	r28, 0x06	; 6
    4dba:	0f b6       	in	r0, 0x3f	; 63
    4dbc:	f8 94       	cli
    4dbe:	de bf       	out	0x3e, r29	; 62
    4dc0:	0f be       	out	0x3f, r0	; 63
    4dc2:	cd bf       	out	0x3d, r28	; 61
    4dc4:	df 91       	pop	r29
    4dc6:	cf 91       	pop	r28
    4dc8:	08 95       	ret

00004dca <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf>:
						
						
						

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
			void AltitudeFeetAgl(float val) { altitudeFeetAgl = val; }
    4dca:	cf 93       	push	r28
    4dcc:	df 93       	push	r29
    4dce:	00 d0       	rcall	.+0      	; 0x4dd0 <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf+0x6>
    4dd0:	00 d0       	rcall	.+0      	; 0x4dd2 <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf+0x8>
    4dd2:	cd b7       	in	r28, 0x3d	; 61
    4dd4:	de b7       	in	r29, 0x3e	; 62
    4dd6:	9a 83       	std	Y+2, r25	; 0x02
    4dd8:	89 83       	std	Y+1, r24	; 0x01
    4dda:	4b 83       	std	Y+3, r20	; 0x03
    4ddc:	5c 83       	std	Y+4, r21	; 0x04
    4dde:	6d 83       	std	Y+5, r22	; 0x05
    4de0:	7e 83       	std	Y+6, r23	; 0x06
    4de2:	89 81       	ldd	r24, Y+1	; 0x01
    4de4:	9a 81       	ldd	r25, Y+2	; 0x02
    4de6:	9c 01       	movw	r18, r24
    4de8:	24 58       	subi	r18, 0x84	; 132
    4dea:	3f 4f       	sbci	r19, 0xFF	; 255
    4dec:	8b 81       	ldd	r24, Y+3	; 0x03
    4dee:	9c 81       	ldd	r25, Y+4	; 0x04
    4df0:	ad 81       	ldd	r26, Y+5	; 0x05
    4df2:	be 81       	ldd	r27, Y+6	; 0x06
    4df4:	f9 01       	movw	r30, r18
    4df6:	80 83       	st	Z, r24
    4df8:	91 83       	std	Z+1, r25	; 0x01
    4dfa:	a2 83       	std	Z+2, r26	; 0x02
    4dfc:	b3 83       	std	Z+3, r27	; 0x03
    4dfe:	26 96       	adiw	r28, 0x06	; 6
    4e00:	0f b6       	in	r0, 0x3f	; 63
    4e02:	f8 94       	cli
    4e04:	de bf       	out	0x3e, r29	; 62
    4e06:	0f be       	out	0x3f, r0	; 63
    4e08:	cd bf       	out	0x3d, r28	; 61
    4e0a:	df 91       	pop	r29
    4e0c:	cf 91       	pop	r28
    4e0e:	08 95       	ret

00004e10 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf>:

			float MainRotorControlBeforeServoLimitsAdjustment() const {return mainRotorControlBeforeServoLimitsAdjustment;}
			void MainRotorControlBeforeServoLimitsAdjustment(float val) { mainRotorControlBeforeServoLimitsAdjustment = val;}

			float ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
			void ZVelocityFeetPerSecond(float val) { zVelocityFeetPerSecond = val;}
    4e10:	cf 93       	push	r28
    4e12:	df 93       	push	r29
    4e14:	00 d0       	rcall	.+0      	; 0x4e16 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf+0x6>
    4e16:	00 d0       	rcall	.+0      	; 0x4e18 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf+0x8>
    4e18:	cd b7       	in	r28, 0x3d	; 61
    4e1a:	de b7       	in	r29, 0x3e	; 62
    4e1c:	9a 83       	std	Y+2, r25	; 0x02
    4e1e:	89 83       	std	Y+1, r24	; 0x01
    4e20:	4b 83       	std	Y+3, r20	; 0x03
    4e22:	5c 83       	std	Y+4, r21	; 0x04
    4e24:	6d 83       	std	Y+5, r22	; 0x05
    4e26:	7e 83       	std	Y+6, r23	; 0x06
    4e28:	89 81       	ldd	r24, Y+1	; 0x01
    4e2a:	9a 81       	ldd	r25, Y+2	; 0x02
    4e2c:	9c 01       	movw	r18, r24
    4e2e:	20 57       	subi	r18, 0x70	; 112
    4e30:	3f 4f       	sbci	r19, 0xFF	; 255
    4e32:	8b 81       	ldd	r24, Y+3	; 0x03
    4e34:	9c 81       	ldd	r25, Y+4	; 0x04
    4e36:	ad 81       	ldd	r26, Y+5	; 0x05
    4e38:	be 81       	ldd	r27, Y+6	; 0x06
    4e3a:	f9 01       	movw	r30, r18
    4e3c:	80 83       	st	Z, r24
    4e3e:	91 83       	std	Z+1, r25	; 0x01
    4e40:	a2 83       	std	Z+2, r26	; 0x02
    4e42:	b3 83       	std	Z+3, r27	; 0x03
    4e44:	26 96       	adiw	r28, 0x06	; 6
    4e46:	0f b6       	in	r0, 0x3f	; 63
    4e48:	f8 94       	cli
    4e4a:	de bf       	out	0x3e, r29	; 62
    4e4c:	0f be       	out	0x3f, r0	; 63
    4e4e:	cd bf       	out	0x3d, r28	; 61
    4e50:	df 91       	pop	r29
    4e52:	cf 91       	pop	r28
    4e54:	08 95       	ret

00004e56 <_ZNK10helicopter5model11SystemModel13ZProportionalEv>:
			void ReferenceZVelocityFeetPerSecond(float val) { referenceZVelocityFeetPerSecond = val;}

			float ZIntegral() const {return zIntegral;}
			void ZIntegral(float val) { zIntegral = val;}

			float ZProportional() const {return zProportional;}
    4e56:	cf 93       	push	r28
    4e58:	df 93       	push	r29
    4e5a:	1f 92       	push	r1
    4e5c:	1f 92       	push	r1
    4e5e:	cd b7       	in	r28, 0x3d	; 61
    4e60:	de b7       	in	r29, 0x3e	; 62
    4e62:	9a 83       	std	Y+2, r25	; 0x02
    4e64:	89 83       	std	Y+1, r24	; 0x01
    4e66:	89 81       	ldd	r24, Y+1	; 0x01
    4e68:	9a 81       	ldd	r25, Y+2	; 0x02
    4e6a:	84 56       	subi	r24, 0x64	; 100
    4e6c:	9f 4f       	sbci	r25, 0xFF	; 255
    4e6e:	fc 01       	movw	r30, r24
    4e70:	80 81       	ld	r24, Z
    4e72:	91 81       	ldd	r25, Z+1	; 0x01
    4e74:	a2 81       	ldd	r26, Z+2	; 0x02
    4e76:	b3 81       	ldd	r27, Z+3	; 0x03
    4e78:	bc 01       	movw	r22, r24
    4e7a:	cd 01       	movw	r24, r26
    4e7c:	0f 90       	pop	r0
    4e7e:	0f 90       	pop	r0
    4e80:	df 91       	pop	r29
    4e82:	cf 91       	pop	r28
    4e84:	08 95       	ret

00004e86 <_ZNK10helicopter5model11SystemModel16ZDerivativeErrorEv>:
			void ZProportional(float val) { zProportional = val;}

			float ZDerivativeError() const {return zDerivativeError;}
    4e86:	cf 93       	push	r28
    4e88:	df 93       	push	r29
    4e8a:	1f 92       	push	r1
    4e8c:	1f 92       	push	r1
    4e8e:	cd b7       	in	r28, 0x3d	; 61
    4e90:	de b7       	in	r29, 0x3e	; 62
    4e92:	9a 83       	std	Y+2, r25	; 0x02
    4e94:	89 83       	std	Y+1, r24	; 0x01
    4e96:	89 81       	ldd	r24, Y+1	; 0x01
    4e98:	9a 81       	ldd	r25, Y+2	; 0x02
    4e9a:	80 56       	subi	r24, 0x60	; 96
    4e9c:	9f 4f       	sbci	r25, 0xFF	; 255
    4e9e:	fc 01       	movw	r30, r24
    4ea0:	80 81       	ld	r24, Z
    4ea2:	91 81       	ldd	r25, Z+1	; 0x01
    4ea4:	a2 81       	ldd	r26, Z+2	; 0x02
    4ea6:	b3 81       	ldd	r27, Z+3	; 0x03
    4ea8:	bc 01       	movw	r22, r24
    4eaa:	cd 01       	movw	r24, r26
    4eac:	0f 90       	pop	r0
    4eae:	0f 90       	pop	r0
    4eb0:	df 91       	pop	r29
    4eb2:	cf 91       	pop	r28
    4eb4:	08 95       	ret

00004eb6 <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf>:
			void ZDerivativeError(float val) { zDerivativeError = val;}						
						
						
			float LatitudeDegrees() const {return latitudeDegrees;}
			void LatitudeDegrees(float val) { latitudeDegrees = val;}						
    4eb6:	cf 93       	push	r28
    4eb8:	df 93       	push	r29
    4eba:	00 d0       	rcall	.+0      	; 0x4ebc <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf+0x6>
    4ebc:	00 d0       	rcall	.+0      	; 0x4ebe <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf+0x8>
    4ebe:	cd b7       	in	r28, 0x3d	; 61
    4ec0:	de b7       	in	r29, 0x3e	; 62
    4ec2:	9a 83       	std	Y+2, r25	; 0x02
    4ec4:	89 83       	std	Y+1, r24	; 0x01
    4ec6:	4b 83       	std	Y+3, r20	; 0x03
    4ec8:	5c 83       	std	Y+4, r21	; 0x04
    4eca:	6d 83       	std	Y+5, r22	; 0x05
    4ecc:	7e 83       	std	Y+6, r23	; 0x06
    4ece:	89 81       	ldd	r24, Y+1	; 0x01
    4ed0:	9a 81       	ldd	r25, Y+2	; 0x02
    4ed2:	9c 01       	movw	r18, r24
    4ed4:	2c 55       	subi	r18, 0x5C	; 92
    4ed6:	3f 4f       	sbci	r19, 0xFF	; 255
    4ed8:	8b 81       	ldd	r24, Y+3	; 0x03
    4eda:	9c 81       	ldd	r25, Y+4	; 0x04
    4edc:	ad 81       	ldd	r26, Y+5	; 0x05
    4ede:	be 81       	ldd	r27, Y+6	; 0x06
    4ee0:	f9 01       	movw	r30, r18
    4ee2:	80 83       	st	Z, r24
    4ee4:	91 83       	std	Z+1, r25	; 0x01
    4ee6:	a2 83       	std	Z+2, r26	; 0x02
    4ee8:	b3 83       	std	Z+3, r27	; 0x03
    4eea:	26 96       	adiw	r28, 0x06	; 6
    4eec:	0f b6       	in	r0, 0x3f	; 63
    4eee:	f8 94       	cli
    4ef0:	de bf       	out	0x3e, r29	; 62
    4ef2:	0f be       	out	0x3f, r0	; 63
    4ef4:	cd bf       	out	0x3d, r28	; 61
    4ef6:	df 91       	pop	r29
    4ef8:	cf 91       	pop	r28
    4efa:	08 95       	ret

00004efc <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf>:

			float LongitudeDegrees() const {return longitudeDegrees;}
			void LongitudeDegrees(float val) { longitudeDegrees = val;}						
    4efc:	cf 93       	push	r28
    4efe:	df 93       	push	r29
    4f00:	00 d0       	rcall	.+0      	; 0x4f02 <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf+0x6>
    4f02:	00 d0       	rcall	.+0      	; 0x4f04 <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf+0x8>
    4f04:	cd b7       	in	r28, 0x3d	; 61
    4f06:	de b7       	in	r29, 0x3e	; 62
    4f08:	9a 83       	std	Y+2, r25	; 0x02
    4f0a:	89 83       	std	Y+1, r24	; 0x01
    4f0c:	4b 83       	std	Y+3, r20	; 0x03
    4f0e:	5c 83       	std	Y+4, r21	; 0x04
    4f10:	6d 83       	std	Y+5, r22	; 0x05
    4f12:	7e 83       	std	Y+6, r23	; 0x06
    4f14:	89 81       	ldd	r24, Y+1	; 0x01
    4f16:	9a 81       	ldd	r25, Y+2	; 0x02
    4f18:	9c 01       	movw	r18, r24
    4f1a:	28 55       	subi	r18, 0x58	; 88
    4f1c:	3f 4f       	sbci	r19, 0xFF	; 255
    4f1e:	8b 81       	ldd	r24, Y+3	; 0x03
    4f20:	9c 81       	ldd	r25, Y+4	; 0x04
    4f22:	ad 81       	ldd	r26, Y+5	; 0x05
    4f24:	be 81       	ldd	r27, Y+6	; 0x06
    4f26:	f9 01       	movw	r30, r18
    4f28:	80 83       	st	Z, r24
    4f2a:	91 83       	std	Z+1, r25	; 0x01
    4f2c:	a2 83       	std	Z+2, r26	; 0x02
    4f2e:	b3 83       	std	Z+3, r27	; 0x03
    4f30:	26 96       	adiw	r28, 0x06	; 6
    4f32:	0f b6       	in	r0, 0x3f	; 63
    4f34:	f8 94       	cli
    4f36:	de bf       	out	0x3e, r29	; 62
    4f38:	0f be       	out	0x3f, r0	; 63
    4f3a:	cd bf       	out	0x3d, r28	; 61
    4f3c:	df 91       	pop	r29
    4f3e:	cf 91       	pop	r28
    4f40:	08 95       	ret

00004f42 <_ZNK10helicopter5model11SystemModel8TimeoutsEv>:
						
						
			long Timeouts() const {return timeouts; }
    4f42:	cf 93       	push	r28
    4f44:	df 93       	push	r29
    4f46:	1f 92       	push	r1
    4f48:	1f 92       	push	r1
    4f4a:	cd b7       	in	r28, 0x3d	; 61
    4f4c:	de b7       	in	r29, 0x3e	; 62
    4f4e:	9a 83       	std	Y+2, r25	; 0x02
    4f50:	89 83       	std	Y+1, r24	; 0x01
    4f52:	89 81       	ldd	r24, Y+1	; 0x01
    4f54:	9a 81       	ldd	r25, Y+2	; 0x02
    4f56:	84 55       	subi	r24, 0x54	; 84
    4f58:	9f 4f       	sbci	r25, 0xFF	; 255
    4f5a:	fc 01       	movw	r30, r24
    4f5c:	80 81       	ld	r24, Z
    4f5e:	91 81       	ldd	r25, Z+1	; 0x01
    4f60:	a2 81       	ldd	r26, Z+2	; 0x02
    4f62:	b3 81       	ldd	r27, Z+3	; 0x03
    4f64:	bc 01       	movw	r22, r24
    4f66:	cd 01       	movw	r24, r26
    4f68:	0f 90       	pop	r0
    4f6a:	0f 90       	pop	r0
    4f6c:	df 91       	pop	r29
    4f6e:	cf 91       	pop	r28
    4f70:	08 95       	ret

00004f72 <_ZN10helicopter5model11SystemModel8TimeoutsEl>:
			void Timeouts(long val) { timeouts = val; }
    4f72:	cf 93       	push	r28
    4f74:	df 93       	push	r29
    4f76:	00 d0       	rcall	.+0      	; 0x4f78 <_ZN10helicopter5model11SystemModel8TimeoutsEl+0x6>
    4f78:	00 d0       	rcall	.+0      	; 0x4f7a <_ZN10helicopter5model11SystemModel8TimeoutsEl+0x8>
    4f7a:	cd b7       	in	r28, 0x3d	; 61
    4f7c:	de b7       	in	r29, 0x3e	; 62
    4f7e:	9a 83       	std	Y+2, r25	; 0x02
    4f80:	89 83       	std	Y+1, r24	; 0x01
    4f82:	4b 83       	std	Y+3, r20	; 0x03
    4f84:	5c 83       	std	Y+4, r21	; 0x04
    4f86:	6d 83       	std	Y+5, r22	; 0x05
    4f88:	7e 83       	std	Y+6, r23	; 0x06
    4f8a:	89 81       	ldd	r24, Y+1	; 0x01
    4f8c:	9a 81       	ldd	r25, Y+2	; 0x02
    4f8e:	9c 01       	movw	r18, r24
    4f90:	24 55       	subi	r18, 0x54	; 84
    4f92:	3f 4f       	sbci	r19, 0xFF	; 255
    4f94:	8b 81       	ldd	r24, Y+3	; 0x03
    4f96:	9c 81       	ldd	r25, Y+4	; 0x04
    4f98:	ad 81       	ldd	r26, Y+5	; 0x05
    4f9a:	be 81       	ldd	r27, Y+6	; 0x06
    4f9c:	f9 01       	movw	r30, r18
    4f9e:	80 83       	st	Z, r24
    4fa0:	91 83       	std	Z+1, r25	; 0x01
    4fa2:	a2 83       	std	Z+2, r26	; 0x02
    4fa4:	b3 83       	std	Z+3, r27	; 0x03
    4fa6:	26 96       	adiw	r28, 0x06	; 6
    4fa8:	0f b6       	in	r0, 0x3f	; 63
    4faa:	f8 94       	cli
    4fac:	de bf       	out	0x3e, r29	; 62
    4fae:	0f be       	out	0x3f, r0	; 63
    4fb0:	cd bf       	out	0x3d, r28	; 61
    4fb2:	df 91       	pop	r29
    4fb4:	cf 91       	pop	r28
    4fb6:	08 95       	ret

00004fb8 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>:
			
			long UnrecognizedMsgTypes() const {return unrecognizedMsgTypes; }
    4fb8:	cf 93       	push	r28
    4fba:	df 93       	push	r29
    4fbc:	1f 92       	push	r1
    4fbe:	1f 92       	push	r1
    4fc0:	cd b7       	in	r28, 0x3d	; 61
    4fc2:	de b7       	in	r29, 0x3e	; 62
    4fc4:	9a 83       	std	Y+2, r25	; 0x02
    4fc6:	89 83       	std	Y+1, r24	; 0x01
    4fc8:	89 81       	ldd	r24, Y+1	; 0x01
    4fca:	9a 81       	ldd	r25, Y+2	; 0x02
    4fcc:	80 55       	subi	r24, 0x50	; 80
    4fce:	9f 4f       	sbci	r25, 0xFF	; 255
    4fd0:	fc 01       	movw	r30, r24
    4fd2:	80 81       	ld	r24, Z
    4fd4:	91 81       	ldd	r25, Z+1	; 0x01
    4fd6:	a2 81       	ldd	r26, Z+2	; 0x02
    4fd8:	b3 81       	ldd	r27, Z+3	; 0x03
    4fda:	bc 01       	movw	r22, r24
    4fdc:	cd 01       	movw	r24, r26
    4fde:	0f 90       	pop	r0
    4fe0:	0f 90       	pop	r0
    4fe2:	df 91       	pop	r29
    4fe4:	cf 91       	pop	r28
    4fe6:	08 95       	ret

00004fe8 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl>:
			void UnrecognizedMsgTypes(long val) { unrecognizedMsgTypes = val; }
    4fe8:	cf 93       	push	r28
    4fea:	df 93       	push	r29
    4fec:	00 d0       	rcall	.+0      	; 0x4fee <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl+0x6>
    4fee:	00 d0       	rcall	.+0      	; 0x4ff0 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl+0x8>
    4ff0:	cd b7       	in	r28, 0x3d	; 61
    4ff2:	de b7       	in	r29, 0x3e	; 62
    4ff4:	9a 83       	std	Y+2, r25	; 0x02
    4ff6:	89 83       	std	Y+1, r24	; 0x01
    4ff8:	4b 83       	std	Y+3, r20	; 0x03
    4ffa:	5c 83       	std	Y+4, r21	; 0x04
    4ffc:	6d 83       	std	Y+5, r22	; 0x05
    4ffe:	7e 83       	std	Y+6, r23	; 0x06
    5000:	89 81       	ldd	r24, Y+1	; 0x01
    5002:	9a 81       	ldd	r25, Y+2	; 0x02
    5004:	9c 01       	movw	r18, r24
    5006:	20 55       	subi	r18, 0x50	; 80
    5008:	3f 4f       	sbci	r19, 0xFF	; 255
    500a:	8b 81       	ldd	r24, Y+3	; 0x03
    500c:	9c 81       	ldd	r25, Y+4	; 0x04
    500e:	ad 81       	ldd	r26, Y+5	; 0x05
    5010:	be 81       	ldd	r27, Y+6	; 0x06
    5012:	f9 01       	movw	r30, r18
    5014:	80 83       	st	Z, r24
    5016:	91 83       	std	Z+1, r25	; 0x01
    5018:	a2 83       	std	Z+2, r26	; 0x02
    501a:	b3 83       	std	Z+3, r27	; 0x03
    501c:	26 96       	adiw	r28, 0x06	; 6
    501e:	0f b6       	in	r0, 0x3f	; 63
    5020:	f8 94       	cli
    5022:	de bf       	out	0x3e, r29	; 62
    5024:	0f be       	out	0x3f, r0	; 63
    5026:	cd bf       	out	0x3d, r28	; 61
    5028:	df 91       	pop	r29
    502a:	cf 91       	pop	r28
    502c:	08 95       	ret

0000502e <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>:
			
			long ChecksumErrors() const {return checksumErrors; }
    502e:	cf 93       	push	r28
    5030:	df 93       	push	r29
    5032:	1f 92       	push	r1
    5034:	1f 92       	push	r1
    5036:	cd b7       	in	r28, 0x3d	; 61
    5038:	de b7       	in	r29, 0x3e	; 62
    503a:	9a 83       	std	Y+2, r25	; 0x02
    503c:	89 83       	std	Y+1, r24	; 0x01
    503e:	89 81       	ldd	r24, Y+1	; 0x01
    5040:	9a 81       	ldd	r25, Y+2	; 0x02
    5042:	8c 54       	subi	r24, 0x4C	; 76
    5044:	9f 4f       	sbci	r25, 0xFF	; 255
    5046:	fc 01       	movw	r30, r24
    5048:	80 81       	ld	r24, Z
    504a:	91 81       	ldd	r25, Z+1	; 0x01
    504c:	a2 81       	ldd	r26, Z+2	; 0x02
    504e:	b3 81       	ldd	r27, Z+3	; 0x03
    5050:	bc 01       	movw	r22, r24
    5052:	cd 01       	movw	r24, r26
    5054:	0f 90       	pop	r0
    5056:	0f 90       	pop	r0
    5058:	df 91       	pop	r29
    505a:	cf 91       	pop	r28
    505c:	08 95       	ret

0000505e <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl>:
			void ChecksumErrors(long val) { checksumErrors = val; }
    505e:	cf 93       	push	r28
    5060:	df 93       	push	r29
    5062:	00 d0       	rcall	.+0      	; 0x5064 <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl+0x6>
    5064:	00 d0       	rcall	.+0      	; 0x5066 <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl+0x8>
    5066:	cd b7       	in	r28, 0x3d	; 61
    5068:	de b7       	in	r29, 0x3e	; 62
    506a:	9a 83       	std	Y+2, r25	; 0x02
    506c:	89 83       	std	Y+1, r24	; 0x01
    506e:	4b 83       	std	Y+3, r20	; 0x03
    5070:	5c 83       	std	Y+4, r21	; 0x04
    5072:	6d 83       	std	Y+5, r22	; 0x05
    5074:	7e 83       	std	Y+6, r23	; 0x06
    5076:	89 81       	ldd	r24, Y+1	; 0x01
    5078:	9a 81       	ldd	r25, Y+2	; 0x02
    507a:	9c 01       	movw	r18, r24
    507c:	2c 54       	subi	r18, 0x4C	; 76
    507e:	3f 4f       	sbci	r19, 0xFF	; 255
    5080:	8b 81       	ldd	r24, Y+3	; 0x03
    5082:	9c 81       	ldd	r25, Y+4	; 0x04
    5084:	ad 81       	ldd	r26, Y+5	; 0x05
    5086:	be 81       	ldd	r27, Y+6	; 0x06
    5088:	f9 01       	movw	r30, r18
    508a:	80 83       	st	Z, r24
    508c:	91 83       	std	Z+1, r25	; 0x01
    508e:	a2 83       	std	Z+2, r26	; 0x02
    5090:	b3 83       	std	Z+3, r27	; 0x03
    5092:	26 96       	adiw	r28, 0x06	; 6
    5094:	0f b6       	in	r0, 0x3f	; 63
    5096:	f8 94       	cli
    5098:	de bf       	out	0x3e, r29	; 62
    509a:	0f be       	out	0x3f, r0	; 63
    509c:	cd bf       	out	0x3d, r28	; 61
    509e:	df 91       	pop	r29
    50a0:	cf 91       	pop	r28
    50a2:	08 95       	ret

000050a4 <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>:
				sizeof(UnrecognizedMsgTypes) + 
				sizeof(ChecksumErrors) + 
				sizeof(NumOfBlownFrames);

			
				SystemTelemetryMessage(): Message(MessageType,MessageSize),
    50a4:	cf 93       	push	r28
    50a6:	df 93       	push	r29
    50a8:	1f 92       	push	r1
    50aa:	1f 92       	push	r1
    50ac:	cd b7       	in	r28, 0x3d	; 61
    50ae:	de b7       	in	r29, 0x3e	; 62
    50b0:	9a 83       	std	Y+2, r25	; 0x02
    50b2:	89 83       	std	Y+1, r24	; 0x01
										
														
					Timeouts(0),
					UnrecognizedMsgTypes(0),
					ChecksumErrors(0),
					NumOfBlownFrames(0)
    50b4:	89 81       	ldd	r24, Y+1	; 0x01
    50b6:	9a 81       	ldd	r25, Y+2	; 0x02
    50b8:	49 ec       	ldi	r20, 0xC9	; 201
    50ba:	50 e0       	ldi	r21, 0x00	; 0
    50bc:	62 e0       	ldi	r22, 0x02	; 2
    50be:	0e 94 c3 23 	call	0x4786	; 0x4786 <_ZN10helicopter8messages7MessageC1Ehi>
    50c2:	89 81       	ldd	r24, Y+1	; 0x01
    50c4:	9a 81       	ldd	r25, Y+2	; 0x02
    50c6:	28 e4       	ldi	r18, 0x48	; 72
    50c8:	32 e0       	ldi	r19, 0x02	; 2
    50ca:	fc 01       	movw	r30, r24
    50cc:	31 83       	std	Z+1, r19	; 0x01
    50ce:	20 83       	st	Z, r18
    50d0:	89 81       	ldd	r24, Y+1	; 0x01
    50d2:	9a 81       	ldd	r25, Y+2	; 0x02
    50d4:	fc 01       	movw	r30, r24
    50d6:	15 82       	std	Z+5, r1	; 0x05
    50d8:	16 82       	std	Z+6, r1	; 0x06
    50da:	17 82       	std	Z+7, r1	; 0x07
    50dc:	10 86       	std	Z+8, r1	; 0x08
    50de:	89 81       	ldd	r24, Y+1	; 0x01
    50e0:	9a 81       	ldd	r25, Y+2	; 0x02
    50e2:	fc 01       	movw	r30, r24
    50e4:	11 86       	std	Z+9, r1	; 0x09
    50e6:	12 86       	std	Z+10, r1	; 0x0a
    50e8:	13 86       	std	Z+11, r1	; 0x0b
    50ea:	14 86       	std	Z+12, r1	; 0x0c
    50ec:	89 81       	ldd	r24, Y+1	; 0x01
    50ee:	9a 81       	ldd	r25, Y+2	; 0x02
    50f0:	fc 01       	movw	r30, r24
    50f2:	15 86       	std	Z+13, r1	; 0x0d
    50f4:	16 86       	std	Z+14, r1	; 0x0e
    50f6:	17 86       	std	Z+15, r1	; 0x0f
    50f8:	10 8a       	std	Z+16, r1	; 0x10
    50fa:	89 81       	ldd	r24, Y+1	; 0x01
    50fc:	9a 81       	ldd	r25, Y+2	; 0x02
    50fe:	fc 01       	movw	r30, r24
    5100:	11 8a       	std	Z+17, r1	; 0x11
    5102:	12 8a       	std	Z+18, r1	; 0x12
    5104:	13 8a       	std	Z+19, r1	; 0x13
    5106:	14 8a       	std	Z+20, r1	; 0x14
    5108:	89 81       	ldd	r24, Y+1	; 0x01
    510a:	9a 81       	ldd	r25, Y+2	; 0x02
    510c:	fc 01       	movw	r30, r24
    510e:	15 8a       	std	Z+21, r1	; 0x15
    5110:	16 8a       	std	Z+22, r1	; 0x16
    5112:	17 8a       	std	Z+23, r1	; 0x17
    5114:	10 8e       	std	Z+24, r1	; 0x18
    5116:	89 81       	ldd	r24, Y+1	; 0x01
    5118:	9a 81       	ldd	r25, Y+2	; 0x02
    511a:	fc 01       	movw	r30, r24
    511c:	11 8e       	std	Z+25, r1	; 0x19
    511e:	12 8e       	std	Z+26, r1	; 0x1a
    5120:	13 8e       	std	Z+27, r1	; 0x1b
    5122:	14 8e       	std	Z+28, r1	; 0x1c
    5124:	89 81       	ldd	r24, Y+1	; 0x01
    5126:	9a 81       	ldd	r25, Y+2	; 0x02
    5128:	fc 01       	movw	r30, r24
    512a:	15 8e       	std	Z+29, r1	; 0x1d
    512c:	16 8e       	std	Z+30, r1	; 0x1e
    512e:	17 8e       	std	Z+31, r1	; 0x1f
    5130:	10 a2       	std	Z+32, r1	; 0x20
    5132:	89 81       	ldd	r24, Y+1	; 0x01
    5134:	9a 81       	ldd	r25, Y+2	; 0x02
    5136:	fc 01       	movw	r30, r24
    5138:	11 a2       	std	Z+33, r1	; 0x21
    513a:	12 a2       	std	Z+34, r1	; 0x22
    513c:	13 a2       	std	Z+35, r1	; 0x23
    513e:	14 a2       	std	Z+36, r1	; 0x24
    5140:	89 81       	ldd	r24, Y+1	; 0x01
    5142:	9a 81       	ldd	r25, Y+2	; 0x02
    5144:	fc 01       	movw	r30, r24
    5146:	15 a2       	std	Z+37, r1	; 0x25
    5148:	16 a2       	std	Z+38, r1	; 0x26
    514a:	17 a2       	std	Z+39, r1	; 0x27
    514c:	10 a6       	std	Z+40, r1	; 0x28
    514e:	89 81       	ldd	r24, Y+1	; 0x01
    5150:	9a 81       	ldd	r25, Y+2	; 0x02
    5152:	fc 01       	movw	r30, r24
    5154:	11 a6       	std	Z+41, r1	; 0x29
    5156:	12 a6       	std	Z+42, r1	; 0x2a
    5158:	13 a6       	std	Z+43, r1	; 0x2b
    515a:	14 a6       	std	Z+44, r1	; 0x2c
    515c:	89 81       	ldd	r24, Y+1	; 0x01
    515e:	9a 81       	ldd	r25, Y+2	; 0x02
    5160:	fc 01       	movw	r30, r24
    5162:	15 a6       	std	Z+45, r1	; 0x2d
    5164:	16 a6       	std	Z+46, r1	; 0x2e
    5166:	17 a6       	std	Z+47, r1	; 0x2f
    5168:	10 aa       	std	Z+48, r1	; 0x30
    516a:	89 81       	ldd	r24, Y+1	; 0x01
    516c:	9a 81       	ldd	r25, Y+2	; 0x02
    516e:	fc 01       	movw	r30, r24
    5170:	11 aa       	std	Z+49, r1	; 0x31
    5172:	12 aa       	std	Z+50, r1	; 0x32
    5174:	13 aa       	std	Z+51, r1	; 0x33
    5176:	14 aa       	std	Z+52, r1	; 0x34
    5178:	89 81       	ldd	r24, Y+1	; 0x01
    517a:	9a 81       	ldd	r25, Y+2	; 0x02
    517c:	fc 01       	movw	r30, r24
    517e:	15 aa       	std	Z+53, r1	; 0x35
    5180:	16 aa       	std	Z+54, r1	; 0x36
    5182:	17 aa       	std	Z+55, r1	; 0x37
    5184:	10 ae       	std	Z+56, r1	; 0x38
    5186:	89 81       	ldd	r24, Y+1	; 0x01
    5188:	9a 81       	ldd	r25, Y+2	; 0x02
    518a:	fc 01       	movw	r30, r24
    518c:	11 ae       	std	Z+57, r1	; 0x39
    518e:	12 ae       	std	Z+58, r1	; 0x3a
    5190:	13 ae       	std	Z+59, r1	; 0x3b
    5192:	14 ae       	std	Z+60, r1	; 0x3c
    5194:	89 81       	ldd	r24, Y+1	; 0x01
    5196:	9a 81       	ldd	r25, Y+2	; 0x02
    5198:	cd 96       	adiw	r24, 0x3d	; 61
    519a:	fc 01       	movw	r30, r24
    519c:	10 82       	st	Z, r1
    519e:	11 82       	std	Z+1, r1	; 0x01
    51a0:	12 82       	std	Z+2, r1	; 0x02
    51a2:	13 82       	std	Z+3, r1	; 0x03
    51a4:	89 81       	ldd	r24, Y+1	; 0x01
    51a6:	9a 81       	ldd	r25, Y+2	; 0x02
    51a8:	8f 5b       	subi	r24, 0xBF	; 191
    51aa:	9f 4f       	sbci	r25, 0xFF	; 255
    51ac:	fc 01       	movw	r30, r24
    51ae:	10 82       	st	Z, r1
    51b0:	11 82       	std	Z+1, r1	; 0x01
    51b2:	12 82       	std	Z+2, r1	; 0x02
    51b4:	13 82       	std	Z+3, r1	; 0x03
    51b6:	89 81       	ldd	r24, Y+1	; 0x01
    51b8:	9a 81       	ldd	r25, Y+2	; 0x02
    51ba:	8b 5b       	subi	r24, 0xBB	; 187
    51bc:	9f 4f       	sbci	r25, 0xFF	; 255
    51be:	fc 01       	movw	r30, r24
    51c0:	10 82       	st	Z, r1
    51c2:	11 82       	std	Z+1, r1	; 0x01
    51c4:	12 82       	std	Z+2, r1	; 0x02
    51c6:	13 82       	std	Z+3, r1	; 0x03
    51c8:	89 81       	ldd	r24, Y+1	; 0x01
    51ca:	9a 81       	ldd	r25, Y+2	; 0x02
    51cc:	87 5b       	subi	r24, 0xB7	; 183
    51ce:	9f 4f       	sbci	r25, 0xFF	; 255
    51d0:	fc 01       	movw	r30, r24
    51d2:	10 82       	st	Z, r1
    51d4:	11 82       	std	Z+1, r1	; 0x01
    51d6:	12 82       	std	Z+2, r1	; 0x02
    51d8:	13 82       	std	Z+3, r1	; 0x03
    51da:	89 81       	ldd	r24, Y+1	; 0x01
    51dc:	9a 81       	ldd	r25, Y+2	; 0x02
    51de:	83 5b       	subi	r24, 0xB3	; 179
    51e0:	9f 4f       	sbci	r25, 0xFF	; 255
    51e2:	fc 01       	movw	r30, r24
    51e4:	10 82       	st	Z, r1
    51e6:	11 82       	std	Z+1, r1	; 0x01
    51e8:	12 82       	std	Z+2, r1	; 0x02
    51ea:	13 82       	std	Z+3, r1	; 0x03
    51ec:	89 81       	ldd	r24, Y+1	; 0x01
    51ee:	9a 81       	ldd	r25, Y+2	; 0x02
    51f0:	8f 5a       	subi	r24, 0xAF	; 175
    51f2:	9f 4f       	sbci	r25, 0xFF	; 255
    51f4:	fc 01       	movw	r30, r24
    51f6:	10 82       	st	Z, r1
    51f8:	11 82       	std	Z+1, r1	; 0x01
    51fa:	12 82       	std	Z+2, r1	; 0x02
    51fc:	13 82       	std	Z+3, r1	; 0x03
    51fe:	89 81       	ldd	r24, Y+1	; 0x01
    5200:	9a 81       	ldd	r25, Y+2	; 0x02
    5202:	8b 5a       	subi	r24, 0xAB	; 171
    5204:	9f 4f       	sbci	r25, 0xFF	; 255
    5206:	fc 01       	movw	r30, r24
    5208:	10 82       	st	Z, r1
    520a:	11 82       	std	Z+1, r1	; 0x01
    520c:	12 82       	std	Z+2, r1	; 0x02
    520e:	13 82       	std	Z+3, r1	; 0x03
    5210:	89 81       	ldd	r24, Y+1	; 0x01
    5212:	9a 81       	ldd	r25, Y+2	; 0x02
    5214:	87 5a       	subi	r24, 0xA7	; 167
    5216:	9f 4f       	sbci	r25, 0xFF	; 255
    5218:	fc 01       	movw	r30, r24
    521a:	10 82       	st	Z, r1
    521c:	11 82       	std	Z+1, r1	; 0x01
    521e:	12 82       	std	Z+2, r1	; 0x02
    5220:	13 82       	std	Z+3, r1	; 0x03
    5222:	89 81       	ldd	r24, Y+1	; 0x01
    5224:	9a 81       	ldd	r25, Y+2	; 0x02
    5226:	83 5a       	subi	r24, 0xA3	; 163
    5228:	9f 4f       	sbci	r25, 0xFF	; 255
    522a:	fc 01       	movw	r30, r24
    522c:	10 82       	st	Z, r1
    522e:	11 82       	std	Z+1, r1	; 0x01
    5230:	12 82       	std	Z+2, r1	; 0x02
    5232:	13 82       	std	Z+3, r1	; 0x03
    5234:	89 81       	ldd	r24, Y+1	; 0x01
    5236:	9a 81       	ldd	r25, Y+2	; 0x02
    5238:	8f 59       	subi	r24, 0x9F	; 159
    523a:	9f 4f       	sbci	r25, 0xFF	; 255
    523c:	fc 01       	movw	r30, r24
    523e:	10 82       	st	Z, r1
    5240:	11 82       	std	Z+1, r1	; 0x01
    5242:	12 82       	std	Z+2, r1	; 0x02
    5244:	13 82       	std	Z+3, r1	; 0x03
    5246:	89 81       	ldd	r24, Y+1	; 0x01
    5248:	9a 81       	ldd	r25, Y+2	; 0x02
    524a:	8b 59       	subi	r24, 0x9B	; 155
    524c:	9f 4f       	sbci	r25, 0xFF	; 255
    524e:	fc 01       	movw	r30, r24
    5250:	10 82       	st	Z, r1
    5252:	11 82       	std	Z+1, r1	; 0x01
    5254:	12 82       	std	Z+2, r1	; 0x02
    5256:	13 82       	std	Z+3, r1	; 0x03
    5258:	89 81       	ldd	r24, Y+1	; 0x01
    525a:	9a 81       	ldd	r25, Y+2	; 0x02
    525c:	87 59       	subi	r24, 0x97	; 151
    525e:	9f 4f       	sbci	r25, 0xFF	; 255
    5260:	fc 01       	movw	r30, r24
    5262:	10 82       	st	Z, r1
    5264:	11 82       	std	Z+1, r1	; 0x01
    5266:	12 82       	std	Z+2, r1	; 0x02
    5268:	13 82       	std	Z+3, r1	; 0x03
    526a:	89 81       	ldd	r24, Y+1	; 0x01
    526c:	9a 81       	ldd	r25, Y+2	; 0x02
    526e:	83 59       	subi	r24, 0x93	; 147
    5270:	9f 4f       	sbci	r25, 0xFF	; 255
    5272:	fc 01       	movw	r30, r24
    5274:	10 82       	st	Z, r1
    5276:	11 82       	std	Z+1, r1	; 0x01
    5278:	12 82       	std	Z+2, r1	; 0x02
    527a:	13 82       	std	Z+3, r1	; 0x03
    527c:	89 81       	ldd	r24, Y+1	; 0x01
    527e:	9a 81       	ldd	r25, Y+2	; 0x02
    5280:	8f 58       	subi	r24, 0x8F	; 143
    5282:	9f 4f       	sbci	r25, 0xFF	; 255
    5284:	fc 01       	movw	r30, r24
    5286:	10 82       	st	Z, r1
    5288:	11 82       	std	Z+1, r1	; 0x01
    528a:	12 82       	std	Z+2, r1	; 0x02
    528c:	13 82       	std	Z+3, r1	; 0x03
    528e:	89 81       	ldd	r24, Y+1	; 0x01
    5290:	9a 81       	ldd	r25, Y+2	; 0x02
    5292:	8b 58       	subi	r24, 0x8B	; 139
    5294:	9f 4f       	sbci	r25, 0xFF	; 255
    5296:	fc 01       	movw	r30, r24
    5298:	10 82       	st	Z, r1
    529a:	11 82       	std	Z+1, r1	; 0x01
    529c:	12 82       	std	Z+2, r1	; 0x02
    529e:	13 82       	std	Z+3, r1	; 0x03
    52a0:	89 81       	ldd	r24, Y+1	; 0x01
    52a2:	9a 81       	ldd	r25, Y+2	; 0x02
    52a4:	87 58       	subi	r24, 0x87	; 135
    52a6:	9f 4f       	sbci	r25, 0xFF	; 255
    52a8:	fc 01       	movw	r30, r24
    52aa:	10 82       	st	Z, r1
    52ac:	11 82       	std	Z+1, r1	; 0x01
    52ae:	12 82       	std	Z+2, r1	; 0x02
    52b0:	13 82       	std	Z+3, r1	; 0x03
    52b2:	89 81       	ldd	r24, Y+1	; 0x01
    52b4:	9a 81       	ldd	r25, Y+2	; 0x02
    52b6:	83 58       	subi	r24, 0x83	; 131
    52b8:	9f 4f       	sbci	r25, 0xFF	; 255
    52ba:	fc 01       	movw	r30, r24
    52bc:	10 82       	st	Z, r1
    52be:	11 82       	std	Z+1, r1	; 0x01
    52c0:	12 82       	std	Z+2, r1	; 0x02
    52c2:	13 82       	std	Z+3, r1	; 0x03
    52c4:	89 81       	ldd	r24, Y+1	; 0x01
    52c6:	9a 81       	ldd	r25, Y+2	; 0x02
    52c8:	8f 57       	subi	r24, 0x7F	; 127
    52ca:	9f 4f       	sbci	r25, 0xFF	; 255
    52cc:	fc 01       	movw	r30, r24
    52ce:	10 82       	st	Z, r1
    52d0:	11 82       	std	Z+1, r1	; 0x01
    52d2:	12 82       	std	Z+2, r1	; 0x02
    52d4:	13 82       	std	Z+3, r1	; 0x03
    52d6:	89 81       	ldd	r24, Y+1	; 0x01
    52d8:	9a 81       	ldd	r25, Y+2	; 0x02
    52da:	8b 57       	subi	r24, 0x7B	; 123
    52dc:	9f 4f       	sbci	r25, 0xFF	; 255
    52de:	fc 01       	movw	r30, r24
    52e0:	10 82       	st	Z, r1
    52e2:	11 82       	std	Z+1, r1	; 0x01
    52e4:	12 82       	std	Z+2, r1	; 0x02
    52e6:	13 82       	std	Z+3, r1	; 0x03
    52e8:	89 81       	ldd	r24, Y+1	; 0x01
    52ea:	9a 81       	ldd	r25, Y+2	; 0x02
    52ec:	87 57       	subi	r24, 0x77	; 119
    52ee:	9f 4f       	sbci	r25, 0xFF	; 255
    52f0:	fc 01       	movw	r30, r24
    52f2:	10 82       	st	Z, r1
    52f4:	11 82       	std	Z+1, r1	; 0x01
    52f6:	12 82       	std	Z+2, r1	; 0x02
    52f8:	13 82       	std	Z+3, r1	; 0x03
    52fa:	89 81       	ldd	r24, Y+1	; 0x01
    52fc:	9a 81       	ldd	r25, Y+2	; 0x02
    52fe:	83 57       	subi	r24, 0x73	; 115
    5300:	9f 4f       	sbci	r25, 0xFF	; 255
    5302:	fc 01       	movw	r30, r24
    5304:	10 82       	st	Z, r1
    5306:	11 82       	std	Z+1, r1	; 0x01
    5308:	12 82       	std	Z+2, r1	; 0x02
    530a:	13 82       	std	Z+3, r1	; 0x03
    530c:	89 81       	ldd	r24, Y+1	; 0x01
    530e:	9a 81       	ldd	r25, Y+2	; 0x02
    5310:	8f 56       	subi	r24, 0x6F	; 111
    5312:	9f 4f       	sbci	r25, 0xFF	; 255
    5314:	fc 01       	movw	r30, r24
    5316:	10 82       	st	Z, r1
    5318:	11 82       	std	Z+1, r1	; 0x01
    531a:	12 82       	std	Z+2, r1	; 0x02
    531c:	13 82       	std	Z+3, r1	; 0x03
    531e:	89 81       	ldd	r24, Y+1	; 0x01
    5320:	9a 81       	ldd	r25, Y+2	; 0x02
    5322:	8b 56       	subi	r24, 0x6B	; 107
    5324:	9f 4f       	sbci	r25, 0xFF	; 255
    5326:	fc 01       	movw	r30, r24
    5328:	10 82       	st	Z, r1
    532a:	11 82       	std	Z+1, r1	; 0x01
    532c:	12 82       	std	Z+2, r1	; 0x02
    532e:	13 82       	std	Z+3, r1	; 0x03
    5330:	89 81       	ldd	r24, Y+1	; 0x01
    5332:	9a 81       	ldd	r25, Y+2	; 0x02
    5334:	87 56       	subi	r24, 0x67	; 103
    5336:	9f 4f       	sbci	r25, 0xFF	; 255
    5338:	fc 01       	movw	r30, r24
    533a:	10 82       	st	Z, r1
    533c:	11 82       	std	Z+1, r1	; 0x01
    533e:	12 82       	std	Z+2, r1	; 0x02
    5340:	13 82       	std	Z+3, r1	; 0x03
    5342:	89 81       	ldd	r24, Y+1	; 0x01
    5344:	9a 81       	ldd	r25, Y+2	; 0x02
    5346:	83 56       	subi	r24, 0x63	; 99
    5348:	9f 4f       	sbci	r25, 0xFF	; 255
    534a:	fc 01       	movw	r30, r24
    534c:	10 82       	st	Z, r1
    534e:	11 82       	std	Z+1, r1	; 0x01
    5350:	12 82       	std	Z+2, r1	; 0x02
    5352:	13 82       	std	Z+3, r1	; 0x03
    5354:	89 81       	ldd	r24, Y+1	; 0x01
    5356:	9a 81       	ldd	r25, Y+2	; 0x02
    5358:	8f 55       	subi	r24, 0x5F	; 95
    535a:	9f 4f       	sbci	r25, 0xFF	; 255
    535c:	fc 01       	movw	r30, r24
    535e:	10 82       	st	Z, r1
    5360:	11 82       	std	Z+1, r1	; 0x01
    5362:	12 82       	std	Z+2, r1	; 0x02
    5364:	13 82       	std	Z+3, r1	; 0x03
    5366:	89 81       	ldd	r24, Y+1	; 0x01
    5368:	9a 81       	ldd	r25, Y+2	; 0x02
    536a:	8b 55       	subi	r24, 0x5B	; 91
    536c:	9f 4f       	sbci	r25, 0xFF	; 255
    536e:	fc 01       	movw	r30, r24
    5370:	10 82       	st	Z, r1
    5372:	11 82       	std	Z+1, r1	; 0x01
    5374:	12 82       	std	Z+2, r1	; 0x02
    5376:	13 82       	std	Z+3, r1	; 0x03
    5378:	89 81       	ldd	r24, Y+1	; 0x01
    537a:	9a 81       	ldd	r25, Y+2	; 0x02
    537c:	87 55       	subi	r24, 0x57	; 87
    537e:	9f 4f       	sbci	r25, 0xFF	; 255
    5380:	fc 01       	movw	r30, r24
    5382:	10 82       	st	Z, r1
    5384:	11 82       	std	Z+1, r1	; 0x01
    5386:	12 82       	std	Z+2, r1	; 0x02
    5388:	13 82       	std	Z+3, r1	; 0x03
    538a:	89 81       	ldd	r24, Y+1	; 0x01
    538c:	9a 81       	ldd	r25, Y+2	; 0x02
    538e:	83 55       	subi	r24, 0x53	; 83
    5390:	9f 4f       	sbci	r25, 0xFF	; 255
    5392:	fc 01       	movw	r30, r24
    5394:	10 82       	st	Z, r1
    5396:	11 82       	std	Z+1, r1	; 0x01
    5398:	12 82       	std	Z+2, r1	; 0x02
    539a:	13 82       	std	Z+3, r1	; 0x03
    539c:	89 81       	ldd	r24, Y+1	; 0x01
    539e:	9a 81       	ldd	r25, Y+2	; 0x02
    53a0:	8f 54       	subi	r24, 0x4F	; 79
    53a2:	9f 4f       	sbci	r25, 0xFF	; 255
    53a4:	fc 01       	movw	r30, r24
    53a6:	10 82       	st	Z, r1
    53a8:	11 82       	std	Z+1, r1	; 0x01
    53aa:	12 82       	std	Z+2, r1	; 0x02
    53ac:	13 82       	std	Z+3, r1	; 0x03
    53ae:	89 81       	ldd	r24, Y+1	; 0x01
    53b0:	9a 81       	ldd	r25, Y+2	; 0x02
    53b2:	8b 54       	subi	r24, 0x4B	; 75
    53b4:	9f 4f       	sbci	r25, 0xFF	; 255
    53b6:	fc 01       	movw	r30, r24
    53b8:	10 82       	st	Z, r1
    53ba:	11 82       	std	Z+1, r1	; 0x01
    53bc:	12 82       	std	Z+2, r1	; 0x02
    53be:	13 82       	std	Z+3, r1	; 0x03
    53c0:	89 81       	ldd	r24, Y+1	; 0x01
    53c2:	9a 81       	ldd	r25, Y+2	; 0x02
    53c4:	87 54       	subi	r24, 0x47	; 71
    53c6:	9f 4f       	sbci	r25, 0xFF	; 255
    53c8:	fc 01       	movw	r30, r24
    53ca:	10 82       	st	Z, r1
    53cc:	11 82       	std	Z+1, r1	; 0x01
    53ce:	12 82       	std	Z+2, r1	; 0x02
    53d0:	13 82       	std	Z+3, r1	; 0x03
    53d2:	89 81       	ldd	r24, Y+1	; 0x01
    53d4:	9a 81       	ldd	r25, Y+2	; 0x02
    53d6:	83 54       	subi	r24, 0x43	; 67
    53d8:	9f 4f       	sbci	r25, 0xFF	; 255
    53da:	fc 01       	movw	r30, r24
    53dc:	10 82       	st	Z, r1
    53de:	11 82       	std	Z+1, r1	; 0x01
    53e0:	12 82       	std	Z+2, r1	; 0x02
    53e2:	13 82       	std	Z+3, r1	; 0x03
    53e4:	89 81       	ldd	r24, Y+1	; 0x01
    53e6:	9a 81       	ldd	r25, Y+2	; 0x02
    53e8:	8f 53       	subi	r24, 0x3F	; 63
    53ea:	9f 4f       	sbci	r25, 0xFF	; 255
    53ec:	fc 01       	movw	r30, r24
    53ee:	10 82       	st	Z, r1
    53f0:	11 82       	std	Z+1, r1	; 0x01
    53f2:	12 82       	std	Z+2, r1	; 0x02
    53f4:	13 82       	std	Z+3, r1	; 0x03
    53f6:	89 81       	ldd	r24, Y+1	; 0x01
    53f8:	9a 81       	ldd	r25, Y+2	; 0x02
    53fa:	8b 53       	subi	r24, 0x3B	; 59
    53fc:	9f 4f       	sbci	r25, 0xFF	; 255
    53fe:	fc 01       	movw	r30, r24
    5400:	10 82       	st	Z, r1
    5402:	11 82       	std	Z+1, r1	; 0x01
    5404:	12 82       	std	Z+2, r1	; 0x02
    5406:	13 82       	std	Z+3, r1	; 0x03
    5408:	89 81       	ldd	r24, Y+1	; 0x01
    540a:	9a 81       	ldd	r25, Y+2	; 0x02
    540c:	87 53       	subi	r24, 0x37	; 55
    540e:	9f 4f       	sbci	r25, 0xFF	; 255
    5410:	fc 01       	movw	r30, r24
    5412:	10 82       	st	Z, r1
    5414:	11 82       	std	Z+1, r1	; 0x01
    5416:	12 82       	std	Z+2, r1	; 0x02
    5418:	13 82       	std	Z+3, r1	; 0x03
				{
				
				}
    541a:	0f 90       	pop	r0
    541c:	0f 90       	pop	r0
    541e:	df 91       	pop	r29
    5420:	cf 91       	pop	r28
    5422:	08 95       	ret

00005424 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>:
			
				~SystemTelemetryMessage() {}
    5424:	cf 93       	push	r28
    5426:	df 93       	push	r29
    5428:	1f 92       	push	r1
    542a:	1f 92       	push	r1
    542c:	cd b7       	in	r28, 0x3d	; 61
    542e:	de b7       	in	r29, 0x3e	; 62
    5430:	9a 83       	std	Y+2, r25	; 0x02
    5432:	89 83       	std	Y+1, r24	; 0x01
    5434:	89 81       	ldd	r24, Y+1	; 0x01
    5436:	9a 81       	ldd	r25, Y+2	; 0x02
    5438:	28 e4       	ldi	r18, 0x48	; 72
    543a:	32 e0       	ldi	r19, 0x02	; 2
    543c:	fc 01       	movw	r30, r24
    543e:	31 83       	std	Z+1, r19	; 0x01
    5440:	20 83       	st	Z, r18
    5442:	89 81       	ldd	r24, Y+1	; 0x01
    5444:	9a 81       	ldd	r25, Y+2	; 0x02
    5446:	0e 94 5e 23 	call	0x46bc	; 0x46bc <_ZN10helicopter8messages7MessageD1Ev>
    544a:	80 e0       	ldi	r24, 0x00	; 0
    544c:	90 e0       	ldi	r25, 0x00	; 0
    544e:	81 70       	andi	r24, 0x01	; 1
    5450:	99 27       	eor	r25, r25
    5452:	00 97       	sbiw	r24, 0x00	; 0
    5454:	21 f0       	breq	.+8      	; 0x545e <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev+0x3a>
    5456:	89 81       	ldd	r24, Y+1	; 0x01
    5458:	9a 81       	ldd	r25, Y+2	; 0x02
    545a:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    545e:	0f 90       	pop	r0
    5460:	0f 90       	pop	r0
    5462:	df 91       	pop	r29
    5464:	cf 91       	pop	r28
    5466:	08 95       	ret

00005468 <_ZN10helicopter8messages22SystemTelemetryMessageD0Ev>:
    5468:	cf 93       	push	r28
    546a:	df 93       	push	r29
    546c:	1f 92       	push	r1
    546e:	1f 92       	push	r1
    5470:	cd b7       	in	r28, 0x3d	; 61
    5472:	de b7       	in	r29, 0x3e	; 62
    5474:	9a 83       	std	Y+2, r25	; 0x02
    5476:	89 83       	std	Y+1, r24	; 0x01
    5478:	89 81       	ldd	r24, Y+1	; 0x01
    547a:	9a 81       	ldd	r25, Y+2	; 0x02
    547c:	0e 94 12 2a 	call	0x5424	; 0x5424 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>
    5480:	89 81       	ldd	r24, Y+1	; 0x01
    5482:	9a 81       	ldd	r25, Y+2	; 0x02
    5484:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    5488:	0f 90       	pop	r0
    548a:	0f 90       	pop	r0
    548c:	df 91       	pop	r29
    548e:	cf 91       	pop	r28
    5490:	08 95       	ret

00005492 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv>:

using namespace helicopter::messages;


byte *SystemTelemetryMessage::getBytes()
{
    5492:	cf 93       	push	r28
    5494:	df 93       	push	r29
    5496:	00 d0       	rcall	.+0      	; 0x5498 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv+0x6>
    5498:	00 d0       	rcall	.+0      	; 0x549a <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv+0x8>
    549a:	cd b7       	in	r28, 0x3d	; 61
    549c:	de b7       	in	r29, 0x3e	; 62
    549e:	9e 83       	std	Y+6, r25	; 0x06
    54a0:	8d 83       	std	Y+5, r24	; 0x05
	byte *msg = new byte[MessageSize];
    54a2:	89 ec       	ldi	r24, 0xC9	; 201
    54a4:	90 e0       	ldi	r25, 0x00	; 0
    54a6:	0e 94 27 3d 	call	0x7a4e	; 0x7a4e <_Znaj>
    54aa:	9a 83       	std	Y+2, r25	; 0x02
    54ac:	89 83       	std	Y+1, r24	; 0x01
	byte *msgPtr = msg;
    54ae:	89 81       	ldd	r24, Y+1	; 0x01
    54b0:	9a 81       	ldd	r25, Y+2	; 0x02
    54b2:	9c 83       	std	Y+4, r25	; 0x04
    54b4:	8b 83       	std	Y+3, r24	; 0x03
	
	encode (msgPtr, msgType);
    54b6:	8d 81       	ldd	r24, Y+5	; 0x05
    54b8:	9e 81       	ldd	r25, Y+6	; 0x06
    54ba:	ac 01       	movw	r20, r24
    54bc:	4e 5f       	subi	r20, 0xFE	; 254
    54be:	5f 4f       	sbci	r21, 0xFF	; 255
    54c0:	8d 81       	ldd	r24, Y+5	; 0x05
    54c2:	9e 81       	ldd	r25, Y+6	; 0x06
    54c4:	9e 01       	movw	r18, r28
    54c6:	2d 5f       	subi	r18, 0xFD	; 253
    54c8:	3f 4f       	sbci	r19, 0xFF	; 255
    54ca:	b9 01       	movw	r22, r18
    54cc:	0e 94 da 24 	call	0x49b4	; 0x49b4 <_ZN10helicopter8messages7Message6encodeERPhRh>
	encode (msgPtr, MagYaw);
    54d0:	8d 81       	ldd	r24, Y+5	; 0x05
    54d2:	9e 81       	ldd	r25, Y+6	; 0x06
    54d4:	ac 01       	movw	r20, r24
    54d6:	4b 5f       	subi	r20, 0xFB	; 251
    54d8:	5f 4f       	sbci	r21, 0xFF	; 255
    54da:	8d 81       	ldd	r24, Y+5	; 0x05
    54dc:	9e 81       	ldd	r25, Y+6	; 0x06
    54de:	9e 01       	movw	r18, r28
    54e0:	2d 5f       	subi	r18, 0xFD	; 253
    54e2:	3f 4f       	sbci	r19, 0xFF	; 255
    54e4:	b9 01       	movw	r22, r18
    54e6:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawVelocityDegreesPerSecond);
    54ea:	8d 81       	ldd	r24, Y+5	; 0x05
    54ec:	9e 81       	ldd	r25, Y+6	; 0x06
    54ee:	ac 01       	movw	r20, r24
    54f0:	47 5f       	subi	r20, 0xF7	; 247
    54f2:	5f 4f       	sbci	r21, 0xFF	; 255
    54f4:	8d 81       	ldd	r24, Y+5	; 0x05
    54f6:	9e 81       	ldd	r25, Y+6	; 0x06
    54f8:	9e 01       	movw	r18, r28
    54fa:	2d 5f       	subi	r18, 0xFD	; 253
    54fc:	3f 4f       	sbci	r19, 0xFF	; 255
    54fe:	b9 01       	movw	r22, r18
    5500:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawIntegral);
    5504:	8d 81       	ldd	r24, Y+5	; 0x05
    5506:	9e 81       	ldd	r25, Y+6	; 0x06
    5508:	ac 01       	movw	r20, r24
    550a:	43 5f       	subi	r20, 0xF3	; 243
    550c:	5f 4f       	sbci	r21, 0xFF	; 255
    550e:	8d 81       	ldd	r24, Y+5	; 0x05
    5510:	9e 81       	ldd	r25, Y+6	; 0x06
    5512:	9e 01       	movw	r18, r28
    5514:	2d 5f       	subi	r18, 0xFD	; 253
    5516:	3f 4f       	sbci	r19, 0xFF	; 255
    5518:	b9 01       	movw	r22, r18
    551a:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawProportional);
    551e:	8d 81       	ldd	r24, Y+5	; 0x05
    5520:	9e 81       	ldd	r25, Y+6	; 0x06
    5522:	ac 01       	movw	r20, r24
    5524:	4f 5e       	subi	r20, 0xEF	; 239
    5526:	5f 4f       	sbci	r21, 0xFF	; 255
    5528:	8d 81       	ldd	r24, Y+5	; 0x05
    552a:	9e 81       	ldd	r25, Y+6	; 0x06
    552c:	9e 01       	movw	r18, r28
    552e:	2d 5f       	subi	r18, 0xFD	; 253
    5530:	3f 4f       	sbci	r19, 0xFF	; 255
    5532:	b9 01       	movw	r22, r18
    5534:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawDerivativeError);
    5538:	8d 81       	ldd	r24, Y+5	; 0x05
    553a:	9e 81       	ldd	r25, Y+6	; 0x06
    553c:	ac 01       	movw	r20, r24
    553e:	4b 5e       	subi	r20, 0xEB	; 235
    5540:	5f 4f       	sbci	r21, 0xFF	; 255
    5542:	8d 81       	ldd	r24, Y+5	; 0x05
    5544:	9e 81       	ldd	r25, Y+6	; 0x06
    5546:	9e 01       	movw	r18, r28
    5548:	2d 5f       	subi	r18, 0xFD	; 253
    554a:	3f 4f       	sbci	r19, 0xFF	; 255
    554c:	b9 01       	movw	r22, r18
    554e:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawControl);
    5552:	8d 81       	ldd	r24, Y+5	; 0x05
    5554:	9e 81       	ldd	r25, Y+6	; 0x06
    5556:	ac 01       	movw	r20, r24
    5558:	47 5e       	subi	r20, 0xE7	; 231
    555a:	5f 4f       	sbci	r21, 0xFF	; 255
    555c:	8d 81       	ldd	r24, Y+5	; 0x05
    555e:	9e 81       	ldd	r25, Y+6	; 0x06
    5560:	9e 01       	movw	r18, r28
    5562:	2d 5f       	subi	r18, 0xFD	; 253
    5564:	3f 4f       	sbci	r19, 0xFF	; 255
    5566:	b9 01       	movw	r22, r18
    5568:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawIntegralGain);
    556c:	8d 81       	ldd	r24, Y+5	; 0x05
    556e:	9e 81       	ldd	r25, Y+6	; 0x06
    5570:	ac 01       	movw	r20, r24
    5572:	43 5e       	subi	r20, 0xE3	; 227
    5574:	5f 4f       	sbci	r21, 0xFF	; 255
    5576:	8d 81       	ldd	r24, Y+5	; 0x05
    5578:	9e 81       	ldd	r25, Y+6	; 0x06
    557a:	9e 01       	movw	r18, r28
    557c:	2d 5f       	subi	r18, 0xFD	; 253
    557e:	3f 4f       	sbci	r19, 0xFF	; 255
    5580:	b9 01       	movw	r22, r18
    5582:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawDerivativeGain);
    5586:	8d 81       	ldd	r24, Y+5	; 0x05
    5588:	9e 81       	ldd	r25, Y+6	; 0x06
    558a:	ac 01       	movw	r20, r24
    558c:	4f 5d       	subi	r20, 0xDF	; 223
    558e:	5f 4f       	sbci	r21, 0xFF	; 255
    5590:	8d 81       	ldd	r24, Y+5	; 0x05
    5592:	9e 81       	ldd	r25, Y+6	; 0x06
    5594:	9e 01       	movw	r18, r28
    5596:	2d 5f       	subi	r18, 0xFD	; 253
    5598:	3f 4f       	sbci	r19, 0xFF	; 255
    559a:	b9 01       	movw	r22, r18
    559c:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawProportionalGain);
    55a0:	8d 81       	ldd	r24, Y+5	; 0x05
    55a2:	9e 81       	ldd	r25, Y+6	; 0x06
    55a4:	ac 01       	movw	r20, r24
    55a6:	4b 5d       	subi	r20, 0xDB	; 219
    55a8:	5f 4f       	sbci	r21, 0xFF	; 255
    55aa:	8d 81       	ldd	r24, Y+5	; 0x05
    55ac:	9e 81       	ldd	r25, Y+6	; 0x06
    55ae:	9e 01       	movw	r18, r28
    55b0:	2d 5f       	subi	r18, 0xFD	; 253
    55b2:	3f 4f       	sbci	r19, 0xFF	; 255
    55b4:	b9 01       	movw	r22, r18
    55b6:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawAntiWindupGain);
    55ba:	8d 81       	ldd	r24, Y+5	; 0x05
    55bc:	9e 81       	ldd	r25, Y+6	; 0x06
    55be:	ac 01       	movw	r20, r24
    55c0:	47 5d       	subi	r20, 0xD7	; 215
    55c2:	5f 4f       	sbci	r21, 0xFF	; 255
    55c4:	8d 81       	ldd	r24, Y+5	; 0x05
    55c6:	9e 81       	ldd	r25, Y+6	; 0x06
    55c8:	9e 01       	movw	r18, r28
    55ca:	2d 5f       	subi	r18, 0xFD	; 253
    55cc:	3f 4f       	sbci	r19, 0xFF	; 255
    55ce:	b9 01       	movw	r22, r18
    55d0:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	


	encode (msgPtr, XNEDBodyFrame);
    55d4:	8d 81       	ldd	r24, Y+5	; 0x05
    55d6:	9e 81       	ldd	r25, Y+6	; 0x06
    55d8:	ac 01       	movw	r20, r24
    55da:	43 5d       	subi	r20, 0xD3	; 211
    55dc:	5f 4f       	sbci	r21, 0xFF	; 255
    55de:	8d 81       	ldd	r24, Y+5	; 0x05
    55e0:	9e 81       	ldd	r25, Y+6	; 0x06
    55e2:	9e 01       	movw	r18, r28
    55e4:	2d 5f       	subi	r18, 0xFD	; 253
    55e6:	3f 4f       	sbci	r19, 0xFF	; 255
    55e8:	b9 01       	movw	r22, r18
    55ea:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XVelocityMetersPerSecond);
    55ee:	8d 81       	ldd	r24, Y+5	; 0x05
    55f0:	9e 81       	ldd	r25, Y+6	; 0x06
    55f2:	ac 01       	movw	r20, r24
    55f4:	4f 5c       	subi	r20, 0xCF	; 207
    55f6:	5f 4f       	sbci	r21, 0xFF	; 255
    55f8:	8d 81       	ldd	r24, Y+5	; 0x05
    55fa:	9e 81       	ldd	r25, Y+6	; 0x06
    55fc:	9e 01       	movw	r18, r28
    55fe:	2d 5f       	subi	r18, 0xFD	; 253
    5600:	3f 4f       	sbci	r19, 0xFF	; 255
    5602:	b9 01       	movw	r22, r18
    5604:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ThetaPitchDegrees);	
    5608:	8d 81       	ldd	r24, Y+5	; 0x05
    560a:	9e 81       	ldd	r25, Y+6	; 0x06
    560c:	ac 01       	movw	r20, r24
    560e:	4b 5c       	subi	r20, 0xCB	; 203
    5610:	5f 4f       	sbci	r21, 0xFF	; 255
    5612:	8d 81       	ldd	r24, Y+5	; 0x05
    5614:	9e 81       	ldd	r25, Y+6	; 0x06
    5616:	9e 01       	movw	r18, r28
    5618:	2d 5f       	subi	r18, 0xFD	; 253
    561a:	3f 4f       	sbci	r19, 0xFF	; 255
    561c:	b9 01       	movw	r22, r18
    561e:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XIntegral);
    5622:	8d 81       	ldd	r24, Y+5	; 0x05
    5624:	9e 81       	ldd	r25, Y+6	; 0x06
    5626:	ac 01       	movw	r20, r24
    5628:	47 5c       	subi	r20, 0xC7	; 199
    562a:	5f 4f       	sbci	r21, 0xFF	; 255
    562c:	8d 81       	ldd	r24, Y+5	; 0x05
    562e:	9e 81       	ldd	r25, Y+6	; 0x06
    5630:	9e 01       	movw	r18, r28
    5632:	2d 5f       	subi	r18, 0xFD	; 253
    5634:	3f 4f       	sbci	r19, 0xFF	; 255
    5636:	b9 01       	movw	r22, r18
    5638:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XProportional);
    563c:	8d 81       	ldd	r24, Y+5	; 0x05
    563e:	9e 81       	ldd	r25, Y+6	; 0x06
    5640:	ac 01       	movw	r20, r24
    5642:	43 5c       	subi	r20, 0xC3	; 195
    5644:	5f 4f       	sbci	r21, 0xFF	; 255
    5646:	8d 81       	ldd	r24, Y+5	; 0x05
    5648:	9e 81       	ldd	r25, Y+6	; 0x06
    564a:	9e 01       	movw	r18, r28
    564c:	2d 5f       	subi	r18, 0xFD	; 253
    564e:	3f 4f       	sbci	r19, 0xFF	; 255
    5650:	b9 01       	movw	r22, r18
    5652:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XDerivativeError);
    5656:	8d 81       	ldd	r24, Y+5	; 0x05
    5658:	9e 81       	ldd	r25, Y+6	; 0x06
    565a:	ac 01       	movw	r20, r24
    565c:	4f 5b       	subi	r20, 0xBF	; 191
    565e:	5f 4f       	sbci	r21, 0xFF	; 255
    5660:	8d 81       	ldd	r24, Y+5	; 0x05
    5662:	9e 81       	ldd	r25, Y+6	; 0x06
    5664:	9e 01       	movw	r18, r28
    5666:	2d 5f       	subi	r18, 0xFD	; 253
    5668:	3f 4f       	sbci	r19, 0xFF	; 255
    566a:	b9 01       	movw	r22, r18
    566c:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LongitudeControl);
    5670:	8d 81       	ldd	r24, Y+5	; 0x05
    5672:	9e 81       	ldd	r25, Y+6	; 0x06
    5674:	ac 01       	movw	r20, r24
    5676:	4b 5b       	subi	r20, 0xBB	; 187
    5678:	5f 4f       	sbci	r21, 0xFF	; 255
    567a:	8d 81       	ldd	r24, Y+5	; 0x05
    567c:	9e 81       	ldd	r25, Y+6	; 0x06
    567e:	9e 01       	movw	r18, r28
    5680:	2d 5f       	subi	r18, 0xFD	; 253
    5682:	3f 4f       	sbci	r19, 0xFF	; 255
    5684:	b9 01       	movw	r22, r18
    5686:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XIntegralGain);
    568a:	8d 81       	ldd	r24, Y+5	; 0x05
    568c:	9e 81       	ldd	r25, Y+6	; 0x06
    568e:	ac 01       	movw	r20, r24
    5690:	47 5b       	subi	r20, 0xB7	; 183
    5692:	5f 4f       	sbci	r21, 0xFF	; 255
    5694:	8d 81       	ldd	r24, Y+5	; 0x05
    5696:	9e 81       	ldd	r25, Y+6	; 0x06
    5698:	9e 01       	movw	r18, r28
    569a:	2d 5f       	subi	r18, 0xFD	; 253
    569c:	3f 4f       	sbci	r19, 0xFF	; 255
    569e:	b9 01       	movw	r22, r18
    56a0:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XDerivativeGain);
    56a4:	8d 81       	ldd	r24, Y+5	; 0x05
    56a6:	9e 81       	ldd	r25, Y+6	; 0x06
    56a8:	ac 01       	movw	r20, r24
    56aa:	43 5b       	subi	r20, 0xB3	; 179
    56ac:	5f 4f       	sbci	r21, 0xFF	; 255
    56ae:	8d 81       	ldd	r24, Y+5	; 0x05
    56b0:	9e 81       	ldd	r25, Y+6	; 0x06
    56b2:	9e 01       	movw	r18, r28
    56b4:	2d 5f       	subi	r18, 0xFD	; 253
    56b6:	3f 4f       	sbci	r19, 0xFF	; 255
    56b8:	b9 01       	movw	r22, r18
    56ba:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XProportionalGain);
    56be:	8d 81       	ldd	r24, Y+5	; 0x05
    56c0:	9e 81       	ldd	r25, Y+6	; 0x06
    56c2:	ac 01       	movw	r20, r24
    56c4:	4f 5a       	subi	r20, 0xAF	; 175
    56c6:	5f 4f       	sbci	r21, 0xFF	; 255
    56c8:	8d 81       	ldd	r24, Y+5	; 0x05
    56ca:	9e 81       	ldd	r25, Y+6	; 0x06
    56cc:	9e 01       	movw	r18, r28
    56ce:	2d 5f       	subi	r18, 0xFD	; 253
    56d0:	3f 4f       	sbci	r19, 0xFF	; 255
    56d2:	b9 01       	movw	r22, r18
    56d4:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XAntiWindupGain);	
    56d8:	8d 81       	ldd	r24, Y+5	; 0x05
    56da:	9e 81       	ldd	r25, Y+6	; 0x06
    56dc:	ac 01       	movw	r20, r24
    56de:	4b 5a       	subi	r20, 0xAB	; 171
    56e0:	5f 4f       	sbci	r21, 0xFF	; 255
    56e2:	8d 81       	ldd	r24, Y+5	; 0x05
    56e4:	9e 81       	ldd	r25, Y+6	; 0x06
    56e6:	9e 01       	movw	r18, r28
    56e8:	2d 5f       	subi	r18, 0xFD	; 253
    56ea:	3f 4f       	sbci	r19, 0xFF	; 255
    56ec:	b9 01       	movw	r22, r18
    56ee:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LongitudeInnerLoopGain);	
    56f2:	8d 81       	ldd	r24, Y+5	; 0x05
    56f4:	9e 81       	ldd	r25, Y+6	; 0x06
    56f6:	ac 01       	movw	r20, r24
    56f8:	47 5a       	subi	r20, 0xA7	; 167
    56fa:	5f 4f       	sbci	r21, 0xFF	; 255
    56fc:	8d 81       	ldd	r24, Y+5	; 0x05
    56fe:	9e 81       	ldd	r25, Y+6	; 0x06
    5700:	9e 01       	movw	r18, r28
    5702:	2d 5f       	subi	r18, 0xFD	; 253
    5704:	3f 4f       	sbci	r19, 0xFF	; 255
    5706:	b9 01       	movw	r22, r18
    5708:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	
	encode (msgPtr, YNEDBodyFrame);
    570c:	8d 81       	ldd	r24, Y+5	; 0x05
    570e:	9e 81       	ldd	r25, Y+6	; 0x06
    5710:	ac 01       	movw	r20, r24
    5712:	43 5a       	subi	r20, 0xA3	; 163
    5714:	5f 4f       	sbci	r21, 0xFF	; 255
    5716:	8d 81       	ldd	r24, Y+5	; 0x05
    5718:	9e 81       	ldd	r25, Y+6	; 0x06
    571a:	9e 01       	movw	r18, r28
    571c:	2d 5f       	subi	r18, 0xFD	; 253
    571e:	3f 4f       	sbci	r19, 0xFF	; 255
    5720:	b9 01       	movw	r22, r18
    5722:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YVelocityMetersPerSecond);
    5726:	8d 81       	ldd	r24, Y+5	; 0x05
    5728:	9e 81       	ldd	r25, Y+6	; 0x06
    572a:	ac 01       	movw	r20, r24
    572c:	4f 59       	subi	r20, 0x9F	; 159
    572e:	5f 4f       	sbci	r21, 0xFF	; 255
    5730:	8d 81       	ldd	r24, Y+5	; 0x05
    5732:	9e 81       	ldd	r25, Y+6	; 0x06
    5734:	9e 01       	movw	r18, r28
    5736:	2d 5f       	subi	r18, 0xFD	; 253
    5738:	3f 4f       	sbci	r19, 0xFF	; 255
    573a:	b9 01       	movw	r22, r18
    573c:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, PhiRollDegrees);
    5740:	8d 81       	ldd	r24, Y+5	; 0x05
    5742:	9e 81       	ldd	r25, Y+6	; 0x06
    5744:	ac 01       	movw	r20, r24
    5746:	4b 59       	subi	r20, 0x9B	; 155
    5748:	5f 4f       	sbci	r21, 0xFF	; 255
    574a:	8d 81       	ldd	r24, Y+5	; 0x05
    574c:	9e 81       	ldd	r25, Y+6	; 0x06
    574e:	9e 01       	movw	r18, r28
    5750:	2d 5f       	subi	r18, 0xFD	; 253
    5752:	3f 4f       	sbci	r19, 0xFF	; 255
    5754:	b9 01       	movw	r22, r18
    5756:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YIntegral);
    575a:	8d 81       	ldd	r24, Y+5	; 0x05
    575c:	9e 81       	ldd	r25, Y+6	; 0x06
    575e:	ac 01       	movw	r20, r24
    5760:	47 59       	subi	r20, 0x97	; 151
    5762:	5f 4f       	sbci	r21, 0xFF	; 255
    5764:	8d 81       	ldd	r24, Y+5	; 0x05
    5766:	9e 81       	ldd	r25, Y+6	; 0x06
    5768:	9e 01       	movw	r18, r28
    576a:	2d 5f       	subi	r18, 0xFD	; 253
    576c:	3f 4f       	sbci	r19, 0xFF	; 255
    576e:	b9 01       	movw	r22, r18
    5770:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YProportional);
    5774:	8d 81       	ldd	r24, Y+5	; 0x05
    5776:	9e 81       	ldd	r25, Y+6	; 0x06
    5778:	ac 01       	movw	r20, r24
    577a:	43 59       	subi	r20, 0x93	; 147
    577c:	5f 4f       	sbci	r21, 0xFF	; 255
    577e:	8d 81       	ldd	r24, Y+5	; 0x05
    5780:	9e 81       	ldd	r25, Y+6	; 0x06
    5782:	9e 01       	movw	r18, r28
    5784:	2d 5f       	subi	r18, 0xFD	; 253
    5786:	3f 4f       	sbci	r19, 0xFF	; 255
    5788:	b9 01       	movw	r22, r18
    578a:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YDerivativeError);
    578e:	8d 81       	ldd	r24, Y+5	; 0x05
    5790:	9e 81       	ldd	r25, Y+6	; 0x06
    5792:	ac 01       	movw	r20, r24
    5794:	4f 58       	subi	r20, 0x8F	; 143
    5796:	5f 4f       	sbci	r21, 0xFF	; 255
    5798:	8d 81       	ldd	r24, Y+5	; 0x05
    579a:	9e 81       	ldd	r25, Y+6	; 0x06
    579c:	9e 01       	movw	r18, r28
    579e:	2d 5f       	subi	r18, 0xFD	; 253
    57a0:	3f 4f       	sbci	r19, 0xFF	; 255
    57a2:	b9 01       	movw	r22, r18
    57a4:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LateralControl);
    57a8:	8d 81       	ldd	r24, Y+5	; 0x05
    57aa:	9e 81       	ldd	r25, Y+6	; 0x06
    57ac:	ac 01       	movw	r20, r24
    57ae:	4b 58       	subi	r20, 0x8B	; 139
    57b0:	5f 4f       	sbci	r21, 0xFF	; 255
    57b2:	8d 81       	ldd	r24, Y+5	; 0x05
    57b4:	9e 81       	ldd	r25, Y+6	; 0x06
    57b6:	9e 01       	movw	r18, r28
    57b8:	2d 5f       	subi	r18, 0xFD	; 253
    57ba:	3f 4f       	sbci	r19, 0xFF	; 255
    57bc:	b9 01       	movw	r22, r18
    57be:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YIntegralGain);
    57c2:	8d 81       	ldd	r24, Y+5	; 0x05
    57c4:	9e 81       	ldd	r25, Y+6	; 0x06
    57c6:	ac 01       	movw	r20, r24
    57c8:	47 58       	subi	r20, 0x87	; 135
    57ca:	5f 4f       	sbci	r21, 0xFF	; 255
    57cc:	8d 81       	ldd	r24, Y+5	; 0x05
    57ce:	9e 81       	ldd	r25, Y+6	; 0x06
    57d0:	9e 01       	movw	r18, r28
    57d2:	2d 5f       	subi	r18, 0xFD	; 253
    57d4:	3f 4f       	sbci	r19, 0xFF	; 255
    57d6:	b9 01       	movw	r22, r18
    57d8:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YDerivativeGain);
    57dc:	8d 81       	ldd	r24, Y+5	; 0x05
    57de:	9e 81       	ldd	r25, Y+6	; 0x06
    57e0:	ac 01       	movw	r20, r24
    57e2:	43 58       	subi	r20, 0x83	; 131
    57e4:	5f 4f       	sbci	r21, 0xFF	; 255
    57e6:	8d 81       	ldd	r24, Y+5	; 0x05
    57e8:	9e 81       	ldd	r25, Y+6	; 0x06
    57ea:	9e 01       	movw	r18, r28
    57ec:	2d 5f       	subi	r18, 0xFD	; 253
    57ee:	3f 4f       	sbci	r19, 0xFF	; 255
    57f0:	b9 01       	movw	r22, r18
    57f2:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YProportionalGain);
    57f6:	8d 81       	ldd	r24, Y+5	; 0x05
    57f8:	9e 81       	ldd	r25, Y+6	; 0x06
    57fa:	ac 01       	movw	r20, r24
    57fc:	4f 57       	subi	r20, 0x7F	; 127
    57fe:	5f 4f       	sbci	r21, 0xFF	; 255
    5800:	8d 81       	ldd	r24, Y+5	; 0x05
    5802:	9e 81       	ldd	r25, Y+6	; 0x06
    5804:	9e 01       	movw	r18, r28
    5806:	2d 5f       	subi	r18, 0xFD	; 253
    5808:	3f 4f       	sbci	r19, 0xFF	; 255
    580a:	b9 01       	movw	r22, r18
    580c:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YAntiWindupGain);
    5810:	8d 81       	ldd	r24, Y+5	; 0x05
    5812:	9e 81       	ldd	r25, Y+6	; 0x06
    5814:	ac 01       	movw	r20, r24
    5816:	4b 57       	subi	r20, 0x7B	; 123
    5818:	5f 4f       	sbci	r21, 0xFF	; 255
    581a:	8d 81       	ldd	r24, Y+5	; 0x05
    581c:	9e 81       	ldd	r25, Y+6	; 0x06
    581e:	9e 01       	movw	r18, r28
    5820:	2d 5f       	subi	r18, 0xFD	; 253
    5822:	3f 4f       	sbci	r19, 0xFF	; 255
    5824:	b9 01       	movw	r22, r18
    5826:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LateralInnerLoopGain);	
    582a:	8d 81       	ldd	r24, Y+5	; 0x05
    582c:	9e 81       	ldd	r25, Y+6	; 0x06
    582e:	ac 01       	movw	r20, r24
    5830:	47 57       	subi	r20, 0x77	; 119
    5832:	5f 4f       	sbci	r21, 0xFF	; 255
    5834:	8d 81       	ldd	r24, Y+5	; 0x05
    5836:	9e 81       	ldd	r25, Y+6	; 0x06
    5838:	9e 01       	movw	r18, r28
    583a:	2d 5f       	subi	r18, 0xFD	; 253
    583c:	3f 4f       	sbci	r19, 0xFF	; 255
    583e:	b9 01       	movw	r22, r18
    5840:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	
	

	encode (msgPtr, AltitudeFeetAgl);
    5844:	8d 81       	ldd	r24, Y+5	; 0x05
    5846:	9e 81       	ldd	r25, Y+6	; 0x06
    5848:	ac 01       	movw	r20, r24
    584a:	43 57       	subi	r20, 0x73	; 115
    584c:	5f 4f       	sbci	r21, 0xFF	; 255
    584e:	8d 81       	ldd	r24, Y+5	; 0x05
    5850:	9e 81       	ldd	r25, Y+6	; 0x06
    5852:	9e 01       	movw	r18, r28
    5854:	2d 5f       	subi	r18, 0xFD	; 253
    5856:	3f 4f       	sbci	r19, 0xFF	; 255
    5858:	b9 01       	movw	r22, r18
    585a:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZVelocityMetersPerSecond);
    585e:	8d 81       	ldd	r24, Y+5	; 0x05
    5860:	9e 81       	ldd	r25, Y+6	; 0x06
    5862:	ac 01       	movw	r20, r24
    5864:	4f 56       	subi	r20, 0x6F	; 111
    5866:	5f 4f       	sbci	r21, 0xFF	; 255
    5868:	8d 81       	ldd	r24, Y+5	; 0x05
    586a:	9e 81       	ldd	r25, Y+6	; 0x06
    586c:	9e 01       	movw	r18, r28
    586e:	2d 5f       	subi	r18, 0xFD	; 253
    5870:	3f 4f       	sbci	r19, 0xFF	; 255
    5872:	b9 01       	movw	r22, r18
    5874:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZIntegral);
    5878:	8d 81       	ldd	r24, Y+5	; 0x05
    587a:	9e 81       	ldd	r25, Y+6	; 0x06
    587c:	ac 01       	movw	r20, r24
    587e:	4b 56       	subi	r20, 0x6B	; 107
    5880:	5f 4f       	sbci	r21, 0xFF	; 255
    5882:	8d 81       	ldd	r24, Y+5	; 0x05
    5884:	9e 81       	ldd	r25, Y+6	; 0x06
    5886:	9e 01       	movw	r18, r28
    5888:	2d 5f       	subi	r18, 0xFD	; 253
    588a:	3f 4f       	sbci	r19, 0xFF	; 255
    588c:	b9 01       	movw	r22, r18
    588e:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZProportional);
    5892:	8d 81       	ldd	r24, Y+5	; 0x05
    5894:	9e 81       	ldd	r25, Y+6	; 0x06
    5896:	ac 01       	movw	r20, r24
    5898:	47 56       	subi	r20, 0x67	; 103
    589a:	5f 4f       	sbci	r21, 0xFF	; 255
    589c:	8d 81       	ldd	r24, Y+5	; 0x05
    589e:	9e 81       	ldd	r25, Y+6	; 0x06
    58a0:	9e 01       	movw	r18, r28
    58a2:	2d 5f       	subi	r18, 0xFD	; 253
    58a4:	3f 4f       	sbci	r19, 0xFF	; 255
    58a6:	b9 01       	movw	r22, r18
    58a8:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZDerivativeError);
    58ac:	8d 81       	ldd	r24, Y+5	; 0x05
    58ae:	9e 81       	ldd	r25, Y+6	; 0x06
    58b0:	ac 01       	movw	r20, r24
    58b2:	43 56       	subi	r20, 0x63	; 99
    58b4:	5f 4f       	sbci	r21, 0xFF	; 255
    58b6:	8d 81       	ldd	r24, Y+5	; 0x05
    58b8:	9e 81       	ldd	r25, Y+6	; 0x06
    58ba:	9e 01       	movw	r18, r28
    58bc:	2d 5f       	subi	r18, 0xFD	; 253
    58be:	3f 4f       	sbci	r19, 0xFF	; 255
    58c0:	b9 01       	movw	r22, r18
    58c2:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, MainRotorCollectiveControl);
    58c6:	8d 81       	ldd	r24, Y+5	; 0x05
    58c8:	9e 81       	ldd	r25, Y+6	; 0x06
    58ca:	ac 01       	movw	r20, r24
    58cc:	4f 55       	subi	r20, 0x5F	; 95
    58ce:	5f 4f       	sbci	r21, 0xFF	; 255
    58d0:	8d 81       	ldd	r24, Y+5	; 0x05
    58d2:	9e 81       	ldd	r25, Y+6	; 0x06
    58d4:	9e 01       	movw	r18, r28
    58d6:	2d 5f       	subi	r18, 0xFD	; 253
    58d8:	3f 4f       	sbci	r19, 0xFF	; 255
    58da:	b9 01       	movw	r22, r18
    58dc:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZIntegralGain);
    58e0:	8d 81       	ldd	r24, Y+5	; 0x05
    58e2:	9e 81       	ldd	r25, Y+6	; 0x06
    58e4:	ac 01       	movw	r20, r24
    58e6:	4b 55       	subi	r20, 0x5B	; 91
    58e8:	5f 4f       	sbci	r21, 0xFF	; 255
    58ea:	8d 81       	ldd	r24, Y+5	; 0x05
    58ec:	9e 81       	ldd	r25, Y+6	; 0x06
    58ee:	9e 01       	movw	r18, r28
    58f0:	2d 5f       	subi	r18, 0xFD	; 253
    58f2:	3f 4f       	sbci	r19, 0xFF	; 255
    58f4:	b9 01       	movw	r22, r18
    58f6:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZDerivativeGain);
    58fa:	8d 81       	ldd	r24, Y+5	; 0x05
    58fc:	9e 81       	ldd	r25, Y+6	; 0x06
    58fe:	ac 01       	movw	r20, r24
    5900:	47 55       	subi	r20, 0x57	; 87
    5902:	5f 4f       	sbci	r21, 0xFF	; 255
    5904:	8d 81       	ldd	r24, Y+5	; 0x05
    5906:	9e 81       	ldd	r25, Y+6	; 0x06
    5908:	9e 01       	movw	r18, r28
    590a:	2d 5f       	subi	r18, 0xFD	; 253
    590c:	3f 4f       	sbci	r19, 0xFF	; 255
    590e:	b9 01       	movw	r22, r18
    5910:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZProportionalGain);
    5914:	8d 81       	ldd	r24, Y+5	; 0x05
    5916:	9e 81       	ldd	r25, Y+6	; 0x06
    5918:	ac 01       	movw	r20, r24
    591a:	43 55       	subi	r20, 0x53	; 83
    591c:	5f 4f       	sbci	r21, 0xFF	; 255
    591e:	8d 81       	ldd	r24, Y+5	; 0x05
    5920:	9e 81       	ldd	r25, Y+6	; 0x06
    5922:	9e 01       	movw	r18, r28
    5924:	2d 5f       	subi	r18, 0xFD	; 253
    5926:	3f 4f       	sbci	r19, 0xFF	; 255
    5928:	b9 01       	movw	r22, r18
    592a:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZAntiWindupGain);
    592e:	8d 81       	ldd	r24, Y+5	; 0x05
    5930:	9e 81       	ldd	r25, Y+6	; 0x06
    5932:	ac 01       	movw	r20, r24
    5934:	4f 54       	subi	r20, 0x4F	; 79
    5936:	5f 4f       	sbci	r21, 0xFF	; 255
    5938:	8d 81       	ldd	r24, Y+5	; 0x05
    593a:	9e 81       	ldd	r25, Y+6	; 0x06
    593c:	9e 01       	movw	r18, r28
    593e:	2d 5f       	subi	r18, 0xFD	; 253
    5940:	3f 4f       	sbci	r19, 0xFF	; 255
    5942:	b9 01       	movw	r22, r18
    5944:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
		
	
	encode(msgPtr, LatitudeDegrees);
    5948:	8d 81       	ldd	r24, Y+5	; 0x05
    594a:	9e 81       	ldd	r25, Y+6	; 0x06
    594c:	ac 01       	movw	r20, r24
    594e:	4b 54       	subi	r20, 0x4B	; 75
    5950:	5f 4f       	sbci	r21, 0xFF	; 255
    5952:	8d 81       	ldd	r24, Y+5	; 0x05
    5954:	9e 81       	ldd	r25, Y+6	; 0x06
    5956:	9e 01       	movw	r18, r28
    5958:	2d 5f       	subi	r18, 0xFD	; 253
    595a:	3f 4f       	sbci	r19, 0xFF	; 255
    595c:	b9 01       	movw	r22, r18
    595e:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode(msgPtr, LongitudeDegrees);
    5962:	8d 81       	ldd	r24, Y+5	; 0x05
    5964:	9e 81       	ldd	r25, Y+6	; 0x06
    5966:	ac 01       	movw	r20, r24
    5968:	47 54       	subi	r20, 0x47	; 71
    596a:	5f 4f       	sbci	r21, 0xFF	; 255
    596c:	8d 81       	ldd	r24, Y+5	; 0x05
    596e:	9e 81       	ldd	r25, Y+6	; 0x06
    5970:	9e 01       	movw	r18, r28
    5972:	2d 5f       	subi	r18, 0xFD	; 253
    5974:	3f 4f       	sbci	r19, 0xFF	; 255
    5976:	b9 01       	movw	r22, r18
    5978:	0e 94 ac 24 	call	0x4958	; 0x4958 <_ZN10helicopter8messages7Message6encodeERPhRf>
	
	encode (msgPtr, Timeouts);
    597c:	8d 81       	ldd	r24, Y+5	; 0x05
    597e:	9e 81       	ldd	r25, Y+6	; 0x06
    5980:	ac 01       	movw	r20, r24
    5982:	43 54       	subi	r20, 0x43	; 67
    5984:	5f 4f       	sbci	r21, 0xFF	; 255
    5986:	8d 81       	ldd	r24, Y+5	; 0x05
    5988:	9e 81       	ldd	r25, Y+6	; 0x06
    598a:	9e 01       	movw	r18, r28
    598c:	2d 5f       	subi	r18, 0xFD	; 253
    598e:	3f 4f       	sbci	r19, 0xFF	; 255
    5990:	b9 01       	movw	r22, r18
    5992:	0e 94 7e 24 	call	0x48fc	; 0x48fc <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, UnrecognizedMsgTypes);
    5996:	8d 81       	ldd	r24, Y+5	; 0x05
    5998:	9e 81       	ldd	r25, Y+6	; 0x06
    599a:	ac 01       	movw	r20, r24
    599c:	4f 53       	subi	r20, 0x3F	; 63
    599e:	5f 4f       	sbci	r21, 0xFF	; 255
    59a0:	8d 81       	ldd	r24, Y+5	; 0x05
    59a2:	9e 81       	ldd	r25, Y+6	; 0x06
    59a4:	9e 01       	movw	r18, r28
    59a6:	2d 5f       	subi	r18, 0xFD	; 253
    59a8:	3f 4f       	sbci	r19, 0xFF	; 255
    59aa:	b9 01       	movw	r22, r18
    59ac:	0e 94 7e 24 	call	0x48fc	; 0x48fc <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, ChecksumErrors);
    59b0:	8d 81       	ldd	r24, Y+5	; 0x05
    59b2:	9e 81       	ldd	r25, Y+6	; 0x06
    59b4:	ac 01       	movw	r20, r24
    59b6:	4b 53       	subi	r20, 0x3B	; 59
    59b8:	5f 4f       	sbci	r21, 0xFF	; 255
    59ba:	8d 81       	ldd	r24, Y+5	; 0x05
    59bc:	9e 81       	ldd	r25, Y+6	; 0x06
    59be:	9e 01       	movw	r18, r28
    59c0:	2d 5f       	subi	r18, 0xFD	; 253
    59c2:	3f 4f       	sbci	r19, 0xFF	; 255
    59c4:	b9 01       	movw	r22, r18
    59c6:	0e 94 7e 24 	call	0x48fc	; 0x48fc <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, NumOfBlownFrames);
    59ca:	8d 81       	ldd	r24, Y+5	; 0x05
    59cc:	9e 81       	ldd	r25, Y+6	; 0x06
    59ce:	ac 01       	movw	r20, r24
    59d0:	47 53       	subi	r20, 0x37	; 55
    59d2:	5f 4f       	sbci	r21, 0xFF	; 255
    59d4:	8d 81       	ldd	r24, Y+5	; 0x05
    59d6:	9e 81       	ldd	r25, Y+6	; 0x06
    59d8:	9e 01       	movw	r18, r28
    59da:	2d 5f       	subi	r18, 0xFD	; 253
    59dc:	3f 4f       	sbci	r19, 0xFF	; 255
    59de:	b9 01       	movw	r22, r18
    59e0:	0e 94 7e 24 	call	0x48fc	; 0x48fc <_ZN10helicopter8messages7Message6encodeERPhRl>
				
	return msg;
    59e4:	89 81       	ldd	r24, Y+1	; 0x01
    59e6:	9a 81       	ldd	r25, Y+2	; 0x02
}
    59e8:	26 96       	adiw	r28, 0x06	; 6
    59ea:	0f b6       	in	r0, 0x3f	; 63
    59ec:	f8 94       	cli
    59ee:	de bf       	out	0x3e, r29	; 62
    59f0:	0f be       	out	0x3f, r0	; 63
    59f2:	cd bf       	out	0x3d, r28	; 61
    59f4:	df 91       	pop	r29
    59f6:	cf 91       	pop	r28
    59f8:	08 95       	ret

000059fa <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh>:

void SystemTelemetryMessage::buildMessage(byte *message)
{
    59fa:	cf 93       	push	r28
    59fc:	df 93       	push	r29
    59fe:	00 d0       	rcall	.+0      	; 0x5a00 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x6>
    5a00:	1f 92       	push	r1
    5a02:	cd b7       	in	r28, 0x3d	; 61
    5a04:	de b7       	in	r29, 0x3e	; 62
    5a06:	9a 83       	std	Y+2, r25	; 0x02
    5a08:	89 83       	std	Y+1, r24	; 0x01
    5a0a:	7c 83       	std	Y+4, r23	; 0x04
    5a0c:	6b 83       	std	Y+3, r22	; 0x03
	if (message != NULL)
    5a0e:	8b 81       	ldd	r24, Y+3	; 0x03
    5a10:	9c 81       	ldd	r25, Y+4	; 0x04
    5a12:	00 97       	sbiw	r24, 0x00	; 0
    5a14:	09 f4       	brne	.+2      	; 0x5a18 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x1e>
    5a16:	97 c2       	rjmp	.+1326   	; 0x5f46 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x54c>
	{
		decode (message,msgType);
    5a18:	89 81       	ldd	r24, Y+1	; 0x01
    5a1a:	9a 81       	ldd	r25, Y+2	; 0x02
    5a1c:	ac 01       	movw	r20, r24
    5a1e:	4e 5f       	subi	r20, 0xFE	; 254
    5a20:	5f 4f       	sbci	r21, 0xFF	; 255
    5a22:	89 81       	ldd	r24, Y+1	; 0x01
    5a24:	9a 81       	ldd	r25, Y+2	; 0x02
    5a26:	9e 01       	movw	r18, r28
    5a28:	2d 5f       	subi	r18, 0xFD	; 253
    5a2a:	3f 4f       	sbci	r19, 0xFF	; 255
    5a2c:	b9 01       	movw	r22, r18
    5a2e:	0e 94 07 25 	call	0x4a0e	; 0x4a0e <_ZN10helicopter8messages7Message6decodeERPhRh>
		decode (message,MagYaw);
    5a32:	89 81       	ldd	r24, Y+1	; 0x01
    5a34:	9a 81       	ldd	r25, Y+2	; 0x02
    5a36:	ac 01       	movw	r20, r24
    5a38:	4b 5f       	subi	r20, 0xFB	; 251
    5a3a:	5f 4f       	sbci	r21, 0xFF	; 255
    5a3c:	89 81       	ldd	r24, Y+1	; 0x01
    5a3e:	9a 81       	ldd	r25, Y+2	; 0x02
    5a40:	9e 01       	movw	r18, r28
    5a42:	2d 5f       	subi	r18, 0xFD	; 253
    5a44:	3f 4f       	sbci	r19, 0xFF	; 255
    5a46:	b9 01       	movw	r22, r18
    5a48:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawVelocityDegreesPerSecond);
    5a4c:	89 81       	ldd	r24, Y+1	; 0x01
    5a4e:	9a 81       	ldd	r25, Y+2	; 0x02
    5a50:	ac 01       	movw	r20, r24
    5a52:	47 5f       	subi	r20, 0xF7	; 247
    5a54:	5f 4f       	sbci	r21, 0xFF	; 255
    5a56:	89 81       	ldd	r24, Y+1	; 0x01
    5a58:	9a 81       	ldd	r25, Y+2	; 0x02
    5a5a:	9e 01       	movw	r18, r28
    5a5c:	2d 5f       	subi	r18, 0xFD	; 253
    5a5e:	3f 4f       	sbci	r19, 0xFF	; 255
    5a60:	b9 01       	movw	r22, r18
    5a62:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawIntegral);
    5a66:	89 81       	ldd	r24, Y+1	; 0x01
    5a68:	9a 81       	ldd	r25, Y+2	; 0x02
    5a6a:	ac 01       	movw	r20, r24
    5a6c:	43 5f       	subi	r20, 0xF3	; 243
    5a6e:	5f 4f       	sbci	r21, 0xFF	; 255
    5a70:	89 81       	ldd	r24, Y+1	; 0x01
    5a72:	9a 81       	ldd	r25, Y+2	; 0x02
    5a74:	9e 01       	movw	r18, r28
    5a76:	2d 5f       	subi	r18, 0xFD	; 253
    5a78:	3f 4f       	sbci	r19, 0xFF	; 255
    5a7a:	b9 01       	movw	r22, r18
    5a7c:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawProportional);
    5a80:	89 81       	ldd	r24, Y+1	; 0x01
    5a82:	9a 81       	ldd	r25, Y+2	; 0x02
    5a84:	ac 01       	movw	r20, r24
    5a86:	4f 5e       	subi	r20, 0xEF	; 239
    5a88:	5f 4f       	sbci	r21, 0xFF	; 255
    5a8a:	89 81       	ldd	r24, Y+1	; 0x01
    5a8c:	9a 81       	ldd	r25, Y+2	; 0x02
    5a8e:	9e 01       	movw	r18, r28
    5a90:	2d 5f       	subi	r18, 0xFD	; 253
    5a92:	3f 4f       	sbci	r19, 0xFF	; 255
    5a94:	b9 01       	movw	r22, r18
    5a96:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawDerivativeError);	
    5a9a:	89 81       	ldd	r24, Y+1	; 0x01
    5a9c:	9a 81       	ldd	r25, Y+2	; 0x02
    5a9e:	ac 01       	movw	r20, r24
    5aa0:	4b 5e       	subi	r20, 0xEB	; 235
    5aa2:	5f 4f       	sbci	r21, 0xFF	; 255
    5aa4:	89 81       	ldd	r24, Y+1	; 0x01
    5aa6:	9a 81       	ldd	r25, Y+2	; 0x02
    5aa8:	9e 01       	movw	r18, r28
    5aaa:	2d 5f       	subi	r18, 0xFD	; 253
    5aac:	3f 4f       	sbci	r19, 0xFF	; 255
    5aae:	b9 01       	movw	r22, r18
    5ab0:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawControl);	
    5ab4:	89 81       	ldd	r24, Y+1	; 0x01
    5ab6:	9a 81       	ldd	r25, Y+2	; 0x02
    5ab8:	ac 01       	movw	r20, r24
    5aba:	47 5e       	subi	r20, 0xE7	; 231
    5abc:	5f 4f       	sbci	r21, 0xFF	; 255
    5abe:	89 81       	ldd	r24, Y+1	; 0x01
    5ac0:	9a 81       	ldd	r25, Y+2	; 0x02
    5ac2:	9e 01       	movw	r18, r28
    5ac4:	2d 5f       	subi	r18, 0xFD	; 253
    5ac6:	3f 4f       	sbci	r19, 0xFF	; 255
    5ac8:	b9 01       	movw	r22, r18
    5aca:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawIntegralGain);
    5ace:	89 81       	ldd	r24, Y+1	; 0x01
    5ad0:	9a 81       	ldd	r25, Y+2	; 0x02
    5ad2:	ac 01       	movw	r20, r24
    5ad4:	43 5e       	subi	r20, 0xE3	; 227
    5ad6:	5f 4f       	sbci	r21, 0xFF	; 255
    5ad8:	89 81       	ldd	r24, Y+1	; 0x01
    5ada:	9a 81       	ldd	r25, Y+2	; 0x02
    5adc:	9e 01       	movw	r18, r28
    5ade:	2d 5f       	subi	r18, 0xFD	; 253
    5ae0:	3f 4f       	sbci	r19, 0xFF	; 255
    5ae2:	b9 01       	movw	r22, r18
    5ae4:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawDerivativeGain);
    5ae8:	89 81       	ldd	r24, Y+1	; 0x01
    5aea:	9a 81       	ldd	r25, Y+2	; 0x02
    5aec:	ac 01       	movw	r20, r24
    5aee:	4f 5d       	subi	r20, 0xDF	; 223
    5af0:	5f 4f       	sbci	r21, 0xFF	; 255
    5af2:	89 81       	ldd	r24, Y+1	; 0x01
    5af4:	9a 81       	ldd	r25, Y+2	; 0x02
    5af6:	9e 01       	movw	r18, r28
    5af8:	2d 5f       	subi	r18, 0xFD	; 253
    5afa:	3f 4f       	sbci	r19, 0xFF	; 255
    5afc:	b9 01       	movw	r22, r18
    5afe:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawProportionalGain);
    5b02:	89 81       	ldd	r24, Y+1	; 0x01
    5b04:	9a 81       	ldd	r25, Y+2	; 0x02
    5b06:	ac 01       	movw	r20, r24
    5b08:	4b 5d       	subi	r20, 0xDB	; 219
    5b0a:	5f 4f       	sbci	r21, 0xFF	; 255
    5b0c:	89 81       	ldd	r24, Y+1	; 0x01
    5b0e:	9a 81       	ldd	r25, Y+2	; 0x02
    5b10:	9e 01       	movw	r18, r28
    5b12:	2d 5f       	subi	r18, 0xFD	; 253
    5b14:	3f 4f       	sbci	r19, 0xFF	; 255
    5b16:	b9 01       	movw	r22, r18
    5b18:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawAntiWindupGain);
    5b1c:	89 81       	ldd	r24, Y+1	; 0x01
    5b1e:	9a 81       	ldd	r25, Y+2	; 0x02
    5b20:	ac 01       	movw	r20, r24
    5b22:	47 5d       	subi	r20, 0xD7	; 215
    5b24:	5f 4f       	sbci	r21, 0xFF	; 255
    5b26:	89 81       	ldd	r24, Y+1	; 0x01
    5b28:	9a 81       	ldd	r25, Y+2	; 0x02
    5b2a:	9e 01       	movw	r18, r28
    5b2c:	2d 5f       	subi	r18, 0xFD	; 253
    5b2e:	3f 4f       	sbci	r19, 0xFF	; 255
    5b30:	b9 01       	movw	r22, r18
    5b32:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		
		
		

		decode (message, XNEDBodyFrame);
    5b36:	89 81       	ldd	r24, Y+1	; 0x01
    5b38:	9a 81       	ldd	r25, Y+2	; 0x02
    5b3a:	ac 01       	movw	r20, r24
    5b3c:	43 5d       	subi	r20, 0xD3	; 211
    5b3e:	5f 4f       	sbci	r21, 0xFF	; 255
    5b40:	89 81       	ldd	r24, Y+1	; 0x01
    5b42:	9a 81       	ldd	r25, Y+2	; 0x02
    5b44:	9e 01       	movw	r18, r28
    5b46:	2d 5f       	subi	r18, 0xFD	; 253
    5b48:	3f 4f       	sbci	r19, 0xFF	; 255
    5b4a:	b9 01       	movw	r22, r18
    5b4c:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XVelocityMetersPerSecond);
    5b50:	89 81       	ldd	r24, Y+1	; 0x01
    5b52:	9a 81       	ldd	r25, Y+2	; 0x02
    5b54:	ac 01       	movw	r20, r24
    5b56:	4f 5c       	subi	r20, 0xCF	; 207
    5b58:	5f 4f       	sbci	r21, 0xFF	; 255
    5b5a:	89 81       	ldd	r24, Y+1	; 0x01
    5b5c:	9a 81       	ldd	r25, Y+2	; 0x02
    5b5e:	9e 01       	movw	r18, r28
    5b60:	2d 5f       	subi	r18, 0xFD	; 253
    5b62:	3f 4f       	sbci	r19, 0xFF	; 255
    5b64:	b9 01       	movw	r22, r18
    5b66:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ThetaPitchDegrees);
    5b6a:	89 81       	ldd	r24, Y+1	; 0x01
    5b6c:	9a 81       	ldd	r25, Y+2	; 0x02
    5b6e:	ac 01       	movw	r20, r24
    5b70:	4b 5c       	subi	r20, 0xCB	; 203
    5b72:	5f 4f       	sbci	r21, 0xFF	; 255
    5b74:	89 81       	ldd	r24, Y+1	; 0x01
    5b76:	9a 81       	ldd	r25, Y+2	; 0x02
    5b78:	9e 01       	movw	r18, r28
    5b7a:	2d 5f       	subi	r18, 0xFD	; 253
    5b7c:	3f 4f       	sbci	r19, 0xFF	; 255
    5b7e:	b9 01       	movw	r22, r18
    5b80:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XIntegral);
    5b84:	89 81       	ldd	r24, Y+1	; 0x01
    5b86:	9a 81       	ldd	r25, Y+2	; 0x02
    5b88:	ac 01       	movw	r20, r24
    5b8a:	47 5c       	subi	r20, 0xC7	; 199
    5b8c:	5f 4f       	sbci	r21, 0xFF	; 255
    5b8e:	89 81       	ldd	r24, Y+1	; 0x01
    5b90:	9a 81       	ldd	r25, Y+2	; 0x02
    5b92:	9e 01       	movw	r18, r28
    5b94:	2d 5f       	subi	r18, 0xFD	; 253
    5b96:	3f 4f       	sbci	r19, 0xFF	; 255
    5b98:	b9 01       	movw	r22, r18
    5b9a:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XProportional);
    5b9e:	89 81       	ldd	r24, Y+1	; 0x01
    5ba0:	9a 81       	ldd	r25, Y+2	; 0x02
    5ba2:	ac 01       	movw	r20, r24
    5ba4:	43 5c       	subi	r20, 0xC3	; 195
    5ba6:	5f 4f       	sbci	r21, 0xFF	; 255
    5ba8:	89 81       	ldd	r24, Y+1	; 0x01
    5baa:	9a 81       	ldd	r25, Y+2	; 0x02
    5bac:	9e 01       	movw	r18, r28
    5bae:	2d 5f       	subi	r18, 0xFD	; 253
    5bb0:	3f 4f       	sbci	r19, 0xFF	; 255
    5bb2:	b9 01       	movw	r22, r18
    5bb4:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XDerivativeError);
    5bb8:	89 81       	ldd	r24, Y+1	; 0x01
    5bba:	9a 81       	ldd	r25, Y+2	; 0x02
    5bbc:	ac 01       	movw	r20, r24
    5bbe:	4f 5b       	subi	r20, 0xBF	; 191
    5bc0:	5f 4f       	sbci	r21, 0xFF	; 255
    5bc2:	89 81       	ldd	r24, Y+1	; 0x01
    5bc4:	9a 81       	ldd	r25, Y+2	; 0x02
    5bc6:	9e 01       	movw	r18, r28
    5bc8:	2d 5f       	subi	r18, 0xFD	; 253
    5bca:	3f 4f       	sbci	r19, 0xFF	; 255
    5bcc:	b9 01       	movw	r22, r18
    5bce:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LongitudeControl);
    5bd2:	89 81       	ldd	r24, Y+1	; 0x01
    5bd4:	9a 81       	ldd	r25, Y+2	; 0x02
    5bd6:	ac 01       	movw	r20, r24
    5bd8:	4b 5b       	subi	r20, 0xBB	; 187
    5bda:	5f 4f       	sbci	r21, 0xFF	; 255
    5bdc:	89 81       	ldd	r24, Y+1	; 0x01
    5bde:	9a 81       	ldd	r25, Y+2	; 0x02
    5be0:	9e 01       	movw	r18, r28
    5be2:	2d 5f       	subi	r18, 0xFD	; 253
    5be4:	3f 4f       	sbci	r19, 0xFF	; 255
    5be6:	b9 01       	movw	r22, r18
    5be8:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XIntegralGain);
    5bec:	89 81       	ldd	r24, Y+1	; 0x01
    5bee:	9a 81       	ldd	r25, Y+2	; 0x02
    5bf0:	ac 01       	movw	r20, r24
    5bf2:	47 5b       	subi	r20, 0xB7	; 183
    5bf4:	5f 4f       	sbci	r21, 0xFF	; 255
    5bf6:	89 81       	ldd	r24, Y+1	; 0x01
    5bf8:	9a 81       	ldd	r25, Y+2	; 0x02
    5bfa:	9e 01       	movw	r18, r28
    5bfc:	2d 5f       	subi	r18, 0xFD	; 253
    5bfe:	3f 4f       	sbci	r19, 0xFF	; 255
    5c00:	b9 01       	movw	r22, r18
    5c02:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XDerivativeGain);
    5c06:	89 81       	ldd	r24, Y+1	; 0x01
    5c08:	9a 81       	ldd	r25, Y+2	; 0x02
    5c0a:	ac 01       	movw	r20, r24
    5c0c:	43 5b       	subi	r20, 0xB3	; 179
    5c0e:	5f 4f       	sbci	r21, 0xFF	; 255
    5c10:	89 81       	ldd	r24, Y+1	; 0x01
    5c12:	9a 81       	ldd	r25, Y+2	; 0x02
    5c14:	9e 01       	movw	r18, r28
    5c16:	2d 5f       	subi	r18, 0xFD	; 253
    5c18:	3f 4f       	sbci	r19, 0xFF	; 255
    5c1a:	b9 01       	movw	r22, r18
    5c1c:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XProportionalGain);
    5c20:	89 81       	ldd	r24, Y+1	; 0x01
    5c22:	9a 81       	ldd	r25, Y+2	; 0x02
    5c24:	ac 01       	movw	r20, r24
    5c26:	4f 5a       	subi	r20, 0xAF	; 175
    5c28:	5f 4f       	sbci	r21, 0xFF	; 255
    5c2a:	89 81       	ldd	r24, Y+1	; 0x01
    5c2c:	9a 81       	ldd	r25, Y+2	; 0x02
    5c2e:	9e 01       	movw	r18, r28
    5c30:	2d 5f       	subi	r18, 0xFD	; 253
    5c32:	3f 4f       	sbci	r19, 0xFF	; 255
    5c34:	b9 01       	movw	r22, r18
    5c36:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XAntiWindupGain);
    5c3a:	89 81       	ldd	r24, Y+1	; 0x01
    5c3c:	9a 81       	ldd	r25, Y+2	; 0x02
    5c3e:	ac 01       	movw	r20, r24
    5c40:	4b 5a       	subi	r20, 0xAB	; 171
    5c42:	5f 4f       	sbci	r21, 0xFF	; 255
    5c44:	89 81       	ldd	r24, Y+1	; 0x01
    5c46:	9a 81       	ldd	r25, Y+2	; 0x02
    5c48:	9e 01       	movw	r18, r28
    5c4a:	2d 5f       	subi	r18, 0xFD	; 253
    5c4c:	3f 4f       	sbci	r19, 0xFF	; 255
    5c4e:	b9 01       	movw	r22, r18
    5c50:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LongitudeInnerLoopGain);
    5c54:	89 81       	ldd	r24, Y+1	; 0x01
    5c56:	9a 81       	ldd	r25, Y+2	; 0x02
    5c58:	ac 01       	movw	r20, r24
    5c5a:	47 5a       	subi	r20, 0xA7	; 167
    5c5c:	5f 4f       	sbci	r21, 0xFF	; 255
    5c5e:	89 81       	ldd	r24, Y+1	; 0x01
    5c60:	9a 81       	ldd	r25, Y+2	; 0x02
    5c62:	9e 01       	movw	r18, r28
    5c64:	2d 5f       	subi	r18, 0xFD	; 253
    5c66:	3f 4f       	sbci	r19, 0xFF	; 255
    5c68:	b9 01       	movw	r22, r18
    5c6a:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>

		decode (message, YNEDBodyFrame);
    5c6e:	89 81       	ldd	r24, Y+1	; 0x01
    5c70:	9a 81       	ldd	r25, Y+2	; 0x02
    5c72:	ac 01       	movw	r20, r24
    5c74:	43 5a       	subi	r20, 0xA3	; 163
    5c76:	5f 4f       	sbci	r21, 0xFF	; 255
    5c78:	89 81       	ldd	r24, Y+1	; 0x01
    5c7a:	9a 81       	ldd	r25, Y+2	; 0x02
    5c7c:	9e 01       	movw	r18, r28
    5c7e:	2d 5f       	subi	r18, 0xFD	; 253
    5c80:	3f 4f       	sbci	r19, 0xFF	; 255
    5c82:	b9 01       	movw	r22, r18
    5c84:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YVelocityMetersPerSecond);
    5c88:	89 81       	ldd	r24, Y+1	; 0x01
    5c8a:	9a 81       	ldd	r25, Y+2	; 0x02
    5c8c:	ac 01       	movw	r20, r24
    5c8e:	4f 59       	subi	r20, 0x9F	; 159
    5c90:	5f 4f       	sbci	r21, 0xFF	; 255
    5c92:	89 81       	ldd	r24, Y+1	; 0x01
    5c94:	9a 81       	ldd	r25, Y+2	; 0x02
    5c96:	9e 01       	movw	r18, r28
    5c98:	2d 5f       	subi	r18, 0xFD	; 253
    5c9a:	3f 4f       	sbci	r19, 0xFF	; 255
    5c9c:	b9 01       	movw	r22, r18
    5c9e:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, PhiRollDegrees);
    5ca2:	89 81       	ldd	r24, Y+1	; 0x01
    5ca4:	9a 81       	ldd	r25, Y+2	; 0x02
    5ca6:	ac 01       	movw	r20, r24
    5ca8:	4b 59       	subi	r20, 0x9B	; 155
    5caa:	5f 4f       	sbci	r21, 0xFF	; 255
    5cac:	89 81       	ldd	r24, Y+1	; 0x01
    5cae:	9a 81       	ldd	r25, Y+2	; 0x02
    5cb0:	9e 01       	movw	r18, r28
    5cb2:	2d 5f       	subi	r18, 0xFD	; 253
    5cb4:	3f 4f       	sbci	r19, 0xFF	; 255
    5cb6:	b9 01       	movw	r22, r18
    5cb8:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YIntegral);
    5cbc:	89 81       	ldd	r24, Y+1	; 0x01
    5cbe:	9a 81       	ldd	r25, Y+2	; 0x02
    5cc0:	ac 01       	movw	r20, r24
    5cc2:	47 59       	subi	r20, 0x97	; 151
    5cc4:	5f 4f       	sbci	r21, 0xFF	; 255
    5cc6:	89 81       	ldd	r24, Y+1	; 0x01
    5cc8:	9a 81       	ldd	r25, Y+2	; 0x02
    5cca:	9e 01       	movw	r18, r28
    5ccc:	2d 5f       	subi	r18, 0xFD	; 253
    5cce:	3f 4f       	sbci	r19, 0xFF	; 255
    5cd0:	b9 01       	movw	r22, r18
    5cd2:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YProportional);
    5cd6:	89 81       	ldd	r24, Y+1	; 0x01
    5cd8:	9a 81       	ldd	r25, Y+2	; 0x02
    5cda:	ac 01       	movw	r20, r24
    5cdc:	43 59       	subi	r20, 0x93	; 147
    5cde:	5f 4f       	sbci	r21, 0xFF	; 255
    5ce0:	89 81       	ldd	r24, Y+1	; 0x01
    5ce2:	9a 81       	ldd	r25, Y+2	; 0x02
    5ce4:	9e 01       	movw	r18, r28
    5ce6:	2d 5f       	subi	r18, 0xFD	; 253
    5ce8:	3f 4f       	sbci	r19, 0xFF	; 255
    5cea:	b9 01       	movw	r22, r18
    5cec:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YDerivativeError);
    5cf0:	89 81       	ldd	r24, Y+1	; 0x01
    5cf2:	9a 81       	ldd	r25, Y+2	; 0x02
    5cf4:	ac 01       	movw	r20, r24
    5cf6:	4f 58       	subi	r20, 0x8F	; 143
    5cf8:	5f 4f       	sbci	r21, 0xFF	; 255
    5cfa:	89 81       	ldd	r24, Y+1	; 0x01
    5cfc:	9a 81       	ldd	r25, Y+2	; 0x02
    5cfe:	9e 01       	movw	r18, r28
    5d00:	2d 5f       	subi	r18, 0xFD	; 253
    5d02:	3f 4f       	sbci	r19, 0xFF	; 255
    5d04:	b9 01       	movw	r22, r18
    5d06:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LateralControl);
    5d0a:	89 81       	ldd	r24, Y+1	; 0x01
    5d0c:	9a 81       	ldd	r25, Y+2	; 0x02
    5d0e:	ac 01       	movw	r20, r24
    5d10:	4b 58       	subi	r20, 0x8B	; 139
    5d12:	5f 4f       	sbci	r21, 0xFF	; 255
    5d14:	89 81       	ldd	r24, Y+1	; 0x01
    5d16:	9a 81       	ldd	r25, Y+2	; 0x02
    5d18:	9e 01       	movw	r18, r28
    5d1a:	2d 5f       	subi	r18, 0xFD	; 253
    5d1c:	3f 4f       	sbci	r19, 0xFF	; 255
    5d1e:	b9 01       	movw	r22, r18
    5d20:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YIntegralGain);
    5d24:	89 81       	ldd	r24, Y+1	; 0x01
    5d26:	9a 81       	ldd	r25, Y+2	; 0x02
    5d28:	ac 01       	movw	r20, r24
    5d2a:	47 58       	subi	r20, 0x87	; 135
    5d2c:	5f 4f       	sbci	r21, 0xFF	; 255
    5d2e:	89 81       	ldd	r24, Y+1	; 0x01
    5d30:	9a 81       	ldd	r25, Y+2	; 0x02
    5d32:	9e 01       	movw	r18, r28
    5d34:	2d 5f       	subi	r18, 0xFD	; 253
    5d36:	3f 4f       	sbci	r19, 0xFF	; 255
    5d38:	b9 01       	movw	r22, r18
    5d3a:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YDerivativeGain);
    5d3e:	89 81       	ldd	r24, Y+1	; 0x01
    5d40:	9a 81       	ldd	r25, Y+2	; 0x02
    5d42:	ac 01       	movw	r20, r24
    5d44:	43 58       	subi	r20, 0x83	; 131
    5d46:	5f 4f       	sbci	r21, 0xFF	; 255
    5d48:	89 81       	ldd	r24, Y+1	; 0x01
    5d4a:	9a 81       	ldd	r25, Y+2	; 0x02
    5d4c:	9e 01       	movw	r18, r28
    5d4e:	2d 5f       	subi	r18, 0xFD	; 253
    5d50:	3f 4f       	sbci	r19, 0xFF	; 255
    5d52:	b9 01       	movw	r22, r18
    5d54:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YProportionalGain);
    5d58:	89 81       	ldd	r24, Y+1	; 0x01
    5d5a:	9a 81       	ldd	r25, Y+2	; 0x02
    5d5c:	ac 01       	movw	r20, r24
    5d5e:	4f 57       	subi	r20, 0x7F	; 127
    5d60:	5f 4f       	sbci	r21, 0xFF	; 255
    5d62:	89 81       	ldd	r24, Y+1	; 0x01
    5d64:	9a 81       	ldd	r25, Y+2	; 0x02
    5d66:	9e 01       	movw	r18, r28
    5d68:	2d 5f       	subi	r18, 0xFD	; 253
    5d6a:	3f 4f       	sbci	r19, 0xFF	; 255
    5d6c:	b9 01       	movw	r22, r18
    5d6e:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YAntiWindupGain);
    5d72:	89 81       	ldd	r24, Y+1	; 0x01
    5d74:	9a 81       	ldd	r25, Y+2	; 0x02
    5d76:	ac 01       	movw	r20, r24
    5d78:	4b 57       	subi	r20, 0x7B	; 123
    5d7a:	5f 4f       	sbci	r21, 0xFF	; 255
    5d7c:	89 81       	ldd	r24, Y+1	; 0x01
    5d7e:	9a 81       	ldd	r25, Y+2	; 0x02
    5d80:	9e 01       	movw	r18, r28
    5d82:	2d 5f       	subi	r18, 0xFD	; 253
    5d84:	3f 4f       	sbci	r19, 0xFF	; 255
    5d86:	b9 01       	movw	r22, r18
    5d88:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LateralInnerLoopGain);
    5d8c:	89 81       	ldd	r24, Y+1	; 0x01
    5d8e:	9a 81       	ldd	r25, Y+2	; 0x02
    5d90:	ac 01       	movw	r20, r24
    5d92:	47 57       	subi	r20, 0x77	; 119
    5d94:	5f 4f       	sbci	r21, 0xFF	; 255
    5d96:	89 81       	ldd	r24, Y+1	; 0x01
    5d98:	9a 81       	ldd	r25, Y+2	; 0x02
    5d9a:	9e 01       	movw	r18, r28
    5d9c:	2d 5f       	subi	r18, 0xFD	; 253
    5d9e:	3f 4f       	sbci	r19, 0xFF	; 255
    5da0:	b9 01       	movw	r22, r18
    5da2:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>

		decode (message, AltitudeFeetAgl);
    5da6:	89 81       	ldd	r24, Y+1	; 0x01
    5da8:	9a 81       	ldd	r25, Y+2	; 0x02
    5daa:	ac 01       	movw	r20, r24
    5dac:	43 57       	subi	r20, 0x73	; 115
    5dae:	5f 4f       	sbci	r21, 0xFF	; 255
    5db0:	89 81       	ldd	r24, Y+1	; 0x01
    5db2:	9a 81       	ldd	r25, Y+2	; 0x02
    5db4:	9e 01       	movw	r18, r28
    5db6:	2d 5f       	subi	r18, 0xFD	; 253
    5db8:	3f 4f       	sbci	r19, 0xFF	; 255
    5dba:	b9 01       	movw	r22, r18
    5dbc:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZVelocityMetersPerSecond);
    5dc0:	89 81       	ldd	r24, Y+1	; 0x01
    5dc2:	9a 81       	ldd	r25, Y+2	; 0x02
    5dc4:	ac 01       	movw	r20, r24
    5dc6:	4f 56       	subi	r20, 0x6F	; 111
    5dc8:	5f 4f       	sbci	r21, 0xFF	; 255
    5dca:	89 81       	ldd	r24, Y+1	; 0x01
    5dcc:	9a 81       	ldd	r25, Y+2	; 0x02
    5dce:	9e 01       	movw	r18, r28
    5dd0:	2d 5f       	subi	r18, 0xFD	; 253
    5dd2:	3f 4f       	sbci	r19, 0xFF	; 255
    5dd4:	b9 01       	movw	r22, r18
    5dd6:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZIntegral);
    5dda:	89 81       	ldd	r24, Y+1	; 0x01
    5ddc:	9a 81       	ldd	r25, Y+2	; 0x02
    5dde:	ac 01       	movw	r20, r24
    5de0:	4b 56       	subi	r20, 0x6B	; 107
    5de2:	5f 4f       	sbci	r21, 0xFF	; 255
    5de4:	89 81       	ldd	r24, Y+1	; 0x01
    5de6:	9a 81       	ldd	r25, Y+2	; 0x02
    5de8:	9e 01       	movw	r18, r28
    5dea:	2d 5f       	subi	r18, 0xFD	; 253
    5dec:	3f 4f       	sbci	r19, 0xFF	; 255
    5dee:	b9 01       	movw	r22, r18
    5df0:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZProportional);
    5df4:	89 81       	ldd	r24, Y+1	; 0x01
    5df6:	9a 81       	ldd	r25, Y+2	; 0x02
    5df8:	ac 01       	movw	r20, r24
    5dfa:	47 56       	subi	r20, 0x67	; 103
    5dfc:	5f 4f       	sbci	r21, 0xFF	; 255
    5dfe:	89 81       	ldd	r24, Y+1	; 0x01
    5e00:	9a 81       	ldd	r25, Y+2	; 0x02
    5e02:	9e 01       	movw	r18, r28
    5e04:	2d 5f       	subi	r18, 0xFD	; 253
    5e06:	3f 4f       	sbci	r19, 0xFF	; 255
    5e08:	b9 01       	movw	r22, r18
    5e0a:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZDerivativeError);
    5e0e:	89 81       	ldd	r24, Y+1	; 0x01
    5e10:	9a 81       	ldd	r25, Y+2	; 0x02
    5e12:	ac 01       	movw	r20, r24
    5e14:	43 56       	subi	r20, 0x63	; 99
    5e16:	5f 4f       	sbci	r21, 0xFF	; 255
    5e18:	89 81       	ldd	r24, Y+1	; 0x01
    5e1a:	9a 81       	ldd	r25, Y+2	; 0x02
    5e1c:	9e 01       	movw	r18, r28
    5e1e:	2d 5f       	subi	r18, 0xFD	; 253
    5e20:	3f 4f       	sbci	r19, 0xFF	; 255
    5e22:	b9 01       	movw	r22, r18
    5e24:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, MainRotorCollectiveControl);
    5e28:	89 81       	ldd	r24, Y+1	; 0x01
    5e2a:	9a 81       	ldd	r25, Y+2	; 0x02
    5e2c:	ac 01       	movw	r20, r24
    5e2e:	4f 55       	subi	r20, 0x5F	; 95
    5e30:	5f 4f       	sbci	r21, 0xFF	; 255
    5e32:	89 81       	ldd	r24, Y+1	; 0x01
    5e34:	9a 81       	ldd	r25, Y+2	; 0x02
    5e36:	9e 01       	movw	r18, r28
    5e38:	2d 5f       	subi	r18, 0xFD	; 253
    5e3a:	3f 4f       	sbci	r19, 0xFF	; 255
    5e3c:	b9 01       	movw	r22, r18
    5e3e:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZIntegralGain);
    5e42:	89 81       	ldd	r24, Y+1	; 0x01
    5e44:	9a 81       	ldd	r25, Y+2	; 0x02
    5e46:	ac 01       	movw	r20, r24
    5e48:	4b 55       	subi	r20, 0x5B	; 91
    5e4a:	5f 4f       	sbci	r21, 0xFF	; 255
    5e4c:	89 81       	ldd	r24, Y+1	; 0x01
    5e4e:	9a 81       	ldd	r25, Y+2	; 0x02
    5e50:	9e 01       	movw	r18, r28
    5e52:	2d 5f       	subi	r18, 0xFD	; 253
    5e54:	3f 4f       	sbci	r19, 0xFF	; 255
    5e56:	b9 01       	movw	r22, r18
    5e58:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZDerivativeGain);
    5e5c:	89 81       	ldd	r24, Y+1	; 0x01
    5e5e:	9a 81       	ldd	r25, Y+2	; 0x02
    5e60:	ac 01       	movw	r20, r24
    5e62:	47 55       	subi	r20, 0x57	; 87
    5e64:	5f 4f       	sbci	r21, 0xFF	; 255
    5e66:	89 81       	ldd	r24, Y+1	; 0x01
    5e68:	9a 81       	ldd	r25, Y+2	; 0x02
    5e6a:	9e 01       	movw	r18, r28
    5e6c:	2d 5f       	subi	r18, 0xFD	; 253
    5e6e:	3f 4f       	sbci	r19, 0xFF	; 255
    5e70:	b9 01       	movw	r22, r18
    5e72:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZProportionalGain);
    5e76:	89 81       	ldd	r24, Y+1	; 0x01
    5e78:	9a 81       	ldd	r25, Y+2	; 0x02
    5e7a:	ac 01       	movw	r20, r24
    5e7c:	43 55       	subi	r20, 0x53	; 83
    5e7e:	5f 4f       	sbci	r21, 0xFF	; 255
    5e80:	89 81       	ldd	r24, Y+1	; 0x01
    5e82:	9a 81       	ldd	r25, Y+2	; 0x02
    5e84:	9e 01       	movw	r18, r28
    5e86:	2d 5f       	subi	r18, 0xFD	; 253
    5e88:	3f 4f       	sbci	r19, 0xFF	; 255
    5e8a:	b9 01       	movw	r22, r18
    5e8c:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZAntiWindupGain);
    5e90:	89 81       	ldd	r24, Y+1	; 0x01
    5e92:	9a 81       	ldd	r25, Y+2	; 0x02
    5e94:	ac 01       	movw	r20, r24
    5e96:	4f 54       	subi	r20, 0x4F	; 79
    5e98:	5f 4f       	sbci	r21, 0xFF	; 255
    5e9a:	89 81       	ldd	r24, Y+1	; 0x01
    5e9c:	9a 81       	ldd	r25, Y+2	; 0x02
    5e9e:	9e 01       	movw	r18, r28
    5ea0:	2d 5f       	subi	r18, 0xFD	; 253
    5ea2:	3f 4f       	sbci	r19, 0xFF	; 255
    5ea4:	b9 01       	movw	r22, r18
    5ea6:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		
	
		decode (message, LatitudeDegrees);
    5eaa:	89 81       	ldd	r24, Y+1	; 0x01
    5eac:	9a 81       	ldd	r25, Y+2	; 0x02
    5eae:	ac 01       	movw	r20, r24
    5eb0:	4b 54       	subi	r20, 0x4B	; 75
    5eb2:	5f 4f       	sbci	r21, 0xFF	; 255
    5eb4:	89 81       	ldd	r24, Y+1	; 0x01
    5eb6:	9a 81       	ldd	r25, Y+2	; 0x02
    5eb8:	9e 01       	movw	r18, r28
    5eba:	2d 5f       	subi	r18, 0xFD	; 253
    5ebc:	3f 4f       	sbci	r19, 0xFF	; 255
    5ebe:	b9 01       	movw	r22, r18
    5ec0:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LongitudeDegrees);
    5ec4:	89 81       	ldd	r24, Y+1	; 0x01
    5ec6:	9a 81       	ldd	r25, Y+2	; 0x02
    5ec8:	ac 01       	movw	r20, r24
    5eca:	47 54       	subi	r20, 0x47	; 71
    5ecc:	5f 4f       	sbci	r21, 0xFF	; 255
    5ece:	89 81       	ldd	r24, Y+1	; 0x01
    5ed0:	9a 81       	ldd	r25, Y+2	; 0x02
    5ed2:	9e 01       	movw	r18, r28
    5ed4:	2d 5f       	subi	r18, 0xFD	; 253
    5ed6:	3f 4f       	sbci	r19, 0xFF	; 255
    5ed8:	b9 01       	movw	r22, r18
    5eda:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN10helicopter8messages7Message6decodeERPhRf>
						
		decode (message,Timeouts);
    5ede:	89 81       	ldd	r24, Y+1	; 0x01
    5ee0:	9a 81       	ldd	r25, Y+2	; 0x02
    5ee2:	ac 01       	movw	r20, r24
    5ee4:	43 54       	subi	r20, 0x43	; 67
    5ee6:	5f 4f       	sbci	r21, 0xFF	; 255
    5ee8:	89 81       	ldd	r24, Y+1	; 0x01
    5eea:	9a 81       	ldd	r25, Y+2	; 0x02
    5eec:	9e 01       	movw	r18, r28
    5eee:	2d 5f       	subi	r18, 0xFD	; 253
    5ef0:	3f 4f       	sbci	r19, 0xFF	; 255
    5ef2:	b9 01       	movw	r22, r18
    5ef4:	0e 94 34 25 	call	0x4a68	; 0x4a68 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message,UnrecognizedMsgTypes);
    5ef8:	89 81       	ldd	r24, Y+1	; 0x01
    5efa:	9a 81       	ldd	r25, Y+2	; 0x02
    5efc:	ac 01       	movw	r20, r24
    5efe:	4f 53       	subi	r20, 0x3F	; 63
    5f00:	5f 4f       	sbci	r21, 0xFF	; 255
    5f02:	89 81       	ldd	r24, Y+1	; 0x01
    5f04:	9a 81       	ldd	r25, Y+2	; 0x02
    5f06:	9e 01       	movw	r18, r28
    5f08:	2d 5f       	subi	r18, 0xFD	; 253
    5f0a:	3f 4f       	sbci	r19, 0xFF	; 255
    5f0c:	b9 01       	movw	r22, r18
    5f0e:	0e 94 34 25 	call	0x4a68	; 0x4a68 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message,ChecksumErrors);
    5f12:	89 81       	ldd	r24, Y+1	; 0x01
    5f14:	9a 81       	ldd	r25, Y+2	; 0x02
    5f16:	ac 01       	movw	r20, r24
    5f18:	4b 53       	subi	r20, 0x3B	; 59
    5f1a:	5f 4f       	sbci	r21, 0xFF	; 255
    5f1c:	89 81       	ldd	r24, Y+1	; 0x01
    5f1e:	9a 81       	ldd	r25, Y+2	; 0x02
    5f20:	9e 01       	movw	r18, r28
    5f22:	2d 5f       	subi	r18, 0xFD	; 253
    5f24:	3f 4f       	sbci	r19, 0xFF	; 255
    5f26:	b9 01       	movw	r22, r18
    5f28:	0e 94 34 25 	call	0x4a68	; 0x4a68 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message,NumOfBlownFrames);
    5f2c:	89 81       	ldd	r24, Y+1	; 0x01
    5f2e:	9a 81       	ldd	r25, Y+2	; 0x02
    5f30:	ac 01       	movw	r20, r24
    5f32:	47 53       	subi	r20, 0x37	; 55
    5f34:	5f 4f       	sbci	r21, 0xFF	; 255
    5f36:	89 81       	ldd	r24, Y+1	; 0x01
    5f38:	9a 81       	ldd	r25, Y+2	; 0x02
    5f3a:	9e 01       	movw	r18, r28
    5f3c:	2d 5f       	subi	r18, 0xFD	; 253
    5f3e:	3f 4f       	sbci	r19, 0xFF	; 255
    5f40:	b9 01       	movw	r22, r18
    5f42:	0e 94 34 25 	call	0x4a68	; 0x4a68 <_ZN10helicopter8messages7Message6decodeERPhRl>
	}
}
    5f46:	0f 90       	pop	r0
    5f48:	0f 90       	pop	r0
    5f4a:	0f 90       	pop	r0
    5f4c:	0f 90       	pop	r0
    5f4e:	df 91       	pop	r29
    5f50:	cf 91       	pop	r28
    5f52:	08 95       	ret

00005f54 <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh>:

SystemTelemetryMessage* SystemTelemetryMessage::buildMessageSt(byte *message)
{
    5f54:	0f 93       	push	r16
    5f56:	1f 93       	push	r17
    5f58:	cf 93       	push	r28
    5f5a:	df 93       	push	r29
    5f5c:	00 d0       	rcall	.+0      	; 0x5f5e <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh+0xa>
    5f5e:	1f 92       	push	r1
    5f60:	cd b7       	in	r28, 0x3d	; 61
    5f62:	de b7       	in	r29, 0x3e	; 62
    5f64:	9c 83       	std	Y+4, r25	; 0x04
    5f66:	8b 83       	std	Y+3, r24	; 0x03
	SystemTelemetryMessage *msg = new SystemTelemetryMessage();
    5f68:	8d ec       	ldi	r24, 0xCD	; 205
    5f6a:	90 e0       	ldi	r25, 0x00	; 0
    5f6c:	0e 94 01 3d 	call	0x7a02	; 0x7a02 <_Znwj>
    5f70:	8c 01       	movw	r16, r24
    5f72:	c8 01       	movw	r24, r16
    5f74:	0e 94 52 28 	call	0x50a4	; 0x50a4 <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>
    5f78:	1a 83       	std	Y+2, r17	; 0x02
    5f7a:	09 83       	std	Y+1, r16	; 0x01
	msg->buildMessage(message);
    5f7c:	89 81       	ldd	r24, Y+1	; 0x01
    5f7e:	9a 81       	ldd	r25, Y+2	; 0x02
    5f80:	fc 01       	movw	r30, r24
    5f82:	80 81       	ld	r24, Z
    5f84:	91 81       	ldd	r25, Z+1	; 0x01
    5f86:	06 96       	adiw	r24, 0x06	; 6
    5f88:	fc 01       	movw	r30, r24
    5f8a:	20 81       	ld	r18, Z
    5f8c:	31 81       	ldd	r19, Z+1	; 0x01
    5f8e:	4b 81       	ldd	r20, Y+3	; 0x03
    5f90:	5c 81       	ldd	r21, Y+4	; 0x04
    5f92:	89 81       	ldd	r24, Y+1	; 0x01
    5f94:	9a 81       	ldd	r25, Y+2	; 0x02
    5f96:	ba 01       	movw	r22, r20
    5f98:	f9 01       	movw	r30, r18
    5f9a:	19 95       	eicall
	
	return msg;
    5f9c:	89 81       	ldd	r24, Y+1	; 0x01
    5f9e:	9a 81       	ldd	r25, Y+2	; 0x02
}
    5fa0:	0f 90       	pop	r0
    5fa2:	0f 90       	pop	r0
    5fa4:	0f 90       	pop	r0
    5fa6:	0f 90       	pop	r0
    5fa8:	df 91       	pop	r29
    5faa:	cf 91       	pop	r28
    5fac:	1f 91       	pop	r17
    5fae:	0f 91       	pop	r16
    5fb0:	08 95       	ret

00005fb2 <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE>:

SystemTelemetryMessage * SystemTelemetryMessage::buildMessageFromModel(SystemModel *model)
{
    5fb2:	0f 93       	push	r16
    5fb4:	1f 93       	push	r17
    5fb6:	cf 93       	push	r28
    5fb8:	df 93       	push	r29
    5fba:	00 d0       	rcall	.+0      	; 0x5fbc <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE+0xa>
    5fbc:	1f 92       	push	r1
    5fbe:	cd b7       	in	r28, 0x3d	; 61
    5fc0:	de b7       	in	r29, 0x3e	; 62
    5fc2:	9c 83       	std	Y+4, r25	; 0x04
    5fc4:	8b 83       	std	Y+3, r24	; 0x03
	SystemTelemetryMessage *message = new SystemTelemetryMessage();
    5fc6:	8d ec       	ldi	r24, 0xCD	; 205
    5fc8:	90 e0       	ldi	r25, 0x00	; 0
    5fca:	0e 94 01 3d 	call	0x7a02	; 0x7a02 <_Znwj>
    5fce:	8c 01       	movw	r16, r24
    5fd0:	c8 01       	movw	r24, r16
    5fd2:	0e 94 52 28 	call	0x50a4	; 0x50a4 <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>
    5fd6:	1a 83       	std	Y+2, r17	; 0x02
    5fd8:	09 83       	std	Y+1, r16	; 0x01
	
	message->MagYaw = model->MagYawDegrees();
    5fda:	8b 81       	ldd	r24, Y+3	; 0x03
    5fdc:	9c 81       	ldd	r25, Y+4	; 0x04
    5fde:	0e 94 3d 01 	call	0x27a	; 0x27a <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>
    5fe2:	dc 01       	movw	r26, r24
    5fe4:	cb 01       	movw	r24, r22
    5fe6:	29 81       	ldd	r18, Y+1	; 0x01
    5fe8:	3a 81       	ldd	r19, Y+2	; 0x02
    5fea:	f9 01       	movw	r30, r18
    5fec:	85 83       	std	Z+5, r24	; 0x05
    5fee:	96 83       	std	Z+6, r25	; 0x06
    5ff0:	a7 83       	std	Z+7, r26	; 0x07
    5ff2:	b0 87       	std	Z+8, r27	; 0x08
	message->YawDerivativeError = model->YawDerivativeError();
    5ff4:	8b 81       	ldd	r24, Y+3	; 0x03
    5ff6:	9c 81       	ldd	r25, Y+4	; 0x04
    5ff8:	0e 94 e6 25 	call	0x4bcc	; 0x4bcc <_ZNK10helicopter5model11SystemModel18YawDerivativeErrorEv>
    5ffc:	dc 01       	movw	r26, r24
    5ffe:	cb 01       	movw	r24, r22
    6000:	29 81       	ldd	r18, Y+1	; 0x01
    6002:	3a 81       	ldd	r19, Y+2	; 0x02
    6004:	f9 01       	movw	r30, r18
    6006:	85 8b       	std	Z+21, r24	; 0x15
    6008:	96 8b       	std	Z+22, r25	; 0x16
    600a:	a7 8b       	std	Z+23, r26	; 0x17
    600c:	b0 8f       	std	Z+24, r27	; 0x18
	message->YawIntegral = model->YawIntegral();
    600e:	8b 81       	ldd	r24, Y+3	; 0x03
    6010:	9c 81       	ldd	r25, Y+4	; 0x04
    6012:	0e 94 01 02 	call	0x402	; 0x402 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>
    6016:	dc 01       	movw	r26, r24
    6018:	cb 01       	movw	r24, r22
    601a:	29 81       	ldd	r18, Y+1	; 0x01
    601c:	3a 81       	ldd	r19, Y+2	; 0x02
    601e:	f9 01       	movw	r30, r18
    6020:	85 87       	std	Z+13, r24	; 0x0d
    6022:	96 87       	std	Z+14, r25	; 0x0e
    6024:	a7 87       	std	Z+15, r26	; 0x0f
    6026:	b0 8b       	std	Z+16, r27	; 0x10
	message->YawProportional = model->YawProportional();
    6028:	8b 81       	ldd	r24, Y+3	; 0x03
    602a:	9c 81       	ldd	r25, Y+4	; 0x04
    602c:	0e 94 d0 25 	call	0x4ba0	; 0x4ba0 <_ZNK10helicopter5model11SystemModel15YawProportionalEv>
    6030:	dc 01       	movw	r26, r24
    6032:	cb 01       	movw	r24, r22
    6034:	29 81       	ldd	r18, Y+1	; 0x01
    6036:	3a 81       	ldd	r19, Y+2	; 0x02
    6038:	f9 01       	movw	r30, r18
    603a:	81 8b       	std	Z+17, r24	; 0x11
    603c:	92 8b       	std	Z+18, r25	; 0x12
    603e:	a3 8b       	std	Z+19, r26	; 0x13
    6040:	b4 8b       	std	Z+20, r27	; 0x14
	message->YawVelocityDegreesPerSecond = model->YawVelocityDegreesPerSecond();
    6042:	8b 81       	ldd	r24, Y+3	; 0x03
    6044:	9c 81       	ldd	r25, Y+4	; 0x04
    6046:	0e 94 d5 01 	call	0x3aa	; 0x3aa <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>
    604a:	dc 01       	movw	r26, r24
    604c:	cb 01       	movw	r24, r22
    604e:	29 81       	ldd	r18, Y+1	; 0x01
    6050:	3a 81       	ldd	r19, Y+2	; 0x02
    6052:	f9 01       	movw	r30, r18
    6054:	81 87       	std	Z+9, r24	; 0x09
    6056:	92 87       	std	Z+10, r25	; 0x0a
    6058:	a3 87       	std	Z+11, r26	; 0x0b
    605a:	b4 87       	std	Z+12, r27	; 0x0c
	message->YawControl = model->YawControl();
    605c:	8b 81       	ldd	r24, Y+3	; 0x03
    605e:	9c 81       	ldd	r25, Y+4	; 0x04
    6060:	0e 94 69 01 	call	0x2d2	; 0x2d2 <_ZNK10helicopter5model11SystemModel10YawControlEv>
    6064:	dc 01       	movw	r26, r24
    6066:	cb 01       	movw	r24, r22
    6068:	29 81       	ldd	r18, Y+1	; 0x01
    606a:	3a 81       	ldd	r19, Y+2	; 0x02
    606c:	f9 01       	movw	r30, r18
    606e:	81 8f       	std	Z+25, r24	; 0x19
    6070:	92 8f       	std	Z+26, r25	; 0x1a
    6072:	a3 8f       	std	Z+27, r26	; 0x1b
    6074:	b4 8f       	std	Z+28, r27	; 0x1c
	

	message->XNEDBodyFrame = model->XNEDBodyFrame();
    6076:	8b 81       	ldd	r24, Y+3	; 0x03
    6078:	9c 81       	ldd	r25, Y+4	; 0x04
    607a:	0e 94 77 02 	call	0x4ee	; 0x4ee <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>
    607e:	dc 01       	movw	r26, r24
    6080:	cb 01       	movw	r24, r22
    6082:	29 81       	ldd	r18, Y+1	; 0x01
    6084:	3a 81       	ldd	r19, Y+2	; 0x02
    6086:	f9 01       	movw	r30, r18
    6088:	85 a7       	std	Z+45, r24	; 0x2d
    608a:	96 a7       	std	Z+46, r25	; 0x2e
    608c:	a7 a7       	std	Z+47, r26	; 0x2f
    608e:	b0 ab       	std	Z+48, r27	; 0x30
	message->XDerivativeError = model->XDerivativeError();
    6090:	8b 81       	ldd	r24, Y+3	; 0x03
    6092:	9c 81       	ldd	r25, Y+4	; 0x04
    6094:	0e 94 34 26 	call	0x4c68	; 0x4c68 <_ZNK10helicopter5model11SystemModel16XDerivativeErrorEv>
    6098:	dc 01       	movw	r26, r24
    609a:	cb 01       	movw	r24, r22
    609c:	29 81       	ldd	r18, Y+1	; 0x01
    609e:	3a 81       	ldd	r19, Y+2	; 0x02
    60a0:	2f 5b       	subi	r18, 0xBF	; 191
    60a2:	3f 4f       	sbci	r19, 0xFF	; 255
    60a4:	f9 01       	movw	r30, r18
    60a6:	80 83       	st	Z, r24
    60a8:	91 83       	std	Z+1, r25	; 0x01
    60aa:	a2 83       	std	Z+2, r26	; 0x02
    60ac:	b3 83       	std	Z+3, r27	; 0x03
	message->XIntegral = model->XIntegral();
    60ae:	8b 81       	ldd	r24, Y+3	; 0x03
    60b0:	9c 81       	ldd	r25, Y+4	; 0x04
    60b2:	0e 94 94 03 	call	0x728	; 0x728 <_ZNK10helicopter5model11SystemModel9XIntegralEv>
    60b6:	dc 01       	movw	r26, r24
    60b8:	cb 01       	movw	r24, r22
    60ba:	29 81       	ldd	r18, Y+1	; 0x01
    60bc:	3a 81       	ldd	r19, Y+2	; 0x02
    60be:	f9 01       	movw	r30, r18
    60c0:	81 af       	std	Z+57, r24	; 0x39
    60c2:	92 af       	std	Z+58, r25	; 0x3a
    60c4:	a3 af       	std	Z+59, r26	; 0x3b
    60c6:	b4 af       	std	Z+60, r27	; 0x3c
	message->XProportional = model->XProportional();
    60c8:	8b 81       	ldd	r24, Y+3	; 0x03
    60ca:	9c 81       	ldd	r25, Y+4	; 0x04
    60cc:	0e 94 1c 26 	call	0x4c38	; 0x4c38 <_ZNK10helicopter5model11SystemModel13XProportionalEv>
    60d0:	dc 01       	movw	r26, r24
    60d2:	cb 01       	movw	r24, r22
    60d4:	29 81       	ldd	r18, Y+1	; 0x01
    60d6:	3a 81       	ldd	r19, Y+2	; 0x02
    60d8:	23 5c       	subi	r18, 0xC3	; 195
    60da:	3f 4f       	sbci	r19, 0xFF	; 255
    60dc:	f9 01       	movw	r30, r18
    60de:	80 83       	st	Z, r24
    60e0:	91 83       	std	Z+1, r25	; 0x01
    60e2:	a2 83       	std	Z+2, r26	; 0x02
    60e4:	b3 83       	std	Z+3, r27	; 0x03
	message->XVelocityMetersPerSecond = model->XVelocityMetersPerSecond();
    60e6:	8b 81       	ldd	r24, Y+3	; 0x03
    60e8:	9c 81       	ldd	r25, Y+4	; 0x04
    60ea:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>
    60ee:	dc 01       	movw	r26, r24
    60f0:	cb 01       	movw	r24, r22
    60f2:	29 81       	ldd	r18, Y+1	; 0x01
    60f4:	3a 81       	ldd	r19, Y+2	; 0x02
    60f6:	f9 01       	movw	r30, r18
    60f8:	81 ab       	std	Z+49, r24	; 0x31
    60fa:	92 ab       	std	Z+50, r25	; 0x32
    60fc:	a3 ab       	std	Z+51, r26	; 0x33
    60fe:	b4 ab       	std	Z+52, r27	; 0x34
	message->LongitudeControl = model->LongitudeControl();
    6100:	8b 81       	ldd	r24, Y+3	; 0x03
    6102:	9c 81       	ldd	r25, Y+4	; 0x04
    6104:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>
    6108:	dc 01       	movw	r26, r24
    610a:	cb 01       	movw	r24, r22
    610c:	29 81       	ldd	r18, Y+1	; 0x01
    610e:	3a 81       	ldd	r19, Y+2	; 0x02
    6110:	2b 5b       	subi	r18, 0xBB	; 187
    6112:	3f 4f       	sbci	r19, 0xFF	; 255
    6114:	f9 01       	movw	r30, r18
    6116:	80 83       	st	Z, r24
    6118:	91 83       	std	Z+1, r25	; 0x01
    611a:	a2 83       	std	Z+2, r26	; 0x02
    611c:	b3 83       	std	Z+3, r27	; 0x03
	
	
	message->YNEDBodyFrame = model->YNEDBodyFrame();
    611e:	8b 81       	ldd	r24, Y+3	; 0x03
    6120:	9c 81       	ldd	r25, Y+4	; 0x04
    6122:	0e 94 0a 04 	call	0x814	; 0x814 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>
    6126:	dc 01       	movw	r26, r24
    6128:	cb 01       	movw	r24, r22
    612a:	29 81       	ldd	r18, Y+1	; 0x01
    612c:	3a 81       	ldd	r19, Y+2	; 0x02
    612e:	23 5a       	subi	r18, 0xA3	; 163
    6130:	3f 4f       	sbci	r19, 0xFF	; 255
    6132:	f9 01       	movw	r30, r18
    6134:	80 83       	st	Z, r24
    6136:	91 83       	std	Z+1, r25	; 0x01
    6138:	a2 83       	std	Z+2, r26	; 0x02
    613a:	b3 83       	std	Z+3, r27	; 0x03
	message->YDerivativeError = model->YDerivativeError();
    613c:	8b 81       	ldd	r24, Y+3	; 0x03
    613e:	9c 81       	ldd	r25, Y+4	; 0x04
    6140:	0e 94 aa 26 	call	0x4d54	; 0x4d54 <_ZNK10helicopter5model11SystemModel16YDerivativeErrorEv>
    6144:	dc 01       	movw	r26, r24
    6146:	cb 01       	movw	r24, r22
    6148:	29 81       	ldd	r18, Y+1	; 0x01
    614a:	3a 81       	ldd	r19, Y+2	; 0x02
    614c:	2f 58       	subi	r18, 0x8F	; 143
    614e:	3f 4f       	sbci	r19, 0xFF	; 255
    6150:	f9 01       	movw	r30, r18
    6152:	80 83       	st	Z, r24
    6154:	91 83       	std	Z+1, r25	; 0x01
    6156:	a2 83       	std	Z+2, r26	; 0x02
    6158:	b3 83       	std	Z+3, r27	; 0x03
	message->YIntegral = model->YIntegral();
    615a:	8b 81       	ldd	r24, Y+3	; 0x03
    615c:	9c 81       	ldd	r25, Y+4	; 0x04
    615e:	0e 94 3e 05 	call	0xa7c	; 0xa7c <_ZNK10helicopter5model11SystemModel9YIntegralEv>
    6162:	dc 01       	movw	r26, r24
    6164:	cb 01       	movw	r24, r22
    6166:	29 81       	ldd	r18, Y+1	; 0x01
    6168:	3a 81       	ldd	r19, Y+2	; 0x02
    616a:	27 59       	subi	r18, 0x97	; 151
    616c:	3f 4f       	sbci	r19, 0xFF	; 255
    616e:	f9 01       	movw	r30, r18
    6170:	80 83       	st	Z, r24
    6172:	91 83       	std	Z+1, r25	; 0x01
    6174:	a2 83       	std	Z+2, r26	; 0x02
    6176:	b3 83       	std	Z+3, r27	; 0x03
	message->YProportional = model->YProportional();
    6178:	8b 81       	ldd	r24, Y+3	; 0x03
    617a:	9c 81       	ldd	r25, Y+4	; 0x04
    617c:	0e 94 92 26 	call	0x4d24	; 0x4d24 <_ZNK10helicopter5model11SystemModel13YProportionalEv>
    6180:	dc 01       	movw	r26, r24
    6182:	cb 01       	movw	r24, r22
    6184:	29 81       	ldd	r18, Y+1	; 0x01
    6186:	3a 81       	ldd	r19, Y+2	; 0x02
    6188:	23 59       	subi	r18, 0x93	; 147
    618a:	3f 4f       	sbci	r19, 0xFF	; 255
    618c:	f9 01       	movw	r30, r18
    618e:	80 83       	st	Z, r24
    6190:	91 83       	std	Z+1, r25	; 0x01
    6192:	a2 83       	std	Z+2, r26	; 0x02
    6194:	b3 83       	std	Z+3, r27	; 0x03
	message->YVelocityMetersPerSecond = model->YVelocityMetersPerSecond();
    6196:	8b 81       	ldd	r24, Y+3	; 0x03
    6198:	9c 81       	ldd	r25, Y+4	; 0x04
    619a:	0e 94 b0 04 	call	0x960	; 0x960 <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>
    619e:	dc 01       	movw	r26, r24
    61a0:	cb 01       	movw	r24, r22
    61a2:	29 81       	ldd	r18, Y+1	; 0x01
    61a4:	3a 81       	ldd	r19, Y+2	; 0x02
    61a6:	2f 59       	subi	r18, 0x9F	; 159
    61a8:	3f 4f       	sbci	r19, 0xFF	; 255
    61aa:	f9 01       	movw	r30, r18
    61ac:	80 83       	st	Z, r24
    61ae:	91 83       	std	Z+1, r25	; 0x01
    61b0:	a2 83       	std	Z+2, r26	; 0x02
    61b2:	b3 83       	std	Z+3, r27	; 0x03
	message->LateralControl = model->LateralControl();
    61b4:	8b 81       	ldd	r24, Y+3	; 0x03
    61b6:	9c 81       	ldd	r25, Y+4	; 0x04
    61b8:	0e 94 75 04 	call	0x8ea	; 0x8ea <_ZNK10helicopter5model11SystemModel14LateralControlEv>
    61bc:	dc 01       	movw	r26, r24
    61be:	cb 01       	movw	r24, r22
    61c0:	29 81       	ldd	r18, Y+1	; 0x01
    61c2:	3a 81       	ldd	r19, Y+2	; 0x02
    61c4:	2b 58       	subi	r18, 0x8B	; 139
    61c6:	3f 4f       	sbci	r19, 0xFF	; 255
    61c8:	f9 01       	movw	r30, r18
    61ca:	80 83       	st	Z, r24
    61cc:	91 83       	std	Z+1, r25	; 0x01
    61ce:	a2 83       	std	Z+2, r26	; 0x02
    61d0:	b3 83       	std	Z+3, r27	; 0x03
	
	
	
	message->AltitudeFeetAgl = model->AltitudeFeetAgl();
    61d2:	8b 81       	ldd	r24, Y+3	; 0x03
    61d4:	9c 81       	ldd	r25, Y+4	; 0x04
    61d6:	0e 94 b4 05 	call	0xb68	; 0xb68 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    61da:	dc 01       	movw	r26, r24
    61dc:	cb 01       	movw	r24, r22
    61de:	29 81       	ldd	r18, Y+1	; 0x01
    61e0:	3a 81       	ldd	r19, Y+2	; 0x02
    61e2:	23 57       	subi	r18, 0x73	; 115
    61e4:	3f 4f       	sbci	r19, 0xFF	; 255
    61e6:	f9 01       	movw	r30, r18
    61e8:	80 83       	st	Z, r24
    61ea:	91 83       	std	Z+1, r25	; 0x01
    61ec:	a2 83       	std	Z+2, r26	; 0x02
    61ee:	b3 83       	std	Z+3, r27	; 0x03
	message->ZDerivativeError = model->ZDerivativeError();
    61f0:	8b 81       	ldd	r24, Y+3	; 0x03
    61f2:	9c 81       	ldd	r25, Y+4	; 0x04
    61f4:	0e 94 43 27 	call	0x4e86	; 0x4e86 <_ZNK10helicopter5model11SystemModel16ZDerivativeErrorEv>
    61f8:	dc 01       	movw	r26, r24
    61fa:	cb 01       	movw	r24, r22
    61fc:	29 81       	ldd	r18, Y+1	; 0x01
    61fe:	3a 81       	ldd	r19, Y+2	; 0x02
    6200:	23 56       	subi	r18, 0x63	; 99
    6202:	3f 4f       	sbci	r19, 0xFF	; 255
    6204:	f9 01       	movw	r30, r18
    6206:	80 83       	st	Z, r24
    6208:	91 83       	std	Z+1, r25	; 0x01
    620a:	a2 83       	std	Z+2, r26	; 0x02
    620c:	b3 83       	std	Z+3, r27	; 0x03
	message->ZIntegral = model->ZIntegral();
    620e:	8b 81       	ldd	r24, Y+3	; 0x03
    6210:	9c 81       	ldd	r25, Y+4	; 0x04
    6212:	0e 94 8a 06 	call	0xd14	; 0xd14 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>
    6216:	dc 01       	movw	r26, r24
    6218:	cb 01       	movw	r24, r22
    621a:	29 81       	ldd	r18, Y+1	; 0x01
    621c:	3a 81       	ldd	r19, Y+2	; 0x02
    621e:	2b 56       	subi	r18, 0x6B	; 107
    6220:	3f 4f       	sbci	r19, 0xFF	; 255
    6222:	f9 01       	movw	r30, r18
    6224:	80 83       	st	Z, r24
    6226:	91 83       	std	Z+1, r25	; 0x01
    6228:	a2 83       	std	Z+2, r26	; 0x02
    622a:	b3 83       	std	Z+3, r27	; 0x03
	message->ZProportional = model->ZProportional();
    622c:	8b 81       	ldd	r24, Y+3	; 0x03
    622e:	9c 81       	ldd	r25, Y+4	; 0x04
    6230:	0e 94 2b 27 	call	0x4e56	; 0x4e56 <_ZNK10helicopter5model11SystemModel13ZProportionalEv>
    6234:	dc 01       	movw	r26, r24
    6236:	cb 01       	movw	r24, r22
    6238:	29 81       	ldd	r18, Y+1	; 0x01
    623a:	3a 81       	ldd	r19, Y+2	; 0x02
    623c:	27 56       	subi	r18, 0x67	; 103
    623e:	3f 4f       	sbci	r19, 0xFF	; 255
    6240:	f9 01       	movw	r30, r18
    6242:	80 83       	st	Z, r24
    6244:	91 83       	std	Z+1, r25	; 0x01
    6246:	a2 83       	std	Z+2, r26	; 0x02
    6248:	b3 83       	std	Z+3, r27	; 0x03
	message->ZVelocityMetersPerSecond = (model->ZVelocityFeetPerSecond() / 3.2804f);
    624a:	8b 81       	ldd	r24, Y+3	; 0x03
    624c:	9c 81       	ldd	r25, Y+4	; 0x04
    624e:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>
    6252:	dc 01       	movw	r26, r24
    6254:	cb 01       	movw	r24, r22
    6256:	23 e1       	ldi	r18, 0x13	; 19
    6258:	32 ef       	ldi	r19, 0xF2	; 242
    625a:	41 e5       	ldi	r20, 0x51	; 81
    625c:	50 e4       	ldi	r21, 0x40	; 64
    625e:	bc 01       	movw	r22, r24
    6260:	cd 01       	movw	r24, r26
    6262:	0e 94 6d 43 	call	0x86da	; 0x86da <__divsf3>
    6266:	dc 01       	movw	r26, r24
    6268:	cb 01       	movw	r24, r22
    626a:	29 81       	ldd	r18, Y+1	; 0x01
    626c:	3a 81       	ldd	r19, Y+2	; 0x02
    626e:	2f 56       	subi	r18, 0x6F	; 111
    6270:	3f 4f       	sbci	r19, 0xFF	; 255
    6272:	f9 01       	movw	r30, r18
    6274:	80 83       	st	Z, r24
    6276:	91 83       	std	Z+1, r25	; 0x01
    6278:	a2 83       	std	Z+2, r26	; 0x02
    627a:	b3 83       	std	Z+3, r27	; 0x03
	message->MainRotorCollectiveControl = model->MainRotorCollectiveControl();
    627c:	8b 81       	ldd	r24, Y+3	; 0x03
    627e:	9c 81       	ldd	r25, Y+4	; 0x04
    6280:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>
    6284:	dc 01       	movw	r26, r24
    6286:	cb 01       	movw	r24, r22
    6288:	29 81       	ldd	r18, Y+1	; 0x01
    628a:	3a 81       	ldd	r19, Y+2	; 0x02
    628c:	2f 55       	subi	r18, 0x5F	; 95
    628e:	3f 4f       	sbci	r19, 0xFF	; 255
    6290:	f9 01       	movw	r30, r18
    6292:	80 83       	st	Z, r24
    6294:	91 83       	std	Z+1, r25	; 0x01
    6296:	a2 83       	std	Z+2, r26	; 0x02
    6298:	b3 83       	std	Z+3, r27	; 0x03
	
	
	
	message->ChecksumErrors = model->ChecksumErrors();
    629a:	8b 81       	ldd	r24, Y+3	; 0x03
    629c:	9c 81       	ldd	r25, Y+4	; 0x04
    629e:	0e 94 17 28 	call	0x502e	; 0x502e <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>
    62a2:	dc 01       	movw	r26, r24
    62a4:	cb 01       	movw	r24, r22
    62a6:	29 81       	ldd	r18, Y+1	; 0x01
    62a8:	3a 81       	ldd	r19, Y+2	; 0x02
    62aa:	2b 53       	subi	r18, 0x3B	; 59
    62ac:	3f 4f       	sbci	r19, 0xFF	; 255
    62ae:	f9 01       	movw	r30, r18
    62b0:	80 83       	st	Z, r24
    62b2:	91 83       	std	Z+1, r25	; 0x01
    62b4:	a2 83       	std	Z+2, r26	; 0x02
    62b6:	b3 83       	std	Z+3, r27	; 0x03
	message->Timeouts = model->Timeouts();
    62b8:	8b 81       	ldd	r24, Y+3	; 0x03
    62ba:	9c 81       	ldd	r25, Y+4	; 0x04
    62bc:	0e 94 a1 27 	call	0x4f42	; 0x4f42 <_ZNK10helicopter5model11SystemModel8TimeoutsEv>
    62c0:	dc 01       	movw	r26, r24
    62c2:	cb 01       	movw	r24, r22
    62c4:	29 81       	ldd	r18, Y+1	; 0x01
    62c6:	3a 81       	ldd	r19, Y+2	; 0x02
    62c8:	23 54       	subi	r18, 0x43	; 67
    62ca:	3f 4f       	sbci	r19, 0xFF	; 255
    62cc:	f9 01       	movw	r30, r18
    62ce:	80 83       	st	Z, r24
    62d0:	91 83       	std	Z+1, r25	; 0x01
    62d2:	a2 83       	std	Z+2, r26	; 0x02
    62d4:	b3 83       	std	Z+3, r27	; 0x03
	message->UnrecognizedMsgTypes = model->UnrecognizedMsgTypes();
    62d6:	8b 81       	ldd	r24, Y+3	; 0x03
    62d8:	9c 81       	ldd	r25, Y+4	; 0x04
    62da:	0e 94 dc 27 	call	0x4fb8	; 0x4fb8 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>
    62de:	dc 01       	movw	r26, r24
    62e0:	cb 01       	movw	r24, r22
    62e2:	29 81       	ldd	r18, Y+1	; 0x01
    62e4:	3a 81       	ldd	r19, Y+2	; 0x02
    62e6:	2f 53       	subi	r18, 0x3F	; 63
    62e8:	3f 4f       	sbci	r19, 0xFF	; 255
    62ea:	f9 01       	movw	r30, r18
    62ec:	80 83       	st	Z, r24
    62ee:	91 83       	std	Z+1, r25	; 0x01
    62f0:	a2 83       	std	Z+2, r26	; 0x02
    62f2:	b3 83       	std	Z+3, r27	; 0x03
	message->NumOfBlownFrames = model->BlownFrames();
    62f4:	8b 81       	ldd	r24, Y+3	; 0x03
    62f6:	9c 81       	ldd	r25, Y+4	; 0x04
    62f8:	0e 94 0b 07 	call	0xe16	; 0xe16 <_ZNK10helicopter5model11SystemModel11BlownFramesEv>
    62fc:	dc 01       	movw	r26, r24
    62fe:	cb 01       	movw	r24, r22
    6300:	29 81       	ldd	r18, Y+1	; 0x01
    6302:	3a 81       	ldd	r19, Y+2	; 0x02
    6304:	27 53       	subi	r18, 0x37	; 55
    6306:	3f 4f       	sbci	r19, 0xFF	; 255
    6308:	f9 01       	movw	r30, r18
    630a:	80 83       	st	Z, r24
    630c:	91 83       	std	Z+1, r25	; 0x01
    630e:	a2 83       	std	Z+2, r26	; 0x02
    6310:	b3 83       	std	Z+3, r27	; 0x03
	
	return message;
    6312:	89 81       	ldd	r24, Y+1	; 0x01
    6314:	9a 81       	ldd	r25, Y+2	; 0x02
}
    6316:	0f 90       	pop	r0
    6318:	0f 90       	pop	r0
    631a:	0f 90       	pop	r0
    631c:	0f 90       	pop	r0
    631e:	df 91       	pop	r29
    6320:	cf 91       	pop	r28
    6322:	1f 91       	pop	r17
    6324:	0f 91       	pop	r16
    6326:	08 95       	ret

00006328 <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE>:
	model->ChecksumErrors(this->ChecksumErrors);
	model->BlownFrames(this->NumOfBlownFrames);
}

void SystemTelemetryMessage::updateModelFromMessageFromSimulator (SystemModel *model)
{
    6328:	cf 93       	push	r28
    632a:	df 93       	push	r29
    632c:	00 d0       	rcall	.+0      	; 0x632e <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE+0x6>
    632e:	1f 92       	push	r1
    6330:	cd b7       	in	r28, 0x3d	; 61
    6332:	de b7       	in	r29, 0x3e	; 62
    6334:	9a 83       	std	Y+2, r25	; 0x02
    6336:	89 83       	std	Y+1, r24	; 0x01
    6338:	7c 83       	std	Y+4, r23	; 0x04
    633a:	6b 83       	std	Y+3, r22	; 0x03
	//These values are sensor readings from the simulator that are used for flight
	//control calculations. The real helicopter algorithms will read these values
	//from actual sensors, but when running off of the simulator, these sensor
	//readings come from the simulator itself.
	
	model->MagYawDegrees(this->MagYaw);
    633c:	89 81       	ldd	r24, Y+1	; 0x01
    633e:	9a 81       	ldd	r25, Y+2	; 0x02
    6340:	fc 01       	movw	r30, r24
    6342:	85 81       	ldd	r24, Z+5	; 0x05
    6344:	96 81       	ldd	r25, Z+6	; 0x06
    6346:	a7 81       	ldd	r26, Z+7	; 0x07
    6348:	b0 85       	ldd	r27, Z+8	; 0x08
    634a:	2b 81       	ldd	r18, Y+3	; 0x03
    634c:	3c 81       	ldd	r19, Y+4	; 0x04
    634e:	ac 01       	movw	r20, r24
    6350:	bd 01       	movw	r22, r26
    6352:	c9 01       	movw	r24, r18
    6354:	0e 94 90 25 	call	0x4b20	; 0x4b20 <_ZN10helicopter5model11SystemModel13MagYawDegreesEf>
	model->YawVelocityDegreesPerSecond(this->YawVelocityDegreesPerSecond);
    6358:	89 81       	ldd	r24, Y+1	; 0x01
    635a:	9a 81       	ldd	r25, Y+2	; 0x02
    635c:	fc 01       	movw	r30, r24
    635e:	81 85       	ldd	r24, Z+9	; 0x09
    6360:	92 85       	ldd	r25, Z+10	; 0x0a
    6362:	a3 85       	ldd	r26, Z+11	; 0x0b
    6364:	b4 85       	ldd	r27, Z+12	; 0x0c
    6366:	2b 81       	ldd	r18, Y+3	; 0x03
    6368:	3c 81       	ldd	r19, Y+4	; 0x04
    636a:	ac 01       	movw	r20, r24
    636c:	bd 01       	movw	r22, r26
    636e:	c9 01       	movw	r24, r18
    6370:	0e 94 b0 25 	call	0x4b60	; 0x4b60 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf>
	
	//model->XNEDBodyFrame((double) this->XNEDBodyFrame / 100);//not supposed to be here since this is a calculated value, not a sensor reading.
	model->XVelocityMetersPerSecond(this->XVelocityMetersPerSecond);
    6374:	89 81       	ldd	r24, Y+1	; 0x01
    6376:	9a 81       	ldd	r25, Y+2	; 0x02
    6378:	fc 01       	movw	r30, r24
    637a:	81 a9       	ldd	r24, Z+49	; 0x31
    637c:	92 a9       	ldd	r25, Z+50	; 0x32
    637e:	a3 a9       	ldd	r26, Z+51	; 0x33
    6380:	b4 a9       	ldd	r27, Z+52	; 0x34
    6382:	2b 81       	ldd	r18, Y+3	; 0x03
    6384:	3c 81       	ldd	r19, Y+4	; 0x04
    6386:	ac 01       	movw	r20, r24
    6388:	bd 01       	movw	r22, r26
    638a:	c9 01       	movw	r24, r18
    638c:	0e 94 fc 25 	call	0x4bf8	; 0x4bf8 <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf>
	model->ThetaPitchDegrees(this->ThetaPitchDegrees);
    6390:	89 81       	ldd	r24, Y+1	; 0x01
    6392:	9a 81       	ldd	r25, Y+2	; 0x02
    6394:	fc 01       	movw	r30, r24
    6396:	85 a9       	ldd	r24, Z+53	; 0x35
    6398:	96 a9       	ldd	r25, Z+54	; 0x36
    639a:	a7 a9       	ldd	r26, Z+55	; 0x37
    639c:	b0 ad       	ldd	r27, Z+56	; 0x38
    639e:	2b 81       	ldd	r18, Y+3	; 0x03
    63a0:	3c 81       	ldd	r19, Y+4	; 0x04
    63a2:	ac 01       	movw	r20, r24
    63a4:	bd 01       	movw	r22, r26
    63a6:	c9 01       	movw	r24, r18
    63a8:	0e 94 4c 26 	call	0x4c98	; 0x4c98 <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf>
	
	//model->YNEDBodyFrame((double) this->YNEDBodyFrame / 100);
	model->YVelocityMetersPerSecond(this->YVelocityMetersPerSecond);
    63ac:	89 81       	ldd	r24, Y+1	; 0x01
    63ae:	9a 81       	ldd	r25, Y+2	; 0x02
    63b0:	8f 59       	subi	r24, 0x9F	; 159
    63b2:	9f 4f       	sbci	r25, 0xFF	; 255
    63b4:	fc 01       	movw	r30, r24
    63b6:	80 81       	ld	r24, Z
    63b8:	91 81       	ldd	r25, Z+1	; 0x01
    63ba:	a2 81       	ldd	r26, Z+2	; 0x02
    63bc:	b3 81       	ldd	r27, Z+3	; 0x03
    63be:	2b 81       	ldd	r18, Y+3	; 0x03
    63c0:	3c 81       	ldd	r19, Y+4	; 0x04
    63c2:	ac 01       	movw	r20, r24
    63c4:	bd 01       	movw	r22, r26
    63c6:	c9 01       	movw	r24, r18
    63c8:	0e 94 6f 26 	call	0x4cde	; 0x4cde <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf>
	model->PhiRollDegrees(this->PhiRollDegrees);
    63cc:	89 81       	ldd	r24, Y+1	; 0x01
    63ce:	9a 81       	ldd	r25, Y+2	; 0x02
    63d0:	8b 59       	subi	r24, 0x9B	; 155
    63d2:	9f 4f       	sbci	r25, 0xFF	; 255
    63d4:	fc 01       	movw	r30, r24
    63d6:	80 81       	ld	r24, Z
    63d8:	91 81       	ldd	r25, Z+1	; 0x01
    63da:	a2 81       	ldd	r26, Z+2	; 0x02
    63dc:	b3 81       	ldd	r27, Z+3	; 0x03
    63de:	2b 81       	ldd	r18, Y+3	; 0x03
    63e0:	3c 81       	ldd	r19, Y+4	; 0x04
    63e2:	ac 01       	movw	r20, r24
    63e4:	bd 01       	movw	r22, r26
    63e6:	c9 01       	movw	r24, r18
    63e8:	0e 94 c2 26 	call	0x4d84	; 0x4d84 <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf>
	
	model->AltitudeFeetAgl(this->AltitudeFeetAgl);
    63ec:	89 81       	ldd	r24, Y+1	; 0x01
    63ee:	9a 81       	ldd	r25, Y+2	; 0x02
    63f0:	83 57       	subi	r24, 0x73	; 115
    63f2:	9f 4f       	sbci	r25, 0xFF	; 255
    63f4:	fc 01       	movw	r30, r24
    63f6:	80 81       	ld	r24, Z
    63f8:	91 81       	ldd	r25, Z+1	; 0x01
    63fa:	a2 81       	ldd	r26, Z+2	; 0x02
    63fc:	b3 81       	ldd	r27, Z+3	; 0x03
    63fe:	2b 81       	ldd	r18, Y+3	; 0x03
    6400:	3c 81       	ldd	r19, Y+4	; 0x04
    6402:	ac 01       	movw	r20, r24
    6404:	bd 01       	movw	r22, r26
    6406:	c9 01       	movw	r24, r18
    6408:	0e 94 e5 26 	call	0x4dca	; 0x4dca <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf>
	
	//Convert from meters per sec, to foot per sec.
	
	model->ZVelocityFeetPerSecond(this->ZVelocityMetersPerSecond * 3.28084d); 
    640c:	89 81       	ldd	r24, Y+1	; 0x01
    640e:	9a 81       	ldd	r25, Y+2	; 0x02
    6410:	8f 56       	subi	r24, 0x6F	; 111
    6412:	9f 4f       	sbci	r25, 0xFF	; 255
    6414:	fc 01       	movw	r30, r24
    6416:	80 81       	ld	r24, Z
    6418:	91 81       	ldd	r25, Z+1	; 0x01
    641a:	a2 81       	ldd	r26, Z+2	; 0x02
    641c:	b3 81       	ldd	r27, Z+3	; 0x03
    641e:	28 e4       	ldi	r18, 0x48	; 72
    6420:	39 ef       	ldi	r19, 0xF9	; 249
    6422:	41 e5       	ldi	r20, 0x51	; 81
    6424:	50 e4       	ldi	r21, 0x40	; 64
    6426:	bc 01       	movw	r22, r24
    6428:	cd 01       	movw	r24, r26
    642a:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    642e:	dc 01       	movw	r26, r24
    6430:	cb 01       	movw	r24, r22
    6432:	2b 81       	ldd	r18, Y+3	; 0x03
    6434:	3c 81       	ldd	r19, Y+4	; 0x04
    6436:	ac 01       	movw	r20, r24
    6438:	bd 01       	movw	r22, r26
    643a:	c9 01       	movw	r24, r18
    643c:	0e 94 08 27 	call	0x4e10	; 0x4e10 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf>
	
	model->LatitudeDegrees(this->LatitudeDegrees);
    6440:	89 81       	ldd	r24, Y+1	; 0x01
    6442:	9a 81       	ldd	r25, Y+2	; 0x02
    6444:	8b 54       	subi	r24, 0x4B	; 75
    6446:	9f 4f       	sbci	r25, 0xFF	; 255
    6448:	fc 01       	movw	r30, r24
    644a:	80 81       	ld	r24, Z
    644c:	91 81       	ldd	r25, Z+1	; 0x01
    644e:	a2 81       	ldd	r26, Z+2	; 0x02
    6450:	b3 81       	ldd	r27, Z+3	; 0x03
    6452:	2b 81       	ldd	r18, Y+3	; 0x03
    6454:	3c 81       	ldd	r19, Y+4	; 0x04
    6456:	ac 01       	movw	r20, r24
    6458:	bd 01       	movw	r22, r26
    645a:	c9 01       	movw	r24, r18
    645c:	0e 94 5b 27 	call	0x4eb6	; 0x4eb6 <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf>
	model->LongitudeDegrees(this->LongitudeDegrees);
    6460:	89 81       	ldd	r24, Y+1	; 0x01
    6462:	9a 81       	ldd	r25, Y+2	; 0x02
    6464:	87 54       	subi	r24, 0x47	; 71
    6466:	9f 4f       	sbci	r25, 0xFF	; 255
    6468:	fc 01       	movw	r30, r24
    646a:	80 81       	ld	r24, Z
    646c:	91 81       	ldd	r25, Z+1	; 0x01
    646e:	a2 81       	ldd	r26, Z+2	; 0x02
    6470:	b3 81       	ldd	r27, Z+3	; 0x03
    6472:	2b 81       	ldd	r18, Y+3	; 0x03
    6474:	3c 81       	ldd	r19, Y+4	; 0x04
    6476:	ac 01       	movw	r20, r24
    6478:	bd 01       	movw	r22, r26
    647a:	c9 01       	movw	r24, r18
    647c:	0e 94 7e 27 	call	0x4efc	; 0x4efc <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf>
    6480:	0f 90       	pop	r0
    6482:	0f 90       	pop	r0
    6484:	0f 90       	pop	r0
    6486:	0f 90       	pop	r0
    6488:	df 91       	pop	r29
    648a:	cf 91       	pop	r28
    648c:	08 95       	ret

0000648e <_ZN10helicopter5tasks4Task8getDelayEv>:
				 * subclasses runTaskImpl to execute the actual task logic.
				 */
				virtual void runTask();
				
					
				int getDelay()
    648e:	cf 93       	push	r28
    6490:	df 93       	push	r29
    6492:	1f 92       	push	r1
    6494:	1f 92       	push	r1
    6496:	cd b7       	in	r28, 0x3d	; 61
    6498:	de b7       	in	r29, 0x3e	; 62
    649a:	9a 83       	std	Y+2, r25	; 0x02
    649c:	89 83       	std	Y+1, r24	; 0x01
				{
					return delay;
    649e:	89 81       	ldd	r24, Y+1	; 0x01
    64a0:	9a 81       	ldd	r25, Y+2	; 0x02
    64a2:	fc 01       	movw	r30, r24
    64a4:	82 81       	ldd	r24, Z+2	; 0x02
    64a6:	93 81       	ldd	r25, Z+3	; 0x03
				}
    64a8:	0f 90       	pop	r0
    64aa:	0f 90       	pop	r0
    64ac:	df 91       	pop	r29
    64ae:	cf 91       	pop	r28
    64b0:	08 95       	ret

000064b2 <_ZN10helicopter5tasks4Task9getPeriodEv>:
				
				int getPeriod()
    64b2:	cf 93       	push	r28
    64b4:	df 93       	push	r29
    64b6:	1f 92       	push	r1
    64b8:	1f 92       	push	r1
    64ba:	cd b7       	in	r28, 0x3d	; 61
    64bc:	de b7       	in	r29, 0x3e	; 62
    64be:	9a 83       	std	Y+2, r25	; 0x02
    64c0:	89 83       	std	Y+1, r24	; 0x01
				{
					return period;
    64c2:	89 81       	ldd	r24, Y+1	; 0x01
    64c4:	9a 81       	ldd	r25, Y+2	; 0x02
    64c6:	fc 01       	movw	r30, r24
    64c8:	84 81       	ldd	r24, Z+4	; 0x04
    64ca:	95 81       	ldd	r25, Z+5	; 0x05
				}
    64cc:	0f 90       	pop	r0
    64ce:	0f 90       	pop	r0
    64d0:	df 91       	pop	r29
    64d2:	cf 91       	pop	r28
    64d4:	08 95       	ret

000064d6 <_ZN10helicopter5tasks4Task8setDelayEi>:
				
				void setDelay(int delay)
    64d6:	cf 93       	push	r28
    64d8:	df 93       	push	r29
    64da:	00 d0       	rcall	.+0      	; 0x64dc <_ZN10helicopter5tasks4Task8setDelayEi+0x6>
    64dc:	1f 92       	push	r1
    64de:	cd b7       	in	r28, 0x3d	; 61
    64e0:	de b7       	in	r29, 0x3e	; 62
    64e2:	9a 83       	std	Y+2, r25	; 0x02
    64e4:	89 83       	std	Y+1, r24	; 0x01
    64e6:	7c 83       	std	Y+4, r23	; 0x04
    64e8:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->delay = delay;
    64ea:	89 81       	ldd	r24, Y+1	; 0x01
    64ec:	9a 81       	ldd	r25, Y+2	; 0x02
    64ee:	2b 81       	ldd	r18, Y+3	; 0x03
    64f0:	3c 81       	ldd	r19, Y+4	; 0x04
    64f2:	fc 01       	movw	r30, r24
    64f4:	33 83       	std	Z+3, r19	; 0x03
    64f6:	22 83       	std	Z+2, r18	; 0x02
				}
    64f8:	0f 90       	pop	r0
    64fa:	0f 90       	pop	r0
    64fc:	0f 90       	pop	r0
    64fe:	0f 90       	pop	r0
    6500:	df 91       	pop	r29
    6502:	cf 91       	pop	r28
    6504:	08 95       	ret

00006506 <_ZN10helicopter5tasks4Task15getIsReadyToRunEv>:
				
				bool getIsReadyToRun()
    6506:	cf 93       	push	r28
    6508:	df 93       	push	r29
    650a:	1f 92       	push	r1
    650c:	1f 92       	push	r1
    650e:	cd b7       	in	r28, 0x3d	; 61
    6510:	de b7       	in	r29, 0x3e	; 62
    6512:	9a 83       	std	Y+2, r25	; 0x02
    6514:	89 83       	std	Y+1, r24	; 0x01
				{
					return isReadyToRun;
    6516:	89 81       	ldd	r24, Y+1	; 0x01
    6518:	9a 81       	ldd	r25, Y+2	; 0x02
    651a:	fc 01       	movw	r30, r24
    651c:	86 81       	ldd	r24, Z+6	; 0x06
				}
    651e:	0f 90       	pop	r0
    6520:	0f 90       	pop	r0
    6522:	df 91       	pop	r29
    6524:	cf 91       	pop	r28
    6526:	08 95       	ret

00006528 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>:
				
				void setIsReadyToRun(bool isReadyToRun)
    6528:	cf 93       	push	r28
    652a:	df 93       	push	r29
    652c:	00 d0       	rcall	.+0      	; 0x652e <_ZN10helicopter5tasks4Task15setIsReadyToRunEb+0x6>
    652e:	cd b7       	in	r28, 0x3d	; 61
    6530:	de b7       	in	r29, 0x3e	; 62
    6532:	9a 83       	std	Y+2, r25	; 0x02
    6534:	89 83       	std	Y+1, r24	; 0x01
    6536:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->isReadyToRun = isReadyToRun;
    6538:	89 81       	ldd	r24, Y+1	; 0x01
    653a:	9a 81       	ldd	r25, Y+2	; 0x02
    653c:	2b 81       	ldd	r18, Y+3	; 0x03
    653e:	fc 01       	movw	r30, r24
    6540:	26 83       	std	Z+6, r18	; 0x06
				}
    6542:	0f 90       	pop	r0
    6544:	0f 90       	pop	r0
    6546:	0f 90       	pop	r0
    6548:	df 91       	pop	r29
    654a:	cf 91       	pop	r28
    654c:	08 95       	ret

0000654e <_ZN10helicopter5tasks4Task11reduceDelayEv>:
				
				/**
				 * Reduces the delay by one tick.
				 */
				void reduceDelay()
    654e:	cf 93       	push	r28
    6550:	df 93       	push	r29
    6552:	1f 92       	push	r1
    6554:	1f 92       	push	r1
    6556:	cd b7       	in	r28, 0x3d	; 61
    6558:	de b7       	in	r29, 0x3e	; 62
    655a:	9a 83       	std	Y+2, r25	; 0x02
    655c:	89 83       	std	Y+1, r24	; 0x01
				{
					delay--;
    655e:	89 81       	ldd	r24, Y+1	; 0x01
    6560:	9a 81       	ldd	r25, Y+2	; 0x02
    6562:	fc 01       	movw	r30, r24
    6564:	82 81       	ldd	r24, Z+2	; 0x02
    6566:	93 81       	ldd	r25, Z+3	; 0x03
    6568:	9c 01       	movw	r18, r24
    656a:	21 50       	subi	r18, 0x01	; 1
    656c:	31 09       	sbc	r19, r1
    656e:	89 81       	ldd	r24, Y+1	; 0x01
    6570:	9a 81       	ldd	r25, Y+2	; 0x02
    6572:	fc 01       	movw	r30, r24
    6574:	33 83       	std	Z+3, r19	; 0x03
    6576:	22 83       	std	Z+2, r18	; 0x02
				}
    6578:	0f 90       	pop	r0
    657a:	0f 90       	pop	r0
    657c:	df 91       	pop	r29
    657e:	cf 91       	pop	r28
    6580:	08 95       	ret

00006582 <_ZN10helicopter9scheduler9Scheduler13getNumOfTasksEv>:
			    /*
				* Starts the timer for determining which tasks are ready to run.
				*/
				void start();
				
				int getNumOfTasks()
    6582:	cf 93       	push	r28
    6584:	df 93       	push	r29
    6586:	1f 92       	push	r1
    6588:	1f 92       	push	r1
    658a:	cd b7       	in	r28, 0x3d	; 61
    658c:	de b7       	in	r29, 0x3e	; 62
    658e:	9a 83       	std	Y+2, r25	; 0x02
    6590:	89 83       	std	Y+1, r24	; 0x01
				{
					return numOfTasks;
    6592:	89 81       	ldd	r24, Y+1	; 0x01
    6594:	9a 81       	ldd	r25, Y+2	; 0x02
    6596:	fc 01       	movw	r30, r24
    6598:	84 89       	ldd	r24, Z+20	; 0x14
    659a:	95 89       	ldd	r25, Z+21	; 0x15
				}
    659c:	0f 90       	pop	r0
    659e:	0f 90       	pop	r0
    65a0:	df 91       	pop	r29
    65a2:	cf 91       	pop	r28
    65a4:	08 95       	ret

000065a6 <_ZN10helicopter9scheduler9Scheduler8getTasksEv>:
				
				Task **getTasks()
    65a6:	cf 93       	push	r28
    65a8:	df 93       	push	r29
    65aa:	1f 92       	push	r1
    65ac:	1f 92       	push	r1
    65ae:	cd b7       	in	r28, 0x3d	; 61
    65b0:	de b7       	in	r29, 0x3e	; 62
    65b2:	9a 83       	std	Y+2, r25	; 0x02
    65b4:	89 83       	std	Y+1, r24	; 0x01
				{
					return tasks;
    65b6:	89 81       	ldd	r24, Y+1	; 0x01
    65b8:	9a 81       	ldd	r25, Y+2	; 0x02
				}
    65ba:	0f 90       	pop	r0
    65bc:	0f 90       	pop	r0
    65be:	df 91       	pop	r29
    65c0:	cf 91       	pop	r28
    65c2:	08 95       	ret

000065c4 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb>:
				/**
				 * Sets whether a blown frame was detected. (I.e. the dispatcher didn't finish before
				 * the scheduler timmer was triggered again)
				 * @param blownFrameDetected true if a frame was blown, false otherwise.
				 */
				void hasBlownFrame(bool blowFrameDetected)
    65c4:	cf 93       	push	r28
    65c6:	df 93       	push	r29
    65c8:	00 d0       	rcall	.+0      	; 0x65ca <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb+0x6>
    65ca:	cd b7       	in	r28, 0x3d	; 61
    65cc:	de b7       	in	r29, 0x3e	; 62
    65ce:	9a 83       	std	Y+2, r25	; 0x02
    65d0:	89 83       	std	Y+1, r24	; 0x01
    65d2:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->blowFrameDetected = blowFrameDetected;
    65d4:	89 81       	ldd	r24, Y+1	; 0x01
    65d6:	9a 81       	ldd	r25, Y+2	; 0x02
    65d8:	2b 81       	ldd	r18, Y+3	; 0x03
    65da:	fc 01       	movw	r30, r24
    65dc:	22 8f       	std	Z+26, r18	; 0x1a
				}
    65de:	0f 90       	pop	r0
    65e0:	0f 90       	pop	r0
    65e2:	0f 90       	pop	r0
    65e4:	df 91       	pop	r29
    65e6:	cf 91       	pop	r28
    65e8:	08 95       	ret

000065ea <_ZN10helicopter9scheduler9Scheduler20hasCompletedDispatchEv>:
				/**
				 * Returns a flag indicating that the dispatch method has completed. This is for
				 * use by the scheduler to determine if the dispatcher blew a frame.
				 * @return true if the dispatch method completed, false otherwise. 
				 */
				bool hasCompletedDispatch()
    65ea:	cf 93       	push	r28
    65ec:	df 93       	push	r29
    65ee:	1f 92       	push	r1
    65f0:	1f 92       	push	r1
    65f2:	cd b7       	in	r28, 0x3d	; 61
    65f4:	de b7       	in	r29, 0x3e	; 62
    65f6:	9a 83       	std	Y+2, r25	; 0x02
    65f8:	89 83       	std	Y+1, r24	; 0x01
				{
					return completedDispatch;
    65fa:	89 81       	ldd	r24, Y+1	; 0x01
    65fc:	9a 81       	ldd	r25, Y+2	; 0x02
    65fe:	fc 01       	movw	r30, r24
    6600:	83 8d       	ldd	r24, Z+27	; 0x1b
				}
    6602:	0f 90       	pop	r0
    6604:	0f 90       	pop	r0
    6606:	df 91       	pop	r29
    6608:	cf 91       	pop	r28
    660a:	08 95       	ret

0000660c <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>:
using namespace helicopter::scheduler;

Scheduler* Scheduler::scheduler = NULL;

Scheduler* Scheduler::getScheduler()
{
    660c:	ef 92       	push	r14
    660e:	ff 92       	push	r15
    6610:	0f 93       	push	r16
    6612:	1f 93       	push	r17
    6614:	cf 93       	push	r28
    6616:	df 93       	push	r29
    6618:	cd b7       	in	r28, 0x3d	; 61
    661a:	de b7       	in	r29, 0x3e	; 62
	if (scheduler == NULL)
    661c:	80 91 a4 02 	lds	r24, 0x02A4
    6620:	90 91 a5 02 	lds	r25, 0x02A5
    6624:	00 97       	sbiw	r24, 0x00	; 0
    6626:	a1 f4       	brne	.+40     	; 0x6650 <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv+0x44>
	{
		scheduler = new Scheduler(F_CPU, PRESCALE_BY_SIXTYFOUR, SCHEDULER_TICK_FREQUENCY_HZ);
    6628:	8c e1       	ldi	r24, 0x1C	; 28
    662a:	90 e0       	ldi	r25, 0x00	; 0
    662c:	0e 94 01 3d 	call	0x7a02	; 0x7a02 <_Znwj>
    6630:	7c 01       	movw	r14, r24
    6632:	06 e4       	ldi	r16, 0x46	; 70
    6634:	10 e0       	ldi	r17, 0x00	; 0
    6636:	20 e4       	ldi	r18, 0x40	; 64
    6638:	30 e0       	ldi	r19, 0x00	; 0
    663a:	40 e0       	ldi	r20, 0x00	; 0
    663c:	54 e2       	ldi	r21, 0x24	; 36
    663e:	64 ef       	ldi	r22, 0xF4	; 244
    6640:	70 e0       	ldi	r23, 0x00	; 0
    6642:	c7 01       	movw	r24, r14
    6644:	0e 94 33 33 	call	0x6666	; 0x6666 <_ZN10helicopter9scheduler9SchedulerC1Em9PRESCALERi>
    6648:	f0 92 a5 02 	sts	0x02A5, r15
    664c:	e0 92 a4 02 	sts	0x02A4, r14
	}

	return scheduler;
    6650:	80 91 a4 02 	lds	r24, 0x02A4
    6654:	90 91 a5 02 	lds	r25, 0x02A5
}
    6658:	df 91       	pop	r29
    665a:	cf 91       	pop	r28
    665c:	1f 91       	pop	r17
    665e:	0f 91       	pop	r16
    6660:	ff 90       	pop	r15
    6662:	ef 90       	pop	r14
    6664:	08 95       	ret

00006666 <_ZN10helicopter9scheduler9SchedulerC1Em9PRESCALERi>:

Scheduler::Scheduler(unsigned long cpuSpeed, PRESCALER prescaler, int schedulerTickFrequencyHz)
    6666:	0f 93       	push	r16
    6668:	1f 93       	push	r17
    666a:	cf 93       	push	r28
    666c:	df 93       	push	r29
    666e:	cd b7       	in	r28, 0x3d	; 61
    6670:	de b7       	in	r29, 0x3e	; 62
    6672:	2a 97       	sbiw	r28, 0x0a	; 10
    6674:	0f b6       	in	r0, 0x3f	; 63
    6676:	f8 94       	cli
    6678:	de bf       	out	0x3e, r29	; 62
    667a:	0f be       	out	0x3f, r0	; 63
    667c:	cd bf       	out	0x3d, r28	; 61
    667e:	9a 83       	std	Y+2, r25	; 0x02
    6680:	89 83       	std	Y+1, r24	; 0x01
    6682:	4b 83       	std	Y+3, r20	; 0x03
    6684:	5c 83       	std	Y+4, r21	; 0x04
    6686:	6d 83       	std	Y+5, r22	; 0x05
    6688:	7e 83       	std	Y+6, r23	; 0x06
    668a:	38 87       	std	Y+8, r19	; 0x08
    668c:	2f 83       	std	Y+7, r18	; 0x07
    668e:	1a 87       	std	Y+10, r17	; 0x0a
    6690:	09 87       	std	Y+9, r16	; 0x09
{
	targetTimerCount =  ((cpuSpeed / prescaler) / schedulerTickFrequencyHz);
    6692:	8f 81       	ldd	r24, Y+7	; 0x07
    6694:	98 85       	ldd	r25, Y+8	; 0x08
    6696:	9c 01       	movw	r18, r24
    6698:	44 27       	eor	r20, r20
    669a:	37 fd       	sbrc	r19, 7
    669c:	40 95       	com	r20
    669e:	54 2f       	mov	r21, r20
    66a0:	8b 81       	ldd	r24, Y+3	; 0x03
    66a2:	9c 81       	ldd	r25, Y+4	; 0x04
    66a4:	ad 81       	ldd	r26, Y+5	; 0x05
    66a6:	be 81       	ldd	r27, Y+6	; 0x06
    66a8:	bc 01       	movw	r22, r24
    66aa:	cd 01       	movw	r24, r26
    66ac:	0e 94 76 47 	call	0x8eec	; 0x8eec <__udivmodsi4>
    66b0:	da 01       	movw	r26, r20
    66b2:	c9 01       	movw	r24, r18
    66b4:	29 85       	ldd	r18, Y+9	; 0x09
    66b6:	3a 85       	ldd	r19, Y+10	; 0x0a
    66b8:	44 27       	eor	r20, r20
    66ba:	37 fd       	sbrc	r19, 7
    66bc:	40 95       	com	r20
    66be:	54 2f       	mov	r21, r20
    66c0:	bc 01       	movw	r22, r24
    66c2:	cd 01       	movw	r24, r26
    66c4:	0e 94 76 47 	call	0x8eec	; 0x8eec <__udivmodsi4>
    66c8:	da 01       	movw	r26, r20
    66ca:	c9 01       	movw	r24, r18
    66cc:	9c 01       	movw	r18, r24
    66ce:	89 81       	ldd	r24, Y+1	; 0x01
    66d0:	9a 81       	ldd	r25, Y+2	; 0x02
    66d2:	fc 01       	movw	r30, r24
    66d4:	37 8b       	std	Z+23, r19	; 0x17
    66d6:	26 8b       	std	Z+22, r18	; 0x16
	
	//Calculate the timer value to achieve the desired frequency. 
	this->targetTimerCount = targetTimerCount;
    66d8:	89 81       	ldd	r24, Y+1	; 0x01
    66da:	9a 81       	ldd	r25, Y+2	; 0x02
    66dc:	fc 01       	movw	r30, r24
    66de:	26 89       	ldd	r18, Z+22	; 0x16
    66e0:	37 89       	ldd	r19, Z+23	; 0x17
    66e2:	89 81       	ldd	r24, Y+1	; 0x01
    66e4:	9a 81       	ldd	r25, Y+2	; 0x02
    66e6:	fc 01       	movw	r30, r24
    66e8:	37 8b       	std	Z+23, r19	; 0x17
    66ea:	26 8b       	std	Z+22, r18	; 0x16

	this->prescaler = prescaler;
    66ec:	89 81       	ldd	r24, Y+1	; 0x01
    66ee:	9a 81       	ldd	r25, Y+2	; 0x02
    66f0:	2f 81       	ldd	r18, Y+7	; 0x07
    66f2:	38 85       	ldd	r19, Y+8	; 0x08
    66f4:	fc 01       	movw	r30, r24
    66f6:	31 8f       	std	Z+25, r19	; 0x19
    66f8:	20 8f       	std	Z+24, r18	; 0x18
	
	numOfTasks = 0;
    66fa:	89 81       	ldd	r24, Y+1	; 0x01
    66fc:	9a 81       	ldd	r25, Y+2	; 0x02
    66fe:	fc 01       	movw	r30, r24
    6700:	15 8a       	std	Z+21, r1	; 0x15
    6702:	14 8a       	std	Z+20, r1	; 0x14
	
	blowFrameDetected = false;
    6704:	89 81       	ldd	r24, Y+1	; 0x01
    6706:	9a 81       	ldd	r25, Y+2	; 0x02
    6708:	fc 01       	movw	r30, r24
    670a:	12 8e       	std	Z+26, r1	; 0x1a
	
	completedDispatch = true;
    670c:	89 81       	ldd	r24, Y+1	; 0x01
    670e:	9a 81       	ldd	r25, Y+2	; 0x02
    6710:	21 e0       	ldi	r18, 0x01	; 1
    6712:	fc 01       	movw	r30, r24
    6714:	23 8f       	std	Z+27, r18	; 0x1b
}
    6716:	2a 96       	adiw	r28, 0x0a	; 10
    6718:	0f b6       	in	r0, 0x3f	; 63
    671a:	f8 94       	cli
    671c:	de bf       	out	0x3e, r29	; 62
    671e:	0f be       	out	0x3f, r0	; 63
    6720:	cd bf       	out	0x3d, r28	; 61
    6722:	df 91       	pop	r29
    6724:	cf 91       	pop	r28
    6726:	1f 91       	pop	r17
    6728:	0f 91       	pop	r16
    672a:	08 95       	ret

0000672c <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>:
	
	numOfTasks = 0;
}

int Scheduler::addTask(Task *task)
{
    672c:	cf 93       	push	r28
    672e:	df 93       	push	r29
    6730:	00 d0       	rcall	.+0      	; 0x6732 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x6>
    6732:	1f 92       	push	r1
    6734:	cd b7       	in	r28, 0x3d	; 61
    6736:	de b7       	in	r29, 0x3e	; 62
    6738:	9a 83       	std	Y+2, r25	; 0x02
    673a:	89 83       	std	Y+1, r24	; 0x01
    673c:	7c 83       	std	Y+4, r23	; 0x04
    673e:	6b 83       	std	Y+3, r22	; 0x03
	if (numOfTasks < MAXNUMOFTASKS)
    6740:	89 81       	ldd	r24, Y+1	; 0x01
    6742:	9a 81       	ldd	r25, Y+2	; 0x02
    6744:	fc 01       	movw	r30, r24
    6746:	84 89       	ldd	r24, Z+20	; 0x14
    6748:	95 89       	ldd	r25, Z+21	; 0x15
    674a:	8a 30       	cpi	r24, 0x0A	; 10
    674c:	91 05       	cpc	r25, r1
    674e:	04 f5       	brge	.+64     	; 0x6790 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x64>
	{
		tasks[numOfTasks] = task;
    6750:	89 81       	ldd	r24, Y+1	; 0x01
    6752:	9a 81       	ldd	r25, Y+2	; 0x02
    6754:	fc 01       	movw	r30, r24
    6756:	84 89       	ldd	r24, Z+20	; 0x14
    6758:	95 89       	ldd	r25, Z+21	; 0x15
    675a:	29 81       	ldd	r18, Y+1	; 0x01
    675c:	3a 81       	ldd	r19, Y+2	; 0x02
    675e:	88 0f       	add	r24, r24
    6760:	99 1f       	adc	r25, r25
    6762:	82 0f       	add	r24, r18
    6764:	93 1f       	adc	r25, r19
    6766:	2b 81       	ldd	r18, Y+3	; 0x03
    6768:	3c 81       	ldd	r19, Y+4	; 0x04
    676a:	fc 01       	movw	r30, r24
    676c:	31 83       	std	Z+1, r19	; 0x01
    676e:	20 83       	st	Z, r18
		numOfTasks++;
    6770:	89 81       	ldd	r24, Y+1	; 0x01
    6772:	9a 81       	ldd	r25, Y+2	; 0x02
    6774:	fc 01       	movw	r30, r24
    6776:	84 89       	ldd	r24, Z+20	; 0x14
    6778:	95 89       	ldd	r25, Z+21	; 0x15
    677a:	9c 01       	movw	r18, r24
    677c:	2f 5f       	subi	r18, 0xFF	; 255
    677e:	3f 4f       	sbci	r19, 0xFF	; 255
    6780:	89 81       	ldd	r24, Y+1	; 0x01
    6782:	9a 81       	ldd	r25, Y+2	; 0x02
    6784:	fc 01       	movw	r30, r24
    6786:	35 8b       	std	Z+21, r19	; 0x15
    6788:	24 8b       	std	Z+20, r18	; 0x14
		
		return 0;
    678a:	80 e0       	ldi	r24, 0x00	; 0
    678c:	90 e0       	ldi	r25, 0x00	; 0
    678e:	02 c0       	rjmp	.+4      	; 0x6794 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x68>
	}

	return -1;
    6790:	8f ef       	ldi	r24, 0xFF	; 255
    6792:	9f ef       	ldi	r25, 0xFF	; 255
}
    6794:	0f 90       	pop	r0
    6796:	0f 90       	pop	r0
    6798:	0f 90       	pop	r0
    679a:	0f 90       	pop	r0
    679c:	df 91       	pop	r29
    679e:	cf 91       	pop	r28
    67a0:	08 95       	ret

000067a2 <_ZN10helicopter9scheduler9Scheduler4initEv>:

void Scheduler::init()
{
    67a2:	cf 93       	push	r28
    67a4:	df 93       	push	r29
    67a6:	00 d0       	rcall	.+0      	; 0x67a8 <_ZN10helicopter9scheduler9Scheduler4initEv+0x6>
    67a8:	1f 92       	push	r1
    67aa:	cd b7       	in	r28, 0x3d	; 61
    67ac:	de b7       	in	r29, 0x3e	; 62
    67ae:	9c 83       	std	Y+4, r25	; 0x04
    67b0:	8b 83       	std	Y+3, r24	; 0x03
	for (int i = 0; i < numOfTasks; i++)
    67b2:	1a 82       	std	Y+2, r1	; 0x02
    67b4:	19 82       	std	Y+1, r1	; 0x01
    67b6:	24 c0       	rjmp	.+72     	; 0x6800 <_ZN10helicopter9scheduler9Scheduler4initEv+0x5e>
	{
		tasks[i]->init();
    67b8:	2b 81       	ldd	r18, Y+3	; 0x03
    67ba:	3c 81       	ldd	r19, Y+4	; 0x04
    67bc:	89 81       	ldd	r24, Y+1	; 0x01
    67be:	9a 81       	ldd	r25, Y+2	; 0x02
    67c0:	88 0f       	add	r24, r24
    67c2:	99 1f       	adc	r25, r25
    67c4:	82 0f       	add	r24, r18
    67c6:	93 1f       	adc	r25, r19
    67c8:	fc 01       	movw	r30, r24
    67ca:	80 81       	ld	r24, Z
    67cc:	91 81       	ldd	r25, Z+1	; 0x01
    67ce:	fc 01       	movw	r30, r24
    67d0:	80 81       	ld	r24, Z
    67d2:	91 81       	ldd	r25, Z+1	; 0x01
    67d4:	06 96       	adiw	r24, 0x06	; 6
    67d6:	fc 01       	movw	r30, r24
    67d8:	20 81       	ld	r18, Z
    67da:	31 81       	ldd	r19, Z+1	; 0x01
    67dc:	4b 81       	ldd	r20, Y+3	; 0x03
    67de:	5c 81       	ldd	r21, Y+4	; 0x04
    67e0:	89 81       	ldd	r24, Y+1	; 0x01
    67e2:	9a 81       	ldd	r25, Y+2	; 0x02
    67e4:	88 0f       	add	r24, r24
    67e6:	99 1f       	adc	r25, r25
    67e8:	84 0f       	add	r24, r20
    67ea:	95 1f       	adc	r25, r21
    67ec:	fc 01       	movw	r30, r24
    67ee:	80 81       	ld	r24, Z
    67f0:	91 81       	ldd	r25, Z+1	; 0x01
    67f2:	f9 01       	movw	r30, r18
    67f4:	19 95       	eicall
	return -1;
}

void Scheduler::init()
{
	for (int i = 0; i < numOfTasks; i++)
    67f6:	89 81       	ldd	r24, Y+1	; 0x01
    67f8:	9a 81       	ldd	r25, Y+2	; 0x02
    67fa:	01 96       	adiw	r24, 0x01	; 1
    67fc:	9a 83       	std	Y+2, r25	; 0x02
    67fe:	89 83       	std	Y+1, r24	; 0x01
    6800:	8b 81       	ldd	r24, Y+3	; 0x03
    6802:	9c 81       	ldd	r25, Y+4	; 0x04
    6804:	fc 01       	movw	r30, r24
    6806:	24 89       	ldd	r18, Z+20	; 0x14
    6808:	35 89       	ldd	r19, Z+21	; 0x15
    680a:	41 e0       	ldi	r20, 0x01	; 1
    680c:	89 81       	ldd	r24, Y+1	; 0x01
    680e:	9a 81       	ldd	r25, Y+2	; 0x02
    6810:	82 17       	cp	r24, r18
    6812:	93 07       	cpc	r25, r19
    6814:	0c f0       	brlt	.+2      	; 0x6818 <_ZN10helicopter9scheduler9Scheduler4initEv+0x76>
    6816:	40 e0       	ldi	r20, 0x00	; 0
    6818:	44 23       	and	r20, r20
    681a:	71 f6       	brne	.-100    	; 0x67b8 <_ZN10helicopter9scheduler9Scheduler4initEv+0x16>
	{
		tasks[i]->init();
	}
	
	//setup timer
	OCR1A = targetTimerCount; //Set Clear Timer on Compare (auto reset) (CTC)
    681c:	88 e8       	ldi	r24, 0x88	; 136
    681e:	90 e0       	ldi	r25, 0x00	; 0
    6820:	2b 81       	ldd	r18, Y+3	; 0x03
    6822:	3c 81       	ldd	r19, Y+4	; 0x04
    6824:	f9 01       	movw	r30, r18
    6826:	26 89       	ldd	r18, Z+22	; 0x16
    6828:	37 89       	ldd	r19, Z+23	; 0x17
    682a:	fc 01       	movw	r30, r24
    682c:	31 83       	std	Z+1, r19	; 0x01
    682e:	20 83       	st	Z, r18
		
	TCCR1B |= (1 << WGM12); //Configure timer 1 for ctc mode
    6830:	81 e8       	ldi	r24, 0x81	; 129
    6832:	90 e0       	ldi	r25, 0x00	; 0
    6834:	21 e8       	ldi	r18, 0x81	; 129
    6836:	30 e0       	ldi	r19, 0x00	; 0
    6838:	f9 01       	movw	r30, r18
    683a:	20 81       	ld	r18, Z
    683c:	28 60       	ori	r18, 0x08	; 8
    683e:	fc 01       	movw	r30, r24
    6840:	20 83       	st	Z, r18
		
	TIMSK1 |= (1 << OCIE1A); //enable ctc interrupt
    6842:	8f e6       	ldi	r24, 0x6F	; 111
    6844:	90 e0       	ldi	r25, 0x00	; 0
    6846:	2f e6       	ldi	r18, 0x6F	; 111
    6848:	30 e0       	ldi	r19, 0x00	; 0
    684a:	f9 01       	movw	r30, r18
    684c:	20 81       	ld	r18, Z
    684e:	22 60       	ori	r18, 0x02	; 2
    6850:	fc 01       	movw	r30, r24
    6852:	20 83       	st	Z, r18
		
	sei(); //Enable global interrupts
    6854:	78 94       	sei
}
    6856:	0f 90       	pop	r0
    6858:	0f 90       	pop	r0
    685a:	0f 90       	pop	r0
    685c:	0f 90       	pop	r0
    685e:	df 91       	pop	r29
    6860:	cf 91       	pop	r28
    6862:	08 95       	ret

00006864 <_ZN10helicopter9scheduler9Scheduler8dispatchEv>:

void Scheduler::dispatch()
{
    6864:	cf 93       	push	r28
    6866:	df 93       	push	r29
    6868:	00 d0       	rcall	.+0      	; 0x686a <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x6>
    686a:	00 d0       	rcall	.+0      	; 0x686c <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x8>
    686c:	cd b7       	in	r28, 0x3d	; 61
    686e:	de b7       	in	r29, 0x3e	; 62
    6870:	9e 83       	std	Y+6, r25	; 0x06
    6872:	8d 83       	std	Y+5, r24	; 0x05
	completedDispatch = false;
    6874:	8d 81       	ldd	r24, Y+5	; 0x05
    6876:	9e 81       	ldd	r25, Y+6	; 0x06
    6878:	fc 01       	movw	r30, r24
    687a:	13 8e       	std	Z+27, r1	; 0x1b
	blowFrameDetected = false;
    687c:	8d 81       	ldd	r24, Y+5	; 0x05
    687e:	9e 81       	ldd	r25, Y+6	; 0x06
    6880:	fc 01       	movw	r30, r24
    6882:	12 8e       	std	Z+26, r1	; 0x1a
	
	Task *task = NULL;
    6884:	1c 82       	std	Y+4, r1	; 0x04
    6886:	1b 82       	std	Y+3, r1	; 0x03
		
	for (int i = 0; i < numOfTasks; i++)
    6888:	1a 82       	std	Y+2, r1	; 0x02
    688a:	19 82       	std	Y+1, r1	; 0x01
    688c:	2a c0       	rjmp	.+84     	; 0x68e2 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x7e>
	{
		task = tasks[i];
    688e:	2d 81       	ldd	r18, Y+5	; 0x05
    6890:	3e 81       	ldd	r19, Y+6	; 0x06
    6892:	89 81       	ldd	r24, Y+1	; 0x01
    6894:	9a 81       	ldd	r25, Y+2	; 0x02
    6896:	88 0f       	add	r24, r24
    6898:	99 1f       	adc	r25, r25
    689a:	82 0f       	add	r24, r18
    689c:	93 1f       	adc	r25, r19
    689e:	fc 01       	movw	r30, r24
    68a0:	80 81       	ld	r24, Z
    68a2:	91 81       	ldd	r25, Z+1	; 0x01
    68a4:	9c 83       	std	Y+4, r25	; 0x04
    68a6:	8b 83       	std	Y+3, r24	; 0x03
		
		if (task->getIsReadyToRun())
    68a8:	8b 81       	ldd	r24, Y+3	; 0x03
    68aa:	9c 81       	ldd	r25, Y+4	; 0x04
    68ac:	0e 94 83 32 	call	0x6506	; 0x6506 <_ZN10helicopter5tasks4Task15getIsReadyToRunEv>
    68b0:	88 23       	and	r24, r24
    68b2:	91 f0       	breq	.+36     	; 0x68d8 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x74>
		{
			task->setIsReadyToRun(false);
    68b4:	8b 81       	ldd	r24, Y+3	; 0x03
    68b6:	9c 81       	ldd	r25, Y+4	; 0x04
    68b8:	60 e0       	ldi	r22, 0x00	; 0
    68ba:	0e 94 94 32 	call	0x6528	; 0x6528 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>
			task->runTask();
    68be:	8b 81       	ldd	r24, Y+3	; 0x03
    68c0:	9c 81       	ldd	r25, Y+4	; 0x04
    68c2:	fc 01       	movw	r30, r24
    68c4:	80 81       	ld	r24, Z
    68c6:	91 81       	ldd	r25, Z+1	; 0x01
    68c8:	08 96       	adiw	r24, 0x08	; 8
    68ca:	fc 01       	movw	r30, r24
    68cc:	20 81       	ld	r18, Z
    68ce:	31 81       	ldd	r19, Z+1	; 0x01
    68d0:	8b 81       	ldd	r24, Y+3	; 0x03
    68d2:	9c 81       	ldd	r25, Y+4	; 0x04
    68d4:	f9 01       	movw	r30, r18
    68d6:	19 95       	eicall
	completedDispatch = false;
	blowFrameDetected = false;
	
	Task *task = NULL;
		
	for (int i = 0; i < numOfTasks; i++)
    68d8:	89 81       	ldd	r24, Y+1	; 0x01
    68da:	9a 81       	ldd	r25, Y+2	; 0x02
    68dc:	01 96       	adiw	r24, 0x01	; 1
    68de:	9a 83       	std	Y+2, r25	; 0x02
    68e0:	89 83       	std	Y+1, r24	; 0x01
    68e2:	8d 81       	ldd	r24, Y+5	; 0x05
    68e4:	9e 81       	ldd	r25, Y+6	; 0x06
    68e6:	fc 01       	movw	r30, r24
    68e8:	24 89       	ldd	r18, Z+20	; 0x14
    68ea:	35 89       	ldd	r19, Z+21	; 0x15
    68ec:	41 e0       	ldi	r20, 0x01	; 1
    68ee:	89 81       	ldd	r24, Y+1	; 0x01
    68f0:	9a 81       	ldd	r25, Y+2	; 0x02
    68f2:	82 17       	cp	r24, r18
    68f4:	93 07       	cpc	r25, r19
    68f6:	0c f0       	brlt	.+2      	; 0x68fa <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x96>
    68f8:	40 e0       	ldi	r20, 0x00	; 0
    68fa:	44 23       	and	r20, r20
    68fc:	41 f6       	brne	.-112    	; 0x688e <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x2a>
	/*if ((TIFR1 & (1<<OCF1A)) != 0)
	{
		model->SystemModel->
	}*/
	
	completedDispatch = true;
    68fe:	8d 81       	ldd	r24, Y+5	; 0x05
    6900:	9e 81       	ldd	r25, Y+6	; 0x06
    6902:	21 e0       	ldi	r18, 0x01	; 1
    6904:	fc 01       	movw	r30, r24
    6906:	23 8f       	std	Z+27, r18	; 0x1b
	
	//tells the processor to goto sleep to conserve power since no more
	//tasks are scheduled to be run until after the next scheduler interrupt(tick)
	//which will then wake the processor back up.
	set_sleep_mode(SLEEP_MODE_IDLE);
    6908:	83 e5       	ldi	r24, 0x53	; 83
    690a:	90 e0       	ldi	r25, 0x00	; 0
    690c:	23 e5       	ldi	r18, 0x53	; 83
    690e:	30 e0       	ldi	r19, 0x00	; 0
    6910:	f9 01       	movw	r30, r18
    6912:	20 81       	ld	r18, Z
    6914:	21 7f       	andi	r18, 0xF1	; 241
    6916:	fc 01       	movw	r30, r24
    6918:	20 83       	st	Z, r18
	sleep_mode();
    691a:	83 e5       	ldi	r24, 0x53	; 83
    691c:	90 e0       	ldi	r25, 0x00	; 0
    691e:	23 e5       	ldi	r18, 0x53	; 83
    6920:	30 e0       	ldi	r19, 0x00	; 0
    6922:	f9 01       	movw	r30, r18
    6924:	20 81       	ld	r18, Z
    6926:	21 60       	ori	r18, 0x01	; 1
    6928:	fc 01       	movw	r30, r24
    692a:	20 83       	st	Z, r18
    692c:	88 95       	sleep
    692e:	83 e5       	ldi	r24, 0x53	; 83
    6930:	90 e0       	ldi	r25, 0x00	; 0
    6932:	23 e5       	ldi	r18, 0x53	; 83
    6934:	30 e0       	ldi	r19, 0x00	; 0
    6936:	f9 01       	movw	r30, r18
    6938:	20 81       	ld	r18, Z
    693a:	2e 7f       	andi	r18, 0xFE	; 254
    693c:	fc 01       	movw	r30, r24
    693e:	20 83       	st	Z, r18
}
    6940:	26 96       	adiw	r28, 0x06	; 6
    6942:	0f b6       	in	r0, 0x3f	; 63
    6944:	f8 94       	cli
    6946:	de bf       	out	0x3e, r29	; 62
    6948:	0f be       	out	0x3f, r0	; 63
    694a:	cd bf       	out	0x3d, r28	; 61
    694c:	df 91       	pop	r29
    694e:	cf 91       	pop	r28
    6950:	08 95       	ret

00006952 <_ZN10helicopter9scheduler9Scheduler5startEv>:

void Scheduler::start()
{
    6952:	cf 93       	push	r28
    6954:	df 93       	push	r29
    6956:	1f 92       	push	r1
    6958:	1f 92       	push	r1
    695a:	cd b7       	in	r28, 0x3d	; 61
    695c:	de b7       	in	r29, 0x3e	; 62
    695e:	9a 83       	std	Y+2, r25	; 0x02
    6960:	89 83       	std	Y+1, r24	; 0x01
	//Setting TCCR to a prescaler will start the timer.
	switch(this->prescaler)
    6962:	89 81       	ldd	r24, Y+1	; 0x01
    6964:	9a 81       	ldd	r25, Y+2	; 0x02
    6966:	fc 01       	movw	r30, r24
    6968:	80 8d       	ldd	r24, Z+24	; 0x18
    696a:	91 8d       	ldd	r25, Z+25	; 0x19
    696c:	80 34       	cpi	r24, 0x40	; 64
    696e:	91 05       	cpc	r25, r1
    6970:	39 f1       	breq	.+78     	; 0x69c0 <_ZN10helicopter9scheduler9Scheduler5startEv+0x6e>
    6972:	81 34       	cpi	r24, 0x41	; 65
    6974:	91 05       	cpc	r25, r1
    6976:	3c f4       	brge	.+14     	; 0x6986 <_ZN10helicopter9scheduler9Scheduler5startEv+0x34>
    6978:	81 30       	cpi	r24, 0x01	; 1
    697a:	91 05       	cpc	r25, r1
    697c:	69 f0       	breq	.+26     	; 0x6998 <_ZN10helicopter9scheduler9Scheduler5startEv+0x46>
    697e:	88 30       	cpi	r24, 0x08	; 8
    6980:	91 05       	cpc	r25, r1
    6982:	a1 f0       	breq	.+40     	; 0x69ac <_ZN10helicopter9scheduler9Scheduler5startEv+0x5a>
    6984:	3b c0       	rjmp	.+118    	; 0x69fc <_ZN10helicopter9scheduler9Scheduler5startEv+0xaa>
    6986:	81 15       	cp	r24, r1
    6988:	f1 e0       	ldi	r31, 0x01	; 1
    698a:	9f 07       	cpc	r25, r31
    698c:	19 f1       	breq	.+70     	; 0x69d4 <_ZN10helicopter9scheduler9Scheduler5startEv+0x82>
    698e:	81 15       	cp	r24, r1
    6990:	24 e0       	ldi	r18, 0x04	; 4
    6992:	92 07       	cpc	r25, r18
    6994:	49 f1       	breq	.+82     	; 0x69e8 <_ZN10helicopter9scheduler9Scheduler5startEv+0x96>
    6996:	32 c0       	rjmp	.+100    	; 0x69fc <_ZN10helicopter9scheduler9Scheduler5startEv+0xaa>
	{
		case 1:
			TCCR1B |= NoPrescaling;
    6998:	81 e8       	ldi	r24, 0x81	; 129
    699a:	90 e0       	ldi	r25, 0x00	; 0
    699c:	21 e8       	ldi	r18, 0x81	; 129
    699e:	30 e0       	ldi	r19, 0x00	; 0
    69a0:	f9 01       	movw	r30, r18
    69a2:	20 81       	ld	r18, Z
    69a4:	21 60       	ori	r18, 0x01	; 1
    69a6:	fc 01       	movw	r30, r24
    69a8:	20 83       	st	Z, r18
			break;
    69aa:	31 c0       	rjmp	.+98     	; 0x6a0e <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 8:
			TCCR1B |= PrescaleByEight;
    69ac:	81 e8       	ldi	r24, 0x81	; 129
    69ae:	90 e0       	ldi	r25, 0x00	; 0
    69b0:	21 e8       	ldi	r18, 0x81	; 129
    69b2:	30 e0       	ldi	r19, 0x00	; 0
    69b4:	f9 01       	movw	r30, r18
    69b6:	20 81       	ld	r18, Z
    69b8:	22 60       	ori	r18, 0x02	; 2
    69ba:	fc 01       	movw	r30, r24
    69bc:	20 83       	st	Z, r18
			break;
    69be:	27 c0       	rjmp	.+78     	; 0x6a0e <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 64:
			TCCR1B |= PrescaleBySixtyFour;
    69c0:	81 e8       	ldi	r24, 0x81	; 129
    69c2:	90 e0       	ldi	r25, 0x00	; 0
    69c4:	21 e8       	ldi	r18, 0x81	; 129
    69c6:	30 e0       	ldi	r19, 0x00	; 0
    69c8:	f9 01       	movw	r30, r18
    69ca:	20 81       	ld	r18, Z
    69cc:	23 60       	ori	r18, 0x03	; 3
    69ce:	fc 01       	movw	r30, r24
    69d0:	20 83       	st	Z, r18
			break;
    69d2:	1d c0       	rjmp	.+58     	; 0x6a0e <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 256:
			TCCR1B |= PrescaleByTwofiftysix;
    69d4:	81 e8       	ldi	r24, 0x81	; 129
    69d6:	90 e0       	ldi	r25, 0x00	; 0
    69d8:	21 e8       	ldi	r18, 0x81	; 129
    69da:	30 e0       	ldi	r19, 0x00	; 0
    69dc:	f9 01       	movw	r30, r18
    69de:	20 81       	ld	r18, Z
    69e0:	24 60       	ori	r18, 0x04	; 4
    69e2:	fc 01       	movw	r30, r24
    69e4:	20 83       	st	Z, r18
			break;
    69e6:	13 c0       	rjmp	.+38     	; 0x6a0e <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 1024:
			TCCR1B |= PrescaleByTentwentyfour;
    69e8:	81 e8       	ldi	r24, 0x81	; 129
    69ea:	90 e0       	ldi	r25, 0x00	; 0
    69ec:	21 e8       	ldi	r18, 0x81	; 129
    69ee:	30 e0       	ldi	r19, 0x00	; 0
    69f0:	f9 01       	movw	r30, r18
    69f2:	20 81       	ld	r18, Z
    69f4:	25 60       	ori	r18, 0x05	; 5
    69f6:	fc 01       	movw	r30, r24
    69f8:	20 83       	st	Z, r18
			break;
    69fa:	09 c0       	rjmp	.+18     	; 0x6a0e <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		default:
			TCCR1B |= NoPrescaling;	
    69fc:	81 e8       	ldi	r24, 0x81	; 129
    69fe:	90 e0       	ldi	r25, 0x00	; 0
    6a00:	21 e8       	ldi	r18, 0x81	; 129
    6a02:	30 e0       	ldi	r19, 0x00	; 0
    6a04:	f9 01       	movw	r30, r18
    6a06:	20 81       	ld	r18, Z
    6a08:	21 60       	ori	r18, 0x01	; 1
    6a0a:	fc 01       	movw	r30, r24
    6a0c:	20 83       	st	Z, r18
	}
}
    6a0e:	0f 90       	pop	r0
    6a10:	0f 90       	pop	r0
    6a12:	df 91       	pop	r29
    6a14:	cf 91       	pop	r28
    6a16:	08 95       	ret

00006a18 <__vector_17>:

/**
 * Interrupt service routine for determining when tasks are ready to execute.
 */
ISR(TIMER1_COMPA_vect)
{
    6a18:	1f 92       	push	r1
    6a1a:	0f 92       	push	r0
    6a1c:	00 90 5f 00 	lds	r0, 0x005F
    6a20:	0f 92       	push	r0
    6a22:	11 24       	eor	r1, r1
    6a24:	00 90 5b 00 	lds	r0, 0x005B
    6a28:	0f 92       	push	r0
    6a2a:	2f 93       	push	r18
    6a2c:	3f 93       	push	r19
    6a2e:	4f 93       	push	r20
    6a30:	5f 93       	push	r21
    6a32:	6f 93       	push	r22
    6a34:	7f 93       	push	r23
    6a36:	8f 93       	push	r24
    6a38:	9f 93       	push	r25
    6a3a:	af 93       	push	r26
    6a3c:	bf 93       	push	r27
    6a3e:	ef 93       	push	r30
    6a40:	ff 93       	push	r31
    6a42:	cf 93       	push	r28
    6a44:	df 93       	push	r29
    6a46:	00 d0       	rcall	.+0      	; 0x6a48 <__vector_17+0x30>
    6a48:	00 d0       	rcall	.+0      	; 0x6a4a <__vector_17+0x32>
    6a4a:	cd b7       	in	r28, 0x3d	; 61
    6a4c:	de b7       	in	r29, 0x3e	; 62
	//TODO do we want to stop interrupts in this method?
	Scheduler *scheduler = Scheduler::getScheduler();
    6a4e:	0e 94 06 33 	call	0x660c	; 0x660c <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>
    6a52:	9c 83       	std	Y+4, r25	; 0x04
    6a54:	8b 83       	std	Y+3, r24	; 0x03
	
	//Detect if the scheduler blew a frame
	if (!scheduler->hasCompletedDispatch())
    6a56:	8b 81       	ldd	r24, Y+3	; 0x03
    6a58:	9c 81       	ldd	r25, Y+4	; 0x04
    6a5a:	0e 94 f5 32 	call	0x65ea	; 0x65ea <_ZN10helicopter9scheduler9Scheduler20hasCompletedDispatchEv>
    6a5e:	98 2f       	mov	r25, r24
    6a60:	81 e0       	ldi	r24, 0x01	; 1
    6a62:	89 27       	eor	r24, r25
    6a64:	88 23       	and	r24, r24
    6a66:	29 f0       	breq	.+10     	; 0x6a72 <__vector_17+0x5a>
	{
		scheduler->hasBlownFrame(true);
    6a68:	8b 81       	ldd	r24, Y+3	; 0x03
    6a6a:	9c 81       	ldd	r25, Y+4	; 0x04
    6a6c:	61 e0       	ldi	r22, 0x01	; 1
    6a6e:	0e 94 e2 32 	call	0x65c4	; 0x65c4 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb>
	}
	
	Task *task = NULL;
    6a72:	1e 82       	std	Y+6, r1	; 0x06
    6a74:	1d 82       	std	Y+5, r1	; 0x05
	
	//iterate through all the tasks and decrement how many
	//'ticks' are left before the task is ready to execute.
	for (int i = 0; i < scheduler->getNumOfTasks(); i++)
    6a76:	1a 82       	std	Y+2, r1	; 0x02
    6a78:	19 82       	std	Y+1, r1	; 0x01
    6a7a:	33 c0       	rjmp	.+102    	; 0x6ae2 <__vector_17+0xca>
	{
		task = scheduler->getTasks()[i];
    6a7c:	8b 81       	ldd	r24, Y+3	; 0x03
    6a7e:	9c 81       	ldd	r25, Y+4	; 0x04
    6a80:	0e 94 d3 32 	call	0x65a6	; 0x65a6 <_ZN10helicopter9scheduler9Scheduler8getTasksEv>
    6a84:	9c 01       	movw	r18, r24
    6a86:	89 81       	ldd	r24, Y+1	; 0x01
    6a88:	9a 81       	ldd	r25, Y+2	; 0x02
    6a8a:	88 0f       	add	r24, r24
    6a8c:	99 1f       	adc	r25, r25
    6a8e:	82 0f       	add	r24, r18
    6a90:	93 1f       	adc	r25, r19
    6a92:	fc 01       	movw	r30, r24
    6a94:	80 81       	ld	r24, Z
    6a96:	91 81       	ldd	r25, Z+1	; 0x01
    6a98:	9e 83       	std	Y+6, r25	; 0x06
    6a9a:	8d 83       	std	Y+5, r24	; 0x05
		
		if (task->getDelay() == 0)
    6a9c:	8d 81       	ldd	r24, Y+5	; 0x05
    6a9e:	9e 81       	ldd	r25, Y+6	; 0x06
    6aa0:	0e 94 47 32 	call	0x648e	; 0x648e <_ZN10helicopter5tasks4Task8getDelayEv>
    6aa4:	21 e0       	ldi	r18, 0x01	; 1
    6aa6:	00 97       	sbiw	r24, 0x00	; 0
    6aa8:	09 f0       	breq	.+2      	; 0x6aac <__vector_17+0x94>
    6aaa:	20 e0       	ldi	r18, 0x00	; 0
    6aac:	22 23       	and	r18, r18
    6aae:	81 f0       	breq	.+32     	; 0x6ad0 <__vector_17+0xb8>
		{
			//Mark the task as ready to run
			task->setIsReadyToRun(true);
    6ab0:	8d 81       	ldd	r24, Y+5	; 0x05
    6ab2:	9e 81       	ldd	r25, Y+6	; 0x06
    6ab4:	61 e0       	ldi	r22, 0x01	; 1
    6ab6:	0e 94 94 32 	call	0x6528	; 0x6528 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>
			task->setDelay(task->getPeriod());
    6aba:	8d 81       	ldd	r24, Y+5	; 0x05
    6abc:	9e 81       	ldd	r25, Y+6	; 0x06
    6abe:	0e 94 59 32 	call	0x64b2	; 0x64b2 <_ZN10helicopter5tasks4Task9getPeriodEv>
    6ac2:	9c 01       	movw	r18, r24
    6ac4:	8d 81       	ldd	r24, Y+5	; 0x05
    6ac6:	9e 81       	ldd	r25, Y+6	; 0x06
    6ac8:	b9 01       	movw	r22, r18
    6aca:	0e 94 6b 32 	call	0x64d6	; 0x64d6 <_ZN10helicopter5tasks4Task8setDelayEi>
    6ace:	04 c0       	rjmp	.+8      	; 0x6ad8 <__vector_17+0xc0>
		}else
		{
			task->reduceDelay();
    6ad0:	8d 81       	ldd	r24, Y+5	; 0x05
    6ad2:	9e 81       	ldd	r25, Y+6	; 0x06
    6ad4:	0e 94 a7 32 	call	0x654e	; 0x654e <_ZN10helicopter5tasks4Task11reduceDelayEv>
	
	Task *task = NULL;
	
	//iterate through all the tasks and decrement how many
	//'ticks' are left before the task is ready to execute.
	for (int i = 0; i < scheduler->getNumOfTasks(); i++)
    6ad8:	89 81       	ldd	r24, Y+1	; 0x01
    6ada:	9a 81       	ldd	r25, Y+2	; 0x02
    6adc:	01 96       	adiw	r24, 0x01	; 1
    6ade:	9a 83       	std	Y+2, r25	; 0x02
    6ae0:	89 83       	std	Y+1, r24	; 0x01
    6ae2:	8b 81       	ldd	r24, Y+3	; 0x03
    6ae4:	9c 81       	ldd	r25, Y+4	; 0x04
    6ae6:	0e 94 c1 32 	call	0x6582	; 0x6582 <_ZN10helicopter9scheduler9Scheduler13getNumOfTasksEv>
    6aea:	9c 01       	movw	r18, r24
    6aec:	41 e0       	ldi	r20, 0x01	; 1
    6aee:	89 81       	ldd	r24, Y+1	; 0x01
    6af0:	9a 81       	ldd	r25, Y+2	; 0x02
    6af2:	82 17       	cp	r24, r18
    6af4:	93 07       	cpc	r25, r19
    6af6:	0c f0       	brlt	.+2      	; 0x6afa <__vector_17+0xe2>
    6af8:	40 e0       	ldi	r20, 0x00	; 0
    6afa:	44 23       	and	r20, r20
    6afc:	09 f0       	breq	.+2      	; 0x6b00 <__vector_17+0xe8>
    6afe:	be cf       	rjmp	.-132    	; 0x6a7c <__vector_17+0x64>
		}else
		{
			task->reduceDelay();
		}
	}
}
    6b00:	26 96       	adiw	r28, 0x06	; 6
    6b02:	0f b6       	in	r0, 0x3f	; 63
    6b04:	f8 94       	cli
    6b06:	de bf       	out	0x3e, r29	; 62
    6b08:	0f be       	out	0x3f, r0	; 63
    6b0a:	cd bf       	out	0x3d, r28	; 61
    6b0c:	df 91       	pop	r29
    6b0e:	cf 91       	pop	r28
    6b10:	ff 91       	pop	r31
    6b12:	ef 91       	pop	r30
    6b14:	bf 91       	pop	r27
    6b16:	af 91       	pop	r26
    6b18:	9f 91       	pop	r25
    6b1a:	8f 91       	pop	r24
    6b1c:	7f 91       	pop	r23
    6b1e:	6f 91       	pop	r22
    6b20:	5f 91       	pop	r21
    6b22:	4f 91       	pop	r20
    6b24:	3f 91       	pop	r19
    6b26:	2f 91       	pop	r18
    6b28:	0f 90       	pop	r0
    6b2a:	00 92 5b 00 	sts	0x005B, r0
    6b2e:	0f 90       	pop	r0
    6b30:	00 92 5f 00 	sts	0x005F, r0
    6b34:	0f 90       	pop	r0
    6b36:	1f 90       	pop	r1
    6b38:	18 95       	reti

00006b3a <_ZN10helicopter5tasks4Task4initEv>:
				virtual ~Task(){}
				
				/**
				 * Function to initialize the task before execution.
				 */
				virtual void init(){;}
    6b3a:	cf 93       	push	r28
    6b3c:	df 93       	push	r29
    6b3e:	1f 92       	push	r1
    6b40:	1f 92       	push	r1
    6b42:	cd b7       	in	r28, 0x3d	; 61
    6b44:	de b7       	in	r29, 0x3e	; 62
    6b46:	9a 83       	std	Y+2, r25	; 0x02
    6b48:	89 83       	std	Y+1, r24	; 0x01
    6b4a:	0f 90       	pop	r0
    6b4c:	0f 90       	pop	r0
    6b4e:	df 91       	pop	r29
    6b50:	cf 91       	pop	r28
    6b52:	08 95       	ret

00006b54 <_ZN10helicopter5tasks16PIDInnerLoopTaskC1EPNS_10controller13PIDControllerEii>:
 */ 
#include "PIDInnerLoopTask.h"

using namespace helicopter::tasks;

PIDInnerLoopTask::PIDInnerLoopTask (PIDController *pidController, int delay, int period) :
    6b54:	cf 93       	push	r28
    6b56:	df 93       	push	r29
    6b58:	cd b7       	in	r28, 0x3d	; 61
    6b5a:	de b7       	in	r29, 0x3e	; 62
    6b5c:	28 97       	sbiw	r28, 0x08	; 8
    6b5e:	0f b6       	in	r0, 0x3f	; 63
    6b60:	f8 94       	cli
    6b62:	de bf       	out	0x3e, r29	; 62
    6b64:	0f be       	out	0x3f, r0	; 63
    6b66:	cd bf       	out	0x3d, r28	; 61
    6b68:	9a 83       	std	Y+2, r25	; 0x02
    6b6a:	89 83       	std	Y+1, r24	; 0x01
    6b6c:	7c 83       	std	Y+4, r23	; 0x04
    6b6e:	6b 83       	std	Y+3, r22	; 0x03
    6b70:	5e 83       	std	Y+6, r21	; 0x06
    6b72:	4d 83       	std	Y+5, r20	; 0x05
    6b74:	38 87       	std	Y+8, r19	; 0x08
    6b76:	2f 83       	std	Y+7, r18	; 0x07
Task(delay, period),
pidController(pidController)
    6b78:	89 81       	ldd	r24, Y+1	; 0x01
    6b7a:	9a 81       	ldd	r25, Y+2	; 0x02
    6b7c:	4f 81       	ldd	r20, Y+7	; 0x07
    6b7e:	58 85       	ldd	r21, Y+8	; 0x08
    6b80:	2d 81       	ldd	r18, Y+5	; 0x05
    6b82:	3e 81       	ldd	r19, Y+6	; 0x06
    6b84:	b9 01       	movw	r22, r18
    6b86:	0e 94 0f 3c 	call	0x781e	; 0x781e <_ZN10helicopter5tasks4TaskC1Eii>
    6b8a:	89 81       	ldd	r24, Y+1	; 0x01
    6b8c:	9a 81       	ldd	r25, Y+2	; 0x02
    6b8e:	24 e5       	ldi	r18, 0x54	; 84
    6b90:	32 e0       	ldi	r19, 0x02	; 2
    6b92:	fc 01       	movw	r30, r24
    6b94:	31 83       	std	Z+1, r19	; 0x01
    6b96:	20 83       	st	Z, r18
    6b98:	89 81       	ldd	r24, Y+1	; 0x01
    6b9a:	9a 81       	ldd	r25, Y+2	; 0x02
    6b9c:	2b 81       	ldd	r18, Y+3	; 0x03
    6b9e:	3c 81       	ldd	r19, Y+4	; 0x04
    6ba0:	fc 01       	movw	r30, r24
    6ba2:	30 87       	std	Z+8, r19	; 0x08
    6ba4:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    6ba6:	28 96       	adiw	r28, 0x08	; 8
    6ba8:	0f b6       	in	r0, 0x3f	; 63
    6baa:	f8 94       	cli
    6bac:	de bf       	out	0x3e, r29	; 62
    6bae:	0f be       	out	0x3f, r0	; 63
    6bb0:	cd bf       	out	0x3d, r28	; 61
    6bb2:	df 91       	pop	r29
    6bb4:	cf 91       	pop	r28
    6bb6:	08 95       	ret

00006bb8 <_ZN10helicopter5tasks16PIDInnerLoopTask11runTaskImplEv>:

void PIDInnerLoopTask::runTaskImpl()
{
    6bb8:	cf 93       	push	r28
    6bba:	df 93       	push	r29
    6bbc:	1f 92       	push	r1
    6bbe:	1f 92       	push	r1
    6bc0:	cd b7       	in	r28, 0x3d	; 61
    6bc2:	de b7       	in	r29, 0x3e	; 62
    6bc4:	9a 83       	std	Y+2, r25	; 0x02
    6bc6:	89 83       	std	Y+1, r24	; 0x01
	pidController->cyclicLateralInnerLoopUpdate();
    6bc8:	89 81       	ldd	r24, Y+1	; 0x01
    6bca:	9a 81       	ldd	r25, Y+2	; 0x02
    6bcc:	fc 01       	movw	r30, r24
    6bce:	87 81       	ldd	r24, Z+7	; 0x07
    6bd0:	90 85       	ldd	r25, Z+8	; 0x08
    6bd2:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <_ZN10helicopter10controller13PIDController28cyclicLateralInnerLoopUpdateEv>
	pidController->cyclicLongitudeInnerLoopUpdate();
    6bd6:	89 81       	ldd	r24, Y+1	; 0x01
    6bd8:	9a 81       	ldd	r25, Y+2	; 0x02
    6bda:	fc 01       	movw	r30, r24
    6bdc:	87 81       	ldd	r24, Z+7	; 0x07
    6bde:	90 85       	ldd	r25, Z+8	; 0x08
    6be0:	0e 94 2f 0d 	call	0x1a5e	; 0x1a5e <_ZN10helicopter10controller13PIDController30cyclicLongitudeInnerLoopUpdateEv>
}
    6be4:	0f 90       	pop	r0
    6be6:	0f 90       	pop	r0
    6be8:	df 91       	pop	r29
    6bea:	cf 91       	pop	r28
    6bec:	08 95       	ret

00006bee <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class executes the outer loop of the PID controller
		 */
		class PIDInnerLoopTask : public Task
    6bee:	cf 93       	push	r28
    6bf0:	df 93       	push	r29
    6bf2:	1f 92       	push	r1
    6bf4:	1f 92       	push	r1
    6bf6:	cd b7       	in	r28, 0x3d	; 61
    6bf8:	de b7       	in	r29, 0x3e	; 62
    6bfa:	9a 83       	std	Y+2, r25	; 0x02
    6bfc:	89 83       	std	Y+1, r24	; 0x01
    6bfe:	89 81       	ldd	r24, Y+1	; 0x01
    6c00:	9a 81       	ldd	r25, Y+2	; 0x02
    6c02:	24 e5       	ldi	r18, 0x54	; 84
    6c04:	32 e0       	ldi	r19, 0x02	; 2
    6c06:	fc 01       	movw	r30, r24
    6c08:	31 83       	std	Z+1, r19	; 0x01
    6c0a:	20 83       	st	Z, r18
    6c0c:	89 81       	ldd	r24, Y+1	; 0x01
    6c0e:	9a 81       	ldd	r25, Y+2	; 0x02
    6c10:	0e 94 63 14 	call	0x28c6	; 0x28c6 <_ZN10helicopter5tasks4TaskD1Ev>
    6c14:	80 e0       	ldi	r24, 0x00	; 0
    6c16:	90 e0       	ldi	r25, 0x00	; 0
    6c18:	81 70       	andi	r24, 0x01	; 1
    6c1a:	99 27       	eor	r25, r25
    6c1c:	00 97       	sbiw	r24, 0x00	; 0
    6c1e:	21 f0       	breq	.+8      	; 0x6c28 <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev+0x3a>
    6c20:	89 81       	ldd	r24, Y+1	; 0x01
    6c22:	9a 81       	ldd	r25, Y+2	; 0x02
    6c24:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    6c28:	0f 90       	pop	r0
    6c2a:	0f 90       	pop	r0
    6c2c:	df 91       	pop	r29
    6c2e:	cf 91       	pop	r28
    6c30:	08 95       	ret

00006c32 <_ZN10helicopter5tasks16PIDInnerLoopTaskD0Ev>:
    6c32:	cf 93       	push	r28
    6c34:	df 93       	push	r29
    6c36:	1f 92       	push	r1
    6c38:	1f 92       	push	r1
    6c3a:	cd b7       	in	r28, 0x3d	; 61
    6c3c:	de b7       	in	r29, 0x3e	; 62
    6c3e:	9a 83       	std	Y+2, r25	; 0x02
    6c40:	89 83       	std	Y+1, r24	; 0x01
    6c42:	89 81       	ldd	r24, Y+1	; 0x01
    6c44:	9a 81       	ldd	r25, Y+2	; 0x02
    6c46:	0e 94 f7 35 	call	0x6bee	; 0x6bee <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>
    6c4a:	89 81       	ldd	r24, Y+1	; 0x01
    6c4c:	9a 81       	ldd	r25, Y+2	; 0x02
    6c4e:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    6c52:	0f 90       	pop	r0
    6c54:	0f 90       	pop	r0
    6c56:	df 91       	pop	r29
    6c58:	cf 91       	pop	r28
    6c5a:	08 95       	ret

00006c5c <_ZN10helicopter5tasks16PIDOuterLoopTaskC1EPNS_10controller13PIDControllerEii>:
 */ 
#include "PIDOuterLoopTask.h"

using namespace helicopter::tasks;

PIDOuterLoopTask::PIDOuterLoopTask (PIDController *pidController, int delay, int period) :
    6c5c:	cf 93       	push	r28
    6c5e:	df 93       	push	r29
    6c60:	cd b7       	in	r28, 0x3d	; 61
    6c62:	de b7       	in	r29, 0x3e	; 62
    6c64:	28 97       	sbiw	r28, 0x08	; 8
    6c66:	0f b6       	in	r0, 0x3f	; 63
    6c68:	f8 94       	cli
    6c6a:	de bf       	out	0x3e, r29	; 62
    6c6c:	0f be       	out	0x3f, r0	; 63
    6c6e:	cd bf       	out	0x3d, r28	; 61
    6c70:	9a 83       	std	Y+2, r25	; 0x02
    6c72:	89 83       	std	Y+1, r24	; 0x01
    6c74:	7c 83       	std	Y+4, r23	; 0x04
    6c76:	6b 83       	std	Y+3, r22	; 0x03
    6c78:	5e 83       	std	Y+6, r21	; 0x06
    6c7a:	4d 83       	std	Y+5, r20	; 0x05
    6c7c:	38 87       	std	Y+8, r19	; 0x08
    6c7e:	2f 83       	std	Y+7, r18	; 0x07
Task(delay, period),
pidController(pidController)
    6c80:	89 81       	ldd	r24, Y+1	; 0x01
    6c82:	9a 81       	ldd	r25, Y+2	; 0x02
    6c84:	4f 81       	ldd	r20, Y+7	; 0x07
    6c86:	58 85       	ldd	r21, Y+8	; 0x08
    6c88:	2d 81       	ldd	r18, Y+5	; 0x05
    6c8a:	3e 81       	ldd	r19, Y+6	; 0x06
    6c8c:	b9 01       	movw	r22, r18
    6c8e:	0e 94 0f 3c 	call	0x781e	; 0x781e <_ZN10helicopter5tasks4TaskC1Eii>
    6c92:	89 81       	ldd	r24, Y+1	; 0x01
    6c94:	9a 81       	ldd	r25, Y+2	; 0x02
    6c96:	22 e6       	ldi	r18, 0x62	; 98
    6c98:	32 e0       	ldi	r19, 0x02	; 2
    6c9a:	fc 01       	movw	r30, r24
    6c9c:	31 83       	std	Z+1, r19	; 0x01
    6c9e:	20 83       	st	Z, r18
    6ca0:	89 81       	ldd	r24, Y+1	; 0x01
    6ca2:	9a 81       	ldd	r25, Y+2	; 0x02
    6ca4:	2b 81       	ldd	r18, Y+3	; 0x03
    6ca6:	3c 81       	ldd	r19, Y+4	; 0x04
    6ca8:	fc 01       	movw	r30, r24
    6caa:	30 87       	std	Z+8, r19	; 0x08
    6cac:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    6cae:	28 96       	adiw	r28, 0x08	; 8
    6cb0:	0f b6       	in	r0, 0x3f	; 63
    6cb2:	f8 94       	cli
    6cb4:	de bf       	out	0x3e, r29	; 62
    6cb6:	0f be       	out	0x3f, r0	; 63
    6cb8:	cd bf       	out	0x3d, r28	; 61
    6cba:	df 91       	pop	r29
    6cbc:	cf 91       	pop	r28
    6cbe:	08 95       	ret

00006cc0 <_ZN10helicopter5tasks16PIDOuterLoopTask11runTaskImplEv>:

void PIDOuterLoopTask::runTaskImpl()
{
    6cc0:	cf 93       	push	r28
    6cc2:	df 93       	push	r29
    6cc4:	1f 92       	push	r1
    6cc6:	1f 92       	push	r1
    6cc8:	cd b7       	in	r28, 0x3d	; 61
    6cca:	de b7       	in	r29, 0x3e	; 62
    6ccc:	9a 83       	std	Y+2, r25	; 0x02
    6cce:	89 83       	std	Y+1, r24	; 0x01
	pidController->mainRotorCollectiveOuterLoopUpdate();
    6cd0:	89 81       	ldd	r24, Y+1	; 0x01
    6cd2:	9a 81       	ldd	r25, Y+2	; 0x02
    6cd4:	fc 01       	movw	r30, r24
    6cd6:	87 81       	ldd	r24, Z+7	; 0x07
    6cd8:	90 85       	ldd	r25, Z+8	; 0x08
    6cda:	0e 94 f5 0f 	call	0x1fea	; 0x1fea <_ZN10helicopter10controller13PIDController34mainRotorCollectiveOuterLoopUpdateEv>
	pidController->tailRotorCollectiveOuterLoopUpdate();
    6cde:	89 81       	ldd	r24, Y+1	; 0x01
    6ce0:	9a 81       	ldd	r25, Y+2	; 0x02
    6ce2:	fc 01       	movw	r30, r24
    6ce4:	87 81       	ldd	r24, Z+7	; 0x07
    6ce6:	90 85       	ldd	r25, Z+8	; 0x08
    6ce8:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <_ZN10helicopter10controller13PIDController34tailRotorCollectiveOuterLoopUpdateEv>
	pidController->cyclicLongitudeOuterLoopUpdate();
    6cec:	89 81       	ldd	r24, Y+1	; 0x01
    6cee:	9a 81       	ldd	r25, Y+2	; 0x02
    6cf0:	fc 01       	movw	r30, r24
    6cf2:	87 81       	ldd	r24, Z+7	; 0x07
    6cf4:	90 85       	ldd	r25, Z+8	; 0x08
    6cf6:	0e 94 df 0a 	call	0x15be	; 0x15be <_ZN10helicopter10controller13PIDController30cyclicLongitudeOuterLoopUpdateEv>
	pidController->cyclicLateralOuterLoopUpdate();
    6cfa:	89 81       	ldd	r24, Y+1	; 0x01
    6cfc:	9a 81       	ldd	r25, Y+2	; 0x02
    6cfe:	fc 01       	movw	r30, r24
    6d00:	87 81       	ldd	r24, Z+7	; 0x07
    6d02:	90 85       	ldd	r25, Z+8	; 0x08
    6d04:	0e 94 07 0c 	call	0x180e	; 0x180e <_ZN10helicopter10controller13PIDController28cyclicLateralOuterLoopUpdateEv>
}
    6d08:	0f 90       	pop	r0
    6d0a:	0f 90       	pop	r0
    6d0c:	df 91       	pop	r29
    6d0e:	cf 91       	pop	r28
    6d10:	08 95       	ret

00006d12 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class executes the outer loop of the PID controller
		 */
		class PIDOuterLoopTask : public Task
    6d12:	cf 93       	push	r28
    6d14:	df 93       	push	r29
    6d16:	1f 92       	push	r1
    6d18:	1f 92       	push	r1
    6d1a:	cd b7       	in	r28, 0x3d	; 61
    6d1c:	de b7       	in	r29, 0x3e	; 62
    6d1e:	9a 83       	std	Y+2, r25	; 0x02
    6d20:	89 83       	std	Y+1, r24	; 0x01
    6d22:	89 81       	ldd	r24, Y+1	; 0x01
    6d24:	9a 81       	ldd	r25, Y+2	; 0x02
    6d26:	22 e6       	ldi	r18, 0x62	; 98
    6d28:	32 e0       	ldi	r19, 0x02	; 2
    6d2a:	fc 01       	movw	r30, r24
    6d2c:	31 83       	std	Z+1, r19	; 0x01
    6d2e:	20 83       	st	Z, r18
    6d30:	89 81       	ldd	r24, Y+1	; 0x01
    6d32:	9a 81       	ldd	r25, Y+2	; 0x02
    6d34:	0e 94 63 14 	call	0x28c6	; 0x28c6 <_ZN10helicopter5tasks4TaskD1Ev>
    6d38:	80 e0       	ldi	r24, 0x00	; 0
    6d3a:	90 e0       	ldi	r25, 0x00	; 0
    6d3c:	81 70       	andi	r24, 0x01	; 1
    6d3e:	99 27       	eor	r25, r25
    6d40:	00 97       	sbiw	r24, 0x00	; 0
    6d42:	21 f0       	breq	.+8      	; 0x6d4c <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev+0x3a>
    6d44:	89 81       	ldd	r24, Y+1	; 0x01
    6d46:	9a 81       	ldd	r25, Y+2	; 0x02
    6d48:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    6d4c:	0f 90       	pop	r0
    6d4e:	0f 90       	pop	r0
    6d50:	df 91       	pop	r29
    6d52:	cf 91       	pop	r28
    6d54:	08 95       	ret

00006d56 <_ZN10helicopter5tasks16PIDOuterLoopTaskD0Ev>:
    6d56:	cf 93       	push	r28
    6d58:	df 93       	push	r29
    6d5a:	1f 92       	push	r1
    6d5c:	1f 92       	push	r1
    6d5e:	cd b7       	in	r28, 0x3d	; 61
    6d60:	de b7       	in	r29, 0x3e	; 62
    6d62:	9a 83       	std	Y+2, r25	; 0x02
    6d64:	89 83       	std	Y+1, r24	; 0x01
    6d66:	89 81       	ldd	r24, Y+1	; 0x01
    6d68:	9a 81       	ldd	r25, Y+2	; 0x02
    6d6a:	0e 94 89 36 	call	0x6d12	; 0x6d12 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>
    6d6e:	89 81       	ldd	r24, Y+1	; 0x01
    6d70:	9a 81       	ldd	r25, Y+2	; 0x02
    6d72:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    6d76:	0f 90       	pop	r0
    6d78:	0f 90       	pop	r0
    6d7a:	df 91       	pop	r29
    6d7c:	cf 91       	pop	r28
    6d7e:	08 95       	ret

00006d80 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf>:
																							
		
		
		
			float XNEDBodyFrame() const {return xNEDBodyFrame;}
			void XNEDBodyFrame(float val) { xNEDBodyFrame = val;}
    6d80:	cf 93       	push	r28
    6d82:	df 93       	push	r29
    6d84:	00 d0       	rcall	.+0      	; 0x6d86 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf+0x6>
    6d86:	00 d0       	rcall	.+0      	; 0x6d88 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf+0x8>
    6d88:	cd b7       	in	r28, 0x3d	; 61
    6d8a:	de b7       	in	r29, 0x3e	; 62
    6d8c:	9a 83       	std	Y+2, r25	; 0x02
    6d8e:	89 83       	std	Y+1, r24	; 0x01
    6d90:	4b 83       	std	Y+3, r20	; 0x03
    6d92:	5c 83       	std	Y+4, r21	; 0x04
    6d94:	6d 83       	std	Y+5, r22	; 0x05
    6d96:	7e 83       	std	Y+6, r23	; 0x06
    6d98:	29 81       	ldd	r18, Y+1	; 0x01
    6d9a:	3a 81       	ldd	r19, Y+2	; 0x02
    6d9c:	8b 81       	ldd	r24, Y+3	; 0x03
    6d9e:	9c 81       	ldd	r25, Y+4	; 0x04
    6da0:	ad 81       	ldd	r26, Y+5	; 0x05
    6da2:	be 81       	ldd	r27, Y+6	; 0x06
    6da4:	f9 01       	movw	r30, r18
    6da6:	84 a3       	std	Z+36, r24	; 0x24
    6da8:	95 a3       	std	Z+37, r25	; 0x25
    6daa:	a6 a3       	std	Z+38, r26	; 0x26
    6dac:	b7 a3       	std	Z+39, r27	; 0x27
    6dae:	26 96       	adiw	r28, 0x06	; 6
    6db0:	0f b6       	in	r0, 0x3f	; 63
    6db2:	f8 94       	cli
    6db4:	de bf       	out	0x3e, r29	; 62
    6db6:	0f be       	out	0x3f, r0	; 63
    6db8:	cd bf       	out	0x3d, r28	; 61
    6dba:	df 91       	pop	r29
    6dbc:	cf 91       	pop	r28
    6dbe:	08 95       	ret

00006dc0 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf>:
						
						


			float YNEDBodyFrame() const {return yNEDBodyFrame;}
			void YNEDBodyFrame(float val) { yNEDBodyFrame = val;}
    6dc0:	cf 93       	push	r28
    6dc2:	df 93       	push	r29
    6dc4:	00 d0       	rcall	.+0      	; 0x6dc6 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf+0x6>
    6dc6:	00 d0       	rcall	.+0      	; 0x6dc8 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf+0x8>
    6dc8:	cd b7       	in	r28, 0x3d	; 61
    6dca:	de b7       	in	r29, 0x3e	; 62
    6dcc:	9a 83       	std	Y+2, r25	; 0x02
    6dce:	89 83       	std	Y+1, r24	; 0x01
    6dd0:	4b 83       	std	Y+3, r20	; 0x03
    6dd2:	5c 83       	std	Y+4, r21	; 0x04
    6dd4:	6d 83       	std	Y+5, r22	; 0x05
    6dd6:	7e 83       	std	Y+6, r23	; 0x06
    6dd8:	89 81       	ldd	r24, Y+1	; 0x01
    6dda:	9a 81       	ldd	r25, Y+2	; 0x02
    6ddc:	9c 01       	movw	r18, r24
    6dde:	20 5b       	subi	r18, 0xB0	; 176
    6de0:	3f 4f       	sbci	r19, 0xFF	; 255
    6de2:	8b 81       	ldd	r24, Y+3	; 0x03
    6de4:	9c 81       	ldd	r25, Y+4	; 0x04
    6de6:	ad 81       	ldd	r26, Y+5	; 0x05
    6de8:	be 81       	ldd	r27, Y+6	; 0x06
    6dea:	f9 01       	movw	r30, r18
    6dec:	80 83       	st	Z, r24
    6dee:	91 83       	std	Z+1, r25	; 0x01
    6df0:	a2 83       	std	Z+2, r26	; 0x02
    6df2:	b3 83       	std	Z+3, r27	; 0x03
    6df4:	26 96       	adiw	r28, 0x06	; 6
    6df6:	0f b6       	in	r0, 0x3f	; 63
    6df8:	f8 94       	cli
    6dfa:	de bf       	out	0x3e, r29	; 62
    6dfc:	0f be       	out	0x3f, r0	; 63
    6dfe:	cd bf       	out	0x3d, r28	; 61
    6e00:	df 91       	pop	r29
    6e02:	cf 91       	pop	r28
    6e04:	08 95       	ret

00006e06 <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf>:

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
			void AltitudeFeetAgl(float val) { altitudeFeetAgl = val; }

			float ZNEDBodyFrame() const { return zNEDBodyFrame; }
			void ZNEDBodyFrame(float val) { zNEDBodyFrame = val; }
    6e06:	cf 93       	push	r28
    6e08:	df 93       	push	r29
    6e0a:	00 d0       	rcall	.+0      	; 0x6e0c <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf+0x6>
    6e0c:	00 d0       	rcall	.+0      	; 0x6e0e <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf+0x8>
    6e0e:	cd b7       	in	r28, 0x3d	; 61
    6e10:	de b7       	in	r29, 0x3e	; 62
    6e12:	9a 83       	std	Y+2, r25	; 0x02
    6e14:	89 83       	std	Y+1, r24	; 0x01
    6e16:	4b 83       	std	Y+3, r20	; 0x03
    6e18:	5c 83       	std	Y+4, r21	; 0x04
    6e1a:	6d 83       	std	Y+5, r22	; 0x05
    6e1c:	7e 83       	std	Y+6, r23	; 0x06
    6e1e:	89 81       	ldd	r24, Y+1	; 0x01
    6e20:	9a 81       	ldd	r25, Y+2	; 0x02
    6e22:	9c 01       	movw	r18, r24
    6e24:	20 58       	subi	r18, 0x80	; 128
    6e26:	3f 4f       	sbci	r19, 0xFF	; 255
    6e28:	8b 81       	ldd	r24, Y+3	; 0x03
    6e2a:	9c 81       	ldd	r25, Y+4	; 0x04
    6e2c:	ad 81       	ldd	r26, Y+5	; 0x05
    6e2e:	be 81       	ldd	r27, Y+6	; 0x06
    6e30:	f9 01       	movw	r30, r18
    6e32:	80 83       	st	Z, r24
    6e34:	91 83       	std	Z+1, r25	; 0x01
    6e36:	a2 83       	std	Z+2, r26	; 0x02
    6e38:	b3 83       	std	Z+3, r27	; 0x03
    6e3a:	26 96       	adiw	r28, 0x06	; 6
    6e3c:	0f b6       	in	r0, 0x3f	; 63
    6e3e:	f8 94       	cli
    6e40:	de bf       	out	0x3e, r29	; 62
    6e42:	0f be       	out	0x3f, r0	; 63
    6e44:	cd bf       	out	0x3d, r28	; 61
    6e46:	df 91       	pop	r29
    6e48:	cf 91       	pop	r28
    6e4a:	08 95       	ret

00006e4c <_ZNK10helicopter5model11SystemModel20InitialXPositionEcefEv>:
			void ChecksumErrors(long val) { checksumErrors = val; }
			
			long  BlownFrames() const {return numOfFramesBlown;}
			void BlownFrames( long val ) { numOfFramesBlown = val;}

			long  InitialXPositionEcef() const {return initialXPositionEcef;}
    6e4c:	cf 93       	push	r28
    6e4e:	df 93       	push	r29
    6e50:	1f 92       	push	r1
    6e52:	1f 92       	push	r1
    6e54:	cd b7       	in	r28, 0x3d	; 61
    6e56:	de b7       	in	r29, 0x3e	; 62
    6e58:	9a 83       	std	Y+2, r25	; 0x02
    6e5a:	89 83       	std	Y+1, r24	; 0x01
    6e5c:	89 81       	ldd	r24, Y+1	; 0x01
    6e5e:	9a 81       	ldd	r25, Y+2	; 0x02
    6e60:	84 54       	subi	r24, 0x44	; 68
    6e62:	9f 4f       	sbci	r25, 0xFF	; 255
    6e64:	fc 01       	movw	r30, r24
    6e66:	80 81       	ld	r24, Z
    6e68:	91 81       	ldd	r25, Z+1	; 0x01
    6e6a:	a2 81       	ldd	r26, Z+2	; 0x02
    6e6c:	b3 81       	ldd	r27, Z+3	; 0x03
    6e6e:	bc 01       	movw	r22, r24
    6e70:	cd 01       	movw	r24, r26
    6e72:	0e 94 d5 43 	call	0x87aa	; 0x87aa <__fixsfsi>
    6e76:	dc 01       	movw	r26, r24
    6e78:	cb 01       	movw	r24, r22
    6e7a:	bc 01       	movw	r22, r24
    6e7c:	cd 01       	movw	r24, r26
    6e7e:	0f 90       	pop	r0
    6e80:	0f 90       	pop	r0
    6e82:	df 91       	pop	r29
    6e84:	cf 91       	pop	r28
    6e86:	08 95       	ret

00006e88 <_ZNK10helicopter5model11SystemModel20InitialYPositionEcefEv>:
			void InitialXPositionEcef( long val ) { initialXPositionEcef = val;}			

			long  InitialYPositionEcef() const {return initialYPositionEcef;}
    6e88:	cf 93       	push	r28
    6e8a:	df 93       	push	r29
    6e8c:	1f 92       	push	r1
    6e8e:	1f 92       	push	r1
    6e90:	cd b7       	in	r28, 0x3d	; 61
    6e92:	de b7       	in	r29, 0x3e	; 62
    6e94:	9a 83       	std	Y+2, r25	; 0x02
    6e96:	89 83       	std	Y+1, r24	; 0x01
    6e98:	89 81       	ldd	r24, Y+1	; 0x01
    6e9a:	9a 81       	ldd	r25, Y+2	; 0x02
    6e9c:	80 54       	subi	r24, 0x40	; 64
    6e9e:	9f 4f       	sbci	r25, 0xFF	; 255
    6ea0:	fc 01       	movw	r30, r24
    6ea2:	80 81       	ld	r24, Z
    6ea4:	91 81       	ldd	r25, Z+1	; 0x01
    6ea6:	a2 81       	ldd	r26, Z+2	; 0x02
    6ea8:	b3 81       	ldd	r27, Z+3	; 0x03
    6eaa:	bc 01       	movw	r22, r24
    6eac:	cd 01       	movw	r24, r26
    6eae:	0e 94 d5 43 	call	0x87aa	; 0x87aa <__fixsfsi>
    6eb2:	dc 01       	movw	r26, r24
    6eb4:	cb 01       	movw	r24, r22
    6eb6:	bc 01       	movw	r22, r24
    6eb8:	cd 01       	movw	r24, r26
    6eba:	0f 90       	pop	r0
    6ebc:	0f 90       	pop	r0
    6ebe:	df 91       	pop	r29
    6ec0:	cf 91       	pop	r28
    6ec2:	08 95       	ret

00006ec4 <_ZNK10helicopter5model11SystemModel20InitialZPositionEcefEv>:
			void InitialYPositionEcef( long val ) { initialYPositionEcef = val;}

			long  InitialZPositionEcef() const {return initialZPositionEcef;}
    6ec4:	cf 93       	push	r28
    6ec6:	df 93       	push	r29
    6ec8:	1f 92       	push	r1
    6eca:	1f 92       	push	r1
    6ecc:	cd b7       	in	r28, 0x3d	; 61
    6ece:	de b7       	in	r29, 0x3e	; 62
    6ed0:	9a 83       	std	Y+2, r25	; 0x02
    6ed2:	89 83       	std	Y+1, r24	; 0x01
    6ed4:	89 81       	ldd	r24, Y+1	; 0x01
    6ed6:	9a 81       	ldd	r25, Y+2	; 0x02
    6ed8:	8c 53       	subi	r24, 0x3C	; 60
    6eda:	9f 4f       	sbci	r25, 0xFF	; 255
    6edc:	fc 01       	movw	r30, r24
    6ede:	80 81       	ld	r24, Z
    6ee0:	91 81       	ldd	r25, Z+1	; 0x01
    6ee2:	a2 81       	ldd	r26, Z+2	; 0x02
    6ee4:	b3 81       	ldd	r27, Z+3	; 0x03
    6ee6:	bc 01       	movw	r22, r24
    6ee8:	cd 01       	movw	r24, r26
    6eea:	0e 94 d5 43 	call	0x87aa	; 0x87aa <__fixsfsi>
    6eee:	dc 01       	movw	r26, r24
    6ef0:	cb 01       	movw	r24, r22
    6ef2:	bc 01       	movw	r22, r24
    6ef4:	cd 01       	movw	r24, r26
    6ef6:	0f 90       	pop	r0
    6ef8:	0f 90       	pop	r0
    6efa:	df 91       	pop	r29
    6efc:	cf 91       	pop	r28
    6efe:	08 95       	ret

00006f00 <_ZN10helicopter5tasks20SensorProcessingTaskC1EPNS_5model11SystemModelEii>:
#include "CoordinateUtil.h"

using namespace helicopter::tasks;
using namespace helicopter::util;

SensorProcessingTask::SensorProcessingTask (SystemModel *model, int delay, int period) :
    6f00:	cf 93       	push	r28
    6f02:	df 93       	push	r29
    6f04:	cd b7       	in	r28, 0x3d	; 61
    6f06:	de b7       	in	r29, 0x3e	; 62
    6f08:	28 97       	sbiw	r28, 0x08	; 8
    6f0a:	0f b6       	in	r0, 0x3f	; 63
    6f0c:	f8 94       	cli
    6f0e:	de bf       	out	0x3e, r29	; 62
    6f10:	0f be       	out	0x3f, r0	; 63
    6f12:	cd bf       	out	0x3d, r28	; 61
    6f14:	9a 83       	std	Y+2, r25	; 0x02
    6f16:	89 83       	std	Y+1, r24	; 0x01
    6f18:	7c 83       	std	Y+4, r23	; 0x04
    6f1a:	6b 83       	std	Y+3, r22	; 0x03
    6f1c:	5e 83       	std	Y+6, r21	; 0x06
    6f1e:	4d 83       	std	Y+5, r20	; 0x05
    6f20:	38 87       	std	Y+8, r19	; 0x08
    6f22:	2f 83       	std	Y+7, r18	; 0x07
	Task(delay, period),
	model(model)
    6f24:	89 81       	ldd	r24, Y+1	; 0x01
    6f26:	9a 81       	ldd	r25, Y+2	; 0x02
    6f28:	4f 81       	ldd	r20, Y+7	; 0x07
    6f2a:	58 85       	ldd	r21, Y+8	; 0x08
    6f2c:	2d 81       	ldd	r18, Y+5	; 0x05
    6f2e:	3e 81       	ldd	r19, Y+6	; 0x06
    6f30:	b9 01       	movw	r22, r18
    6f32:	0e 94 0f 3c 	call	0x781e	; 0x781e <_ZN10helicopter5tasks4TaskC1Eii>
    6f36:	89 81       	ldd	r24, Y+1	; 0x01
    6f38:	9a 81       	ldd	r25, Y+2	; 0x02
    6f3a:	20 e7       	ldi	r18, 0x70	; 112
    6f3c:	32 e0       	ldi	r19, 0x02	; 2
    6f3e:	fc 01       	movw	r30, r24
    6f40:	31 83       	std	Z+1, r19	; 0x01
    6f42:	20 83       	st	Z, r18
    6f44:	89 81       	ldd	r24, Y+1	; 0x01
    6f46:	9a 81       	ldd	r25, Y+2	; 0x02
    6f48:	2b 81       	ldd	r18, Y+3	; 0x03
    6f4a:	3c 81       	ldd	r19, Y+4	; 0x04
    6f4c:	fc 01       	movw	r30, r24
    6f4e:	30 87       	std	Z+8, r19	; 0x08
    6f50:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    6f52:	28 96       	adiw	r28, 0x08	; 8
    6f54:	0f b6       	in	r0, 0x3f	; 63
    6f56:	f8 94       	cli
    6f58:	de bf       	out	0x3e, r29	; 62
    6f5a:	0f be       	out	0x3f, r0	; 63
    6f5c:	cd bf       	out	0x3d, r28	; 61
    6f5e:	df 91       	pop	r29
    6f60:	cf 91       	pop	r28
    6f62:	08 95       	ret

00006f64 <_ZN10helicopter5tasks20SensorProcessingTask11runTaskImplEv>:

void SensorProcessingTask::runTaskImpl()
{
    6f64:	4f 92       	push	r4
    6f66:	5f 92       	push	r5
    6f68:	6f 92       	push	r6
    6f6a:	7f 92       	push	r7
    6f6c:	8f 92       	push	r8
    6f6e:	9f 92       	push	r9
    6f70:	af 92       	push	r10
    6f72:	bf 92       	push	r11
    6f74:	cf 92       	push	r12
    6f76:	df 92       	push	r13
    6f78:	ef 92       	push	r14
    6f7a:	ff 92       	push	r15
    6f7c:	0f 93       	push	r16
    6f7e:	1f 93       	push	r17
    6f80:	cf 93       	push	r28
    6f82:	df 93       	push	r29
    6f84:	cd b7       	in	r28, 0x3d	; 61
    6f86:	de b7       	in	r29, 0x3e	; 62
    6f88:	66 97       	sbiw	r28, 0x16	; 22
    6f8a:	0f b6       	in	r0, 0x3f	; 63
    6f8c:	f8 94       	cli
    6f8e:	de bf       	out	0x3e, r29	; 62
    6f90:	0f be       	out	0x3f, r0	; 63
    6f92:	cd bf       	out	0x3d, r28	; 61
    6f94:	9e 87       	std	Y+14, r25	; 0x0e
    6f96:	8d 87       	std	Y+13, r24	; 0x0d
	float localNEDX = 0;
    6f98:	19 82       	std	Y+1, r1	; 0x01
    6f9a:	1a 82       	std	Y+2, r1	; 0x02
    6f9c:	1b 82       	std	Y+3, r1	; 0x03
    6f9e:	1c 82       	std	Y+4, r1	; 0x04
	float localNEDY = 0;
    6fa0:	1d 82       	std	Y+5, r1	; 0x05
    6fa2:	1e 82       	std	Y+6, r1	; 0x06
    6fa4:	1f 82       	std	Y+7, r1	; 0x07
    6fa6:	18 86       	std	Y+8, r1	; 0x08
	float localNEDZ = 0;
    6fa8:	19 86       	std	Y+9, r1	; 0x09
    6faa:	1a 86       	std	Y+10, r1	; 0x0a
    6fac:	1b 86       	std	Y+11, r1	; 0x0b
    6fae:	1c 86       	std	Y+12, r1	; 0x0c
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
		localNEDX,localNEDY,localNEDZ);
    6fb0:	8d 85       	ldd	r24, Y+13	; 0x0d
    6fb2:	9e 85       	ldd	r25, Y+14	; 0x0e
    6fb4:	fc 01       	movw	r30, r24
    6fb6:	87 81       	ldd	r24, Z+7	; 0x07
    6fb8:	90 85       	ldd	r25, Z+8	; 0x08
    6fba:	8c 01       	movw	r16, r24
    6fbc:	08 53       	subi	r16, 0x38	; 56
    6fbe:	1f 4f       	sbci	r17, 0xFF	; 255
	float localNEDX = 0;
	float localNEDY = 0;
	float localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    6fc0:	8d 85       	ldd	r24, Y+13	; 0x0d
    6fc2:	9e 85       	ldd	r25, Y+14	; 0x0e
    6fc4:	fc 01       	movw	r30, r24
    6fc6:	87 81       	ldd	r24, Z+7	; 0x07
    6fc8:	90 85       	ldd	r25, Z+8	; 0x08
    6fca:	0e 94 62 37 	call	0x6ec4	; 0x6ec4 <_ZNK10helicopter5model11SystemModel20InitialZPositionEcefEv>
    6fce:	dc 01       	movw	r26, r24
    6fd0:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    6fd2:	bc 01       	movw	r22, r24
    6fd4:	cd 01       	movw	r24, r26
    6fd6:	0e 94 08 44 	call	0x8810	; 0x8810 <__floatsisf>
    6fda:	4b 01       	movw	r8, r22
    6fdc:	5c 01       	movw	r10, r24
	float localNEDX = 0;
	float localNEDY = 0;
	float localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    6fde:	8d 85       	ldd	r24, Y+13	; 0x0d
    6fe0:	9e 85       	ldd	r25, Y+14	; 0x0e
    6fe2:	fc 01       	movw	r30, r24
    6fe4:	87 81       	ldd	r24, Z+7	; 0x07
    6fe6:	90 85       	ldd	r25, Z+8	; 0x08
    6fe8:	0e 94 44 37 	call	0x6e88	; 0x6e88 <_ZNK10helicopter5model11SystemModel20InitialYPositionEcefEv>
    6fec:	dc 01       	movw	r26, r24
    6fee:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    6ff0:	bc 01       	movw	r22, r24
    6ff2:	cd 01       	movw	r24, r26
    6ff4:	0e 94 08 44 	call	0x8810	; 0x8810 <__floatsisf>
    6ff8:	6b 01       	movw	r12, r22
    6ffa:	7c 01       	movw	r14, r24
	float localNEDX = 0;
	float localNEDY = 0;
	float localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    6ffc:	8d 85       	ldd	r24, Y+13	; 0x0d
    6ffe:	9e 85       	ldd	r25, Y+14	; 0x0e
    7000:	fc 01       	movw	r30, r24
    7002:	87 81       	ldd	r24, Z+7	; 0x07
    7004:	90 85       	ldd	r25, Z+8	; 0x08
    7006:	0e 94 26 37 	call	0x6e4c	; 0x6e4c <_ZNK10helicopter5model11SystemModel20InitialXPositionEcefEv>
    700a:	dc 01       	movw	r26, r24
    700c:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    700e:	bc 01       	movw	r22, r24
    7010:	cd 01       	movw	r24, r26
    7012:	0e 94 08 44 	call	0x8810	; 0x8810 <__floatsisf>
    7016:	6f 87       	std	Y+15, r22	; 0x0f
    7018:	78 8b       	std	Y+16, r23	; 0x10
    701a:	89 8b       	std	Y+17, r24	; 0x11
    701c:	9a 8b       	std	Y+18, r25	; 0x12
    701e:	8d 85       	ldd	r24, Y+13	; 0x0d
    7020:	9e 85       	ldd	r25, Y+14	; 0x0e
    7022:	fc 01       	movw	r30, r24
    7024:	87 81       	ldd	r24, Z+7	; 0x07
    7026:	90 85       	ldd	r25, Z+8	; 0x08
    7028:	0e 94 b4 05 	call	0xb68	; 0xb68 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    702c:	6b 8b       	std	Y+19, r22	; 0x13
    702e:	7c 8b       	std	Y+20, r23	; 0x14
    7030:	8d 8b       	std	Y+21, r24	; 0x15
    7032:	9e 8b       	std	Y+22, r25	; 0x16
    7034:	8d 85       	ldd	r24, Y+13	; 0x0d
    7036:	9e 85       	ldd	r25, Y+14	; 0x0e
    7038:	fc 01       	movw	r30, r24
    703a:	87 81       	ldd	r24, Z+7	; 0x07
    703c:	90 85       	ldd	r25, Z+8	; 0x08
    703e:	0e 94 17 19 	call	0x322e	; 0x322e <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    7042:	2b 01       	movw	r4, r22
    7044:	3c 01       	movw	r6, r24
    7046:	8d 85       	ldd	r24, Y+13	; 0x0d
    7048:	9e 85       	ldd	r25, Y+14	; 0x0e
    704a:	fc 01       	movw	r30, r24
    704c:	87 81       	ldd	r24, Z+7	; 0x07
    704e:	90 85       	ldd	r25, Z+8	; 0x08
    7050:	0e 94 ff 18 	call	0x31fe	; 0x31fe <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    7054:	dc 01       	movw	r26, r24
    7056:	cb 01       	movw	r24, r22
    7058:	9e 01       	movw	r18, r28
    705a:	27 5f       	subi	r18, 0xF7	; 247
    705c:	3f 4f       	sbci	r19, 0xFF	; 255
    705e:	43 2f       	mov	r20, r19
    7060:	4f 93       	push	r20
    7062:	2f 93       	push	r18
    7064:	9e 01       	movw	r18, r28
    7066:	2b 5f       	subi	r18, 0xFB	; 251
    7068:	3f 4f       	sbci	r19, 0xFF	; 255
    706a:	43 2f       	mov	r20, r19
    706c:	4f 93       	push	r20
    706e:	2f 93       	push	r18
    7070:	9e 01       	movw	r18, r28
    7072:	2f 5f       	subi	r18, 0xFF	; 255
    7074:	3f 4f       	sbci	r19, 0xFF	; 255
    7076:	23 2f       	mov	r18, r19
    7078:	2f 93       	push	r18
    707a:	9e 01       	movw	r18, r28
    707c:	2f 5f       	subi	r18, 0xFF	; 255
    707e:	3f 4f       	sbci	r19, 0xFF	; 255
    7080:	2f 93       	push	r18
    7082:	21 2f       	mov	r18, r17
    7084:	2f 93       	push	r18
    7086:	20 2f       	mov	r18, r16
    7088:	2f 93       	push	r18
    708a:	2b 2d       	mov	r18, r11
    708c:	2f 93       	push	r18
    708e:	2a 2d       	mov	r18, r10
    7090:	2f 93       	push	r18
    7092:	29 2d       	mov	r18, r9
    7094:	2f 93       	push	r18
    7096:	28 2d       	mov	r18, r8
    7098:	2f 93       	push	r18
    709a:	2f 2d       	mov	r18, r15
    709c:	2f 93       	push	r18
    709e:	2e 2d       	mov	r18, r14
    70a0:	2f 93       	push	r18
    70a2:	2d 2d       	mov	r18, r13
    70a4:	2f 93       	push	r18
    70a6:	2c 2d       	mov	r18, r12
    70a8:	2f 93       	push	r18
    70aa:	af 84       	ldd	r10, Y+15	; 0x0f
    70ac:	b8 88       	ldd	r11, Y+16	; 0x10
    70ae:	c9 88       	ldd	r12, Y+17	; 0x11
    70b0:	da 88       	ldd	r13, Y+18	; 0x12
    70b2:	eb 88       	ldd	r14, Y+19	; 0x13
    70b4:	fc 88       	ldd	r15, Y+20	; 0x14
    70b6:	0d 89       	ldd	r16, Y+21	; 0x15
    70b8:	1e 89       	ldd	r17, Y+22	; 0x16
    70ba:	a3 01       	movw	r20, r6
    70bc:	92 01       	movw	r18, r4
    70be:	bc 01       	movw	r22, r24
    70c0:	cd 01       	movw	r24, r26
    70c2:	0e 94 5c 41 	call	0x82b8	; 0x82b8 <_ZN10helicopter4util14CoordinateUtil29ConvertFromGeodedicToLocalNEDEffffffPA3_fRfS4_S4_>
    70c6:	8d b7       	in	r24, 0x3d	; 61
    70c8:	9e b7       	in	r25, 0x3e	; 62
    70ca:	40 96       	adiw	r24, 0x10	; 16
    70cc:	0f b6       	in	r0, 0x3f	; 63
    70ce:	f8 94       	cli
    70d0:	de bf       	out	0x3e, r29	; 62
    70d2:	0f be       	out	0x3f, r0	; 63
    70d4:	cd bf       	out	0x3d, r28	; 61
		
		
	model->XNEDBodyFrame(localNEDX);
    70d6:	89 81       	ldd	r24, Y+1	; 0x01
    70d8:	9a 81       	ldd	r25, Y+2	; 0x02
    70da:	ab 81       	ldd	r26, Y+3	; 0x03
    70dc:	bc 81       	ldd	r27, Y+4	; 0x04
    70de:	2d 85       	ldd	r18, Y+13	; 0x0d
    70e0:	3e 85       	ldd	r19, Y+14	; 0x0e
    70e2:	f9 01       	movw	r30, r18
    70e4:	27 81       	ldd	r18, Z+7	; 0x07
    70e6:	30 85       	ldd	r19, Z+8	; 0x08
    70e8:	ac 01       	movw	r20, r24
    70ea:	bd 01       	movw	r22, r26
    70ec:	c9 01       	movw	r24, r18
    70ee:	0e 94 c0 36 	call	0x6d80	; 0x6d80 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf>
	model->YNEDBodyFrame(localNEDY);
    70f2:	8d 81       	ldd	r24, Y+5	; 0x05
    70f4:	9e 81       	ldd	r25, Y+6	; 0x06
    70f6:	af 81       	ldd	r26, Y+7	; 0x07
    70f8:	b8 85       	ldd	r27, Y+8	; 0x08
    70fa:	2d 85       	ldd	r18, Y+13	; 0x0d
    70fc:	3e 85       	ldd	r19, Y+14	; 0x0e
    70fe:	f9 01       	movw	r30, r18
    7100:	27 81       	ldd	r18, Z+7	; 0x07
    7102:	30 85       	ldd	r19, Z+8	; 0x08
    7104:	ac 01       	movw	r20, r24
    7106:	bd 01       	movw	r22, r26
    7108:	c9 01       	movw	r24, r18
    710a:	0e 94 e0 36 	call	0x6dc0	; 0x6dc0 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf>
	model->ZNEDBodyFrame(localNEDZ);
    710e:	89 85       	ldd	r24, Y+9	; 0x09
    7110:	9a 85       	ldd	r25, Y+10	; 0x0a
    7112:	ab 85       	ldd	r26, Y+11	; 0x0b
    7114:	bc 85       	ldd	r27, Y+12	; 0x0c
    7116:	2d 85       	ldd	r18, Y+13	; 0x0d
    7118:	3e 85       	ldd	r19, Y+14	; 0x0e
    711a:	f9 01       	movw	r30, r18
    711c:	27 81       	ldd	r18, Z+7	; 0x07
    711e:	30 85       	ldd	r19, Z+8	; 0x08
    7120:	ac 01       	movw	r20, r24
    7122:	bd 01       	movw	r22, r26
    7124:	c9 01       	movw	r24, r18
    7126:	0e 94 03 37 	call	0x6e06	; 0x6e06 <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf>
}
    712a:	66 96       	adiw	r28, 0x16	; 22
    712c:	0f b6       	in	r0, 0x3f	; 63
    712e:	f8 94       	cli
    7130:	de bf       	out	0x3e, r29	; 62
    7132:	0f be       	out	0x3f, r0	; 63
    7134:	cd bf       	out	0x3d, r28	; 61
    7136:	df 91       	pop	r29
    7138:	cf 91       	pop	r28
    713a:	1f 91       	pop	r17
    713c:	0f 91       	pop	r16
    713e:	ff 90       	pop	r15
    7140:	ef 90       	pop	r14
    7142:	df 90       	pop	r13
    7144:	cf 90       	pop	r12
    7146:	bf 90       	pop	r11
    7148:	af 90       	pop	r10
    714a:	9f 90       	pop	r9
    714c:	8f 90       	pop	r8
    714e:	7f 90       	pop	r7
    7150:	6f 90       	pop	r6
    7152:	5f 90       	pop	r5
    7154:	4f 90       	pop	r4
    7156:	08 95       	ret

00007158 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>:
	{
		/**
		 * This class processes and transforms sensor data such as converting latitude/longitude into
		 * x,y,z coordinates
		 */
		class SensorProcessingTask : public Task
    7158:	cf 93       	push	r28
    715a:	df 93       	push	r29
    715c:	1f 92       	push	r1
    715e:	1f 92       	push	r1
    7160:	cd b7       	in	r28, 0x3d	; 61
    7162:	de b7       	in	r29, 0x3e	; 62
    7164:	9a 83       	std	Y+2, r25	; 0x02
    7166:	89 83       	std	Y+1, r24	; 0x01
    7168:	89 81       	ldd	r24, Y+1	; 0x01
    716a:	9a 81       	ldd	r25, Y+2	; 0x02
    716c:	20 e7       	ldi	r18, 0x70	; 112
    716e:	32 e0       	ldi	r19, 0x02	; 2
    7170:	fc 01       	movw	r30, r24
    7172:	31 83       	std	Z+1, r19	; 0x01
    7174:	20 83       	st	Z, r18
    7176:	89 81       	ldd	r24, Y+1	; 0x01
    7178:	9a 81       	ldd	r25, Y+2	; 0x02
    717a:	0e 94 63 14 	call	0x28c6	; 0x28c6 <_ZN10helicopter5tasks4TaskD1Ev>
    717e:	80 e0       	ldi	r24, 0x00	; 0
    7180:	90 e0       	ldi	r25, 0x00	; 0
    7182:	81 70       	andi	r24, 0x01	; 1
    7184:	99 27       	eor	r25, r25
    7186:	00 97       	sbiw	r24, 0x00	; 0
    7188:	21 f0       	breq	.+8      	; 0x7192 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev+0x3a>
    718a:	89 81       	ldd	r24, Y+1	; 0x01
    718c:	9a 81       	ldd	r25, Y+2	; 0x02
    718e:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    7192:	0f 90       	pop	r0
    7194:	0f 90       	pop	r0
    7196:	df 91       	pop	r29
    7198:	cf 91       	pop	r28
    719a:	08 95       	ret

0000719c <_ZN10helicopter5tasks20SensorProcessingTaskD0Ev>:
    719c:	cf 93       	push	r28
    719e:	df 93       	push	r29
    71a0:	1f 92       	push	r1
    71a2:	1f 92       	push	r1
    71a4:	cd b7       	in	r28, 0x3d	; 61
    71a6:	de b7       	in	r29, 0x3e	; 62
    71a8:	9a 83       	std	Y+2, r25	; 0x02
    71aa:	89 83       	std	Y+1, r24	; 0x01
    71ac:	89 81       	ldd	r24, Y+1	; 0x01
    71ae:	9a 81       	ldd	r25, Y+2	; 0x02
    71b0:	0e 94 ac 38 	call	0x7158	; 0x7158 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>
    71b4:	89 81       	ldd	r24, Y+1	; 0x01
    71b6:	9a 81       	ldd	r25, Y+2	; 0x02
    71b8:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    71bc:	0f 90       	pop	r0
    71be:	0f 90       	pop	r0
    71c0:	df 91       	pop	r29
    71c2:	cf 91       	pop	r28
    71c4:	08 95       	ret

000071c6 <_ZN10helicopter10controller13PIDController16setZIntegralGainEf>:
				
				
				
				
				
				void setZIntegralGain(float val)
    71c6:	cf 93       	push	r28
    71c8:	df 93       	push	r29
    71ca:	00 d0       	rcall	.+0      	; 0x71cc <_ZN10helicopter10controller13PIDController16setZIntegralGainEf+0x6>
    71cc:	00 d0       	rcall	.+0      	; 0x71ce <_ZN10helicopter10controller13PIDController16setZIntegralGainEf+0x8>
    71ce:	cd b7       	in	r28, 0x3d	; 61
    71d0:	de b7       	in	r29, 0x3e	; 62
    71d2:	9a 83       	std	Y+2, r25	; 0x02
    71d4:	89 83       	std	Y+1, r24	; 0x01
    71d6:	4b 83       	std	Y+3, r20	; 0x03
    71d8:	5c 83       	std	Y+4, r21	; 0x04
    71da:	6d 83       	std	Y+5, r22	; 0x05
    71dc:	7e 83       	std	Y+6, r23	; 0x06
				{
					zIntegralGain = val;
    71de:	29 81       	ldd	r18, Y+1	; 0x01
    71e0:	3a 81       	ldd	r19, Y+2	; 0x02
    71e2:	8b 81       	ldd	r24, Y+3	; 0x03
    71e4:	9c 81       	ldd	r25, Y+4	; 0x04
    71e6:	ad 81       	ldd	r26, Y+5	; 0x05
    71e8:	be 81       	ldd	r27, Y+6	; 0x06
    71ea:	f9 01       	movw	r30, r18
    71ec:	84 af       	std	Z+60, r24	; 0x3c
    71ee:	95 af       	std	Z+61, r25	; 0x3d
    71f0:	a6 af       	std	Z+62, r26	; 0x3e
    71f2:	b7 af       	std	Z+63, r27	; 0x3f
				}
    71f4:	26 96       	adiw	r28, 0x06	; 6
    71f6:	0f b6       	in	r0, 0x3f	; 63
    71f8:	f8 94       	cli
    71fa:	de bf       	out	0x3e, r29	; 62
    71fc:	0f be       	out	0x3f, r0	; 63
    71fe:	cd bf       	out	0x3d, r28	; 61
    7200:	df 91       	pop	r29
    7202:	cf 91       	pop	r28
    7204:	08 95       	ret

00007206 <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf>:
				
				void setZDerivativeGain(float val)
    7206:	cf 93       	push	r28
    7208:	df 93       	push	r29
    720a:	00 d0       	rcall	.+0      	; 0x720c <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf+0x6>
    720c:	00 d0       	rcall	.+0      	; 0x720e <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf+0x8>
    720e:	cd b7       	in	r28, 0x3d	; 61
    7210:	de b7       	in	r29, 0x3e	; 62
    7212:	9a 83       	std	Y+2, r25	; 0x02
    7214:	89 83       	std	Y+1, r24	; 0x01
    7216:	4b 83       	std	Y+3, r20	; 0x03
    7218:	5c 83       	std	Y+4, r21	; 0x04
    721a:	6d 83       	std	Y+5, r22	; 0x05
    721c:	7e 83       	std	Y+6, r23	; 0x06
				{
					zDerivativeGain = val;
    721e:	89 81       	ldd	r24, Y+1	; 0x01
    7220:	9a 81       	ldd	r25, Y+2	; 0x02
    7222:	9c 01       	movw	r18, r24
    7224:	20 5c       	subi	r18, 0xC0	; 192
    7226:	3f 4f       	sbci	r19, 0xFF	; 255
    7228:	8b 81       	ldd	r24, Y+3	; 0x03
    722a:	9c 81       	ldd	r25, Y+4	; 0x04
    722c:	ad 81       	ldd	r26, Y+5	; 0x05
    722e:	be 81       	ldd	r27, Y+6	; 0x06
    7230:	f9 01       	movw	r30, r18
    7232:	80 83       	st	Z, r24
    7234:	91 83       	std	Z+1, r25	; 0x01
    7236:	a2 83       	std	Z+2, r26	; 0x02
    7238:	b3 83       	std	Z+3, r27	; 0x03
				}
    723a:	26 96       	adiw	r28, 0x06	; 6
    723c:	0f b6       	in	r0, 0x3f	; 63
    723e:	f8 94       	cli
    7240:	de bf       	out	0x3e, r29	; 62
    7242:	0f be       	out	0x3f, r0	; 63
    7244:	cd bf       	out	0x3d, r28	; 61
    7246:	df 91       	pop	r29
    7248:	cf 91       	pop	r28
    724a:	08 95       	ret

0000724c <_ZN10helicopter10controller13PIDController20setZProportionalGainEf>:
				
				void setZProportionalGain(float val)
    724c:	cf 93       	push	r28
    724e:	df 93       	push	r29
    7250:	00 d0       	rcall	.+0      	; 0x7252 <_ZN10helicopter10controller13PIDController20setZProportionalGainEf+0x6>
    7252:	00 d0       	rcall	.+0      	; 0x7254 <_ZN10helicopter10controller13PIDController20setZProportionalGainEf+0x8>
    7254:	cd b7       	in	r28, 0x3d	; 61
    7256:	de b7       	in	r29, 0x3e	; 62
    7258:	9a 83       	std	Y+2, r25	; 0x02
    725a:	89 83       	std	Y+1, r24	; 0x01
    725c:	4b 83       	std	Y+3, r20	; 0x03
    725e:	5c 83       	std	Y+4, r21	; 0x04
    7260:	6d 83       	std	Y+5, r22	; 0x05
    7262:	7e 83       	std	Y+6, r23	; 0x06
				{
					zProportionalGain = val;
    7264:	89 81       	ldd	r24, Y+1	; 0x01
    7266:	9a 81       	ldd	r25, Y+2	; 0x02
    7268:	9c 01       	movw	r18, r24
    726a:	2c 5b       	subi	r18, 0xBC	; 188
    726c:	3f 4f       	sbci	r19, 0xFF	; 255
    726e:	8b 81       	ldd	r24, Y+3	; 0x03
    7270:	9c 81       	ldd	r25, Y+4	; 0x04
    7272:	ad 81       	ldd	r26, Y+5	; 0x05
    7274:	be 81       	ldd	r27, Y+6	; 0x06
    7276:	f9 01       	movw	r30, r18
    7278:	80 83       	st	Z, r24
    727a:	91 83       	std	Z+1, r25	; 0x01
    727c:	a2 83       	std	Z+2, r26	; 0x02
    727e:	b3 83       	std	Z+3, r27	; 0x03
				}
    7280:	26 96       	adiw	r28, 0x06	; 6
    7282:	0f b6       	in	r0, 0x3f	; 63
    7284:	f8 94       	cli
    7286:	de bf       	out	0x3e, r29	; 62
    7288:	0f be       	out	0x3f, r0	; 63
    728a:	cd bf       	out	0x3d, r28	; 61
    728c:	df 91       	pop	r29
    728e:	cf 91       	pop	r28
    7290:	08 95       	ret

00007292 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf>:
				
				void setZAntiWindupGain(float val)
    7292:	cf 93       	push	r28
    7294:	df 93       	push	r29
    7296:	00 d0       	rcall	.+0      	; 0x7298 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf+0x6>
    7298:	00 d0       	rcall	.+0      	; 0x729a <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf+0x8>
    729a:	cd b7       	in	r28, 0x3d	; 61
    729c:	de b7       	in	r29, 0x3e	; 62
    729e:	9a 83       	std	Y+2, r25	; 0x02
    72a0:	89 83       	std	Y+1, r24	; 0x01
    72a2:	4b 83       	std	Y+3, r20	; 0x03
    72a4:	5c 83       	std	Y+4, r21	; 0x04
    72a6:	6d 83       	std	Y+5, r22	; 0x05
    72a8:	7e 83       	std	Y+6, r23	; 0x06
				{
					zAntiWindupGain = val;
    72aa:	89 81       	ldd	r24, Y+1	; 0x01
    72ac:	9a 81       	ldd	r25, Y+2	; 0x02
    72ae:	9c 01       	movw	r18, r24
    72b0:	28 5b       	subi	r18, 0xB8	; 184
    72b2:	3f 4f       	sbci	r19, 0xFF	; 255
    72b4:	8b 81       	ldd	r24, Y+3	; 0x03
    72b6:	9c 81       	ldd	r25, Y+4	; 0x04
    72b8:	ad 81       	ldd	r26, Y+5	; 0x05
    72ba:	be 81       	ldd	r27, Y+6	; 0x06
    72bc:	f9 01       	movw	r30, r18
    72be:	80 83       	st	Z, r24
    72c0:	91 83       	std	Z+1, r25	; 0x01
    72c2:	a2 83       	std	Z+2, r26	; 0x02
    72c4:	b3 83       	std	Z+3, r27	; 0x03
				}
    72c6:	26 96       	adiw	r28, 0x06	; 6
    72c8:	0f b6       	in	r0, 0x3f	; 63
    72ca:	f8 94       	cli
    72cc:	de bf       	out	0x3e, r29	; 62
    72ce:	0f be       	out	0x3f, r0	; 63
    72d0:	cd bf       	out	0x3d, r28	; 61
    72d2:	df 91       	pop	r29
    72d4:	cf 91       	pop	r28
    72d6:	08 95       	ret

000072d8 <_ZN10helicopter5tasks16SimTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEPNS_10controller13PIDControllerEii>:
#include "SyncMessage.h"

using namespace helicopter::tasks;
using namespace helicopter::messages;

SimTelemetryTask::SimTelemetryTask(GroundControlStationInterface *radioInterface, SystemModel *model, PIDController *pidController, int delay, int period) :
    72d8:	ef 92       	push	r14
    72da:	ff 92       	push	r15
    72dc:	0f 93       	push	r16
    72de:	1f 93       	push	r17
    72e0:	cf 93       	push	r28
    72e2:	df 93       	push	r29
    72e4:	cd b7       	in	r28, 0x3d	; 61
    72e6:	de b7       	in	r29, 0x3e	; 62
    72e8:	2c 97       	sbiw	r28, 0x0c	; 12
    72ea:	0f b6       	in	r0, 0x3f	; 63
    72ec:	f8 94       	cli
    72ee:	de bf       	out	0x3e, r29	; 62
    72f0:	0f be       	out	0x3f, r0	; 63
    72f2:	cd bf       	out	0x3d, r28	; 61
    72f4:	9a 83       	std	Y+2, r25	; 0x02
    72f6:	89 83       	std	Y+1, r24	; 0x01
    72f8:	7c 83       	std	Y+4, r23	; 0x04
    72fa:	6b 83       	std	Y+3, r22	; 0x03
    72fc:	5e 83       	std	Y+6, r21	; 0x06
    72fe:	4d 83       	std	Y+5, r20	; 0x05
    7300:	38 87       	std	Y+8, r19	; 0x08
    7302:	2f 83       	std	Y+7, r18	; 0x07
    7304:	1a 87       	std	Y+10, r17	; 0x0a
    7306:	09 87       	std	Y+9, r16	; 0x09
    7308:	fc 86       	std	Y+12, r15	; 0x0c
    730a:	eb 86       	std	Y+11, r14	; 0x0b
	Task(delay, period),
	radioInterface(radioInterface),
	model(model),
	pidController(pidController)
    730c:	89 81       	ldd	r24, Y+1	; 0x01
    730e:	9a 81       	ldd	r25, Y+2	; 0x02
    7310:	4b 85       	ldd	r20, Y+11	; 0x0b
    7312:	5c 85       	ldd	r21, Y+12	; 0x0c
    7314:	29 85       	ldd	r18, Y+9	; 0x09
    7316:	3a 85       	ldd	r19, Y+10	; 0x0a
    7318:	b9 01       	movw	r22, r18
    731a:	0e 94 0f 3c 	call	0x781e	; 0x781e <_ZN10helicopter5tasks4TaskC1Eii>
    731e:	89 81       	ldd	r24, Y+1	; 0x01
    7320:	9a 81       	ldd	r25, Y+2	; 0x02
    7322:	2e e7       	ldi	r18, 0x7E	; 126
    7324:	32 e0       	ldi	r19, 0x02	; 2
    7326:	fc 01       	movw	r30, r24
    7328:	31 83       	std	Z+1, r19	; 0x01
    732a:	20 83       	st	Z, r18
    732c:	89 81       	ldd	r24, Y+1	; 0x01
    732e:	9a 81       	ldd	r25, Y+2	; 0x02
    7330:	2b 81       	ldd	r18, Y+3	; 0x03
    7332:	3c 81       	ldd	r19, Y+4	; 0x04
    7334:	fc 01       	movw	r30, r24
    7336:	30 87       	std	Z+8, r19	; 0x08
    7338:	27 83       	std	Z+7, r18	; 0x07
    733a:	89 81       	ldd	r24, Y+1	; 0x01
    733c:	9a 81       	ldd	r25, Y+2	; 0x02
    733e:	2d 81       	ldd	r18, Y+5	; 0x05
    7340:	3e 81       	ldd	r19, Y+6	; 0x06
    7342:	fc 01       	movw	r30, r24
    7344:	32 87       	std	Z+10, r19	; 0x0a
    7346:	21 87       	std	Z+9, r18	; 0x09
    7348:	89 81       	ldd	r24, Y+1	; 0x01
    734a:	9a 81       	ldd	r25, Y+2	; 0x02
    734c:	2f 81       	ldd	r18, Y+7	; 0x07
    734e:	38 85       	ldd	r19, Y+8	; 0x08
    7350:	fc 01       	movw	r30, r24
    7352:	34 87       	std	Z+12, r19	; 0x0c
    7354:	23 87       	std	Z+11, r18	; 0x0b
{
	
}
    7356:	2c 96       	adiw	r28, 0x0c	; 12
    7358:	0f b6       	in	r0, 0x3f	; 63
    735a:	f8 94       	cli
    735c:	de bf       	out	0x3e, r29	; 62
    735e:	0f be       	out	0x3f, r0	; 63
    7360:	cd bf       	out	0x3d, r28	; 61
    7362:	df 91       	pop	r29
    7364:	cf 91       	pop	r28
    7366:	1f 91       	pop	r17
    7368:	0f 91       	pop	r16
    736a:	ff 90       	pop	r15
    736c:	ef 90       	pop	r14
    736e:	08 95       	ret

00007370 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv>:

void SimTelemetryTask::runTaskImpl() 
{
    7370:	cf 93       	push	r28
    7372:	df 93       	push	r29
    7374:	cd b7       	in	r28, 0x3d	; 61
    7376:	de b7       	in	r29, 0x3e	; 62
    7378:	2d 97       	sbiw	r28, 0x0d	; 13
    737a:	0f b6       	in	r0, 0x3f	; 63
    737c:	f8 94       	cli
    737e:	de bf       	out	0x3e, r29	; 62
    7380:	0f be       	out	0x3f, r0	; 63
    7382:	cd bf       	out	0x3d, r28	; 61
    7384:	9d 87       	std	Y+13, r25	; 0x0d
    7386:	8c 87       	std	Y+12, r24	; 0x0c
	
	//Send sync message to indicate to the ground control station that we are ready to receive data.
	//Without this sync message, the GCS could send data while the FC is asleep, which would cause the data
	//to overflow the usart buffer.
	SyncMessage syncMsg;
    7388:	ce 01       	movw	r24, r28
    738a:	05 96       	adiw	r24, 0x05	; 5
    738c:	0e 94 ea 23 	call	0x47d4	; 0x47d4 <_ZN10helicopter8messages11SyncMessageC1Ev>
	
	int status = radioInterface->transmit(&syncMsg);
    7390:	8c 85       	ldd	r24, Y+12	; 0x0c
    7392:	9d 85       	ldd	r25, Y+13	; 0x0d
    7394:	fc 01       	movw	r30, r24
    7396:	87 81       	ldd	r24, Z+7	; 0x07
    7398:	90 85       	ldd	r25, Z+8	; 0x08
    739a:	9e 01       	movw	r18, r28
    739c:	2b 5f       	subi	r18, 0xFB	; 251
    739e:	3f 4f       	sbci	r19, 0xFF	; 255
    73a0:	b9 01       	movw	r22, r18
    73a2:	0e 94 10 21 	call	0x4220	; 0x4220 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>
    73a6:	9a 83       	std	Y+2, r25	; 0x02
    73a8:	89 83       	std	Y+1, r24	; 0x01
	
	if (status == 0)
    73aa:	89 81       	ldd	r24, Y+1	; 0x01
    73ac:	9a 81       	ldd	r25, Y+2	; 0x02
    73ae:	00 97       	sbiw	r24, 0x00	; 0
    73b0:	09 f0       	breq	.+2      	; 0x73b4 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x44>
    73b2:	86 c1       	rjmp	.+780    	; 0x76c0 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x350>
	{
	
		//Use the radio interface to get the telemetry message from the simulator
		Message *message = NULL;
    73b4:	1b 86       	std	Y+11, r1	; 0x0b
    73b6:	1a 86       	std	Y+10, r1	; 0x0a
	
		status = radioInterface->receive(message);
    73b8:	8c 85       	ldd	r24, Y+12	; 0x0c
    73ba:	9d 85       	ldd	r25, Y+13	; 0x0d
    73bc:	fc 01       	movw	r30, r24
    73be:	87 81       	ldd	r24, Z+7	; 0x07
    73c0:	90 85       	ldd	r25, Z+8	; 0x08
    73c2:	9e 01       	movw	r18, r28
    73c4:	26 5f       	subi	r18, 0xF6	; 246
    73c6:	3f 4f       	sbci	r19, 0xFF	; 255
    73c8:	b9 01       	movw	r22, r18
    73ca:	0e 94 f6 21 	call	0x43ec	; 0x43ec <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE>
    73ce:	9a 83       	std	Y+2, r25	; 0x02
    73d0:	89 83       	std	Y+1, r24	; 0x01
	
		if (status == 0 && message != NULL)
    73d2:	89 81       	ldd	r24, Y+1	; 0x01
    73d4:	9a 81       	ldd	r25, Y+2	; 0x02
    73d6:	00 97       	sbiw	r24, 0x00	; 0
    73d8:	09 f0       	breq	.+2      	; 0x73dc <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x6c>
    73da:	72 c1       	rjmp	.+740    	; 0x76c0 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x350>
    73dc:	8a 85       	ldd	r24, Y+10	; 0x0a
    73de:	9b 85       	ldd	r25, Y+11	; 0x0b
    73e0:	00 97       	sbiw	r24, 0x00	; 0
    73e2:	09 f4       	brne	.+2      	; 0x73e6 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x76>
    73e4:	6d c1       	rjmp	.+730    	; 0x76c0 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x350>
		{
			SystemTelemetryMessage *telemMsg = (SystemTelemetryMessage*) message;
    73e6:	8a 85       	ldd	r24, Y+10	; 0x0a
    73e8:	9b 85       	ldd	r25, Y+11	; 0x0b
    73ea:	9c 83       	std	Y+4, r25	; 0x04
    73ec:	8b 83       	std	Y+3, r24	; 0x03
			
			//Update the model using the new data received from the simulator.
			telemMsg->updateModelFromMessageFromSimulator(model);
    73ee:	8c 85       	ldd	r24, Y+12	; 0x0c
    73f0:	9d 85       	ldd	r25, Y+13	; 0x0d
    73f2:	fc 01       	movw	r30, r24
    73f4:	21 85       	ldd	r18, Z+9	; 0x09
    73f6:	32 85       	ldd	r19, Z+10	; 0x0a
    73f8:	8b 81       	ldd	r24, Y+3	; 0x03
    73fa:	9c 81       	ldd	r25, Y+4	; 0x04
    73fc:	b9 01       	movw	r22, r18
    73fe:	0e 94 94 31 	call	0x6328	; 0x6328 <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE>
			
			pidController->setYawIntegralGain(telemMsg->YawIntegralGain);
    7402:	8b 81       	ldd	r24, Y+3	; 0x03
    7404:	9c 81       	ldd	r25, Y+4	; 0x04
    7406:	fc 01       	movw	r30, r24
    7408:	85 8d       	ldd	r24, Z+29	; 0x1d
    740a:	96 8d       	ldd	r25, Z+30	; 0x1e
    740c:	a7 8d       	ldd	r26, Z+31	; 0x1f
    740e:	b0 a1       	ldd	r27, Z+32	; 0x20
    7410:	2c 85       	ldd	r18, Y+12	; 0x0c
    7412:	3d 85       	ldd	r19, Y+13	; 0x0d
    7414:	f9 01       	movw	r30, r18
    7416:	23 85       	ldd	r18, Z+11	; 0x0b
    7418:	34 85       	ldd	r19, Z+12	; 0x0c
    741a:	ac 01       	movw	r20, r24
    741c:	bd 01       	movw	r22, r26
    741e:	c9 01       	movw	r24, r18
    7420:	0e 94 f5 1b 	call	0x37ea	; 0x37ea <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf>
			pidController->setYawDerivativeGain(telemMsg->YawDerivativeGain);
    7424:	8b 81       	ldd	r24, Y+3	; 0x03
    7426:	9c 81       	ldd	r25, Y+4	; 0x04
    7428:	fc 01       	movw	r30, r24
    742a:	81 a1       	ldd	r24, Z+33	; 0x21
    742c:	92 a1       	ldd	r25, Z+34	; 0x22
    742e:	a3 a1       	ldd	r26, Z+35	; 0x23
    7430:	b4 a1       	ldd	r27, Z+36	; 0x24
    7432:	2c 85       	ldd	r18, Y+12	; 0x0c
    7434:	3d 85       	ldd	r19, Y+13	; 0x0d
    7436:	f9 01       	movw	r30, r18
    7438:	23 85       	ldd	r18, Z+11	; 0x0b
    743a:	34 85       	ldd	r19, Z+12	; 0x0c
    743c:	ac 01       	movw	r20, r24
    743e:	bd 01       	movw	r22, r26
    7440:	c9 01       	movw	r24, r18
    7442:	0e 94 15 1c 	call	0x382a	; 0x382a <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf>
			pidController->setYawProportionalGain(telemMsg->YawProportionalGain);
    7446:	8b 81       	ldd	r24, Y+3	; 0x03
    7448:	9c 81       	ldd	r25, Y+4	; 0x04
    744a:	fc 01       	movw	r30, r24
    744c:	85 a1       	ldd	r24, Z+37	; 0x25
    744e:	96 a1       	ldd	r25, Z+38	; 0x26
    7450:	a7 a1       	ldd	r26, Z+39	; 0x27
    7452:	b0 a5       	ldd	r27, Z+40	; 0x28
    7454:	2c 85       	ldd	r18, Y+12	; 0x0c
    7456:	3d 85       	ldd	r19, Y+13	; 0x0d
    7458:	f9 01       	movw	r30, r18
    745a:	23 85       	ldd	r18, Z+11	; 0x0b
    745c:	34 85       	ldd	r19, Z+12	; 0x0c
    745e:	ac 01       	movw	r20, r24
    7460:	bd 01       	movw	r22, r26
    7462:	c9 01       	movw	r24, r18
    7464:	0e 94 d5 1b 	call	0x37aa	; 0x37aa <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf>
			pidController->setYawAntiWindupGain(telemMsg->YawAntiWindupGain);
    7468:	8b 81       	ldd	r24, Y+3	; 0x03
    746a:	9c 81       	ldd	r25, Y+4	; 0x04
    746c:	fc 01       	movw	r30, r24
    746e:	81 a5       	ldd	r24, Z+41	; 0x29
    7470:	92 a5       	ldd	r25, Z+42	; 0x2a
    7472:	a3 a5       	ldd	r26, Z+43	; 0x2b
    7474:	b4 a5       	ldd	r27, Z+44	; 0x2c
    7476:	2c 85       	ldd	r18, Y+12	; 0x0c
    7478:	3d 85       	ldd	r19, Y+13	; 0x0d
    747a:	f9 01       	movw	r30, r18
    747c:	23 85       	ldd	r18, Z+11	; 0x0b
    747e:	34 85       	ldd	r19, Z+12	; 0x0c
    7480:	ac 01       	movw	r20, r24
    7482:	bd 01       	movw	r22, r26
    7484:	c9 01       	movw	r24, r18
    7486:	0e 94 58 1c 	call	0x38b0	; 0x38b0 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf>
		
			pidController->setXIntegralGain(telemMsg->XIntegralGain);
    748a:	8b 81       	ldd	r24, Y+3	; 0x03
    748c:	9c 81       	ldd	r25, Y+4	; 0x04
    748e:	87 5b       	subi	r24, 0xB7	; 183
    7490:	9f 4f       	sbci	r25, 0xFF	; 255
    7492:	fc 01       	movw	r30, r24
    7494:	80 81       	ld	r24, Z
    7496:	91 81       	ldd	r25, Z+1	; 0x01
    7498:	a2 81       	ldd	r26, Z+2	; 0x02
    749a:	b3 81       	ldd	r27, Z+3	; 0x03
    749c:	2c 85       	ldd	r18, Y+12	; 0x0c
    749e:	3d 85       	ldd	r19, Y+13	; 0x0d
    74a0:	f9 01       	movw	r30, r18
    74a2:	23 85       	ldd	r18, Z+11	; 0x0b
    74a4:	34 85       	ldd	r19, Z+12	; 0x0c
    74a6:	ac 01       	movw	r20, r24
    74a8:	bd 01       	movw	r22, r26
    74aa:	c9 01       	movw	r24, r18
    74ac:	0e 94 c3 19 	call	0x3386	; 0x3386 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf>
			pidController->setXDerivativeGain(telemMsg->XDerivativeGain);
    74b0:	8b 81       	ldd	r24, Y+3	; 0x03
    74b2:	9c 81       	ldd	r25, Y+4	; 0x04
    74b4:	83 5b       	subi	r24, 0xB3	; 179
    74b6:	9f 4f       	sbci	r25, 0xFF	; 255
    74b8:	fc 01       	movw	r30, r24
    74ba:	80 81       	ld	r24, Z
    74bc:	91 81       	ldd	r25, Z+1	; 0x01
    74be:	a2 81       	ldd	r26, Z+2	; 0x02
    74c0:	b3 81       	ldd	r27, Z+3	; 0x03
    74c2:	2c 85       	ldd	r18, Y+12	; 0x0c
    74c4:	3d 85       	ldd	r19, Y+13	; 0x0d
    74c6:	f9 01       	movw	r30, r18
    74c8:	23 85       	ldd	r18, Z+11	; 0x0b
    74ca:	34 85       	ldd	r19, Z+12	; 0x0c
    74cc:	ac 01       	movw	r20, r24
    74ce:	bd 01       	movw	r22, r26
    74d0:	c9 01       	movw	r24, r18
    74d2:	0e 94 e3 19 	call	0x33c6	; 0x33c6 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf>
			pidController->setXProportionalGain(telemMsg->XProportionalGain);
    74d6:	8b 81       	ldd	r24, Y+3	; 0x03
    74d8:	9c 81       	ldd	r25, Y+4	; 0x04
    74da:	8f 5a       	subi	r24, 0xAF	; 175
    74dc:	9f 4f       	sbci	r25, 0xFF	; 255
    74de:	fc 01       	movw	r30, r24
    74e0:	80 81       	ld	r24, Z
    74e2:	91 81       	ldd	r25, Z+1	; 0x01
    74e4:	a2 81       	ldd	r26, Z+2	; 0x02
    74e6:	b3 81       	ldd	r27, Z+3	; 0x03
    74e8:	2c 85       	ldd	r18, Y+12	; 0x0c
    74ea:	3d 85       	ldd	r19, Y+13	; 0x0d
    74ec:	f9 01       	movw	r30, r18
    74ee:	23 85       	ldd	r18, Z+11	; 0x0b
    74f0:	34 85       	ldd	r19, Z+12	; 0x0c
    74f2:	ac 01       	movw	r20, r24
    74f4:	bd 01       	movw	r22, r26
    74f6:	c9 01       	movw	r24, r18
    74f8:	0e 94 03 1a 	call	0x3406	; 0x3406 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf>
			pidController->setXAntiWindupGain(telemMsg->XAntiWindupGain);
    74fc:	8b 81       	ldd	r24, Y+3	; 0x03
    74fe:	9c 81       	ldd	r25, Y+4	; 0x04
    7500:	8b 5a       	subi	r24, 0xAB	; 171
    7502:	9f 4f       	sbci	r25, 0xFF	; 255
    7504:	fc 01       	movw	r30, r24
    7506:	80 81       	ld	r24, Z
    7508:	91 81       	ldd	r25, Z+1	; 0x01
    750a:	a2 81       	ldd	r26, Z+2	; 0x02
    750c:	b3 81       	ldd	r27, Z+3	; 0x03
    750e:	2c 85       	ldd	r18, Y+12	; 0x0c
    7510:	3d 85       	ldd	r19, Y+13	; 0x0d
    7512:	f9 01       	movw	r30, r18
    7514:	23 85       	ldd	r18, Z+11	; 0x0b
    7516:	34 85       	ldd	r19, Z+12	; 0x0c
    7518:	ac 01       	movw	r20, r24
    751a:	bd 01       	movw	r22, r26
    751c:	c9 01       	movw	r24, r18
    751e:	0e 94 23 1a 	call	0x3446	; 0x3446 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf>
			pidController->setLongitudeInnerLoopGain(telemMsg->LongitudeInnerLoopGain);
    7522:	8b 81       	ldd	r24, Y+3	; 0x03
    7524:	9c 81       	ldd	r25, Y+4	; 0x04
    7526:	87 5a       	subi	r24, 0xA7	; 167
    7528:	9f 4f       	sbci	r25, 0xFF	; 255
    752a:	fc 01       	movw	r30, r24
    752c:	80 81       	ld	r24, Z
    752e:	91 81       	ldd	r25, Z+1	; 0x01
    7530:	a2 81       	ldd	r26, Z+2	; 0x02
    7532:	b3 81       	ldd	r27, Z+3	; 0x03
    7534:	2c 85       	ldd	r18, Y+12	; 0x0c
    7536:	3d 85       	ldd	r19, Y+13	; 0x0d
    7538:	f9 01       	movw	r30, r18
    753a:	23 85       	ldd	r18, Z+11	; 0x0b
    753c:	34 85       	ldd	r19, Z+12	; 0x0c
    753e:	ac 01       	movw	r20, r24
    7540:	bd 01       	movw	r22, r26
    7542:	c9 01       	movw	r24, r18
    7544:	0e 94 43 1a 	call	0x3486	; 0x3486 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf>
				
			pidController->setYIntegralGain(telemMsg->YIntegralGain);
    7548:	8b 81       	ldd	r24, Y+3	; 0x03
    754a:	9c 81       	ldd	r25, Y+4	; 0x04
    754c:	87 58       	subi	r24, 0x87	; 135
    754e:	9f 4f       	sbci	r25, 0xFF	; 255
    7550:	fc 01       	movw	r30, r24
    7552:	80 81       	ld	r24, Z
    7554:	91 81       	ldd	r25, Z+1	; 0x01
    7556:	a2 81       	ldd	r26, Z+2	; 0x02
    7558:	b3 81       	ldd	r27, Z+3	; 0x03
    755a:	2c 85       	ldd	r18, Y+12	; 0x0c
    755c:	3d 85       	ldd	r19, Y+13	; 0x0d
    755e:	f9 01       	movw	r30, r18
    7560:	23 85       	ldd	r18, Z+11	; 0x0b
    7562:	34 85       	ldd	r19, Z+12	; 0x0c
    7564:	ac 01       	movw	r20, r24
    7566:	bd 01       	movw	r22, r26
    7568:	c9 01       	movw	r24, r18
    756a:	0e 94 a9 1a 	call	0x3552	; 0x3552 <_ZN10helicopter10controller13PIDController16setYIntegralGainEf>
			pidController->setYDerivativeGain(telemMsg->YDerivativeGain);
    756e:	8b 81       	ldd	r24, Y+3	; 0x03
    7570:	9c 81       	ldd	r25, Y+4	; 0x04
    7572:	83 58       	subi	r24, 0x83	; 131
    7574:	9f 4f       	sbci	r25, 0xFF	; 255
    7576:	fc 01       	movw	r30, r24
    7578:	80 81       	ld	r24, Z
    757a:	91 81       	ldd	r25, Z+1	; 0x01
    757c:	a2 81       	ldd	r26, Z+2	; 0x02
    757e:	b3 81       	ldd	r27, Z+3	; 0x03
    7580:	2c 85       	ldd	r18, Y+12	; 0x0c
    7582:	3d 85       	ldd	r19, Y+13	; 0x0d
    7584:	f9 01       	movw	r30, r18
    7586:	23 85       	ldd	r18, Z+11	; 0x0b
    7588:	34 85       	ldd	r19, Z+12	; 0x0c
    758a:	ac 01       	movw	r20, r24
    758c:	bd 01       	movw	r22, r26
    758e:	c9 01       	movw	r24, r18
    7590:	0e 94 c9 1a 	call	0x3592	; 0x3592 <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf>
			pidController->setYProportionalGain(telemMsg->YProportionalGain);
    7594:	8b 81       	ldd	r24, Y+3	; 0x03
    7596:	9c 81       	ldd	r25, Y+4	; 0x04
    7598:	8f 57       	subi	r24, 0x7F	; 127
    759a:	9f 4f       	sbci	r25, 0xFF	; 255
    759c:	fc 01       	movw	r30, r24
    759e:	80 81       	ld	r24, Z
    75a0:	91 81       	ldd	r25, Z+1	; 0x01
    75a2:	a2 81       	ldd	r26, Z+2	; 0x02
    75a4:	b3 81       	ldd	r27, Z+3	; 0x03
    75a6:	2c 85       	ldd	r18, Y+12	; 0x0c
    75a8:	3d 85       	ldd	r19, Y+13	; 0x0d
    75aa:	f9 01       	movw	r30, r18
    75ac:	23 85       	ldd	r18, Z+11	; 0x0b
    75ae:	34 85       	ldd	r19, Z+12	; 0x0c
    75b0:	ac 01       	movw	r20, r24
    75b2:	bd 01       	movw	r22, r26
    75b4:	c9 01       	movw	r24, r18
    75b6:	0e 94 e9 1a 	call	0x35d2	; 0x35d2 <_ZN10helicopter10controller13PIDController20setYProportionalGainEf>
			pidController->setYAntiWindupGain(telemMsg->YAntiWindupGain);
    75ba:	8b 81       	ldd	r24, Y+3	; 0x03
    75bc:	9c 81       	ldd	r25, Y+4	; 0x04
    75be:	8b 57       	subi	r24, 0x7B	; 123
    75c0:	9f 4f       	sbci	r25, 0xFF	; 255
    75c2:	fc 01       	movw	r30, r24
    75c4:	80 81       	ld	r24, Z
    75c6:	91 81       	ldd	r25, Z+1	; 0x01
    75c8:	a2 81       	ldd	r26, Z+2	; 0x02
    75ca:	b3 81       	ldd	r27, Z+3	; 0x03
    75cc:	2c 85       	ldd	r18, Y+12	; 0x0c
    75ce:	3d 85       	ldd	r19, Y+13	; 0x0d
    75d0:	f9 01       	movw	r30, r18
    75d2:	23 85       	ldd	r18, Z+11	; 0x0b
    75d4:	34 85       	ldd	r19, Z+12	; 0x0c
    75d6:	ac 01       	movw	r20, r24
    75d8:	bd 01       	movw	r22, r26
    75da:	c9 01       	movw	r24, r18
    75dc:	0e 94 09 1b 	call	0x3612	; 0x3612 <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf>
			pidController->setLateralInnerLoopGain(telemMsg->LateralInnerLoopGain);
    75e0:	8b 81       	ldd	r24, Y+3	; 0x03
    75e2:	9c 81       	ldd	r25, Y+4	; 0x04
    75e4:	87 57       	subi	r24, 0x77	; 119
    75e6:	9f 4f       	sbci	r25, 0xFF	; 255
    75e8:	fc 01       	movw	r30, r24
    75ea:	80 81       	ld	r24, Z
    75ec:	91 81       	ldd	r25, Z+1	; 0x01
    75ee:	a2 81       	ldd	r26, Z+2	; 0x02
    75f0:	b3 81       	ldd	r27, Z+3	; 0x03
    75f2:	2c 85       	ldd	r18, Y+12	; 0x0c
    75f4:	3d 85       	ldd	r19, Y+13	; 0x0d
    75f6:	f9 01       	movw	r30, r18
    75f8:	23 85       	ldd	r18, Z+11	; 0x0b
    75fa:	34 85       	ldd	r19, Z+12	; 0x0c
    75fc:	ac 01       	movw	r20, r24
    75fe:	bd 01       	movw	r22, r26
    7600:	c9 01       	movw	r24, r18
    7602:	0e 94 29 1b 	call	0x3652	; 0x3652 <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf>
			
			pidController->setZIntegralGain(telemMsg->ZIntegralGain);
    7606:	8b 81       	ldd	r24, Y+3	; 0x03
    7608:	9c 81       	ldd	r25, Y+4	; 0x04
    760a:	8b 55       	subi	r24, 0x5B	; 91
    760c:	9f 4f       	sbci	r25, 0xFF	; 255
    760e:	fc 01       	movw	r30, r24
    7610:	80 81       	ld	r24, Z
    7612:	91 81       	ldd	r25, Z+1	; 0x01
    7614:	a2 81       	ldd	r26, Z+2	; 0x02
    7616:	b3 81       	ldd	r27, Z+3	; 0x03
    7618:	2c 85       	ldd	r18, Y+12	; 0x0c
    761a:	3d 85       	ldd	r19, Y+13	; 0x0d
    761c:	f9 01       	movw	r30, r18
    761e:	23 85       	ldd	r18, Z+11	; 0x0b
    7620:	34 85       	ldd	r19, Z+12	; 0x0c
    7622:	ac 01       	movw	r20, r24
    7624:	bd 01       	movw	r22, r26
    7626:	c9 01       	movw	r24, r18
    7628:	0e 94 e3 38 	call	0x71c6	; 0x71c6 <_ZN10helicopter10controller13PIDController16setZIntegralGainEf>
			pidController->setZDerivativeGain(telemMsg->ZDerivativeGain);
    762c:	8b 81       	ldd	r24, Y+3	; 0x03
    762e:	9c 81       	ldd	r25, Y+4	; 0x04
    7630:	87 55       	subi	r24, 0x57	; 87
    7632:	9f 4f       	sbci	r25, 0xFF	; 255
    7634:	fc 01       	movw	r30, r24
    7636:	80 81       	ld	r24, Z
    7638:	91 81       	ldd	r25, Z+1	; 0x01
    763a:	a2 81       	ldd	r26, Z+2	; 0x02
    763c:	b3 81       	ldd	r27, Z+3	; 0x03
    763e:	2c 85       	ldd	r18, Y+12	; 0x0c
    7640:	3d 85       	ldd	r19, Y+13	; 0x0d
    7642:	f9 01       	movw	r30, r18
    7644:	23 85       	ldd	r18, Z+11	; 0x0b
    7646:	34 85       	ldd	r19, Z+12	; 0x0c
    7648:	ac 01       	movw	r20, r24
    764a:	bd 01       	movw	r22, r26
    764c:	c9 01       	movw	r24, r18
    764e:	0e 94 03 39 	call	0x7206	; 0x7206 <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf>
			pidController->setZProportionalGain(telemMsg->ZProportionalGain);
    7652:	8b 81       	ldd	r24, Y+3	; 0x03
    7654:	9c 81       	ldd	r25, Y+4	; 0x04
    7656:	83 55       	subi	r24, 0x53	; 83
    7658:	9f 4f       	sbci	r25, 0xFF	; 255
    765a:	fc 01       	movw	r30, r24
    765c:	80 81       	ld	r24, Z
    765e:	91 81       	ldd	r25, Z+1	; 0x01
    7660:	a2 81       	ldd	r26, Z+2	; 0x02
    7662:	b3 81       	ldd	r27, Z+3	; 0x03
    7664:	2c 85       	ldd	r18, Y+12	; 0x0c
    7666:	3d 85       	ldd	r19, Y+13	; 0x0d
    7668:	f9 01       	movw	r30, r18
    766a:	23 85       	ldd	r18, Z+11	; 0x0b
    766c:	34 85       	ldd	r19, Z+12	; 0x0c
    766e:	ac 01       	movw	r20, r24
    7670:	bd 01       	movw	r22, r26
    7672:	c9 01       	movw	r24, r18
    7674:	0e 94 26 39 	call	0x724c	; 0x724c <_ZN10helicopter10controller13PIDController20setZProportionalGainEf>
			pidController->setZAntiWindupGain(telemMsg->ZAntiWindupGain);															
    7678:	8b 81       	ldd	r24, Y+3	; 0x03
    767a:	9c 81       	ldd	r25, Y+4	; 0x04
    767c:	8f 54       	subi	r24, 0x4F	; 79
    767e:	9f 4f       	sbci	r25, 0xFF	; 255
    7680:	fc 01       	movw	r30, r24
    7682:	80 81       	ld	r24, Z
    7684:	91 81       	ldd	r25, Z+1	; 0x01
    7686:	a2 81       	ldd	r26, Z+2	; 0x02
    7688:	b3 81       	ldd	r27, Z+3	; 0x03
    768a:	2c 85       	ldd	r18, Y+12	; 0x0c
    768c:	3d 85       	ldd	r19, Y+13	; 0x0d
    768e:	f9 01       	movw	r30, r18
    7690:	23 85       	ldd	r18, Z+11	; 0x0b
    7692:	34 85       	ldd	r19, Z+12	; 0x0c
    7694:	ac 01       	movw	r20, r24
    7696:	bd 01       	movw	r22, r26
    7698:	c9 01       	movw	r24, r18
    769a:	0e 94 49 39 	call	0x7292	; 0x7292 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf>
		
			delete message;
    769e:	8a 85       	ldd	r24, Y+10	; 0x0a
    76a0:	9b 85       	ldd	r25, Y+11	; 0x0b
    76a2:	00 97       	sbiw	r24, 0x00	; 0
    76a4:	69 f0       	breq	.+26     	; 0x76c0 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x350>
    76a6:	8a 85       	ldd	r24, Y+10	; 0x0a
    76a8:	9b 85       	ldd	r25, Y+11	; 0x0b
    76aa:	fc 01       	movw	r30, r24
    76ac:	80 81       	ld	r24, Z
    76ae:	91 81       	ldd	r25, Z+1	; 0x01
    76b0:	02 96       	adiw	r24, 0x02	; 2
    76b2:	fc 01       	movw	r30, r24
    76b4:	20 81       	ld	r18, Z
    76b6:	31 81       	ldd	r19, Z+1	; 0x01
    76b8:	8a 85       	ldd	r24, Y+10	; 0x0a
    76ba:	9b 85       	ldd	r25, Y+11	; 0x0b
    76bc:	f9 01       	movw	r30, r18
    76be:	19 95       	eicall
		}
	}
	
	//Update instrumentation fields
	switch (status)
    76c0:	89 81       	ldd	r24, Y+1	; 0x01
    76c2:	9a 81       	ldd	r25, Y+2	; 0x02
    76c4:	8e 3f       	cpi	r24, 0xFE	; 254
    76c6:	ff ef       	ldi	r31, 0xFF	; 255
    76c8:	9f 07       	cpc	r25, r31
    76ca:	41 f1       	breq	.+80     	; 0x771c <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x3ac>
    76cc:	8f 3f       	cpi	r24, 0xFF	; 255
    76ce:	2f ef       	ldi	r18, 0xFF	; 255
    76d0:	92 07       	cpc	r25, r18
    76d2:	2c f4       	brge	.+10     	; 0x76de <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x36e>
    76d4:	8d 3f       	cpi	r24, 0xFD	; 253
    76d6:	ef ef       	ldi	r30, 0xFF	; 255
    76d8:	9e 07       	cpc	r25, r30
    76da:	b9 f1       	breq	.+110    	; 0x774a <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x3da>
    76dc:	4d c0       	rjmp	.+154    	; 0x7778 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x408>
    76de:	8f 3f       	cpi	r24, 0xFF	; 255
    76e0:	ff ef       	ldi	r31, 0xFF	; 255
    76e2:	9f 07       	cpc	r25, r31
    76e4:	21 f0       	breq	.+8      	; 0x76ee <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x37e>
    76e6:	00 97       	sbiw	r24, 0x00	; 0
    76e8:	09 f4       	brne	.+2      	; 0x76ec <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x37c>
    76ea:	47 c0       	rjmp	.+142    	; 0x777a <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x40a>
    76ec:	45 c0       	rjmp	.+138    	; 0x7778 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x408>
	{
		case 0:
			break;
		case -1:
			model->Timeouts(model->Timeouts() + 1);
    76ee:	8c 85       	ldd	r24, Y+12	; 0x0c
    76f0:	9d 85       	ldd	r25, Y+13	; 0x0d
    76f2:	fc 01       	movw	r30, r24
    76f4:	81 85       	ldd	r24, Z+9	; 0x09
    76f6:	92 85       	ldd	r25, Z+10	; 0x0a
    76f8:	0e 94 a1 27 	call	0x4f42	; 0x4f42 <_ZNK10helicopter5model11SystemModel8TimeoutsEv>
    76fc:	dc 01       	movw	r26, r24
    76fe:	cb 01       	movw	r24, r22
    7700:	01 96       	adiw	r24, 0x01	; 1
    7702:	a1 1d       	adc	r26, r1
    7704:	b1 1d       	adc	r27, r1
    7706:	2c 85       	ldd	r18, Y+12	; 0x0c
    7708:	3d 85       	ldd	r19, Y+13	; 0x0d
    770a:	f9 01       	movw	r30, r18
    770c:	21 85       	ldd	r18, Z+9	; 0x09
    770e:	32 85       	ldd	r19, Z+10	; 0x0a
    7710:	ac 01       	movw	r20, r24
    7712:	bd 01       	movw	r22, r26
    7714:	c9 01       	movw	r24, r18
    7716:	0e 94 b9 27 	call	0x4f72	; 0x4f72 <_ZN10helicopter5model11SystemModel8TimeoutsEl>
			break;
    771a:	30 c0       	rjmp	.+96     	; 0x777c <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x40c>
		case -2:
			model->UnrecognizedMsgTypes(model->UnrecognizedMsgTypes() + 1);
    771c:	8c 85       	ldd	r24, Y+12	; 0x0c
    771e:	9d 85       	ldd	r25, Y+13	; 0x0d
    7720:	fc 01       	movw	r30, r24
    7722:	81 85       	ldd	r24, Z+9	; 0x09
    7724:	92 85       	ldd	r25, Z+10	; 0x0a
    7726:	0e 94 dc 27 	call	0x4fb8	; 0x4fb8 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>
    772a:	dc 01       	movw	r26, r24
    772c:	cb 01       	movw	r24, r22
    772e:	01 96       	adiw	r24, 0x01	; 1
    7730:	a1 1d       	adc	r26, r1
    7732:	b1 1d       	adc	r27, r1
    7734:	2c 85       	ldd	r18, Y+12	; 0x0c
    7736:	3d 85       	ldd	r19, Y+13	; 0x0d
    7738:	f9 01       	movw	r30, r18
    773a:	21 85       	ldd	r18, Z+9	; 0x09
    773c:	32 85       	ldd	r19, Z+10	; 0x0a
    773e:	ac 01       	movw	r20, r24
    7740:	bd 01       	movw	r22, r26
    7742:	c9 01       	movw	r24, r18
    7744:	0e 94 f4 27 	call	0x4fe8	; 0x4fe8 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl>
			break;
    7748:	19 c0       	rjmp	.+50     	; 0x777c <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x40c>
		case -3:
			model->ChecksumErrors(model->ChecksumErrors() + 1);
    774a:	8c 85       	ldd	r24, Y+12	; 0x0c
    774c:	9d 85       	ldd	r25, Y+13	; 0x0d
    774e:	fc 01       	movw	r30, r24
    7750:	81 85       	ldd	r24, Z+9	; 0x09
    7752:	92 85       	ldd	r25, Z+10	; 0x0a
    7754:	0e 94 17 28 	call	0x502e	; 0x502e <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>
    7758:	dc 01       	movw	r26, r24
    775a:	cb 01       	movw	r24, r22
    775c:	01 96       	adiw	r24, 0x01	; 1
    775e:	a1 1d       	adc	r26, r1
    7760:	b1 1d       	adc	r27, r1
    7762:	2c 85       	ldd	r18, Y+12	; 0x0c
    7764:	3d 85       	ldd	r19, Y+13	; 0x0d
    7766:	f9 01       	movw	r30, r18
    7768:	21 85       	ldd	r18, Z+9	; 0x09
    776a:	32 85       	ldd	r19, Z+10	; 0x0a
    776c:	ac 01       	movw	r20, r24
    776e:	bd 01       	movw	r22, r26
    7770:	c9 01       	movw	r24, r18
    7772:	0e 94 2f 28 	call	0x505e	; 0x505e <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl>
		default:
			break;
    7776:	02 c0       	rjmp	.+4      	; 0x777c <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x40c>
    7778:	01 c0       	rjmp	.+2      	; 0x777c <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x40c>
	
	//Update instrumentation fields
	switch (status)
	{
		case 0:
			break;
    777a:	00 00       	nop
		case -3:
			model->ChecksumErrors(model->ChecksumErrors() + 1);
		default:
			break;
		
	}
    777c:	ce 01       	movw	r24, r28
    777e:	05 96       	adiw	r24, 0x05	; 5
    7780:	0e 94 05 24 	call	0x480a	; 0x480a <_ZN10helicopter8messages11SyncMessageD1Ev>
}
    7784:	2d 96       	adiw	r28, 0x0d	; 13
    7786:	0f b6       	in	r0, 0x3f	; 63
    7788:	f8 94       	cli
    778a:	de bf       	out	0x3e, r29	; 62
    778c:	0f be       	out	0x3f, r0	; 63
    778e:	cd bf       	out	0x3d, r28	; 61
    7790:	df 91       	pop	r29
    7792:	cf 91       	pop	r28
    7794:	08 95       	ret

00007796 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>:
	namespace tasks
	{
		/**
		 * Task to receive simulator telemetry data from the ground control station.
		 */
		class SimTelemetryTask : public Task
    7796:	cf 93       	push	r28
    7798:	df 93       	push	r29
    779a:	1f 92       	push	r1
    779c:	1f 92       	push	r1
    779e:	cd b7       	in	r28, 0x3d	; 61
    77a0:	de b7       	in	r29, 0x3e	; 62
    77a2:	9a 83       	std	Y+2, r25	; 0x02
    77a4:	89 83       	std	Y+1, r24	; 0x01
    77a6:	89 81       	ldd	r24, Y+1	; 0x01
    77a8:	9a 81       	ldd	r25, Y+2	; 0x02
    77aa:	2e e7       	ldi	r18, 0x7E	; 126
    77ac:	32 e0       	ldi	r19, 0x02	; 2
    77ae:	fc 01       	movw	r30, r24
    77b0:	31 83       	std	Z+1, r19	; 0x01
    77b2:	20 83       	st	Z, r18
    77b4:	89 81       	ldd	r24, Y+1	; 0x01
    77b6:	9a 81       	ldd	r25, Y+2	; 0x02
    77b8:	0e 94 63 14 	call	0x28c6	; 0x28c6 <_ZN10helicopter5tasks4TaskD1Ev>
    77bc:	80 e0       	ldi	r24, 0x00	; 0
    77be:	90 e0       	ldi	r25, 0x00	; 0
    77c0:	81 70       	andi	r24, 0x01	; 1
    77c2:	99 27       	eor	r25, r25
    77c4:	00 97       	sbiw	r24, 0x00	; 0
    77c6:	21 f0       	breq	.+8      	; 0x77d0 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev+0x3a>
    77c8:	89 81       	ldd	r24, Y+1	; 0x01
    77ca:	9a 81       	ldd	r25, Y+2	; 0x02
    77cc:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    77d0:	0f 90       	pop	r0
    77d2:	0f 90       	pop	r0
    77d4:	df 91       	pop	r29
    77d6:	cf 91       	pop	r28
    77d8:	08 95       	ret

000077da <_ZN10helicopter5tasks16SimTelemetryTaskD0Ev>:
    77da:	cf 93       	push	r28
    77dc:	df 93       	push	r29
    77de:	1f 92       	push	r1
    77e0:	1f 92       	push	r1
    77e2:	cd b7       	in	r28, 0x3d	; 61
    77e4:	de b7       	in	r29, 0x3e	; 62
    77e6:	9a 83       	std	Y+2, r25	; 0x02
    77e8:	89 83       	std	Y+1, r24	; 0x01
    77ea:	89 81       	ldd	r24, Y+1	; 0x01
    77ec:	9a 81       	ldd	r25, Y+2	; 0x02
    77ee:	0e 94 cb 3b 	call	0x7796	; 0x7796 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>
    77f2:	89 81       	ldd	r24, Y+1	; 0x01
    77f4:	9a 81       	ldd	r25, Y+2	; 0x02
    77f6:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    77fa:	0f 90       	pop	r0
    77fc:	0f 90       	pop	r0
    77fe:	df 91       	pop	r29
    7800:	cf 91       	pop	r28
    7802:	08 95       	ret

00007804 <_ZN10helicopter5tasks4Task11runTaskImplEv>:
				
			protected:
				/**
				* Implemented by subclasses for the actual logic to execute
				*/
				virtual void runTaskImpl(){;}
    7804:	cf 93       	push	r28
    7806:	df 93       	push	r29
    7808:	1f 92       	push	r1
    780a:	1f 92       	push	r1
    780c:	cd b7       	in	r28, 0x3d	; 61
    780e:	de b7       	in	r29, 0x3e	; 62
    7810:	9a 83       	std	Y+2, r25	; 0x02
    7812:	89 83       	std	Y+1, r24	; 0x01
    7814:	0f 90       	pop	r0
    7816:	0f 90       	pop	r0
    7818:	df 91       	pop	r29
    781a:	cf 91       	pop	r28
    781c:	08 95       	ret

0000781e <_ZN10helicopter5tasks4TaskC1Eii>:
#include <avr/interrupt.h>
#include "Task.h"

using namespace helicopter::tasks;

Task::Task(int delay, int period)
    781e:	cf 93       	push	r28
    7820:	df 93       	push	r29
    7822:	00 d0       	rcall	.+0      	; 0x7824 <_ZN10helicopter5tasks4TaskC1Eii+0x6>
    7824:	00 d0       	rcall	.+0      	; 0x7826 <_ZN10helicopter5tasks4TaskC1Eii+0x8>
    7826:	cd b7       	in	r28, 0x3d	; 61
    7828:	de b7       	in	r29, 0x3e	; 62
    782a:	9a 83       	std	Y+2, r25	; 0x02
    782c:	89 83       	std	Y+1, r24	; 0x01
    782e:	7c 83       	std	Y+4, r23	; 0x04
    7830:	6b 83       	std	Y+3, r22	; 0x03
    7832:	5e 83       	std	Y+6, r21	; 0x06
    7834:	4d 83       	std	Y+5, r20	; 0x05
    7836:	89 81       	ldd	r24, Y+1	; 0x01
    7838:	9a 81       	ldd	r25, Y+2	; 0x02
    783a:	2c e8       	ldi	r18, 0x8C	; 140
    783c:	32 e0       	ldi	r19, 0x02	; 2
    783e:	fc 01       	movw	r30, r24
    7840:	31 83       	std	Z+1, r19	; 0x01
    7842:	20 83       	st	Z, r18
{
	this->delay = delay;
    7844:	89 81       	ldd	r24, Y+1	; 0x01
    7846:	9a 81       	ldd	r25, Y+2	; 0x02
    7848:	2b 81       	ldd	r18, Y+3	; 0x03
    784a:	3c 81       	ldd	r19, Y+4	; 0x04
    784c:	fc 01       	movw	r30, r24
    784e:	33 83       	std	Z+3, r19	; 0x03
    7850:	22 83       	std	Z+2, r18	; 0x02
	this->period = period;
    7852:	89 81       	ldd	r24, Y+1	; 0x01
    7854:	9a 81       	ldd	r25, Y+2	; 0x02
    7856:	2d 81       	ldd	r18, Y+5	; 0x05
    7858:	3e 81       	ldd	r19, Y+6	; 0x06
    785a:	fc 01       	movw	r30, r24
    785c:	35 83       	std	Z+5, r19	; 0x05
    785e:	24 83       	std	Z+4, r18	; 0x04
	this->isReadyToRun = false;
    7860:	89 81       	ldd	r24, Y+1	; 0x01
    7862:	9a 81       	ldd	r25, Y+2	; 0x02
    7864:	fc 01       	movw	r30, r24
    7866:	16 82       	std	Z+6, r1	; 0x06
}
    7868:	26 96       	adiw	r28, 0x06	; 6
    786a:	0f b6       	in	r0, 0x3f	; 63
    786c:	f8 94       	cli
    786e:	de bf       	out	0x3e, r29	; 62
    7870:	0f be       	out	0x3f, r0	; 63
    7872:	cd bf       	out	0x3d, r28	; 61
    7874:	df 91       	pop	r29
    7876:	cf 91       	pop	r28
    7878:	08 95       	ret

0000787a <_ZN10helicopter5tasks4Task7runTaskEv>:

void Task::runTask()
{
    787a:	cf 93       	push	r28
    787c:	df 93       	push	r29
    787e:	1f 92       	push	r1
    7880:	1f 92       	push	r1
    7882:	cd b7       	in	r28, 0x3d	; 61
    7884:	de b7       	in	r29, 0x3e	; 62
    7886:	9a 83       	std	Y+2, r25	; 0x02
    7888:	89 83       	std	Y+1, r24	; 0x01
	//Disable interrupts 
	cli();
    788a:	f8 94       	cli
	
	//run task
	this->runTaskImpl();
    788c:	89 81       	ldd	r24, Y+1	; 0x01
    788e:	9a 81       	ldd	r25, Y+2	; 0x02
    7890:	fc 01       	movw	r30, r24
    7892:	80 81       	ld	r24, Z
    7894:	91 81       	ldd	r25, Z+1	; 0x01
    7896:	fc 01       	movw	r30, r24
    7898:	20 81       	ld	r18, Z
    789a:	31 81       	ldd	r19, Z+1	; 0x01
    789c:	89 81       	ldd	r24, Y+1	; 0x01
    789e:	9a 81       	ldd	r25, Y+2	; 0x02
    78a0:	f9 01       	movw	r30, r18
    78a2:	19 95       	eicall
	
	//Re-enable interrupts
	sei();
    78a4:	78 94       	sei
    78a6:	0f 90       	pop	r0
    78a8:	0f 90       	pop	r0
    78aa:	df 91       	pop	r29
    78ac:	cf 91       	pop	r28
    78ae:	08 95       	ret

000078b0 <_ZN10helicopter5tasks21TransmitTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEii>:
#include "TransmitTelemetryTask.h"
#include "SystemTelemetryMessage.h"

using namespace helicopter::tasks;

TransmitTelemetryTask::TransmitTelemetryTask(GroundControlStationInterface *radioInterface, SystemModel *model, int delay, int period) :
    78b0:	0f 93       	push	r16
    78b2:	1f 93       	push	r17
    78b4:	cf 93       	push	r28
    78b6:	df 93       	push	r29
    78b8:	cd b7       	in	r28, 0x3d	; 61
    78ba:	de b7       	in	r29, 0x3e	; 62
    78bc:	2a 97       	sbiw	r28, 0x0a	; 10
    78be:	0f b6       	in	r0, 0x3f	; 63
    78c0:	f8 94       	cli
    78c2:	de bf       	out	0x3e, r29	; 62
    78c4:	0f be       	out	0x3f, r0	; 63
    78c6:	cd bf       	out	0x3d, r28	; 61
    78c8:	9a 83       	std	Y+2, r25	; 0x02
    78ca:	89 83       	std	Y+1, r24	; 0x01
    78cc:	7c 83       	std	Y+4, r23	; 0x04
    78ce:	6b 83       	std	Y+3, r22	; 0x03
    78d0:	5e 83       	std	Y+6, r21	; 0x06
    78d2:	4d 83       	std	Y+5, r20	; 0x05
    78d4:	38 87       	std	Y+8, r19	; 0x08
    78d6:	2f 83       	std	Y+7, r18	; 0x07
    78d8:	1a 87       	std	Y+10, r17	; 0x0a
    78da:	09 87       	std	Y+9, r16	; 0x09
	Task(delay, period),
	radioInterface(radioInterface),
	model(model)
    78dc:	89 81       	ldd	r24, Y+1	; 0x01
    78de:	9a 81       	ldd	r25, Y+2	; 0x02
    78e0:	49 85       	ldd	r20, Y+9	; 0x09
    78e2:	5a 85       	ldd	r21, Y+10	; 0x0a
    78e4:	2f 81       	ldd	r18, Y+7	; 0x07
    78e6:	38 85       	ldd	r19, Y+8	; 0x08
    78e8:	b9 01       	movw	r22, r18
    78ea:	0e 94 0f 3c 	call	0x781e	; 0x781e <_ZN10helicopter5tasks4TaskC1Eii>
    78ee:	89 81       	ldd	r24, Y+1	; 0x01
    78f0:	9a 81       	ldd	r25, Y+2	; 0x02
    78f2:	2a e9       	ldi	r18, 0x9A	; 154
    78f4:	32 e0       	ldi	r19, 0x02	; 2
    78f6:	fc 01       	movw	r30, r24
    78f8:	31 83       	std	Z+1, r19	; 0x01
    78fa:	20 83       	st	Z, r18
    78fc:	89 81       	ldd	r24, Y+1	; 0x01
    78fe:	9a 81       	ldd	r25, Y+2	; 0x02
    7900:	2b 81       	ldd	r18, Y+3	; 0x03
    7902:	3c 81       	ldd	r19, Y+4	; 0x04
    7904:	fc 01       	movw	r30, r24
    7906:	30 87       	std	Z+8, r19	; 0x08
    7908:	27 83       	std	Z+7, r18	; 0x07
    790a:	89 81       	ldd	r24, Y+1	; 0x01
    790c:	9a 81       	ldd	r25, Y+2	; 0x02
    790e:	2d 81       	ldd	r18, Y+5	; 0x05
    7910:	3e 81       	ldd	r19, Y+6	; 0x06
    7912:	fc 01       	movw	r30, r24
    7914:	32 87       	std	Z+10, r19	; 0x0a
    7916:	21 87       	std	Z+9, r18	; 0x09
{
	
}
    7918:	2a 96       	adiw	r28, 0x0a	; 10
    791a:	0f b6       	in	r0, 0x3f	; 63
    791c:	f8 94       	cli
    791e:	de bf       	out	0x3e, r29	; 62
    7920:	0f be       	out	0x3f, r0	; 63
    7922:	cd bf       	out	0x3d, r28	; 61
    7924:	df 91       	pop	r29
    7926:	cf 91       	pop	r28
    7928:	1f 91       	pop	r17
    792a:	0f 91       	pop	r16
    792c:	08 95       	ret

0000792e <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv>:


void TransmitTelemetryTask::runTaskImpl()
{
    792e:	cf 93       	push	r28
    7930:	df 93       	push	r29
    7932:	00 d0       	rcall	.+0      	; 0x7934 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv+0x6>
    7934:	1f 92       	push	r1
    7936:	cd b7       	in	r28, 0x3d	; 61
    7938:	de b7       	in	r29, 0x3e	; 62
    793a:	9c 83       	std	Y+4, r25	; 0x04
    793c:	8b 83       	std	Y+3, r24	; 0x03
	//SystemTelemetryMessage *message = model->CreateTelemetryMessage();
	SystemTelemetryMessage *message = SystemTelemetryMessage::buildMessageFromModel(model);
    793e:	8b 81       	ldd	r24, Y+3	; 0x03
    7940:	9c 81       	ldd	r25, Y+4	; 0x04
    7942:	fc 01       	movw	r30, r24
    7944:	81 85       	ldd	r24, Z+9	; 0x09
    7946:	92 85       	ldd	r25, Z+10	; 0x0a
    7948:	0e 94 d9 2f 	call	0x5fb2	; 0x5fb2 <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE>
    794c:	9a 83       	std	Y+2, r25	; 0x02
    794e:	89 83       	std	Y+1, r24	; 0x01
	
	//TODO add some error handling in here
	radioInterface->transmit(message);
    7950:	8b 81       	ldd	r24, Y+3	; 0x03
    7952:	9c 81       	ldd	r25, Y+4	; 0x04
    7954:	fc 01       	movw	r30, r24
    7956:	87 81       	ldd	r24, Z+7	; 0x07
    7958:	90 85       	ldd	r25, Z+8	; 0x08
    795a:	29 81       	ldd	r18, Y+1	; 0x01
    795c:	3a 81       	ldd	r19, Y+2	; 0x02
    795e:	b9 01       	movw	r22, r18
    7960:	0e 94 10 21 	call	0x4220	; 0x4220 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>
	
	delete message;
    7964:	89 81       	ldd	r24, Y+1	; 0x01
    7966:	9a 81       	ldd	r25, Y+2	; 0x02
    7968:	00 97       	sbiw	r24, 0x00	; 0
    796a:	69 f0       	breq	.+26     	; 0x7986 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv+0x58>
    796c:	89 81       	ldd	r24, Y+1	; 0x01
    796e:	9a 81       	ldd	r25, Y+2	; 0x02
    7970:	fc 01       	movw	r30, r24
    7972:	80 81       	ld	r24, Z
    7974:	91 81       	ldd	r25, Z+1	; 0x01
    7976:	02 96       	adiw	r24, 0x02	; 2
    7978:	fc 01       	movw	r30, r24
    797a:	20 81       	ld	r18, Z
    797c:	31 81       	ldd	r19, Z+1	; 0x01
    797e:	89 81       	ldd	r24, Y+1	; 0x01
    7980:	9a 81       	ldd	r25, Y+2	; 0x02
    7982:	f9 01       	movw	r30, r18
    7984:	19 95       	eicall
    7986:	0f 90       	pop	r0
    7988:	0f 90       	pop	r0
    798a:	0f 90       	pop	r0
    798c:	0f 90       	pop	r0
    798e:	df 91       	pop	r29
    7990:	cf 91       	pop	r28
    7992:	08 95       	ret

00007994 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class transmits flight computer telemetry information to the ground control station.
		 */
		class TransmitTelemetryTask : public Task
    7994:	cf 93       	push	r28
    7996:	df 93       	push	r29
    7998:	1f 92       	push	r1
    799a:	1f 92       	push	r1
    799c:	cd b7       	in	r28, 0x3d	; 61
    799e:	de b7       	in	r29, 0x3e	; 62
    79a0:	9a 83       	std	Y+2, r25	; 0x02
    79a2:	89 83       	std	Y+1, r24	; 0x01
    79a4:	89 81       	ldd	r24, Y+1	; 0x01
    79a6:	9a 81       	ldd	r25, Y+2	; 0x02
    79a8:	2a e9       	ldi	r18, 0x9A	; 154
    79aa:	32 e0       	ldi	r19, 0x02	; 2
    79ac:	fc 01       	movw	r30, r24
    79ae:	31 83       	std	Z+1, r19	; 0x01
    79b0:	20 83       	st	Z, r18
    79b2:	89 81       	ldd	r24, Y+1	; 0x01
    79b4:	9a 81       	ldd	r25, Y+2	; 0x02
    79b6:	0e 94 63 14 	call	0x28c6	; 0x28c6 <_ZN10helicopter5tasks4TaskD1Ev>
    79ba:	80 e0       	ldi	r24, 0x00	; 0
    79bc:	90 e0       	ldi	r25, 0x00	; 0
    79be:	81 70       	andi	r24, 0x01	; 1
    79c0:	99 27       	eor	r25, r25
    79c2:	00 97       	sbiw	r24, 0x00	; 0
    79c4:	21 f0       	breq	.+8      	; 0x79ce <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev+0x3a>
    79c6:	89 81       	ldd	r24, Y+1	; 0x01
    79c8:	9a 81       	ldd	r25, Y+2	; 0x02
    79ca:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    79ce:	0f 90       	pop	r0
    79d0:	0f 90       	pop	r0
    79d2:	df 91       	pop	r29
    79d4:	cf 91       	pop	r28
    79d6:	08 95       	ret

000079d8 <_ZN10helicopter5tasks21TransmitTelemetryTaskD0Ev>:
    79d8:	cf 93       	push	r28
    79da:	df 93       	push	r29
    79dc:	1f 92       	push	r1
    79de:	1f 92       	push	r1
    79e0:	cd b7       	in	r28, 0x3d	; 61
    79e2:	de b7       	in	r29, 0x3e	; 62
    79e4:	9a 83       	std	Y+2, r25	; 0x02
    79e6:	89 83       	std	Y+1, r24	; 0x01
    79e8:	89 81       	ldd	r24, Y+1	; 0x01
    79ea:	9a 81       	ldd	r25, Y+2	; 0x02
    79ec:	0e 94 ca 3c 	call	0x7994	; 0x7994 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>
    79f0:	89 81       	ldd	r24, Y+1	; 0x01
    79f2:	9a 81       	ldd	r25, Y+2	; 0x02
    79f4:	0e 94 12 3d 	call	0x7a24	; 0x7a24 <_ZdlPv>
    79f8:	0f 90       	pop	r0
    79fa:	0f 90       	pop	r0
    79fc:	df 91       	pop	r29
    79fe:	cf 91       	pop	r28
    7a00:	08 95       	ret

00007a02 <_Znwj>:
 *  Author: HP User
 */ 
#include <CommonHeader.h>

void * operator new(size_t size)
{
    7a02:	cf 93       	push	r28
    7a04:	df 93       	push	r29
    7a06:	1f 92       	push	r1
    7a08:	1f 92       	push	r1
    7a0a:	cd b7       	in	r28, 0x3d	; 61
    7a0c:	de b7       	in	r29, 0x3e	; 62
    7a0e:	9a 83       	std	Y+2, r25	; 0x02
    7a10:	89 83       	std	Y+1, r24	; 0x01
	return malloc(size);
    7a12:	89 81       	ldd	r24, Y+1	; 0x01
    7a14:	9a 81       	ldd	r25, Y+2	; 0x02
    7a16:	0e 94 ac 47 	call	0x8f58	; 0x8f58 <malloc>
}
    7a1a:	0f 90       	pop	r0
    7a1c:	0f 90       	pop	r0
    7a1e:	df 91       	pop	r29
    7a20:	cf 91       	pop	r28
    7a22:	08 95       	ret

00007a24 <_ZdlPv>:

void operator delete(void * ptr)
{
    7a24:	cf 93       	push	r28
    7a26:	df 93       	push	r29
    7a28:	1f 92       	push	r1
    7a2a:	1f 92       	push	r1
    7a2c:	cd b7       	in	r28, 0x3d	; 61
    7a2e:	de b7       	in	r29, 0x3e	; 62
    7a30:	9a 83       	std	Y+2, r25	; 0x02
    7a32:	89 83       	std	Y+1, r24	; 0x01
	if (ptr != NULL)
    7a34:	89 81       	ldd	r24, Y+1	; 0x01
    7a36:	9a 81       	ldd	r25, Y+2	; 0x02
    7a38:	00 97       	sbiw	r24, 0x00	; 0
    7a3a:	21 f0       	breq	.+8      	; 0x7a44 <_ZdlPv+0x20>
	{
		free(ptr);
    7a3c:	89 81       	ldd	r24, Y+1	; 0x01
    7a3e:	9a 81       	ldd	r25, Y+2	; 0x02
    7a40:	0e 94 47 48 	call	0x908e	; 0x908e <free>
	}
}
    7a44:	0f 90       	pop	r0
    7a46:	0f 90       	pop	r0
    7a48:	df 91       	pop	r29
    7a4a:	cf 91       	pop	r28
    7a4c:	08 95       	ret

00007a4e <_Znaj>:

void * operator new[](size_t size)
{
    7a4e:	cf 93       	push	r28
    7a50:	df 93       	push	r29
    7a52:	1f 92       	push	r1
    7a54:	1f 92       	push	r1
    7a56:	cd b7       	in	r28, 0x3d	; 61
    7a58:	de b7       	in	r29, 0x3e	; 62
    7a5a:	9a 83       	std	Y+2, r25	; 0x02
    7a5c:	89 83       	std	Y+1, r24	; 0x01
	return malloc(size);
    7a5e:	89 81       	ldd	r24, Y+1	; 0x01
    7a60:	9a 81       	ldd	r25, Y+2	; 0x02
    7a62:	0e 94 ac 47 	call	0x8f58	; 0x8f58 <malloc>
}
    7a66:	0f 90       	pop	r0
    7a68:	0f 90       	pop	r0
    7a6a:	df 91       	pop	r29
    7a6c:	cf 91       	pop	r28
    7a6e:	08 95       	ret

00007a70 <_ZdaPv>:

void operator delete[](void * ptr)
{
    7a70:	cf 93       	push	r28
    7a72:	df 93       	push	r29
    7a74:	1f 92       	push	r1
    7a76:	1f 92       	push	r1
    7a78:	cd b7       	in	r28, 0x3d	; 61
    7a7a:	de b7       	in	r29, 0x3e	; 62
    7a7c:	9a 83       	std	Y+2, r25	; 0x02
    7a7e:	89 83       	std	Y+1, r24	; 0x01
	if(ptr != NULL)
    7a80:	89 81       	ldd	r24, Y+1	; 0x01
    7a82:	9a 81       	ldd	r25, Y+2	; 0x02
    7a84:	00 97       	sbiw	r24, 0x00	; 0
    7a86:	21 f0       	breq	.+8      	; 0x7a90 <_ZdaPv+0x20>
	{
		free(ptr);
    7a88:	89 81       	ldd	r24, Y+1	; 0x01
    7a8a:	9a 81       	ldd	r25, Y+2	; 0x02
    7a8c:	0e 94 47 48 	call	0x908e	; 0x908e <free>
	}
	
    7a90:	0f 90       	pop	r0
    7a92:	0f 90       	pop	r0
    7a94:	df 91       	pop	r29
    7a96:	cf 91       	pop	r28
    7a98:	08 95       	ret

00007a9a <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>:


using namespace helicopter::util;

float CoordinateUtil::DegreesToRad(float valueDegrees)
{
    7a9a:	cf 93       	push	r28
    7a9c:	df 93       	push	r29
    7a9e:	00 d0       	rcall	.+0      	; 0x7aa0 <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf+0x6>
    7aa0:	1f 92       	push	r1
    7aa2:	cd b7       	in	r28, 0x3d	; 61
    7aa4:	de b7       	in	r29, 0x3e	; 62
    7aa6:	69 83       	std	Y+1, r22	; 0x01
    7aa8:	7a 83       	std	Y+2, r23	; 0x02
    7aaa:	8b 83       	std	Y+3, r24	; 0x03
    7aac:	9c 83       	std	Y+4, r25	; 0x04
	return valueDegrees * (M_PI / 180.0);
    7aae:	25 e3       	ldi	r18, 0x35	; 53
    7ab0:	3a ef       	ldi	r19, 0xFA	; 250
    7ab2:	4e e8       	ldi	r20, 0x8E	; 142
    7ab4:	5c e3       	ldi	r21, 0x3C	; 60
    7ab6:	69 81       	ldd	r22, Y+1	; 0x01
    7ab8:	7a 81       	ldd	r23, Y+2	; 0x02
    7aba:	8b 81       	ldd	r24, Y+3	; 0x03
    7abc:	9c 81       	ldd	r25, Y+4	; 0x04
    7abe:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    7ac2:	dc 01       	movw	r26, r24
    7ac4:	cb 01       	movw	r24, r22
}
    7ac6:	bc 01       	movw	r22, r24
    7ac8:	cd 01       	movw	r24, r26
    7aca:	0f 90       	pop	r0
    7acc:	0f 90       	pop	r0
    7ace:	0f 90       	pop	r0
    7ad0:	0f 90       	pop	r0
    7ad2:	df 91       	pop	r29
    7ad4:	cf 91       	pop	r28
    7ad6:	08 95       	ret

00007ad8 <_ZN10helicopter4util14CoordinateUtil37CalculateECEFToLocalNEDRotationMatrixEffPA3_f>:

void CoordinateUtil::CalculateECEFToLocalNEDRotationMatrix(float latitudeDegrees, float longitudeDegrees, float  ecefToLocalNEDRotationMatrix[][3])
{
    7ad8:	cf 92       	push	r12
    7ada:	df 92       	push	r13
    7adc:	ef 92       	push	r14
    7ade:	ff 92       	push	r15
    7ae0:	0f 93       	push	r16
    7ae2:	1f 93       	push	r17
    7ae4:	cf 93       	push	r28
    7ae6:	df 93       	push	r29
    7ae8:	cd b7       	in	r28, 0x3d	; 61
    7aea:	de b7       	in	r29, 0x3e	; 62
    7aec:	62 97       	sbiw	r28, 0x12	; 18
    7aee:	0f b6       	in	r0, 0x3f	; 63
    7af0:	f8 94       	cli
    7af2:	de bf       	out	0x3e, r29	; 62
    7af4:	0f be       	out	0x3f, r0	; 63
    7af6:	cd bf       	out	0x3d, r28	; 61
    7af8:	69 87       	std	Y+9, r22	; 0x09
    7afa:	7a 87       	std	Y+10, r23	; 0x0a
    7afc:	8b 87       	std	Y+11, r24	; 0x0b
    7afe:	9c 87       	std	Y+12, r25	; 0x0c
    7b00:	2d 87       	std	Y+13, r18	; 0x0d
    7b02:	3e 87       	std	Y+14, r19	; 0x0e
    7b04:	4f 87       	std	Y+15, r20	; 0x0f
    7b06:	58 8b       	std	Y+16, r21	; 0x10
    7b08:	1a 8b       	std	Y+18, r17	; 0x12
    7b0a:	09 8b       	std	Y+17, r16	; 0x11
	float radLat = DegreesToRad(latitudeDegrees);
    7b0c:	89 85       	ldd	r24, Y+9	; 0x09
    7b0e:	9a 85       	ldd	r25, Y+10	; 0x0a
    7b10:	ab 85       	ldd	r26, Y+11	; 0x0b
    7b12:	bc 85       	ldd	r27, Y+12	; 0x0c
    7b14:	bc 01       	movw	r22, r24
    7b16:	cd 01       	movw	r24, r26
    7b18:	0e 94 4d 3d 	call	0x7a9a	; 0x7a9a <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    7b1c:	dc 01       	movw	r26, r24
    7b1e:	cb 01       	movw	r24, r22
    7b20:	89 83       	std	Y+1, r24	; 0x01
    7b22:	9a 83       	std	Y+2, r25	; 0x02
    7b24:	ab 83       	std	Y+3, r26	; 0x03
    7b26:	bc 83       	std	Y+4, r27	; 0x04
	float radLong = DegreesToRad(longitudeDegrees);
    7b28:	8d 85       	ldd	r24, Y+13	; 0x0d
    7b2a:	9e 85       	ldd	r25, Y+14	; 0x0e
    7b2c:	af 85       	ldd	r26, Y+15	; 0x0f
    7b2e:	b8 89       	ldd	r27, Y+16	; 0x10
    7b30:	bc 01       	movw	r22, r24
    7b32:	cd 01       	movw	r24, r26
    7b34:	0e 94 4d 3d 	call	0x7a9a	; 0x7a9a <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    7b38:	dc 01       	movw	r26, r24
    7b3a:	cb 01       	movw	r24, r22
    7b3c:	8d 83       	std	Y+5, r24	; 0x05
    7b3e:	9e 83       	std	Y+6, r25	; 0x06
    7b40:	af 83       	std	Y+7, r26	; 0x07
    7b42:	b8 87       	std	Y+8, r27	; 0x08

	
	ecefToLocalNEDRotationMatrix[0][0] = -1 * sin(radLat) * cos(radLong);
    7b44:	89 81       	ldd	r24, Y+1	; 0x01
    7b46:	9a 81       	ldd	r25, Y+2	; 0x02
    7b48:	ab 81       	ldd	r26, Y+3	; 0x03
    7b4a:	bc 81       	ldd	r27, Y+4	; 0x04
    7b4c:	bc 01       	movw	r22, r24
    7b4e:	cd 01       	movw	r24, r26
    7b50:	0e 94 f7 45 	call	0x8bee	; 0x8bee <sin>
    7b54:	dc 01       	movw	r26, r24
    7b56:	cb 01       	movw	r24, r22
    7b58:	6c 01       	movw	r12, r24
    7b5a:	7d 01       	movw	r14, r26
    7b5c:	f7 fa       	bst	r15, 7
    7b5e:	f0 94       	com	r15
    7b60:	f7 f8       	bld	r15, 7
    7b62:	f0 94       	com	r15
    7b64:	8d 81       	ldd	r24, Y+5	; 0x05
    7b66:	9e 81       	ldd	r25, Y+6	; 0x06
    7b68:	af 81       	ldd	r26, Y+7	; 0x07
    7b6a:	b8 85       	ldd	r27, Y+8	; 0x08
    7b6c:	bc 01       	movw	r22, r24
    7b6e:	cd 01       	movw	r24, r26
    7b70:	0e 94 6a 43 	call	0x86d4	; 0x86d4 <cos>
    7b74:	dc 01       	movw	r26, r24
    7b76:	cb 01       	movw	r24, r22
    7b78:	9c 01       	movw	r18, r24
    7b7a:	ad 01       	movw	r20, r26
    7b7c:	c7 01       	movw	r24, r14
    7b7e:	b6 01       	movw	r22, r12
    7b80:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    7b84:	dc 01       	movw	r26, r24
    7b86:	cb 01       	movw	r24, r22
    7b88:	29 89       	ldd	r18, Y+17	; 0x11
    7b8a:	3a 89       	ldd	r19, Y+18	; 0x12
    7b8c:	f9 01       	movw	r30, r18
    7b8e:	80 83       	st	Z, r24
    7b90:	91 83       	std	Z+1, r25	; 0x01
    7b92:	a2 83       	std	Z+2, r26	; 0x02
    7b94:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[0][1] = -1 * sin(radLat) * sin(radLong);
    7b96:	89 81       	ldd	r24, Y+1	; 0x01
    7b98:	9a 81       	ldd	r25, Y+2	; 0x02
    7b9a:	ab 81       	ldd	r26, Y+3	; 0x03
    7b9c:	bc 81       	ldd	r27, Y+4	; 0x04
    7b9e:	bc 01       	movw	r22, r24
    7ba0:	cd 01       	movw	r24, r26
    7ba2:	0e 94 f7 45 	call	0x8bee	; 0x8bee <sin>
    7ba6:	dc 01       	movw	r26, r24
    7ba8:	cb 01       	movw	r24, r22
    7baa:	6c 01       	movw	r12, r24
    7bac:	7d 01       	movw	r14, r26
    7bae:	f7 fa       	bst	r15, 7
    7bb0:	f0 94       	com	r15
    7bb2:	f7 f8       	bld	r15, 7
    7bb4:	f0 94       	com	r15
    7bb6:	8d 81       	ldd	r24, Y+5	; 0x05
    7bb8:	9e 81       	ldd	r25, Y+6	; 0x06
    7bba:	af 81       	ldd	r26, Y+7	; 0x07
    7bbc:	b8 85       	ldd	r27, Y+8	; 0x08
    7bbe:	bc 01       	movw	r22, r24
    7bc0:	cd 01       	movw	r24, r26
    7bc2:	0e 94 f7 45 	call	0x8bee	; 0x8bee <sin>
    7bc6:	dc 01       	movw	r26, r24
    7bc8:	cb 01       	movw	r24, r22
    7bca:	9c 01       	movw	r18, r24
    7bcc:	ad 01       	movw	r20, r26
    7bce:	c7 01       	movw	r24, r14
    7bd0:	b6 01       	movw	r22, r12
    7bd2:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    7bd6:	dc 01       	movw	r26, r24
    7bd8:	cb 01       	movw	r24, r22
    7bda:	29 89       	ldd	r18, Y+17	; 0x11
    7bdc:	3a 89       	ldd	r19, Y+18	; 0x12
    7bde:	f9 01       	movw	r30, r18
    7be0:	84 83       	std	Z+4, r24	; 0x04
    7be2:	95 83       	std	Z+5, r25	; 0x05
    7be4:	a6 83       	std	Z+6, r26	; 0x06
    7be6:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[0][2] = cos(radLat);
    7be8:	89 81       	ldd	r24, Y+1	; 0x01
    7bea:	9a 81       	ldd	r25, Y+2	; 0x02
    7bec:	ab 81       	ldd	r26, Y+3	; 0x03
    7bee:	bc 81       	ldd	r27, Y+4	; 0x04
    7bf0:	bc 01       	movw	r22, r24
    7bf2:	cd 01       	movw	r24, r26
    7bf4:	0e 94 6a 43 	call	0x86d4	; 0x86d4 <cos>
    7bf8:	dc 01       	movw	r26, r24
    7bfa:	cb 01       	movw	r24, r22
    7bfc:	29 89       	ldd	r18, Y+17	; 0x11
    7bfe:	3a 89       	ldd	r19, Y+18	; 0x12
    7c00:	f9 01       	movw	r30, r18
    7c02:	80 87       	std	Z+8, r24	; 0x08
    7c04:	91 87       	std	Z+9, r25	; 0x09
    7c06:	a2 87       	std	Z+10, r26	; 0x0a
    7c08:	b3 87       	std	Z+11, r27	; 0x0b
	ecefToLocalNEDRotationMatrix[1][0] = -1 * sin (radLong);
    7c0a:	89 89       	ldd	r24, Y+17	; 0x11
    7c0c:	9a 89       	ldd	r25, Y+18	; 0x12
    7c0e:	8c 01       	movw	r16, r24
    7c10:	04 5f       	subi	r16, 0xF4	; 244
    7c12:	1f 4f       	sbci	r17, 0xFF	; 255
    7c14:	8d 81       	ldd	r24, Y+5	; 0x05
    7c16:	9e 81       	ldd	r25, Y+6	; 0x06
    7c18:	af 81       	ldd	r26, Y+7	; 0x07
    7c1a:	b8 85       	ldd	r27, Y+8	; 0x08
    7c1c:	bc 01       	movw	r22, r24
    7c1e:	cd 01       	movw	r24, r26
    7c20:	0e 94 f7 45 	call	0x8bee	; 0x8bee <sin>
    7c24:	dc 01       	movw	r26, r24
    7c26:	cb 01       	movw	r24, r22
    7c28:	b0 58       	subi	r27, 0x80	; 128
    7c2a:	f8 01       	movw	r30, r16
    7c2c:	80 83       	st	Z, r24
    7c2e:	91 83       	std	Z+1, r25	; 0x01
    7c30:	a2 83       	std	Z+2, r26	; 0x02
    7c32:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[1][1] = cos(radLong);
    7c34:	89 89       	ldd	r24, Y+17	; 0x11
    7c36:	9a 89       	ldd	r25, Y+18	; 0x12
    7c38:	8c 01       	movw	r16, r24
    7c3a:	04 5f       	subi	r16, 0xF4	; 244
    7c3c:	1f 4f       	sbci	r17, 0xFF	; 255
    7c3e:	8d 81       	ldd	r24, Y+5	; 0x05
    7c40:	9e 81       	ldd	r25, Y+6	; 0x06
    7c42:	af 81       	ldd	r26, Y+7	; 0x07
    7c44:	b8 85       	ldd	r27, Y+8	; 0x08
    7c46:	bc 01       	movw	r22, r24
    7c48:	cd 01       	movw	r24, r26
    7c4a:	0e 94 6a 43 	call	0x86d4	; 0x86d4 <cos>
    7c4e:	dc 01       	movw	r26, r24
    7c50:	cb 01       	movw	r24, r22
    7c52:	f8 01       	movw	r30, r16
    7c54:	84 83       	std	Z+4, r24	; 0x04
    7c56:	95 83       	std	Z+5, r25	; 0x05
    7c58:	a6 83       	std	Z+6, r26	; 0x06
    7c5a:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[1][2] = 0;
    7c5c:	89 89       	ldd	r24, Y+17	; 0x11
    7c5e:	9a 89       	ldd	r25, Y+18	; 0x12
    7c60:	0c 96       	adiw	r24, 0x0c	; 12
    7c62:	fc 01       	movw	r30, r24
    7c64:	10 86       	std	Z+8, r1	; 0x08
    7c66:	11 86       	std	Z+9, r1	; 0x09
    7c68:	12 86       	std	Z+10, r1	; 0x0a
    7c6a:	13 86       	std	Z+11, r1	; 0x0b
	ecefToLocalNEDRotationMatrix[2][0] = -1 * cos(radLat) * cos(radLong);
    7c6c:	89 89       	ldd	r24, Y+17	; 0x11
    7c6e:	9a 89       	ldd	r25, Y+18	; 0x12
    7c70:	8c 01       	movw	r16, r24
    7c72:	08 5e       	subi	r16, 0xE8	; 232
    7c74:	1f 4f       	sbci	r17, 0xFF	; 255
    7c76:	89 81       	ldd	r24, Y+1	; 0x01
    7c78:	9a 81       	ldd	r25, Y+2	; 0x02
    7c7a:	ab 81       	ldd	r26, Y+3	; 0x03
    7c7c:	bc 81       	ldd	r27, Y+4	; 0x04
    7c7e:	bc 01       	movw	r22, r24
    7c80:	cd 01       	movw	r24, r26
    7c82:	0e 94 6a 43 	call	0x86d4	; 0x86d4 <cos>
    7c86:	dc 01       	movw	r26, r24
    7c88:	cb 01       	movw	r24, r22
    7c8a:	6c 01       	movw	r12, r24
    7c8c:	7d 01       	movw	r14, r26
    7c8e:	f7 fa       	bst	r15, 7
    7c90:	f0 94       	com	r15
    7c92:	f7 f8       	bld	r15, 7
    7c94:	f0 94       	com	r15
    7c96:	8d 81       	ldd	r24, Y+5	; 0x05
    7c98:	9e 81       	ldd	r25, Y+6	; 0x06
    7c9a:	af 81       	ldd	r26, Y+7	; 0x07
    7c9c:	b8 85       	ldd	r27, Y+8	; 0x08
    7c9e:	bc 01       	movw	r22, r24
    7ca0:	cd 01       	movw	r24, r26
    7ca2:	0e 94 6a 43 	call	0x86d4	; 0x86d4 <cos>
    7ca6:	dc 01       	movw	r26, r24
    7ca8:	cb 01       	movw	r24, r22
    7caa:	9c 01       	movw	r18, r24
    7cac:	ad 01       	movw	r20, r26
    7cae:	c7 01       	movw	r24, r14
    7cb0:	b6 01       	movw	r22, r12
    7cb2:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    7cb6:	dc 01       	movw	r26, r24
    7cb8:	cb 01       	movw	r24, r22
    7cba:	f8 01       	movw	r30, r16
    7cbc:	80 83       	st	Z, r24
    7cbe:	91 83       	std	Z+1, r25	; 0x01
    7cc0:	a2 83       	std	Z+2, r26	; 0x02
    7cc2:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[2][1] = -1 * cos(radLat)*sin(radLong);
    7cc4:	89 89       	ldd	r24, Y+17	; 0x11
    7cc6:	9a 89       	ldd	r25, Y+18	; 0x12
    7cc8:	8c 01       	movw	r16, r24
    7cca:	08 5e       	subi	r16, 0xE8	; 232
    7ccc:	1f 4f       	sbci	r17, 0xFF	; 255
    7cce:	89 81       	ldd	r24, Y+1	; 0x01
    7cd0:	9a 81       	ldd	r25, Y+2	; 0x02
    7cd2:	ab 81       	ldd	r26, Y+3	; 0x03
    7cd4:	bc 81       	ldd	r27, Y+4	; 0x04
    7cd6:	bc 01       	movw	r22, r24
    7cd8:	cd 01       	movw	r24, r26
    7cda:	0e 94 6a 43 	call	0x86d4	; 0x86d4 <cos>
    7cde:	dc 01       	movw	r26, r24
    7ce0:	cb 01       	movw	r24, r22
    7ce2:	6c 01       	movw	r12, r24
    7ce4:	7d 01       	movw	r14, r26
    7ce6:	f7 fa       	bst	r15, 7
    7ce8:	f0 94       	com	r15
    7cea:	f7 f8       	bld	r15, 7
    7cec:	f0 94       	com	r15
    7cee:	8d 81       	ldd	r24, Y+5	; 0x05
    7cf0:	9e 81       	ldd	r25, Y+6	; 0x06
    7cf2:	af 81       	ldd	r26, Y+7	; 0x07
    7cf4:	b8 85       	ldd	r27, Y+8	; 0x08
    7cf6:	bc 01       	movw	r22, r24
    7cf8:	cd 01       	movw	r24, r26
    7cfa:	0e 94 f7 45 	call	0x8bee	; 0x8bee <sin>
    7cfe:	dc 01       	movw	r26, r24
    7d00:	cb 01       	movw	r24, r22
    7d02:	9c 01       	movw	r18, r24
    7d04:	ad 01       	movw	r20, r26
    7d06:	c7 01       	movw	r24, r14
    7d08:	b6 01       	movw	r22, r12
    7d0a:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    7d0e:	dc 01       	movw	r26, r24
    7d10:	cb 01       	movw	r24, r22
    7d12:	f8 01       	movw	r30, r16
    7d14:	84 83       	std	Z+4, r24	; 0x04
    7d16:	95 83       	std	Z+5, r25	; 0x05
    7d18:	a6 83       	std	Z+6, r26	; 0x06
    7d1a:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[2][2] = -1 * sin(radLat);
    7d1c:	89 89       	ldd	r24, Y+17	; 0x11
    7d1e:	9a 89       	ldd	r25, Y+18	; 0x12
    7d20:	8c 01       	movw	r16, r24
    7d22:	08 5e       	subi	r16, 0xE8	; 232
    7d24:	1f 4f       	sbci	r17, 0xFF	; 255
    7d26:	89 81       	ldd	r24, Y+1	; 0x01
    7d28:	9a 81       	ldd	r25, Y+2	; 0x02
    7d2a:	ab 81       	ldd	r26, Y+3	; 0x03
    7d2c:	bc 81       	ldd	r27, Y+4	; 0x04
    7d2e:	bc 01       	movw	r22, r24
    7d30:	cd 01       	movw	r24, r26
    7d32:	0e 94 f7 45 	call	0x8bee	; 0x8bee <sin>
    7d36:	dc 01       	movw	r26, r24
    7d38:	cb 01       	movw	r24, r22
    7d3a:	b0 58       	subi	r27, 0x80	; 128
    7d3c:	f8 01       	movw	r30, r16
    7d3e:	80 87       	std	Z+8, r24	; 0x08
    7d40:	91 87       	std	Z+9, r25	; 0x09
    7d42:	a2 87       	std	Z+10, r26	; 0x0a
    7d44:	b3 87       	std	Z+11, r27	; 0x0b
}
    7d46:	62 96       	adiw	r28, 0x12	; 18
    7d48:	0f b6       	in	r0, 0x3f	; 63
    7d4a:	f8 94       	cli
    7d4c:	de bf       	out	0x3e, r29	; 62
    7d4e:	0f be       	out	0x3f, r0	; 63
    7d50:	cd bf       	out	0x3d, r28	; 61
    7d52:	df 91       	pop	r29
    7d54:	cf 91       	pop	r28
    7d56:	1f 91       	pop	r17
    7d58:	0f 91       	pop	r16
    7d5a:	ff 90       	pop	r15
    7d5c:	ef 90       	pop	r14
    7d5e:	df 90       	pop	r13
    7d60:	cf 90       	pop	r12
    7d62:	08 95       	ret

00007d64 <_ZN10helicopter4util14CoordinateUtil11calculateNeEff>:

float CoordinateUtil::calculateNe(float E, float latitudeRads)
{
    7d64:	cf 92       	push	r12
    7d66:	df 92       	push	r13
    7d68:	ef 92       	push	r14
    7d6a:	ff 92       	push	r15
    7d6c:	cf 93       	push	r28
    7d6e:	df 93       	push	r29
    7d70:	cd b7       	in	r28, 0x3d	; 61
    7d72:	de b7       	in	r29, 0x3e	; 62
    7d74:	28 97       	sbiw	r28, 0x08	; 8
    7d76:	0f b6       	in	r0, 0x3f	; 63
    7d78:	f8 94       	cli
    7d7a:	de bf       	out	0x3e, r29	; 62
    7d7c:	0f be       	out	0x3f, r0	; 63
    7d7e:	cd bf       	out	0x3d, r28	; 61
    7d80:	69 83       	std	Y+1, r22	; 0x01
    7d82:	7a 83       	std	Y+2, r23	; 0x02
    7d84:	8b 83       	std	Y+3, r24	; 0x03
    7d86:	9c 83       	std	Y+4, r25	; 0x04
    7d88:	2d 83       	std	Y+5, r18	; 0x05
    7d8a:	3e 83       	std	Y+6, r19	; 0x06
    7d8c:	4f 83       	std	Y+7, r20	; 0x07
    7d8e:	58 87       	std	Y+8, r21	; 0x08
	return Rea / sqrt(1 - pow(E, 2) * pow(sin(latitudeRads), 2));
    7d90:	89 81       	ldd	r24, Y+1	; 0x01
    7d92:	9a 81       	ldd	r25, Y+2	; 0x02
    7d94:	ab 81       	ldd	r26, Y+3	; 0x03
    7d96:	bc 81       	ldd	r27, Y+4	; 0x04
    7d98:	20 e0       	ldi	r18, 0x00	; 0
    7d9a:	30 e0       	ldi	r19, 0x00	; 0
    7d9c:	40 e0       	ldi	r20, 0x00	; 0
    7d9e:	50 e4       	ldi	r21, 0x40	; 64
    7da0:	bc 01       	movw	r22, r24
    7da2:	cd 01       	movw	r24, r26
    7da4:	0e 94 ab 45 	call	0x8b56	; 0x8b56 <pow>
    7da8:	6b 01       	movw	r12, r22
    7daa:	7c 01       	movw	r14, r24
    7dac:	8d 81       	ldd	r24, Y+5	; 0x05
    7dae:	9e 81       	ldd	r25, Y+6	; 0x06
    7db0:	af 81       	ldd	r26, Y+7	; 0x07
    7db2:	b8 85       	ldd	r27, Y+8	; 0x08
    7db4:	bc 01       	movw	r22, r24
    7db6:	cd 01       	movw	r24, r26
    7db8:	0e 94 f7 45 	call	0x8bee	; 0x8bee <sin>
    7dbc:	dc 01       	movw	r26, r24
    7dbe:	cb 01       	movw	r24, r22
    7dc0:	20 e0       	ldi	r18, 0x00	; 0
    7dc2:	30 e0       	ldi	r19, 0x00	; 0
    7dc4:	40 e0       	ldi	r20, 0x00	; 0
    7dc6:	50 e4       	ldi	r21, 0x40	; 64
    7dc8:	bc 01       	movw	r22, r24
    7dca:	cd 01       	movw	r24, r26
    7dcc:	0e 94 ab 45 	call	0x8b56	; 0x8b56 <pow>
    7dd0:	dc 01       	movw	r26, r24
    7dd2:	cb 01       	movw	r24, r22
    7dd4:	9c 01       	movw	r18, r24
    7dd6:	ad 01       	movw	r20, r26
    7dd8:	c7 01       	movw	r24, r14
    7dda:	b6 01       	movw	r22, r12
    7ddc:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    7de0:	dc 01       	movw	r26, r24
    7de2:	cb 01       	movw	r24, r22
    7de4:	9c 01       	movw	r18, r24
    7de6:	ad 01       	movw	r20, r26
    7de8:	60 e0       	ldi	r22, 0x00	; 0
    7dea:	70 e0       	ldi	r23, 0x00	; 0
    7dec:	80 e8       	ldi	r24, 0x80	; 128
    7dee:	9f e3       	ldi	r25, 0x3F	; 63
    7df0:	0e 94 01 43 	call	0x8602	; 0x8602 <__subsf3>
    7df4:	dc 01       	movw	r26, r24
    7df6:	cb 01       	movw	r24, r22
    7df8:	bc 01       	movw	r22, r24
    7dfa:	cd 01       	movw	r24, r26
    7dfc:	0e 94 01 46 	call	0x8c02	; 0x8c02 <sqrt>
    7e00:	dc 01       	movw	r26, r24
    7e02:	cb 01       	movw	r24, r22
    7e04:	9c 01       	movw	r18, r24
    7e06:	ad 01       	movw	r20, r26
    7e08:	62 e3       	ldi	r22, 0x32	; 50
    7e0a:	75 ea       	ldi	r23, 0xA5	; 165
    7e0c:	82 ec       	ldi	r24, 0xC2	; 194
    7e0e:	9a e4       	ldi	r25, 0x4A	; 74
    7e10:	0e 94 6d 43 	call	0x86da	; 0x86da <__divsf3>
    7e14:	dc 01       	movw	r26, r24
    7e16:	cb 01       	movw	r24, r22
}
    7e18:	bc 01       	movw	r22, r24
    7e1a:	cd 01       	movw	r24, r26
    7e1c:	28 96       	adiw	r28, 0x08	; 8
    7e1e:	0f b6       	in	r0, 0x3f	; 63
    7e20:	f8 94       	cli
    7e22:	de bf       	out	0x3e, r29	; 62
    7e24:	0f be       	out	0x3f, r0	; 63
    7e26:	cd bf       	out	0x3d, r28	; 61
    7e28:	df 91       	pop	r29
    7e2a:	cf 91       	pop	r28
    7e2c:	ff 90       	pop	r15
    7e2e:	ef 90       	pop	r14
    7e30:	df 90       	pop	r13
    7e32:	cf 90       	pop	r12
    7e34:	08 95       	ret

00007e36 <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEfffRfS2_S2_>:
/**
 * A description of the variables used to convert lat/long to ecef can be found on page 25 of 
 * Unmanned Rotor Craft Systems
 */
void CoordinateUtil::ConvertFromGeodeticToECEF(float latitudeDegrees, float longitudeDegrees, float altitudeFeetAgl, float &ecefX, float &ecefY, float &ecefZ)
{
    7e36:	8f 92       	push	r8
    7e38:	9f 92       	push	r9
    7e3a:	af 92       	push	r10
    7e3c:	bf 92       	push	r11
    7e3e:	cf 92       	push	r12
    7e40:	df 92       	push	r13
    7e42:	ef 92       	push	r14
    7e44:	ff 92       	push	r15
    7e46:	0f 93       	push	r16
    7e48:	1f 93       	push	r17
    7e4a:	cf 93       	push	r28
    7e4c:	df 93       	push	r29
    7e4e:	cd b7       	in	r28, 0x3d	; 61
    7e50:	de b7       	in	r29, 0x3e	; 62
    7e52:	6e 97       	sbiw	r28, 0x1e	; 30
    7e54:	0f b6       	in	r0, 0x3f	; 63
    7e56:	f8 94       	cli
    7e58:	de bf       	out	0x3e, r29	; 62
    7e5a:	0f be       	out	0x3f, r0	; 63
    7e5c:	cd bf       	out	0x3d, r28	; 61
    7e5e:	6d 87       	std	Y+13, r22	; 0x0d
    7e60:	7e 87       	std	Y+14, r23	; 0x0e
    7e62:	8f 87       	std	Y+15, r24	; 0x0f
    7e64:	98 8b       	std	Y+16, r25	; 0x10
    7e66:	29 8b       	std	Y+17, r18	; 0x11
    7e68:	3a 8b       	std	Y+18, r19	; 0x12
    7e6a:	4b 8b       	std	Y+19, r20	; 0x13
    7e6c:	5c 8b       	std	Y+20, r21	; 0x14
    7e6e:	ed 8a       	std	Y+21, r14	; 0x15
    7e70:	fe 8a       	std	Y+22, r15	; 0x16
    7e72:	0f 8b       	std	Y+23, r16	; 0x17
    7e74:	18 8f       	std	Y+24, r17	; 0x18
    7e76:	da 8e       	std	Y+26, r13	; 0x1a
    7e78:	c9 8e       	std	Y+25, r12	; 0x19
    7e7a:	bc 8e       	std	Y+28, r11	; 0x1c
    7e7c:	ab 8e       	std	Y+27, r10	; 0x1b
    7e7e:	9e 8e       	std	Y+30, r9	; 0x1e
    7e80:	8d 8e       	std	Y+29, r8	; 0x1d
	float radLat = DegreesToRad(latitudeDegrees);
    7e82:	8d 85       	ldd	r24, Y+13	; 0x0d
    7e84:	9e 85       	ldd	r25, Y+14	; 0x0e
    7e86:	af 85       	ldd	r26, Y+15	; 0x0f
    7e88:	b8 89       	ldd	r27, Y+16	; 0x10
    7e8a:	bc 01       	movw	r22, r24
    7e8c:	cd 01       	movw	r24, r26
    7e8e:	0e 94 4d 3d 	call	0x7a9a	; 0x7a9a <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    7e92:	dc 01       	movw	r26, r24
    7e94:	cb 01       	movw	r24, r22
    7e96:	89 83       	std	Y+1, r24	; 0x01
    7e98:	9a 83       	std	Y+2, r25	; 0x02
    7e9a:	ab 83       	std	Y+3, r26	; 0x03
    7e9c:	bc 83       	std	Y+4, r27	; 0x04
	float radLong = DegreesToRad(longitudeDegrees);
    7e9e:	89 89       	ldd	r24, Y+17	; 0x11
    7ea0:	9a 89       	ldd	r25, Y+18	; 0x12
    7ea2:	ab 89       	ldd	r26, Y+19	; 0x13
    7ea4:	bc 89       	ldd	r27, Y+20	; 0x14
    7ea6:	bc 01       	movw	r22, r24
    7ea8:	cd 01       	movw	r24, r26
    7eaa:	0e 94 4d 3d 	call	0x7a9a	; 0x7a9a <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    7eae:	dc 01       	movw	r26, r24
    7eb0:	cb 01       	movw	r24, r22
    7eb2:	8d 83       	std	Y+5, r24	; 0x05
    7eb4:	9e 83       	std	Y+6, r25	; 0x06
    7eb6:	af 83       	std	Y+7, r26	; 0x07
    7eb8:	b8 87       	std	Y+8, r27	; 0x08
	

	float Ne = calculateNe(E, radLat);
    7eba:	89 81       	ldd	r24, Y+1	; 0x01
    7ebc:	9a 81       	ldd	r25, Y+2	; 0x02
    7ebe:	ab 81       	ldd	r26, Y+3	; 0x03
    7ec0:	bc 81       	ldd	r27, Y+4	; 0x04
    7ec2:	9c 01       	movw	r18, r24
    7ec4:	ad 01       	movw	r20, r26
    7ec6:	62 ed       	ldi	r22, 0xD2	; 210
    7ec8:	70 e9       	ldi	r23, 0x90	; 144
    7eca:	87 ea       	ldi	r24, 0xA7	; 167
    7ecc:	9d e3       	ldi	r25, 0x3D	; 61
    7ece:	0e 94 b2 3e 	call	0x7d64	; 0x7d64 <_ZN10helicopter4util14CoordinateUtil11calculateNeEff>
    7ed2:	dc 01       	movw	r26, r24
    7ed4:	cb 01       	movw	r24, r22
    7ed6:	89 87       	std	Y+9, r24	; 0x09
    7ed8:	9a 87       	std	Y+10, r25	; 0x0a
    7eda:	ab 87       	std	Y+11, r26	; 0x0b
    7edc:	bc 87       	std	Y+12, r27	; 0x0c
	
	ecefX = (Ne + altitudeFeetAgl) * cos(radLat) * cos(radLong);
    7ede:	2d 89       	ldd	r18, Y+21	; 0x15
    7ee0:	3e 89       	ldd	r19, Y+22	; 0x16
    7ee2:	4f 89       	ldd	r20, Y+23	; 0x17
    7ee4:	58 8d       	ldd	r21, Y+24	; 0x18
    7ee6:	69 85       	ldd	r22, Y+9	; 0x09
    7ee8:	7a 85       	ldd	r23, Y+10	; 0x0a
    7eea:	8b 85       	ldd	r24, Y+11	; 0x0b
    7eec:	9c 85       	ldd	r25, Y+12	; 0x0c
    7eee:	0e 94 02 43 	call	0x8604	; 0x8604 <__addsf3>
    7ef2:	dc 01       	movw	r26, r24
    7ef4:	cb 01       	movw	r24, r22
    7ef6:	6c 01       	movw	r12, r24
    7ef8:	7d 01       	movw	r14, r26
    7efa:	89 81       	ldd	r24, Y+1	; 0x01
    7efc:	9a 81       	ldd	r25, Y+2	; 0x02
    7efe:	ab 81       	ldd	r26, Y+3	; 0x03
    7f00:	bc 81       	ldd	r27, Y+4	; 0x04
    7f02:	bc 01       	movw	r22, r24
    7f04:	cd 01       	movw	r24, r26
    7f06:	0e 94 6a 43 	call	0x86d4	; 0x86d4 <cos>
    7f0a:	dc 01       	movw	r26, r24
    7f0c:	cb 01       	movw	r24, r22
    7f0e:	9c 01       	movw	r18, r24
    7f10:	ad 01       	movw	r20, r26
    7f12:	c7 01       	movw	r24, r14
    7f14:	b6 01       	movw	r22, r12
    7f16:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    7f1a:	dc 01       	movw	r26, r24
    7f1c:	cb 01       	movw	r24, r22
    7f1e:	6c 01       	movw	r12, r24
    7f20:	7d 01       	movw	r14, r26
    7f22:	8d 81       	ldd	r24, Y+5	; 0x05
    7f24:	9e 81       	ldd	r25, Y+6	; 0x06
    7f26:	af 81       	ldd	r26, Y+7	; 0x07
    7f28:	b8 85       	ldd	r27, Y+8	; 0x08
    7f2a:	bc 01       	movw	r22, r24
    7f2c:	cd 01       	movw	r24, r26
    7f2e:	0e 94 6a 43 	call	0x86d4	; 0x86d4 <cos>
    7f32:	dc 01       	movw	r26, r24
    7f34:	cb 01       	movw	r24, r22
    7f36:	9c 01       	movw	r18, r24
    7f38:	ad 01       	movw	r20, r26
    7f3a:	c7 01       	movw	r24, r14
    7f3c:	b6 01       	movw	r22, r12
    7f3e:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    7f42:	dc 01       	movw	r26, r24
    7f44:	cb 01       	movw	r24, r22
    7f46:	29 8d       	ldd	r18, Y+25	; 0x19
    7f48:	3a 8d       	ldd	r19, Y+26	; 0x1a
    7f4a:	f9 01       	movw	r30, r18
    7f4c:	80 83       	st	Z, r24
    7f4e:	91 83       	std	Z+1, r25	; 0x01
    7f50:	a2 83       	std	Z+2, r26	; 0x02
    7f52:	b3 83       	std	Z+3, r27	; 0x03
	ecefY = (Ne + altitudeFeetAgl) * cos(radLat) * sin(radLong);
    7f54:	2d 89       	ldd	r18, Y+21	; 0x15
    7f56:	3e 89       	ldd	r19, Y+22	; 0x16
    7f58:	4f 89       	ldd	r20, Y+23	; 0x17
    7f5a:	58 8d       	ldd	r21, Y+24	; 0x18
    7f5c:	69 85       	ldd	r22, Y+9	; 0x09
    7f5e:	7a 85       	ldd	r23, Y+10	; 0x0a
    7f60:	8b 85       	ldd	r24, Y+11	; 0x0b
    7f62:	9c 85       	ldd	r25, Y+12	; 0x0c
    7f64:	0e 94 02 43 	call	0x8604	; 0x8604 <__addsf3>
    7f68:	dc 01       	movw	r26, r24
    7f6a:	cb 01       	movw	r24, r22
    7f6c:	6c 01       	movw	r12, r24
    7f6e:	7d 01       	movw	r14, r26
    7f70:	89 81       	ldd	r24, Y+1	; 0x01
    7f72:	9a 81       	ldd	r25, Y+2	; 0x02
    7f74:	ab 81       	ldd	r26, Y+3	; 0x03
    7f76:	bc 81       	ldd	r27, Y+4	; 0x04
    7f78:	bc 01       	movw	r22, r24
    7f7a:	cd 01       	movw	r24, r26
    7f7c:	0e 94 6a 43 	call	0x86d4	; 0x86d4 <cos>
    7f80:	dc 01       	movw	r26, r24
    7f82:	cb 01       	movw	r24, r22
    7f84:	9c 01       	movw	r18, r24
    7f86:	ad 01       	movw	r20, r26
    7f88:	c7 01       	movw	r24, r14
    7f8a:	b6 01       	movw	r22, r12
    7f8c:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    7f90:	dc 01       	movw	r26, r24
    7f92:	cb 01       	movw	r24, r22
    7f94:	6c 01       	movw	r12, r24
    7f96:	7d 01       	movw	r14, r26
    7f98:	8d 81       	ldd	r24, Y+5	; 0x05
    7f9a:	9e 81       	ldd	r25, Y+6	; 0x06
    7f9c:	af 81       	ldd	r26, Y+7	; 0x07
    7f9e:	b8 85       	ldd	r27, Y+8	; 0x08
    7fa0:	bc 01       	movw	r22, r24
    7fa2:	cd 01       	movw	r24, r26
    7fa4:	0e 94 f7 45 	call	0x8bee	; 0x8bee <sin>
    7fa8:	dc 01       	movw	r26, r24
    7faa:	cb 01       	movw	r24, r22
    7fac:	9c 01       	movw	r18, r24
    7fae:	ad 01       	movw	r20, r26
    7fb0:	c7 01       	movw	r24, r14
    7fb2:	b6 01       	movw	r22, r12
    7fb4:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    7fb8:	dc 01       	movw	r26, r24
    7fba:	cb 01       	movw	r24, r22
    7fbc:	2b 8d       	ldd	r18, Y+27	; 0x1b
    7fbe:	3c 8d       	ldd	r19, Y+28	; 0x1c
    7fc0:	f9 01       	movw	r30, r18
    7fc2:	80 83       	st	Z, r24
    7fc4:	91 83       	std	Z+1, r25	; 0x01
    7fc6:	a2 83       	std	Z+2, r26	; 0x02
    7fc8:	b3 83       	std	Z+3, r27	; 0x03
	ecefZ = ((Ne * (1 - pow(E, 2))) + altitudeFeetAgl) * sin(radLat);
    7fca:	27 e4       	ldi	r18, 0x47	; 71
    7fcc:	39 e4       	ldi	r19, 0x49	; 73
    7fce:	4e e7       	ldi	r20, 0x7E	; 126
    7fd0:	5f e3       	ldi	r21, 0x3F	; 63
    7fd2:	69 85       	ldd	r22, Y+9	; 0x09
    7fd4:	7a 85       	ldd	r23, Y+10	; 0x0a
    7fd6:	8b 85       	ldd	r24, Y+11	; 0x0b
    7fd8:	9c 85       	ldd	r25, Y+12	; 0x0c
    7fda:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    7fde:	dc 01       	movw	r26, r24
    7fe0:	cb 01       	movw	r24, r22
    7fe2:	2d 89       	ldd	r18, Y+21	; 0x15
    7fe4:	3e 89       	ldd	r19, Y+22	; 0x16
    7fe6:	4f 89       	ldd	r20, Y+23	; 0x17
    7fe8:	58 8d       	ldd	r21, Y+24	; 0x18
    7fea:	bc 01       	movw	r22, r24
    7fec:	cd 01       	movw	r24, r26
    7fee:	0e 94 02 43 	call	0x8604	; 0x8604 <__addsf3>
    7ff2:	dc 01       	movw	r26, r24
    7ff4:	cb 01       	movw	r24, r22
    7ff6:	6c 01       	movw	r12, r24
    7ff8:	7d 01       	movw	r14, r26
    7ffa:	89 81       	ldd	r24, Y+1	; 0x01
    7ffc:	9a 81       	ldd	r25, Y+2	; 0x02
    7ffe:	ab 81       	ldd	r26, Y+3	; 0x03
    8000:	bc 81       	ldd	r27, Y+4	; 0x04
    8002:	bc 01       	movw	r22, r24
    8004:	cd 01       	movw	r24, r26
    8006:	0e 94 f7 45 	call	0x8bee	; 0x8bee <sin>
    800a:	dc 01       	movw	r26, r24
    800c:	cb 01       	movw	r24, r22
    800e:	9c 01       	movw	r18, r24
    8010:	ad 01       	movw	r20, r26
    8012:	c7 01       	movw	r24, r14
    8014:	b6 01       	movw	r22, r12
    8016:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    801a:	dc 01       	movw	r26, r24
    801c:	cb 01       	movw	r24, r22
    801e:	2d 8d       	ldd	r18, Y+29	; 0x1d
    8020:	3e 8d       	ldd	r19, Y+30	; 0x1e
    8022:	f9 01       	movw	r30, r18
    8024:	80 83       	st	Z, r24
    8026:	91 83       	std	Z+1, r25	; 0x01
    8028:	a2 83       	std	Z+2, r26	; 0x02
    802a:	b3 83       	std	Z+3, r27	; 0x03
}
    802c:	6e 96       	adiw	r28, 0x1e	; 30
    802e:	0f b6       	in	r0, 0x3f	; 63
    8030:	f8 94       	cli
    8032:	de bf       	out	0x3e, r29	; 62
    8034:	0f be       	out	0x3f, r0	; 63
    8036:	cd bf       	out	0x3d, r28	; 61
    8038:	df 91       	pop	r29
    803a:	cf 91       	pop	r28
    803c:	1f 91       	pop	r17
    803e:	0f 91       	pop	r16
    8040:	ff 90       	pop	r15
    8042:	ef 90       	pop	r14
    8044:	df 90       	pop	r13
    8046:	cf 90       	pop	r12
    8048:	bf 90       	pop	r11
    804a:	af 90       	pop	r10
    804c:	9f 90       	pop	r9
    804e:	8f 90       	pop	r8
    8050:	08 95       	ret

00008052 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_>:

void CoordinateUtil::ConvertFromECEFToLocalNED(float ecefReferenceX, float ecefReferenceY, float ecefReferenceZ,
	float ecefX, float ecefY, float ecefZ, float ecefToLocalNEDRotationMatrix[][3],
	float &localNEDX, float &localNEDY, float &localNEDZ)
{
    8052:	af 92       	push	r10
    8054:	bf 92       	push	r11
    8056:	cf 92       	push	r12
    8058:	df 92       	push	r13
    805a:	ef 92       	push	r14
    805c:	ff 92       	push	r15
    805e:	0f 93       	push	r16
    8060:	1f 93       	push	r17
    8062:	cf 93       	push	r28
    8064:	df 93       	push	r29
    8066:	cd b7       	in	r28, 0x3d	; 61
    8068:	de b7       	in	r29, 0x3e	; 62
    806a:	e8 97       	sbiw	r28, 0x38	; 56
    806c:	0f b6       	in	r0, 0x3f	; 63
    806e:	f8 94       	cli
    8070:	de bf       	out	0x3e, r29	; 62
    8072:	0f be       	out	0x3f, r0	; 63
    8074:	cd bf       	out	0x3d, r28	; 61
    8076:	69 a7       	std	Y+41, r22	; 0x29
    8078:	7a a7       	std	Y+42, r23	; 0x2a
    807a:	8b a7       	std	Y+43, r24	; 0x2b
    807c:	9c a7       	std	Y+44, r25	; 0x2c
    807e:	2d a7       	std	Y+45, r18	; 0x2d
    8080:	3e a7       	std	Y+46, r19	; 0x2e
    8082:	4f a7       	std	Y+47, r20	; 0x2f
    8084:	58 ab       	std	Y+48, r21	; 0x30
    8086:	e9 aa       	std	Y+49, r14	; 0x31
    8088:	fa aa       	std	Y+50, r15	; 0x32
    808a:	0b ab       	std	Y+51, r16	; 0x33
    808c:	1c ab       	std	Y+52, r17	; 0x34
    808e:	ad aa       	std	Y+53, r10	; 0x35
    8090:	be aa       	std	Y+54, r11	; 0x36
    8092:	cf aa       	std	Y+55, r12	; 0x37
    8094:	d8 ae       	std	Y+56, r13	; 0x38
	//Get the current helicopters position relative to it's starting point in ecef.
	float differenceXECEF = ecefX - ecefReferenceX;
    8096:	29 a5       	ldd	r18, Y+41	; 0x29
    8098:	3a a5       	ldd	r19, Y+42	; 0x2a
    809a:	4b a5       	ldd	r20, Y+43	; 0x2b
    809c:	5c a5       	ldd	r21, Y+44	; 0x2c
    809e:	6d a9       	ldd	r22, Y+53	; 0x35
    80a0:	7e a9       	ldd	r23, Y+54	; 0x36
    80a2:	8f a9       	ldd	r24, Y+55	; 0x37
    80a4:	98 ad       	ldd	r25, Y+56	; 0x38
    80a6:	0e 94 01 43 	call	0x8602	; 0x8602 <__subsf3>
    80aa:	dc 01       	movw	r26, r24
    80ac:	cb 01       	movw	r24, r22
    80ae:	8d 83       	std	Y+5, r24	; 0x05
    80b0:	9e 83       	std	Y+6, r25	; 0x06
    80b2:	af 83       	std	Y+7, r26	; 0x07
    80b4:	b8 87       	std	Y+8, r27	; 0x08
	float differenceYECEF = ecefY - ecefReferenceY;
    80b6:	2d a5       	ldd	r18, Y+45	; 0x2d
    80b8:	3e a5       	ldd	r19, Y+46	; 0x2e
    80ba:	4f a5       	ldd	r20, Y+47	; 0x2f
    80bc:	58 a9       	ldd	r21, Y+48	; 0x30
    80be:	2a 96       	adiw	r28, 0x0a	; 10
    80c0:	6c ad       	ldd	r22, Y+60	; 0x3c
    80c2:	7d ad       	ldd	r23, Y+61	; 0x3d
    80c4:	8e ad       	ldd	r24, Y+62	; 0x3e
    80c6:	9f ad       	ldd	r25, Y+63	; 0x3f
    80c8:	2a 97       	sbiw	r28, 0x0a	; 10
    80ca:	0e 94 01 43 	call	0x8602	; 0x8602 <__subsf3>
    80ce:	dc 01       	movw	r26, r24
    80d0:	cb 01       	movw	r24, r22
    80d2:	89 87       	std	Y+9, r24	; 0x09
    80d4:	9a 87       	std	Y+10, r25	; 0x0a
    80d6:	ab 87       	std	Y+11, r26	; 0x0b
    80d8:	bc 87       	std	Y+12, r27	; 0x0c
	float differenceZECEF = ecefZ - ecefReferenceZ;
    80da:	29 a9       	ldd	r18, Y+49	; 0x31
    80dc:	3a a9       	ldd	r19, Y+50	; 0x32
    80de:	4b a9       	ldd	r20, Y+51	; 0x33
    80e0:	5c a9       	ldd	r21, Y+52	; 0x34
    80e2:	2e 96       	adiw	r28, 0x0e	; 14
    80e4:	6c ad       	ldd	r22, Y+60	; 0x3c
    80e6:	7d ad       	ldd	r23, Y+61	; 0x3d
    80e8:	8e ad       	ldd	r24, Y+62	; 0x3e
    80ea:	9f ad       	ldd	r25, Y+63	; 0x3f
    80ec:	2e 97       	sbiw	r28, 0x0e	; 14
    80ee:	0e 94 01 43 	call	0x8602	; 0x8602 <__subsf3>
    80f2:	dc 01       	movw	r26, r24
    80f4:	cb 01       	movw	r24, r22
    80f6:	8d 87       	std	Y+13, r24	; 0x0d
    80f8:	9e 87       	std	Y+14, r25	; 0x0e
    80fa:	af 87       	std	Y+15, r26	; 0x0f
    80fc:	b8 8b       	std	Y+16, r27	; 0x10
	
	float rotatedMatrix[3] = {};
    80fe:	2c e0       	ldi	r18, 0x0C	; 12
    8100:	ce 01       	movw	r24, r28
    8102:	41 96       	adiw	r24, 0x11	; 17
    8104:	fc 01       	movw	r30, r24
    8106:	32 2f       	mov	r19, r18
    8108:	11 92       	st	Z+, r1
    810a:	3a 95       	dec	r19
    810c:	e9 f7       	brne	.-6      	; 0x8108 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0xb6>
	float positionMatrix[3] = {differenceXECEF, differenceYECEF, differenceZECEF};
    810e:	8d 81       	ldd	r24, Y+5	; 0x05
    8110:	9e 81       	ldd	r25, Y+6	; 0x06
    8112:	af 81       	ldd	r26, Y+7	; 0x07
    8114:	b8 85       	ldd	r27, Y+8	; 0x08
    8116:	8d 8f       	std	Y+29, r24	; 0x1d
    8118:	9e 8f       	std	Y+30, r25	; 0x1e
    811a:	af 8f       	std	Y+31, r26	; 0x1f
    811c:	b8 a3       	std	Y+32, r27	; 0x20
    811e:	89 85       	ldd	r24, Y+9	; 0x09
    8120:	9a 85       	ldd	r25, Y+10	; 0x0a
    8122:	ab 85       	ldd	r26, Y+11	; 0x0b
    8124:	bc 85       	ldd	r27, Y+12	; 0x0c
    8126:	89 a3       	std	Y+33, r24	; 0x21
    8128:	9a a3       	std	Y+34, r25	; 0x22
    812a:	ab a3       	std	Y+35, r26	; 0x23
    812c:	bc a3       	std	Y+36, r27	; 0x24
    812e:	8d 85       	ldd	r24, Y+13	; 0x0d
    8130:	9e 85       	ldd	r25, Y+14	; 0x0e
    8132:	af 85       	ldd	r26, Y+15	; 0x0f
    8134:	b8 89       	ldd	r27, Y+16	; 0x10
    8136:	8d a3       	std	Y+37, r24	; 0x25
    8138:	9e a3       	std	Y+38, r25	; 0x26
    813a:	af a3       	std	Y+39, r26	; 0x27
    813c:	b8 a7       	std	Y+40, r27	; 0x28
	
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
    813e:	1a 82       	std	Y+2, r1	; 0x02
    8140:	19 82       	std	Y+1, r1	; 0x01
    8142:	78 c0       	rjmp	.+240    	; 0x8234 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1e2>
	{
		//iterate through the columns of the rotation matrix
		for (int j = 0; j < 3; j++)
    8144:	1c 82       	std	Y+4, r1	; 0x04
    8146:	1b 82       	std	Y+3, r1	; 0x03
    8148:	66 c0       	rjmp	.+204    	; 0x8216 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1c4>
		{
			rotatedMatrix[i] += ecefToLocalNEDRotationMatrix[i] [j] * positionMatrix[j];
    814a:	89 81       	ldd	r24, Y+1	; 0x01
    814c:	9a 81       	ldd	r25, Y+2	; 0x02
    814e:	88 0f       	add	r24, r24
    8150:	99 1f       	adc	r25, r25
    8152:	88 0f       	add	r24, r24
    8154:	99 1f       	adc	r25, r25
    8156:	9e 01       	movw	r18, r28
    8158:	2f 5f       	subi	r18, 0xFF	; 255
    815a:	3f 4f       	sbci	r19, 0xFF	; 255
    815c:	82 0f       	add	r24, r18
    815e:	93 1f       	adc	r25, r19
    8160:	40 96       	adiw	r24, 0x10	; 16
    8162:	fc 01       	movw	r30, r24
    8164:	c0 80       	ld	r12, Z
    8166:	d1 80       	ldd	r13, Z+1	; 0x01
    8168:	e2 80       	ldd	r14, Z+2	; 0x02
    816a:	f3 80       	ldd	r15, Z+3	; 0x03
    816c:	29 81       	ldd	r18, Y+1	; 0x01
    816e:	3a 81       	ldd	r19, Y+2	; 0x02
    8170:	c9 01       	movw	r24, r18
    8172:	88 0f       	add	r24, r24
    8174:	99 1f       	adc	r25, r25
    8176:	82 0f       	add	r24, r18
    8178:	93 1f       	adc	r25, r19
    817a:	88 0f       	add	r24, r24
    817c:	99 1f       	adc	r25, r25
    817e:	88 0f       	add	r24, r24
    8180:	99 1f       	adc	r25, r25
    8182:	60 96       	adiw	r28, 0x10	; 16
    8184:	2e ad       	ldd	r18, Y+62	; 0x3e
    8186:	3f ad       	ldd	r19, Y+63	; 0x3f
    8188:	60 97       	sbiw	r28, 0x10	; 16
    818a:	28 0f       	add	r18, r24
    818c:	39 1f       	adc	r19, r25
    818e:	8b 81       	ldd	r24, Y+3	; 0x03
    8190:	9c 81       	ldd	r25, Y+4	; 0x04
    8192:	88 0f       	add	r24, r24
    8194:	99 1f       	adc	r25, r25
    8196:	88 0f       	add	r24, r24
    8198:	99 1f       	adc	r25, r25
    819a:	82 0f       	add	r24, r18
    819c:	93 1f       	adc	r25, r19
    819e:	fc 01       	movw	r30, r24
    81a0:	80 81       	ld	r24, Z
    81a2:	91 81       	ldd	r25, Z+1	; 0x01
    81a4:	a2 81       	ldd	r26, Z+2	; 0x02
    81a6:	b3 81       	ldd	r27, Z+3	; 0x03
    81a8:	2b 81       	ldd	r18, Y+3	; 0x03
    81aa:	3c 81       	ldd	r19, Y+4	; 0x04
    81ac:	22 0f       	add	r18, r18
    81ae:	33 1f       	adc	r19, r19
    81b0:	22 0f       	add	r18, r18
    81b2:	33 1f       	adc	r19, r19
    81b4:	ae 01       	movw	r20, r28
    81b6:	4f 5f       	subi	r20, 0xFF	; 255
    81b8:	5f 4f       	sbci	r21, 0xFF	; 255
    81ba:	24 0f       	add	r18, r20
    81bc:	35 1f       	adc	r19, r21
    81be:	24 5e       	subi	r18, 0xE4	; 228
    81c0:	3f 4f       	sbci	r19, 0xFF	; 255
    81c2:	f9 01       	movw	r30, r18
    81c4:	20 81       	ld	r18, Z
    81c6:	31 81       	ldd	r19, Z+1	; 0x01
    81c8:	42 81       	ldd	r20, Z+2	; 0x02
    81ca:	53 81       	ldd	r21, Z+3	; 0x03
    81cc:	bc 01       	movw	r22, r24
    81ce:	cd 01       	movw	r24, r26
    81d0:	0e 94 48 45 	call	0x8a90	; 0x8a90 <__mulsf3>
    81d4:	dc 01       	movw	r26, r24
    81d6:	cb 01       	movw	r24, r22
    81d8:	9c 01       	movw	r18, r24
    81da:	ad 01       	movw	r20, r26
    81dc:	c7 01       	movw	r24, r14
    81de:	b6 01       	movw	r22, r12
    81e0:	0e 94 02 43 	call	0x8604	; 0x8604 <__addsf3>
    81e4:	dc 01       	movw	r26, r24
    81e6:	cb 01       	movw	r24, r22
    81e8:	29 81       	ldd	r18, Y+1	; 0x01
    81ea:	3a 81       	ldd	r19, Y+2	; 0x02
    81ec:	22 0f       	add	r18, r18
    81ee:	33 1f       	adc	r19, r19
    81f0:	22 0f       	add	r18, r18
    81f2:	33 1f       	adc	r19, r19
    81f4:	ae 01       	movw	r20, r28
    81f6:	4f 5f       	subi	r20, 0xFF	; 255
    81f8:	5f 4f       	sbci	r21, 0xFF	; 255
    81fa:	24 0f       	add	r18, r20
    81fc:	35 1f       	adc	r19, r21
    81fe:	20 5f       	subi	r18, 0xF0	; 240
    8200:	3f 4f       	sbci	r19, 0xFF	; 255
    8202:	f9 01       	movw	r30, r18
    8204:	80 83       	st	Z, r24
    8206:	91 83       	std	Z+1, r25	; 0x01
    8208:	a2 83       	std	Z+2, r26	; 0x02
    820a:	b3 83       	std	Z+3, r27	; 0x03
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
	{
		//iterate through the columns of the rotation matrix
		for (int j = 0; j < 3; j++)
    820c:	8b 81       	ldd	r24, Y+3	; 0x03
    820e:	9c 81       	ldd	r25, Y+4	; 0x04
    8210:	01 96       	adiw	r24, 0x01	; 1
    8212:	9c 83       	std	Y+4, r25	; 0x04
    8214:	8b 83       	std	Y+3, r24	; 0x03
    8216:	21 e0       	ldi	r18, 0x01	; 1
    8218:	8b 81       	ldd	r24, Y+3	; 0x03
    821a:	9c 81       	ldd	r25, Y+4	; 0x04
    821c:	83 30       	cpi	r24, 0x03	; 3
    821e:	91 05       	cpc	r25, r1
    8220:	0c f0       	brlt	.+2      	; 0x8224 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1d2>
    8222:	20 e0       	ldi	r18, 0x00	; 0
    8224:	22 23       	and	r18, r18
    8226:	09 f0       	breq	.+2      	; 0x822a <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1d8>
    8228:	90 cf       	rjmp	.-224    	; 0x814a <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0xf8>
	float rotatedMatrix[3] = {};
	float positionMatrix[3] = {differenceXECEF, differenceYECEF, differenceZECEF};
	
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
    822a:	89 81       	ldd	r24, Y+1	; 0x01
    822c:	9a 81       	ldd	r25, Y+2	; 0x02
    822e:	01 96       	adiw	r24, 0x01	; 1
    8230:	9a 83       	std	Y+2, r25	; 0x02
    8232:	89 83       	std	Y+1, r24	; 0x01
    8234:	21 e0       	ldi	r18, 0x01	; 1
    8236:	89 81       	ldd	r24, Y+1	; 0x01
    8238:	9a 81       	ldd	r25, Y+2	; 0x02
    823a:	83 30       	cpi	r24, 0x03	; 3
    823c:	91 05       	cpc	r25, r1
    823e:	0c f0       	brlt	.+2      	; 0x8242 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1f0>
    8240:	20 e0       	ldi	r18, 0x00	; 0
    8242:	22 23       	and	r18, r18
    8244:	09 f0       	breq	.+2      	; 0x8248 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1f6>
    8246:	7e cf       	rjmp	.-260    	; 0x8144 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0xf2>
		{
			rotatedMatrix[i] += ecefToLocalNEDRotationMatrix[i] [j] * positionMatrix[j];
		}
	}
	
	localNEDX = rotatedMatrix[0];
    8248:	89 89       	ldd	r24, Y+17	; 0x11
    824a:	9a 89       	ldd	r25, Y+18	; 0x12
    824c:	ab 89       	ldd	r26, Y+19	; 0x13
    824e:	bc 89       	ldd	r27, Y+20	; 0x14
    8250:	62 96       	adiw	r28, 0x12	; 18
    8252:	2e ad       	ldd	r18, Y+62	; 0x3e
    8254:	3f ad       	ldd	r19, Y+63	; 0x3f
    8256:	62 97       	sbiw	r28, 0x12	; 18
    8258:	f9 01       	movw	r30, r18
    825a:	80 83       	st	Z, r24
    825c:	91 83       	std	Z+1, r25	; 0x01
    825e:	a2 83       	std	Z+2, r26	; 0x02
    8260:	b3 83       	std	Z+3, r27	; 0x03
	localNEDY = rotatedMatrix[1];
    8262:	8d 89       	ldd	r24, Y+21	; 0x15
    8264:	9e 89       	ldd	r25, Y+22	; 0x16
    8266:	af 89       	ldd	r26, Y+23	; 0x17
    8268:	b8 8d       	ldd	r27, Y+24	; 0x18
    826a:	64 96       	adiw	r28, 0x14	; 20
    826c:	2e ad       	ldd	r18, Y+62	; 0x3e
    826e:	3f ad       	ldd	r19, Y+63	; 0x3f
    8270:	64 97       	sbiw	r28, 0x14	; 20
    8272:	f9 01       	movw	r30, r18
    8274:	80 83       	st	Z, r24
    8276:	91 83       	std	Z+1, r25	; 0x01
    8278:	a2 83       	std	Z+2, r26	; 0x02
    827a:	b3 83       	std	Z+3, r27	; 0x03
	localNEDZ = rotatedMatrix[2];
    827c:	89 8d       	ldd	r24, Y+25	; 0x19
    827e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    8280:	ab 8d       	ldd	r26, Y+27	; 0x1b
    8282:	bc 8d       	ldd	r27, Y+28	; 0x1c
    8284:	66 96       	adiw	r28, 0x16	; 22
    8286:	2e ad       	ldd	r18, Y+62	; 0x3e
    8288:	3f ad       	ldd	r19, Y+63	; 0x3f
    828a:	66 97       	sbiw	r28, 0x16	; 22
    828c:	f9 01       	movw	r30, r18
    828e:	80 83       	st	Z, r24
    8290:	91 83       	std	Z+1, r25	; 0x01
    8292:	a2 83       	std	Z+2, r26	; 0x02
    8294:	b3 83       	std	Z+3, r27	; 0x03
}
    8296:	e8 96       	adiw	r28, 0x38	; 56
    8298:	0f b6       	in	r0, 0x3f	; 63
    829a:	f8 94       	cli
    829c:	de bf       	out	0x3e, r29	; 62
    829e:	0f be       	out	0x3f, r0	; 63
    82a0:	cd bf       	out	0x3d, r28	; 61
    82a2:	df 91       	pop	r29
    82a4:	cf 91       	pop	r28
    82a6:	1f 91       	pop	r17
    82a8:	0f 91       	pop	r16
    82aa:	ff 90       	pop	r15
    82ac:	ef 90       	pop	r14
    82ae:	df 90       	pop	r13
    82b0:	cf 90       	pop	r12
    82b2:	bf 90       	pop	r11
    82b4:	af 90       	pop	r10
    82b6:	08 95       	ret

000082b8 <_ZN10helicopter4util14CoordinateUtil29ConvertFromGeodedicToLocalNEDEffffffPA3_fRfS4_S4_>:

void CoordinateUtil::ConvertFromGeodedicToLocalNED(
	float geodedicLatitude, float geodedicLongitude, float altitudeFeetAgl,
	float ecefReferenceX, float ecefReferenceY, float ecefReferenceZ, float ecefToLocalNEDRotationMatrix[][3],
	float &localNEDX,float &localNEDY,float &localNEDZ)
{
    82b8:	2f 92       	push	r2
    82ba:	3f 92       	push	r3
    82bc:	4f 92       	push	r4
    82be:	5f 92       	push	r5
    82c0:	6f 92       	push	r6
    82c2:	7f 92       	push	r7
    82c4:	8f 92       	push	r8
    82c6:	9f 92       	push	r9
    82c8:	af 92       	push	r10
    82ca:	bf 92       	push	r11
    82cc:	cf 92       	push	r12
    82ce:	df 92       	push	r13
    82d0:	ef 92       	push	r14
    82d2:	ff 92       	push	r15
    82d4:	0f 93       	push	r16
    82d6:	1f 93       	push	r17
    82d8:	cf 93       	push	r28
    82da:	df 93       	push	r29
    82dc:	cd b7       	in	r28, 0x3d	; 61
    82de:	de b7       	in	r29, 0x3e	; 62
    82e0:	6c 97       	sbiw	r28, 0x1c	; 28
    82e2:	0f b6       	in	r0, 0x3f	; 63
    82e4:	f8 94       	cli
    82e6:	de bf       	out	0x3e, r29	; 62
    82e8:	0f be       	out	0x3f, r0	; 63
    82ea:	cd bf       	out	0x3d, r28	; 61
    82ec:	6d 87       	std	Y+13, r22	; 0x0d
    82ee:	7e 87       	std	Y+14, r23	; 0x0e
    82f0:	8f 87       	std	Y+15, r24	; 0x0f
    82f2:	98 8b       	std	Y+16, r25	; 0x10
    82f4:	29 8b       	std	Y+17, r18	; 0x11
    82f6:	3a 8b       	std	Y+18, r19	; 0x12
    82f8:	4b 8b       	std	Y+19, r20	; 0x13
    82fa:	5c 8b       	std	Y+20, r21	; 0x14
    82fc:	ed 8a       	std	Y+21, r14	; 0x15
    82fe:	fe 8a       	std	Y+22, r15	; 0x16
    8300:	0f 8b       	std	Y+23, r16	; 0x17
    8302:	18 8f       	std	Y+24, r17	; 0x18
    8304:	a9 8e       	std	Y+25, r10	; 0x19
    8306:	ba 8e       	std	Y+26, r11	; 0x1a
    8308:	cb 8e       	std	Y+27, r12	; 0x1b
    830a:	dc 8e       	std	Y+28, r13	; 0x1c
	float ecefX = 0;
    830c:	19 82       	std	Y+1, r1	; 0x01
    830e:	1a 82       	std	Y+2, r1	; 0x02
    8310:	1b 82       	std	Y+3, r1	; 0x03
    8312:	1c 82       	std	Y+4, r1	; 0x04
	float ecefY = 0;
    8314:	1d 82       	std	Y+5, r1	; 0x05
    8316:	1e 82       	std	Y+6, r1	; 0x06
    8318:	1f 82       	std	Y+7, r1	; 0x07
    831a:	18 86       	std	Y+8, r1	; 0x08
	float ecefZ = 0;
    831c:	19 86       	std	Y+9, r1	; 0x09
    831e:	1a 86       	std	Y+10, r1	; 0x0a
    8320:	1b 86       	std	Y+11, r1	; 0x0b
    8322:	1c 86       	std	Y+12, r1	; 0x0c
	
	ConvertFromGeodeticToECEF(geodedicLatitude, geodedicLongitude, altitudeFeetAgl, ecefX, ecefY, ecefZ);
    8324:	fe 01       	movw	r30, r28
    8326:	39 96       	adiw	r30, 0x09	; 9
    8328:	be 01       	movw	r22, r28
    832a:	6b 5f       	subi	r22, 0xFB	; 251
    832c:	7f 4f       	sbci	r23, 0xFF	; 255
    832e:	ed 88       	ldd	r14, Y+21	; 0x15
    8330:	fe 88       	ldd	r15, Y+22	; 0x16
    8332:	0f 89       	ldd	r16, Y+23	; 0x17
    8334:	18 8d       	ldd	r17, Y+24	; 0x18
    8336:	29 89       	ldd	r18, Y+17	; 0x11
    8338:	3a 89       	ldd	r19, Y+18	; 0x12
    833a:	4b 89       	ldd	r20, Y+19	; 0x13
    833c:	5c 89       	ldd	r21, Y+20	; 0x14
    833e:	8d 85       	ldd	r24, Y+13	; 0x0d
    8340:	9e 85       	ldd	r25, Y+14	; 0x0e
    8342:	af 85       	ldd	r26, Y+15	; 0x0f
    8344:	b8 89       	ldd	r27, Y+16	; 0x10
    8346:	4f 01       	movw	r8, r30
    8348:	5b 01       	movw	r10, r22
    834a:	be 01       	movw	r22, r28
    834c:	6f 5f       	subi	r22, 0xFF	; 255
    834e:	7f 4f       	sbci	r23, 0xFF	; 255
    8350:	6b 01       	movw	r12, r22
    8352:	bc 01       	movw	r22, r24
    8354:	cd 01       	movw	r24, r26
    8356:	0e 94 1b 3f 	call	0x7e36	; 0x7e36 <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEfffRfS2_S2_>
	
	ConvertFromECEFToLocalNED(ecefReferenceX, ecefReferenceY, ecefReferenceZ,
		ecefX, ecefY, ecefZ, ecefToLocalNEDRotationMatrix,
		localNEDX, localNEDY, localNEDZ);
    835a:	29 85       	ldd	r18, Y+9	; 0x09
    835c:	3a 85       	ldd	r19, Y+10	; 0x0a
    835e:	4b 85       	ldd	r20, Y+11	; 0x0b
    8360:	5c 85       	ldd	r21, Y+12	; 0x0c
    8362:	8d 81       	ldd	r24, Y+5	; 0x05
    8364:	9e 81       	ldd	r25, Y+6	; 0x06
    8366:	af 81       	ldd	r26, Y+7	; 0x07
    8368:	b8 85       	ldd	r27, Y+8	; 0x08
    836a:	a9 80       	ldd	r10, Y+1	; 0x01
    836c:	ba 80       	ldd	r11, Y+2	; 0x02
    836e:	cb 80       	ldd	r12, Y+3	; 0x03
    8370:	dc 80       	ldd	r13, Y+4	; 0x04
    8372:	ee a8       	ldd	r14, Y+54	; 0x36
    8374:	ff a8       	ldd	r15, Y+55	; 0x37
    8376:	08 ad       	ldd	r16, Y+56	; 0x38
    8378:	19 ad       	ldd	r17, Y+57	; 0x39
    837a:	2a a8       	ldd	r2, Y+50	; 0x32
    837c:	3b a8       	ldd	r3, Y+51	; 0x33
    837e:	4c a8       	ldd	r4, Y+52	; 0x34
    8380:	5d a8       	ldd	r5, Y+53	; 0x35
    8382:	69 8c       	ldd	r6, Y+25	; 0x19
    8384:	7a 8c       	ldd	r7, Y+26	; 0x1a
    8386:	8b 8c       	ldd	r8, Y+27	; 0x1b
    8388:	9c 8c       	ldd	r9, Y+28	; 0x1c
    838a:	22 96       	adiw	r28, 0x02	; 2
    838c:	6f ad       	ldd	r22, Y+63	; 0x3f
    838e:	22 97       	sbiw	r28, 0x02	; 2
    8390:	6f 93       	push	r22
    8392:	21 96       	adiw	r28, 0x01	; 1
    8394:	6f ad       	ldd	r22, Y+63	; 0x3f
    8396:	21 97       	sbiw	r28, 0x01	; 1
    8398:	6f 93       	push	r22
    839a:	6f ad       	ldd	r22, Y+63	; 0x3f
    839c:	6f 93       	push	r22
    839e:	6e ad       	ldd	r22, Y+62	; 0x3e
    83a0:	6f 93       	push	r22
    83a2:	6d ad       	ldd	r22, Y+61	; 0x3d
    83a4:	6f 93       	push	r22
    83a6:	6c ad       	ldd	r22, Y+60	; 0x3c
    83a8:	6f 93       	push	r22
    83aa:	6b ad       	ldd	r22, Y+59	; 0x3b
    83ac:	6f 93       	push	r22
    83ae:	6a ad       	ldd	r22, Y+58	; 0x3a
    83b0:	6f 93       	push	r22
    83b2:	65 2f       	mov	r22, r21
    83b4:	6f 93       	push	r22
    83b6:	64 2f       	mov	r22, r20
    83b8:	6f 93       	push	r22
    83ba:	63 2f       	mov	r22, r19
    83bc:	6f 93       	push	r22
    83be:	2f 93       	push	r18
    83c0:	2b 2f       	mov	r18, r27
    83c2:	2f 93       	push	r18
    83c4:	2a 2f       	mov	r18, r26
    83c6:	2f 93       	push	r18
    83c8:	29 2f       	mov	r18, r25
    83ca:	2f 93       	push	r18
    83cc:	8f 93       	push	r24
    83ce:	a2 01       	movw	r20, r4
    83d0:	91 01       	movw	r18, r2
    83d2:	c4 01       	movw	r24, r8
    83d4:	b3 01       	movw	r22, r6
    83d6:	0e 94 29 40 	call	0x8052	; 0x8052 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_>
    83da:	8d b7       	in	r24, 0x3d	; 61
    83dc:	9e b7       	in	r25, 0x3e	; 62
    83de:	40 96       	adiw	r24, 0x10	; 16
    83e0:	0f b6       	in	r0, 0x3f	; 63
    83e2:	f8 94       	cli
    83e4:	de bf       	out	0x3e, r29	; 62
    83e6:	0f be       	out	0x3f, r0	; 63
    83e8:	cd bf       	out	0x3d, r28	; 61
    83ea:	6c 96       	adiw	r28, 0x1c	; 28
    83ec:	0f b6       	in	r0, 0x3f	; 63
    83ee:	f8 94       	cli
    83f0:	de bf       	out	0x3e, r29	; 62
    83f2:	0f be       	out	0x3f, r0	; 63
    83f4:	cd bf       	out	0x3d, r28	; 61
    83f6:	df 91       	pop	r29
    83f8:	cf 91       	pop	r28
    83fa:	1f 91       	pop	r17
    83fc:	0f 91       	pop	r16
    83fe:	ff 90       	pop	r15
    8400:	ef 90       	pop	r14
    8402:	df 90       	pop	r13
    8404:	cf 90       	pop	r12
    8406:	bf 90       	pop	r11
    8408:	af 90       	pop	r10
    840a:	9f 90       	pop	r9
    840c:	8f 90       	pop	r8
    840e:	7f 90       	pop	r7
    8410:	6f 90       	pop	r6
    8412:	5f 90       	pop	r5
    8414:	4f 90       	pop	r4
    8416:	3f 90       	pop	r3
    8418:	2f 90       	pop	r2
    841a:	08 95       	ret

0000841c <_ZN10helicopter4util5Timer10startTimerEv>:
#include "Timer.h"

using namespace helicopter::util;

void Timer::startTimer()
{
    841c:	0f 93       	push	r16
    841e:	1f 93       	push	r17
    8420:	cf 93       	push	r28
    8422:	df 93       	push	r29
    8424:	00 d0       	rcall	.+0      	; 0x8426 <_ZN10helicopter4util5Timer10startTimerEv+0xa>
    8426:	1f 92       	push	r1
    8428:	cd b7       	in	r28, 0x3d	; 61
    842a:	de b7       	in	r29, 0x3e	; 62
    842c:	9c 83       	std	Y+4, r25	; 0x04
    842e:	8b 83       	std	Y+3, r24	; 0x03
	//stop timer in case it was already started.
	stopTimer();
    8430:	8b 81       	ldd	r24, Y+3	; 0x03
    8432:	9c 81       	ldd	r25, Y+4	; 0x04
    8434:	0e 94 e2 42 	call	0x85c4	; 0x85c4 <_ZN10helicopter4util5Timer9stopTimerEv>
	
	int frequency = 0;
    8438:	1a 82       	std	Y+2, r1	; 0x02
    843a:	19 82       	std	Y+1, r1	; 0x01
	
	if (timeoutMilliseconds > 1000) 
    843c:	8b 81       	ldd	r24, Y+3	; 0x03
    843e:	9c 81       	ldd	r25, Y+4	; 0x04
    8440:	fc 01       	movw	r30, r24
    8442:	86 81       	ldd	r24, Z+6	; 0x06
    8444:	97 81       	ldd	r25, Z+7	; 0x07
    8446:	89 3e       	cpi	r24, 0xE9	; 233
    8448:	f3 e0       	ldi	r31, 0x03	; 3
    844a:	9f 07       	cpc	r25, r31
    844c:	2c f0       	brlt	.+10     	; 0x8458 <_ZN10helicopter4util5Timer10startTimerEv+0x3c>
	{
		frequency = 1;
    844e:	81 e0       	ldi	r24, 0x01	; 1
    8450:	90 e0       	ldi	r25, 0x00	; 0
    8452:	9a 83       	std	Y+2, r25	; 0x02
    8454:	89 83       	std	Y+1, r24	; 0x01
    8456:	0d c0       	rjmp	.+26     	; 0x8472 <_ZN10helicopter4util5Timer10startTimerEv+0x56>
	}else
	{
		frequency = 1000 / timeoutMilliseconds;
    8458:	8b 81       	ldd	r24, Y+3	; 0x03
    845a:	9c 81       	ldd	r25, Y+4	; 0x04
    845c:	fc 01       	movw	r30, r24
    845e:	26 81       	ldd	r18, Z+6	; 0x06
    8460:	37 81       	ldd	r19, Z+7	; 0x07
    8462:	88 ee       	ldi	r24, 0xE8	; 232
    8464:	93 e0       	ldi	r25, 0x03	; 3
    8466:	b9 01       	movw	r22, r18
    8468:	0e 94 62 47 	call	0x8ec4	; 0x8ec4 <__divmodhi4>
    846c:	9b 01       	movw	r18, r22
    846e:	3a 83       	std	Y+2, r19	; 0x02
    8470:	29 83       	std	Y+1, r18	; 0x01
	}

	//setup timer.
	//set the output compare register so that when the Timer Counter (TCNT) matches this output register
	//it indicates that the timer has timed out.
	OCR3A = ((cpuSpeed /  timerPrescaler) / frequency); 
    8472:	08 e9       	ldi	r16, 0x98	; 152
    8474:	10 e0       	ldi	r17, 0x00	; 0
    8476:	8b 81       	ldd	r24, Y+3	; 0x03
    8478:	9c 81       	ldd	r25, Y+4	; 0x04
    847a:	fc 01       	movw	r30, r24
    847c:	80 81       	ld	r24, Z
    847e:	91 81       	ldd	r25, Z+1	; 0x01
    8480:	a2 81       	ldd	r26, Z+2	; 0x02
    8482:	b3 81       	ldd	r27, Z+3	; 0x03
    8484:	2b 81       	ldd	r18, Y+3	; 0x03
    8486:	3c 81       	ldd	r19, Y+4	; 0x04
    8488:	f9 01       	movw	r30, r18
    848a:	24 81       	ldd	r18, Z+4	; 0x04
    848c:	35 81       	ldd	r19, Z+5	; 0x05
    848e:	44 27       	eor	r20, r20
    8490:	37 fd       	sbrc	r19, 7
    8492:	40 95       	com	r20
    8494:	54 2f       	mov	r21, r20
    8496:	bc 01       	movw	r22, r24
    8498:	cd 01       	movw	r24, r26
    849a:	0e 94 76 47 	call	0x8eec	; 0x8eec <__udivmodsi4>
    849e:	da 01       	movw	r26, r20
    84a0:	c9 01       	movw	r24, r18
    84a2:	29 81       	ldd	r18, Y+1	; 0x01
    84a4:	3a 81       	ldd	r19, Y+2	; 0x02
    84a6:	44 27       	eor	r20, r20
    84a8:	37 fd       	sbrc	r19, 7
    84aa:	40 95       	com	r20
    84ac:	54 2f       	mov	r21, r20
    84ae:	bc 01       	movw	r22, r24
    84b0:	cd 01       	movw	r24, r26
    84b2:	0e 94 76 47 	call	0x8eec	; 0x8eec <__udivmodsi4>
    84b6:	da 01       	movw	r26, r20
    84b8:	c9 01       	movw	r24, r18
    84ba:	f8 01       	movw	r30, r16
    84bc:	91 83       	std	Z+1, r25	; 0x01
    84be:	80 83       	st	Z, r24
		
	TCCR3B |= (1 << WGM32); //Configure timer 1 for Clear on Timer Compare (CTC) mode so that if there is a match, the TCNT goes back to 0.
    84c0:	81 e9       	ldi	r24, 0x91	; 145
    84c2:	90 e0       	ldi	r25, 0x00	; 0
    84c4:	21 e9       	ldi	r18, 0x91	; 145
    84c6:	30 e0       	ldi	r19, 0x00	; 0
    84c8:	f9 01       	movw	r30, r18
    84ca:	20 81       	ld	r18, Z
    84cc:	28 60       	ori	r18, 0x08	; 8
    84ce:	fc 01       	movw	r30, r24
    84d0:	20 83       	st	Z, r18
		
	//Set the Timer Counter Control Register (TCCR) with the appropriate prescaller
	//which causes the timer counter to start (i.e. the timer starts).
	switch(timerPrescaler)
    84d2:	8b 81       	ldd	r24, Y+3	; 0x03
    84d4:	9c 81       	ldd	r25, Y+4	; 0x04
    84d6:	fc 01       	movw	r30, r24
    84d8:	84 81       	ldd	r24, Z+4	; 0x04
    84da:	95 81       	ldd	r25, Z+5	; 0x05
    84dc:	80 34       	cpi	r24, 0x40	; 64
    84de:	91 05       	cpc	r25, r1
    84e0:	39 f1       	breq	.+78     	; 0x8530 <_ZN10helicopter4util5Timer10startTimerEv+0x114>
    84e2:	81 34       	cpi	r24, 0x41	; 65
    84e4:	91 05       	cpc	r25, r1
    84e6:	3c f4       	brge	.+14     	; 0x84f6 <_ZN10helicopter4util5Timer10startTimerEv+0xda>
    84e8:	81 30       	cpi	r24, 0x01	; 1
    84ea:	91 05       	cpc	r25, r1
    84ec:	69 f0       	breq	.+26     	; 0x8508 <_ZN10helicopter4util5Timer10startTimerEv+0xec>
    84ee:	88 30       	cpi	r24, 0x08	; 8
    84f0:	91 05       	cpc	r25, r1
    84f2:	a1 f0       	breq	.+40     	; 0x851c <_ZN10helicopter4util5Timer10startTimerEv+0x100>
    84f4:	3b c0       	rjmp	.+118    	; 0x856c <_ZN10helicopter4util5Timer10startTimerEv+0x150>
    84f6:	81 15       	cp	r24, r1
    84f8:	f1 e0       	ldi	r31, 0x01	; 1
    84fa:	9f 07       	cpc	r25, r31
    84fc:	19 f1       	breq	.+70     	; 0x8544 <_ZN10helicopter4util5Timer10startTimerEv+0x128>
    84fe:	81 15       	cp	r24, r1
    8500:	24 e0       	ldi	r18, 0x04	; 4
    8502:	92 07       	cpc	r25, r18
    8504:	49 f1       	breq	.+82     	; 0x8558 <_ZN10helicopter4util5Timer10startTimerEv+0x13c>
    8506:	32 c0       	rjmp	.+100    	; 0x856c <_ZN10helicopter4util5Timer10startTimerEv+0x150>
	{
		case NO_PRESCALER:
		TCCR3B |= NoPrescaling;
    8508:	81 e9       	ldi	r24, 0x91	; 145
    850a:	90 e0       	ldi	r25, 0x00	; 0
    850c:	21 e9       	ldi	r18, 0x91	; 145
    850e:	30 e0       	ldi	r19, 0x00	; 0
    8510:	f9 01       	movw	r30, r18
    8512:	20 81       	ld	r18, Z
    8514:	21 60       	ori	r18, 0x01	; 1
    8516:	fc 01       	movw	r30, r24
    8518:	20 83       	st	Z, r18
		break;
    851a:	31 c0       	rjmp	.+98     	; 0x857e <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_EIGHT:
		TCCR3B |= PrescaleByEight;
    851c:	81 e9       	ldi	r24, 0x91	; 145
    851e:	90 e0       	ldi	r25, 0x00	; 0
    8520:	21 e9       	ldi	r18, 0x91	; 145
    8522:	30 e0       	ldi	r19, 0x00	; 0
    8524:	f9 01       	movw	r30, r18
    8526:	20 81       	ld	r18, Z
    8528:	22 60       	ori	r18, 0x02	; 2
    852a:	fc 01       	movw	r30, r24
    852c:	20 83       	st	Z, r18
		break;
    852e:	27 c0       	rjmp	.+78     	; 0x857e <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_SIXTYFOUR:
		TCCR3B |= PrescaleBySixtyFour;
    8530:	81 e9       	ldi	r24, 0x91	; 145
    8532:	90 e0       	ldi	r25, 0x00	; 0
    8534:	21 e9       	ldi	r18, 0x91	; 145
    8536:	30 e0       	ldi	r19, 0x00	; 0
    8538:	f9 01       	movw	r30, r18
    853a:	20 81       	ld	r18, Z
    853c:	23 60       	ori	r18, 0x03	; 3
    853e:	fc 01       	movw	r30, r24
    8540:	20 83       	st	Z, r18
		break;
    8542:	1d c0       	rjmp	.+58     	; 0x857e <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_TWOFIFTYSIX:
		TCCR3B |= PrescaleByTwofiftysix;
    8544:	81 e9       	ldi	r24, 0x91	; 145
    8546:	90 e0       	ldi	r25, 0x00	; 0
    8548:	21 e9       	ldi	r18, 0x91	; 145
    854a:	30 e0       	ldi	r19, 0x00	; 0
    854c:	f9 01       	movw	r30, r18
    854e:	20 81       	ld	r18, Z
    8550:	24 60       	ori	r18, 0x04	; 4
    8552:	fc 01       	movw	r30, r24
    8554:	20 83       	st	Z, r18
		break;
    8556:	13 c0       	rjmp	.+38     	; 0x857e <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_TENTWENTYFOUR:
		TCCR3B |= PrescaleByTentwentyfour;
    8558:	81 e9       	ldi	r24, 0x91	; 145
    855a:	90 e0       	ldi	r25, 0x00	; 0
    855c:	21 e9       	ldi	r18, 0x91	; 145
    855e:	30 e0       	ldi	r19, 0x00	; 0
    8560:	f9 01       	movw	r30, r18
    8562:	20 81       	ld	r18, Z
    8564:	25 60       	ori	r18, 0x05	; 5
    8566:	fc 01       	movw	r30, r24
    8568:	20 83       	st	Z, r18
		break;
    856a:	09 c0       	rjmp	.+18     	; 0x857e <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		default:
		TCCR3B |= NoPrescaling;
    856c:	81 e9       	ldi	r24, 0x91	; 145
    856e:	90 e0       	ldi	r25, 0x00	; 0
    8570:	21 e9       	ldi	r18, 0x91	; 145
    8572:	30 e0       	ldi	r19, 0x00	; 0
    8574:	f9 01       	movw	r30, r18
    8576:	20 81       	ld	r18, Z
    8578:	21 60       	ori	r18, 0x01	; 1
    857a:	fc 01       	movw	r30, r24
    857c:	20 83       	st	Z, r18
	}
}
    857e:	0f 90       	pop	r0
    8580:	0f 90       	pop	r0
    8582:	0f 90       	pop	r0
    8584:	0f 90       	pop	r0
    8586:	df 91       	pop	r29
    8588:	cf 91       	pop	r28
    858a:	1f 91       	pop	r17
    858c:	0f 91       	pop	r16
    858e:	08 95       	ret

00008590 <_ZN10helicopter4util5Timer11hasTimedoutEv>:

bool Timer::hasTimedout()
{
    8590:	cf 93       	push	r28
    8592:	df 93       	push	r29
    8594:	1f 92       	push	r1
    8596:	1f 92       	push	r1
    8598:	cd b7       	in	r28, 0x3d	; 61
    859a:	de b7       	in	r29, 0x3e	; 62
    859c:	9a 83       	std	Y+2, r25	; 0x02
    859e:	89 83       	std	Y+1, r24	; 0x01
	//Check the Timer Interrupt Flags Register (TIFR) to determine if the flag was set indicating
	//that the timer has timed out.
	return (TIFR3 & (1<<OCF3A)) != 0;
    85a0:	88 e3       	ldi	r24, 0x38	; 56
    85a2:	90 e0       	ldi	r25, 0x00	; 0
    85a4:	fc 01       	movw	r30, r24
    85a6:	80 81       	ld	r24, Z
    85a8:	88 2f       	mov	r24, r24
    85aa:	90 e0       	ldi	r25, 0x00	; 0
    85ac:	82 70       	andi	r24, 0x02	; 2
    85ae:	99 27       	eor	r25, r25
    85b0:	21 e0       	ldi	r18, 0x01	; 1
    85b2:	00 97       	sbiw	r24, 0x00	; 0
    85b4:	09 f4       	brne	.+2      	; 0x85b8 <_ZN10helicopter4util5Timer11hasTimedoutEv+0x28>
    85b6:	20 e0       	ldi	r18, 0x00	; 0
    85b8:	82 2f       	mov	r24, r18
}
    85ba:	0f 90       	pop	r0
    85bc:	0f 90       	pop	r0
    85be:	df 91       	pop	r29
    85c0:	cf 91       	pop	r28
    85c2:	08 95       	ret

000085c4 <_ZN10helicopter4util5Timer9stopTimerEv>:

void Timer::stopTimer()
{
    85c4:	cf 93       	push	r28
    85c6:	df 93       	push	r29
    85c8:	1f 92       	push	r1
    85ca:	1f 92       	push	r1
    85cc:	cd b7       	in	r28, 0x3d	; 61
    85ce:	de b7       	in	r29, 0x3e	; 62
    85d0:	9a 83       	std	Y+2, r25	; 0x02
    85d2:	89 83       	std	Y+1, r24	; 0x01
	//stop the timer
	TCCR3B = 0;
    85d4:	81 e9       	ldi	r24, 0x91	; 145
    85d6:	90 e0       	ldi	r25, 0x00	; 0
    85d8:	fc 01       	movw	r30, r24
    85da:	10 82       	st	Z, r1
	
	//Then clear the timer counter (sets the count back to 0 so when the timer starts again, it starts from 0). 
	//Clear after stopping in order to avoid missing a compare match.
	TCNT3 = 0;
    85dc:	84 e9       	ldi	r24, 0x94	; 148
    85de:	90 e0       	ldi	r25, 0x00	; 0
    85e0:	fc 01       	movw	r30, r24
    85e2:	11 82       	std	Z+1, r1	; 0x01
    85e4:	10 82       	st	Z, r1
	
	//clear the timeout flag.
	TIFR3 |= (1<<OCF3A);
    85e6:	88 e3       	ldi	r24, 0x38	; 56
    85e8:	90 e0       	ldi	r25, 0x00	; 0
    85ea:	28 e3       	ldi	r18, 0x38	; 56
    85ec:	30 e0       	ldi	r19, 0x00	; 0
    85ee:	f9 01       	movw	r30, r18
    85f0:	20 81       	ld	r18, Z
    85f2:	22 60       	ori	r18, 0x02	; 2
    85f4:	fc 01       	movw	r30, r24
    85f6:	20 83       	st	Z, r18
    85f8:	0f 90       	pop	r0
    85fa:	0f 90       	pop	r0
    85fc:	df 91       	pop	r29
    85fe:	cf 91       	pop	r28
    8600:	08 95       	ret

00008602 <__subsf3>:
    8602:	50 58       	subi	r21, 0x80	; 128

00008604 <__addsf3>:
    8604:	bb 27       	eor	r27, r27
    8606:	aa 27       	eor	r26, r26
    8608:	0e d0       	rcall	.+28     	; 0x8626 <__addsf3x>
    860a:	dc c1       	rjmp	.+952    	; 0x89c4 <__fp_round>
    860c:	a5 d1       	rcall	.+842    	; 0x8958 <__fp_pscA>
    860e:	30 f0       	brcs	.+12     	; 0x861c <__addsf3+0x18>
    8610:	aa d1       	rcall	.+852    	; 0x8966 <__fp_pscB>
    8612:	20 f0       	brcs	.+8      	; 0x861c <__addsf3+0x18>
    8614:	31 f4       	brne	.+12     	; 0x8622 <__addsf3+0x1e>
    8616:	9f 3f       	cpi	r25, 0xFF	; 255
    8618:	11 f4       	brne	.+4      	; 0x861e <__addsf3+0x1a>
    861a:	1e f4       	brtc	.+6      	; 0x8622 <__addsf3+0x1e>
    861c:	9a c1       	rjmp	.+820    	; 0x8952 <__fp_nan>
    861e:	0e f4       	brtc	.+2      	; 0x8622 <__addsf3+0x1e>
    8620:	e0 95       	com	r30
    8622:	e7 fb       	bst	r30, 7
    8624:	67 c1       	rjmp	.+718    	; 0x88f4 <__fp_inf>

00008626 <__addsf3x>:
    8626:	e9 2f       	mov	r30, r25
    8628:	ef d1       	rcall	.+990    	; 0x8a08 <__fp_split3>
    862a:	80 f3       	brcs	.-32     	; 0x860c <__addsf3+0x8>
    862c:	ba 17       	cp	r27, r26
    862e:	62 07       	cpc	r22, r18
    8630:	73 07       	cpc	r23, r19
    8632:	84 07       	cpc	r24, r20
    8634:	95 07       	cpc	r25, r21
    8636:	18 f0       	brcs	.+6      	; 0x863e <__addsf3x+0x18>
    8638:	71 f4       	brne	.+28     	; 0x8656 <__addsf3x+0x30>
    863a:	9e f5       	brtc	.+102    	; 0x86a2 <__addsf3x+0x7c>
    863c:	1e c2       	rjmp	.+1084   	; 0x8a7a <__fp_zero>
    863e:	0e f4       	brtc	.+2      	; 0x8642 <__addsf3x+0x1c>
    8640:	e0 95       	com	r30
    8642:	0b 2e       	mov	r0, r27
    8644:	ba 2f       	mov	r27, r26
    8646:	a0 2d       	mov	r26, r0
    8648:	0b 01       	movw	r0, r22
    864a:	b9 01       	movw	r22, r18
    864c:	90 01       	movw	r18, r0
    864e:	0c 01       	movw	r0, r24
    8650:	ca 01       	movw	r24, r20
    8652:	a0 01       	movw	r20, r0
    8654:	11 24       	eor	r1, r1
    8656:	ff 27       	eor	r31, r31
    8658:	59 1b       	sub	r21, r25
    865a:	99 f0       	breq	.+38     	; 0x8682 <__addsf3x+0x5c>
    865c:	59 3f       	cpi	r21, 0xF9	; 249
    865e:	50 f4       	brcc	.+20     	; 0x8674 <__addsf3x+0x4e>
    8660:	50 3e       	cpi	r21, 0xE0	; 224
    8662:	68 f1       	brcs	.+90     	; 0x86be <__addsf3x+0x98>
    8664:	1a 16       	cp	r1, r26
    8666:	f0 40       	sbci	r31, 0x00	; 0
    8668:	a2 2f       	mov	r26, r18
    866a:	23 2f       	mov	r18, r19
    866c:	34 2f       	mov	r19, r20
    866e:	44 27       	eor	r20, r20
    8670:	58 5f       	subi	r21, 0xF8	; 248
    8672:	f3 cf       	rjmp	.-26     	; 0x865a <__addsf3x+0x34>
    8674:	46 95       	lsr	r20
    8676:	37 95       	ror	r19
    8678:	27 95       	ror	r18
    867a:	a7 95       	ror	r26
    867c:	f0 40       	sbci	r31, 0x00	; 0
    867e:	53 95       	inc	r21
    8680:	c9 f7       	brne	.-14     	; 0x8674 <__addsf3x+0x4e>
    8682:	7e f4       	brtc	.+30     	; 0x86a2 <__addsf3x+0x7c>
    8684:	1f 16       	cp	r1, r31
    8686:	ba 0b       	sbc	r27, r26
    8688:	62 0b       	sbc	r22, r18
    868a:	73 0b       	sbc	r23, r19
    868c:	84 0b       	sbc	r24, r20
    868e:	ba f0       	brmi	.+46     	; 0x86be <__addsf3x+0x98>
    8690:	91 50       	subi	r25, 0x01	; 1
    8692:	a1 f0       	breq	.+40     	; 0x86bc <__addsf3x+0x96>
    8694:	ff 0f       	add	r31, r31
    8696:	bb 1f       	adc	r27, r27
    8698:	66 1f       	adc	r22, r22
    869a:	77 1f       	adc	r23, r23
    869c:	88 1f       	adc	r24, r24
    869e:	c2 f7       	brpl	.-16     	; 0x8690 <__addsf3x+0x6a>
    86a0:	0e c0       	rjmp	.+28     	; 0x86be <__addsf3x+0x98>
    86a2:	ba 0f       	add	r27, r26
    86a4:	62 1f       	adc	r22, r18
    86a6:	73 1f       	adc	r23, r19
    86a8:	84 1f       	adc	r24, r20
    86aa:	48 f4       	brcc	.+18     	; 0x86be <__addsf3x+0x98>
    86ac:	87 95       	ror	r24
    86ae:	77 95       	ror	r23
    86b0:	67 95       	ror	r22
    86b2:	b7 95       	ror	r27
    86b4:	f7 95       	ror	r31
    86b6:	9e 3f       	cpi	r25, 0xFE	; 254
    86b8:	08 f0       	brcs	.+2      	; 0x86bc <__addsf3x+0x96>
    86ba:	b3 cf       	rjmp	.-154    	; 0x8622 <__addsf3+0x1e>
    86bc:	93 95       	inc	r25
    86be:	88 0f       	add	r24, r24
    86c0:	08 f0       	brcs	.+2      	; 0x86c4 <__addsf3x+0x9e>
    86c2:	99 27       	eor	r25, r25
    86c4:	ee 0f       	add	r30, r30
    86c6:	97 95       	ror	r25
    86c8:	87 95       	ror	r24
    86ca:	08 95       	ret

000086cc <__cmpsf2>:
    86cc:	ef d0       	rcall	.+478    	; 0x88ac <__fp_cmp>
    86ce:	08 f4       	brcc	.+2      	; 0x86d2 <__cmpsf2+0x6>
    86d0:	81 e0       	ldi	r24, 0x01	; 1
    86d2:	08 95       	ret

000086d4 <cos>:
    86d4:	50 d1       	rcall	.+672    	; 0x8976 <__fp_rempio2>
    86d6:	e3 95       	inc	r30
    86d8:	86 c1       	rjmp	.+780    	; 0x89e6 <__fp_sinus>

000086da <__divsf3>:
    86da:	0c d0       	rcall	.+24     	; 0x86f4 <__divsf3x>
    86dc:	73 c1       	rjmp	.+742    	; 0x89c4 <__fp_round>
    86de:	43 d1       	rcall	.+646    	; 0x8966 <__fp_pscB>
    86e0:	40 f0       	brcs	.+16     	; 0x86f2 <__divsf3+0x18>
    86e2:	3a d1       	rcall	.+628    	; 0x8958 <__fp_pscA>
    86e4:	30 f0       	brcs	.+12     	; 0x86f2 <__divsf3+0x18>
    86e6:	21 f4       	brne	.+8      	; 0x86f0 <__divsf3+0x16>
    86e8:	5f 3f       	cpi	r21, 0xFF	; 255
    86ea:	19 f0       	breq	.+6      	; 0x86f2 <__divsf3+0x18>
    86ec:	03 c1       	rjmp	.+518    	; 0x88f4 <__fp_inf>
    86ee:	51 11       	cpse	r21, r1
    86f0:	c5 c1       	rjmp	.+906    	; 0x8a7c <__fp_szero>
    86f2:	2f c1       	rjmp	.+606    	; 0x8952 <__fp_nan>

000086f4 <__divsf3x>:
    86f4:	89 d1       	rcall	.+786    	; 0x8a08 <__fp_split3>
    86f6:	98 f3       	brcs	.-26     	; 0x86de <__divsf3+0x4>

000086f8 <__divsf3_pse>:
    86f8:	99 23       	and	r25, r25
    86fa:	c9 f3       	breq	.-14     	; 0x86ee <__divsf3+0x14>
    86fc:	55 23       	and	r21, r21
    86fe:	b1 f3       	breq	.-20     	; 0x86ec <__divsf3+0x12>
    8700:	95 1b       	sub	r25, r21
    8702:	55 0b       	sbc	r21, r21
    8704:	bb 27       	eor	r27, r27
    8706:	aa 27       	eor	r26, r26
    8708:	62 17       	cp	r22, r18
    870a:	73 07       	cpc	r23, r19
    870c:	84 07       	cpc	r24, r20
    870e:	38 f0       	brcs	.+14     	; 0x871e <__divsf3_pse+0x26>
    8710:	9f 5f       	subi	r25, 0xFF	; 255
    8712:	5f 4f       	sbci	r21, 0xFF	; 255
    8714:	22 0f       	add	r18, r18
    8716:	33 1f       	adc	r19, r19
    8718:	44 1f       	adc	r20, r20
    871a:	aa 1f       	adc	r26, r26
    871c:	a9 f3       	breq	.-22     	; 0x8708 <__divsf3_pse+0x10>
    871e:	33 d0       	rcall	.+102    	; 0x8786 <__divsf3_pse+0x8e>
    8720:	0e 2e       	mov	r0, r30
    8722:	3a f0       	brmi	.+14     	; 0x8732 <__divsf3_pse+0x3a>
    8724:	e0 e8       	ldi	r30, 0x80	; 128
    8726:	30 d0       	rcall	.+96     	; 0x8788 <__divsf3_pse+0x90>
    8728:	91 50       	subi	r25, 0x01	; 1
    872a:	50 40       	sbci	r21, 0x00	; 0
    872c:	e6 95       	lsr	r30
    872e:	00 1c       	adc	r0, r0
    8730:	ca f7       	brpl	.-14     	; 0x8724 <__divsf3_pse+0x2c>
    8732:	29 d0       	rcall	.+82     	; 0x8786 <__divsf3_pse+0x8e>
    8734:	fe 2f       	mov	r31, r30
    8736:	27 d0       	rcall	.+78     	; 0x8786 <__divsf3_pse+0x8e>
    8738:	66 0f       	add	r22, r22
    873a:	77 1f       	adc	r23, r23
    873c:	88 1f       	adc	r24, r24
    873e:	bb 1f       	adc	r27, r27
    8740:	26 17       	cp	r18, r22
    8742:	37 07       	cpc	r19, r23
    8744:	48 07       	cpc	r20, r24
    8746:	ab 07       	cpc	r26, r27
    8748:	b0 e8       	ldi	r27, 0x80	; 128
    874a:	09 f0       	breq	.+2      	; 0x874e <__divsf3_pse+0x56>
    874c:	bb 0b       	sbc	r27, r27
    874e:	80 2d       	mov	r24, r0
    8750:	bf 01       	movw	r22, r30
    8752:	ff 27       	eor	r31, r31
    8754:	93 58       	subi	r25, 0x83	; 131
    8756:	5f 4f       	sbci	r21, 0xFF	; 255
    8758:	2a f0       	brmi	.+10     	; 0x8764 <__divsf3_pse+0x6c>
    875a:	9e 3f       	cpi	r25, 0xFE	; 254
    875c:	51 05       	cpc	r21, r1
    875e:	68 f0       	brcs	.+26     	; 0x877a <__divsf3_pse+0x82>
    8760:	c9 c0       	rjmp	.+402    	; 0x88f4 <__fp_inf>
    8762:	8c c1       	rjmp	.+792    	; 0x8a7c <__fp_szero>
    8764:	5f 3f       	cpi	r21, 0xFF	; 255
    8766:	ec f3       	brlt	.-6      	; 0x8762 <__divsf3_pse+0x6a>
    8768:	98 3e       	cpi	r25, 0xE8	; 232
    876a:	dc f3       	brlt	.-10     	; 0x8762 <__divsf3_pse+0x6a>
    876c:	86 95       	lsr	r24
    876e:	77 95       	ror	r23
    8770:	67 95       	ror	r22
    8772:	b7 95       	ror	r27
    8774:	f7 95       	ror	r31
    8776:	9f 5f       	subi	r25, 0xFF	; 255
    8778:	c9 f7       	brne	.-14     	; 0x876c <__divsf3_pse+0x74>
    877a:	88 0f       	add	r24, r24
    877c:	91 1d       	adc	r25, r1
    877e:	96 95       	lsr	r25
    8780:	87 95       	ror	r24
    8782:	97 f9       	bld	r25, 7
    8784:	08 95       	ret
    8786:	e1 e0       	ldi	r30, 0x01	; 1
    8788:	66 0f       	add	r22, r22
    878a:	77 1f       	adc	r23, r23
    878c:	88 1f       	adc	r24, r24
    878e:	bb 1f       	adc	r27, r27
    8790:	62 17       	cp	r22, r18
    8792:	73 07       	cpc	r23, r19
    8794:	84 07       	cpc	r24, r20
    8796:	ba 07       	cpc	r27, r26
    8798:	20 f0       	brcs	.+8      	; 0x87a2 <__divsf3_pse+0xaa>
    879a:	62 1b       	sub	r22, r18
    879c:	73 0b       	sbc	r23, r19
    879e:	84 0b       	sbc	r24, r20
    87a0:	ba 0b       	sbc	r27, r26
    87a2:	ee 1f       	adc	r30, r30
    87a4:	88 f7       	brcc	.-30     	; 0x8788 <__divsf3_pse+0x90>
    87a6:	e0 95       	com	r30
    87a8:	08 95       	ret

000087aa <__fixsfsi>:
    87aa:	04 d0       	rcall	.+8      	; 0x87b4 <__fixunssfsi>
    87ac:	68 94       	set
    87ae:	b1 11       	cpse	r27, r1
    87b0:	65 c1       	rjmp	.+714    	; 0x8a7c <__fp_szero>
    87b2:	08 95       	ret

000087b4 <__fixunssfsi>:
    87b4:	31 d1       	rcall	.+610    	; 0x8a18 <__fp_splitA>
    87b6:	88 f0       	brcs	.+34     	; 0x87da <__fixunssfsi+0x26>
    87b8:	9f 57       	subi	r25, 0x7F	; 127
    87ba:	90 f0       	brcs	.+36     	; 0x87e0 <__fixunssfsi+0x2c>
    87bc:	b9 2f       	mov	r27, r25
    87be:	99 27       	eor	r25, r25
    87c0:	b7 51       	subi	r27, 0x17	; 23
    87c2:	a0 f0       	brcs	.+40     	; 0x87ec <__fixunssfsi+0x38>
    87c4:	d1 f0       	breq	.+52     	; 0x87fa <__fixunssfsi+0x46>
    87c6:	66 0f       	add	r22, r22
    87c8:	77 1f       	adc	r23, r23
    87ca:	88 1f       	adc	r24, r24
    87cc:	99 1f       	adc	r25, r25
    87ce:	1a f0       	brmi	.+6      	; 0x87d6 <__fixunssfsi+0x22>
    87d0:	ba 95       	dec	r27
    87d2:	c9 f7       	brne	.-14     	; 0x87c6 <__fixunssfsi+0x12>
    87d4:	12 c0       	rjmp	.+36     	; 0x87fa <__fixunssfsi+0x46>
    87d6:	b1 30       	cpi	r27, 0x01	; 1
    87d8:	81 f0       	breq	.+32     	; 0x87fa <__fixunssfsi+0x46>
    87da:	4f d1       	rcall	.+670    	; 0x8a7a <__fp_zero>
    87dc:	b1 e0       	ldi	r27, 0x01	; 1
    87de:	08 95       	ret
    87e0:	4c c1       	rjmp	.+664    	; 0x8a7a <__fp_zero>
    87e2:	67 2f       	mov	r22, r23
    87e4:	78 2f       	mov	r23, r24
    87e6:	88 27       	eor	r24, r24
    87e8:	b8 5f       	subi	r27, 0xF8	; 248
    87ea:	39 f0       	breq	.+14     	; 0x87fa <__fixunssfsi+0x46>
    87ec:	b9 3f       	cpi	r27, 0xF9	; 249
    87ee:	cc f3       	brlt	.-14     	; 0x87e2 <__fixunssfsi+0x2e>
    87f0:	86 95       	lsr	r24
    87f2:	77 95       	ror	r23
    87f4:	67 95       	ror	r22
    87f6:	b3 95       	inc	r27
    87f8:	d9 f7       	brne	.-10     	; 0x87f0 <__fixunssfsi+0x3c>
    87fa:	3e f4       	brtc	.+14     	; 0x880a <__fixunssfsi+0x56>
    87fc:	90 95       	com	r25
    87fe:	80 95       	com	r24
    8800:	70 95       	com	r23
    8802:	61 95       	neg	r22
    8804:	7f 4f       	sbci	r23, 0xFF	; 255
    8806:	8f 4f       	sbci	r24, 0xFF	; 255
    8808:	9f 4f       	sbci	r25, 0xFF	; 255
    880a:	08 95       	ret

0000880c <__floatunsisf>:
    880c:	e8 94       	clt
    880e:	09 c0       	rjmp	.+18     	; 0x8822 <__floatsisf+0x12>

00008810 <__floatsisf>:
    8810:	97 fb       	bst	r25, 7
    8812:	3e f4       	brtc	.+14     	; 0x8822 <__floatsisf+0x12>
    8814:	90 95       	com	r25
    8816:	80 95       	com	r24
    8818:	70 95       	com	r23
    881a:	61 95       	neg	r22
    881c:	7f 4f       	sbci	r23, 0xFF	; 255
    881e:	8f 4f       	sbci	r24, 0xFF	; 255
    8820:	9f 4f       	sbci	r25, 0xFF	; 255
    8822:	99 23       	and	r25, r25
    8824:	a9 f0       	breq	.+42     	; 0x8850 <__floatsisf+0x40>
    8826:	f9 2f       	mov	r31, r25
    8828:	96 e9       	ldi	r25, 0x96	; 150
    882a:	bb 27       	eor	r27, r27
    882c:	93 95       	inc	r25
    882e:	f6 95       	lsr	r31
    8830:	87 95       	ror	r24
    8832:	77 95       	ror	r23
    8834:	67 95       	ror	r22
    8836:	b7 95       	ror	r27
    8838:	f1 11       	cpse	r31, r1
    883a:	f8 cf       	rjmp	.-16     	; 0x882c <__floatsisf+0x1c>
    883c:	fa f4       	brpl	.+62     	; 0x887c <__floatsisf+0x6c>
    883e:	bb 0f       	add	r27, r27
    8840:	11 f4       	brne	.+4      	; 0x8846 <__floatsisf+0x36>
    8842:	60 ff       	sbrs	r22, 0
    8844:	1b c0       	rjmp	.+54     	; 0x887c <__floatsisf+0x6c>
    8846:	6f 5f       	subi	r22, 0xFF	; 255
    8848:	7f 4f       	sbci	r23, 0xFF	; 255
    884a:	8f 4f       	sbci	r24, 0xFF	; 255
    884c:	9f 4f       	sbci	r25, 0xFF	; 255
    884e:	16 c0       	rjmp	.+44     	; 0x887c <__floatsisf+0x6c>
    8850:	88 23       	and	r24, r24
    8852:	11 f0       	breq	.+4      	; 0x8858 <__floatsisf+0x48>
    8854:	96 e9       	ldi	r25, 0x96	; 150
    8856:	11 c0       	rjmp	.+34     	; 0x887a <__floatsisf+0x6a>
    8858:	77 23       	and	r23, r23
    885a:	21 f0       	breq	.+8      	; 0x8864 <__floatsisf+0x54>
    885c:	9e e8       	ldi	r25, 0x8E	; 142
    885e:	87 2f       	mov	r24, r23
    8860:	76 2f       	mov	r23, r22
    8862:	05 c0       	rjmp	.+10     	; 0x886e <__floatsisf+0x5e>
    8864:	66 23       	and	r22, r22
    8866:	71 f0       	breq	.+28     	; 0x8884 <__floatsisf+0x74>
    8868:	96 e8       	ldi	r25, 0x86	; 134
    886a:	86 2f       	mov	r24, r22
    886c:	70 e0       	ldi	r23, 0x00	; 0
    886e:	60 e0       	ldi	r22, 0x00	; 0
    8870:	2a f0       	brmi	.+10     	; 0x887c <__floatsisf+0x6c>
    8872:	9a 95       	dec	r25
    8874:	66 0f       	add	r22, r22
    8876:	77 1f       	adc	r23, r23
    8878:	88 1f       	adc	r24, r24
    887a:	da f7       	brpl	.-10     	; 0x8872 <__floatsisf+0x62>
    887c:	88 0f       	add	r24, r24
    887e:	96 95       	lsr	r25
    8880:	87 95       	ror	r24
    8882:	97 f9       	bld	r25, 7
    8884:	08 95       	ret

00008886 <floor>:
    8886:	e2 d0       	rcall	.+452    	; 0x8a4c <__fp_trunc>
    8888:	80 f0       	brcs	.+32     	; 0x88aa <floor+0x24>
    888a:	9f 37       	cpi	r25, 0x7F	; 127
    888c:	40 f4       	brcc	.+16     	; 0x889e <floor+0x18>
    888e:	91 11       	cpse	r25, r1
    8890:	0e f0       	brts	.+2      	; 0x8894 <floor+0xe>
    8892:	f4 c0       	rjmp	.+488    	; 0x8a7c <__fp_szero>
    8894:	60 e0       	ldi	r22, 0x00	; 0
    8896:	70 e0       	ldi	r23, 0x00	; 0
    8898:	80 e8       	ldi	r24, 0x80	; 128
    889a:	9f eb       	ldi	r25, 0xBF	; 191
    889c:	08 95       	ret
    889e:	26 f4       	brtc	.+8      	; 0x88a8 <floor+0x22>
    88a0:	1b 16       	cp	r1, r27
    88a2:	61 1d       	adc	r22, r1
    88a4:	71 1d       	adc	r23, r1
    88a6:	81 1d       	adc	r24, r1
    88a8:	2b c0       	rjmp	.+86     	; 0x8900 <__fp_mintl>
    88aa:	45 c0       	rjmp	.+138    	; 0x8936 <__fp_mpack>

000088ac <__fp_cmp>:
    88ac:	99 0f       	add	r25, r25
    88ae:	00 08       	sbc	r0, r0
    88b0:	55 0f       	add	r21, r21
    88b2:	aa 0b       	sbc	r26, r26
    88b4:	e0 e8       	ldi	r30, 0x80	; 128
    88b6:	fe ef       	ldi	r31, 0xFE	; 254
    88b8:	16 16       	cp	r1, r22
    88ba:	17 06       	cpc	r1, r23
    88bc:	e8 07       	cpc	r30, r24
    88be:	f9 07       	cpc	r31, r25
    88c0:	c0 f0       	brcs	.+48     	; 0x88f2 <__fp_cmp+0x46>
    88c2:	12 16       	cp	r1, r18
    88c4:	13 06       	cpc	r1, r19
    88c6:	e4 07       	cpc	r30, r20
    88c8:	f5 07       	cpc	r31, r21
    88ca:	98 f0       	brcs	.+38     	; 0x88f2 <__fp_cmp+0x46>
    88cc:	62 1b       	sub	r22, r18
    88ce:	73 0b       	sbc	r23, r19
    88d0:	84 0b       	sbc	r24, r20
    88d2:	95 0b       	sbc	r25, r21
    88d4:	39 f4       	brne	.+14     	; 0x88e4 <__fp_cmp+0x38>
    88d6:	0a 26       	eor	r0, r26
    88d8:	61 f0       	breq	.+24     	; 0x88f2 <__fp_cmp+0x46>
    88da:	23 2b       	or	r18, r19
    88dc:	24 2b       	or	r18, r20
    88de:	25 2b       	or	r18, r21
    88e0:	21 f4       	brne	.+8      	; 0x88ea <__fp_cmp+0x3e>
    88e2:	08 95       	ret
    88e4:	0a 26       	eor	r0, r26
    88e6:	09 f4       	brne	.+2      	; 0x88ea <__fp_cmp+0x3e>
    88e8:	a1 40       	sbci	r26, 0x01	; 1
    88ea:	a6 95       	lsr	r26
    88ec:	8f ef       	ldi	r24, 0xFF	; 255
    88ee:	81 1d       	adc	r24, r1
    88f0:	81 1d       	adc	r24, r1
    88f2:	08 95       	ret

000088f4 <__fp_inf>:
    88f4:	97 f9       	bld	r25, 7
    88f6:	9f 67       	ori	r25, 0x7F	; 127
    88f8:	80 e8       	ldi	r24, 0x80	; 128
    88fa:	70 e0       	ldi	r23, 0x00	; 0
    88fc:	60 e0       	ldi	r22, 0x00	; 0
    88fe:	08 95       	ret

00008900 <__fp_mintl>:
    8900:	88 23       	and	r24, r24
    8902:	71 f4       	brne	.+28     	; 0x8920 <__fp_mintl+0x20>
    8904:	77 23       	and	r23, r23
    8906:	21 f0       	breq	.+8      	; 0x8910 <__fp_mintl+0x10>
    8908:	98 50       	subi	r25, 0x08	; 8
    890a:	87 2b       	or	r24, r23
    890c:	76 2f       	mov	r23, r22
    890e:	07 c0       	rjmp	.+14     	; 0x891e <__fp_mintl+0x1e>
    8910:	66 23       	and	r22, r22
    8912:	11 f4       	brne	.+4      	; 0x8918 <__fp_mintl+0x18>
    8914:	99 27       	eor	r25, r25
    8916:	0d c0       	rjmp	.+26     	; 0x8932 <__fp_mintl+0x32>
    8918:	90 51       	subi	r25, 0x10	; 16
    891a:	86 2b       	or	r24, r22
    891c:	70 e0       	ldi	r23, 0x00	; 0
    891e:	60 e0       	ldi	r22, 0x00	; 0
    8920:	2a f0       	brmi	.+10     	; 0x892c <__fp_mintl+0x2c>
    8922:	9a 95       	dec	r25
    8924:	66 0f       	add	r22, r22
    8926:	77 1f       	adc	r23, r23
    8928:	88 1f       	adc	r24, r24
    892a:	da f7       	brpl	.-10     	; 0x8922 <__fp_mintl+0x22>
    892c:	88 0f       	add	r24, r24
    892e:	96 95       	lsr	r25
    8930:	87 95       	ror	r24
    8932:	97 f9       	bld	r25, 7
    8934:	08 95       	ret

00008936 <__fp_mpack>:
    8936:	9f 3f       	cpi	r25, 0xFF	; 255
    8938:	31 f0       	breq	.+12     	; 0x8946 <__fp_mpack_finite+0xc>

0000893a <__fp_mpack_finite>:
    893a:	91 50       	subi	r25, 0x01	; 1
    893c:	20 f4       	brcc	.+8      	; 0x8946 <__fp_mpack_finite+0xc>
    893e:	87 95       	ror	r24
    8940:	77 95       	ror	r23
    8942:	67 95       	ror	r22
    8944:	b7 95       	ror	r27
    8946:	88 0f       	add	r24, r24
    8948:	91 1d       	adc	r25, r1
    894a:	96 95       	lsr	r25
    894c:	87 95       	ror	r24
    894e:	97 f9       	bld	r25, 7
    8950:	08 95       	ret

00008952 <__fp_nan>:
    8952:	9f ef       	ldi	r25, 0xFF	; 255
    8954:	80 ec       	ldi	r24, 0xC0	; 192
    8956:	08 95       	ret

00008958 <__fp_pscA>:
    8958:	00 24       	eor	r0, r0
    895a:	0a 94       	dec	r0
    895c:	16 16       	cp	r1, r22
    895e:	17 06       	cpc	r1, r23
    8960:	18 06       	cpc	r1, r24
    8962:	09 06       	cpc	r0, r25
    8964:	08 95       	ret

00008966 <__fp_pscB>:
    8966:	00 24       	eor	r0, r0
    8968:	0a 94       	dec	r0
    896a:	12 16       	cp	r1, r18
    896c:	13 06       	cpc	r1, r19
    896e:	14 06       	cpc	r1, r20
    8970:	05 06       	cpc	r0, r21
    8972:	08 95       	ret
    8974:	ee cf       	rjmp	.-36     	; 0x8952 <__fp_nan>

00008976 <__fp_rempio2>:
    8976:	50 d0       	rcall	.+160    	; 0x8a18 <__fp_splitA>
    8978:	e8 f3       	brcs	.-6      	; 0x8974 <__fp_pscB+0xe>
    897a:	e8 94       	clt
    897c:	e0 e0       	ldi	r30, 0x00	; 0
    897e:	bb 27       	eor	r27, r27
    8980:	9f 57       	subi	r25, 0x7F	; 127
    8982:	f0 f0       	brcs	.+60     	; 0x89c0 <__fp_rempio2+0x4a>
    8984:	2a ed       	ldi	r18, 0xDA	; 218
    8986:	3f e0       	ldi	r19, 0x0F	; 15
    8988:	49 ec       	ldi	r20, 0xC9	; 201
    898a:	06 c0       	rjmp	.+12     	; 0x8998 <__fp_rempio2+0x22>
    898c:	ee 0f       	add	r30, r30
    898e:	bb 0f       	add	r27, r27
    8990:	66 1f       	adc	r22, r22
    8992:	77 1f       	adc	r23, r23
    8994:	88 1f       	adc	r24, r24
    8996:	28 f0       	brcs	.+10     	; 0x89a2 <__fp_rempio2+0x2c>
    8998:	b2 3a       	cpi	r27, 0xA2	; 162
    899a:	62 07       	cpc	r22, r18
    899c:	73 07       	cpc	r23, r19
    899e:	84 07       	cpc	r24, r20
    89a0:	28 f0       	brcs	.+10     	; 0x89ac <__fp_rempio2+0x36>
    89a2:	b2 5a       	subi	r27, 0xA2	; 162
    89a4:	62 0b       	sbc	r22, r18
    89a6:	73 0b       	sbc	r23, r19
    89a8:	84 0b       	sbc	r24, r20
    89aa:	e3 95       	inc	r30
    89ac:	9a 95       	dec	r25
    89ae:	72 f7       	brpl	.-36     	; 0x898c <__fp_rempio2+0x16>
    89b0:	80 38       	cpi	r24, 0x80	; 128
    89b2:	30 f4       	brcc	.+12     	; 0x89c0 <__fp_rempio2+0x4a>
    89b4:	9a 95       	dec	r25
    89b6:	bb 0f       	add	r27, r27
    89b8:	66 1f       	adc	r22, r22
    89ba:	77 1f       	adc	r23, r23
    89bc:	88 1f       	adc	r24, r24
    89be:	d2 f7       	brpl	.-12     	; 0x89b4 <__fp_rempio2+0x3e>
    89c0:	90 48       	sbci	r25, 0x80	; 128
    89c2:	bb cf       	rjmp	.-138    	; 0x893a <__fp_mpack_finite>

000089c4 <__fp_round>:
    89c4:	09 2e       	mov	r0, r25
    89c6:	03 94       	inc	r0
    89c8:	00 0c       	add	r0, r0
    89ca:	11 f4       	brne	.+4      	; 0x89d0 <__fp_round+0xc>
    89cc:	88 23       	and	r24, r24
    89ce:	52 f0       	brmi	.+20     	; 0x89e4 <__fp_round+0x20>
    89d0:	bb 0f       	add	r27, r27
    89d2:	40 f4       	brcc	.+16     	; 0x89e4 <__fp_round+0x20>
    89d4:	bf 2b       	or	r27, r31
    89d6:	11 f4       	brne	.+4      	; 0x89dc <__fp_round+0x18>
    89d8:	60 ff       	sbrs	r22, 0
    89da:	04 c0       	rjmp	.+8      	; 0x89e4 <__fp_round+0x20>
    89dc:	6f 5f       	subi	r22, 0xFF	; 255
    89de:	7f 4f       	sbci	r23, 0xFF	; 255
    89e0:	8f 4f       	sbci	r24, 0xFF	; 255
    89e2:	9f 4f       	sbci	r25, 0xFF	; 255
    89e4:	08 95       	ret

000089e6 <__fp_sinus>:
    89e6:	ef 93       	push	r30
    89e8:	e0 ff       	sbrs	r30, 0
    89ea:	06 c0       	rjmp	.+12     	; 0x89f8 <__fp_sinus+0x12>
    89ec:	a2 ea       	ldi	r26, 0xA2	; 162
    89ee:	2a ed       	ldi	r18, 0xDA	; 218
    89f0:	3f e0       	ldi	r19, 0x0F	; 15
    89f2:	49 ec       	ldi	r20, 0xC9	; 201
    89f4:	5f eb       	ldi	r21, 0xBF	; 191
    89f6:	17 de       	rcall	.-978    	; 0x8626 <__addsf3x>
    89f8:	e5 df       	rcall	.-54     	; 0x89c4 <__fp_round>
    89fa:	0f 90       	pop	r0
    89fc:	03 94       	inc	r0
    89fe:	01 fc       	sbrc	r0, 1
    8a00:	90 58       	subi	r25, 0x80	; 128
    8a02:	e4 ee       	ldi	r30, 0xE4	; 228
    8a04:	f0 e0       	ldi	r31, 0x00	; 0
    8a06:	98 c1       	rjmp	.+816    	; 0x8d38 <__fp_powsodd>

00008a08 <__fp_split3>:
    8a08:	57 fd       	sbrc	r21, 7
    8a0a:	90 58       	subi	r25, 0x80	; 128
    8a0c:	44 0f       	add	r20, r20
    8a0e:	55 1f       	adc	r21, r21
    8a10:	59 f0       	breq	.+22     	; 0x8a28 <__fp_splitA+0x10>
    8a12:	5f 3f       	cpi	r21, 0xFF	; 255
    8a14:	71 f0       	breq	.+28     	; 0x8a32 <__fp_splitA+0x1a>
    8a16:	47 95       	ror	r20

00008a18 <__fp_splitA>:
    8a18:	88 0f       	add	r24, r24
    8a1a:	97 fb       	bst	r25, 7
    8a1c:	99 1f       	adc	r25, r25
    8a1e:	61 f0       	breq	.+24     	; 0x8a38 <__fp_splitA+0x20>
    8a20:	9f 3f       	cpi	r25, 0xFF	; 255
    8a22:	79 f0       	breq	.+30     	; 0x8a42 <__fp_splitA+0x2a>
    8a24:	87 95       	ror	r24
    8a26:	08 95       	ret
    8a28:	12 16       	cp	r1, r18
    8a2a:	13 06       	cpc	r1, r19
    8a2c:	14 06       	cpc	r1, r20
    8a2e:	55 1f       	adc	r21, r21
    8a30:	f2 cf       	rjmp	.-28     	; 0x8a16 <__fp_split3+0xe>
    8a32:	46 95       	lsr	r20
    8a34:	f1 df       	rcall	.-30     	; 0x8a18 <__fp_splitA>
    8a36:	08 c0       	rjmp	.+16     	; 0x8a48 <__fp_splitA+0x30>
    8a38:	16 16       	cp	r1, r22
    8a3a:	17 06       	cpc	r1, r23
    8a3c:	18 06       	cpc	r1, r24
    8a3e:	99 1f       	adc	r25, r25
    8a40:	f1 cf       	rjmp	.-30     	; 0x8a24 <__fp_splitA+0xc>
    8a42:	86 95       	lsr	r24
    8a44:	71 05       	cpc	r23, r1
    8a46:	61 05       	cpc	r22, r1
    8a48:	08 94       	sec
    8a4a:	08 95       	ret

00008a4c <__fp_trunc>:
    8a4c:	e5 df       	rcall	.-54     	; 0x8a18 <__fp_splitA>
    8a4e:	a0 f0       	brcs	.+40     	; 0x8a78 <__fp_trunc+0x2c>
    8a50:	be e7       	ldi	r27, 0x7E	; 126
    8a52:	b9 17       	cp	r27, r25
    8a54:	88 f4       	brcc	.+34     	; 0x8a78 <__fp_trunc+0x2c>
    8a56:	bb 27       	eor	r27, r27
    8a58:	9f 38       	cpi	r25, 0x8F	; 143
    8a5a:	60 f4       	brcc	.+24     	; 0x8a74 <__fp_trunc+0x28>
    8a5c:	16 16       	cp	r1, r22
    8a5e:	b1 1d       	adc	r27, r1
    8a60:	67 2f       	mov	r22, r23
    8a62:	78 2f       	mov	r23, r24
    8a64:	88 27       	eor	r24, r24
    8a66:	98 5f       	subi	r25, 0xF8	; 248
    8a68:	f7 cf       	rjmp	.-18     	; 0x8a58 <__fp_trunc+0xc>
    8a6a:	86 95       	lsr	r24
    8a6c:	77 95       	ror	r23
    8a6e:	67 95       	ror	r22
    8a70:	b1 1d       	adc	r27, r1
    8a72:	93 95       	inc	r25
    8a74:	96 39       	cpi	r25, 0x96	; 150
    8a76:	c8 f3       	brcs	.-14     	; 0x8a6a <__fp_trunc+0x1e>
    8a78:	08 95       	ret

00008a7a <__fp_zero>:
    8a7a:	e8 94       	clt

00008a7c <__fp_szero>:
    8a7c:	bb 27       	eor	r27, r27
    8a7e:	66 27       	eor	r22, r22
    8a80:	77 27       	eor	r23, r23
    8a82:	cb 01       	movw	r24, r22
    8a84:	97 f9       	bld	r25, 7
    8a86:	08 95       	ret

00008a88 <__gesf2>:
    8a88:	11 df       	rcall	.-478    	; 0x88ac <__fp_cmp>
    8a8a:	08 f4       	brcc	.+2      	; 0x8a8e <__gesf2+0x6>
    8a8c:	8f ef       	ldi	r24, 0xFF	; 255
    8a8e:	08 95       	ret

00008a90 <__mulsf3>:
    8a90:	0b d0       	rcall	.+22     	; 0x8aa8 <__mulsf3x>
    8a92:	98 cf       	rjmp	.-208    	; 0x89c4 <__fp_round>
    8a94:	61 df       	rcall	.-318    	; 0x8958 <__fp_pscA>
    8a96:	28 f0       	brcs	.+10     	; 0x8aa2 <__mulsf3+0x12>
    8a98:	66 df       	rcall	.-308    	; 0x8966 <__fp_pscB>
    8a9a:	18 f0       	brcs	.+6      	; 0x8aa2 <__mulsf3+0x12>
    8a9c:	95 23       	and	r25, r21
    8a9e:	09 f0       	breq	.+2      	; 0x8aa2 <__mulsf3+0x12>
    8aa0:	29 cf       	rjmp	.-430    	; 0x88f4 <__fp_inf>
    8aa2:	57 cf       	rjmp	.-338    	; 0x8952 <__fp_nan>
    8aa4:	11 24       	eor	r1, r1
    8aa6:	ea cf       	rjmp	.-44     	; 0x8a7c <__fp_szero>

00008aa8 <__mulsf3x>:
    8aa8:	af df       	rcall	.-162    	; 0x8a08 <__fp_split3>
    8aaa:	a0 f3       	brcs	.-24     	; 0x8a94 <__mulsf3+0x4>

00008aac <__mulsf3_pse>:
    8aac:	95 9f       	mul	r25, r21
    8aae:	d1 f3       	breq	.-12     	; 0x8aa4 <__mulsf3+0x14>
    8ab0:	95 0f       	add	r25, r21
    8ab2:	50 e0       	ldi	r21, 0x00	; 0
    8ab4:	55 1f       	adc	r21, r21
    8ab6:	62 9f       	mul	r22, r18
    8ab8:	f0 01       	movw	r30, r0
    8aba:	72 9f       	mul	r23, r18
    8abc:	bb 27       	eor	r27, r27
    8abe:	f0 0d       	add	r31, r0
    8ac0:	b1 1d       	adc	r27, r1
    8ac2:	63 9f       	mul	r22, r19
    8ac4:	aa 27       	eor	r26, r26
    8ac6:	f0 0d       	add	r31, r0
    8ac8:	b1 1d       	adc	r27, r1
    8aca:	aa 1f       	adc	r26, r26
    8acc:	64 9f       	mul	r22, r20
    8ace:	66 27       	eor	r22, r22
    8ad0:	b0 0d       	add	r27, r0
    8ad2:	a1 1d       	adc	r26, r1
    8ad4:	66 1f       	adc	r22, r22
    8ad6:	82 9f       	mul	r24, r18
    8ad8:	22 27       	eor	r18, r18
    8ada:	b0 0d       	add	r27, r0
    8adc:	a1 1d       	adc	r26, r1
    8ade:	62 1f       	adc	r22, r18
    8ae0:	73 9f       	mul	r23, r19
    8ae2:	b0 0d       	add	r27, r0
    8ae4:	a1 1d       	adc	r26, r1
    8ae6:	62 1f       	adc	r22, r18
    8ae8:	83 9f       	mul	r24, r19
    8aea:	a0 0d       	add	r26, r0
    8aec:	61 1d       	adc	r22, r1
    8aee:	22 1f       	adc	r18, r18
    8af0:	74 9f       	mul	r23, r20
    8af2:	33 27       	eor	r19, r19
    8af4:	a0 0d       	add	r26, r0
    8af6:	61 1d       	adc	r22, r1
    8af8:	23 1f       	adc	r18, r19
    8afa:	84 9f       	mul	r24, r20
    8afc:	60 0d       	add	r22, r0
    8afe:	21 1d       	adc	r18, r1
    8b00:	82 2f       	mov	r24, r18
    8b02:	76 2f       	mov	r23, r22
    8b04:	6a 2f       	mov	r22, r26
    8b06:	11 24       	eor	r1, r1
    8b08:	9f 57       	subi	r25, 0x7F	; 127
    8b0a:	50 40       	sbci	r21, 0x00	; 0
    8b0c:	8a f0       	brmi	.+34     	; 0x8b30 <__mulsf3_pse+0x84>
    8b0e:	e1 f0       	breq	.+56     	; 0x8b48 <__mulsf3_pse+0x9c>
    8b10:	88 23       	and	r24, r24
    8b12:	4a f0       	brmi	.+18     	; 0x8b26 <__mulsf3_pse+0x7a>
    8b14:	ee 0f       	add	r30, r30
    8b16:	ff 1f       	adc	r31, r31
    8b18:	bb 1f       	adc	r27, r27
    8b1a:	66 1f       	adc	r22, r22
    8b1c:	77 1f       	adc	r23, r23
    8b1e:	88 1f       	adc	r24, r24
    8b20:	91 50       	subi	r25, 0x01	; 1
    8b22:	50 40       	sbci	r21, 0x00	; 0
    8b24:	a9 f7       	brne	.-22     	; 0x8b10 <__mulsf3_pse+0x64>
    8b26:	9e 3f       	cpi	r25, 0xFE	; 254
    8b28:	51 05       	cpc	r21, r1
    8b2a:	70 f0       	brcs	.+28     	; 0x8b48 <__mulsf3_pse+0x9c>
    8b2c:	e3 ce       	rjmp	.-570    	; 0x88f4 <__fp_inf>
    8b2e:	a6 cf       	rjmp	.-180    	; 0x8a7c <__fp_szero>
    8b30:	5f 3f       	cpi	r21, 0xFF	; 255
    8b32:	ec f3       	brlt	.-6      	; 0x8b2e <__mulsf3_pse+0x82>
    8b34:	98 3e       	cpi	r25, 0xE8	; 232
    8b36:	dc f3       	brlt	.-10     	; 0x8b2e <__mulsf3_pse+0x82>
    8b38:	86 95       	lsr	r24
    8b3a:	77 95       	ror	r23
    8b3c:	67 95       	ror	r22
    8b3e:	b7 95       	ror	r27
    8b40:	f7 95       	ror	r31
    8b42:	e7 95       	ror	r30
    8b44:	9f 5f       	subi	r25, 0xFF	; 255
    8b46:	c1 f7       	brne	.-16     	; 0x8b38 <__mulsf3_pse+0x8c>
    8b48:	fe 2b       	or	r31, r30
    8b4a:	88 0f       	add	r24, r24
    8b4c:	91 1d       	adc	r25, r1
    8b4e:	96 95       	lsr	r25
    8b50:	87 95       	ror	r24
    8b52:	97 f9       	bld	r25, 7
    8b54:	08 95       	ret

00008b56 <pow>:
    8b56:	fa 01       	movw	r30, r20
    8b58:	ee 0f       	add	r30, r30
    8b5a:	ff 1f       	adc	r31, r31
    8b5c:	30 96       	adiw	r30, 0x00	; 0
    8b5e:	21 05       	cpc	r18, r1
    8b60:	31 05       	cpc	r19, r1
    8b62:	99 f1       	breq	.+102    	; 0x8bca <pow+0x74>
    8b64:	61 15       	cp	r22, r1
    8b66:	71 05       	cpc	r23, r1
    8b68:	61 f4       	brne	.+24     	; 0x8b82 <pow+0x2c>
    8b6a:	80 38       	cpi	r24, 0x80	; 128
    8b6c:	bf e3       	ldi	r27, 0x3F	; 63
    8b6e:	9b 07       	cpc	r25, r27
    8b70:	49 f1       	breq	.+82     	; 0x8bc4 <pow+0x6e>
    8b72:	68 94       	set
    8b74:	90 38       	cpi	r25, 0x80	; 128
    8b76:	81 05       	cpc	r24, r1
    8b78:	61 f0       	breq	.+24     	; 0x8b92 <pow+0x3c>
    8b7a:	80 38       	cpi	r24, 0x80	; 128
    8b7c:	bf ef       	ldi	r27, 0xFF	; 255
    8b7e:	9b 07       	cpc	r25, r27
    8b80:	41 f0       	breq	.+16     	; 0x8b92 <pow+0x3c>
    8b82:	99 23       	and	r25, r25
    8b84:	42 f5       	brpl	.+80     	; 0x8bd6 <pow+0x80>
    8b86:	ff 3f       	cpi	r31, 0xFF	; 255
    8b88:	e1 05       	cpc	r30, r1
    8b8a:	31 05       	cpc	r19, r1
    8b8c:	21 05       	cpc	r18, r1
    8b8e:	11 f1       	breq	.+68     	; 0x8bd4 <pow+0x7e>
    8b90:	e8 94       	clt
    8b92:	08 94       	sec
    8b94:	e7 95       	ror	r30
    8b96:	d9 01       	movw	r26, r18
    8b98:	aa 23       	and	r26, r26
    8b9a:	29 f4       	brne	.+10     	; 0x8ba6 <pow+0x50>
    8b9c:	ab 2f       	mov	r26, r27
    8b9e:	be 2f       	mov	r27, r30
    8ba0:	f8 5f       	subi	r31, 0xF8	; 248
    8ba2:	d0 f3       	brcs	.-12     	; 0x8b98 <pow+0x42>
    8ba4:	10 c0       	rjmp	.+32     	; 0x8bc6 <pow+0x70>
    8ba6:	ff 5f       	subi	r31, 0xFF	; 255
    8ba8:	70 f4       	brcc	.+28     	; 0x8bc6 <pow+0x70>
    8baa:	a6 95       	lsr	r26
    8bac:	e0 f7       	brcc	.-8      	; 0x8ba6 <pow+0x50>
    8bae:	f7 39       	cpi	r31, 0x97	; 151
    8bb0:	50 f0       	brcs	.+20     	; 0x8bc6 <pow+0x70>
    8bb2:	19 f0       	breq	.+6      	; 0x8bba <pow+0x64>
    8bb4:	ff 3a       	cpi	r31, 0xAF	; 175
    8bb6:	38 f4       	brcc	.+14     	; 0x8bc6 <pow+0x70>
    8bb8:	9f 77       	andi	r25, 0x7F	; 127
    8bba:	9f 93       	push	r25
    8bbc:	0c d0       	rcall	.+24     	; 0x8bd6 <pow+0x80>
    8bbe:	0f 90       	pop	r0
    8bc0:	07 fc       	sbrc	r0, 7
    8bc2:	90 58       	subi	r25, 0x80	; 128
    8bc4:	08 95       	ret
    8bc6:	3e f0       	brts	.+14     	; 0x8bd6 <pow+0x80>
    8bc8:	c4 ce       	rjmp	.-632    	; 0x8952 <__fp_nan>
    8bca:	60 e0       	ldi	r22, 0x00	; 0
    8bcc:	70 e0       	ldi	r23, 0x00	; 0
    8bce:	80 e8       	ldi	r24, 0x80	; 128
    8bd0:	9f e3       	ldi	r25, 0x3F	; 63
    8bd2:	08 95       	ret
    8bd4:	4f e7       	ldi	r20, 0x7F	; 127
    8bd6:	9f 77       	andi	r25, 0x7F	; 127
    8bd8:	5f 93       	push	r21
    8bda:	4f 93       	push	r20
    8bdc:	3f 93       	push	r19
    8bde:	2f 93       	push	r18
    8be0:	fe d0       	rcall	.+508    	; 0x8dde <log>
    8be2:	2f 91       	pop	r18
    8be4:	3f 91       	pop	r19
    8be6:	4f 91       	pop	r20
    8be8:	5f 91       	pop	r21
    8bea:	52 df       	rcall	.-348    	; 0x8a90 <__mulsf3>
    8bec:	4d c0       	rjmp	.+154    	; 0x8c88 <exp>

00008bee <sin>:
    8bee:	9f 93       	push	r25
    8bf0:	c2 de       	rcall	.-636    	; 0x8976 <__fp_rempio2>
    8bf2:	0f 90       	pop	r0
    8bf4:	07 fc       	sbrc	r0, 7
    8bf6:	ee 5f       	subi	r30, 0xFE	; 254
    8bf8:	f6 ce       	rjmp	.-532    	; 0x89e6 <__fp_sinus>
    8bfa:	11 f4       	brne	.+4      	; 0x8c00 <sin+0x12>
    8bfc:	0e f4       	brtc	.+2      	; 0x8c00 <sin+0x12>
    8bfe:	a9 ce       	rjmp	.-686    	; 0x8952 <__fp_nan>
    8c00:	9a ce       	rjmp	.-716    	; 0x8936 <__fp_mpack>

00008c02 <sqrt>:
    8c02:	0a df       	rcall	.-492    	; 0x8a18 <__fp_splitA>
    8c04:	d0 f3       	brcs	.-12     	; 0x8bfa <sin+0xc>
    8c06:	99 23       	and	r25, r25
    8c08:	d9 f3       	breq	.-10     	; 0x8c00 <sin+0x12>
    8c0a:	ce f3       	brts	.-14     	; 0x8bfe <sin+0x10>
    8c0c:	9f 57       	subi	r25, 0x7F	; 127
    8c0e:	55 0b       	sbc	r21, r21
    8c10:	87 ff       	sbrs	r24, 7
    8c12:	66 d0       	rcall	.+204    	; 0x8ce0 <__fp_norm2>
    8c14:	00 24       	eor	r0, r0
    8c16:	a0 e6       	ldi	r26, 0x60	; 96
    8c18:	40 ea       	ldi	r20, 0xA0	; 160
    8c1a:	90 01       	movw	r18, r0
    8c1c:	80 58       	subi	r24, 0x80	; 128
    8c1e:	56 95       	lsr	r21
    8c20:	97 95       	ror	r25
    8c22:	28 f4       	brcc	.+10     	; 0x8c2e <sqrt+0x2c>
    8c24:	80 5c       	subi	r24, 0xC0	; 192
    8c26:	66 0f       	add	r22, r22
    8c28:	77 1f       	adc	r23, r23
    8c2a:	88 1f       	adc	r24, r24
    8c2c:	20 f0       	brcs	.+8      	; 0x8c36 <sqrt+0x34>
    8c2e:	26 17       	cp	r18, r22
    8c30:	37 07       	cpc	r19, r23
    8c32:	48 07       	cpc	r20, r24
    8c34:	30 f4       	brcc	.+12     	; 0x8c42 <sqrt+0x40>
    8c36:	62 1b       	sub	r22, r18
    8c38:	73 0b       	sbc	r23, r19
    8c3a:	84 0b       	sbc	r24, r20
    8c3c:	20 29       	or	r18, r0
    8c3e:	31 29       	or	r19, r1
    8c40:	4a 2b       	or	r20, r26
    8c42:	a6 95       	lsr	r26
    8c44:	17 94       	ror	r1
    8c46:	07 94       	ror	r0
    8c48:	20 25       	eor	r18, r0
    8c4a:	31 25       	eor	r19, r1
    8c4c:	4a 27       	eor	r20, r26
    8c4e:	58 f7       	brcc	.-42     	; 0x8c26 <sqrt+0x24>
    8c50:	66 0f       	add	r22, r22
    8c52:	77 1f       	adc	r23, r23
    8c54:	88 1f       	adc	r24, r24
    8c56:	20 f0       	brcs	.+8      	; 0x8c60 <sqrt+0x5e>
    8c58:	26 17       	cp	r18, r22
    8c5a:	37 07       	cpc	r19, r23
    8c5c:	48 07       	cpc	r20, r24
    8c5e:	30 f4       	brcc	.+12     	; 0x8c6c <sqrt+0x6a>
    8c60:	62 0b       	sbc	r22, r18
    8c62:	73 0b       	sbc	r23, r19
    8c64:	84 0b       	sbc	r24, r20
    8c66:	20 0d       	add	r18, r0
    8c68:	31 1d       	adc	r19, r1
    8c6a:	41 1d       	adc	r20, r1
    8c6c:	a0 95       	com	r26
    8c6e:	81 f7       	brne	.-32     	; 0x8c50 <sqrt+0x4e>
    8c70:	b9 01       	movw	r22, r18
    8c72:	84 2f       	mov	r24, r20
    8c74:	91 58       	subi	r25, 0x81	; 129
    8c76:	88 0f       	add	r24, r24
    8c78:	96 95       	lsr	r25
    8c7a:	87 95       	ror	r24
    8c7c:	08 95       	ret
    8c7e:	19 f4       	brne	.+6      	; 0x8c86 <sqrt+0x84>
    8c80:	0e f0       	brts	.+2      	; 0x8c84 <sqrt+0x82>
    8c82:	38 ce       	rjmp	.-912    	; 0x88f4 <__fp_inf>
    8c84:	fa ce       	rjmp	.-524    	; 0x8a7a <__fp_zero>
    8c86:	65 ce       	rjmp	.-822    	; 0x8952 <__fp_nan>

00008c88 <exp>:
    8c88:	c7 de       	rcall	.-626    	; 0x8a18 <__fp_splitA>
    8c8a:	c8 f3       	brcs	.-14     	; 0x8c7e <sqrt+0x7c>
    8c8c:	96 38       	cpi	r25, 0x86	; 134
    8c8e:	c0 f7       	brcc	.-16     	; 0x8c80 <sqrt+0x7e>
    8c90:	07 f8       	bld	r0, 7
    8c92:	0f 92       	push	r0
    8c94:	e8 94       	clt
    8c96:	2b e3       	ldi	r18, 0x3B	; 59
    8c98:	3a ea       	ldi	r19, 0xAA	; 170
    8c9a:	48 eb       	ldi	r20, 0xB8	; 184
    8c9c:	5f e7       	ldi	r21, 0x7F	; 127
    8c9e:	06 df       	rcall	.-500    	; 0x8aac <__mulsf3_pse>
    8ca0:	0f 92       	push	r0
    8ca2:	0f 92       	push	r0
    8ca4:	0f 92       	push	r0
    8ca6:	4d b7       	in	r20, 0x3d	; 61
    8ca8:	5e b7       	in	r21, 0x3e	; 62
    8caa:	0f 92       	push	r0
    8cac:	d8 d0       	rcall	.+432    	; 0x8e5e <modf>
    8cae:	e2 e0       	ldi	r30, 0x02	; 2
    8cb0:	f1 e0       	ldi	r31, 0x01	; 1
    8cb2:	1d d0       	rcall	.+58     	; 0x8cee <__fp_powser>
    8cb4:	4f 91       	pop	r20
    8cb6:	5f 91       	pop	r21
    8cb8:	ef 91       	pop	r30
    8cba:	ff 91       	pop	r31
    8cbc:	e5 95       	asr	r30
    8cbe:	ee 1f       	adc	r30, r30
    8cc0:	ff 1f       	adc	r31, r31
    8cc2:	49 f0       	breq	.+18     	; 0x8cd6 <exp+0x4e>
    8cc4:	fe 57       	subi	r31, 0x7E	; 126
    8cc6:	e0 68       	ori	r30, 0x80	; 128
    8cc8:	44 27       	eor	r20, r20
    8cca:	ee 0f       	add	r30, r30
    8ccc:	44 1f       	adc	r20, r20
    8cce:	fa 95       	dec	r31
    8cd0:	e1 f7       	brne	.-8      	; 0x8cca <exp+0x42>
    8cd2:	41 95       	neg	r20
    8cd4:	55 0b       	sbc	r21, r21
    8cd6:	4a d0       	rcall	.+148    	; 0x8d6c <ldexp>
    8cd8:	0f 90       	pop	r0
    8cda:	07 fe       	sbrs	r0, 7
    8cdc:	3e c0       	rjmp	.+124    	; 0x8d5a <inverse>
    8cde:	08 95       	ret

00008ce0 <__fp_norm2>:
    8ce0:	91 50       	subi	r25, 0x01	; 1
    8ce2:	50 40       	sbci	r21, 0x00	; 0
    8ce4:	66 0f       	add	r22, r22
    8ce6:	77 1f       	adc	r23, r23
    8ce8:	88 1f       	adc	r24, r24
    8cea:	d2 f7       	brpl	.-12     	; 0x8ce0 <__fp_norm2>
    8cec:	08 95       	ret

00008cee <__fp_powser>:
    8cee:	df 93       	push	r29
    8cf0:	cf 93       	push	r28
    8cf2:	1f 93       	push	r17
    8cf4:	0f 93       	push	r16
    8cf6:	ff 92       	push	r15
    8cf8:	ef 92       	push	r14
    8cfa:	df 92       	push	r13
    8cfc:	7b 01       	movw	r14, r22
    8cfe:	8c 01       	movw	r16, r24
    8d00:	68 94       	set
    8d02:	05 c0       	rjmp	.+10     	; 0x8d0e <__fp_powser+0x20>
    8d04:	da 2e       	mov	r13, r26
    8d06:	ef 01       	movw	r28, r30
    8d08:	cf de       	rcall	.-610    	; 0x8aa8 <__mulsf3x>
    8d0a:	fe 01       	movw	r30, r28
    8d0c:	e8 94       	clt
    8d0e:	a5 91       	lpm	r26, Z+
    8d10:	25 91       	lpm	r18, Z+
    8d12:	35 91       	lpm	r19, Z+
    8d14:	45 91       	lpm	r20, Z+
    8d16:	55 91       	lpm	r21, Z+
    8d18:	ae f3       	brts	.-22     	; 0x8d04 <__fp_powser+0x16>
    8d1a:	ef 01       	movw	r28, r30
    8d1c:	84 dc       	rcall	.-1784   	; 0x8626 <__addsf3x>
    8d1e:	fe 01       	movw	r30, r28
    8d20:	97 01       	movw	r18, r14
    8d22:	a8 01       	movw	r20, r16
    8d24:	da 94       	dec	r13
    8d26:	79 f7       	brne	.-34     	; 0x8d06 <__fp_powser+0x18>
    8d28:	df 90       	pop	r13
    8d2a:	ef 90       	pop	r14
    8d2c:	ff 90       	pop	r15
    8d2e:	0f 91       	pop	r16
    8d30:	1f 91       	pop	r17
    8d32:	cf 91       	pop	r28
    8d34:	df 91       	pop	r29
    8d36:	08 95       	ret

00008d38 <__fp_powsodd>:
    8d38:	9f 93       	push	r25
    8d3a:	8f 93       	push	r24
    8d3c:	7f 93       	push	r23
    8d3e:	6f 93       	push	r22
    8d40:	ff 93       	push	r31
    8d42:	ef 93       	push	r30
    8d44:	9b 01       	movw	r18, r22
    8d46:	ac 01       	movw	r20, r24
    8d48:	a3 de       	rcall	.-698    	; 0x8a90 <__mulsf3>
    8d4a:	ef 91       	pop	r30
    8d4c:	ff 91       	pop	r31
    8d4e:	cf df       	rcall	.-98     	; 0x8cee <__fp_powser>
    8d50:	2f 91       	pop	r18
    8d52:	3f 91       	pop	r19
    8d54:	4f 91       	pop	r20
    8d56:	5f 91       	pop	r21
    8d58:	9b ce       	rjmp	.-714    	; 0x8a90 <__mulsf3>

00008d5a <inverse>:
    8d5a:	9b 01       	movw	r18, r22
    8d5c:	ac 01       	movw	r20, r24
    8d5e:	60 e0       	ldi	r22, 0x00	; 0
    8d60:	70 e0       	ldi	r23, 0x00	; 0
    8d62:	80 e8       	ldi	r24, 0x80	; 128
    8d64:	9f e3       	ldi	r25, 0x3F	; 63
    8d66:	b9 cc       	rjmp	.-1678   	; 0x86da <__divsf3>
    8d68:	c5 cd       	rjmp	.-1142   	; 0x88f4 <__fp_inf>
    8d6a:	e5 cd       	rjmp	.-1078   	; 0x8936 <__fp_mpack>

00008d6c <ldexp>:
    8d6c:	55 de       	rcall	.-854    	; 0x8a18 <__fp_splitA>
    8d6e:	e8 f3       	brcs	.-6      	; 0x8d6a <inverse+0x10>
    8d70:	99 23       	and	r25, r25
    8d72:	d9 f3       	breq	.-10     	; 0x8d6a <inverse+0x10>
    8d74:	94 0f       	add	r25, r20
    8d76:	51 1d       	adc	r21, r1
    8d78:	bb f3       	brvs	.-18     	; 0x8d68 <inverse+0xe>
    8d7a:	91 50       	subi	r25, 0x01	; 1
    8d7c:	50 40       	sbci	r21, 0x00	; 0
    8d7e:	94 f0       	brlt	.+36     	; 0x8da4 <ldexp+0x38>
    8d80:	59 f0       	breq	.+22     	; 0x8d98 <ldexp+0x2c>
    8d82:	88 23       	and	r24, r24
    8d84:	32 f0       	brmi	.+12     	; 0x8d92 <ldexp+0x26>
    8d86:	66 0f       	add	r22, r22
    8d88:	77 1f       	adc	r23, r23
    8d8a:	88 1f       	adc	r24, r24
    8d8c:	91 50       	subi	r25, 0x01	; 1
    8d8e:	50 40       	sbci	r21, 0x00	; 0
    8d90:	c1 f7       	brne	.-16     	; 0x8d82 <ldexp+0x16>
    8d92:	9e 3f       	cpi	r25, 0xFE	; 254
    8d94:	51 05       	cpc	r21, r1
    8d96:	44 f7       	brge	.-48     	; 0x8d68 <inverse+0xe>
    8d98:	88 0f       	add	r24, r24
    8d9a:	91 1d       	adc	r25, r1
    8d9c:	96 95       	lsr	r25
    8d9e:	87 95       	ror	r24
    8da0:	97 f9       	bld	r25, 7
    8da2:	08 95       	ret
    8da4:	5f 3f       	cpi	r21, 0xFF	; 255
    8da6:	ac f0       	brlt	.+42     	; 0x8dd2 <ldexp+0x66>
    8da8:	98 3e       	cpi	r25, 0xE8	; 232
    8daa:	9c f0       	brlt	.+38     	; 0x8dd2 <ldexp+0x66>
    8dac:	bb 27       	eor	r27, r27
    8dae:	86 95       	lsr	r24
    8db0:	77 95       	ror	r23
    8db2:	67 95       	ror	r22
    8db4:	b7 95       	ror	r27
    8db6:	08 f4       	brcc	.+2      	; 0x8dba <ldexp+0x4e>
    8db8:	b1 60       	ori	r27, 0x01	; 1
    8dba:	93 95       	inc	r25
    8dbc:	c1 f7       	brne	.-16     	; 0x8dae <ldexp+0x42>
    8dbe:	bb 0f       	add	r27, r27
    8dc0:	58 f7       	brcc	.-42     	; 0x8d98 <ldexp+0x2c>
    8dc2:	11 f4       	brne	.+4      	; 0x8dc8 <ldexp+0x5c>
    8dc4:	60 ff       	sbrs	r22, 0
    8dc6:	e8 cf       	rjmp	.-48     	; 0x8d98 <ldexp+0x2c>
    8dc8:	6f 5f       	subi	r22, 0xFF	; 255
    8dca:	7f 4f       	sbci	r23, 0xFF	; 255
    8dcc:	8f 4f       	sbci	r24, 0xFF	; 255
    8dce:	9f 4f       	sbci	r25, 0xFF	; 255
    8dd0:	e3 cf       	rjmp	.-58     	; 0x8d98 <ldexp+0x2c>
    8dd2:	54 ce       	rjmp	.-856    	; 0x8a7c <__fp_szero>
    8dd4:	0e f0       	brts	.+2      	; 0x8dd8 <ldexp+0x6c>
    8dd6:	af cd       	rjmp	.-1186   	; 0x8936 <__fp_mpack>
    8dd8:	bc cd       	rjmp	.-1160   	; 0x8952 <__fp_nan>
    8dda:	68 94       	set
    8ddc:	8b cd       	rjmp	.-1258   	; 0x88f4 <__fp_inf>

00008dde <log>:
    8dde:	1c de       	rcall	.-968    	; 0x8a18 <__fp_splitA>
    8de0:	c8 f3       	brcs	.-14     	; 0x8dd4 <ldexp+0x68>
    8de2:	99 23       	and	r25, r25
    8de4:	d1 f3       	breq	.-12     	; 0x8dda <ldexp+0x6e>
    8de6:	c6 f3       	brts	.-16     	; 0x8dd8 <ldexp+0x6c>
    8de8:	df 93       	push	r29
    8dea:	cf 93       	push	r28
    8dec:	1f 93       	push	r17
    8dee:	0f 93       	push	r16
    8df0:	ff 92       	push	r15
    8df2:	c9 2f       	mov	r28, r25
    8df4:	dd 27       	eor	r29, r29
    8df6:	88 23       	and	r24, r24
    8df8:	2a f0       	brmi	.+10     	; 0x8e04 <log+0x26>
    8dfa:	21 97       	sbiw	r28, 0x01	; 1
    8dfc:	66 0f       	add	r22, r22
    8dfe:	77 1f       	adc	r23, r23
    8e00:	88 1f       	adc	r24, r24
    8e02:	da f7       	brpl	.-10     	; 0x8dfa <log+0x1c>
    8e04:	20 e0       	ldi	r18, 0x00	; 0
    8e06:	30 e0       	ldi	r19, 0x00	; 0
    8e08:	40 e8       	ldi	r20, 0x80	; 128
    8e0a:	5f eb       	ldi	r21, 0xBF	; 191
    8e0c:	9f e3       	ldi	r25, 0x3F	; 63
    8e0e:	88 39       	cpi	r24, 0x98	; 152
    8e10:	20 f0       	brcs	.+8      	; 0x8e1a <log+0x3c>
    8e12:	80 3e       	cpi	r24, 0xE0	; 224
    8e14:	30 f0       	brcs	.+12     	; 0x8e22 <log+0x44>
    8e16:	21 96       	adiw	r28, 0x01	; 1
    8e18:	8f 77       	andi	r24, 0x7F	; 127
    8e1a:	f4 db       	rcall	.-2072   	; 0x8604 <__addsf3>
    8e1c:	ea e2       	ldi	r30, 0x2A	; 42
    8e1e:	f1 e0       	ldi	r31, 0x01	; 1
    8e20:	03 c0       	rjmp	.+6      	; 0x8e28 <log+0x4a>
    8e22:	f0 db       	rcall	.-2080   	; 0x8604 <__addsf3>
    8e24:	e7 e5       	ldi	r30, 0x57	; 87
    8e26:	f1 e0       	ldi	r31, 0x01	; 1
    8e28:	62 df       	rcall	.-316    	; 0x8cee <__fp_powser>
    8e2a:	8b 01       	movw	r16, r22
    8e2c:	be 01       	movw	r22, r28
    8e2e:	ec 01       	movw	r28, r24
    8e30:	fb 2e       	mov	r15, r27
    8e32:	6f 57       	subi	r22, 0x7F	; 127
    8e34:	71 09       	sbc	r23, r1
    8e36:	75 95       	asr	r23
    8e38:	77 1f       	adc	r23, r23
    8e3a:	88 0b       	sbc	r24, r24
    8e3c:	99 0b       	sbc	r25, r25
    8e3e:	e8 dc       	rcall	.-1584   	; 0x8810 <__floatsisf>
    8e40:	28 e1       	ldi	r18, 0x18	; 24
    8e42:	32 e7       	ldi	r19, 0x72	; 114
    8e44:	41 e3       	ldi	r20, 0x31	; 49
    8e46:	5f e3       	ldi	r21, 0x3F	; 63
    8e48:	2f de       	rcall	.-930    	; 0x8aa8 <__mulsf3x>
    8e4a:	af 2d       	mov	r26, r15
    8e4c:	98 01       	movw	r18, r16
    8e4e:	ae 01       	movw	r20, r28
    8e50:	ff 90       	pop	r15
    8e52:	0f 91       	pop	r16
    8e54:	1f 91       	pop	r17
    8e56:	cf 91       	pop	r28
    8e58:	df 91       	pop	r29
    8e5a:	e5 db       	rcall	.-2102   	; 0x8626 <__addsf3x>
    8e5c:	b3 cd       	rjmp	.-1178   	; 0x89c4 <__fp_round>

00008e5e <modf>:
    8e5e:	fa 01       	movw	r30, r20
    8e60:	dc 01       	movw	r26, r24
    8e62:	aa 0f       	add	r26, r26
    8e64:	bb 1f       	adc	r27, r27
    8e66:	9b 01       	movw	r18, r22
    8e68:	ac 01       	movw	r20, r24
    8e6a:	bf 57       	subi	r27, 0x7F	; 127
    8e6c:	28 f4       	brcc	.+10     	; 0x8e78 <modf+0x1a>
    8e6e:	22 27       	eor	r18, r18
    8e70:	33 27       	eor	r19, r19
    8e72:	44 27       	eor	r20, r20
    8e74:	50 78       	andi	r21, 0x80	; 128
    8e76:	1f c0       	rjmp	.+62     	; 0x8eb6 <modf+0x58>
    8e78:	b7 51       	subi	r27, 0x17	; 23
    8e7a:	88 f4       	brcc	.+34     	; 0x8e9e <modf+0x40>
    8e7c:	ab 2f       	mov	r26, r27
    8e7e:	00 24       	eor	r0, r0
    8e80:	46 95       	lsr	r20
    8e82:	37 95       	ror	r19
    8e84:	27 95       	ror	r18
    8e86:	01 1c       	adc	r0, r1
    8e88:	a3 95       	inc	r26
    8e8a:	d2 f3       	brmi	.-12     	; 0x8e80 <modf+0x22>
    8e8c:	00 20       	and	r0, r0
    8e8e:	69 f0       	breq	.+26     	; 0x8eaa <modf+0x4c>
    8e90:	22 0f       	add	r18, r18
    8e92:	33 1f       	adc	r19, r19
    8e94:	44 1f       	adc	r20, r20
    8e96:	b3 95       	inc	r27
    8e98:	da f3       	brmi	.-10     	; 0x8e90 <modf+0x32>
    8e9a:	0d d0       	rcall	.+26     	; 0x8eb6 <modf+0x58>
    8e9c:	b2 cb       	rjmp	.-2204   	; 0x8602 <__subsf3>
    8e9e:	61 30       	cpi	r22, 0x01	; 1
    8ea0:	71 05       	cpc	r23, r1
    8ea2:	a0 e8       	ldi	r26, 0x80	; 128
    8ea4:	8a 07       	cpc	r24, r26
    8ea6:	b9 46       	sbci	r27, 0x69	; 105
    8ea8:	30 f4       	brcc	.+12     	; 0x8eb6 <modf+0x58>
    8eaa:	9b 01       	movw	r18, r22
    8eac:	ac 01       	movw	r20, r24
    8eae:	66 27       	eor	r22, r22
    8eb0:	77 27       	eor	r23, r23
    8eb2:	88 27       	eor	r24, r24
    8eb4:	90 78       	andi	r25, 0x80	; 128
    8eb6:	30 96       	adiw	r30, 0x00	; 0
    8eb8:	21 f0       	breq	.+8      	; 0x8ec2 <modf+0x64>
    8eba:	20 83       	st	Z, r18
    8ebc:	31 83       	std	Z+1, r19	; 0x01
    8ebe:	42 83       	std	Z+2, r20	; 0x02
    8ec0:	53 83       	std	Z+3, r21	; 0x03
    8ec2:	08 95       	ret

00008ec4 <__divmodhi4>:
    8ec4:	97 fb       	bst	r25, 7
    8ec6:	07 2e       	mov	r0, r23
    8ec8:	16 f4       	brtc	.+4      	; 0x8ece <__divmodhi4+0xa>
    8eca:	00 94       	com	r0
    8ecc:	07 d0       	rcall	.+14     	; 0x8edc <__divmodhi4_neg1>
    8ece:	77 fd       	sbrc	r23, 7
    8ed0:	09 d0       	rcall	.+18     	; 0x8ee4 <__divmodhi4_neg2>
    8ed2:	0e 94 98 47 	call	0x8f30	; 0x8f30 <__udivmodhi4>
    8ed6:	07 fc       	sbrc	r0, 7
    8ed8:	05 d0       	rcall	.+10     	; 0x8ee4 <__divmodhi4_neg2>
    8eda:	3e f4       	brtc	.+14     	; 0x8eea <__divmodhi4_exit>

00008edc <__divmodhi4_neg1>:
    8edc:	90 95       	com	r25
    8ede:	81 95       	neg	r24
    8ee0:	9f 4f       	sbci	r25, 0xFF	; 255
    8ee2:	08 95       	ret

00008ee4 <__divmodhi4_neg2>:
    8ee4:	70 95       	com	r23
    8ee6:	61 95       	neg	r22
    8ee8:	7f 4f       	sbci	r23, 0xFF	; 255

00008eea <__divmodhi4_exit>:
    8eea:	08 95       	ret

00008eec <__udivmodsi4>:
    8eec:	a1 e2       	ldi	r26, 0x21	; 33
    8eee:	1a 2e       	mov	r1, r26
    8ef0:	aa 1b       	sub	r26, r26
    8ef2:	bb 1b       	sub	r27, r27
    8ef4:	fd 01       	movw	r30, r26
    8ef6:	0d c0       	rjmp	.+26     	; 0x8f12 <__udivmodsi4_ep>

00008ef8 <__udivmodsi4_loop>:
    8ef8:	aa 1f       	adc	r26, r26
    8efa:	bb 1f       	adc	r27, r27
    8efc:	ee 1f       	adc	r30, r30
    8efe:	ff 1f       	adc	r31, r31
    8f00:	a2 17       	cp	r26, r18
    8f02:	b3 07       	cpc	r27, r19
    8f04:	e4 07       	cpc	r30, r20
    8f06:	f5 07       	cpc	r31, r21
    8f08:	20 f0       	brcs	.+8      	; 0x8f12 <__udivmodsi4_ep>
    8f0a:	a2 1b       	sub	r26, r18
    8f0c:	b3 0b       	sbc	r27, r19
    8f0e:	e4 0b       	sbc	r30, r20
    8f10:	f5 0b       	sbc	r31, r21

00008f12 <__udivmodsi4_ep>:
    8f12:	66 1f       	adc	r22, r22
    8f14:	77 1f       	adc	r23, r23
    8f16:	88 1f       	adc	r24, r24
    8f18:	99 1f       	adc	r25, r25
    8f1a:	1a 94       	dec	r1
    8f1c:	69 f7       	brne	.-38     	; 0x8ef8 <__udivmodsi4_loop>
    8f1e:	60 95       	com	r22
    8f20:	70 95       	com	r23
    8f22:	80 95       	com	r24
    8f24:	90 95       	com	r25
    8f26:	9b 01       	movw	r18, r22
    8f28:	ac 01       	movw	r20, r24
    8f2a:	bd 01       	movw	r22, r26
    8f2c:	cf 01       	movw	r24, r30
    8f2e:	08 95       	ret

00008f30 <__udivmodhi4>:
    8f30:	aa 1b       	sub	r26, r26
    8f32:	bb 1b       	sub	r27, r27
    8f34:	51 e1       	ldi	r21, 0x11	; 17
    8f36:	07 c0       	rjmp	.+14     	; 0x8f46 <__udivmodhi4_ep>

00008f38 <__udivmodhi4_loop>:
    8f38:	aa 1f       	adc	r26, r26
    8f3a:	bb 1f       	adc	r27, r27
    8f3c:	a6 17       	cp	r26, r22
    8f3e:	b7 07       	cpc	r27, r23
    8f40:	10 f0       	brcs	.+4      	; 0x8f46 <__udivmodhi4_ep>
    8f42:	a6 1b       	sub	r26, r22
    8f44:	b7 0b       	sbc	r27, r23

00008f46 <__udivmodhi4_ep>:
    8f46:	88 1f       	adc	r24, r24
    8f48:	99 1f       	adc	r25, r25
    8f4a:	5a 95       	dec	r21
    8f4c:	a9 f7       	brne	.-22     	; 0x8f38 <__udivmodhi4_loop>
    8f4e:	80 95       	com	r24
    8f50:	90 95       	com	r25
    8f52:	bc 01       	movw	r22, r24
    8f54:	cd 01       	movw	r24, r26
    8f56:	08 95       	ret

00008f58 <malloc>:
    8f58:	0f 93       	push	r16
    8f5a:	1f 93       	push	r17
    8f5c:	cf 93       	push	r28
    8f5e:	df 93       	push	r29
    8f60:	82 30       	cpi	r24, 0x02	; 2
    8f62:	91 05       	cpc	r25, r1
    8f64:	10 f4       	brcc	.+4      	; 0x8f6a <malloc+0x12>
    8f66:	82 e0       	ldi	r24, 0x02	; 2
    8f68:	90 e0       	ldi	r25, 0x00	; 0
    8f6a:	e0 91 a8 02 	lds	r30, 0x02A8
    8f6e:	f0 91 a9 02 	lds	r31, 0x02A9
    8f72:	20 e0       	ldi	r18, 0x00	; 0
    8f74:	30 e0       	ldi	r19, 0x00	; 0
    8f76:	c0 e0       	ldi	r28, 0x00	; 0
    8f78:	d0 e0       	ldi	r29, 0x00	; 0
    8f7a:	23 c0       	rjmp	.+70     	; 0x8fc2 <malloc+0x6a>
    8f7c:	40 81       	ld	r20, Z
    8f7e:	51 81       	ldd	r21, Z+1	; 0x01
    8f80:	48 17       	cp	r20, r24
    8f82:	59 07       	cpc	r21, r25
    8f84:	a8 f0       	brcs	.+42     	; 0x8fb0 <malloc+0x58>
    8f86:	48 17       	cp	r20, r24
    8f88:	59 07       	cpc	r21, r25
    8f8a:	61 f4       	brne	.+24     	; 0x8fa4 <malloc+0x4c>
    8f8c:	82 81       	ldd	r24, Z+2	; 0x02
    8f8e:	93 81       	ldd	r25, Z+3	; 0x03
    8f90:	20 97       	sbiw	r28, 0x00	; 0
    8f92:	19 f0       	breq	.+6      	; 0x8f9a <malloc+0x42>
    8f94:	9b 83       	std	Y+3, r25	; 0x03
    8f96:	8a 83       	std	Y+2, r24	; 0x02
    8f98:	2e c0       	rjmp	.+92     	; 0x8ff6 <malloc+0x9e>
    8f9a:	90 93 a9 02 	sts	0x02A9, r25
    8f9e:	80 93 a8 02 	sts	0x02A8, r24
    8fa2:	29 c0       	rjmp	.+82     	; 0x8ff6 <malloc+0x9e>
    8fa4:	21 15       	cp	r18, r1
    8fa6:	31 05       	cpc	r19, r1
    8fa8:	29 f0       	breq	.+10     	; 0x8fb4 <malloc+0x5c>
    8faa:	42 17       	cp	r20, r18
    8fac:	53 07       	cpc	r21, r19
    8fae:	10 f0       	brcs	.+4      	; 0x8fb4 <malloc+0x5c>
    8fb0:	a9 01       	movw	r20, r18
    8fb2:	02 c0       	rjmp	.+4      	; 0x8fb8 <malloc+0x60>
    8fb4:	be 01       	movw	r22, r28
    8fb6:	df 01       	movw	r26, r30
    8fb8:	02 81       	ldd	r16, Z+2	; 0x02
    8fba:	13 81       	ldd	r17, Z+3	; 0x03
    8fbc:	ef 01       	movw	r28, r30
    8fbe:	9a 01       	movw	r18, r20
    8fc0:	f8 01       	movw	r30, r16
    8fc2:	30 97       	sbiw	r30, 0x00	; 0
    8fc4:	d9 f6       	brne	.-74     	; 0x8f7c <malloc+0x24>
    8fc6:	21 15       	cp	r18, r1
    8fc8:	31 05       	cpc	r19, r1
    8fca:	09 f1       	breq	.+66     	; 0x900e <malloc+0xb6>
    8fcc:	28 1b       	sub	r18, r24
    8fce:	39 0b       	sbc	r19, r25
    8fd0:	24 30       	cpi	r18, 0x04	; 4
    8fd2:	31 05       	cpc	r19, r1
    8fd4:	90 f4       	brcc	.+36     	; 0x8ffa <malloc+0xa2>
    8fd6:	12 96       	adiw	r26, 0x02	; 2
    8fd8:	8d 91       	ld	r24, X+
    8fda:	9c 91       	ld	r25, X
    8fdc:	13 97       	sbiw	r26, 0x03	; 3
    8fde:	61 15       	cp	r22, r1
    8fe0:	71 05       	cpc	r23, r1
    8fe2:	21 f0       	breq	.+8      	; 0x8fec <malloc+0x94>
    8fe4:	fb 01       	movw	r30, r22
    8fe6:	93 83       	std	Z+3, r25	; 0x03
    8fe8:	82 83       	std	Z+2, r24	; 0x02
    8fea:	04 c0       	rjmp	.+8      	; 0x8ff4 <malloc+0x9c>
    8fec:	90 93 a9 02 	sts	0x02A9, r25
    8ff0:	80 93 a8 02 	sts	0x02A8, r24
    8ff4:	fd 01       	movw	r30, r26
    8ff6:	32 96       	adiw	r30, 0x02	; 2
    8ff8:	44 c0       	rjmp	.+136    	; 0x9082 <malloc+0x12a>
    8ffa:	fd 01       	movw	r30, r26
    8ffc:	e2 0f       	add	r30, r18
    8ffe:	f3 1f       	adc	r31, r19
    9000:	81 93       	st	Z+, r24
    9002:	91 93       	st	Z+, r25
    9004:	22 50       	subi	r18, 0x02	; 2
    9006:	31 09       	sbc	r19, r1
    9008:	2d 93       	st	X+, r18
    900a:	3c 93       	st	X, r19
    900c:	3a c0       	rjmp	.+116    	; 0x9082 <malloc+0x12a>
    900e:	20 91 a6 02 	lds	r18, 0x02A6
    9012:	30 91 a7 02 	lds	r19, 0x02A7
    9016:	23 2b       	or	r18, r19
    9018:	41 f4       	brne	.+16     	; 0x902a <malloc+0xd2>
    901a:	20 91 02 02 	lds	r18, 0x0202
    901e:	30 91 03 02 	lds	r19, 0x0203
    9022:	30 93 a7 02 	sts	0x02A7, r19
    9026:	20 93 a6 02 	sts	0x02A6, r18
    902a:	20 91 00 02 	lds	r18, 0x0200
    902e:	30 91 01 02 	lds	r19, 0x0201
    9032:	21 15       	cp	r18, r1
    9034:	31 05       	cpc	r19, r1
    9036:	41 f4       	brne	.+16     	; 0x9048 <malloc+0xf0>
    9038:	2d b7       	in	r18, 0x3d	; 61
    903a:	3e b7       	in	r19, 0x3e	; 62
    903c:	40 91 04 02 	lds	r20, 0x0204
    9040:	50 91 05 02 	lds	r21, 0x0205
    9044:	24 1b       	sub	r18, r20
    9046:	35 0b       	sbc	r19, r21
    9048:	e0 91 a6 02 	lds	r30, 0x02A6
    904c:	f0 91 a7 02 	lds	r31, 0x02A7
    9050:	e2 17       	cp	r30, r18
    9052:	f3 07       	cpc	r31, r19
    9054:	a0 f4       	brcc	.+40     	; 0x907e <malloc+0x126>
    9056:	2e 1b       	sub	r18, r30
    9058:	3f 0b       	sbc	r19, r31
    905a:	28 17       	cp	r18, r24
    905c:	39 07       	cpc	r19, r25
    905e:	78 f0       	brcs	.+30     	; 0x907e <malloc+0x126>
    9060:	ac 01       	movw	r20, r24
    9062:	4e 5f       	subi	r20, 0xFE	; 254
    9064:	5f 4f       	sbci	r21, 0xFF	; 255
    9066:	24 17       	cp	r18, r20
    9068:	35 07       	cpc	r19, r21
    906a:	48 f0       	brcs	.+18     	; 0x907e <malloc+0x126>
    906c:	4e 0f       	add	r20, r30
    906e:	5f 1f       	adc	r21, r31
    9070:	50 93 a7 02 	sts	0x02A7, r21
    9074:	40 93 a6 02 	sts	0x02A6, r20
    9078:	81 93       	st	Z+, r24
    907a:	91 93       	st	Z+, r25
    907c:	02 c0       	rjmp	.+4      	; 0x9082 <malloc+0x12a>
    907e:	e0 e0       	ldi	r30, 0x00	; 0
    9080:	f0 e0       	ldi	r31, 0x00	; 0
    9082:	cf 01       	movw	r24, r30
    9084:	df 91       	pop	r29
    9086:	cf 91       	pop	r28
    9088:	1f 91       	pop	r17
    908a:	0f 91       	pop	r16
    908c:	08 95       	ret

0000908e <free>:
    908e:	ef 92       	push	r14
    9090:	ff 92       	push	r15
    9092:	0f 93       	push	r16
    9094:	1f 93       	push	r17
    9096:	cf 93       	push	r28
    9098:	df 93       	push	r29
    909a:	00 97       	sbiw	r24, 0x00	; 0
    909c:	09 f4       	brne	.+2      	; 0x90a0 <free+0x12>
    909e:	8f c0       	rjmp	.+286    	; 0x91be <free+0x130>
    90a0:	dc 01       	movw	r26, r24
    90a2:	12 97       	sbiw	r26, 0x02	; 2
    90a4:	13 96       	adiw	r26, 0x03	; 3
    90a6:	1c 92       	st	X, r1
    90a8:	1e 92       	st	-X, r1
    90aa:	12 97       	sbiw	r26, 0x02	; 2
    90ac:	e0 90 a8 02 	lds	r14, 0x02A8
    90b0:	f0 90 a9 02 	lds	r15, 0x02A9
    90b4:	e1 14       	cp	r14, r1
    90b6:	f1 04       	cpc	r15, r1
    90b8:	89 f4       	brne	.+34     	; 0x90dc <free+0x4e>
    90ba:	2d 91       	ld	r18, X+
    90bc:	3c 91       	ld	r19, X
    90be:	11 97       	sbiw	r26, 0x01	; 1
    90c0:	28 0f       	add	r18, r24
    90c2:	39 1f       	adc	r19, r25
    90c4:	80 91 a6 02 	lds	r24, 0x02A6
    90c8:	90 91 a7 02 	lds	r25, 0x02A7
    90cc:	82 17       	cp	r24, r18
    90ce:	93 07       	cpc	r25, r19
    90d0:	89 f5       	brne	.+98     	; 0x9134 <free+0xa6>
    90d2:	b0 93 a7 02 	sts	0x02A7, r27
    90d6:	a0 93 a6 02 	sts	0x02A6, r26
    90da:	71 c0       	rjmp	.+226    	; 0x91be <free+0x130>
    90dc:	e7 01       	movw	r28, r14
    90de:	20 e0       	ldi	r18, 0x00	; 0
    90e0:	30 e0       	ldi	r19, 0x00	; 0
    90e2:	01 c0       	rjmp	.+2      	; 0x90e6 <free+0x58>
    90e4:	ea 01       	movw	r28, r20
    90e6:	ca 17       	cp	r28, r26
    90e8:	db 07       	cpc	r29, r27
    90ea:	38 f4       	brcc	.+14     	; 0x90fa <free+0x6c>
    90ec:	4a 81       	ldd	r20, Y+2	; 0x02
    90ee:	5b 81       	ldd	r21, Y+3	; 0x03
    90f0:	9e 01       	movw	r18, r28
    90f2:	41 15       	cp	r20, r1
    90f4:	51 05       	cpc	r21, r1
    90f6:	b1 f7       	brne	.-20     	; 0x90e4 <free+0x56>
    90f8:	22 c0       	rjmp	.+68     	; 0x913e <free+0xb0>
    90fa:	bc 01       	movw	r22, r24
    90fc:	62 50       	subi	r22, 0x02	; 2
    90fe:	71 09       	sbc	r23, r1
    9100:	fb 01       	movw	r30, r22
    9102:	d3 83       	std	Z+3, r29	; 0x03
    9104:	c2 83       	std	Z+2, r28	; 0x02
    9106:	00 81       	ld	r16, Z
    9108:	11 81       	ldd	r17, Z+1	; 0x01
    910a:	ac 01       	movw	r20, r24
    910c:	40 0f       	add	r20, r16
    910e:	51 1f       	adc	r21, r17
    9110:	4c 17       	cp	r20, r28
    9112:	5d 07       	cpc	r21, r29
    9114:	61 f4       	brne	.+24     	; 0x912e <free+0xa0>
    9116:	48 81       	ld	r20, Y
    9118:	59 81       	ldd	r21, Y+1	; 0x01
    911a:	40 0f       	add	r20, r16
    911c:	51 1f       	adc	r21, r17
    911e:	4e 5f       	subi	r20, 0xFE	; 254
    9120:	5f 4f       	sbci	r21, 0xFF	; 255
    9122:	51 83       	std	Z+1, r21	; 0x01
    9124:	40 83       	st	Z, r20
    9126:	4a 81       	ldd	r20, Y+2	; 0x02
    9128:	5b 81       	ldd	r21, Y+3	; 0x03
    912a:	53 83       	std	Z+3, r21	; 0x03
    912c:	42 83       	std	Z+2, r20	; 0x02
    912e:	21 15       	cp	r18, r1
    9130:	31 05       	cpc	r19, r1
    9132:	29 f4       	brne	.+10     	; 0x913e <free+0xb0>
    9134:	b0 93 a9 02 	sts	0x02A9, r27
    9138:	a0 93 a8 02 	sts	0x02A8, r26
    913c:	40 c0       	rjmp	.+128    	; 0x91be <free+0x130>
    913e:	f9 01       	movw	r30, r18
    9140:	b3 83       	std	Z+3, r27	; 0x03
    9142:	a2 83       	std	Z+2, r26	; 0x02
    9144:	e9 01       	movw	r28, r18
    9146:	69 91       	ld	r22, Y+
    9148:	79 91       	ld	r23, Y+
    914a:	c6 0f       	add	r28, r22
    914c:	d7 1f       	adc	r29, r23
    914e:	ac 17       	cp	r26, r28
    9150:	bd 07       	cpc	r27, r29
    9152:	79 f4       	brne	.+30     	; 0x9172 <free+0xe4>
    9154:	dc 01       	movw	r26, r24
    9156:	5e 91       	ld	r21, -X
    9158:	4e 91       	ld	r20, -X
    915a:	46 0f       	add	r20, r22
    915c:	57 1f       	adc	r21, r23
    915e:	4e 5f       	subi	r20, 0xFE	; 254
    9160:	5f 4f       	sbci	r21, 0xFF	; 255
    9162:	51 83       	std	Z+1, r21	; 0x01
    9164:	40 83       	st	Z, r20
    9166:	12 96       	adiw	r26, 0x02	; 2
    9168:	8d 91       	ld	r24, X+
    916a:	9c 91       	ld	r25, X
    916c:	13 97       	sbiw	r26, 0x03	; 3
    916e:	93 83       	std	Z+3, r25	; 0x03
    9170:	82 83       	std	Z+2, r24	; 0x02
    9172:	a0 e0       	ldi	r26, 0x00	; 0
    9174:	b0 e0       	ldi	r27, 0x00	; 0
    9176:	02 c0       	rjmp	.+4      	; 0x917c <free+0xee>
    9178:	d7 01       	movw	r26, r14
    917a:	7c 01       	movw	r14, r24
    917c:	f7 01       	movw	r30, r14
    917e:	82 81       	ldd	r24, Z+2	; 0x02
    9180:	93 81       	ldd	r25, Z+3	; 0x03
    9182:	00 97       	sbiw	r24, 0x00	; 0
    9184:	c9 f7       	brne	.-14     	; 0x9178 <free+0xea>
    9186:	c7 01       	movw	r24, r14
    9188:	02 96       	adiw	r24, 0x02	; 2
    918a:	20 81       	ld	r18, Z
    918c:	31 81       	ldd	r19, Z+1	; 0x01
    918e:	82 0f       	add	r24, r18
    9190:	93 1f       	adc	r25, r19
    9192:	20 91 a6 02 	lds	r18, 0x02A6
    9196:	30 91 a7 02 	lds	r19, 0x02A7
    919a:	28 17       	cp	r18, r24
    919c:	39 07       	cpc	r19, r25
    919e:	79 f4       	brne	.+30     	; 0x91be <free+0x130>
    91a0:	10 97       	sbiw	r26, 0x00	; 0
    91a2:	29 f4       	brne	.+10     	; 0x91ae <free+0x120>
    91a4:	10 92 a9 02 	sts	0x02A9, r1
    91a8:	10 92 a8 02 	sts	0x02A8, r1
    91ac:	04 c0       	rjmp	.+8      	; 0x91b6 <free+0x128>
    91ae:	13 96       	adiw	r26, 0x03	; 3
    91b0:	1c 92       	st	X, r1
    91b2:	1e 92       	st	-X, r1
    91b4:	12 97       	sbiw	r26, 0x02	; 2
    91b6:	f0 92 a7 02 	sts	0x02A7, r15
    91ba:	e0 92 a6 02 	sts	0x02A6, r14
    91be:	df 91       	pop	r29
    91c0:	cf 91       	pop	r28
    91c2:	1f 91       	pop	r17
    91c4:	0f 91       	pop	r16
    91c6:	ff 90       	pop	r15
    91c8:	ef 90       	pop	r14
    91ca:	08 95       	ret

000091cc <memcpy>:
    91cc:	fb 01       	movw	r30, r22
    91ce:	dc 01       	movw	r26, r24
    91d0:	02 c0       	rjmp	.+4      	; 0x91d6 <memcpy+0xa>
    91d2:	01 90       	ld	r0, Z+
    91d4:	0d 92       	st	X+, r0
    91d6:	41 50       	subi	r20, 0x01	; 1
    91d8:	50 40       	sbci	r21, 0x00	; 0
    91da:	d8 f7       	brcc	.-10     	; 0x91d2 <memcpy+0x6>
    91dc:	08 95       	ret

000091de <_exit>:
    91de:	f8 94       	cli

000091e0 <__stop_program>:
    91e0:	ff cf       	rjmp	.-2      	; 0x91e0 <__stop_program>
