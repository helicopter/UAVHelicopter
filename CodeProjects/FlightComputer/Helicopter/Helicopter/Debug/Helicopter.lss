
Helicopter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a4  00800200  00008806  0000889a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00008806  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008002a4  008002a4  0000893e  2**0
                  ALLOC
  3 .stab         000043e0  00000000  00000000  00008940  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000011bd  00000000  00000000  0000cd20  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000dedd  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000cd0  00000000  00000000  0000df0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00013d66  00000000  00000000  0000ebdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003240  00000000  00000000  00022942  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000307f  00000000  00000000  00025b82  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00003150  00000000  00000000  00028c04  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00006368  00000000  00000000  0002bd54  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000704a  00000000  00000000  000320bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000b48  00000000  00000000  00039106  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
	//TODO should this be delete[]?
	delete this->records;
}

void Buffer::enqueue(Record *record)
{
       0:	0c 94 1a 01 	jmp	0x234	; 0x234 <__ctors_end>
       4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
       8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
       c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      10:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
	if (record != NULL)
      14:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      18:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      1c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
	{
		//Copy the record
		//TODO danger not deep copy. 
		Record *newRecord = record->Copy();
      20:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      24:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      28:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
		
		//Add the record to the linked list.
		if (this->records == NULL)
      2c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      30:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      34:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
		{
			records = newRecord;
      38:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      3c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      40:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      44:	0c 94 8c 2f 	jmp	0x5f18	; 0x5f18 <__vector_17>
			firstRecord = newRecord;
      48:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      4c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      50:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
			lastRecord = newRecord;
      54:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      58:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      5c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      60:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
		}else
		{
			lastRecord->setNextRecord(newRecord);
      64:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      68:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      6c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      70:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      74:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
			newRecord->setPreviousRecord(lastRecord);
      78:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      7c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      80:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      84:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      88:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
			lastRecord = newRecord;
      8c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      90:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      94:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      98:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
		}
		
		bufferSize++;
      9c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      a0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      a4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      a8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      ac:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      b0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
	}
}
      b4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      b8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      bc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      c0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      c4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 * This method uses Euler angle rotations.
 */
double MagnetometerSensor::getFRDY()
{
	return (rawMagX * (cos(theta)*sin(sai))) + (rawMagY * (sin(phi)*sin(theta)*sin(sai) + cos(phi)*cos(sai))) + (rawMagZ * (cos(phi)*sin(theta)*sin(sai) - sin(phi)*cos(sai)));
}
      c8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      cc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      d0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      d4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      d8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      dc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      e0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      e4:	05 a8       	ldd	r0, Z+53	; 0x35
      e6:	4c cd       	rjmp	.-1384   	; 0xfffffb80 <__eeprom_end+0xff7efb80>
      e8:	b2 d4       	rcall	.+2404   	; 0xa4e <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv+0x2e>
      ea:	4e b9       	out	0x0e, r20	; 14
      ec:	38 36       	cpi	r19, 0x68	; 104
      ee:	a9 02       	muls	r26, r25
      f0:	0c 50       	subi	r16, 0x0C	; 12
      f2:	b9 91       	ld	r27, Y+
      f4:	86 88       	ldd	r8, Z+22	; 0x16
      f6:	08 3c       	cpi	r16, 0xC8	; 200
      f8:	a6 aa       	std	Z+54, r10	; 0x36
      fa:	aa 2a       	or	r10, r26
      fc:	be 00       	.word	0x00be	; ????
      fe:	00 00       	nop
     100:	80 3f       	cpi	r24, 0xF0	; 240
     102:	07 63       	ori	r16, 0x37	; 55
     104:	42 36       	cpi	r20, 0x62	; 98
     106:	b7 9b       	sbis	0x16, 7	; 22
     108:	d8 a7       	std	Y+40, r29	; 0x28
     10a:	1a 39       	cpi	r17, 0x9A	; 154
     10c:	68 56       	subi	r22, 0x68	; 104
     10e:	18 ae       	std	Y+56, r1	; 0x38
     110:	ba ab       	std	Y+50, r27	; 0x32
     112:	55 8c       	ldd	r5, Z+29	; 0x1d
     114:	1d 3c       	cpi	r17, 0xCD	; 205
     116:	b7 cc       	rjmp	.-1682   	; 0xfffffa86 <__eeprom_end+0xff7efa86>
     118:	57 63       	ori	r21, 0x37	; 55
     11a:	bd 6d       	ori	r27, 0xDD	; 221
     11c:	ed fd       	.word	0xfded	; ????
     11e:	75 3e       	cpi	r23, 0xE5	; 229
     120:	f6 17       	cp	r31, r22
     122:	72 31       	cpi	r23, 0x12	; 18
     124:	bf 00       	.word	0x00bf	; ????
     126:	00 00       	nop
     128:	80 3f       	cpi	r24, 0xF0	; 240
     12a:	08 00       	.word	0x0008	; ????
     12c:	00 00       	nop
     12e:	be 92       	st	-X, r11
     130:	24 49       	sbci	r18, 0x94	; 148
     132:	12 3e       	cpi	r17, 0xE2	; 226
     134:	ab aa       	std	Y+51, r10	; 0x33
     136:	aa 2a       	or	r10, r26
     138:	be cd       	rjmp	.-1156   	; 0xfffffcb6 <__eeprom_end+0xff7efcb6>
     13a:	cc cc       	rjmp	.-1640   	; 0xfffffad4 <__eeprom_end+0xff7efad4>
     13c:	4c 3e       	cpi	r20, 0xEC	; 236
     13e:	00 00       	nop
     140:	00 80       	ld	r0, Z
     142:	be ab       	std	Y+54, r27	; 0x36
     144:	aa aa       	std	Y+50, r10	; 0x32
     146:	aa 3e       	cpi	r26, 0xEA	; 234
     148:	00 00       	nop
     14a:	00 00       	nop
     14c:	bf 00       	.word	0x00bf	; ????
     14e:	00 00       	nop
     150:	80 3f       	cpi	r24, 0xF0	; 240
     152:	00 00       	nop
     154:	00 00       	nop
     156:	00 08       	sbc	r0, r0
     158:	41 78       	andi	r20, 0x81	; 129
     15a:	d3 bb       	out	0x13, r29	; 19
     15c:	43 87       	std	Z+11, r20	; 0x0b
     15e:	d1 13       	cpse	r29, r17
     160:	3d 19       	sub	r19, r13
     162:	0e 3c       	cpi	r16, 0xCE	; 206
     164:	c3 bd       	out	0x23, r28	; 35
     166:	42 82       	std	Z+2, r4	; 0x02
     168:	ad 2b       	or	r26, r29
     16a:	3e 68       	ori	r19, 0x8E	; 142
     16c:	ec 82       	std	Y+4, r14	; 0x04
     16e:	76 be       	out	0x36, r7	; 54
     170:	d9 8f       	std	Y+25, r29	; 0x19
     172:	e1 a9       	ldd	r30, Z+49	; 0x31
     174:	3e 4c       	sbci	r19, 0xCE	; 206
     176:	80 ef       	ldi	r24, 0xF0	; 240
     178:	ff be       	out	0x3f, r15	; 63
     17a:	01 c4       	rjmp	.+2050   	; 0x97e <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf+0x1a>
     17c:	ff 7f       	andi	r31, 0xFF	; 255
     17e:	3f 00       	.word	0x003f	; ????
     180:	00 00       	nop
	...

00000184 <__trampolines_start>:
     184:	0c 94 c6 0e 	jmp	0x1d8c	; 0x1d8c <_ZN10helicopter7drivers12SerialDriverD1Ev>
     188:	0c 94 a7 1e 	jmp	0x3d4e	; 0x3d4e <_ZN10helicopter8messages11SyncMessageD0Ev>
     18c:	0c 94 6d 10 	jmp	0x20da	; 0x20da <_ZN10helicopter7drivers11ServoDriverD1Ev>
     190:	0c 94 e4 0e 	jmp	0x1dc8	; 0x1dc8 <_ZN10helicopter7drivers12SerialDriverD0Ev>
     194:	0c 94 dd 36 	jmp	0x6dba	; 0x6dba <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>
     198:	0c 94 08 10 	jmp	0x2010	; 0x2010 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh>
     19c:	0c 94 de 1d 	jmp	0x3bbc	; 0x3bbc <_ZN10helicopter8messages7MessageD1Ev>
     1a0:	0c 94 92 24 	jmp	0x4924	; 0x4924 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>
     1a4:	0c 94 b4 24 	jmp	0x4968	; 0x4968 <_ZN10helicopter8messages22SystemTelemetryMessageD0Ev>
     1a8:	0c 94 4f 37 	jmp	0x6e9e	; 0x6e9e <_ZN10helicopter5tasks4Task7runTaskEv>
     1ac:	0c 94 bc 1e 	jmp	0x3d78	; 0x3d78 <_ZN10helicopter8messages11SyncMessage8getBytesEv>
     1b0:	0c 94 fe 37 	jmp	0x6ffc	; 0x6ffc <_ZN10helicopter5tasks21TransmitTelemetryTaskD0Ev>
     1b4:	0c 94 dc 37 	jmp	0x6fb8	; 0x6fb8 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>
     1b8:	0c 94 af 0f 	jmp	0x1f5e	; 0x1f5e <_ZN10helicopter7drivers12SerialDriver12transmitByteEh>
     1bc:	0c 94 4c 11 	jmp	0x2298	; 0x2298 <_ZN10helicopter5tasks4TaskD1Ev>
     1c0:	0c 94 26 1b 	jmp	0x364c	; 0x364c <_ZN10helicopter5tasks12FlashLEDTaskD0Ev>
     1c4:	0c 94 40 33 	jmp	0x6680	; 0x6680 <_ZN10helicopter5tasks20SensorProcessingTaskD0Ev>
     1c8:	0c 94 1e 33 	jmp	0x663c	; 0x663c <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>
     1cc:	0c 94 fb 30 	jmp	0x61f6	; 0x61f6 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>
     1d0:	0c 94 5c 30 	jmp	0x60b8	; 0x60b8 <_ZN10helicopter5tasks16PIDInnerLoopTask11runTaskImplEv>
     1d4:	0c 94 1d 30 	jmp	0x603a	; 0x603a <_ZN10helicopter5tasks4Task4initEv>
     1d8:	0c 94 70 30 	jmp	0x60e0	; 0x60e0 <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>
     1dc:	0c 94 ca 34 	jmp	0x6994	; 0x6994 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv>
     1e0:	0c 94 23 1e 	jmp	0x3c46	; 0x3c46 <_ZN10helicopter8messages7Message8getBytesEv>
     1e4:	0c 94 1d 31 	jmp	0x623a	; 0x623a <_ZN10helicopter5tasks16PIDOuterLoopTaskD0Ev>
     1e8:	0c 94 fc 1d 	jmp	0x3bf8	; 0x3bf8 <_ZN10helicopter8messages7MessageD0Ev>
     1ec:	0c 94 b5 11 	jmp	0x236a	; 0x236a <_ZN10helicopter5tasks12FlashLEDTask4initEv>
     1f0:	0c 94 8b 10 	jmp	0x2116	; 0x2116 <_ZN10helicopter7drivers11ServoDriverD0Ev>
     1f4:	0c 94 6a 11 	jmp	0x22d4	; 0x22d4 <_ZN10helicopter5tasks4TaskD0Ev>
     1f8:	0c 94 04 1b 	jmp	0x3608	; 0x3608 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>
     1fc:	0c 94 c9 24 	jmp	0x4992	; 0x4992 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv>
     200:	0c 94 92 30 	jmp	0x6124	; 0x6124 <_ZN10helicopter5tasks16PIDInnerLoopTaskD0Ev>
     204:	0c 94 ff 36 	jmp	0x6dfe	; 0x6dfe <_ZN10helicopter5tasks16SimTelemetryTaskD0Ev>
     208:	0c 94 0d 11 	jmp	0x221a	; 0x221a <_ZN10helicopter7drivers11ServoDriver30controlTailRotorCollectiveImplEd>
     20c:	0c 94 24 32 	jmp	0x6448	; 0x6448 <_ZN10helicopter5tasks20SensorProcessingTask11runTaskImplEv>
     210:	0c 94 f9 0e 	jmp	0x1df2	; 0x1df2 <_ZN10helicopter7drivers12SerialDriver10initializeEv>
     214:	0c 94 7d 27 	jmp	0x4efa	; 0x4efa <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh>
     218:	0c 94 d9 30 	jmp	0x61b2	; 0x61b2 <_ZN10helicopter5tasks16PIDOuterLoopTask11runTaskImplEv>
     21c:	0c 94 14 37 	jmp	0x6e28	; 0x6e28 <_ZN10helicopter5tasks4Task11runTaskImplEv>
     220:	0c 94 e1 1e 	jmp	0x3dc2	; 0x3dc2 <_ZN10helicopter8messages11SyncMessage12buildMessageEPh>
     224:	0c 94 a9 37 	jmp	0x6f52	; 0x6f52 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv>
     228:	0c 94 85 1e 	jmp	0x3d0a	; 0x3d0a <_ZN10helicopter8messages11SyncMessageD1Ev>
     22c:	0c 94 d9 11 	jmp	0x23b2	; 0x23b2 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv>
     230:	0c 94 32 1e 	jmp	0x3c64	; 0x3c64 <_ZN10helicopter8messages7Message12buildMessageEPh>

00000234 <__ctors_end>:
     234:	11 24       	eor	r1, r1
     236:	1f be       	out	0x3f, r1	; 63
     238:	cf ef       	ldi	r28, 0xFF	; 255
     23a:	d1 e2       	ldi	r29, 0x21	; 33
     23c:	de bf       	out	0x3e, r29	; 62
     23e:	cd bf       	out	0x3d, r28	; 61
     240:	00 e0       	ldi	r16, 0x00	; 0
     242:	0c bf       	out	0x3c, r16	; 60

00000244 <__do_copy_data>:
     244:	12 e0       	ldi	r17, 0x02	; 2
     246:	a0 e0       	ldi	r26, 0x00	; 0
     248:	b2 e0       	ldi	r27, 0x02	; 2
     24a:	e6 e0       	ldi	r30, 0x06	; 6
     24c:	f8 e8       	ldi	r31, 0x88	; 136
     24e:	00 e0       	ldi	r16, 0x00	; 0
     250:	0b bf       	out	0x3b, r16	; 59
     252:	02 c0       	rjmp	.+4      	; 0x258 <__do_copy_data+0x14>
     254:	07 90       	elpm	r0, Z+
     256:	0d 92       	st	X+, r0
     258:	a4 3a       	cpi	r26, 0xA4	; 164
     25a:	b1 07       	cpc	r27, r17
     25c:	d9 f7       	brne	.-10     	; 0x254 <__do_copy_data+0x10>

0000025e <__do_clear_bss>:
     25e:	22 e0       	ldi	r18, 0x02	; 2
     260:	a4 ea       	ldi	r26, 0xA4	; 164
     262:	b2 e0       	ldi	r27, 0x02	; 2
     264:	01 c0       	rjmp	.+2      	; 0x268 <.do_clear_bss_start>

00000266 <.do_clear_bss_loop>:
     266:	1d 92       	st	X+, r1

00000268 <.do_clear_bss_start>:
     268:	aa 3a       	cpi	r26, 0xAA	; 170
     26a:	b2 07       	cpc	r27, r18
     26c:	e1 f7       	brne	.-8      	; 0x266 <.do_clear_bss_loop>
     26e:	0e 94 92 18 	call	0x3124	; 0x3124 <main>
     272:	0c 94 01 44 	jmp	0x8802	; 0x8802 <_exit>

00000276 <__bad_interrupt>:
     276:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000027a <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>:
			 * Y axis is pointing behind the FC
			 * Z axis is pointing up out of the FC
			 */
			

			float MagYawDegrees() const { return magYawDegrees; }
     27a:	cf 93       	push	r28
     27c:	df 93       	push	r29
     27e:	1f 92       	push	r1
     280:	1f 92       	push	r1
     282:	cd b7       	in	r28, 0x3d	; 61
     284:	de b7       	in	r29, 0x3e	; 62
     286:	9a 83       	std	Y+2, r25	; 0x02
     288:	89 83       	std	Y+1, r24	; 0x01
     28a:	89 81       	ldd	r24, Y+1	; 0x01
     28c:	9a 81       	ldd	r25, Y+2	; 0x02
     28e:	fc 01       	movw	r30, r24
     290:	80 81       	ld	r24, Z
     292:	91 81       	ldd	r25, Z+1	; 0x01
     294:	a2 81       	ldd	r26, Z+2	; 0x02
     296:	b3 81       	ldd	r27, Z+3	; 0x03
     298:	bc 01       	movw	r22, r24
     29a:	cd 01       	movw	r24, r26
     29c:	0f 90       	pop	r0
     29e:	0f 90       	pop	r0
     2a0:	df 91       	pop	r29
     2a2:	cf 91       	pop	r28
     2a4:	08 95       	ret

000002a6 <_ZNK10helicopter5model11SystemModel22ReferenceMagYawDegreesEv>:
			void MagYawDegrees(float val) { magYawDegrees = val; }	
				
				
				
			float ReferenceMagYawDegrees() const {return referenceMagYawDegrees;}
     2a6:	cf 93       	push	r28
     2a8:	df 93       	push	r29
     2aa:	1f 92       	push	r1
     2ac:	1f 92       	push	r1
     2ae:	cd b7       	in	r28, 0x3d	; 61
     2b0:	de b7       	in	r29, 0x3e	; 62
     2b2:	9a 83       	std	Y+2, r25	; 0x02
     2b4:	89 83       	std	Y+1, r24	; 0x01
     2b6:	89 81       	ldd	r24, Y+1	; 0x01
     2b8:	9a 81       	ldd	r25, Y+2	; 0x02
     2ba:	fc 01       	movw	r30, r24
     2bc:	84 81       	ldd	r24, Z+4	; 0x04
     2be:	95 81       	ldd	r25, Z+5	; 0x05
     2c0:	a6 81       	ldd	r26, Z+6	; 0x06
     2c2:	b7 81       	ldd	r27, Z+7	; 0x07
     2c4:	bc 01       	movw	r22, r24
     2c6:	cd 01       	movw	r24, r26
     2c8:	0f 90       	pop	r0
     2ca:	0f 90       	pop	r0
     2cc:	df 91       	pop	r29
     2ce:	cf 91       	pop	r28
     2d0:	08 95       	ret

000002d2 <_ZNK10helicopter5model11SystemModel10YawControlEv>:
			void ReferenceMagYawDegrees(float val) { referenceMagYawDegrees = val;}
				
				
			float YawControl() const {return yawControl;}
     2d2:	cf 93       	push	r28
     2d4:	df 93       	push	r29
     2d6:	1f 92       	push	r1
     2d8:	1f 92       	push	r1
     2da:	cd b7       	in	r28, 0x3d	; 61
     2dc:	de b7       	in	r29, 0x3e	; 62
     2de:	9a 83       	std	Y+2, r25	; 0x02
     2e0:	89 83       	std	Y+1, r24	; 0x01
     2e2:	89 81       	ldd	r24, Y+1	; 0x01
     2e4:	9a 81       	ldd	r25, Y+2	; 0x02
     2e6:	fc 01       	movw	r30, r24
     2e8:	80 85       	ldd	r24, Z+8	; 0x08
     2ea:	91 85       	ldd	r25, Z+9	; 0x09
     2ec:	a2 85       	ldd	r26, Z+10	; 0x0a
     2ee:	b3 85       	ldd	r27, Z+11	; 0x0b
     2f0:	bc 01       	movw	r22, r24
     2f2:	cd 01       	movw	r24, r26
     2f4:	0f 90       	pop	r0
     2f6:	0f 90       	pop	r0
     2f8:	df 91       	pop	r29
     2fa:	cf 91       	pop	r28
     2fc:	08 95       	ret

000002fe <_ZN10helicopter5model11SystemModel10YawControlEf>:
			void YawControl(float val) { yawControl = val;}
     2fe:	cf 93       	push	r28
     300:	df 93       	push	r29
     302:	00 d0       	rcall	.+0      	; 0x304 <_ZN10helicopter5model11SystemModel10YawControlEf+0x6>
     304:	00 d0       	rcall	.+0      	; 0x306 <_ZN10helicopter5model11SystemModel10YawControlEf+0x8>
     306:	cd b7       	in	r28, 0x3d	; 61
     308:	de b7       	in	r29, 0x3e	; 62
     30a:	9a 83       	std	Y+2, r25	; 0x02
     30c:	89 83       	std	Y+1, r24	; 0x01
     30e:	4b 83       	std	Y+3, r20	; 0x03
     310:	5c 83       	std	Y+4, r21	; 0x04
     312:	6d 83       	std	Y+5, r22	; 0x05
     314:	7e 83       	std	Y+6, r23	; 0x06
     316:	29 81       	ldd	r18, Y+1	; 0x01
     318:	3a 81       	ldd	r19, Y+2	; 0x02
     31a:	8b 81       	ldd	r24, Y+3	; 0x03
     31c:	9c 81       	ldd	r25, Y+4	; 0x04
     31e:	ad 81       	ldd	r26, Y+5	; 0x05
     320:	be 81       	ldd	r27, Y+6	; 0x06
     322:	f9 01       	movw	r30, r18
     324:	80 87       	std	Z+8, r24	; 0x08
     326:	91 87       	std	Z+9, r25	; 0x09
     328:	a2 87       	std	Z+10, r26	; 0x0a
     32a:	b3 87       	std	Z+11, r27	; 0x0b
     32c:	26 96       	adiw	r28, 0x06	; 6
     32e:	0f b6       	in	r0, 0x3f	; 63
     330:	f8 94       	cli
     332:	de bf       	out	0x3e, r29	; 62
     334:	0f be       	out	0x3f, r0	; 63
     336:	cd bf       	out	0x3d, r28	; 61
     338:	df 91       	pop	r29
     33a:	cf 91       	pop	r28
     33c:	08 95       	ret

0000033e <_ZNK10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEv>:
				
			float YawControlBeforeServoLimitsAdjustment() const {return yawControlBeforeServoLimitsAdjustment;}
     33e:	cf 93       	push	r28
     340:	df 93       	push	r29
     342:	1f 92       	push	r1
     344:	1f 92       	push	r1
     346:	cd b7       	in	r28, 0x3d	; 61
     348:	de b7       	in	r29, 0x3e	; 62
     34a:	9a 83       	std	Y+2, r25	; 0x02
     34c:	89 83       	std	Y+1, r24	; 0x01
     34e:	89 81       	ldd	r24, Y+1	; 0x01
     350:	9a 81       	ldd	r25, Y+2	; 0x02
     352:	fc 01       	movw	r30, r24
     354:	84 85       	ldd	r24, Z+12	; 0x0c
     356:	95 85       	ldd	r25, Z+13	; 0x0d
     358:	a6 85       	ldd	r26, Z+14	; 0x0e
     35a:	b7 85       	ldd	r27, Z+15	; 0x0f
     35c:	bc 01       	movw	r22, r24
     35e:	cd 01       	movw	r24, r26
     360:	0f 90       	pop	r0
     362:	0f 90       	pop	r0
     364:	df 91       	pop	r29
     366:	cf 91       	pop	r28
     368:	08 95       	ret

0000036a <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf>:
			void YawControlBeforeServoLimitsAdjustment(float val) { yawControlBeforeServoLimitsAdjustment = val;}
     36a:	cf 93       	push	r28
     36c:	df 93       	push	r29
     36e:	00 d0       	rcall	.+0      	; 0x370 <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf+0x6>
     370:	00 d0       	rcall	.+0      	; 0x372 <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf+0x8>
     372:	cd b7       	in	r28, 0x3d	; 61
     374:	de b7       	in	r29, 0x3e	; 62
     376:	9a 83       	std	Y+2, r25	; 0x02
     378:	89 83       	std	Y+1, r24	; 0x01
     37a:	4b 83       	std	Y+3, r20	; 0x03
     37c:	5c 83       	std	Y+4, r21	; 0x04
     37e:	6d 83       	std	Y+5, r22	; 0x05
     380:	7e 83       	std	Y+6, r23	; 0x06
     382:	29 81       	ldd	r18, Y+1	; 0x01
     384:	3a 81       	ldd	r19, Y+2	; 0x02
     386:	8b 81       	ldd	r24, Y+3	; 0x03
     388:	9c 81       	ldd	r25, Y+4	; 0x04
     38a:	ad 81       	ldd	r26, Y+5	; 0x05
     38c:	be 81       	ldd	r27, Y+6	; 0x06
     38e:	f9 01       	movw	r30, r18
     390:	84 87       	std	Z+12, r24	; 0x0c
     392:	95 87       	std	Z+13, r25	; 0x0d
     394:	a6 87       	std	Z+14, r26	; 0x0e
     396:	b7 87       	std	Z+15, r27	; 0x0f
     398:	26 96       	adiw	r28, 0x06	; 6
     39a:	0f b6       	in	r0, 0x3f	; 63
     39c:	f8 94       	cli
     39e:	de bf       	out	0x3e, r29	; 62
     3a0:	0f be       	out	0x3f, r0	; 63
     3a2:	cd bf       	out	0x3d, r28	; 61
     3a4:	df 91       	pop	r29
     3a6:	cf 91       	pop	r28
     3a8:	08 95       	ret

000003aa <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>:
				
			float YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
     3aa:	cf 93       	push	r28
     3ac:	df 93       	push	r29
     3ae:	1f 92       	push	r1
     3b0:	1f 92       	push	r1
     3b2:	cd b7       	in	r28, 0x3d	; 61
     3b4:	de b7       	in	r29, 0x3e	; 62
     3b6:	9a 83       	std	Y+2, r25	; 0x02
     3b8:	89 83       	std	Y+1, r24	; 0x01
     3ba:	89 81       	ldd	r24, Y+1	; 0x01
     3bc:	9a 81       	ldd	r25, Y+2	; 0x02
     3be:	fc 01       	movw	r30, r24
     3c0:	80 89       	ldd	r24, Z+16	; 0x10
     3c2:	91 89       	ldd	r25, Z+17	; 0x11
     3c4:	a2 89       	ldd	r26, Z+18	; 0x12
     3c6:	b3 89       	ldd	r27, Z+19	; 0x13
     3c8:	bc 01       	movw	r22, r24
     3ca:	cd 01       	movw	r24, r26
     3cc:	0f 90       	pop	r0
     3ce:	0f 90       	pop	r0
     3d0:	df 91       	pop	r29
     3d2:	cf 91       	pop	r28
     3d4:	08 95       	ret

000003d6 <_ZNK10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEv>:
			void YawVelocityDegreesPerSecond(float val) { yawVelocityDegreesPerSecond = val;}
				
			float ReferenceYawVelocityDegreesPerSecond() const {return referenceYawVelocityDegreesPerSecond;}
     3d6:	cf 93       	push	r28
     3d8:	df 93       	push	r29
     3da:	1f 92       	push	r1
     3dc:	1f 92       	push	r1
     3de:	cd b7       	in	r28, 0x3d	; 61
     3e0:	de b7       	in	r29, 0x3e	; 62
     3e2:	9a 83       	std	Y+2, r25	; 0x02
     3e4:	89 83       	std	Y+1, r24	; 0x01
     3e6:	89 81       	ldd	r24, Y+1	; 0x01
     3e8:	9a 81       	ldd	r25, Y+2	; 0x02
     3ea:	fc 01       	movw	r30, r24
     3ec:	84 89       	ldd	r24, Z+20	; 0x14
     3ee:	95 89       	ldd	r25, Z+21	; 0x15
     3f0:	a6 89       	ldd	r26, Z+22	; 0x16
     3f2:	b7 89       	ldd	r27, Z+23	; 0x17
     3f4:	bc 01       	movw	r22, r24
     3f6:	cd 01       	movw	r24, r26
     3f8:	0f 90       	pop	r0
     3fa:	0f 90       	pop	r0
     3fc:	df 91       	pop	r29
     3fe:	cf 91       	pop	r28
     400:	08 95       	ret

00000402 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>:
			void ReferenceYawVelocityDegreesPerSecond(float val) { referenceYawVelocityDegreesPerSecond = val;}
				
			float YawIntegral() const {return yawIntegral;}
     402:	cf 93       	push	r28
     404:	df 93       	push	r29
     406:	1f 92       	push	r1
     408:	1f 92       	push	r1
     40a:	cd b7       	in	r28, 0x3d	; 61
     40c:	de b7       	in	r29, 0x3e	; 62
     40e:	9a 83       	std	Y+2, r25	; 0x02
     410:	89 83       	std	Y+1, r24	; 0x01
     412:	89 81       	ldd	r24, Y+1	; 0x01
     414:	9a 81       	ldd	r25, Y+2	; 0x02
     416:	fc 01       	movw	r30, r24
     418:	80 8d       	ldd	r24, Z+24	; 0x18
     41a:	91 8d       	ldd	r25, Z+25	; 0x19
     41c:	a2 8d       	ldd	r26, Z+26	; 0x1a
     41e:	b3 8d       	ldd	r27, Z+27	; 0x1b
     420:	bc 01       	movw	r22, r24
     422:	cd 01       	movw	r24, r26
     424:	0f 90       	pop	r0
     426:	0f 90       	pop	r0
     428:	df 91       	pop	r29
     42a:	cf 91       	pop	r28
     42c:	08 95       	ret

0000042e <_ZN10helicopter5model11SystemModel11YawIntegralEf>:
			void YawIntegral(float val) { yawIntegral = val;}
     42e:	cf 93       	push	r28
     430:	df 93       	push	r29
     432:	00 d0       	rcall	.+0      	; 0x434 <_ZN10helicopter5model11SystemModel11YawIntegralEf+0x6>
     434:	00 d0       	rcall	.+0      	; 0x436 <_ZN10helicopter5model11SystemModel11YawIntegralEf+0x8>
     436:	cd b7       	in	r28, 0x3d	; 61
     438:	de b7       	in	r29, 0x3e	; 62
     43a:	9a 83       	std	Y+2, r25	; 0x02
     43c:	89 83       	std	Y+1, r24	; 0x01
     43e:	4b 83       	std	Y+3, r20	; 0x03
     440:	5c 83       	std	Y+4, r21	; 0x04
     442:	6d 83       	std	Y+5, r22	; 0x05
     444:	7e 83       	std	Y+6, r23	; 0x06
     446:	29 81       	ldd	r18, Y+1	; 0x01
     448:	3a 81       	ldd	r19, Y+2	; 0x02
     44a:	8b 81       	ldd	r24, Y+3	; 0x03
     44c:	9c 81       	ldd	r25, Y+4	; 0x04
     44e:	ad 81       	ldd	r26, Y+5	; 0x05
     450:	be 81       	ldd	r27, Y+6	; 0x06
     452:	f9 01       	movw	r30, r18
     454:	80 8f       	std	Z+24, r24	; 0x18
     456:	91 8f       	std	Z+25, r25	; 0x19
     458:	a2 8f       	std	Z+26, r26	; 0x1a
     45a:	b3 8f       	std	Z+27, r27	; 0x1b
     45c:	26 96       	adiw	r28, 0x06	; 6
     45e:	0f b6       	in	r0, 0x3f	; 63
     460:	f8 94       	cli
     462:	de bf       	out	0x3e, r29	; 62
     464:	0f be       	out	0x3f, r0	; 63
     466:	cd bf       	out	0x3d, r28	; 61
     468:	df 91       	pop	r29
     46a:	cf 91       	pop	r28
     46c:	08 95       	ret

0000046e <_ZN10helicopter5model11SystemModel15YawProportionalEf>:

			float YawProportional() const {return yawProportional;}
			void YawProportional(float val) { yawProportional = val;}
     46e:	cf 93       	push	r28
     470:	df 93       	push	r29
     472:	00 d0       	rcall	.+0      	; 0x474 <_ZN10helicopter5model11SystemModel15YawProportionalEf+0x6>
     474:	00 d0       	rcall	.+0      	; 0x476 <_ZN10helicopter5model11SystemModel15YawProportionalEf+0x8>
     476:	cd b7       	in	r28, 0x3d	; 61
     478:	de b7       	in	r29, 0x3e	; 62
     47a:	9a 83       	std	Y+2, r25	; 0x02
     47c:	89 83       	std	Y+1, r24	; 0x01
     47e:	4b 83       	std	Y+3, r20	; 0x03
     480:	5c 83       	std	Y+4, r21	; 0x04
     482:	6d 83       	std	Y+5, r22	; 0x05
     484:	7e 83       	std	Y+6, r23	; 0x06
     486:	29 81       	ldd	r18, Y+1	; 0x01
     488:	3a 81       	ldd	r19, Y+2	; 0x02
     48a:	8b 81       	ldd	r24, Y+3	; 0x03
     48c:	9c 81       	ldd	r25, Y+4	; 0x04
     48e:	ad 81       	ldd	r26, Y+5	; 0x05
     490:	be 81       	ldd	r27, Y+6	; 0x06
     492:	f9 01       	movw	r30, r18
     494:	84 8f       	std	Z+28, r24	; 0x1c
     496:	95 8f       	std	Z+29, r25	; 0x1d
     498:	a6 8f       	std	Z+30, r26	; 0x1e
     49a:	b7 8f       	std	Z+31, r27	; 0x1f
     49c:	26 96       	adiw	r28, 0x06	; 6
     49e:	0f b6       	in	r0, 0x3f	; 63
     4a0:	f8 94       	cli
     4a2:	de bf       	out	0x3e, r29	; 62
     4a4:	0f be       	out	0x3f, r0	; 63
     4a6:	cd bf       	out	0x3d, r28	; 61
     4a8:	df 91       	pop	r29
     4aa:	cf 91       	pop	r28
     4ac:	08 95       	ret

000004ae <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf>:

			float YawDerivativeError() const {return yawDerivativeError;}
			void YawDerivativeError(float val) { yawDerivativeError = val;}								
     4ae:	cf 93       	push	r28
     4b0:	df 93       	push	r29
     4b2:	00 d0       	rcall	.+0      	; 0x4b4 <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf+0x6>
     4b4:	00 d0       	rcall	.+0      	; 0x4b6 <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf+0x8>
     4b6:	cd b7       	in	r28, 0x3d	; 61
     4b8:	de b7       	in	r29, 0x3e	; 62
     4ba:	9a 83       	std	Y+2, r25	; 0x02
     4bc:	89 83       	std	Y+1, r24	; 0x01
     4be:	4b 83       	std	Y+3, r20	; 0x03
     4c0:	5c 83       	std	Y+4, r21	; 0x04
     4c2:	6d 83       	std	Y+5, r22	; 0x05
     4c4:	7e 83       	std	Y+6, r23	; 0x06
     4c6:	29 81       	ldd	r18, Y+1	; 0x01
     4c8:	3a 81       	ldd	r19, Y+2	; 0x02
     4ca:	8b 81       	ldd	r24, Y+3	; 0x03
     4cc:	9c 81       	ldd	r25, Y+4	; 0x04
     4ce:	ad 81       	ldd	r26, Y+5	; 0x05
     4d0:	be 81       	ldd	r27, Y+6	; 0x06
     4d2:	f9 01       	movw	r30, r18
     4d4:	80 a3       	std	Z+32, r24	; 0x20
     4d6:	91 a3       	std	Z+33, r25	; 0x21
     4d8:	a2 a3       	std	Z+34, r26	; 0x22
     4da:	b3 a3       	std	Z+35, r27	; 0x23
     4dc:	26 96       	adiw	r28, 0x06	; 6
     4de:	0f b6       	in	r0, 0x3f	; 63
     4e0:	f8 94       	cli
     4e2:	de bf       	out	0x3e, r29	; 62
     4e4:	0f be       	out	0x3f, r0	; 63
     4e6:	cd bf       	out	0x3d, r28	; 61
     4e8:	df 91       	pop	r29
     4ea:	cf 91       	pop	r28
     4ec:	08 95       	ret

000004ee <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>:
																							
		
		
		
			float XNEDBodyFrame() const {return xNEDBodyFrame;}
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	1f 92       	push	r1
     4f4:	1f 92       	push	r1
     4f6:	cd b7       	in	r28, 0x3d	; 61
     4f8:	de b7       	in	r29, 0x3e	; 62
     4fa:	9a 83       	std	Y+2, r25	; 0x02
     4fc:	89 83       	std	Y+1, r24	; 0x01
     4fe:	89 81       	ldd	r24, Y+1	; 0x01
     500:	9a 81       	ldd	r25, Y+2	; 0x02
     502:	fc 01       	movw	r30, r24
     504:	84 a1       	ldd	r24, Z+36	; 0x24
     506:	95 a1       	ldd	r25, Z+37	; 0x25
     508:	a6 a1       	ldd	r26, Z+38	; 0x26
     50a:	b7 a1       	ldd	r27, Z+39	; 0x27
     50c:	bc 01       	movw	r22, r24
     50e:	cd 01       	movw	r24, r26
     510:	0f 90       	pop	r0
     512:	0f 90       	pop	r0
     514:	df 91       	pop	r29
     516:	cf 91       	pop	r28
     518:	08 95       	ret

0000051a <_ZNK10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEv>:
			void XNEDBodyFrame(float val) { xNEDBodyFrame = val;}
						
			float ReferenceXNEDBodyFrame() const {return referenceXNEDBodyFrame;}
     51a:	cf 93       	push	r28
     51c:	df 93       	push	r29
     51e:	1f 92       	push	r1
     520:	1f 92       	push	r1
     522:	cd b7       	in	r28, 0x3d	; 61
     524:	de b7       	in	r29, 0x3e	; 62
     526:	9a 83       	std	Y+2, r25	; 0x02
     528:	89 83       	std	Y+1, r24	; 0x01
     52a:	89 81       	ldd	r24, Y+1	; 0x01
     52c:	9a 81       	ldd	r25, Y+2	; 0x02
     52e:	fc 01       	movw	r30, r24
     530:	80 a5       	ldd	r24, Z+40	; 0x28
     532:	91 a5       	ldd	r25, Z+41	; 0x29
     534:	a2 a5       	ldd	r26, Z+42	; 0x2a
     536:	b3 a5       	ldd	r27, Z+43	; 0x2b
     538:	bc 01       	movw	r22, r24
     53a:	cd 01       	movw	r24, r26
     53c:	0f 90       	pop	r0
     53e:	0f 90       	pop	r0
     540:	df 91       	pop	r29
     542:	cf 91       	pop	r28
     544:	08 95       	ret

00000546 <_ZNK10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEv>:
			void ReferenceXNEDBodyFrame(float val) { referenceXNEDBodyFrame = val;}

			float LongitudeControlBeforeServoLimitsAdjustment() const {return longitudeControlBeforeServoLimitsAdjustment;}
     546:	cf 93       	push	r28
     548:	df 93       	push	r29
     54a:	1f 92       	push	r1
     54c:	1f 92       	push	r1
     54e:	cd b7       	in	r28, 0x3d	; 61
     550:	de b7       	in	r29, 0x3e	; 62
     552:	9a 83       	std	Y+2, r25	; 0x02
     554:	89 83       	std	Y+1, r24	; 0x01
     556:	89 81       	ldd	r24, Y+1	; 0x01
     558:	9a 81       	ldd	r25, Y+2	; 0x02
     55a:	fc 01       	movw	r30, r24
     55c:	84 a5       	ldd	r24, Z+44	; 0x2c
     55e:	95 a5       	ldd	r25, Z+45	; 0x2d
     560:	a6 a5       	ldd	r26, Z+46	; 0x2e
     562:	b7 a5       	ldd	r27, Z+47	; 0x2f
     564:	bc 01       	movw	r22, r24
     566:	cd 01       	movw	r24, r26
     568:	0f 90       	pop	r0
     56a:	0f 90       	pop	r0
     56c:	df 91       	pop	r29
     56e:	cf 91       	pop	r28
     570:	08 95       	ret

00000572 <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf>:
			void LongitudeControlBeforeServoLimitsAdjustment(float val) { longitudeControlBeforeServoLimitsAdjustment = val;}
     572:	cf 93       	push	r28
     574:	df 93       	push	r29
     576:	00 d0       	rcall	.+0      	; 0x578 <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf+0x6>
     578:	00 d0       	rcall	.+0      	; 0x57a <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf+0x8>
     57a:	cd b7       	in	r28, 0x3d	; 61
     57c:	de b7       	in	r29, 0x3e	; 62
     57e:	9a 83       	std	Y+2, r25	; 0x02
     580:	89 83       	std	Y+1, r24	; 0x01
     582:	4b 83       	std	Y+3, r20	; 0x03
     584:	5c 83       	std	Y+4, r21	; 0x04
     586:	6d 83       	std	Y+5, r22	; 0x05
     588:	7e 83       	std	Y+6, r23	; 0x06
     58a:	29 81       	ldd	r18, Y+1	; 0x01
     58c:	3a 81       	ldd	r19, Y+2	; 0x02
     58e:	8b 81       	ldd	r24, Y+3	; 0x03
     590:	9c 81       	ldd	r25, Y+4	; 0x04
     592:	ad 81       	ldd	r26, Y+5	; 0x05
     594:	be 81       	ldd	r27, Y+6	; 0x06
     596:	f9 01       	movw	r30, r18
     598:	84 a7       	std	Z+44, r24	; 0x2c
     59a:	95 a7       	std	Z+45, r25	; 0x2d
     59c:	a6 a7       	std	Z+46, r26	; 0x2e
     59e:	b7 a7       	std	Z+47, r27	; 0x2f
     5a0:	26 96       	adiw	r28, 0x06	; 6
     5a2:	0f b6       	in	r0, 0x3f	; 63
     5a4:	f8 94       	cli
     5a6:	de bf       	out	0x3e, r29	; 62
     5a8:	0f be       	out	0x3f, r0	; 63
     5aa:	cd bf       	out	0x3d, r28	; 61
     5ac:	df 91       	pop	r29
     5ae:	cf 91       	pop	r28
     5b0:	08 95       	ret

000005b2 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>:

			float LongitudeControl() const {return longitudeControl;}
     5b2:	cf 93       	push	r28
     5b4:	df 93       	push	r29
     5b6:	1f 92       	push	r1
     5b8:	1f 92       	push	r1
     5ba:	cd b7       	in	r28, 0x3d	; 61
     5bc:	de b7       	in	r29, 0x3e	; 62
     5be:	9a 83       	std	Y+2, r25	; 0x02
     5c0:	89 83       	std	Y+1, r24	; 0x01
     5c2:	89 81       	ldd	r24, Y+1	; 0x01
     5c4:	9a 81       	ldd	r25, Y+2	; 0x02
     5c6:	fc 01       	movw	r30, r24
     5c8:	80 a9       	ldd	r24, Z+48	; 0x30
     5ca:	91 a9       	ldd	r25, Z+49	; 0x31
     5cc:	a2 a9       	ldd	r26, Z+50	; 0x32
     5ce:	b3 a9       	ldd	r27, Z+51	; 0x33
     5d0:	bc 01       	movw	r22, r24
     5d2:	cd 01       	movw	r24, r26
     5d4:	0f 90       	pop	r0
     5d6:	0f 90       	pop	r0
     5d8:	df 91       	pop	r29
     5da:	cf 91       	pop	r28
     5dc:	08 95       	ret

000005de <_ZN10helicopter5model11SystemModel16LongitudeControlEf>:
			void LongitudeControl(float val) { longitudeControl = val;}
     5de:	cf 93       	push	r28
     5e0:	df 93       	push	r29
     5e2:	00 d0       	rcall	.+0      	; 0x5e4 <_ZN10helicopter5model11SystemModel16LongitudeControlEf+0x6>
     5e4:	00 d0       	rcall	.+0      	; 0x5e6 <_ZN10helicopter5model11SystemModel16LongitudeControlEf+0x8>
     5e6:	cd b7       	in	r28, 0x3d	; 61
     5e8:	de b7       	in	r29, 0x3e	; 62
     5ea:	9a 83       	std	Y+2, r25	; 0x02
     5ec:	89 83       	std	Y+1, r24	; 0x01
     5ee:	4b 83       	std	Y+3, r20	; 0x03
     5f0:	5c 83       	std	Y+4, r21	; 0x04
     5f2:	6d 83       	std	Y+5, r22	; 0x05
     5f4:	7e 83       	std	Y+6, r23	; 0x06
     5f6:	29 81       	ldd	r18, Y+1	; 0x01
     5f8:	3a 81       	ldd	r19, Y+2	; 0x02
     5fa:	8b 81       	ldd	r24, Y+3	; 0x03
     5fc:	9c 81       	ldd	r25, Y+4	; 0x04
     5fe:	ad 81       	ldd	r26, Y+5	; 0x05
     600:	be 81       	ldd	r27, Y+6	; 0x06
     602:	f9 01       	movw	r30, r18
     604:	80 ab       	std	Z+48, r24	; 0x30
     606:	91 ab       	std	Z+49, r25	; 0x31
     608:	a2 ab       	std	Z+50, r26	; 0x32
     60a:	b3 ab       	std	Z+51, r27	; 0x33
     60c:	26 96       	adiw	r28, 0x06	; 6
     60e:	0f b6       	in	r0, 0x3f	; 63
     610:	f8 94       	cli
     612:	de bf       	out	0x3e, r29	; 62
     614:	0f be       	out	0x3f, r0	; 63
     616:	cd bf       	out	0x3d, r28	; 61
     618:	df 91       	pop	r29
     61a:	cf 91       	pop	r28
     61c:	08 95       	ret

0000061e <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>:
				
			float XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
     61e:	cf 93       	push	r28
     620:	df 93       	push	r29
     622:	1f 92       	push	r1
     624:	1f 92       	push	r1
     626:	cd b7       	in	r28, 0x3d	; 61
     628:	de b7       	in	r29, 0x3e	; 62
     62a:	9a 83       	std	Y+2, r25	; 0x02
     62c:	89 83       	std	Y+1, r24	; 0x01
     62e:	89 81       	ldd	r24, Y+1	; 0x01
     630:	9a 81       	ldd	r25, Y+2	; 0x02
     632:	fc 01       	movw	r30, r24
     634:	84 a9       	ldd	r24, Z+52	; 0x34
     636:	95 a9       	ldd	r25, Z+53	; 0x35
     638:	a6 a9       	ldd	r26, Z+54	; 0x36
     63a:	b7 a9       	ldd	r27, Z+55	; 0x37
     63c:	bc 01       	movw	r22, r24
     63e:	cd 01       	movw	r24, r26
     640:	0f 90       	pop	r0
     642:	0f 90       	pop	r0
     644:	df 91       	pop	r29
     646:	cf 91       	pop	r28
     648:	08 95       	ret

0000064a <_ZNK10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEv>:
			void XVelocityMetersPerSecond(float val) { xVelocityMetersPerSecond = val;}
				
			float ReferenceXVelocityMetersPerSecond() const {return referenceXVelocityMetersPerSecond;}
     64a:	cf 93       	push	r28
     64c:	df 93       	push	r29
     64e:	1f 92       	push	r1
     650:	1f 92       	push	r1
     652:	cd b7       	in	r28, 0x3d	; 61
     654:	de b7       	in	r29, 0x3e	; 62
     656:	9a 83       	std	Y+2, r25	; 0x02
     658:	89 83       	std	Y+1, r24	; 0x01
     65a:	89 81       	ldd	r24, Y+1	; 0x01
     65c:	9a 81       	ldd	r25, Y+2	; 0x02
     65e:	fc 01       	movw	r30, r24
     660:	80 ad       	ldd	r24, Z+56	; 0x38
     662:	91 ad       	ldd	r25, Z+57	; 0x39
     664:	a2 ad       	ldd	r26, Z+58	; 0x3a
     666:	b3 ad       	ldd	r27, Z+59	; 0x3b
     668:	bc 01       	movw	r22, r24
     66a:	cd 01       	movw	r24, r26
     66c:	0f 90       	pop	r0
     66e:	0f 90       	pop	r0
     670:	df 91       	pop	r29
     672:	cf 91       	pop	r28
     674:	08 95       	ret

00000676 <_ZNK10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEv>:
			void ReferenceXVelocityMetersPerSecond(float val) { referenceXVelocityMetersPerSecond = val;}
				
			float XLongitudinalOuterLoopControl() const {return xLongitudinalOuterLoopControl;}
     676:	cf 93       	push	r28
     678:	df 93       	push	r29
     67a:	1f 92       	push	r1
     67c:	1f 92       	push	r1
     67e:	cd b7       	in	r28, 0x3d	; 61
     680:	de b7       	in	r29, 0x3e	; 62
     682:	9a 83       	std	Y+2, r25	; 0x02
     684:	89 83       	std	Y+1, r24	; 0x01
     686:	89 81       	ldd	r24, Y+1	; 0x01
     688:	9a 81       	ldd	r25, Y+2	; 0x02
     68a:	fc 01       	movw	r30, r24
     68c:	84 ad       	ldd	r24, Z+60	; 0x3c
     68e:	95 ad       	ldd	r25, Z+61	; 0x3d
     690:	a6 ad       	ldd	r26, Z+62	; 0x3e
     692:	b7 ad       	ldd	r27, Z+63	; 0x3f
     694:	bc 01       	movw	r22, r24
     696:	cd 01       	movw	r24, r26
     698:	0f 90       	pop	r0
     69a:	0f 90       	pop	r0
     69c:	df 91       	pop	r29
     69e:	cf 91       	pop	r28
     6a0:	08 95       	ret

000006a2 <_ZN10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEf>:
			void XLongitudinalOuterLoopControl(float val) { xLongitudinalOuterLoopControl = val;}
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	00 d0       	rcall	.+0      	; 0x6a8 <_ZN10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEf+0x6>
     6a8:	00 d0       	rcall	.+0      	; 0x6aa <_ZN10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEf+0x8>
     6aa:	cd b7       	in	r28, 0x3d	; 61
     6ac:	de b7       	in	r29, 0x3e	; 62
     6ae:	9a 83       	std	Y+2, r25	; 0x02
     6b0:	89 83       	std	Y+1, r24	; 0x01
     6b2:	4b 83       	std	Y+3, r20	; 0x03
     6b4:	5c 83       	std	Y+4, r21	; 0x04
     6b6:	6d 83       	std	Y+5, r22	; 0x05
     6b8:	7e 83       	std	Y+6, r23	; 0x06
     6ba:	29 81       	ldd	r18, Y+1	; 0x01
     6bc:	3a 81       	ldd	r19, Y+2	; 0x02
     6be:	8b 81       	ldd	r24, Y+3	; 0x03
     6c0:	9c 81       	ldd	r25, Y+4	; 0x04
     6c2:	ad 81       	ldd	r26, Y+5	; 0x05
     6c4:	be 81       	ldd	r27, Y+6	; 0x06
     6c6:	f9 01       	movw	r30, r18
     6c8:	84 af       	std	Z+60, r24	; 0x3c
     6ca:	95 af       	std	Z+61, r25	; 0x3d
     6cc:	a6 af       	std	Z+62, r26	; 0x3e
     6ce:	b7 af       	std	Z+63, r27	; 0x3f
     6d0:	26 96       	adiw	r28, 0x06	; 6
     6d2:	0f b6       	in	r0, 0x3f	; 63
     6d4:	f8 94       	cli
     6d6:	de bf       	out	0x3e, r29	; 62
     6d8:	0f be       	out	0x3f, r0	; 63
     6da:	cd bf       	out	0x3d, r28	; 61
     6dc:	df 91       	pop	r29
     6de:	cf 91       	pop	r28
     6e0:	08 95       	ret

000006e2 <_ZN10helicopter5model11SystemModel13XProportionalEf>:
				
			float XProportional() const {return xProportional;}
			void XProportional(float val) { xProportional = val;}
     6e2:	cf 93       	push	r28
     6e4:	df 93       	push	r29
     6e6:	00 d0       	rcall	.+0      	; 0x6e8 <_ZN10helicopter5model11SystemModel13XProportionalEf+0x6>
     6e8:	00 d0       	rcall	.+0      	; 0x6ea <_ZN10helicopter5model11SystemModel13XProportionalEf+0x8>
     6ea:	cd b7       	in	r28, 0x3d	; 61
     6ec:	de b7       	in	r29, 0x3e	; 62
     6ee:	9a 83       	std	Y+2, r25	; 0x02
     6f0:	89 83       	std	Y+1, r24	; 0x01
     6f2:	4b 83       	std	Y+3, r20	; 0x03
     6f4:	5c 83       	std	Y+4, r21	; 0x04
     6f6:	6d 83       	std	Y+5, r22	; 0x05
     6f8:	7e 83       	std	Y+6, r23	; 0x06
     6fa:	89 81       	ldd	r24, Y+1	; 0x01
     6fc:	9a 81       	ldd	r25, Y+2	; 0x02
     6fe:	9c 01       	movw	r18, r24
     700:	20 5c       	subi	r18, 0xC0	; 192
     702:	3f 4f       	sbci	r19, 0xFF	; 255
     704:	8b 81       	ldd	r24, Y+3	; 0x03
     706:	9c 81       	ldd	r25, Y+4	; 0x04
     708:	ad 81       	ldd	r26, Y+5	; 0x05
     70a:	be 81       	ldd	r27, Y+6	; 0x06
     70c:	f9 01       	movw	r30, r18
     70e:	80 83       	st	Z, r24
     710:	91 83       	std	Z+1, r25	; 0x01
     712:	a2 83       	std	Z+2, r26	; 0x02
     714:	b3 83       	std	Z+3, r27	; 0x03
     716:	26 96       	adiw	r28, 0x06	; 6
     718:	0f b6       	in	r0, 0x3f	; 63
     71a:	f8 94       	cli
     71c:	de bf       	out	0x3e, r29	; 62
     71e:	0f be       	out	0x3f, r0	; 63
     720:	cd bf       	out	0x3d, r28	; 61
     722:	df 91       	pop	r29
     724:	cf 91       	pop	r28
     726:	08 95       	ret

00000728 <_ZNK10helicopter5model11SystemModel9XIntegralEv>:
				
			float XIntegral() const {return xIntegral;}
     728:	cf 93       	push	r28
     72a:	df 93       	push	r29
     72c:	1f 92       	push	r1
     72e:	1f 92       	push	r1
     730:	cd b7       	in	r28, 0x3d	; 61
     732:	de b7       	in	r29, 0x3e	; 62
     734:	9a 83       	std	Y+2, r25	; 0x02
     736:	89 83       	std	Y+1, r24	; 0x01
     738:	89 81       	ldd	r24, Y+1	; 0x01
     73a:	9a 81       	ldd	r25, Y+2	; 0x02
     73c:	8c 5b       	subi	r24, 0xBC	; 188
     73e:	9f 4f       	sbci	r25, 0xFF	; 255
     740:	fc 01       	movw	r30, r24
     742:	80 81       	ld	r24, Z
     744:	91 81       	ldd	r25, Z+1	; 0x01
     746:	a2 81       	ldd	r26, Z+2	; 0x02
     748:	b3 81       	ldd	r27, Z+3	; 0x03
     74a:	bc 01       	movw	r22, r24
     74c:	cd 01       	movw	r24, r26
     74e:	0f 90       	pop	r0
     750:	0f 90       	pop	r0
     752:	df 91       	pop	r29
     754:	cf 91       	pop	r28
     756:	08 95       	ret

00000758 <_ZN10helicopter5model11SystemModel9XIntegralEf>:
			void XIntegral(float val) { xIntegral = val;}
     758:	cf 93       	push	r28
     75a:	df 93       	push	r29
     75c:	00 d0       	rcall	.+0      	; 0x75e <_ZN10helicopter5model11SystemModel9XIntegralEf+0x6>
     75e:	00 d0       	rcall	.+0      	; 0x760 <_ZN10helicopter5model11SystemModel9XIntegralEf+0x8>
     760:	cd b7       	in	r28, 0x3d	; 61
     762:	de b7       	in	r29, 0x3e	; 62
     764:	9a 83       	std	Y+2, r25	; 0x02
     766:	89 83       	std	Y+1, r24	; 0x01
     768:	4b 83       	std	Y+3, r20	; 0x03
     76a:	5c 83       	std	Y+4, r21	; 0x04
     76c:	6d 83       	std	Y+5, r22	; 0x05
     76e:	7e 83       	std	Y+6, r23	; 0x06
     770:	89 81       	ldd	r24, Y+1	; 0x01
     772:	9a 81       	ldd	r25, Y+2	; 0x02
     774:	9c 01       	movw	r18, r24
     776:	2c 5b       	subi	r18, 0xBC	; 188
     778:	3f 4f       	sbci	r19, 0xFF	; 255
     77a:	8b 81       	ldd	r24, Y+3	; 0x03
     77c:	9c 81       	ldd	r25, Y+4	; 0x04
     77e:	ad 81       	ldd	r26, Y+5	; 0x05
     780:	be 81       	ldd	r27, Y+6	; 0x06
     782:	f9 01       	movw	r30, r18
     784:	80 83       	st	Z, r24
     786:	91 83       	std	Z+1, r25	; 0x01
     788:	a2 83       	std	Z+2, r26	; 0x02
     78a:	b3 83       	std	Z+3, r27	; 0x03
     78c:	26 96       	adiw	r28, 0x06	; 6
     78e:	0f b6       	in	r0, 0x3f	; 63
     790:	f8 94       	cli
     792:	de bf       	out	0x3e, r29	; 62
     794:	0f be       	out	0x3f, r0	; 63
     796:	cd bf       	out	0x3d, r28	; 61
     798:	df 91       	pop	r29
     79a:	cf 91       	pop	r28
     79c:	08 95       	ret

0000079e <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf>:
				
			float XDerivativeError() const {return xDerivativeError;}
			void XDerivativeError(float val) { xDerivativeError = val;}
     79e:	cf 93       	push	r28
     7a0:	df 93       	push	r29
     7a2:	00 d0       	rcall	.+0      	; 0x7a4 <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf+0x6>
     7a4:	00 d0       	rcall	.+0      	; 0x7a6 <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf+0x8>
     7a6:	cd b7       	in	r28, 0x3d	; 61
     7a8:	de b7       	in	r29, 0x3e	; 62
     7aa:	9a 83       	std	Y+2, r25	; 0x02
     7ac:	89 83       	std	Y+1, r24	; 0x01
     7ae:	4b 83       	std	Y+3, r20	; 0x03
     7b0:	5c 83       	std	Y+4, r21	; 0x04
     7b2:	6d 83       	std	Y+5, r22	; 0x05
     7b4:	7e 83       	std	Y+6, r23	; 0x06
     7b6:	89 81       	ldd	r24, Y+1	; 0x01
     7b8:	9a 81       	ldd	r25, Y+2	; 0x02
     7ba:	9c 01       	movw	r18, r24
     7bc:	28 5b       	subi	r18, 0xB8	; 184
     7be:	3f 4f       	sbci	r19, 0xFF	; 255
     7c0:	8b 81       	ldd	r24, Y+3	; 0x03
     7c2:	9c 81       	ldd	r25, Y+4	; 0x04
     7c4:	ad 81       	ldd	r26, Y+5	; 0x05
     7c6:	be 81       	ldd	r27, Y+6	; 0x06
     7c8:	f9 01       	movw	r30, r18
     7ca:	80 83       	st	Z, r24
     7cc:	91 83       	std	Z+1, r25	; 0x01
     7ce:	a2 83       	std	Z+2, r26	; 0x02
     7d0:	b3 83       	std	Z+3, r27	; 0x03
     7d2:	26 96       	adiw	r28, 0x06	; 6
     7d4:	0f b6       	in	r0, 0x3f	; 63
     7d6:	f8 94       	cli
     7d8:	de bf       	out	0x3e, r29	; 62
     7da:	0f be       	out	0x3f, r0	; 63
     7dc:	cd bf       	out	0x3d, r28	; 61
     7de:	df 91       	pop	r29
     7e0:	cf 91       	pop	r28
     7e2:	08 95       	ret

000007e4 <_ZNK10helicopter5model11SystemModel17ThetaPitchDegreesEv>:
				
		
			float ThetaPitchDegrees() const {return thetaPitchDegrees;}
     7e4:	cf 93       	push	r28
     7e6:	df 93       	push	r29
     7e8:	1f 92       	push	r1
     7ea:	1f 92       	push	r1
     7ec:	cd b7       	in	r28, 0x3d	; 61
     7ee:	de b7       	in	r29, 0x3e	; 62
     7f0:	9a 83       	std	Y+2, r25	; 0x02
     7f2:	89 83       	std	Y+1, r24	; 0x01
     7f4:	89 81       	ldd	r24, Y+1	; 0x01
     7f6:	9a 81       	ldd	r25, Y+2	; 0x02
     7f8:	84 5b       	subi	r24, 0xB4	; 180
     7fa:	9f 4f       	sbci	r25, 0xFF	; 255
     7fc:	fc 01       	movw	r30, r24
     7fe:	80 81       	ld	r24, Z
     800:	91 81       	ldd	r25, Z+1	; 0x01
     802:	a2 81       	ldd	r26, Z+2	; 0x02
     804:	b3 81       	ldd	r27, Z+3	; 0x03
     806:	bc 01       	movw	r22, r24
     808:	cd 01       	movw	r24, r26
     80a:	0f 90       	pop	r0
     80c:	0f 90       	pop	r0
     80e:	df 91       	pop	r29
     810:	cf 91       	pop	r28
     812:	08 95       	ret

00000814 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>:
						
						
						


			float YNEDBodyFrame() const {return yNEDBodyFrame;}
     814:	cf 93       	push	r28
     816:	df 93       	push	r29
     818:	1f 92       	push	r1
     81a:	1f 92       	push	r1
     81c:	cd b7       	in	r28, 0x3d	; 61
     81e:	de b7       	in	r29, 0x3e	; 62
     820:	9a 83       	std	Y+2, r25	; 0x02
     822:	89 83       	std	Y+1, r24	; 0x01
     824:	89 81       	ldd	r24, Y+1	; 0x01
     826:	9a 81       	ldd	r25, Y+2	; 0x02
     828:	80 5b       	subi	r24, 0xB0	; 176
     82a:	9f 4f       	sbci	r25, 0xFF	; 255
     82c:	fc 01       	movw	r30, r24
     82e:	80 81       	ld	r24, Z
     830:	91 81       	ldd	r25, Z+1	; 0x01
     832:	a2 81       	ldd	r26, Z+2	; 0x02
     834:	b3 81       	ldd	r27, Z+3	; 0x03
     836:	bc 01       	movw	r22, r24
     838:	cd 01       	movw	r24, r26
     83a:	0f 90       	pop	r0
     83c:	0f 90       	pop	r0
     83e:	df 91       	pop	r29
     840:	cf 91       	pop	r28
     842:	08 95       	ret

00000844 <_ZNK10helicopter5model11SystemModel14LateralControlEv>:
			void ReferenceYNEDBodyFrame(float val) { referenceYNEDBodyFrame = val;}

			float LateralControlBeforeServoLimitsAdjustment() const {return lateralControlBeforeServoLimitsAdjustment;}
			void LateralControlBeforeServoLimitsAdjustment(float val) { lateralControlBeforeServoLimitsAdjustment = val;}

			float LateralControl() const {return lateralControl;}
     844:	cf 93       	push	r28
     846:	df 93       	push	r29
     848:	1f 92       	push	r1
     84a:	1f 92       	push	r1
     84c:	cd b7       	in	r28, 0x3d	; 61
     84e:	de b7       	in	r29, 0x3e	; 62
     850:	9a 83       	std	Y+2, r25	; 0x02
     852:	89 83       	std	Y+1, r24	; 0x01
     854:	89 81       	ldd	r24, Y+1	; 0x01
     856:	9a 81       	ldd	r25, Y+2	; 0x02
     858:	84 5a       	subi	r24, 0xA4	; 164
     85a:	9f 4f       	sbci	r25, 0xFF	; 255
     85c:	fc 01       	movw	r30, r24
     85e:	80 81       	ld	r24, Z
     860:	91 81       	ldd	r25, Z+1	; 0x01
     862:	a2 81       	ldd	r26, Z+2	; 0x02
     864:	b3 81       	ldd	r27, Z+3	; 0x03
     866:	bc 01       	movw	r22, r24
     868:	cd 01       	movw	r24, r26
     86a:	0f 90       	pop	r0
     86c:	0f 90       	pop	r0
     86e:	df 91       	pop	r29
     870:	cf 91       	pop	r28
     872:	08 95       	ret

00000874 <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>:
			void LateralControl(float val) { lateralControl = val;}

			float YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
     874:	cf 93       	push	r28
     876:	df 93       	push	r29
     878:	1f 92       	push	r1
     87a:	1f 92       	push	r1
     87c:	cd b7       	in	r28, 0x3d	; 61
     87e:	de b7       	in	r29, 0x3e	; 62
     880:	9a 83       	std	Y+2, r25	; 0x02
     882:	89 83       	std	Y+1, r24	; 0x01
     884:	89 81       	ldd	r24, Y+1	; 0x01
     886:	9a 81       	ldd	r25, Y+2	; 0x02
     888:	80 5a       	subi	r24, 0xA0	; 160
     88a:	9f 4f       	sbci	r25, 0xFF	; 255
     88c:	fc 01       	movw	r30, r24
     88e:	80 81       	ld	r24, Z
     890:	91 81       	ldd	r25, Z+1	; 0x01
     892:	a2 81       	ldd	r26, Z+2	; 0x02
     894:	b3 81       	ldd	r27, Z+3	; 0x03
     896:	bc 01       	movw	r22, r24
     898:	cd 01       	movw	r24, r26
     89a:	0f 90       	pop	r0
     89c:	0f 90       	pop	r0
     89e:	df 91       	pop	r29
     8a0:	cf 91       	pop	r28
     8a2:	08 95       	ret

000008a4 <_ZNK10helicopter5model11SystemModel9YIntegralEv>:
			void YLateralOuterLoopControl(float val) { yLateralOuterLoopControl = val;}

			float YProportional() const {return yProportional;}
			void YProportional(float val) { yProportional = val;}

			float YIntegral() const {return yIntegral;}
     8a4:	cf 93       	push	r28
     8a6:	df 93       	push	r29
     8a8:	1f 92       	push	r1
     8aa:	1f 92       	push	r1
     8ac:	cd b7       	in	r28, 0x3d	; 61
     8ae:	de b7       	in	r29, 0x3e	; 62
     8b0:	9a 83       	std	Y+2, r25	; 0x02
     8b2:	89 83       	std	Y+1, r24	; 0x01
     8b4:	89 81       	ldd	r24, Y+1	; 0x01
     8b6:	9a 81       	ldd	r25, Y+2	; 0x02
     8b8:	80 59       	subi	r24, 0x90	; 144
     8ba:	9f 4f       	sbci	r25, 0xFF	; 255
     8bc:	fc 01       	movw	r30, r24
     8be:	80 81       	ld	r24, Z
     8c0:	91 81       	ldd	r25, Z+1	; 0x01
     8c2:	a2 81       	ldd	r26, Z+2	; 0x02
     8c4:	b3 81       	ldd	r27, Z+3	; 0x03
     8c6:	bc 01       	movw	r22, r24
     8c8:	cd 01       	movw	r24, r26
     8ca:	0f 90       	pop	r0
     8cc:	0f 90       	pop	r0
     8ce:	df 91       	pop	r29
     8d0:	cf 91       	pop	r28
     8d2:	08 95       	ret

000008d4 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>:
						
						
						
						

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
     8d4:	cf 93       	push	r28
     8d6:	df 93       	push	r29
     8d8:	1f 92       	push	r1
     8da:	1f 92       	push	r1
     8dc:	cd b7       	in	r28, 0x3d	; 61
     8de:	de b7       	in	r29, 0x3e	; 62
     8e0:	9a 83       	std	Y+2, r25	; 0x02
     8e2:	89 83       	std	Y+1, r24	; 0x01
     8e4:	89 81       	ldd	r24, Y+1	; 0x01
     8e6:	9a 81       	ldd	r25, Y+2	; 0x02
     8e8:	84 58       	subi	r24, 0x84	; 132
     8ea:	9f 4f       	sbci	r25, 0xFF	; 255
     8ec:	fc 01       	movw	r30, r24
     8ee:	80 81       	ld	r24, Z
     8f0:	91 81       	ldd	r25, Z+1	; 0x01
     8f2:	a2 81       	ldd	r26, Z+2	; 0x02
     8f4:	b3 81       	ldd	r27, Z+3	; 0x03
     8f6:	bc 01       	movw	r22, r24
     8f8:	cd 01       	movw	r24, r26
     8fa:	0f 90       	pop	r0
     8fc:	0f 90       	pop	r0
     8fe:	df 91       	pop	r29
     900:	cf 91       	pop	r28
     902:	08 95       	ret

00000904 <_ZNK10helicopter5model11SystemModel21ReferenceAltitudeFeetEv>:

			float ZNEDBodyFrame() const { return zNEDBodyFrame; }
			void ZNEDBodyFrame(float val) { zNEDBodyFrame = val; }


			float ReferenceAltitudeFeet() const {return referenceAltitudeFeet;}
     904:	cf 93       	push	r28
     906:	df 93       	push	r29
     908:	1f 92       	push	r1
     90a:	1f 92       	push	r1
     90c:	cd b7       	in	r28, 0x3d	; 61
     90e:	de b7       	in	r29, 0x3e	; 62
     910:	9a 83       	std	Y+2, r25	; 0x02
     912:	89 83       	std	Y+1, r24	; 0x01
     914:	89 81       	ldd	r24, Y+1	; 0x01
     916:	9a 81       	ldd	r25, Y+2	; 0x02
     918:	8c 57       	subi	r24, 0x7C	; 124
     91a:	9f 4f       	sbci	r25, 0xFF	; 255
     91c:	fc 01       	movw	r30, r24
     91e:	80 81       	ld	r24, Z
     920:	91 81       	ldd	r25, Z+1	; 0x01
     922:	a2 81       	ldd	r26, Z+2	; 0x02
     924:	b3 81       	ldd	r27, Z+3	; 0x03
     926:	bc 01       	movw	r22, r24
     928:	cd 01       	movw	r24, r26
     92a:	0f 90       	pop	r0
     92c:	0f 90       	pop	r0
     92e:	df 91       	pop	r29
     930:	cf 91       	pop	r28
     932:	08 95       	ret

00000934 <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>:
			void ReferenceAltitudeFeet(float val) { referenceAltitudeFeet = val;}


			float MainRotorCollectiveControl() const {return mainRotorControl;}
     934:	cf 93       	push	r28
     936:	df 93       	push	r29
     938:	1f 92       	push	r1
     93a:	1f 92       	push	r1
     93c:	cd b7       	in	r28, 0x3d	; 61
     93e:	de b7       	in	r29, 0x3e	; 62
     940:	9a 83       	std	Y+2, r25	; 0x02
     942:	89 83       	std	Y+1, r24	; 0x01
     944:	89 81       	ldd	r24, Y+1	; 0x01
     946:	9a 81       	ldd	r25, Y+2	; 0x02
     948:	88 57       	subi	r24, 0x78	; 120
     94a:	9f 4f       	sbci	r25, 0xFF	; 255
     94c:	fc 01       	movw	r30, r24
     94e:	80 81       	ld	r24, Z
     950:	91 81       	ldd	r25, Z+1	; 0x01
     952:	a2 81       	ldd	r26, Z+2	; 0x02
     954:	b3 81       	ldd	r27, Z+3	; 0x03
     956:	bc 01       	movw	r22, r24
     958:	cd 01       	movw	r24, r26
     95a:	0f 90       	pop	r0
     95c:	0f 90       	pop	r0
     95e:	df 91       	pop	r29
     960:	cf 91       	pop	r28
     962:	08 95       	ret

00000964 <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf>:
			void MainRotorCollectiveControl(float val) { mainRotorControl = val;}
     964:	cf 93       	push	r28
     966:	df 93       	push	r29
     968:	00 d0       	rcall	.+0      	; 0x96a <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf+0x6>
     96a:	00 d0       	rcall	.+0      	; 0x96c <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf+0x8>
     96c:	cd b7       	in	r28, 0x3d	; 61
     96e:	de b7       	in	r29, 0x3e	; 62
     970:	9a 83       	std	Y+2, r25	; 0x02
     972:	89 83       	std	Y+1, r24	; 0x01
     974:	4b 83       	std	Y+3, r20	; 0x03
     976:	5c 83       	std	Y+4, r21	; 0x04
     978:	6d 83       	std	Y+5, r22	; 0x05
     97a:	7e 83       	std	Y+6, r23	; 0x06
     97c:	89 81       	ldd	r24, Y+1	; 0x01
     97e:	9a 81       	ldd	r25, Y+2	; 0x02
     980:	9c 01       	movw	r18, r24
     982:	28 57       	subi	r18, 0x78	; 120
     984:	3f 4f       	sbci	r19, 0xFF	; 255
     986:	8b 81       	ldd	r24, Y+3	; 0x03
     988:	9c 81       	ldd	r25, Y+4	; 0x04
     98a:	ad 81       	ldd	r26, Y+5	; 0x05
     98c:	be 81       	ldd	r27, Y+6	; 0x06
     98e:	f9 01       	movw	r30, r18
     990:	80 83       	st	Z, r24
     992:	91 83       	std	Z+1, r25	; 0x01
     994:	a2 83       	std	Z+2, r26	; 0x02
     996:	b3 83       	std	Z+3, r27	; 0x03
     998:	26 96       	adiw	r28, 0x06	; 6
     99a:	0f b6       	in	r0, 0x3f	; 63
     99c:	f8 94       	cli
     99e:	de bf       	out	0x3e, r29	; 62
     9a0:	0f be       	out	0x3f, r0	; 63
     9a2:	cd bf       	out	0x3d, r28	; 61
     9a4:	df 91       	pop	r29
     9a6:	cf 91       	pop	r28
     9a8:	08 95       	ret

000009aa <_ZNK10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEv>:

			float MainRotorControlBeforeServoLimitsAdjustment() const {return mainRotorControlBeforeServoLimitsAdjustment;}
     9aa:	cf 93       	push	r28
     9ac:	df 93       	push	r29
     9ae:	1f 92       	push	r1
     9b0:	1f 92       	push	r1
     9b2:	cd b7       	in	r28, 0x3d	; 61
     9b4:	de b7       	in	r29, 0x3e	; 62
     9b6:	9a 83       	std	Y+2, r25	; 0x02
     9b8:	89 83       	std	Y+1, r24	; 0x01
     9ba:	89 81       	ldd	r24, Y+1	; 0x01
     9bc:	9a 81       	ldd	r25, Y+2	; 0x02
     9be:	84 57       	subi	r24, 0x74	; 116
     9c0:	9f 4f       	sbci	r25, 0xFF	; 255
     9c2:	fc 01       	movw	r30, r24
     9c4:	80 81       	ld	r24, Z
     9c6:	91 81       	ldd	r25, Z+1	; 0x01
     9c8:	a2 81       	ldd	r26, Z+2	; 0x02
     9ca:	b3 81       	ldd	r27, Z+3	; 0x03
     9cc:	bc 01       	movw	r22, r24
     9ce:	cd 01       	movw	r24, r26
     9d0:	0f 90       	pop	r0
     9d2:	0f 90       	pop	r0
     9d4:	df 91       	pop	r29
     9d6:	cf 91       	pop	r28
     9d8:	08 95       	ret

000009da <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf>:
			void MainRotorControlBeforeServoLimitsAdjustment(float val) { mainRotorControlBeforeServoLimitsAdjustment = val;}
     9da:	cf 93       	push	r28
     9dc:	df 93       	push	r29
     9de:	00 d0       	rcall	.+0      	; 0x9e0 <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf+0x6>
     9e0:	00 d0       	rcall	.+0      	; 0x9e2 <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf+0x8>
     9e2:	cd b7       	in	r28, 0x3d	; 61
     9e4:	de b7       	in	r29, 0x3e	; 62
     9e6:	9a 83       	std	Y+2, r25	; 0x02
     9e8:	89 83       	std	Y+1, r24	; 0x01
     9ea:	4b 83       	std	Y+3, r20	; 0x03
     9ec:	5c 83       	std	Y+4, r21	; 0x04
     9ee:	6d 83       	std	Y+5, r22	; 0x05
     9f0:	7e 83       	std	Y+6, r23	; 0x06
     9f2:	89 81       	ldd	r24, Y+1	; 0x01
     9f4:	9a 81       	ldd	r25, Y+2	; 0x02
     9f6:	9c 01       	movw	r18, r24
     9f8:	24 57       	subi	r18, 0x74	; 116
     9fa:	3f 4f       	sbci	r19, 0xFF	; 255
     9fc:	8b 81       	ldd	r24, Y+3	; 0x03
     9fe:	9c 81       	ldd	r25, Y+4	; 0x04
     a00:	ad 81       	ldd	r26, Y+5	; 0x05
     a02:	be 81       	ldd	r27, Y+6	; 0x06
     a04:	f9 01       	movw	r30, r18
     a06:	80 83       	st	Z, r24
     a08:	91 83       	std	Z+1, r25	; 0x01
     a0a:	a2 83       	std	Z+2, r26	; 0x02
     a0c:	b3 83       	std	Z+3, r27	; 0x03
     a0e:	26 96       	adiw	r28, 0x06	; 6
     a10:	0f b6       	in	r0, 0x3f	; 63
     a12:	f8 94       	cli
     a14:	de bf       	out	0x3e, r29	; 62
     a16:	0f be       	out	0x3f, r0	; 63
     a18:	cd bf       	out	0x3d, r28	; 61
     a1a:	df 91       	pop	r29
     a1c:	cf 91       	pop	r28
     a1e:	08 95       	ret

00000a20 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>:

			float ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
     a20:	cf 93       	push	r28
     a22:	df 93       	push	r29
     a24:	1f 92       	push	r1
     a26:	1f 92       	push	r1
     a28:	cd b7       	in	r28, 0x3d	; 61
     a2a:	de b7       	in	r29, 0x3e	; 62
     a2c:	9a 83       	std	Y+2, r25	; 0x02
     a2e:	89 83       	std	Y+1, r24	; 0x01
     a30:	89 81       	ldd	r24, Y+1	; 0x01
     a32:	9a 81       	ldd	r25, Y+2	; 0x02
     a34:	80 57       	subi	r24, 0x70	; 112
     a36:	9f 4f       	sbci	r25, 0xFF	; 255
     a38:	fc 01       	movw	r30, r24
     a3a:	80 81       	ld	r24, Z
     a3c:	91 81       	ldd	r25, Z+1	; 0x01
     a3e:	a2 81       	ldd	r26, Z+2	; 0x02
     a40:	b3 81       	ldd	r27, Z+3	; 0x03
     a42:	bc 01       	movw	r22, r24
     a44:	cd 01       	movw	r24, r26
     a46:	0f 90       	pop	r0
     a48:	0f 90       	pop	r0
     a4a:	df 91       	pop	r29
     a4c:	cf 91       	pop	r28
     a4e:	08 95       	ret

00000a50 <_ZNK10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEv>:
			void ZVelocityFeetPerSecond(float val) { zVelocityFeetPerSecond = val;}

			float ReferenceZVelocityFeetPerSecond() const {return referenceZVelocityFeetPerSecond;}
     a50:	cf 93       	push	r28
     a52:	df 93       	push	r29
     a54:	1f 92       	push	r1
     a56:	1f 92       	push	r1
     a58:	cd b7       	in	r28, 0x3d	; 61
     a5a:	de b7       	in	r29, 0x3e	; 62
     a5c:	9a 83       	std	Y+2, r25	; 0x02
     a5e:	89 83       	std	Y+1, r24	; 0x01
     a60:	89 81       	ldd	r24, Y+1	; 0x01
     a62:	9a 81       	ldd	r25, Y+2	; 0x02
     a64:	8c 56       	subi	r24, 0x6C	; 108
     a66:	9f 4f       	sbci	r25, 0xFF	; 255
     a68:	fc 01       	movw	r30, r24
     a6a:	80 81       	ld	r24, Z
     a6c:	91 81       	ldd	r25, Z+1	; 0x01
     a6e:	a2 81       	ldd	r26, Z+2	; 0x02
     a70:	b3 81       	ldd	r27, Z+3	; 0x03
     a72:	bc 01       	movw	r22, r24
     a74:	cd 01       	movw	r24, r26
     a76:	0f 90       	pop	r0
     a78:	0f 90       	pop	r0
     a7a:	df 91       	pop	r29
     a7c:	cf 91       	pop	r28
     a7e:	08 95       	ret

00000a80 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>:
			void ReferenceZVelocityFeetPerSecond(float val) { referenceZVelocityFeetPerSecond = val;}

			float ZIntegral() const {return zIntegral;}
     a80:	cf 93       	push	r28
     a82:	df 93       	push	r29
     a84:	1f 92       	push	r1
     a86:	1f 92       	push	r1
     a88:	cd b7       	in	r28, 0x3d	; 61
     a8a:	de b7       	in	r29, 0x3e	; 62
     a8c:	9a 83       	std	Y+2, r25	; 0x02
     a8e:	89 83       	std	Y+1, r24	; 0x01
     a90:	89 81       	ldd	r24, Y+1	; 0x01
     a92:	9a 81       	ldd	r25, Y+2	; 0x02
     a94:	88 56       	subi	r24, 0x68	; 104
     a96:	9f 4f       	sbci	r25, 0xFF	; 255
     a98:	fc 01       	movw	r30, r24
     a9a:	80 81       	ld	r24, Z
     a9c:	91 81       	ldd	r25, Z+1	; 0x01
     a9e:	a2 81       	ldd	r26, Z+2	; 0x02
     aa0:	b3 81       	ldd	r27, Z+3	; 0x03
     aa2:	bc 01       	movw	r22, r24
     aa4:	cd 01       	movw	r24, r26
     aa6:	0f 90       	pop	r0
     aa8:	0f 90       	pop	r0
     aaa:	df 91       	pop	r29
     aac:	cf 91       	pop	r28
     aae:	08 95       	ret

00000ab0 <_ZN10helicopter5model11SystemModel9ZIntegralEf>:
			void ZIntegral(float val) { zIntegral = val;}
     ab0:	cf 93       	push	r28
     ab2:	df 93       	push	r29
     ab4:	00 d0       	rcall	.+0      	; 0xab6 <_ZN10helicopter5model11SystemModel9ZIntegralEf+0x6>
     ab6:	00 d0       	rcall	.+0      	; 0xab8 <_ZN10helicopter5model11SystemModel9ZIntegralEf+0x8>
     ab8:	cd b7       	in	r28, 0x3d	; 61
     aba:	de b7       	in	r29, 0x3e	; 62
     abc:	9a 83       	std	Y+2, r25	; 0x02
     abe:	89 83       	std	Y+1, r24	; 0x01
     ac0:	4b 83       	std	Y+3, r20	; 0x03
     ac2:	5c 83       	std	Y+4, r21	; 0x04
     ac4:	6d 83       	std	Y+5, r22	; 0x05
     ac6:	7e 83       	std	Y+6, r23	; 0x06
     ac8:	89 81       	ldd	r24, Y+1	; 0x01
     aca:	9a 81       	ldd	r25, Y+2	; 0x02
     acc:	9c 01       	movw	r18, r24
     ace:	28 56       	subi	r18, 0x68	; 104
     ad0:	3f 4f       	sbci	r19, 0xFF	; 255
     ad2:	8b 81       	ldd	r24, Y+3	; 0x03
     ad4:	9c 81       	ldd	r25, Y+4	; 0x04
     ad6:	ad 81       	ldd	r26, Y+5	; 0x05
     ad8:	be 81       	ldd	r27, Y+6	; 0x06
     ada:	f9 01       	movw	r30, r18
     adc:	80 83       	st	Z, r24
     ade:	91 83       	std	Z+1, r25	; 0x01
     ae0:	a2 83       	std	Z+2, r26	; 0x02
     ae2:	b3 83       	std	Z+3, r27	; 0x03
     ae4:	26 96       	adiw	r28, 0x06	; 6
     ae6:	0f b6       	in	r0, 0x3f	; 63
     ae8:	f8 94       	cli
     aea:	de bf       	out	0x3e, r29	; 62
     aec:	0f be       	out	0x3f, r0	; 63
     aee:	cd bf       	out	0x3d, r28	; 61
     af0:	df 91       	pop	r29
     af2:	cf 91       	pop	r28
     af4:	08 95       	ret

00000af6 <_ZN10helicopter5model11SystemModel13ZProportionalEf>:

			float ZProportional() const {return zProportional;}
			void ZProportional(float val) { zProportional = val;}
     af6:	cf 93       	push	r28
     af8:	df 93       	push	r29
     afa:	00 d0       	rcall	.+0      	; 0xafc <_ZN10helicopter5model11SystemModel13ZProportionalEf+0x6>
     afc:	00 d0       	rcall	.+0      	; 0xafe <_ZN10helicopter5model11SystemModel13ZProportionalEf+0x8>
     afe:	cd b7       	in	r28, 0x3d	; 61
     b00:	de b7       	in	r29, 0x3e	; 62
     b02:	9a 83       	std	Y+2, r25	; 0x02
     b04:	89 83       	std	Y+1, r24	; 0x01
     b06:	4b 83       	std	Y+3, r20	; 0x03
     b08:	5c 83       	std	Y+4, r21	; 0x04
     b0a:	6d 83       	std	Y+5, r22	; 0x05
     b0c:	7e 83       	std	Y+6, r23	; 0x06
     b0e:	89 81       	ldd	r24, Y+1	; 0x01
     b10:	9a 81       	ldd	r25, Y+2	; 0x02
     b12:	9c 01       	movw	r18, r24
     b14:	24 56       	subi	r18, 0x64	; 100
     b16:	3f 4f       	sbci	r19, 0xFF	; 255
     b18:	8b 81       	ldd	r24, Y+3	; 0x03
     b1a:	9c 81       	ldd	r25, Y+4	; 0x04
     b1c:	ad 81       	ldd	r26, Y+5	; 0x05
     b1e:	be 81       	ldd	r27, Y+6	; 0x06
     b20:	f9 01       	movw	r30, r18
     b22:	80 83       	st	Z, r24
     b24:	91 83       	std	Z+1, r25	; 0x01
     b26:	a2 83       	std	Z+2, r26	; 0x02
     b28:	b3 83       	std	Z+3, r27	; 0x03
     b2a:	26 96       	adiw	r28, 0x06	; 6
     b2c:	0f b6       	in	r0, 0x3f	; 63
     b2e:	f8 94       	cli
     b30:	de bf       	out	0x3e, r29	; 62
     b32:	0f be       	out	0x3f, r0	; 63
     b34:	cd bf       	out	0x3d, r28	; 61
     b36:	df 91       	pop	r29
     b38:	cf 91       	pop	r28
     b3a:	08 95       	ret

00000b3c <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf>:

			float ZDerivativeError() const {return zDerivativeError;}
			void ZDerivativeError(float val) { zDerivativeError = val;}						
     b3c:	cf 93       	push	r28
     b3e:	df 93       	push	r29
     b40:	00 d0       	rcall	.+0      	; 0xb42 <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf+0x6>
     b42:	00 d0       	rcall	.+0      	; 0xb44 <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf+0x8>
     b44:	cd b7       	in	r28, 0x3d	; 61
     b46:	de b7       	in	r29, 0x3e	; 62
     b48:	9a 83       	std	Y+2, r25	; 0x02
     b4a:	89 83       	std	Y+1, r24	; 0x01
     b4c:	4b 83       	std	Y+3, r20	; 0x03
     b4e:	5c 83       	std	Y+4, r21	; 0x04
     b50:	6d 83       	std	Y+5, r22	; 0x05
     b52:	7e 83       	std	Y+6, r23	; 0x06
     b54:	89 81       	ldd	r24, Y+1	; 0x01
     b56:	9a 81       	ldd	r25, Y+2	; 0x02
     b58:	9c 01       	movw	r18, r24
     b5a:	20 56       	subi	r18, 0x60	; 96
     b5c:	3f 4f       	sbci	r19, 0xFF	; 255
     b5e:	8b 81       	ldd	r24, Y+3	; 0x03
     b60:	9c 81       	ldd	r25, Y+4	; 0x04
     b62:	ad 81       	ldd	r26, Y+5	; 0x05
     b64:	be 81       	ldd	r27, Y+6	; 0x06
     b66:	f9 01       	movw	r30, r18
     b68:	80 83       	st	Z, r24
     b6a:	91 83       	std	Z+1, r25	; 0x01
     b6c:	a2 83       	std	Z+2, r26	; 0x02
     b6e:	b3 83       	std	Z+3, r27	; 0x03
     b70:	26 96       	adiw	r28, 0x06	; 6
     b72:	0f b6       	in	r0, 0x3f	; 63
     b74:	f8 94       	cli
     b76:	de bf       	out	0x3e, r29	; 62
     b78:	0f be       	out	0x3f, r0	; 63
     b7a:	cd bf       	out	0x3d, r28	; 61
     b7c:	df 91       	pop	r29
     b7e:	cf 91       	pop	r28
     b80:	08 95       	ret

00000b82 <_ZNK10helicopter5model11SystemModel11BlownFramesEv>:
			void UnrecognizedMsgTypes(long val) { unrecognizedMsgTypes = val; }
			
			long ChecksumErrors() const {return checksumErrors; }
			void ChecksumErrors(long val) { checksumErrors = val; }
			
			long  BlownFrames() const {return numOfFramesBlown;}
     b82:	cf 93       	push	r28
     b84:	df 93       	push	r29
     b86:	1f 92       	push	r1
     b88:	1f 92       	push	r1
     b8a:	cd b7       	in	r28, 0x3d	; 61
     b8c:	de b7       	in	r29, 0x3e	; 62
     b8e:	9a 83       	std	Y+2, r25	; 0x02
     b90:	89 83       	std	Y+1, r24	; 0x01
     b92:	89 81       	ldd	r24, Y+1	; 0x01
     b94:	9a 81       	ldd	r25, Y+2	; 0x02
     b96:	88 54       	subi	r24, 0x48	; 72
     b98:	9f 4f       	sbci	r25, 0xFF	; 255
     b9a:	fc 01       	movw	r30, r24
     b9c:	80 81       	ld	r24, Z
     b9e:	91 81       	ldd	r25, Z+1	; 0x01
     ba0:	a2 81       	ldd	r26, Z+2	; 0x02
     ba2:	b3 81       	ldd	r27, Z+3	; 0x03
     ba4:	bc 01       	movw	r22, r24
     ba6:	cd 01       	movw	r24, r26
     ba8:	0f 90       	pop	r0
     baa:	0f 90       	pop	r0
     bac:	df 91       	pop	r29
     bae:	cf 91       	pop	r28
     bb0:	08 95       	ret

00000bb2 <_ZN10helicopter5model11SystemModel11BlownFramesEl>:
			void BlownFrames( long val ) { numOfFramesBlown = val;}
     bb2:	cf 93       	push	r28
     bb4:	df 93       	push	r29
     bb6:	00 d0       	rcall	.+0      	; 0xbb8 <_ZN10helicopter5model11SystemModel11BlownFramesEl+0x6>
     bb8:	00 d0       	rcall	.+0      	; 0xbba <_ZN10helicopter5model11SystemModel11BlownFramesEl+0x8>
     bba:	cd b7       	in	r28, 0x3d	; 61
     bbc:	de b7       	in	r29, 0x3e	; 62
     bbe:	9a 83       	std	Y+2, r25	; 0x02
     bc0:	89 83       	std	Y+1, r24	; 0x01
     bc2:	4b 83       	std	Y+3, r20	; 0x03
     bc4:	5c 83       	std	Y+4, r21	; 0x04
     bc6:	6d 83       	std	Y+5, r22	; 0x05
     bc8:	7e 83       	std	Y+6, r23	; 0x06
     bca:	89 81       	ldd	r24, Y+1	; 0x01
     bcc:	9a 81       	ldd	r25, Y+2	; 0x02
     bce:	9c 01       	movw	r18, r24
     bd0:	28 54       	subi	r18, 0x48	; 72
     bd2:	3f 4f       	sbci	r19, 0xFF	; 255
     bd4:	8b 81       	ldd	r24, Y+3	; 0x03
     bd6:	9c 81       	ldd	r25, Y+4	; 0x04
     bd8:	ad 81       	ldd	r26, Y+5	; 0x05
     bda:	be 81       	ldd	r27, Y+6	; 0x06
     bdc:	f9 01       	movw	r30, r18
     bde:	80 83       	st	Z, r24
     be0:	91 83       	std	Z+1, r25	; 0x01
     be2:	a2 83       	std	Z+2, r26	; 0x02
     be4:	b3 83       	std	Z+3, r27	; 0x03
     be6:	26 96       	adiw	r28, 0x06	; 6
     be8:	0f b6       	in	r0, 0x3f	; 63
     bea:	f8 94       	cli
     bec:	de bf       	out	0x3e, r29	; 62
     bee:	0f be       	out	0x3f, r0	; 63
     bf0:	cd bf       	out	0x3d, r28	; 61
     bf2:	df 91       	pop	r29
     bf4:	cf 91       	pop	r28
     bf6:	08 95       	ret

00000bf8 <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelEPNS_7drivers11ServoDriverE>:

#include "PIDController.h"

using namespace helicopter::controller;

PIDController::PIDController(SystemModel *model, ServoDriver *servoDriver): 
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
     bfc:	00 d0       	rcall	.+0      	; 0xbfe <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelEPNS_7drivers11ServoDriverE+0x6>
     bfe:	00 d0       	rcall	.+0      	; 0xc00 <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelEPNS_7drivers11ServoDriverE+0x8>
     c00:	cd b7       	in	r28, 0x3d	; 61
     c02:	de b7       	in	r29, 0x3e	; 62
     c04:	9a 83       	std	Y+2, r25	; 0x02
     c06:	89 83       	std	Y+1, r24	; 0x01
     c08:	7c 83       	std	Y+4, r23	; 0x04
     c0a:	6b 83       	std	Y+3, r22	; 0x03
     c0c:	5e 83       	std	Y+6, r21	; 0x06
     c0e:	4d 83       	std	Y+5, r20	; 0x05
minMainRotorServoControlValue(0),
maxMainRotorServoControlValue(0),

intervalPeriodSecs(0),
controlMaxValue(0),
controlMinValue(0)
     c10:	89 81       	ldd	r24, Y+1	; 0x01
     c12:	9a 81       	ldd	r25, Y+2	; 0x02
     c14:	2b 81       	ldd	r18, Y+3	; 0x03
     c16:	3c 81       	ldd	r19, Y+4	; 0x04
     c18:	fc 01       	movw	r30, r24
     c1a:	31 83       	std	Z+1, r19	; 0x01
     c1c:	20 83       	st	Z, r18
     c1e:	89 81       	ldd	r24, Y+1	; 0x01
     c20:	9a 81       	ldd	r25, Y+2	; 0x02
     c22:	2d 81       	ldd	r18, Y+5	; 0x05
     c24:	3e 81       	ldd	r19, Y+6	; 0x06
     c26:	fc 01       	movw	r30, r24
     c28:	33 83       	std	Z+3, r19	; 0x03
     c2a:	22 83       	std	Z+2, r18	; 0x02
     c2c:	89 81       	ldd	r24, Y+1	; 0x01
     c2e:	9a 81       	ldd	r25, Y+2	; 0x02
     c30:	fc 01       	movw	r30, r24
     c32:	14 82       	std	Z+4, r1	; 0x04
     c34:	15 82       	std	Z+5, r1	; 0x05
     c36:	16 82       	std	Z+6, r1	; 0x06
     c38:	17 82       	std	Z+7, r1	; 0x07
     c3a:	89 81       	ldd	r24, Y+1	; 0x01
     c3c:	9a 81       	ldd	r25, Y+2	; 0x02
     c3e:	fc 01       	movw	r30, r24
     c40:	10 86       	std	Z+8, r1	; 0x08
     c42:	11 86       	std	Z+9, r1	; 0x09
     c44:	12 86       	std	Z+10, r1	; 0x0a
     c46:	13 86       	std	Z+11, r1	; 0x0b
     c48:	89 81       	ldd	r24, Y+1	; 0x01
     c4a:	9a 81       	ldd	r25, Y+2	; 0x02
     c4c:	fc 01       	movw	r30, r24
     c4e:	14 86       	std	Z+12, r1	; 0x0c
     c50:	15 86       	std	Z+13, r1	; 0x0d
     c52:	16 86       	std	Z+14, r1	; 0x0e
     c54:	17 86       	std	Z+15, r1	; 0x0f
     c56:	89 81       	ldd	r24, Y+1	; 0x01
     c58:	9a 81       	ldd	r25, Y+2	; 0x02
     c5a:	fc 01       	movw	r30, r24
     c5c:	10 8a       	std	Z+16, r1	; 0x10
     c5e:	11 8a       	std	Z+17, r1	; 0x11
     c60:	12 8a       	std	Z+18, r1	; 0x12
     c62:	13 8a       	std	Z+19, r1	; 0x13
     c64:	89 81       	ldd	r24, Y+1	; 0x01
     c66:	9a 81       	ldd	r25, Y+2	; 0x02
     c68:	fc 01       	movw	r30, r24
     c6a:	14 8a       	std	Z+20, r1	; 0x14
     c6c:	15 8a       	std	Z+21, r1	; 0x15
     c6e:	16 8a       	std	Z+22, r1	; 0x16
     c70:	17 8a       	std	Z+23, r1	; 0x17
     c72:	89 81       	ldd	r24, Y+1	; 0x01
     c74:	9a 81       	ldd	r25, Y+2	; 0x02
     c76:	fc 01       	movw	r30, r24
     c78:	10 8e       	std	Z+24, r1	; 0x18
     c7a:	11 8e       	std	Z+25, r1	; 0x19
     c7c:	12 8e       	std	Z+26, r1	; 0x1a
     c7e:	13 8e       	std	Z+27, r1	; 0x1b
     c80:	89 81       	ldd	r24, Y+1	; 0x01
     c82:	9a 81       	ldd	r25, Y+2	; 0x02
     c84:	fc 01       	movw	r30, r24
     c86:	14 8e       	std	Z+28, r1	; 0x1c
     c88:	15 8e       	std	Z+29, r1	; 0x1d
     c8a:	16 8e       	std	Z+30, r1	; 0x1e
     c8c:	17 8e       	std	Z+31, r1	; 0x1f
     c8e:	89 81       	ldd	r24, Y+1	; 0x01
     c90:	9a 81       	ldd	r25, Y+2	; 0x02
     c92:	fc 01       	movw	r30, r24
     c94:	10 a2       	std	Z+32, r1	; 0x20
     c96:	11 a2       	std	Z+33, r1	; 0x21
     c98:	12 a2       	std	Z+34, r1	; 0x22
     c9a:	13 a2       	std	Z+35, r1	; 0x23
     c9c:	89 81       	ldd	r24, Y+1	; 0x01
     c9e:	9a 81       	ldd	r25, Y+2	; 0x02
     ca0:	fc 01       	movw	r30, r24
     ca2:	14 a2       	std	Z+36, r1	; 0x24
     ca4:	15 a2       	std	Z+37, r1	; 0x25
     ca6:	16 a2       	std	Z+38, r1	; 0x26
     ca8:	17 a2       	std	Z+39, r1	; 0x27
     caa:	89 81       	ldd	r24, Y+1	; 0x01
     cac:	9a 81       	ldd	r25, Y+2	; 0x02
     cae:	fc 01       	movw	r30, r24
     cb0:	10 a6       	std	Z+40, r1	; 0x28
     cb2:	11 a6       	std	Z+41, r1	; 0x29
     cb4:	12 a6       	std	Z+42, r1	; 0x2a
     cb6:	13 a6       	std	Z+43, r1	; 0x2b
     cb8:	89 81       	ldd	r24, Y+1	; 0x01
     cba:	9a 81       	ldd	r25, Y+2	; 0x02
     cbc:	fc 01       	movw	r30, r24
     cbe:	14 a6       	std	Z+44, r1	; 0x2c
     cc0:	15 a6       	std	Z+45, r1	; 0x2d
     cc2:	16 a6       	std	Z+46, r1	; 0x2e
     cc4:	17 a6       	std	Z+47, r1	; 0x2f
     cc6:	89 81       	ldd	r24, Y+1	; 0x01
     cc8:	9a 81       	ldd	r25, Y+2	; 0x02
     cca:	fc 01       	movw	r30, r24
     ccc:	10 aa       	std	Z+48, r1	; 0x30
     cce:	11 aa       	std	Z+49, r1	; 0x31
     cd0:	12 aa       	std	Z+50, r1	; 0x32
     cd2:	13 aa       	std	Z+51, r1	; 0x33
     cd4:	89 81       	ldd	r24, Y+1	; 0x01
     cd6:	9a 81       	ldd	r25, Y+2	; 0x02
     cd8:	fc 01       	movw	r30, r24
     cda:	14 aa       	std	Z+52, r1	; 0x34
     cdc:	15 aa       	std	Z+53, r1	; 0x35
     cde:	16 aa       	std	Z+54, r1	; 0x36
     ce0:	17 aa       	std	Z+55, r1	; 0x37
     ce2:	89 81       	ldd	r24, Y+1	; 0x01
     ce4:	9a 81       	ldd	r25, Y+2	; 0x02
     ce6:	fc 01       	movw	r30, r24
     ce8:	10 ae       	std	Z+56, r1	; 0x38
     cea:	11 ae       	std	Z+57, r1	; 0x39
     cec:	12 ae       	std	Z+58, r1	; 0x3a
     cee:	13 ae       	std	Z+59, r1	; 0x3b
     cf0:	89 81       	ldd	r24, Y+1	; 0x01
     cf2:	9a 81       	ldd	r25, Y+2	; 0x02
     cf4:	fc 01       	movw	r30, r24
     cf6:	14 ae       	std	Z+60, r1	; 0x3c
     cf8:	15 ae       	std	Z+61, r1	; 0x3d
     cfa:	16 ae       	std	Z+62, r1	; 0x3e
     cfc:	17 ae       	std	Z+63, r1	; 0x3f
     cfe:	89 81       	ldd	r24, Y+1	; 0x01
     d00:	9a 81       	ldd	r25, Y+2	; 0x02
     d02:	80 5c       	subi	r24, 0xC0	; 192
     d04:	9f 4f       	sbci	r25, 0xFF	; 255
     d06:	fc 01       	movw	r30, r24
     d08:	10 82       	st	Z, r1
     d0a:	11 82       	std	Z+1, r1	; 0x01
     d0c:	12 82       	std	Z+2, r1	; 0x02
     d0e:	13 82       	std	Z+3, r1	; 0x03
     d10:	89 81       	ldd	r24, Y+1	; 0x01
     d12:	9a 81       	ldd	r25, Y+2	; 0x02
     d14:	8c 5b       	subi	r24, 0xBC	; 188
     d16:	9f 4f       	sbci	r25, 0xFF	; 255
     d18:	fc 01       	movw	r30, r24
     d1a:	10 82       	st	Z, r1
     d1c:	11 82       	std	Z+1, r1	; 0x01
     d1e:	12 82       	std	Z+2, r1	; 0x02
     d20:	13 82       	std	Z+3, r1	; 0x03
     d22:	89 81       	ldd	r24, Y+1	; 0x01
     d24:	9a 81       	ldd	r25, Y+2	; 0x02
     d26:	88 5b       	subi	r24, 0xB8	; 184
     d28:	9f 4f       	sbci	r25, 0xFF	; 255
     d2a:	fc 01       	movw	r30, r24
     d2c:	10 82       	st	Z, r1
     d2e:	11 82       	std	Z+1, r1	; 0x01
     d30:	12 82       	std	Z+2, r1	; 0x02
     d32:	13 82       	std	Z+3, r1	; 0x03
     d34:	89 81       	ldd	r24, Y+1	; 0x01
     d36:	9a 81       	ldd	r25, Y+2	; 0x02
     d38:	84 5b       	subi	r24, 0xB4	; 180
     d3a:	9f 4f       	sbci	r25, 0xFF	; 255
     d3c:	fc 01       	movw	r30, r24
     d3e:	10 82       	st	Z, r1
     d40:	11 82       	std	Z+1, r1	; 0x01
     d42:	12 82       	std	Z+2, r1	; 0x02
     d44:	13 82       	std	Z+3, r1	; 0x03
     d46:	89 81       	ldd	r24, Y+1	; 0x01
     d48:	9a 81       	ldd	r25, Y+2	; 0x02
     d4a:	80 5b       	subi	r24, 0xB0	; 176
     d4c:	9f 4f       	sbci	r25, 0xFF	; 255
     d4e:	fc 01       	movw	r30, r24
     d50:	10 82       	st	Z, r1
     d52:	11 82       	std	Z+1, r1	; 0x01
     d54:	12 82       	std	Z+2, r1	; 0x02
     d56:	13 82       	std	Z+3, r1	; 0x03
     d58:	89 81       	ldd	r24, Y+1	; 0x01
     d5a:	9a 81       	ldd	r25, Y+2	; 0x02
     d5c:	8c 5a       	subi	r24, 0xAC	; 172
     d5e:	9f 4f       	sbci	r25, 0xFF	; 255
     d60:	fc 01       	movw	r30, r24
     d62:	10 82       	st	Z, r1
     d64:	11 82       	std	Z+1, r1	; 0x01
     d66:	12 82       	std	Z+2, r1	; 0x02
     d68:	13 82       	std	Z+3, r1	; 0x03
     d6a:	89 81       	ldd	r24, Y+1	; 0x01
     d6c:	9a 81       	ldd	r25, Y+2	; 0x02
     d6e:	88 5a       	subi	r24, 0xA8	; 168
     d70:	9f 4f       	sbci	r25, 0xFF	; 255
     d72:	fc 01       	movw	r30, r24
     d74:	10 82       	st	Z, r1
     d76:	11 82       	std	Z+1, r1	; 0x01
     d78:	12 82       	std	Z+2, r1	; 0x02
     d7a:	13 82       	std	Z+3, r1	; 0x03
     d7c:	89 81       	ldd	r24, Y+1	; 0x01
     d7e:	9a 81       	ldd	r25, Y+2	; 0x02
     d80:	84 5a       	subi	r24, 0xA4	; 164
     d82:	9f 4f       	sbci	r25, 0xFF	; 255
     d84:	fc 01       	movw	r30, r24
     d86:	10 82       	st	Z, r1
     d88:	11 82       	std	Z+1, r1	; 0x01
     d8a:	12 82       	std	Z+2, r1	; 0x02
     d8c:	13 82       	std	Z+3, r1	; 0x03
     d8e:	89 81       	ldd	r24, Y+1	; 0x01
     d90:	9a 81       	ldd	r25, Y+2	; 0x02
     d92:	80 5a       	subi	r24, 0xA0	; 160
     d94:	9f 4f       	sbci	r25, 0xFF	; 255
     d96:	fc 01       	movw	r30, r24
     d98:	10 82       	st	Z, r1
     d9a:	11 82       	std	Z+1, r1	; 0x01
     d9c:	12 82       	std	Z+2, r1	; 0x02
     d9e:	13 82       	std	Z+3, r1	; 0x03
     da0:	89 81       	ldd	r24, Y+1	; 0x01
     da2:	9a 81       	ldd	r25, Y+2	; 0x02
     da4:	8c 59       	subi	r24, 0x9C	; 156
     da6:	9f 4f       	sbci	r25, 0xFF	; 255
     da8:	fc 01       	movw	r30, r24
     daa:	10 82       	st	Z, r1
     dac:	11 82       	std	Z+1, r1	; 0x01
     dae:	12 82       	std	Z+2, r1	; 0x02
     db0:	13 82       	std	Z+3, r1	; 0x03
     db2:	89 81       	ldd	r24, Y+1	; 0x01
     db4:	9a 81       	ldd	r25, Y+2	; 0x02
     db6:	88 59       	subi	r24, 0x98	; 152
     db8:	9f 4f       	sbci	r25, 0xFF	; 255
     dba:	fc 01       	movw	r30, r24
     dbc:	10 82       	st	Z, r1
     dbe:	11 82       	std	Z+1, r1	; 0x01
     dc0:	12 82       	std	Z+2, r1	; 0x02
     dc2:	13 82       	std	Z+3, r1	; 0x03
     dc4:	89 81       	ldd	r24, Y+1	; 0x01
     dc6:	9a 81       	ldd	r25, Y+2	; 0x02
     dc8:	84 59       	subi	r24, 0x94	; 148
     dca:	9f 4f       	sbci	r25, 0xFF	; 255
     dcc:	fc 01       	movw	r30, r24
     dce:	10 82       	st	Z, r1
     dd0:	11 82       	std	Z+1, r1	; 0x01
     dd2:	12 82       	std	Z+2, r1	; 0x02
     dd4:	13 82       	std	Z+3, r1	; 0x03
     dd6:	89 81       	ldd	r24, Y+1	; 0x01
     dd8:	9a 81       	ldd	r25, Y+2	; 0x02
     dda:	80 59       	subi	r24, 0x90	; 144
     ddc:	9f 4f       	sbci	r25, 0xFF	; 255
     dde:	fc 01       	movw	r30, r24
     de0:	10 82       	st	Z, r1
     de2:	11 82       	std	Z+1, r1	; 0x01
     de4:	12 82       	std	Z+2, r1	; 0x02
     de6:	13 82       	std	Z+3, r1	; 0x03
     de8:	89 81       	ldd	r24, Y+1	; 0x01
     dea:	9a 81       	ldd	r25, Y+2	; 0x02
     dec:	8c 58       	subi	r24, 0x8C	; 140
     dee:	9f 4f       	sbci	r25, 0xFF	; 255
     df0:	fc 01       	movw	r30, r24
     df2:	10 82       	st	Z, r1
     df4:	11 82       	std	Z+1, r1	; 0x01
     df6:	12 82       	std	Z+2, r1	; 0x02
     df8:	13 82       	std	Z+3, r1	; 0x03
{
	
}
     dfa:	26 96       	adiw	r28, 0x06	; 6
     dfc:	0f b6       	in	r0, 0x3f	; 63
     dfe:	f8 94       	cli
     e00:	de bf       	out	0x3e, r29	; 62
     e02:	0f be       	out	0x3f, r0	; 63
     e04:	cd bf       	out	0x3d, r28	; 61
     e06:	df 91       	pop	r29
     e08:	cf 91       	pop	r28
     e0a:	08 95       	ret

00000e0c <_ZN10helicopter10controller13PIDController21calculateProportionalEff>:
{
	delete model;
}

float PIDController::calculateProportional(float currentValue, float referenceValue)
{
     e0c:	0f 93       	push	r16
     e0e:	1f 93       	push	r17
     e10:	cf 93       	push	r28
     e12:	df 93       	push	r29
     e14:	cd b7       	in	r28, 0x3d	; 61
     e16:	de b7       	in	r29, 0x3e	; 62
     e18:	2a 97       	sbiw	r28, 0x0a	; 10
     e1a:	0f b6       	in	r0, 0x3f	; 63
     e1c:	f8 94       	cli
     e1e:	de bf       	out	0x3e, r29	; 62
     e20:	0f be       	out	0x3f, r0	; 63
     e22:	cd bf       	out	0x3d, r28	; 61
     e24:	9a 83       	std	Y+2, r25	; 0x02
     e26:	89 83       	std	Y+1, r24	; 0x01
     e28:	4b 83       	std	Y+3, r20	; 0x03
     e2a:	5c 83       	std	Y+4, r21	; 0x04
     e2c:	6d 83       	std	Y+5, r22	; 0x05
     e2e:	7e 83       	std	Y+6, r23	; 0x06
     e30:	0f 83       	std	Y+7, r16	; 0x07
     e32:	18 87       	std	Y+8, r17	; 0x08
     e34:	29 87       	std	Y+9, r18	; 0x09
     e36:	3a 87       	std	Y+10, r19	; 0x0a
	return currentValue - referenceValue;
     e38:	2f 81       	ldd	r18, Y+7	; 0x07
     e3a:	38 85       	ldd	r19, Y+8	; 0x08
     e3c:	49 85       	ldd	r20, Y+9	; 0x09
     e3e:	5a 85       	ldd	r21, Y+10	; 0x0a
     e40:	6b 81       	ldd	r22, Y+3	; 0x03
     e42:	7c 81       	ldd	r23, Y+4	; 0x04
     e44:	8d 81       	ldd	r24, Y+5	; 0x05
     e46:	9e 81       	ldd	r25, Y+6	; 0x06
     e48:	0e 94 13 3e 	call	0x7c26	; 0x7c26 <__subsf3>
     e4c:	dc 01       	movw	r26, r24
     e4e:	cb 01       	movw	r24, r22
}
     e50:	bc 01       	movw	r22, r24
     e52:	cd 01       	movw	r24, r26
     e54:	2a 96       	adiw	r28, 0x0a	; 10
     e56:	0f b6       	in	r0, 0x3f	; 63
     e58:	f8 94       	cli
     e5a:	de bf       	out	0x3e, r29	; 62
     e5c:	0f be       	out	0x3f, r0	; 63
     e5e:	cd bf       	out	0x3d, r28	; 61
     e60:	df 91       	pop	r29
     e62:	cf 91       	pop	r28
     e64:	1f 91       	pop	r17
     e66:	0f 91       	pop	r16
     e68:	08 95       	ret

00000e6a <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>:


//TODO refactor to make this common for all PID calculations. I'll want to include the specific
//variables max values as parameters so I can 'generalize' it.
float PIDController::calculateIntegralAntiWindup(float oldControlPreServoAdj, float oldControl, float antiWindupGain)
{
     e6a:	cf 92       	push	r12
     e6c:	df 92       	push	r13
     e6e:	ef 92       	push	r14
     e70:	ff 92       	push	r15
     e72:	0f 93       	push	r16
     e74:	1f 93       	push	r17
     e76:	cf 93       	push	r28
     e78:	df 93       	push	r29
     e7a:	cd b7       	in	r28, 0x3d	; 61
     e7c:	de b7       	in	r29, 0x3e	; 62
     e7e:	62 97       	sbiw	r28, 0x12	; 18
     e80:	0f b6       	in	r0, 0x3f	; 63
     e82:	f8 94       	cli
     e84:	de bf       	out	0x3e, r29	; 62
     e86:	0f be       	out	0x3f, r0	; 63
     e88:	cd bf       	out	0x3d, r28	; 61
     e8a:	9e 83       	std	Y+6, r25	; 0x06
     e8c:	8d 83       	std	Y+5, r24	; 0x05
     e8e:	4f 83       	std	Y+7, r20	; 0x07
     e90:	58 87       	std	Y+8, r21	; 0x08
     e92:	69 87       	std	Y+9, r22	; 0x09
     e94:	7a 87       	std	Y+10, r23	; 0x0a
     e96:	0b 87       	std	Y+11, r16	; 0x0b
     e98:	1c 87       	std	Y+12, r17	; 0x0c
     e9a:	2d 87       	std	Y+13, r18	; 0x0d
     e9c:	3e 87       	std	Y+14, r19	; 0x0e
     e9e:	cf 86       	std	Y+15, r12	; 0x0f
     ea0:	d8 8a       	std	Y+16, r13	; 0x10
     ea2:	e9 8a       	std	Y+17, r14	; 0x11
     ea4:	fa 8a       	std	Y+18, r15	; 0x12
	float antiWindup = 0;
     ea6:	19 82       	std	Y+1, r1	; 0x01
     ea8:	1a 82       	std	Y+2, r1	; 0x02
     eaa:	1b 82       	std	Y+3, r1	; 0x03
     eac:	1c 82       	std	Y+4, r1	; 0x04
	
	antiWindup = antiWindupGain * (oldControlPreServoAdj - oldControl);
     eae:	2b 85       	ldd	r18, Y+11	; 0x0b
     eb0:	3c 85       	ldd	r19, Y+12	; 0x0c
     eb2:	4d 85       	ldd	r20, Y+13	; 0x0d
     eb4:	5e 85       	ldd	r21, Y+14	; 0x0e
     eb6:	6f 81       	ldd	r22, Y+7	; 0x07
     eb8:	78 85       	ldd	r23, Y+8	; 0x08
     eba:	89 85       	ldd	r24, Y+9	; 0x09
     ebc:	9a 85       	ldd	r25, Y+10	; 0x0a
     ebe:	0e 94 13 3e 	call	0x7c26	; 0x7c26 <__subsf3>
     ec2:	dc 01       	movw	r26, r24
     ec4:	cb 01       	movw	r24, r22
     ec6:	2f 85       	ldd	r18, Y+15	; 0x0f
     ec8:	38 89       	ldd	r19, Y+16	; 0x10
     eca:	49 89       	ldd	r20, Y+17	; 0x11
     ecc:	5a 89       	ldd	r21, Y+18	; 0x12
     ece:	bc 01       	movw	r22, r24
     ed0:	cd 01       	movw	r24, r26
     ed2:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
     ed6:	dc 01       	movw	r26, r24
     ed8:	cb 01       	movw	r24, r22
     eda:	89 83       	std	Y+1, r24	; 0x01
     edc:	9a 83       	std	Y+2, r25	; 0x02
     ede:	ab 83       	std	Y+3, r26	; 0x03
     ee0:	bc 83       	std	Y+4, r27	; 0x04
	{
		antiWindup = yawAntiWindupGain * (oldYawControlValue - minYawServoControlValue);
	}
	*/
	
	return antiWindup;
     ee2:	89 81       	ldd	r24, Y+1	; 0x01
     ee4:	9a 81       	ldd	r25, Y+2	; 0x02
     ee6:	ab 81       	ldd	r26, Y+3	; 0x03
     ee8:	bc 81       	ldd	r27, Y+4	; 0x04
}
     eea:	bc 01       	movw	r22, r24
     eec:	cd 01       	movw	r24, r26
     eee:	62 96       	adiw	r28, 0x12	; 18
     ef0:	0f b6       	in	r0, 0x3f	; 63
     ef2:	f8 94       	cli
     ef4:	de bf       	out	0x3e, r29	; 62
     ef6:	0f be       	out	0x3f, r0	; 63
     ef8:	cd bf       	out	0x3d, r28	; 61
     efa:	df 91       	pop	r29
     efc:	cf 91       	pop	r28
     efe:	1f 91       	pop	r17
     f00:	0f 91       	pop	r16
     f02:	ff 90       	pop	r15
     f04:	ef 90       	pop	r14
     f06:	df 90       	pop	r13
     f08:	cf 90       	pop	r12
     f0a:	08 95       	ret

00000f0c <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>:

/**
 * Anti-windup algorithm provided by Control Systems Design by Karl Johan Astrom 2002. chapter 6
 */
float PIDController::calculateIntegral(float proportional, float oldIntegral, float antiWindup, float integralGain)
{
     f0c:	8f 92       	push	r8
     f0e:	9f 92       	push	r9
     f10:	af 92       	push	r10
     f12:	bf 92       	push	r11
     f14:	cf 92       	push	r12
     f16:	df 92       	push	r13
     f18:	ef 92       	push	r14
     f1a:	ff 92       	push	r15
     f1c:	0f 93       	push	r16
     f1e:	1f 93       	push	r17
     f20:	cf 93       	push	r28
     f22:	df 93       	push	r29
     f24:	cd b7       	in	r28, 0x3d	; 61
     f26:	de b7       	in	r29, 0x3e	; 62
     f28:	66 97       	sbiw	r28, 0x16	; 22
     f2a:	0f b6       	in	r0, 0x3f	; 63
     f2c:	f8 94       	cli
     f2e:	de bf       	out	0x3e, r29	; 62
     f30:	0f be       	out	0x3f, r0	; 63
     f32:	cd bf       	out	0x3d, r28	; 61
     f34:	9e 83       	std	Y+6, r25	; 0x06
     f36:	8d 83       	std	Y+5, r24	; 0x05
     f38:	4f 83       	std	Y+7, r20	; 0x07
     f3a:	58 87       	std	Y+8, r21	; 0x08
     f3c:	69 87       	std	Y+9, r22	; 0x09
     f3e:	7a 87       	std	Y+10, r23	; 0x0a
     f40:	0b 87       	std	Y+11, r16	; 0x0b
     f42:	1c 87       	std	Y+12, r17	; 0x0c
     f44:	2d 87       	std	Y+13, r18	; 0x0d
     f46:	3e 87       	std	Y+14, r19	; 0x0e
     f48:	cf 86       	std	Y+15, r12	; 0x0f
     f4a:	d8 8a       	std	Y+16, r13	; 0x10
     f4c:	e9 8a       	std	Y+17, r14	; 0x11
     f4e:	fa 8a       	std	Y+18, r15	; 0x12
     f50:	8b 8a       	std	Y+19, r8	; 0x13
     f52:	9c 8a       	std	Y+20, r9	; 0x14
     f54:	ad 8a       	std	Y+21, r10	; 0x15
     f56:	be 8a       	std	Y+22, r11	; 0x16
	
	float workingIntegral = 0;
     f58:	19 82       	std	Y+1, r1	; 0x01
     f5a:	1a 82       	std	Y+2, r1	; 0x02
     f5c:	1b 82       	std	Y+3, r1	; 0x03
     f5e:	1c 82       	std	Y+4, r1	; 0x04
	
	workingIntegral = proportional * intervalPeriodSecs * integralGain;
     f60:	8d 81       	ldd	r24, Y+5	; 0x05
     f62:	9e 81       	ldd	r25, Y+6	; 0x06
     f64:	84 59       	subi	r24, 0x94	; 148
     f66:	9f 4f       	sbci	r25, 0xFF	; 255
     f68:	fc 01       	movw	r30, r24
     f6a:	80 81       	ld	r24, Z
     f6c:	91 81       	ldd	r25, Z+1	; 0x01
     f6e:	a2 81       	ldd	r26, Z+2	; 0x02
     f70:	b3 81       	ldd	r27, Z+3	; 0x03
     f72:	2f 81       	ldd	r18, Y+7	; 0x07
     f74:	38 85       	ldd	r19, Y+8	; 0x08
     f76:	49 85       	ldd	r20, Y+9	; 0x09
     f78:	5a 85       	ldd	r21, Y+10	; 0x0a
     f7a:	bc 01       	movw	r22, r24
     f7c:	cd 01       	movw	r24, r26
     f7e:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
     f82:	dc 01       	movw	r26, r24
     f84:	cb 01       	movw	r24, r22
     f86:	2b 89       	ldd	r18, Y+19	; 0x13
     f88:	3c 89       	ldd	r19, Y+20	; 0x14
     f8a:	4d 89       	ldd	r20, Y+21	; 0x15
     f8c:	5e 89       	ldd	r21, Y+22	; 0x16
     f8e:	bc 01       	movw	r22, r24
     f90:	cd 01       	movw	r24, r26
     f92:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
     f96:	dc 01       	movw	r26, r24
     f98:	cb 01       	movw	r24, r22
     f9a:	89 83       	std	Y+1, r24	; 0x01
     f9c:	9a 83       	std	Y+2, r25	; 0x02
     f9e:	ab 83       	std	Y+3, r26	; 0x03
     fa0:	bc 83       	std	Y+4, r27	; 0x04
	//Integrate (i.e. sum this working value with the current integral value).
	//Note: i'm going out of order from what is defined in the book referenced above.
	//I am summing before subtracting the antiwindup value to make it easier.
	//I also find it odd that the integral 'gain' is being applied before 
	//accounting for the anti-windup. But this could be to compensate for large errors.
	workingIntegral = workingIntegral + oldIntegral;
     fa2:	2b 85       	ldd	r18, Y+11	; 0x0b
     fa4:	3c 85       	ldd	r19, Y+12	; 0x0c
     fa6:	4d 85       	ldd	r20, Y+13	; 0x0d
     fa8:	5e 85       	ldd	r21, Y+14	; 0x0e
     faa:	69 81       	ldd	r22, Y+1	; 0x01
     fac:	7a 81       	ldd	r23, Y+2	; 0x02
     fae:	8b 81       	ldd	r24, Y+3	; 0x03
     fb0:	9c 81       	ldd	r25, Y+4	; 0x04
     fb2:	0e 94 14 3e 	call	0x7c28	; 0x7c28 <__addsf3>
     fb6:	dc 01       	movw	r26, r24
     fb8:	cb 01       	movw	r24, r22
     fba:	89 83       	std	Y+1, r24	; 0x01
     fbc:	9a 83       	std	Y+2, r25	; 0x02
     fbe:	ab 83       	std	Y+3, r26	; 0x03
     fc0:	bc 83       	std	Y+4, r27	; 0x04
	
	if (antiWindup != 0)
     fc2:	20 e0       	ldi	r18, 0x00	; 0
     fc4:	30 e0       	ldi	r19, 0x00	; 0
     fc6:	a9 01       	movw	r20, r18
     fc8:	6f 85       	ldd	r22, Y+15	; 0x0f
     fca:	78 89       	ldd	r23, Y+16	; 0x10
     fcc:	89 89       	ldd	r24, Y+17	; 0x11
     fce:	9a 89       	ldd	r25, Y+18	; 0x12
     fd0:	0e 94 78 3e 	call	0x7cf0	; 0x7cf0 <__cmpsf2>
     fd4:	88 23       	and	r24, r24
     fd6:	09 f4       	brne	.+2      	; 0xfda <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0xce>
     fd8:	52 c0       	rjmp	.+164    	; 0x107e <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x172>
	{
		//We want to know if the integral is greater than 0 or less than 0 so that when we subtract
		//the antiwindup value, we get closer to 0, and don't exceed 0.
		if (workingIntegral > 0 && antiWindup > workingIntegral)
     fda:	20 e0       	ldi	r18, 0x00	; 0
     fdc:	30 e0       	ldi	r19, 0x00	; 0
     fde:	a9 01       	movw	r20, r18
     fe0:	69 81       	ldd	r22, Y+1	; 0x01
     fe2:	7a 81       	ldd	r23, Y+2	; 0x02
     fe4:	8b 81       	ldd	r24, Y+3	; 0x03
     fe6:	9c 81       	ldd	r25, Y+4	; 0x04
     fe8:	0e 94 56 40 	call	0x80ac	; 0x80ac <__gesf2>
     fec:	18 16       	cp	r1, r24
     fee:	8c f4       	brge	.+34     	; 0x1012 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x106>
     ff0:	29 81       	ldd	r18, Y+1	; 0x01
     ff2:	3a 81       	ldd	r19, Y+2	; 0x02
     ff4:	4b 81       	ldd	r20, Y+3	; 0x03
     ff6:	5c 81       	ldd	r21, Y+4	; 0x04
     ff8:	6f 85       	ldd	r22, Y+15	; 0x0f
     ffa:	78 89       	ldd	r23, Y+16	; 0x10
     ffc:	89 89       	ldd	r24, Y+17	; 0x11
     ffe:	9a 89       	ldd	r25, Y+18	; 0x12
    1000:	0e 94 56 40 	call	0x80ac	; 0x80ac <__gesf2>
    1004:	18 16       	cp	r1, r24
    1006:	2c f4       	brge	.+10     	; 0x1012 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x106>
		{
			workingIntegral = 0;
    1008:	19 82       	std	Y+1, r1	; 0x01
    100a:	1a 82       	std	Y+2, r1	; 0x02
    100c:	1b 82       	std	Y+3, r1	; 0x03
    100e:	1c 82       	std	Y+4, r1	; 0x04
    1010:	1b c0       	rjmp	.+54     	; 0x1048 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x13c>
		}else if (workingIntegral < 0 && antiWindup < workingIntegral)
    1012:	20 e0       	ldi	r18, 0x00	; 0
    1014:	30 e0       	ldi	r19, 0x00	; 0
    1016:	a9 01       	movw	r20, r18
    1018:	69 81       	ldd	r22, Y+1	; 0x01
    101a:	7a 81       	ldd	r23, Y+2	; 0x02
    101c:	8b 81       	ldd	r24, Y+3	; 0x03
    101e:	9c 81       	ldd	r25, Y+4	; 0x04
    1020:	0e 94 78 3e 	call	0x7cf0	; 0x7cf0 <__cmpsf2>
    1024:	88 23       	and	r24, r24
    1026:	84 f4       	brge	.+32     	; 0x1048 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x13c>
    1028:	29 81       	ldd	r18, Y+1	; 0x01
    102a:	3a 81       	ldd	r19, Y+2	; 0x02
    102c:	4b 81       	ldd	r20, Y+3	; 0x03
    102e:	5c 81       	ldd	r21, Y+4	; 0x04
    1030:	6f 85       	ldd	r22, Y+15	; 0x0f
    1032:	78 89       	ldd	r23, Y+16	; 0x10
    1034:	89 89       	ldd	r24, Y+17	; 0x11
    1036:	9a 89       	ldd	r25, Y+18	; 0x12
    1038:	0e 94 78 3e 	call	0x7cf0	; 0x7cf0 <__cmpsf2>
    103c:	88 23       	and	r24, r24
    103e:	24 f4       	brge	.+8      	; 0x1048 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x13c>
		{
			workingIntegral = 0;
    1040:	19 82       	std	Y+1, r1	; 0x01
    1042:	1a 82       	std	Y+2, r1	; 0x02
    1044:	1b 82       	std	Y+3, r1	; 0x03
    1046:	1c 82       	std	Y+4, r1	; 0x04
		}
		
		if (workingIntegral != 0)
    1048:	20 e0       	ldi	r18, 0x00	; 0
    104a:	30 e0       	ldi	r19, 0x00	; 0
    104c:	a9 01       	movw	r20, r18
    104e:	69 81       	ldd	r22, Y+1	; 0x01
    1050:	7a 81       	ldd	r23, Y+2	; 0x02
    1052:	8b 81       	ldd	r24, Y+3	; 0x03
    1054:	9c 81       	ldd	r25, Y+4	; 0x04
    1056:	0e 94 78 3e 	call	0x7cf0	; 0x7cf0 <__cmpsf2>
    105a:	88 23       	and	r24, r24
    105c:	81 f0       	breq	.+32     	; 0x107e <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x172>
		{
				//Subtract the anti-windup value from the working integral. 
			workingIntegral = workingIntegral - antiWindup;
    105e:	2f 85       	ldd	r18, Y+15	; 0x0f
    1060:	38 89       	ldd	r19, Y+16	; 0x10
    1062:	49 89       	ldd	r20, Y+17	; 0x11
    1064:	5a 89       	ldd	r21, Y+18	; 0x12
    1066:	69 81       	ldd	r22, Y+1	; 0x01
    1068:	7a 81       	ldd	r23, Y+2	; 0x02
    106a:	8b 81       	ldd	r24, Y+3	; 0x03
    106c:	9c 81       	ldd	r25, Y+4	; 0x04
    106e:	0e 94 13 3e 	call	0x7c26	; 0x7c26 <__subsf3>
    1072:	dc 01       	movw	r26, r24
    1074:	cb 01       	movw	r24, r22
    1076:	89 83       	std	Y+1, r24	; 0x01
    1078:	9a 83       	std	Y+2, r25	; 0x02
    107a:	ab 83       	std	Y+3, r26	; 0x03
    107c:	bc 83       	std	Y+4, r27	; 0x04
		}
	}
	
	return workingIntegral;
    107e:	89 81       	ldd	r24, Y+1	; 0x01
    1080:	9a 81       	ldd	r25, Y+2	; 0x02
    1082:	ab 81       	ldd	r26, Y+3	; 0x03
    1084:	bc 81       	ldd	r27, Y+4	; 0x04
}
    1086:	bc 01       	movw	r22, r24
    1088:	cd 01       	movw	r24, r26
    108a:	66 96       	adiw	r28, 0x16	; 22
    108c:	0f b6       	in	r0, 0x3f	; 63
    108e:	f8 94       	cli
    1090:	de bf       	out	0x3e, r29	; 62
    1092:	0f be       	out	0x3f, r0	; 63
    1094:	cd bf       	out	0x3d, r28	; 61
    1096:	df 91       	pop	r29
    1098:	cf 91       	pop	r28
    109a:	1f 91       	pop	r17
    109c:	0f 91       	pop	r16
    109e:	ff 90       	pop	r15
    10a0:	ef 90       	pop	r14
    10a2:	df 90       	pop	r13
    10a4:	cf 90       	pop	r12
    10a6:	bf 90       	pop	r11
    10a8:	af 90       	pop	r10
    10aa:	9f 90       	pop	r9
    10ac:	8f 90       	pop	r8
    10ae:	08 95       	ret

000010b0 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>:
	//return integral;
//}


float PIDController::calculateVelocityError(float currentVelocity, float referenceVelocity)
{
    10b0:	0f 93       	push	r16
    10b2:	1f 93       	push	r17
    10b4:	cf 93       	push	r28
    10b6:	df 93       	push	r29
    10b8:	cd b7       	in	r28, 0x3d	; 61
    10ba:	de b7       	in	r29, 0x3e	; 62
    10bc:	2a 97       	sbiw	r28, 0x0a	; 10
    10be:	0f b6       	in	r0, 0x3f	; 63
    10c0:	f8 94       	cli
    10c2:	de bf       	out	0x3e, r29	; 62
    10c4:	0f be       	out	0x3f, r0	; 63
    10c6:	cd bf       	out	0x3d, r28	; 61
    10c8:	9a 83       	std	Y+2, r25	; 0x02
    10ca:	89 83       	std	Y+1, r24	; 0x01
    10cc:	4b 83       	std	Y+3, r20	; 0x03
    10ce:	5c 83       	std	Y+4, r21	; 0x04
    10d0:	6d 83       	std	Y+5, r22	; 0x05
    10d2:	7e 83       	std	Y+6, r23	; 0x06
    10d4:	0f 83       	std	Y+7, r16	; 0x07
    10d6:	18 87       	std	Y+8, r17	; 0x08
    10d8:	29 87       	std	Y+9, r18	; 0x09
    10da:	3a 87       	std	Y+10, r19	; 0x0a
	return currentVelocity - referenceVelocity;
    10dc:	2f 81       	ldd	r18, Y+7	; 0x07
    10de:	38 85       	ldd	r19, Y+8	; 0x08
    10e0:	49 85       	ldd	r20, Y+9	; 0x09
    10e2:	5a 85       	ldd	r21, Y+10	; 0x0a
    10e4:	6b 81       	ldd	r22, Y+3	; 0x03
    10e6:	7c 81       	ldd	r23, Y+4	; 0x04
    10e8:	8d 81       	ldd	r24, Y+5	; 0x05
    10ea:	9e 81       	ldd	r25, Y+6	; 0x06
    10ec:	0e 94 13 3e 	call	0x7c26	; 0x7c26 <__subsf3>
    10f0:	dc 01       	movw	r26, r24
    10f2:	cb 01       	movw	r24, r22
}
    10f4:	bc 01       	movw	r22, r24
    10f6:	cd 01       	movw	r24, r26
    10f8:	2a 96       	adiw	r28, 0x0a	; 10
    10fa:	0f b6       	in	r0, 0x3f	; 63
    10fc:	f8 94       	cli
    10fe:	de bf       	out	0x3e, r29	; 62
    1100:	0f be       	out	0x3f, r0	; 63
    1102:	cd bf       	out	0x3d, r28	; 61
    1104:	df 91       	pop	r29
    1106:	cf 91       	pop	r28
    1108:	1f 91       	pop	r17
    110a:	0f 91       	pop	r16
    110c:	08 95       	ret

0000110e <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>:

float PIDController::calculateOuterLoopControlValue(float proportionalError, float velocityError, float integral, float proportionalGain, float derivativeGain)
{
    110e:	8f 92       	push	r8
    1110:	9f 92       	push	r9
    1112:	af 92       	push	r10
    1114:	bf 92       	push	r11
    1116:	cf 92       	push	r12
    1118:	df 92       	push	r13
    111a:	ef 92       	push	r14
    111c:	ff 92       	push	r15
    111e:	0f 93       	push	r16
    1120:	1f 93       	push	r17
    1122:	cf 93       	push	r28
    1124:	df 93       	push	r29
    1126:	cd b7       	in	r28, 0x3d	; 61
    1128:	de b7       	in	r29, 0x3e	; 62
    112a:	66 97       	sbiw	r28, 0x16	; 22
    112c:	0f b6       	in	r0, 0x3f	; 63
    112e:	f8 94       	cli
    1130:	de bf       	out	0x3e, r29	; 62
    1132:	0f be       	out	0x3f, r0	; 63
    1134:	cd bf       	out	0x3d, r28	; 61
    1136:	9e 83       	std	Y+6, r25	; 0x06
    1138:	8d 83       	std	Y+5, r24	; 0x05
    113a:	4f 83       	std	Y+7, r20	; 0x07
    113c:	58 87       	std	Y+8, r21	; 0x08
    113e:	69 87       	std	Y+9, r22	; 0x09
    1140:	7a 87       	std	Y+10, r23	; 0x0a
    1142:	0b 87       	std	Y+11, r16	; 0x0b
    1144:	1c 87       	std	Y+12, r17	; 0x0c
    1146:	2d 87       	std	Y+13, r18	; 0x0d
    1148:	3e 87       	std	Y+14, r19	; 0x0e
    114a:	cf 86       	std	Y+15, r12	; 0x0f
    114c:	d8 8a       	std	Y+16, r13	; 0x10
    114e:	e9 8a       	std	Y+17, r14	; 0x11
    1150:	fa 8a       	std	Y+18, r15	; 0x12
    1152:	8b 8a       	std	Y+19, r8	; 0x13
    1154:	9c 8a       	std	Y+20, r9	; 0x14
    1156:	ad 8a       	std	Y+21, r10	; 0x15
    1158:	be 8a       	std	Y+22, r11	; 0x16
	float controlValue = 0;
    115a:	19 82       	std	Y+1, r1	; 0x01
    115c:	1a 82       	std	Y+2, r1	; 0x02
    115e:	1b 82       	std	Y+3, r1	; 0x03
    1160:	1c 82       	std	Y+4, r1	; 0x04
	
	controlValue = integral  + proportionalError * proportionalGain + velocityError * derivativeGain;
    1162:	2b 89       	ldd	r18, Y+19	; 0x13
    1164:	3c 89       	ldd	r19, Y+20	; 0x14
    1166:	4d 89       	ldd	r20, Y+21	; 0x15
    1168:	5e 89       	ldd	r21, Y+22	; 0x16
    116a:	6f 81       	ldd	r22, Y+7	; 0x07
    116c:	78 85       	ldd	r23, Y+8	; 0x08
    116e:	89 85       	ldd	r24, Y+9	; 0x09
    1170:	9a 85       	ldd	r25, Y+10	; 0x0a
    1172:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    1176:	dc 01       	movw	r26, r24
    1178:	cb 01       	movw	r24, r22
    117a:	2f 85       	ldd	r18, Y+15	; 0x0f
    117c:	38 89       	ldd	r19, Y+16	; 0x10
    117e:	49 89       	ldd	r20, Y+17	; 0x11
    1180:	5a 89       	ldd	r21, Y+18	; 0x12
    1182:	bc 01       	movw	r22, r24
    1184:	cd 01       	movw	r24, r26
    1186:	0e 94 14 3e 	call	0x7c28	; 0x7c28 <__addsf3>
    118a:	dc 01       	movw	r26, r24
    118c:	cb 01       	movw	r24, r22
    118e:	6c 01       	movw	r12, r24
    1190:	7d 01       	movw	r14, r26
    1192:	2e a1       	ldd	r18, Y+38	; 0x26
    1194:	3f a1       	ldd	r19, Y+39	; 0x27
    1196:	48 a5       	ldd	r20, Y+40	; 0x28
    1198:	59 a5       	ldd	r21, Y+41	; 0x29
    119a:	6b 85       	ldd	r22, Y+11	; 0x0b
    119c:	7c 85       	ldd	r23, Y+12	; 0x0c
    119e:	8d 85       	ldd	r24, Y+13	; 0x0d
    11a0:	9e 85       	ldd	r25, Y+14	; 0x0e
    11a2:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    11a6:	dc 01       	movw	r26, r24
    11a8:	cb 01       	movw	r24, r22
    11aa:	9c 01       	movw	r18, r24
    11ac:	ad 01       	movw	r20, r26
    11ae:	c7 01       	movw	r24, r14
    11b0:	b6 01       	movw	r22, r12
    11b2:	0e 94 14 3e 	call	0x7c28	; 0x7c28 <__addsf3>
    11b6:	dc 01       	movw	r26, r24
    11b8:	cb 01       	movw	r24, r22
    11ba:	89 83       	std	Y+1, r24	; 0x01
    11bc:	9a 83       	std	Y+2, r25	; 0x02
    11be:	ab 83       	std	Y+3, r26	; 0x03
    11c0:	bc 83       	std	Y+4, r27	; 0x04
	{
		controlValue = controlMinValue;
	}
	*/
	
	return controlValue;
    11c2:	89 81       	ldd	r24, Y+1	; 0x01
    11c4:	9a 81       	ldd	r25, Y+2	; 0x02
    11c6:	ab 81       	ldd	r26, Y+3	; 0x03
    11c8:	bc 81       	ldd	r27, Y+4	; 0x04
}
    11ca:	bc 01       	movw	r22, r24
    11cc:	cd 01       	movw	r24, r26
    11ce:	66 96       	adiw	r28, 0x16	; 22
    11d0:	0f b6       	in	r0, 0x3f	; 63
    11d2:	f8 94       	cli
    11d4:	de bf       	out	0x3e, r29	; 62
    11d6:	0f be       	out	0x3f, r0	; 63
    11d8:	cd bf       	out	0x3d, r28	; 61
    11da:	df 91       	pop	r29
    11dc:	cf 91       	pop	r28
    11de:	1f 91       	pop	r17
    11e0:	0f 91       	pop	r16
    11e2:	ff 90       	pop	r15
    11e4:	ef 90       	pop	r14
    11e6:	df 90       	pop	r13
    11e8:	cf 90       	pop	r12
    11ea:	bf 90       	pop	r11
    11ec:	af 90       	pop	r10
    11ee:	9f 90       	pop	r9
    11f0:	8f 90       	pop	r8
    11f2:	08 95       	ret

000011f4 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>:


float PIDController::adjustControlForServoLimits( float controlValueToAdjust, float minServoControlValue, float maxServoControlValue )
{
    11f4:	cf 92       	push	r12
    11f6:	df 92       	push	r13
    11f8:	ef 92       	push	r14
    11fa:	ff 92       	push	r15
    11fc:	0f 93       	push	r16
    11fe:	1f 93       	push	r17
    1200:	cf 93       	push	r28
    1202:	df 93       	push	r29
    1204:	cd b7       	in	r28, 0x3d	; 61
    1206:	de b7       	in	r29, 0x3e	; 62
    1208:	2e 97       	sbiw	r28, 0x0e	; 14
    120a:	0f b6       	in	r0, 0x3f	; 63
    120c:	f8 94       	cli
    120e:	de bf       	out	0x3e, r29	; 62
    1210:	0f be       	out	0x3f, r0	; 63
    1212:	cd bf       	out	0x3d, r28	; 61
    1214:	9a 83       	std	Y+2, r25	; 0x02
    1216:	89 83       	std	Y+1, r24	; 0x01
    1218:	4b 83       	std	Y+3, r20	; 0x03
    121a:	5c 83       	std	Y+4, r21	; 0x04
    121c:	6d 83       	std	Y+5, r22	; 0x05
    121e:	7e 83       	std	Y+6, r23	; 0x06
    1220:	0f 83       	std	Y+7, r16	; 0x07
    1222:	18 87       	std	Y+8, r17	; 0x08
    1224:	29 87       	std	Y+9, r18	; 0x09
    1226:	3a 87       	std	Y+10, r19	; 0x0a
    1228:	cb 86       	std	Y+11, r12	; 0x0b
    122a:	dc 86       	std	Y+12, r13	; 0x0c
    122c:	ed 86       	std	Y+13, r14	; 0x0d
    122e:	fe 86       	std	Y+14, r15	; 0x0e

	//TODO: when generalizing ensure to change this value. 
	//Todo revisit including trim.
	//controlValue += yawServoTrim;
	
	if (controlValueToAdjust > maxServoControlValue)
    1230:	2b 85       	ldd	r18, Y+11	; 0x0b
    1232:	3c 85       	ldd	r19, Y+12	; 0x0c
    1234:	4d 85       	ldd	r20, Y+13	; 0x0d
    1236:	5e 85       	ldd	r21, Y+14	; 0x0e
    1238:	6b 81       	ldd	r22, Y+3	; 0x03
    123a:	7c 81       	ldd	r23, Y+4	; 0x04
    123c:	8d 81       	ldd	r24, Y+5	; 0x05
    123e:	9e 81       	ldd	r25, Y+6	; 0x06
    1240:	0e 94 56 40 	call	0x80ac	; 0x80ac <__gesf2>
    1244:	18 16       	cp	r1, r24
    1246:	4c f4       	brge	.+18     	; 0x125a <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff+0x66>
	{
		controlValueToAdjust = maxServoControlValue;
    1248:	8b 85       	ldd	r24, Y+11	; 0x0b
    124a:	9c 85       	ldd	r25, Y+12	; 0x0c
    124c:	ad 85       	ldd	r26, Y+13	; 0x0d
    124e:	be 85       	ldd	r27, Y+14	; 0x0e
    1250:	8b 83       	std	Y+3, r24	; 0x03
    1252:	9c 83       	std	Y+4, r25	; 0x04
    1254:	ad 83       	std	Y+5, r26	; 0x05
    1256:	be 83       	std	Y+6, r27	; 0x06
    1258:	14 c0       	rjmp	.+40     	; 0x1282 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff+0x8e>
	}else if (controlValueToAdjust < minServoControlValue)
    125a:	2f 81       	ldd	r18, Y+7	; 0x07
    125c:	38 85       	ldd	r19, Y+8	; 0x08
    125e:	49 85       	ldd	r20, Y+9	; 0x09
    1260:	5a 85       	ldd	r21, Y+10	; 0x0a
    1262:	6b 81       	ldd	r22, Y+3	; 0x03
    1264:	7c 81       	ldd	r23, Y+4	; 0x04
    1266:	8d 81       	ldd	r24, Y+5	; 0x05
    1268:	9e 81       	ldd	r25, Y+6	; 0x06
    126a:	0e 94 78 3e 	call	0x7cf0	; 0x7cf0 <__cmpsf2>
    126e:	88 23       	and	r24, r24
    1270:	44 f4       	brge	.+16     	; 0x1282 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff+0x8e>
	{
		controlValueToAdjust = minServoControlValue;
    1272:	8f 81       	ldd	r24, Y+7	; 0x07
    1274:	98 85       	ldd	r25, Y+8	; 0x08
    1276:	a9 85       	ldd	r26, Y+9	; 0x09
    1278:	ba 85       	ldd	r27, Y+10	; 0x0a
    127a:	8b 83       	std	Y+3, r24	; 0x03
    127c:	9c 83       	std	Y+4, r25	; 0x04
    127e:	ad 83       	std	Y+5, r26	; 0x05
    1280:	be 83       	std	Y+6, r27	; 0x06
	}
	
	return controlValueToAdjust;
    1282:	8b 81       	ldd	r24, Y+3	; 0x03
    1284:	9c 81       	ldd	r25, Y+4	; 0x04
    1286:	ad 81       	ldd	r26, Y+5	; 0x05
    1288:	be 81       	ldd	r27, Y+6	; 0x06
}
    128a:	bc 01       	movw	r22, r24
    128c:	cd 01       	movw	r24, r26
    128e:	2e 96       	adiw	r28, 0x0e	; 14
    1290:	0f b6       	in	r0, 0x3f	; 63
    1292:	f8 94       	cli
    1294:	de bf       	out	0x3e, r29	; 62
    1296:	0f be       	out	0x3f, r0	; 63
    1298:	cd bf       	out	0x3d, r28	; 61
    129a:	df 91       	pop	r29
    129c:	cf 91       	pop	r28
    129e:	1f 91       	pop	r17
    12a0:	0f 91       	pop	r16
    12a2:	ff 90       	pop	r15
    12a4:	ef 90       	pop	r14
    12a6:	df 90       	pop	r13
    12a8:	cf 90       	pop	r12
    12aa:	08 95       	ret

000012ac <_Z30calculateInnerLoopControlValuefff>:


float calculateInnerLoopControlValue( float outerLoopSetpoint, float measuredValue, float gain )
{
    12ac:	ef 92       	push	r14
    12ae:	ff 92       	push	r15
    12b0:	0f 93       	push	r16
    12b2:	1f 93       	push	r17
    12b4:	cf 93       	push	r28
    12b6:	df 93       	push	r29
    12b8:	cd b7       	in	r28, 0x3d	; 61
    12ba:	de b7       	in	r29, 0x3e	; 62
    12bc:	2c 97       	sbiw	r28, 0x0c	; 12
    12be:	0f b6       	in	r0, 0x3f	; 63
    12c0:	f8 94       	cli
    12c2:	de bf       	out	0x3e, r29	; 62
    12c4:	0f be       	out	0x3f, r0	; 63
    12c6:	cd bf       	out	0x3d, r28	; 61
    12c8:	69 83       	std	Y+1, r22	; 0x01
    12ca:	7a 83       	std	Y+2, r23	; 0x02
    12cc:	8b 83       	std	Y+3, r24	; 0x03
    12ce:	9c 83       	std	Y+4, r25	; 0x04
    12d0:	2d 83       	std	Y+5, r18	; 0x05
    12d2:	3e 83       	std	Y+6, r19	; 0x06
    12d4:	4f 83       	std	Y+7, r20	; 0x07
    12d6:	58 87       	std	Y+8, r21	; 0x08
    12d8:	e9 86       	std	Y+9, r14	; 0x09
    12da:	fa 86       	std	Y+10, r15	; 0x0a
    12dc:	0b 87       	std	Y+11, r16	; 0x0b
    12de:	1c 87       	std	Y+12, r17	; 0x0c
	//NOTE: IN MY OTHER IMPLEMENTATION I SUBTRACT THE VELOCITY (YES VELOCITY) OF THE ANGULAR MOTION.
	return gain * (measuredValue - outerLoopSetpoint);
    12e0:	29 81       	ldd	r18, Y+1	; 0x01
    12e2:	3a 81       	ldd	r19, Y+2	; 0x02
    12e4:	4b 81       	ldd	r20, Y+3	; 0x03
    12e6:	5c 81       	ldd	r21, Y+4	; 0x04
    12e8:	6d 81       	ldd	r22, Y+5	; 0x05
    12ea:	7e 81       	ldd	r23, Y+6	; 0x06
    12ec:	8f 81       	ldd	r24, Y+7	; 0x07
    12ee:	98 85       	ldd	r25, Y+8	; 0x08
    12f0:	0e 94 13 3e 	call	0x7c26	; 0x7c26 <__subsf3>
    12f4:	dc 01       	movw	r26, r24
    12f6:	cb 01       	movw	r24, r22
    12f8:	29 85       	ldd	r18, Y+9	; 0x09
    12fa:	3a 85       	ldd	r19, Y+10	; 0x0a
    12fc:	4b 85       	ldd	r20, Y+11	; 0x0b
    12fe:	5c 85       	ldd	r21, Y+12	; 0x0c
    1300:	bc 01       	movw	r22, r24
    1302:	cd 01       	movw	r24, r26
    1304:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    1308:	dc 01       	movw	r26, r24
    130a:	cb 01       	movw	r24, r22
}
    130c:	bc 01       	movw	r22, r24
    130e:	cd 01       	movw	r24, r26
    1310:	2c 96       	adiw	r28, 0x0c	; 12
    1312:	0f b6       	in	r0, 0x3f	; 63
    1314:	f8 94       	cli
    1316:	de bf       	out	0x3e, r29	; 62
    1318:	0f be       	out	0x3f, r0	; 63
    131a:	cd bf       	out	0x3d, r28	; 61
    131c:	df 91       	pop	r29
    131e:	cf 91       	pop	r28
    1320:	1f 91       	pop	r17
    1322:	0f 91       	pop	r16
    1324:	ff 90       	pop	r15
    1326:	ef 90       	pop	r14
    1328:	08 95       	ret

0000132a <_ZN10helicopter10controller13PIDController30cyclicLongitudeOuterLoopUpdateEv>:

//side motion / roll / lateral

//forward motion / pitch / longitud
void PIDController::cyclicLongitudeOuterLoopUpdate()
{
    132a:	7f 92       	push	r7
    132c:	8f 92       	push	r8
    132e:	9f 92       	push	r9
    1330:	af 92       	push	r10
    1332:	bf 92       	push	r11
    1334:	cf 92       	push	r12
    1336:	df 92       	push	r13
    1338:	ef 92       	push	r14
    133a:	ff 92       	push	r15
    133c:	0f 93       	push	r16
    133e:	1f 93       	push	r17
    1340:	cf 93       	push	r28
    1342:	df 93       	push	r29
    1344:	cd b7       	in	r28, 0x3d	; 61
    1346:	de b7       	in	r29, 0x3e	; 62
    1348:	66 97       	sbiw	r28, 0x16	; 22
    134a:	0f b6       	in	r0, 0x3f	; 63
    134c:	f8 94       	cli
    134e:	de bf       	out	0x3e, r29	; 62
    1350:	0f be       	out	0x3f, r0	; 63
    1352:	cd bf       	out	0x3d, r28	; 61
    1354:	9e 8b       	std	Y+22, r25	; 0x16
    1356:	8d 8b       	std	Y+21, r24	; 0x15
	//float yawProportional = calculateYawProportional(model->MagYawDegrees(), model->ReferenceMagYawDegrees());
	float xProportional = calculateProportional(model->XNEDBodyFrame(), model->ReferenceXNEDBodyFrame());
    1358:	8d 89       	ldd	r24, Y+21	; 0x15
    135a:	9e 89       	ldd	r25, Y+22	; 0x16
    135c:	fc 01       	movw	r30, r24
    135e:	80 81       	ld	r24, Z
    1360:	91 81       	ldd	r25, Z+1	; 0x01
    1362:	0e 94 8d 02 	call	0x51a	; 0x51a <_ZNK10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEv>
    1366:	6b 01       	movw	r12, r22
    1368:	7c 01       	movw	r14, r24
    136a:	8d 89       	ldd	r24, Y+21	; 0x15
    136c:	9e 89       	ldd	r25, Y+22	; 0x16
    136e:	fc 01       	movw	r30, r24
    1370:	80 81       	ld	r24, Z
    1372:	91 81       	ldd	r25, Z+1	; 0x01
    1374:	0e 94 77 02 	call	0x4ee	; 0x4ee <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>
    1378:	dc 01       	movw	r26, r24
    137a:	cb 01       	movw	r24, r22
    137c:	ed 89       	ldd	r30, Y+21	; 0x15
    137e:	fe 89       	ldd	r31, Y+22	; 0x16
    1380:	97 01       	movw	r18, r14
    1382:	86 01       	movw	r16, r12
    1384:	ac 01       	movw	r20, r24
    1386:	bd 01       	movw	r22, r26
    1388:	cf 01       	movw	r24, r30
    138a:	0e 94 06 07 	call	0xe0c	; 0xe0c <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    138e:	dc 01       	movw	r26, r24
    1390:	cb 01       	movw	r24, r22
    1392:	89 83       	std	Y+1, r24	; 0x01
    1394:	9a 83       	std	Y+2, r25	; 0x02
    1396:	ab 83       	std	Y+3, r26	; 0x03
    1398:	bc 83       	std	Y+4, r27	; 0x04
	float xIntegralAntiWindup = calculateIntegralAntiWindup(model->LongitudeControlBeforeServoLimitsAdjustment(), model->LongitudeControl(), xAntiWindupGain);
    139a:	8d 89       	ldd	r24, Y+21	; 0x15
    139c:	9e 89       	ldd	r25, Y+22	; 0x16
    139e:	fc 01       	movw	r30, r24
    13a0:	c0 a0       	ldd	r12, Z+32	; 0x20
    13a2:	d1 a0       	ldd	r13, Z+33	; 0x21
    13a4:	e2 a0       	ldd	r14, Z+34	; 0x22
    13a6:	f3 a0       	ldd	r15, Z+35	; 0x23
    13a8:	8d 89       	ldd	r24, Y+21	; 0x15
    13aa:	9e 89       	ldd	r25, Y+22	; 0x16
    13ac:	fc 01       	movw	r30, r24
    13ae:	80 81       	ld	r24, Z
    13b0:	91 81       	ldd	r25, Z+1	; 0x01
    13b2:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>
    13b6:	4b 01       	movw	r8, r22
    13b8:	5c 01       	movw	r10, r24
    13ba:	8d 89       	ldd	r24, Y+21	; 0x15
    13bc:	9e 89       	ldd	r25, Y+22	; 0x16
    13be:	fc 01       	movw	r30, r24
    13c0:	80 81       	ld	r24, Z
    13c2:	91 81       	ldd	r25, Z+1	; 0x01
    13c4:	0e 94 a3 02 	call	0x546	; 0x546 <_ZNK10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEv>
    13c8:	dc 01       	movw	r26, r24
    13ca:	cb 01       	movw	r24, r22
    13cc:	ed 89       	ldd	r30, Y+21	; 0x15
    13ce:	fe 89       	ldd	r31, Y+22	; 0x16
    13d0:	95 01       	movw	r18, r10
    13d2:	84 01       	movw	r16, r8
    13d4:	ac 01       	movw	r20, r24
    13d6:	bd 01       	movw	r22, r26
    13d8:	cf 01       	movw	r24, r30
    13da:	0e 94 35 07 	call	0xe6a	; 0xe6a <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    13de:	dc 01       	movw	r26, r24
    13e0:	cb 01       	movw	r24, r22
    13e2:	8d 83       	std	Y+5, r24	; 0x05
    13e4:	9e 83       	std	Y+6, r25	; 0x06
    13e6:	af 83       	std	Y+7, r26	; 0x07
    13e8:	b8 87       	std	Y+8, r27	; 0x08
	float weightedXIntegral = calculateIntegral(xProportional, model->XIntegral(), xIntegralAntiWindup, xIntegralGain);
    13ea:	8d 89       	ldd	r24, Y+21	; 0x15
    13ec:	9e 89       	ldd	r25, Y+22	; 0x16
    13ee:	fc 01       	movw	r30, r24
    13f0:	a4 88       	ldd	r10, Z+20	; 0x14
    13f2:	b5 88       	ldd	r11, Z+21	; 0x15
    13f4:	c6 88       	ldd	r12, Z+22	; 0x16
    13f6:	d7 88       	ldd	r13, Z+23	; 0x17
    13f8:	8d 89       	ldd	r24, Y+21	; 0x15
    13fa:	9e 89       	ldd	r25, Y+22	; 0x16
    13fc:	fc 01       	movw	r30, r24
    13fe:	80 81       	ld	r24, Z
    1400:	91 81       	ldd	r25, Z+1	; 0x01
    1402:	0e 94 94 03 	call	0x728	; 0x728 <_ZNK10helicopter5model11SystemModel9XIntegralEv>
    1406:	9b 01       	movw	r18, r22
    1408:	ac 01       	movw	r20, r24
    140a:	ed 80       	ldd	r14, Y+5	; 0x05
    140c:	fe 80       	ldd	r15, Y+6	; 0x06
    140e:	0f 81       	ldd	r16, Y+7	; 0x07
    1410:	18 85       	ldd	r17, Y+8	; 0x08
    1412:	89 81       	ldd	r24, Y+1	; 0x01
    1414:	9a 81       	ldd	r25, Y+2	; 0x02
    1416:	ab 81       	ldd	r26, Y+3	; 0x03
    1418:	bc 81       	ldd	r27, Y+4	; 0x04
    141a:	ed 89       	ldd	r30, Y+21	; 0x15
    141c:	fe 89       	ldd	r31, Y+22	; 0x16
    141e:	45 01       	movw	r8, r10
    1420:	56 01       	movw	r10, r12
    1422:	67 01       	movw	r12, r14
    1424:	78 01       	movw	r14, r16
    1426:	89 01       	movw	r16, r18
    1428:	9a 01       	movw	r18, r20
    142a:	ac 01       	movw	r20, r24
    142c:	bd 01       	movw	r22, r26
    142e:	cf 01       	movw	r24, r30
    1430:	0e 94 86 07 	call	0xf0c	; 0xf0c <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    1434:	dc 01       	movw	r26, r24
    1436:	cb 01       	movw	r24, r22
    1438:	89 87       	std	Y+9, r24	; 0x09
    143a:	9a 87       	std	Y+10, r25	; 0x0a
    143c:	ab 87       	std	Y+11, r26	; 0x0b
    143e:	bc 87       	std	Y+12, r27	; 0x0c
	float xDerivativeError = calculateVelocityError(model->XVelocityMetersPerSecond(), model->ReferenceXVelocityMetersPerSecond());
    1440:	8d 89       	ldd	r24, Y+21	; 0x15
    1442:	9e 89       	ldd	r25, Y+22	; 0x16
    1444:	fc 01       	movw	r30, r24
    1446:	80 81       	ld	r24, Z
    1448:	91 81       	ldd	r25, Z+1	; 0x01
    144a:	0e 94 25 03 	call	0x64a	; 0x64a <_ZNK10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEv>
    144e:	6b 01       	movw	r12, r22
    1450:	7c 01       	movw	r14, r24
    1452:	8d 89       	ldd	r24, Y+21	; 0x15
    1454:	9e 89       	ldd	r25, Y+22	; 0x16
    1456:	fc 01       	movw	r30, r24
    1458:	80 81       	ld	r24, Z
    145a:	91 81       	ldd	r25, Z+1	; 0x01
    145c:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>
    1460:	dc 01       	movw	r26, r24
    1462:	cb 01       	movw	r24, r22
    1464:	ed 89       	ldd	r30, Y+21	; 0x15
    1466:	fe 89       	ldd	r31, Y+22	; 0x16
    1468:	97 01       	movw	r18, r14
    146a:	86 01       	movw	r16, r12
    146c:	ac 01       	movw	r20, r24
    146e:	bd 01       	movw	r22, r26
    1470:	cf 01       	movw	r24, r30
    1472:	0e 94 58 08 	call	0x10b0	; 0x10b0 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    1476:	dc 01       	movw	r26, r24
    1478:	cb 01       	movw	r24, r22
    147a:	8d 87       	std	Y+13, r24	; 0x0d
    147c:	9e 87       	std	Y+14, r25	; 0x0e
    147e:	af 87       	std	Y+15, r26	; 0x0f
    1480:	b8 8b       	std	Y+16, r27	; 0x10
	float xLongitudinalOuterLoopControl = calculateOuterLoopControlValue(xProportional, xDerivativeError, weightedXIntegral, xProportionalGain, xDerivativeGain);
    1482:	8d 89       	ldd	r24, Y+21	; 0x15
    1484:	9e 89       	ldd	r25, Y+22	; 0x16
    1486:	fc 01       	movw	r30, r24
    1488:	80 8d       	ldd	r24, Z+24	; 0x18
    148a:	91 8d       	ldd	r25, Z+25	; 0x19
    148c:	a2 8d       	ldd	r26, Z+26	; 0x1a
    148e:	b3 8d       	ldd	r27, Z+27	; 0x1b
    1490:	2d 89       	ldd	r18, Y+21	; 0x15
    1492:	3e 89       	ldd	r19, Y+22	; 0x16
    1494:	f9 01       	movw	r30, r18
    1496:	84 8c       	ldd	r8, Z+28	; 0x1c
    1498:	95 8c       	ldd	r9, Z+29	; 0x1d
    149a:	a6 8c       	ldd	r10, Z+30	; 0x1e
    149c:	b7 8c       	ldd	r11, Z+31	; 0x1f
    149e:	c9 84       	ldd	r12, Y+9	; 0x09
    14a0:	da 84       	ldd	r13, Y+10	; 0x0a
    14a2:	eb 84       	ldd	r14, Y+11	; 0x0b
    14a4:	fc 84       	ldd	r15, Y+12	; 0x0c
    14a6:	0d 85       	ldd	r16, Y+13	; 0x0d
    14a8:	1e 85       	ldd	r17, Y+14	; 0x0e
    14aa:	2f 85       	ldd	r18, Y+15	; 0x0f
    14ac:	38 89       	ldd	r19, Y+16	; 0x10
    14ae:	49 81       	ldd	r20, Y+1	; 0x01
    14b0:	5a 81       	ldd	r21, Y+2	; 0x02
    14b2:	6b 81       	ldd	r22, Y+3	; 0x03
    14b4:	7c 81       	ldd	r23, Y+4	; 0x04
    14b6:	ed 89       	ldd	r30, Y+21	; 0x15
    14b8:	fe 89       	ldd	r31, Y+22	; 0x16
    14ba:	7b 2e       	mov	r7, r27
    14bc:	7f 92       	push	r7
    14be:	7a 2e       	mov	r7, r26
    14c0:	7f 92       	push	r7
    14c2:	79 2e       	mov	r7, r25
    14c4:	7f 92       	push	r7
    14c6:	8f 93       	push	r24
    14c8:	cf 01       	movw	r24, r30
    14ca:	0e 94 87 08 	call	0x110e	; 0x110e <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>
    14ce:	0f 90       	pop	r0
    14d0:	0f 90       	pop	r0
    14d2:	0f 90       	pop	r0
    14d4:	0f 90       	pop	r0
    14d6:	dc 01       	movw	r26, r24
    14d8:	cb 01       	movw	r24, r22
    14da:	89 8b       	std	Y+17, r24	; 0x11
    14dc:	9a 8b       	std	Y+18, r25	; 0x12
    14de:	ab 8b       	std	Y+19, r26	; 0x13
    14e0:	bc 8b       	std	Y+20, r27	; 0x14
	//float xOuterLoopControl = adjustControlForServoLimits(xControlBeforeServoLimitsAdjustment);
	
	model->XLongitudinalOuterLoopControl(xLongitudinalOuterLoopControl);
    14e2:	8d 89       	ldd	r24, Y+21	; 0x15
    14e4:	9e 89       	ldd	r25, Y+22	; 0x16
    14e6:	fc 01       	movw	r30, r24
    14e8:	20 81       	ld	r18, Z
    14ea:	31 81       	ldd	r19, Z+1	; 0x01
    14ec:	89 89       	ldd	r24, Y+17	; 0x11
    14ee:	9a 89       	ldd	r25, Y+18	; 0x12
    14f0:	ab 89       	ldd	r26, Y+19	; 0x13
    14f2:	bc 89       	ldd	r27, Y+20	; 0x14
    14f4:	ac 01       	movw	r20, r24
    14f6:	bd 01       	movw	r22, r26
    14f8:	c9 01       	movw	r24, r18
    14fa:	0e 94 51 03 	call	0x6a2	; 0x6a2 <_ZN10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEf>
	//model->YawControlBeforeServoLimitsAdjustment(yawControlBeforeServoLimitsAdjustment);
	model->XIntegral(weightedXIntegral);
    14fe:	8d 89       	ldd	r24, Y+21	; 0x15
    1500:	9e 89       	ldd	r25, Y+22	; 0x16
    1502:	fc 01       	movw	r30, r24
    1504:	20 81       	ld	r18, Z
    1506:	31 81       	ldd	r19, Z+1	; 0x01
    1508:	89 85       	ldd	r24, Y+9	; 0x09
    150a:	9a 85       	ldd	r25, Y+10	; 0x0a
    150c:	ab 85       	ldd	r26, Y+11	; 0x0b
    150e:	bc 85       	ldd	r27, Y+12	; 0x0c
    1510:	ac 01       	movw	r20, r24
    1512:	bd 01       	movw	r22, r26
    1514:	c9 01       	movw	r24, r18
    1516:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN10helicopter5model11SystemModel9XIntegralEf>
	model->XProportional(xProportional);
    151a:	8d 89       	ldd	r24, Y+21	; 0x15
    151c:	9e 89       	ldd	r25, Y+22	; 0x16
    151e:	fc 01       	movw	r30, r24
    1520:	20 81       	ld	r18, Z
    1522:	31 81       	ldd	r19, Z+1	; 0x01
    1524:	89 81       	ldd	r24, Y+1	; 0x01
    1526:	9a 81       	ldd	r25, Y+2	; 0x02
    1528:	ab 81       	ldd	r26, Y+3	; 0x03
    152a:	bc 81       	ldd	r27, Y+4	; 0x04
    152c:	ac 01       	movw	r20, r24
    152e:	bd 01       	movw	r22, r26
    1530:	c9 01       	movw	r24, r18
    1532:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN10helicopter5model11SystemModel13XProportionalEf>
	model->XDerivativeError(xDerivativeError);
    1536:	8d 89       	ldd	r24, Y+21	; 0x15
    1538:	9e 89       	ldd	r25, Y+22	; 0x16
    153a:	fc 01       	movw	r30, r24
    153c:	20 81       	ld	r18, Z
    153e:	31 81       	ldd	r19, Z+1	; 0x01
    1540:	8d 85       	ldd	r24, Y+13	; 0x0d
    1542:	9e 85       	ldd	r25, Y+14	; 0x0e
    1544:	af 85       	ldd	r26, Y+15	; 0x0f
    1546:	b8 89       	ldd	r27, Y+16	; 0x10
    1548:	ac 01       	movw	r20, r24
    154a:	bd 01       	movw	r22, r26
    154c:	c9 01       	movw	r24, r18
    154e:	0e 94 cf 03 	call	0x79e	; 0x79e <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf>
	
	
	
//	servoDriver->controlTailRotorCollective(xControl);
}
    1552:	66 96       	adiw	r28, 0x16	; 22
    1554:	0f b6       	in	r0, 0x3f	; 63
    1556:	f8 94       	cli
    1558:	de bf       	out	0x3e, r29	; 62
    155a:	0f be       	out	0x3f, r0	; 63
    155c:	cd bf       	out	0x3d, r28	; 61
    155e:	df 91       	pop	r29
    1560:	cf 91       	pop	r28
    1562:	1f 91       	pop	r17
    1564:	0f 91       	pop	r16
    1566:	ff 90       	pop	r15
    1568:	ef 90       	pop	r14
    156a:	df 90       	pop	r13
    156c:	cf 90       	pop	r12
    156e:	bf 90       	pop	r11
    1570:	af 90       	pop	r10
    1572:	9f 90       	pop	r9
    1574:	8f 90       	pop	r8
    1576:	7f 90       	pop	r7
    1578:	08 95       	ret

0000157a <_ZN10helicopter10controller13PIDController30cyclicLongitudeInnerLoopUpdateEv>:
	
	//	servoDriver->controlTailRotorCollective(xControl);
}

void PIDController::cyclicLongitudeInnerLoopUpdate()
{
    157a:	6f 92       	push	r6
    157c:	7f 92       	push	r7
    157e:	8f 92       	push	r8
    1580:	9f 92       	push	r9
    1582:	af 92       	push	r10
    1584:	bf 92       	push	r11
    1586:	cf 92       	push	r12
    1588:	df 92       	push	r13
    158a:	ef 92       	push	r14
    158c:	ff 92       	push	r15
    158e:	0f 93       	push	r16
    1590:	1f 93       	push	r17
    1592:	cf 93       	push	r28
    1594:	df 93       	push	r29
    1596:	cd b7       	in	r28, 0x3d	; 61
    1598:	de b7       	in	r29, 0x3e	; 62
    159a:	2a 97       	sbiw	r28, 0x0a	; 10
    159c:	0f b6       	in	r0, 0x3f	; 63
    159e:	f8 94       	cli
    15a0:	de bf       	out	0x3e, r29	; 62
    15a2:	0f be       	out	0x3f, r0	; 63
    15a4:	cd bf       	out	0x3d, r28	; 61
    15a6:	9a 87       	std	Y+10, r25	; 0x0a
    15a8:	89 87       	std	Y+9, r24	; 0x09
	float xLongitudinalInnerLoopControlBeforeServoLimits = calculateInnerLoopControlValue(model->XLongitudinalOuterLoopControl(), model->ThetaPitchDegrees(), longitudeInnerLoopGain);
    15aa:	89 85       	ldd	r24, Y+9	; 0x09
    15ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    15ae:	fc 01       	movw	r30, r24
    15b0:	64 a0       	ldd	r6, Z+36	; 0x24
    15b2:	75 a0       	ldd	r7, Z+37	; 0x25
    15b4:	86 a0       	ldd	r8, Z+38	; 0x26
    15b6:	97 a0       	ldd	r9, Z+39	; 0x27
    15b8:	89 85       	ldd	r24, Y+9	; 0x09
    15ba:	9a 85       	ldd	r25, Y+10	; 0x0a
    15bc:	fc 01       	movw	r30, r24
    15be:	80 81       	ld	r24, Z
    15c0:	91 81       	ldd	r25, Z+1	; 0x01
    15c2:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <_ZNK10helicopter5model11SystemModel17ThetaPitchDegreesEv>
    15c6:	5b 01       	movw	r10, r22
    15c8:	6c 01       	movw	r12, r24
    15ca:	89 85       	ldd	r24, Y+9	; 0x09
    15cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    15ce:	fc 01       	movw	r30, r24
    15d0:	80 81       	ld	r24, Z
    15d2:	91 81       	ldd	r25, Z+1	; 0x01
    15d4:	0e 94 3b 03 	call	0x676	; 0x676 <_ZNK10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEv>
    15d8:	dc 01       	movw	r26, r24
    15da:	cb 01       	movw	r24, r22
    15dc:	84 01       	movw	r16, r8
    15de:	73 01       	movw	r14, r6
    15e0:	a6 01       	movw	r20, r12
    15e2:	95 01       	movw	r18, r10
    15e4:	bc 01       	movw	r22, r24
    15e6:	cd 01       	movw	r24, r26
    15e8:	0e 94 56 09 	call	0x12ac	; 0x12ac <_Z30calculateInnerLoopControlValuefff>
    15ec:	dc 01       	movw	r26, r24
    15ee:	cb 01       	movw	r24, r22
    15f0:	89 83       	std	Y+1, r24	; 0x01
    15f2:	9a 83       	std	Y+2, r25	; 0x02
    15f4:	ab 83       	std	Y+3, r26	; 0x03
    15f6:	bc 83       	std	Y+4, r27	; 0x04
	
	float xLongitudinalInnerLoopControl = adjustControlForServoLimits(xLongitudinalInnerLoopControlBeforeServoLimits, minLongitudeServoControlValue, maxLongitudeServoControlValue);
    15f8:	89 85       	ldd	r24, Y+9	; 0x09
    15fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    15fc:	88 5a       	subi	r24, 0xA8	; 168
    15fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1600:	fc 01       	movw	r30, r24
    1602:	e0 80       	ld	r14, Z
    1604:	f1 80       	ldd	r15, Z+1	; 0x01
    1606:	02 81       	ldd	r16, Z+2	; 0x02
    1608:	13 81       	ldd	r17, Z+3	; 0x03
    160a:	89 85       	ldd	r24, Y+9	; 0x09
    160c:	9a 85       	ldd	r25, Y+10	; 0x0a
    160e:	8c 5a       	subi	r24, 0xAC	; 172
    1610:	9f 4f       	sbci	r25, 0xFF	; 255
    1612:	fc 01       	movw	r30, r24
    1614:	20 81       	ld	r18, Z
    1616:	31 81       	ldd	r19, Z+1	; 0x01
    1618:	42 81       	ldd	r20, Z+2	; 0x02
    161a:	53 81       	ldd	r21, Z+3	; 0x03
    161c:	89 81       	ldd	r24, Y+1	; 0x01
    161e:	9a 81       	ldd	r25, Y+2	; 0x02
    1620:	ab 81       	ldd	r26, Y+3	; 0x03
    1622:	bc 81       	ldd	r27, Y+4	; 0x04
    1624:	e9 85       	ldd	r30, Y+9	; 0x09
    1626:	fa 85       	ldd	r31, Y+10	; 0x0a
    1628:	67 01       	movw	r12, r14
    162a:	78 01       	movw	r14, r16
    162c:	89 01       	movw	r16, r18
    162e:	9a 01       	movw	r18, r20
    1630:	ac 01       	movw	r20, r24
    1632:	bd 01       	movw	r22, r26
    1634:	cf 01       	movw	r24, r30
    1636:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    163a:	dc 01       	movw	r26, r24
    163c:	cb 01       	movw	r24, r22
    163e:	8d 83       	std	Y+5, r24	; 0x05
    1640:	9e 83       	std	Y+6, r25	; 0x06
    1642:	af 83       	std	Y+7, r26	; 0x07
    1644:	b8 87       	std	Y+8, r27	; 0x08
	
	model->LongitudeControlBeforeServoLimitsAdjustment(xLongitudinalInnerLoopControlBeforeServoLimits);
    1646:	89 85       	ldd	r24, Y+9	; 0x09
    1648:	9a 85       	ldd	r25, Y+10	; 0x0a
    164a:	fc 01       	movw	r30, r24
    164c:	20 81       	ld	r18, Z
    164e:	31 81       	ldd	r19, Z+1	; 0x01
    1650:	89 81       	ldd	r24, Y+1	; 0x01
    1652:	9a 81       	ldd	r25, Y+2	; 0x02
    1654:	ab 81       	ldd	r26, Y+3	; 0x03
    1656:	bc 81       	ldd	r27, Y+4	; 0x04
    1658:	ac 01       	movw	r20, r24
    165a:	bd 01       	movw	r22, r26
    165c:	c9 01       	movw	r24, r18
    165e:	0e 94 b9 02 	call	0x572	; 0x572 <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf>
	
	model->LongitudeControl(xLongitudinalInnerLoopControl);
    1662:	89 85       	ldd	r24, Y+9	; 0x09
    1664:	9a 85       	ldd	r25, Y+10	; 0x0a
    1666:	fc 01       	movw	r30, r24
    1668:	20 81       	ld	r18, Z
    166a:	31 81       	ldd	r19, Z+1	; 0x01
    166c:	8d 81       	ldd	r24, Y+5	; 0x05
    166e:	9e 81       	ldd	r25, Y+6	; 0x06
    1670:	af 81       	ldd	r26, Y+7	; 0x07
    1672:	b8 85       	ldd	r27, Y+8	; 0x08
    1674:	ac 01       	movw	r20, r24
    1676:	bd 01       	movw	r22, r26
    1678:	c9 01       	movw	r24, r18
    167a:	0e 94 ef 02 	call	0x5de	; 0x5de <_ZN10helicopter5model11SystemModel16LongitudeControlEf>
	
	servoDriver->controlLongitudinal(xLongitudinalInnerLoopControl);
    167e:	89 85       	ldd	r24, Y+9	; 0x09
    1680:	9a 85       	ldd	r25, Y+10	; 0x0a
    1682:	fc 01       	movw	r30, r24
    1684:	22 81       	ldd	r18, Z+2	; 0x02
    1686:	33 81       	ldd	r19, Z+3	; 0x03
    1688:	8d 81       	ldd	r24, Y+5	; 0x05
    168a:	9e 81       	ldd	r25, Y+6	; 0x06
    168c:	af 81       	ldd	r26, Y+7	; 0x07
    168e:	b8 85       	ldd	r27, Y+8	; 0x08
    1690:	ac 01       	movw	r20, r24
    1692:	bd 01       	movw	r22, r26
    1694:	c9 01       	movw	r24, r18
    1696:	0e 94 22 11 	call	0x2244	; 0x2244 <_ZN10helicopter7drivers11ServoDriver19controlLongitudinalEd>
}
    169a:	2a 96       	adiw	r28, 0x0a	; 10
    169c:	0f b6       	in	r0, 0x3f	; 63
    169e:	f8 94       	cli
    16a0:	de bf       	out	0x3e, r29	; 62
    16a2:	0f be       	out	0x3f, r0	; 63
    16a4:	cd bf       	out	0x3d, r28	; 61
    16a6:	df 91       	pop	r29
    16a8:	cf 91       	pop	r28
    16aa:	1f 91       	pop	r17
    16ac:	0f 91       	pop	r16
    16ae:	ff 90       	pop	r15
    16b0:	ef 90       	pop	r14
    16b2:	df 90       	pop	r13
    16b4:	cf 90       	pop	r12
    16b6:	bf 90       	pop	r11
    16b8:	af 90       	pop	r10
    16ba:	9f 90       	pop	r9
    16bc:	8f 90       	pop	r8
    16be:	7f 90       	pop	r7
    16c0:	6f 90       	pop	r6
    16c2:	08 95       	ret

000016c4 <_ZN10helicopter10controller13PIDController34tailRotorCollectiveOuterLoopUpdateEv>:
	
	servoDriver->controlLongitudinal(yLateralInnerLoopControl);
}

void PIDController::tailRotorCollectiveOuterLoopUpdate()
{
    16c4:	7f 92       	push	r7
    16c6:	8f 92       	push	r8
    16c8:	9f 92       	push	r9
    16ca:	af 92       	push	r10
    16cc:	bf 92       	push	r11
    16ce:	cf 92       	push	r12
    16d0:	df 92       	push	r13
    16d2:	ef 92       	push	r14
    16d4:	ff 92       	push	r15
    16d6:	0f 93       	push	r16
    16d8:	1f 93       	push	r17
    16da:	cf 93       	push	r28
    16dc:	df 93       	push	r29
    16de:	cd b7       	in	r28, 0x3d	; 61
    16e0:	de b7       	in	r29, 0x3e	; 62
    16e2:	6a 97       	sbiw	r28, 0x1a	; 26
    16e4:	0f b6       	in	r0, 0x3f	; 63
    16e6:	f8 94       	cli
    16e8:	de bf       	out	0x3e, r29	; 62
    16ea:	0f be       	out	0x3f, r0	; 63
    16ec:	cd bf       	out	0x3d, r28	; 61
    16ee:	9a 8f       	std	Y+26, r25	; 0x1a
    16f0:	89 8f       	std	Y+25, r24	; 0x19
	float yawProportional = calculateProportional(model->MagYawDegrees(), model->ReferenceMagYawDegrees());
    16f2:	89 8d       	ldd	r24, Y+25	; 0x19
    16f4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    16f6:	fc 01       	movw	r30, r24
    16f8:	80 81       	ld	r24, Z
    16fa:	91 81       	ldd	r25, Z+1	; 0x01
    16fc:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_ZNK10helicopter5model11SystemModel22ReferenceMagYawDegreesEv>
    1700:	6b 01       	movw	r12, r22
    1702:	7c 01       	movw	r14, r24
    1704:	89 8d       	ldd	r24, Y+25	; 0x19
    1706:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1708:	fc 01       	movw	r30, r24
    170a:	80 81       	ld	r24, Z
    170c:	91 81       	ldd	r25, Z+1	; 0x01
    170e:	0e 94 3d 01 	call	0x27a	; 0x27a <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>
    1712:	dc 01       	movw	r26, r24
    1714:	cb 01       	movw	r24, r22
    1716:	e9 8d       	ldd	r30, Y+25	; 0x19
    1718:	fa 8d       	ldd	r31, Y+26	; 0x1a
    171a:	97 01       	movw	r18, r14
    171c:	86 01       	movw	r16, r12
    171e:	ac 01       	movw	r20, r24
    1720:	bd 01       	movw	r22, r26
    1722:	cf 01       	movw	r24, r30
    1724:	0e 94 06 07 	call	0xe0c	; 0xe0c <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    1728:	dc 01       	movw	r26, r24
    172a:	cb 01       	movw	r24, r22
    172c:	89 83       	std	Y+1, r24	; 0x01
    172e:	9a 83       	std	Y+2, r25	; 0x02
    1730:	ab 83       	std	Y+3, r26	; 0x03
    1732:	bc 83       	std	Y+4, r27	; 0x04
	
	yawProportional = convertYawErrorFrom360to180(yawProportional);
    1734:	89 81       	ldd	r24, Y+1	; 0x01
    1736:	9a 81       	ldd	r25, Y+2	; 0x02
    1738:	ab 81       	ldd	r26, Y+3	; 0x03
    173a:	bc 81       	ldd	r27, Y+4	; 0x04
    173c:	29 8d       	ldd	r18, Y+25	; 0x19
    173e:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1740:	ac 01       	movw	r20, r24
    1742:	bd 01       	movw	r22, r26
    1744:	c9 01       	movw	r24, r18
    1746:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef>
    174a:	dc 01       	movw	r26, r24
    174c:	cb 01       	movw	r24, r22
    174e:	89 83       	std	Y+1, r24	; 0x01
    1750:	9a 83       	std	Y+2, r25	; 0x02
    1752:	ab 83       	std	Y+3, r26	; 0x03
    1754:	bc 83       	std	Y+4, r27	; 0x04
	
	float yawIntegralAntiWindup = calculateIntegralAntiWindup(model->YawControlBeforeServoLimitsAdjustment(), model->YawControl(), yawAntiWindupGain);
    1756:	89 8d       	ldd	r24, Y+25	; 0x19
    1758:	9a 8d       	ldd	r25, Y+26	; 0x1a
    175a:	fc 01       	movw	r30, r24
    175c:	c0 88       	ldd	r12, Z+16	; 0x10
    175e:	d1 88       	ldd	r13, Z+17	; 0x11
    1760:	e2 88       	ldd	r14, Z+18	; 0x12
    1762:	f3 88       	ldd	r15, Z+19	; 0x13
    1764:	89 8d       	ldd	r24, Y+25	; 0x19
    1766:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1768:	fc 01       	movw	r30, r24
    176a:	80 81       	ld	r24, Z
    176c:	91 81       	ldd	r25, Z+1	; 0x01
    176e:	0e 94 69 01 	call	0x2d2	; 0x2d2 <_ZNK10helicopter5model11SystemModel10YawControlEv>
    1772:	4b 01       	movw	r8, r22
    1774:	5c 01       	movw	r10, r24
    1776:	89 8d       	ldd	r24, Y+25	; 0x19
    1778:	9a 8d       	ldd	r25, Y+26	; 0x1a
    177a:	fc 01       	movw	r30, r24
    177c:	80 81       	ld	r24, Z
    177e:	91 81       	ldd	r25, Z+1	; 0x01
    1780:	0e 94 9f 01 	call	0x33e	; 0x33e <_ZNK10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEv>
    1784:	dc 01       	movw	r26, r24
    1786:	cb 01       	movw	r24, r22
    1788:	e9 8d       	ldd	r30, Y+25	; 0x19
    178a:	fa 8d       	ldd	r31, Y+26	; 0x1a
    178c:	95 01       	movw	r18, r10
    178e:	84 01       	movw	r16, r8
    1790:	ac 01       	movw	r20, r24
    1792:	bd 01       	movw	r22, r26
    1794:	cf 01       	movw	r24, r30
    1796:	0e 94 35 07 	call	0xe6a	; 0xe6a <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    179a:	dc 01       	movw	r26, r24
    179c:	cb 01       	movw	r24, r22
    179e:	8d 83       	std	Y+5, r24	; 0x05
    17a0:	9e 83       	std	Y+6, r25	; 0x06
    17a2:	af 83       	std	Y+7, r26	; 0x07
    17a4:	b8 87       	std	Y+8, r27	; 0x08
	float weightedYawIntegral = calculateIntegral(yawProportional, model->YawIntegral(), yawIntegralAntiWindup, yawIntegralGain);
    17a6:	89 8d       	ldd	r24, Y+25	; 0x19
    17a8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    17aa:	fc 01       	movw	r30, r24
    17ac:	a4 80       	ldd	r10, Z+4	; 0x04
    17ae:	b5 80       	ldd	r11, Z+5	; 0x05
    17b0:	c6 80       	ldd	r12, Z+6	; 0x06
    17b2:	d7 80       	ldd	r13, Z+7	; 0x07
    17b4:	89 8d       	ldd	r24, Y+25	; 0x19
    17b6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    17b8:	fc 01       	movw	r30, r24
    17ba:	80 81       	ld	r24, Z
    17bc:	91 81       	ldd	r25, Z+1	; 0x01
    17be:	0e 94 01 02 	call	0x402	; 0x402 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>
    17c2:	9b 01       	movw	r18, r22
    17c4:	ac 01       	movw	r20, r24
    17c6:	ed 80       	ldd	r14, Y+5	; 0x05
    17c8:	fe 80       	ldd	r15, Y+6	; 0x06
    17ca:	0f 81       	ldd	r16, Y+7	; 0x07
    17cc:	18 85       	ldd	r17, Y+8	; 0x08
    17ce:	89 81       	ldd	r24, Y+1	; 0x01
    17d0:	9a 81       	ldd	r25, Y+2	; 0x02
    17d2:	ab 81       	ldd	r26, Y+3	; 0x03
    17d4:	bc 81       	ldd	r27, Y+4	; 0x04
    17d6:	e9 8d       	ldd	r30, Y+25	; 0x19
    17d8:	fa 8d       	ldd	r31, Y+26	; 0x1a
    17da:	45 01       	movw	r8, r10
    17dc:	56 01       	movw	r10, r12
    17de:	67 01       	movw	r12, r14
    17e0:	78 01       	movw	r14, r16
    17e2:	89 01       	movw	r16, r18
    17e4:	9a 01       	movw	r18, r20
    17e6:	ac 01       	movw	r20, r24
    17e8:	bd 01       	movw	r22, r26
    17ea:	cf 01       	movw	r24, r30
    17ec:	0e 94 86 07 	call	0xf0c	; 0xf0c <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    17f0:	dc 01       	movw	r26, r24
    17f2:	cb 01       	movw	r24, r22
    17f4:	89 87       	std	Y+9, r24	; 0x09
    17f6:	9a 87       	std	Y+10, r25	; 0x0a
    17f8:	ab 87       	std	Y+11, r26	; 0x0b
    17fa:	bc 87       	std	Y+12, r27	; 0x0c
	float yawDerivativeError = calculateVelocityError(model->YawVelocityDegreesPerSecond(), model->ReferenceYawVelocityDegreesPerSecond());
    17fc:	89 8d       	ldd	r24, Y+25	; 0x19
    17fe:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1800:	fc 01       	movw	r30, r24
    1802:	80 81       	ld	r24, Z
    1804:	91 81       	ldd	r25, Z+1	; 0x01
    1806:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_ZNK10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEv>
    180a:	6b 01       	movw	r12, r22
    180c:	7c 01       	movw	r14, r24
    180e:	89 8d       	ldd	r24, Y+25	; 0x19
    1810:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1812:	fc 01       	movw	r30, r24
    1814:	80 81       	ld	r24, Z
    1816:	91 81       	ldd	r25, Z+1	; 0x01
    1818:	0e 94 d5 01 	call	0x3aa	; 0x3aa <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>
    181c:	dc 01       	movw	r26, r24
    181e:	cb 01       	movw	r24, r22
    1820:	e9 8d       	ldd	r30, Y+25	; 0x19
    1822:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1824:	97 01       	movw	r18, r14
    1826:	86 01       	movw	r16, r12
    1828:	ac 01       	movw	r20, r24
    182a:	bd 01       	movw	r22, r26
    182c:	cf 01       	movw	r24, r30
    182e:	0e 94 58 08 	call	0x10b0	; 0x10b0 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    1832:	dc 01       	movw	r26, r24
    1834:	cb 01       	movw	r24, r22
    1836:	8d 87       	std	Y+13, r24	; 0x0d
    1838:	9e 87       	std	Y+14, r25	; 0x0e
    183a:	af 87       	std	Y+15, r26	; 0x0f
    183c:	b8 8b       	std	Y+16, r27	; 0x10
	float yawControlBeforeServoLimitsAdjustment = calculateOuterLoopControlValue(yawProportional, yawDerivativeError, weightedYawIntegral, yawProportionalGain, yawDerivativeGain);
    183e:	89 8d       	ldd	r24, Y+25	; 0x19
    1840:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1842:	fc 01       	movw	r30, r24
    1844:	80 85       	ldd	r24, Z+8	; 0x08
    1846:	91 85       	ldd	r25, Z+9	; 0x09
    1848:	a2 85       	ldd	r26, Z+10	; 0x0a
    184a:	b3 85       	ldd	r27, Z+11	; 0x0b
    184c:	29 8d       	ldd	r18, Y+25	; 0x19
    184e:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1850:	f9 01       	movw	r30, r18
    1852:	84 84       	ldd	r8, Z+12	; 0x0c
    1854:	95 84       	ldd	r9, Z+13	; 0x0d
    1856:	a6 84       	ldd	r10, Z+14	; 0x0e
    1858:	b7 84       	ldd	r11, Z+15	; 0x0f
    185a:	c9 84       	ldd	r12, Y+9	; 0x09
    185c:	da 84       	ldd	r13, Y+10	; 0x0a
    185e:	eb 84       	ldd	r14, Y+11	; 0x0b
    1860:	fc 84       	ldd	r15, Y+12	; 0x0c
    1862:	0d 85       	ldd	r16, Y+13	; 0x0d
    1864:	1e 85       	ldd	r17, Y+14	; 0x0e
    1866:	2f 85       	ldd	r18, Y+15	; 0x0f
    1868:	38 89       	ldd	r19, Y+16	; 0x10
    186a:	49 81       	ldd	r20, Y+1	; 0x01
    186c:	5a 81       	ldd	r21, Y+2	; 0x02
    186e:	6b 81       	ldd	r22, Y+3	; 0x03
    1870:	7c 81       	ldd	r23, Y+4	; 0x04
    1872:	e9 8d       	ldd	r30, Y+25	; 0x19
    1874:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1876:	7b 2e       	mov	r7, r27
    1878:	7f 92       	push	r7
    187a:	7a 2e       	mov	r7, r26
    187c:	7f 92       	push	r7
    187e:	79 2e       	mov	r7, r25
    1880:	7f 92       	push	r7
    1882:	8f 93       	push	r24
    1884:	cf 01       	movw	r24, r30
    1886:	0e 94 87 08 	call	0x110e	; 0x110e <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>
    188a:	0f 90       	pop	r0
    188c:	0f 90       	pop	r0
    188e:	0f 90       	pop	r0
    1890:	0f 90       	pop	r0
    1892:	dc 01       	movw	r26, r24
    1894:	cb 01       	movw	r24, r22
    1896:	89 8b       	std	Y+17, r24	; 0x11
    1898:	9a 8b       	std	Y+18, r25	; 0x12
    189a:	ab 8b       	std	Y+19, r26	; 0x13
    189c:	bc 8b       	std	Y+20, r27	; 0x14
	float yawControl = adjustControlForServoLimits(yawControlBeforeServoLimitsAdjustment, minYawServoControlValue, maxYawServoControlValue);
    189e:	89 8d       	ldd	r24, Y+25	; 0x19
    18a0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    18a2:	80 5b       	subi	r24, 0xB0	; 176
    18a4:	9f 4f       	sbci	r25, 0xFF	; 255
    18a6:	fc 01       	movw	r30, r24
    18a8:	e0 80       	ld	r14, Z
    18aa:	f1 80       	ldd	r15, Z+1	; 0x01
    18ac:	02 81       	ldd	r16, Z+2	; 0x02
    18ae:	13 81       	ldd	r17, Z+3	; 0x03
    18b0:	89 8d       	ldd	r24, Y+25	; 0x19
    18b2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    18b4:	84 5b       	subi	r24, 0xB4	; 180
    18b6:	9f 4f       	sbci	r25, 0xFF	; 255
    18b8:	fc 01       	movw	r30, r24
    18ba:	20 81       	ld	r18, Z
    18bc:	31 81       	ldd	r19, Z+1	; 0x01
    18be:	42 81       	ldd	r20, Z+2	; 0x02
    18c0:	53 81       	ldd	r21, Z+3	; 0x03
    18c2:	89 89       	ldd	r24, Y+17	; 0x11
    18c4:	9a 89       	ldd	r25, Y+18	; 0x12
    18c6:	ab 89       	ldd	r26, Y+19	; 0x13
    18c8:	bc 89       	ldd	r27, Y+20	; 0x14
    18ca:	e9 8d       	ldd	r30, Y+25	; 0x19
    18cc:	fa 8d       	ldd	r31, Y+26	; 0x1a
    18ce:	67 01       	movw	r12, r14
    18d0:	78 01       	movw	r14, r16
    18d2:	89 01       	movw	r16, r18
    18d4:	9a 01       	movw	r18, r20
    18d6:	ac 01       	movw	r20, r24
    18d8:	bd 01       	movw	r22, r26
    18da:	cf 01       	movw	r24, r30
    18dc:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    18e0:	dc 01       	movw	r26, r24
    18e2:	cb 01       	movw	r24, r22
    18e4:	8d 8b       	std	Y+21, r24	; 0x15
    18e6:	9e 8b       	std	Y+22, r25	; 0x16
    18e8:	af 8b       	std	Y+23, r26	; 0x17
    18ea:	b8 8f       	std	Y+24, r27	; 0x18
	
	model->YawControl(yawControl);
    18ec:	89 8d       	ldd	r24, Y+25	; 0x19
    18ee:	9a 8d       	ldd	r25, Y+26	; 0x1a
    18f0:	fc 01       	movw	r30, r24
    18f2:	20 81       	ld	r18, Z
    18f4:	31 81       	ldd	r19, Z+1	; 0x01
    18f6:	8d 89       	ldd	r24, Y+21	; 0x15
    18f8:	9e 89       	ldd	r25, Y+22	; 0x16
    18fa:	af 89       	ldd	r26, Y+23	; 0x17
    18fc:	b8 8d       	ldd	r27, Y+24	; 0x18
    18fe:	ac 01       	movw	r20, r24
    1900:	bd 01       	movw	r22, r26
    1902:	c9 01       	movw	r24, r18
    1904:	0e 94 7f 01 	call	0x2fe	; 0x2fe <_ZN10helicopter5model11SystemModel10YawControlEf>
	model->YawControlBeforeServoLimitsAdjustment(yawControlBeforeServoLimitsAdjustment);
    1908:	89 8d       	ldd	r24, Y+25	; 0x19
    190a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    190c:	fc 01       	movw	r30, r24
    190e:	20 81       	ld	r18, Z
    1910:	31 81       	ldd	r19, Z+1	; 0x01
    1912:	89 89       	ldd	r24, Y+17	; 0x11
    1914:	9a 89       	ldd	r25, Y+18	; 0x12
    1916:	ab 89       	ldd	r26, Y+19	; 0x13
    1918:	bc 89       	ldd	r27, Y+20	; 0x14
    191a:	ac 01       	movw	r20, r24
    191c:	bd 01       	movw	r22, r26
    191e:	c9 01       	movw	r24, r18
    1920:	0e 94 b5 01 	call	0x36a	; 0x36a <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf>
	model->YawIntegral(weightedYawIntegral);
    1924:	89 8d       	ldd	r24, Y+25	; 0x19
    1926:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1928:	fc 01       	movw	r30, r24
    192a:	20 81       	ld	r18, Z
    192c:	31 81       	ldd	r19, Z+1	; 0x01
    192e:	89 85       	ldd	r24, Y+9	; 0x09
    1930:	9a 85       	ldd	r25, Y+10	; 0x0a
    1932:	ab 85       	ldd	r26, Y+11	; 0x0b
    1934:	bc 85       	ldd	r27, Y+12	; 0x0c
    1936:	ac 01       	movw	r20, r24
    1938:	bd 01       	movw	r22, r26
    193a:	c9 01       	movw	r24, r18
    193c:	0e 94 17 02 	call	0x42e	; 0x42e <_ZN10helicopter5model11SystemModel11YawIntegralEf>
	model->YawProportional(yawProportional);
    1940:	89 8d       	ldd	r24, Y+25	; 0x19
    1942:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1944:	fc 01       	movw	r30, r24
    1946:	20 81       	ld	r18, Z
    1948:	31 81       	ldd	r19, Z+1	; 0x01
    194a:	89 81       	ldd	r24, Y+1	; 0x01
    194c:	9a 81       	ldd	r25, Y+2	; 0x02
    194e:	ab 81       	ldd	r26, Y+3	; 0x03
    1950:	bc 81       	ldd	r27, Y+4	; 0x04
    1952:	ac 01       	movw	r20, r24
    1954:	bd 01       	movw	r22, r26
    1956:	c9 01       	movw	r24, r18
    1958:	0e 94 37 02 	call	0x46e	; 0x46e <_ZN10helicopter5model11SystemModel15YawProportionalEf>
	model->YawDerivativeError(yawDerivativeError);
    195c:	89 8d       	ldd	r24, Y+25	; 0x19
    195e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1960:	fc 01       	movw	r30, r24
    1962:	20 81       	ld	r18, Z
    1964:	31 81       	ldd	r19, Z+1	; 0x01
    1966:	8d 85       	ldd	r24, Y+13	; 0x0d
    1968:	9e 85       	ldd	r25, Y+14	; 0x0e
    196a:	af 85       	ldd	r26, Y+15	; 0x0f
    196c:	b8 89       	ldd	r27, Y+16	; 0x10
    196e:	ac 01       	movw	r20, r24
    1970:	bd 01       	movw	r22, r26
    1972:	c9 01       	movw	r24, r18
    1974:	0e 94 57 02 	call	0x4ae	; 0x4ae <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf>
	
	servoDriver->controlTailRotorCollective(yawControl);
    1978:	89 8d       	ldd	r24, Y+25	; 0x19
    197a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    197c:	fc 01       	movw	r30, r24
    197e:	22 81       	ldd	r18, Z+2	; 0x02
    1980:	33 81       	ldd	r19, Z+3	; 0x03
    1982:	8d 89       	ldd	r24, Y+21	; 0x15
    1984:	9e 89       	ldd	r25, Y+22	; 0x16
    1986:	af 89       	ldd	r26, Y+23	; 0x17
    1988:	b8 8d       	ldd	r27, Y+24	; 0x18
    198a:	ac 01       	movw	r20, r24
    198c:	bd 01       	movw	r22, r26
    198e:	c9 01       	movw	r24, r18
    1990:	0e 94 a0 10 	call	0x2140	; 0x2140 <_ZN10helicopter7drivers11ServoDriver26controlTailRotorCollectiveEd>
}
    1994:	6a 96       	adiw	r28, 0x1a	; 26
    1996:	0f b6       	in	r0, 0x3f	; 63
    1998:	f8 94       	cli
    199a:	de bf       	out	0x3e, r29	; 62
    199c:	0f be       	out	0x3f, r0	; 63
    199e:	cd bf       	out	0x3d, r28	; 61
    19a0:	df 91       	pop	r29
    19a2:	cf 91       	pop	r28
    19a4:	1f 91       	pop	r17
    19a6:	0f 91       	pop	r16
    19a8:	ff 90       	pop	r15
    19aa:	ef 90       	pop	r14
    19ac:	df 90       	pop	r13
    19ae:	cf 90       	pop	r12
    19b0:	bf 90       	pop	r11
    19b2:	af 90       	pop	r10
    19b4:	9f 90       	pop	r9
    19b6:	8f 90       	pop	r8
    19b8:	7f 90       	pop	r7
    19ba:	08 95       	ret

000019bc <_ZN10helicopter10controller13PIDController34mainRotorCollectiveOuterLoopUpdateEv>:

void PIDController::mainRotorCollectiveOuterLoopUpdate()
{
    19bc:	7f 92       	push	r7
    19be:	8f 92       	push	r8
    19c0:	9f 92       	push	r9
    19c2:	af 92       	push	r10
    19c4:	bf 92       	push	r11
    19c6:	cf 92       	push	r12
    19c8:	df 92       	push	r13
    19ca:	ef 92       	push	r14
    19cc:	ff 92       	push	r15
    19ce:	0f 93       	push	r16
    19d0:	1f 93       	push	r17
    19d2:	cf 93       	push	r28
    19d4:	df 93       	push	r29
    19d6:	cd b7       	in	r28, 0x3d	; 61
    19d8:	de b7       	in	r29, 0x3e	; 62
    19da:	6a 97       	sbiw	r28, 0x1a	; 26
    19dc:	0f b6       	in	r0, 0x3f	; 63
    19de:	f8 94       	cli
    19e0:	de bf       	out	0x3e, r29	; 62
    19e2:	0f be       	out	0x3f, r0	; 63
    19e4:	cd bf       	out	0x3d, r28	; 61
    19e6:	9a 8f       	std	Y+26, r25	; 0x1a
    19e8:	89 8f       	std	Y+25, r24	; 0x19
	float zProportional = calculateProportional(model->AltitudeFeetAgl(), model->ReferenceAltitudeFeet());
    19ea:	89 8d       	ldd	r24, Y+25	; 0x19
    19ec:	9a 8d       	ldd	r25, Y+26	; 0x1a
    19ee:	fc 01       	movw	r30, r24
    19f0:	80 81       	ld	r24, Z
    19f2:	91 81       	ldd	r25, Z+1	; 0x01
    19f4:	0e 94 82 04 	call	0x904	; 0x904 <_ZNK10helicopter5model11SystemModel21ReferenceAltitudeFeetEv>
    19f8:	6b 01       	movw	r12, r22
    19fa:	7c 01       	movw	r14, r24
    19fc:	89 8d       	ldd	r24, Y+25	; 0x19
    19fe:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a00:	fc 01       	movw	r30, r24
    1a02:	80 81       	ld	r24, Z
    1a04:	91 81       	ldd	r25, Z+1	; 0x01
    1a06:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    1a0a:	dc 01       	movw	r26, r24
    1a0c:	cb 01       	movw	r24, r22
    1a0e:	e9 8d       	ldd	r30, Y+25	; 0x19
    1a10:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1a12:	97 01       	movw	r18, r14
    1a14:	86 01       	movw	r16, r12
    1a16:	ac 01       	movw	r20, r24
    1a18:	bd 01       	movw	r22, r26
    1a1a:	cf 01       	movw	r24, r30
    1a1c:	0e 94 06 07 	call	0xe0c	; 0xe0c <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    1a20:	dc 01       	movw	r26, r24
    1a22:	cb 01       	movw	r24, r22
    1a24:	89 83       	std	Y+1, r24	; 0x01
    1a26:	9a 83       	std	Y+2, r25	; 0x02
    1a28:	ab 83       	std	Y+3, r26	; 0x03
    1a2a:	bc 83       	std	Y+4, r27	; 0x04
	
	float zIntegralAntiWindup = calculateIntegralAntiWindup(model->MainRotorControlBeforeServoLimitsAdjustment(), model->MainRotorCollectiveControl(), zAntiWindupGain);
    1a2c:	89 8d       	ldd	r24, Y+25	; 0x19
    1a2e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a30:	88 5b       	subi	r24, 0xB8	; 184
    1a32:	9f 4f       	sbci	r25, 0xFF	; 255
    1a34:	fc 01       	movw	r30, r24
    1a36:	c0 80       	ld	r12, Z
    1a38:	d1 80       	ldd	r13, Z+1	; 0x01
    1a3a:	e2 80       	ldd	r14, Z+2	; 0x02
    1a3c:	f3 80       	ldd	r15, Z+3	; 0x03
    1a3e:	89 8d       	ldd	r24, Y+25	; 0x19
    1a40:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a42:	fc 01       	movw	r30, r24
    1a44:	80 81       	ld	r24, Z
    1a46:	91 81       	ldd	r25, Z+1	; 0x01
    1a48:	0e 94 9a 04 	call	0x934	; 0x934 <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>
    1a4c:	4b 01       	movw	r8, r22
    1a4e:	5c 01       	movw	r10, r24
    1a50:	89 8d       	ldd	r24, Y+25	; 0x19
    1a52:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a54:	fc 01       	movw	r30, r24
    1a56:	80 81       	ld	r24, Z
    1a58:	91 81       	ldd	r25, Z+1	; 0x01
    1a5a:	0e 94 d5 04 	call	0x9aa	; 0x9aa <_ZNK10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEv>
    1a5e:	dc 01       	movw	r26, r24
    1a60:	cb 01       	movw	r24, r22
    1a62:	e9 8d       	ldd	r30, Y+25	; 0x19
    1a64:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1a66:	95 01       	movw	r18, r10
    1a68:	84 01       	movw	r16, r8
    1a6a:	ac 01       	movw	r20, r24
    1a6c:	bd 01       	movw	r22, r26
    1a6e:	cf 01       	movw	r24, r30
    1a70:	0e 94 35 07 	call	0xe6a	; 0xe6a <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    1a74:	dc 01       	movw	r26, r24
    1a76:	cb 01       	movw	r24, r22
    1a78:	8d 83       	std	Y+5, r24	; 0x05
    1a7a:	9e 83       	std	Y+6, r25	; 0x06
    1a7c:	af 83       	std	Y+7, r26	; 0x07
    1a7e:	b8 87       	std	Y+8, r27	; 0x08
	float weightedZIntegral = calculateIntegral(zProportional, model->ZIntegral(), zIntegralAntiWindup, zIntegralGain);
    1a80:	89 8d       	ldd	r24, Y+25	; 0x19
    1a82:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a84:	fc 01       	movw	r30, r24
    1a86:	a4 ac       	ldd	r10, Z+60	; 0x3c
    1a88:	b5 ac       	ldd	r11, Z+61	; 0x3d
    1a8a:	c6 ac       	ldd	r12, Z+62	; 0x3e
    1a8c:	d7 ac       	ldd	r13, Z+63	; 0x3f
    1a8e:	89 8d       	ldd	r24, Y+25	; 0x19
    1a90:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a92:	fc 01       	movw	r30, r24
    1a94:	80 81       	ld	r24, Z
    1a96:	91 81       	ldd	r25, Z+1	; 0x01
    1a98:	0e 94 40 05 	call	0xa80	; 0xa80 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>
    1a9c:	9b 01       	movw	r18, r22
    1a9e:	ac 01       	movw	r20, r24
    1aa0:	ed 80       	ldd	r14, Y+5	; 0x05
    1aa2:	fe 80       	ldd	r15, Y+6	; 0x06
    1aa4:	0f 81       	ldd	r16, Y+7	; 0x07
    1aa6:	18 85       	ldd	r17, Y+8	; 0x08
    1aa8:	89 81       	ldd	r24, Y+1	; 0x01
    1aaa:	9a 81       	ldd	r25, Y+2	; 0x02
    1aac:	ab 81       	ldd	r26, Y+3	; 0x03
    1aae:	bc 81       	ldd	r27, Y+4	; 0x04
    1ab0:	e9 8d       	ldd	r30, Y+25	; 0x19
    1ab2:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1ab4:	45 01       	movw	r8, r10
    1ab6:	56 01       	movw	r10, r12
    1ab8:	67 01       	movw	r12, r14
    1aba:	78 01       	movw	r14, r16
    1abc:	89 01       	movw	r16, r18
    1abe:	9a 01       	movw	r18, r20
    1ac0:	ac 01       	movw	r20, r24
    1ac2:	bd 01       	movw	r22, r26
    1ac4:	cf 01       	movw	r24, r30
    1ac6:	0e 94 86 07 	call	0xf0c	; 0xf0c <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    1aca:	dc 01       	movw	r26, r24
    1acc:	cb 01       	movw	r24, r22
    1ace:	89 87       	std	Y+9, r24	; 0x09
    1ad0:	9a 87       	std	Y+10, r25	; 0x0a
    1ad2:	ab 87       	std	Y+11, r26	; 0x0b
    1ad4:	bc 87       	std	Y+12, r27	; 0x0c
	float zDerivativeError = calculateVelocityError(model->ZVelocityFeetPerSecond(), model->ReferenceZVelocityFeetPerSecond());
    1ad6:	89 8d       	ldd	r24, Y+25	; 0x19
    1ad8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1ada:	fc 01       	movw	r30, r24
    1adc:	80 81       	ld	r24, Z
    1ade:	91 81       	ldd	r25, Z+1	; 0x01
    1ae0:	0e 94 28 05 	call	0xa50	; 0xa50 <_ZNK10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEv>
    1ae4:	6b 01       	movw	r12, r22
    1ae6:	7c 01       	movw	r14, r24
    1ae8:	89 8d       	ldd	r24, Y+25	; 0x19
    1aea:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1aec:	fc 01       	movw	r30, r24
    1aee:	80 81       	ld	r24, Z
    1af0:	91 81       	ldd	r25, Z+1	; 0x01
    1af2:	0e 94 10 05 	call	0xa20	; 0xa20 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>
    1af6:	dc 01       	movw	r26, r24
    1af8:	cb 01       	movw	r24, r22
    1afa:	e9 8d       	ldd	r30, Y+25	; 0x19
    1afc:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1afe:	97 01       	movw	r18, r14
    1b00:	86 01       	movw	r16, r12
    1b02:	ac 01       	movw	r20, r24
    1b04:	bd 01       	movw	r22, r26
    1b06:	cf 01       	movw	r24, r30
    1b08:	0e 94 58 08 	call	0x10b0	; 0x10b0 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    1b0c:	dc 01       	movw	r26, r24
    1b0e:	cb 01       	movw	r24, r22
    1b10:	8d 87       	std	Y+13, r24	; 0x0d
    1b12:	9e 87       	std	Y+14, r25	; 0x0e
    1b14:	af 87       	std	Y+15, r26	; 0x0f
    1b16:	b8 8b       	std	Y+16, r27	; 0x10
	float mainRotorControlBeforeServoLimitsAdjustment = calculateOuterLoopControlValue(zProportional, zDerivativeError, weightedZIntegral, zProportionalGain, zDerivativeGain);
    1b18:	89 8d       	ldd	r24, Y+25	; 0x19
    1b1a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1b1c:	80 5c       	subi	r24, 0xC0	; 192
    1b1e:	9f 4f       	sbci	r25, 0xFF	; 255
    1b20:	fc 01       	movw	r30, r24
    1b22:	80 81       	ld	r24, Z
    1b24:	91 81       	ldd	r25, Z+1	; 0x01
    1b26:	a2 81       	ldd	r26, Z+2	; 0x02
    1b28:	b3 81       	ldd	r27, Z+3	; 0x03
    1b2a:	29 8d       	ldd	r18, Y+25	; 0x19
    1b2c:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1b2e:	2c 5b       	subi	r18, 0xBC	; 188
    1b30:	3f 4f       	sbci	r19, 0xFF	; 255
    1b32:	f9 01       	movw	r30, r18
    1b34:	80 80       	ld	r8, Z
    1b36:	91 80       	ldd	r9, Z+1	; 0x01
    1b38:	a2 80       	ldd	r10, Z+2	; 0x02
    1b3a:	b3 80       	ldd	r11, Z+3	; 0x03
    1b3c:	c9 84       	ldd	r12, Y+9	; 0x09
    1b3e:	da 84       	ldd	r13, Y+10	; 0x0a
    1b40:	eb 84       	ldd	r14, Y+11	; 0x0b
    1b42:	fc 84       	ldd	r15, Y+12	; 0x0c
    1b44:	0d 85       	ldd	r16, Y+13	; 0x0d
    1b46:	1e 85       	ldd	r17, Y+14	; 0x0e
    1b48:	2f 85       	ldd	r18, Y+15	; 0x0f
    1b4a:	38 89       	ldd	r19, Y+16	; 0x10
    1b4c:	49 81       	ldd	r20, Y+1	; 0x01
    1b4e:	5a 81       	ldd	r21, Y+2	; 0x02
    1b50:	6b 81       	ldd	r22, Y+3	; 0x03
    1b52:	7c 81       	ldd	r23, Y+4	; 0x04
    1b54:	e9 8d       	ldd	r30, Y+25	; 0x19
    1b56:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1b58:	7b 2e       	mov	r7, r27
    1b5a:	7f 92       	push	r7
    1b5c:	7a 2e       	mov	r7, r26
    1b5e:	7f 92       	push	r7
    1b60:	79 2e       	mov	r7, r25
    1b62:	7f 92       	push	r7
    1b64:	8f 93       	push	r24
    1b66:	cf 01       	movw	r24, r30
    1b68:	0e 94 87 08 	call	0x110e	; 0x110e <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>
    1b6c:	0f 90       	pop	r0
    1b6e:	0f 90       	pop	r0
    1b70:	0f 90       	pop	r0
    1b72:	0f 90       	pop	r0
    1b74:	dc 01       	movw	r26, r24
    1b76:	cb 01       	movw	r24, r22
    1b78:	89 8b       	std	Y+17, r24	; 0x11
    1b7a:	9a 8b       	std	Y+18, r25	; 0x12
    1b7c:	ab 8b       	std	Y+19, r26	; 0x13
    1b7e:	bc 8b       	std	Y+20, r27	; 0x14
	float mainRotorControl = adjustControlForServoLimits(mainRotorControlBeforeServoLimitsAdjustment, minMainRotorServoControlValue, maxMainRotorServoControlValue);
    1b80:	89 8d       	ldd	r24, Y+25	; 0x19
    1b82:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1b84:	88 59       	subi	r24, 0x98	; 152
    1b86:	9f 4f       	sbci	r25, 0xFF	; 255
    1b88:	fc 01       	movw	r30, r24
    1b8a:	e0 80       	ld	r14, Z
    1b8c:	f1 80       	ldd	r15, Z+1	; 0x01
    1b8e:	02 81       	ldd	r16, Z+2	; 0x02
    1b90:	13 81       	ldd	r17, Z+3	; 0x03
    1b92:	89 8d       	ldd	r24, Y+25	; 0x19
    1b94:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1b96:	8c 59       	subi	r24, 0x9C	; 156
    1b98:	9f 4f       	sbci	r25, 0xFF	; 255
    1b9a:	fc 01       	movw	r30, r24
    1b9c:	20 81       	ld	r18, Z
    1b9e:	31 81       	ldd	r19, Z+1	; 0x01
    1ba0:	42 81       	ldd	r20, Z+2	; 0x02
    1ba2:	53 81       	ldd	r21, Z+3	; 0x03
    1ba4:	89 89       	ldd	r24, Y+17	; 0x11
    1ba6:	9a 89       	ldd	r25, Y+18	; 0x12
    1ba8:	ab 89       	ldd	r26, Y+19	; 0x13
    1baa:	bc 89       	ldd	r27, Y+20	; 0x14
    1bac:	e9 8d       	ldd	r30, Y+25	; 0x19
    1bae:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1bb0:	67 01       	movw	r12, r14
    1bb2:	78 01       	movw	r14, r16
    1bb4:	89 01       	movw	r16, r18
    1bb6:	9a 01       	movw	r18, r20
    1bb8:	ac 01       	movw	r20, r24
    1bba:	bd 01       	movw	r22, r26
    1bbc:	cf 01       	movw	r24, r30
    1bbe:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    1bc2:	dc 01       	movw	r26, r24
    1bc4:	cb 01       	movw	r24, r22
    1bc6:	8d 8b       	std	Y+21, r24	; 0x15
    1bc8:	9e 8b       	std	Y+22, r25	; 0x16
    1bca:	af 8b       	std	Y+23, r26	; 0x17
    1bcc:	b8 8f       	std	Y+24, r27	; 0x18
	
	model->MainRotorCollectiveControl(mainRotorControl);
    1bce:	89 8d       	ldd	r24, Y+25	; 0x19
    1bd0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1bd2:	fc 01       	movw	r30, r24
    1bd4:	20 81       	ld	r18, Z
    1bd6:	31 81       	ldd	r19, Z+1	; 0x01
    1bd8:	8d 89       	ldd	r24, Y+21	; 0x15
    1bda:	9e 89       	ldd	r25, Y+22	; 0x16
    1bdc:	af 89       	ldd	r26, Y+23	; 0x17
    1bde:	b8 8d       	ldd	r27, Y+24	; 0x18
    1be0:	ac 01       	movw	r20, r24
    1be2:	bd 01       	movw	r22, r26
    1be4:	c9 01       	movw	r24, r18
    1be6:	0e 94 b2 04 	call	0x964	; 0x964 <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf>
	model->MainRotorControlBeforeServoLimitsAdjustment(mainRotorControlBeforeServoLimitsAdjustment);
    1bea:	89 8d       	ldd	r24, Y+25	; 0x19
    1bec:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1bee:	fc 01       	movw	r30, r24
    1bf0:	20 81       	ld	r18, Z
    1bf2:	31 81       	ldd	r19, Z+1	; 0x01
    1bf4:	89 89       	ldd	r24, Y+17	; 0x11
    1bf6:	9a 89       	ldd	r25, Y+18	; 0x12
    1bf8:	ab 89       	ldd	r26, Y+19	; 0x13
    1bfa:	bc 89       	ldd	r27, Y+20	; 0x14
    1bfc:	ac 01       	movw	r20, r24
    1bfe:	bd 01       	movw	r22, r26
    1c00:	c9 01       	movw	r24, r18
    1c02:	0e 94 ed 04 	call	0x9da	; 0x9da <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf>
	model->ZIntegral(weightedZIntegral);
    1c06:	89 8d       	ldd	r24, Y+25	; 0x19
    1c08:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c0a:	fc 01       	movw	r30, r24
    1c0c:	20 81       	ld	r18, Z
    1c0e:	31 81       	ldd	r19, Z+1	; 0x01
    1c10:	89 85       	ldd	r24, Y+9	; 0x09
    1c12:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c14:	ab 85       	ldd	r26, Y+11	; 0x0b
    1c16:	bc 85       	ldd	r27, Y+12	; 0x0c
    1c18:	ac 01       	movw	r20, r24
    1c1a:	bd 01       	movw	r22, r26
    1c1c:	c9 01       	movw	r24, r18
    1c1e:	0e 94 58 05 	call	0xab0	; 0xab0 <_ZN10helicopter5model11SystemModel9ZIntegralEf>
	model->ZProportional(zProportional);
    1c22:	89 8d       	ldd	r24, Y+25	; 0x19
    1c24:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c26:	fc 01       	movw	r30, r24
    1c28:	20 81       	ld	r18, Z
    1c2a:	31 81       	ldd	r19, Z+1	; 0x01
    1c2c:	89 81       	ldd	r24, Y+1	; 0x01
    1c2e:	9a 81       	ldd	r25, Y+2	; 0x02
    1c30:	ab 81       	ldd	r26, Y+3	; 0x03
    1c32:	bc 81       	ldd	r27, Y+4	; 0x04
    1c34:	ac 01       	movw	r20, r24
    1c36:	bd 01       	movw	r22, r26
    1c38:	c9 01       	movw	r24, r18
    1c3a:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <_ZN10helicopter5model11SystemModel13ZProportionalEf>
	model->ZDerivativeError(zDerivativeError);
    1c3e:	89 8d       	ldd	r24, Y+25	; 0x19
    1c40:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c42:	fc 01       	movw	r30, r24
    1c44:	20 81       	ld	r18, Z
    1c46:	31 81       	ldd	r19, Z+1	; 0x01
    1c48:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c4a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c4c:	af 85       	ldd	r26, Y+15	; 0x0f
    1c4e:	b8 89       	ldd	r27, Y+16	; 0x10
    1c50:	ac 01       	movw	r20, r24
    1c52:	bd 01       	movw	r22, r26
    1c54:	c9 01       	movw	r24, r18
    1c56:	0e 94 9e 05 	call	0xb3c	; 0xb3c <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf>
	
	servoDriver->controlMainRotorCollective(mainRotorControl);
    1c5a:	89 8d       	ldd	r24, Y+25	; 0x19
    1c5c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c5e:	fc 01       	movw	r30, r24
    1c60:	22 81       	ldd	r18, Z+2	; 0x02
    1c62:	33 81       	ldd	r19, Z+3	; 0x03
    1c64:	8d 89       	ldd	r24, Y+21	; 0x15
    1c66:	9e 89       	ldd	r25, Y+22	; 0x16
    1c68:	af 89       	ldd	r26, Y+23	; 0x17
    1c6a:	b8 8d       	ldd	r27, Y+24	; 0x18
    1c6c:	ac 01       	movw	r20, r24
    1c6e:	bd 01       	movw	r22, r26
    1c70:	c9 01       	movw	r24, r18
    1c72:	0e 94 37 11 	call	0x226e	; 0x226e <_ZN10helicopter7drivers11ServoDriver26controlMainRotorCollectiveEd>
}
    1c76:	6a 96       	adiw	r28, 0x1a	; 26
    1c78:	0f b6       	in	r0, 0x3f	; 63
    1c7a:	f8 94       	cli
    1c7c:	de bf       	out	0x3e, r29	; 62
    1c7e:	0f be       	out	0x3f, r0	; 63
    1c80:	cd bf       	out	0x3d, r28	; 61
    1c82:	df 91       	pop	r29
    1c84:	cf 91       	pop	r28
    1c86:	1f 91       	pop	r17
    1c88:	0f 91       	pop	r16
    1c8a:	ff 90       	pop	r15
    1c8c:	ef 90       	pop	r14
    1c8e:	df 90       	pop	r13
    1c90:	cf 90       	pop	r12
    1c92:	bf 90       	pop	r11
    1c94:	af 90       	pop	r10
    1c96:	9f 90       	pop	r9
    1c98:	8f 90       	pop	r8
    1c9a:	7f 90       	pop	r7
    1c9c:	08 95       	ret

00001c9e <_ZN10helicopter10controller13PIDController13addBlownFrameEv>:



//TODO WTF IS THIS DOING HERE?? THIS IS THE WRONG CONTROLLER!!
void PIDController::addBlownFrame()
{
    1c9e:	cf 93       	push	r28
    1ca0:	df 93       	push	r29
    1ca2:	1f 92       	push	r1
    1ca4:	1f 92       	push	r1
    1ca6:	cd b7       	in	r28, 0x3d	; 61
    1ca8:	de b7       	in	r29, 0x3e	; 62
    1caa:	9a 83       	std	Y+2, r25	; 0x02
    1cac:	89 83       	std	Y+1, r24	; 0x01
	model->BlownFrames(model->BlownFrames() + 1);
    1cae:	89 81       	ldd	r24, Y+1	; 0x01
    1cb0:	9a 81       	ldd	r25, Y+2	; 0x02
    1cb2:	fc 01       	movw	r30, r24
    1cb4:	80 81       	ld	r24, Z
    1cb6:	91 81       	ldd	r25, Z+1	; 0x01
    1cb8:	0e 94 c1 05 	call	0xb82	; 0xb82 <_ZNK10helicopter5model11SystemModel11BlownFramesEv>
    1cbc:	dc 01       	movw	r26, r24
    1cbe:	cb 01       	movw	r24, r22
    1cc0:	01 96       	adiw	r24, 0x01	; 1
    1cc2:	a1 1d       	adc	r26, r1
    1cc4:	b1 1d       	adc	r27, r1
    1cc6:	29 81       	ldd	r18, Y+1	; 0x01
    1cc8:	3a 81       	ldd	r19, Y+2	; 0x02
    1cca:	f9 01       	movw	r30, r18
    1ccc:	20 81       	ld	r18, Z
    1cce:	31 81       	ldd	r19, Z+1	; 0x01
    1cd0:	ac 01       	movw	r20, r24
    1cd2:	bd 01       	movw	r22, r26
    1cd4:	c9 01       	movw	r24, r18
    1cd6:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <_ZN10helicopter5model11SystemModel11BlownFramesEl>
}
    1cda:	0f 90       	pop	r0
    1cdc:	0f 90       	pop	r0
    1cde:	df 91       	pop	r29
    1ce0:	cf 91       	pop	r28
    1ce2:	08 95       	ret

00001ce4 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef>:

float PIDController::convertYawErrorFrom360to180( float yawError ) 
{
    1ce4:	cf 93       	push	r28
    1ce6:	df 93       	push	r29
    1ce8:	00 d0       	rcall	.+0      	; 0x1cea <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x6>
    1cea:	00 d0       	rcall	.+0      	; 0x1cec <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x8>
    1cec:	cd b7       	in	r28, 0x3d	; 61
    1cee:	de b7       	in	r29, 0x3e	; 62
    1cf0:	9a 83       	std	Y+2, r25	; 0x02
    1cf2:	89 83       	std	Y+1, r24	; 0x01
    1cf4:	4b 83       	std	Y+3, r20	; 0x03
    1cf6:	5c 83       	std	Y+4, r21	; 0x04
    1cf8:	6d 83       	std	Y+5, r22	; 0x05
    1cfa:	7e 83       	std	Y+6, r23	; 0x06
	if (yawError >= 180)
    1cfc:	20 e0       	ldi	r18, 0x00	; 0
    1cfe:	30 e0       	ldi	r19, 0x00	; 0
    1d00:	44 e3       	ldi	r20, 0x34	; 52
    1d02:	53 e4       	ldi	r21, 0x43	; 67
    1d04:	6b 81       	ldd	r22, Y+3	; 0x03
    1d06:	7c 81       	ldd	r23, Y+4	; 0x04
    1d08:	8d 81       	ldd	r24, Y+5	; 0x05
    1d0a:	9e 81       	ldd	r25, Y+6	; 0x06
    1d0c:	0e 94 56 40 	call	0x80ac	; 0x80ac <__gesf2>
    1d10:	88 23       	and	r24, r24
    1d12:	8c f0       	brlt	.+34     	; 0x1d36 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x52>
	{
		yawError = yawError - 360;
    1d14:	20 e0       	ldi	r18, 0x00	; 0
    1d16:	30 e0       	ldi	r19, 0x00	; 0
    1d18:	44 eb       	ldi	r20, 0xB4	; 180
    1d1a:	53 e4       	ldi	r21, 0x43	; 67
    1d1c:	6b 81       	ldd	r22, Y+3	; 0x03
    1d1e:	7c 81       	ldd	r23, Y+4	; 0x04
    1d20:	8d 81       	ldd	r24, Y+5	; 0x05
    1d22:	9e 81       	ldd	r25, Y+6	; 0x06
    1d24:	0e 94 13 3e 	call	0x7c26	; 0x7c26 <__subsf3>
    1d28:	dc 01       	movw	r26, r24
    1d2a:	cb 01       	movw	r24, r22
    1d2c:	8b 83       	std	Y+3, r24	; 0x03
    1d2e:	9c 83       	std	Y+4, r25	; 0x04
    1d30:	ad 83       	std	Y+5, r26	; 0x05
    1d32:	be 83       	std	Y+6, r27	; 0x06
    1d34:	1c c0       	rjmp	.+56     	; 0x1d6e <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x8a>
	}
	else if (yawError < -180)
    1d36:	20 e0       	ldi	r18, 0x00	; 0
    1d38:	30 e0       	ldi	r19, 0x00	; 0
    1d3a:	44 e3       	ldi	r20, 0x34	; 52
    1d3c:	53 ec       	ldi	r21, 0xC3	; 195
    1d3e:	6b 81       	ldd	r22, Y+3	; 0x03
    1d40:	7c 81       	ldd	r23, Y+4	; 0x04
    1d42:	8d 81       	ldd	r24, Y+5	; 0x05
    1d44:	9e 81       	ldd	r25, Y+6	; 0x06
    1d46:	0e 94 78 3e 	call	0x7cf0	; 0x7cf0 <__cmpsf2>
    1d4a:	88 23       	and	r24, r24
    1d4c:	84 f4       	brge	.+32     	; 0x1d6e <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x8a>
	{
		yawError = yawError + 360;
    1d4e:	20 e0       	ldi	r18, 0x00	; 0
    1d50:	30 e0       	ldi	r19, 0x00	; 0
    1d52:	44 eb       	ldi	r20, 0xB4	; 180
    1d54:	53 e4       	ldi	r21, 0x43	; 67
    1d56:	6b 81       	ldd	r22, Y+3	; 0x03
    1d58:	7c 81       	ldd	r23, Y+4	; 0x04
    1d5a:	8d 81       	ldd	r24, Y+5	; 0x05
    1d5c:	9e 81       	ldd	r25, Y+6	; 0x06
    1d5e:	0e 94 14 3e 	call	0x7c28	; 0x7c28 <__addsf3>
    1d62:	dc 01       	movw	r26, r24
    1d64:	cb 01       	movw	r24, r22
    1d66:	8b 83       	std	Y+3, r24	; 0x03
    1d68:	9c 83       	std	Y+4, r25	; 0x04
    1d6a:	ad 83       	std	Y+5, r26	; 0x05
    1d6c:	be 83       	std	Y+6, r27	; 0x06
	}	
	
	return yawError;
    1d6e:	8b 81       	ldd	r24, Y+3	; 0x03
    1d70:	9c 81       	ldd	r25, Y+4	; 0x04
    1d72:	ad 81       	ldd	r26, Y+5	; 0x05
    1d74:	be 81       	ldd	r27, Y+6	; 0x06
}
    1d76:	bc 01       	movw	r22, r24
    1d78:	cd 01       	movw	r24, r26
    1d7a:	26 96       	adiw	r28, 0x06	; 6
    1d7c:	0f b6       	in	r0, 0x3f	; 63
    1d7e:	f8 94       	cli
    1d80:	de bf       	out	0x3e, r29	; 62
    1d82:	0f be       	out	0x3f, r0	; 63
    1d84:	cd bf       	out	0x3d, r28	; 61
    1d86:	df 91       	pop	r29
    1d88:	cf 91       	pop	r28
    1d8a:	08 95       	ret

00001d8c <_ZN10helicopter7drivers12SerialDriverD1Ev>:
				useDoubleSpeedMode(useDoubleSpeedMode)
				{
					
				}
						
				virtual ~SerialDriver()
    1d8c:	cf 93       	push	r28
    1d8e:	df 93       	push	r29
    1d90:	1f 92       	push	r1
    1d92:	1f 92       	push	r1
    1d94:	cd b7       	in	r28, 0x3d	; 61
    1d96:	de b7       	in	r29, 0x3e	; 62
    1d98:	9a 83       	std	Y+2, r25	; 0x02
    1d9a:	89 83       	std	Y+1, r24	; 0x01
				{
    1d9c:	89 81       	ldd	r24, Y+1	; 0x01
    1d9e:	9a 81       	ldd	r25, Y+2	; 0x02
    1da0:	2a e0       	ldi	r18, 0x0A	; 10
    1da2:	32 e0       	ldi	r19, 0x02	; 2
    1da4:	fc 01       	movw	r30, r24
    1da6:	31 83       	std	Z+1, r19	; 0x01
    1da8:	20 83       	st	Z, r18
					
				}
    1daa:	80 e0       	ldi	r24, 0x00	; 0
    1dac:	90 e0       	ldi	r25, 0x00	; 0
    1dae:	81 70       	andi	r24, 0x01	; 1
    1db0:	99 27       	eor	r25, r25
    1db2:	00 97       	sbiw	r24, 0x00	; 0
    1db4:	21 f0       	breq	.+8      	; 0x1dbe <_ZN10helicopter7drivers12SerialDriverD1Ev+0x32>
    1db6:	89 81       	ldd	r24, Y+1	; 0x01
    1db8:	9a 81       	ldd	r25, Y+2	; 0x02
    1dba:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    1dbe:	0f 90       	pop	r0
    1dc0:	0f 90       	pop	r0
    1dc2:	df 91       	pop	r29
    1dc4:	cf 91       	pop	r28
    1dc6:	08 95       	ret

00001dc8 <_ZN10helicopter7drivers12SerialDriverD0Ev>:
				useDoubleSpeedMode(useDoubleSpeedMode)
				{
					
				}
						
				virtual ~SerialDriver()
    1dc8:	cf 93       	push	r28
    1dca:	df 93       	push	r29
    1dcc:	1f 92       	push	r1
    1dce:	1f 92       	push	r1
    1dd0:	cd b7       	in	r28, 0x3d	; 61
    1dd2:	de b7       	in	r29, 0x3e	; 62
    1dd4:	9a 83       	std	Y+2, r25	; 0x02
    1dd6:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    1dd8:	89 81       	ldd	r24, Y+1	; 0x01
    1dda:	9a 81       	ldd	r25, Y+2	; 0x02
    1ddc:	0e 94 c6 0e 	call	0x1d8c	; 0x1d8c <_ZN10helicopter7drivers12SerialDriverD1Ev>
    1de0:	89 81       	ldd	r24, Y+1	; 0x01
    1de2:	9a 81       	ldd	r25, Y+2	; 0x02
    1de4:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    1de8:	0f 90       	pop	r0
    1dea:	0f 90       	pop	r0
    1dec:	df 91       	pop	r29
    1dee:	cf 91       	pop	r28
    1df0:	08 95       	ret

00001df2 <_ZN10helicopter7drivers12SerialDriver10initializeEv>:
#include "CommonHeader.h"

using namespace helicopter::drivers;

void SerialDriver::initialize()
{
    1df2:	cf 93       	push	r28
    1df4:	df 93       	push	r29
    1df6:	00 d0       	rcall	.+0      	; 0x1df8 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x6>
    1df8:	1f 92       	push	r1
    1dfa:	cd b7       	in	r28, 0x3d	; 61
    1dfc:	de b7       	in	r29, 0x3e	; 62
    1dfe:	9c 83       	std	Y+4, r25	; 0x04
    1e00:	8b 83       	std	Y+3, r24	; 0x03
	unsigned int baudPrescaller = 0;
    1e02:	1a 82       	std	Y+2, r1	; 0x02
    1e04:	19 82       	std	Y+1, r1	; 0x01
	
	if (useDoubleSpeedMode)
    1e06:	8b 81       	ldd	r24, Y+3	; 0x03
    1e08:	9c 81       	ldd	r25, Y+4	; 0x04
    1e0a:	fc 01       	movw	r30, r24
    1e0c:	82 85       	ldd	r24, Z+10	; 0x0a
    1e0e:	88 23       	and	r24, r24
    1e10:	b9 f1       	breq	.+110    	; 0x1e80 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x8e>
	{
		baudPrescaller = floor((((F_CPU / (baudRate * 8UL))) - 1UL));
    1e12:	8b 81       	ldd	r24, Y+3	; 0x03
    1e14:	9c 81       	ldd	r25, Y+4	; 0x04
    1e16:	fc 01       	movw	r30, r24
    1e18:	82 81       	ldd	r24, Z+2	; 0x02
    1e1a:	93 81       	ldd	r25, Z+3	; 0x03
    1e1c:	a4 81       	ldd	r26, Z+4	; 0x04
    1e1e:	b5 81       	ldd	r27, Z+5	; 0x05
    1e20:	88 0f       	add	r24, r24
    1e22:	99 1f       	adc	r25, r25
    1e24:	aa 1f       	adc	r26, r26
    1e26:	bb 1f       	adc	r27, r27
    1e28:	88 0f       	add	r24, r24
    1e2a:	99 1f       	adc	r25, r25
    1e2c:	aa 1f       	adc	r26, r26
    1e2e:	bb 1f       	adc	r27, r27
    1e30:	88 0f       	add	r24, r24
    1e32:	99 1f       	adc	r25, r25
    1e34:	aa 1f       	adc	r26, r26
    1e36:	bb 1f       	adc	r27, r27
    1e38:	9c 01       	movw	r18, r24
    1e3a:	ad 01       	movw	r20, r26
    1e3c:	80 e0       	ldi	r24, 0x00	; 0
    1e3e:	94 e2       	ldi	r25, 0x24	; 36
    1e40:	a4 ef       	ldi	r26, 0xF4	; 244
    1e42:	b0 e0       	ldi	r27, 0x00	; 0
    1e44:	bc 01       	movw	r22, r24
    1e46:	cd 01       	movw	r24, r26
    1e48:	0e 94 88 42 	call	0x8510	; 0x8510 <__udivmodsi4>
    1e4c:	da 01       	movw	r26, r20
    1e4e:	c9 01       	movw	r24, r18
    1e50:	01 97       	sbiw	r24, 0x01	; 1
    1e52:	a1 09       	sbc	r26, r1
    1e54:	b1 09       	sbc	r27, r1
    1e56:	bc 01       	movw	r22, r24
    1e58:	cd 01       	movw	r24, r26
    1e5a:	0e 94 18 3f 	call	0x7e30	; 0x7e30 <__floatunsisf>
    1e5e:	dc 01       	movw	r26, r24
    1e60:	cb 01       	movw	r24, r22
    1e62:	bc 01       	movw	r22, r24
    1e64:	cd 01       	movw	r24, r26
    1e66:	0e 94 55 3f 	call	0x7eaa	; 0x7eaa <floor>
    1e6a:	dc 01       	movw	r26, r24
    1e6c:	cb 01       	movw	r24, r22
    1e6e:	bc 01       	movw	r22, r24
    1e70:	cd 01       	movw	r24, r26
    1e72:	0e 94 ec 3e 	call	0x7dd8	; 0x7dd8 <__fixunssfsi>
    1e76:	dc 01       	movw	r26, r24
    1e78:	cb 01       	movw	r24, r22
    1e7a:	9a 83       	std	Y+2, r25	; 0x02
    1e7c:	89 83       	std	Y+1, r24	; 0x01
    1e7e:	3a c0       	rjmp	.+116    	; 0x1ef4 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x102>
	}else
	{
		//Calculation for the baud prescaller 
		baudPrescaller = floor((((F_CPU / (baudRate * 16UL))) - 1UL));
    1e80:	8b 81       	ldd	r24, Y+3	; 0x03
    1e82:	9c 81       	ldd	r25, Y+4	; 0x04
    1e84:	fc 01       	movw	r30, r24
    1e86:	82 81       	ldd	r24, Z+2	; 0x02
    1e88:	93 81       	ldd	r25, Z+3	; 0x03
    1e8a:	a4 81       	ldd	r26, Z+4	; 0x04
    1e8c:	b5 81       	ldd	r27, Z+5	; 0x05
    1e8e:	88 0f       	add	r24, r24
    1e90:	99 1f       	adc	r25, r25
    1e92:	aa 1f       	adc	r26, r26
    1e94:	bb 1f       	adc	r27, r27
    1e96:	88 0f       	add	r24, r24
    1e98:	99 1f       	adc	r25, r25
    1e9a:	aa 1f       	adc	r26, r26
    1e9c:	bb 1f       	adc	r27, r27
    1e9e:	88 0f       	add	r24, r24
    1ea0:	99 1f       	adc	r25, r25
    1ea2:	aa 1f       	adc	r26, r26
    1ea4:	bb 1f       	adc	r27, r27
    1ea6:	88 0f       	add	r24, r24
    1ea8:	99 1f       	adc	r25, r25
    1eaa:	aa 1f       	adc	r26, r26
    1eac:	bb 1f       	adc	r27, r27
    1eae:	9c 01       	movw	r18, r24
    1eb0:	ad 01       	movw	r20, r26
    1eb2:	80 e0       	ldi	r24, 0x00	; 0
    1eb4:	94 e2       	ldi	r25, 0x24	; 36
    1eb6:	a4 ef       	ldi	r26, 0xF4	; 244
    1eb8:	b0 e0       	ldi	r27, 0x00	; 0
    1eba:	bc 01       	movw	r22, r24
    1ebc:	cd 01       	movw	r24, r26
    1ebe:	0e 94 88 42 	call	0x8510	; 0x8510 <__udivmodsi4>
    1ec2:	da 01       	movw	r26, r20
    1ec4:	c9 01       	movw	r24, r18
    1ec6:	01 97       	sbiw	r24, 0x01	; 1
    1ec8:	a1 09       	sbc	r26, r1
    1eca:	b1 09       	sbc	r27, r1
    1ecc:	bc 01       	movw	r22, r24
    1ece:	cd 01       	movw	r24, r26
    1ed0:	0e 94 18 3f 	call	0x7e30	; 0x7e30 <__floatunsisf>
    1ed4:	dc 01       	movw	r26, r24
    1ed6:	cb 01       	movw	r24, r22
    1ed8:	bc 01       	movw	r22, r24
    1eda:	cd 01       	movw	r24, r26
    1edc:	0e 94 55 3f 	call	0x7eaa	; 0x7eaa <floor>
    1ee0:	dc 01       	movw	r26, r24
    1ee2:	cb 01       	movw	r24, r22
    1ee4:	bc 01       	movw	r22, r24
    1ee6:	cd 01       	movw	r24, r26
    1ee8:	0e 94 ec 3e 	call	0x7dd8	; 0x7dd8 <__fixunssfsi>
    1eec:	dc 01       	movw	r26, r24
    1eee:	cb 01       	movw	r24, r22
    1ef0:	9a 83       	std	Y+2, r25	; 0x02
    1ef2:	89 83       	std	Y+1, r24	; 0x01
	}
	
	
	if (uartPort == Zero)
    1ef4:	8b 81       	ldd	r24, Y+3	; 0x03
    1ef6:	9c 81       	ldd	r25, Y+4	; 0x04
    1ef8:	fc 01       	movw	r30, r24
    1efa:	86 81       	ldd	r24, Z+6	; 0x06
    1efc:	88 23       	and	r24, r24
    1efe:	41 f5       	brne	.+80     	; 0x1f50 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x15e>
	{
		/* Set baud rate */
		UBRR0 = baudPrescaller;
    1f00:	84 ec       	ldi	r24, 0xC4	; 196
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	29 81       	ldd	r18, Y+1	; 0x01
    1f06:	3a 81       	ldd	r19, Y+2	; 0x02
    1f08:	fc 01       	movw	r30, r24
    1f0a:	31 83       	std	Z+1, r19	; 0x01
    1f0c:	20 83       	st	Z, r18
		
		/* Set frame format: asynchronous usart, no parity 1stop bit, 8 bits of data, */
		UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);
    1f0e:	82 ec       	ldi	r24, 0xC2	; 194
    1f10:	90 e0       	ldi	r25, 0x00	; 0
    1f12:	22 ec       	ldi	r18, 0xC2	; 194
    1f14:	30 e0       	ldi	r19, 0x00	; 0
    1f16:	f9 01       	movw	r30, r18
    1f18:	20 81       	ld	r18, Z
    1f1a:	26 60       	ori	r18, 0x06	; 6
    1f1c:	fc 01       	movw	r30, r24
    1f1e:	20 83       	st	Z, r18
		
		//If double speed mode flag was set, set the U2X0 flag to enable double speed mode.
		if (useDoubleSpeedMode)
    1f20:	8b 81       	ldd	r24, Y+3	; 0x03
    1f22:	9c 81       	ldd	r25, Y+4	; 0x04
    1f24:	fc 01       	movw	r30, r24
    1f26:	82 85       	ldd	r24, Z+10	; 0x0a
    1f28:	88 23       	and	r24, r24
    1f2a:	49 f0       	breq	.+18     	; 0x1f3e <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x14c>
		{
			UCSR0A |= (1<<U2X0);
    1f2c:	80 ec       	ldi	r24, 0xC0	; 192
    1f2e:	90 e0       	ldi	r25, 0x00	; 0
    1f30:	20 ec       	ldi	r18, 0xC0	; 192
    1f32:	30 e0       	ldi	r19, 0x00	; 0
    1f34:	f9 01       	movw	r30, r18
    1f36:	20 81       	ld	r18, Z
    1f38:	22 60       	ori	r18, 0x02	; 2
    1f3a:	fc 01       	movw	r30, r24
    1f3c:	20 83       	st	Z, r18
		}
		
			
			
		/* Enable receiver and transmitter */
		UCSR0B |= (1<<RXEN0) | (1<<TXEN0);
    1f3e:	81 ec       	ldi	r24, 0xC1	; 193
    1f40:	90 e0       	ldi	r25, 0x00	; 0
    1f42:	21 ec       	ldi	r18, 0xC1	; 193
    1f44:	30 e0       	ldi	r19, 0x00	; 0
    1f46:	f9 01       	movw	r30, r18
    1f48:	20 81       	ld	r18, Z
    1f4a:	28 61       	ori	r18, 0x18	; 24
    1f4c:	fc 01       	movw	r30, r24
    1f4e:	20 83       	st	Z, r18
	}
}
    1f50:	0f 90       	pop	r0
    1f52:	0f 90       	pop	r0
    1f54:	0f 90       	pop	r0
    1f56:	0f 90       	pop	r0
    1f58:	df 91       	pop	r29
    1f5a:	cf 91       	pop	r28
    1f5c:	08 95       	ret

00001f5e <_ZN10helicopter7drivers12SerialDriver12transmitByteEh>:

int SerialDriver::transmitByte(byte byteToSend)
{
    1f5e:	cf 93       	push	r28
    1f60:	df 93       	push	r29
    1f62:	00 d0       	rcall	.+0      	; 0x1f64 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6>
    1f64:	cd b7       	in	r28, 0x3d	; 61
    1f66:	de b7       	in	r29, 0x3e	; 62
    1f68:	9a 83       	std	Y+2, r25	; 0x02
    1f6a:	89 83       	std	Y+1, r24	; 0x01
    1f6c:	6b 83       	std	Y+3, r22	; 0x03
	if (uartPort == Zero)
    1f6e:	89 81       	ldd	r24, Y+1	; 0x01
    1f70:	9a 81       	ldd	r25, Y+2	; 0x02
    1f72:	fc 01       	movw	r30, r24
    1f74:	86 81       	ldd	r24, Z+6	; 0x06
    1f76:	88 23       	and	r24, r24
    1f78:	09 f0       	breq	.+2      	; 0x1f7c <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x1e>
    1f7a:	42 c0       	rjmp	.+132    	; 0x2000 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0xa2>
	{
		if (isTimeoutEnabled)
    1f7c:	89 81       	ldd	r24, Y+1	; 0x01
    1f7e:	9a 81       	ldd	r25, Y+2	; 0x02
    1f80:	fc 01       	movw	r30, r24
    1f82:	81 85       	ldd	r24, Z+9	; 0x09
    1f84:	88 23       	and	r24, r24
    1f86:	09 f1       	breq	.+66     	; 0x1fca <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6c>
		{
			timer->startTimer();
    1f88:	89 81       	ldd	r24, Y+1	; 0x01
    1f8a:	9a 81       	ldd	r25, Y+2	; 0x02
    1f8c:	fc 01       	movw	r30, r24
    1f8e:	87 81       	ldd	r24, Z+7	; 0x07
    1f90:	90 85       	ldd	r25, Z+8	; 0x08
    1f92:	0e 94 20 3d 	call	0x7a40	; 0x7a40 <_ZN10helicopter4util5Timer10startTimerEv>
		}
		
		/* Wait for empty transmit buffer */
		while ( !( UCSR0A & (1<<UDRE0)) )
    1f96:	19 c0       	rjmp	.+50     	; 0x1fca <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6c>
		{
			//Check for timeout
			if (isTimeoutEnabled)
    1f98:	89 81       	ldd	r24, Y+1	; 0x01
    1f9a:	9a 81       	ldd	r25, Y+2	; 0x02
    1f9c:	fc 01       	movw	r30, r24
    1f9e:	81 85       	ldd	r24, Z+9	; 0x09
    1fa0:	88 23       	and	r24, r24
    1fa2:	a1 f0       	breq	.+40     	; 0x1fcc <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6e>
			{
				if (timer->hasTimedout())
    1fa4:	89 81       	ldd	r24, Y+1	; 0x01
    1fa6:	9a 81       	ldd	r25, Y+2	; 0x02
    1fa8:	fc 01       	movw	r30, r24
    1faa:	87 81       	ldd	r24, Z+7	; 0x07
    1fac:	90 85       	ldd	r25, Z+8	; 0x08
    1fae:	0e 94 da 3d 	call	0x7bb4	; 0x7bb4 <_ZN10helicopter4util5Timer11hasTimedoutEv>
    1fb2:	88 23       	and	r24, r24
    1fb4:	59 f0       	breq	.+22     	; 0x1fcc <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6e>
				{
					timer->stopTimer();
    1fb6:	89 81       	ldd	r24, Y+1	; 0x01
    1fb8:	9a 81       	ldd	r25, Y+2	; 0x02
    1fba:	fc 01       	movw	r30, r24
    1fbc:	87 81       	ldd	r24, Z+7	; 0x07
    1fbe:	90 85       	ldd	r25, Z+8	; 0x08
    1fc0:	0e 94 f4 3d 	call	0x7be8	; 0x7be8 <_ZN10helicopter4util5Timer9stopTimerEv>
					return -1;
    1fc4:	8f ef       	ldi	r24, 0xFF	; 255
    1fc6:	9f ef       	ldi	r25, 0xFF	; 255
    1fc8:	1d c0       	rjmp	.+58     	; 0x2004 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0xa6>
		{
			timer->startTimer();
		}
		
		/* Wait for empty transmit buffer */
		while ( !( UCSR0A & (1<<UDRE0)) )
    1fca:	00 00       	nop
    1fcc:	80 ec       	ldi	r24, 0xC0	; 192
    1fce:	90 e0       	ldi	r25, 0x00	; 0
    1fd0:	fc 01       	movw	r30, r24
    1fd2:	80 81       	ld	r24, Z
    1fd4:	88 2f       	mov	r24, r24
    1fd6:	90 e0       	ldi	r25, 0x00	; 0
    1fd8:	80 72       	andi	r24, 0x20	; 32
    1fda:	99 27       	eor	r25, r25
    1fdc:	21 e0       	ldi	r18, 0x01	; 1
    1fde:	00 97       	sbiw	r24, 0x00	; 0
    1fe0:	09 f0       	breq	.+2      	; 0x1fe4 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x86>
    1fe2:	20 e0       	ldi	r18, 0x00	; 0
    1fe4:	22 23       	and	r18, r18
    1fe6:	c1 f6       	brne	.-80     	; 0x1f98 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x3a>
			}
		}
				
				
		/* Put data into buffer, sends the data */
		UDR0 = byteToSend;
    1fe8:	86 ec       	ldi	r24, 0xC6	; 198
    1fea:	90 e0       	ldi	r25, 0x00	; 0
    1fec:	2b 81       	ldd	r18, Y+3	; 0x03
    1fee:	fc 01       	movw	r30, r24
    1ff0:	20 83       	st	Z, r18
		
		timer->stopTimer();
    1ff2:	89 81       	ldd	r24, Y+1	; 0x01
    1ff4:	9a 81       	ldd	r25, Y+2	; 0x02
    1ff6:	fc 01       	movw	r30, r24
    1ff8:	87 81       	ldd	r24, Z+7	; 0x07
    1ffa:	90 85       	ldd	r25, Z+8	; 0x08
    1ffc:	0e 94 f4 3d 	call	0x7be8	; 0x7be8 <_ZN10helicopter4util5Timer9stopTimerEv>
	}
	
	return 0;
    2000:	80 e0       	ldi	r24, 0x00	; 0
    2002:	90 e0       	ldi	r25, 0x00	; 0
}
    2004:	0f 90       	pop	r0
    2006:	0f 90       	pop	r0
    2008:	0f 90       	pop	r0
    200a:	df 91       	pop	r29
    200c:	cf 91       	pop	r28
    200e:	08 95       	ret

00002010 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh>:

int SerialDriver::receiveByte(byte &receivedByte)
{
    2010:	cf 93       	push	r28
    2012:	df 93       	push	r29
    2014:	00 d0       	rcall	.+0      	; 0x2016 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x6>
    2016:	1f 92       	push	r1
    2018:	1f 92       	push	r1
    201a:	cd b7       	in	r28, 0x3d	; 61
    201c:	de b7       	in	r29, 0x3e	; 62
    201e:	9b 83       	std	Y+3, r25	; 0x03
    2020:	8a 83       	std	Y+2, r24	; 0x02
    2022:	7d 83       	std	Y+5, r23	; 0x05
    2024:	6c 83       	std	Y+4, r22	; 0x04
	bool hasDataOverrun = false;
    2026:	19 82       	std	Y+1, r1	; 0x01
	
	if (uartPort == Zero)
    2028:	8a 81       	ldd	r24, Y+2	; 0x02
    202a:	9b 81       	ldd	r25, Y+3	; 0x03
    202c:	fc 01       	movw	r30, r24
    202e:	86 81       	ldd	r24, Z+6	; 0x06
    2030:	88 23       	and	r24, r24
    2032:	09 f0       	breq	.+2      	; 0x2036 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x26>
    2034:	41 c0       	rjmp	.+130    	; 0x20b8 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0xa8>
	{
		
		if (isTimeoutEnabled)
    2036:	8a 81       	ldd	r24, Y+2	; 0x02
    2038:	9b 81       	ldd	r25, Y+3	; 0x03
    203a:	fc 01       	movw	r30, r24
    203c:	81 85       	ldd	r24, Z+9	; 0x09
    203e:	88 23       	and	r24, r24
    2040:	d9 f0       	breq	.+54     	; 0x2078 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x68>
		{
			timer->startTimer();
    2042:	8a 81       	ldd	r24, Y+2	; 0x02
    2044:	9b 81       	ldd	r25, Y+3	; 0x03
    2046:	fc 01       	movw	r30, r24
    2048:	87 81       	ldd	r24, Z+7	; 0x07
    204a:	90 85       	ldd	r25, Z+8	; 0x08
    204c:	0e 94 20 3d 	call	0x7a40	; 0x7a40 <_ZN10helicopter4util5Timer10startTimerEv>
		}
		//int counter = 0;
		
		/* Wait for data on the receive buffer */
		while ( !(UCSR0A & (1<<RXC0)) )
    2050:	13 c0       	rjmp	.+38     	; 0x2078 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x68>
		{
			if (timer->hasTimedout())
    2052:	8a 81       	ldd	r24, Y+2	; 0x02
    2054:	9b 81       	ldd	r25, Y+3	; 0x03
    2056:	fc 01       	movw	r30, r24
    2058:	87 81       	ldd	r24, Z+7	; 0x07
    205a:	90 85       	ldd	r25, Z+8	; 0x08
    205c:	0e 94 da 3d 	call	0x7bb4	; 0x7bb4 <_ZN10helicopter4util5Timer11hasTimedoutEv>
    2060:	88 23       	and	r24, r24
    2062:	59 f0       	breq	.+22     	; 0x207a <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x6a>
			{
				timer->stopTimer();
    2064:	8a 81       	ldd	r24, Y+2	; 0x02
    2066:	9b 81       	ldd	r25, Y+3	; 0x03
    2068:	fc 01       	movw	r30, r24
    206a:	87 81       	ldd	r24, Z+7	; 0x07
    206c:	90 85       	ldd	r25, Z+8	; 0x08
    206e:	0e 94 f4 3d 	call	0x7be8	; 0x7be8 <_ZN10helicopter4util5Timer9stopTimerEv>
				return -1;
    2072:	8f ef       	ldi	r24, 0xFF	; 255
    2074:	9f ef       	ldi	r25, 0xFF	; 255
    2076:	29 c0       	rjmp	.+82     	; 0x20ca <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0xba>
			timer->startTimer();
		}
		//int counter = 0;
		
		/* Wait for data on the receive buffer */
		while ( !(UCSR0A & (1<<RXC0)) )
    2078:	00 00       	nop
    207a:	80 ec       	ldi	r24, 0xC0	; 192
    207c:	90 e0       	ldi	r25, 0x00	; 0
    207e:	fc 01       	movw	r30, r24
    2080:	80 81       	ld	r24, Z
    2082:	80 95       	com	r24
    2084:	88 1f       	adc	r24, r24
    2086:	88 27       	eor	r24, r24
    2088:	88 1f       	adc	r24, r24
    208a:	88 23       	and	r24, r24
    208c:	11 f7       	brne	.-60     	; 0x2052 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x42>
			}*/
		}
		
		//determine if there has been a data overrun.
		//Swallow the overrun because nothing can be done.
		hasDataOverrun = (UCSR0A & (1 << DOR0)) != 0;
    208e:	80 ec       	ldi	r24, 0xC0	; 192
    2090:	90 e0       	ldi	r25, 0x00	; 0
    2092:	fc 01       	movw	r30, r24
    2094:	80 81       	ld	r24, Z
    2096:	88 2f       	mov	r24, r24
    2098:	90 e0       	ldi	r25, 0x00	; 0
    209a:	88 70       	andi	r24, 0x08	; 8
    209c:	99 27       	eor	r25, r25
    209e:	21 e0       	ldi	r18, 0x01	; 1
    20a0:	00 97       	sbiw	r24, 0x00	; 0
    20a2:	09 f4       	brne	.+2      	; 0x20a6 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x96>
    20a4:	20 e0       	ldi	r18, 0x00	; 0
    20a6:	29 83       	std	Y+1, r18	; 0x01
		
		/* Read the data from the serial port buffer */
		receivedByte = UDR0;
    20a8:	86 ec       	ldi	r24, 0xC6	; 198
    20aa:	90 e0       	ldi	r25, 0x00	; 0
    20ac:	fc 01       	movw	r30, r24
    20ae:	20 81       	ld	r18, Z
    20b0:	8c 81       	ldd	r24, Y+4	; 0x04
    20b2:	9d 81       	ldd	r25, Y+5	; 0x05
    20b4:	fc 01       	movw	r30, r24
    20b6:	20 83       	st	Z, r18
	}
	
	timer->stopTimer();
    20b8:	8a 81       	ldd	r24, Y+2	; 0x02
    20ba:	9b 81       	ldd	r25, Y+3	; 0x03
    20bc:	fc 01       	movw	r30, r24
    20be:	87 81       	ldd	r24, Z+7	; 0x07
    20c0:	90 85       	ldd	r25, Z+8	; 0x08
    20c2:	0e 94 f4 3d 	call	0x7be8	; 0x7be8 <_ZN10helicopter4util5Timer9stopTimerEv>
	
	return 0;
    20c6:	80 e0       	ldi	r24, 0x00	; 0
    20c8:	90 e0       	ldi	r25, 0x00	; 0
    20ca:	0f 90       	pop	r0
    20cc:	0f 90       	pop	r0
    20ce:	0f 90       	pop	r0
    20d0:	0f 90       	pop	r0
    20d2:	0f 90       	pop	r0
    20d4:	df 91       	pop	r29
    20d6:	cf 91       	pop	r28
    20d8:	08 95       	ret

000020da <_ZN10helicopter7drivers11ServoDriverD1Ev>:
					maxControlValue(0)
				{
					
				}
				
				virtual ~ServoDriver()
    20da:	cf 93       	push	r28
    20dc:	df 93       	push	r29
    20de:	1f 92       	push	r1
    20e0:	1f 92       	push	r1
    20e2:	cd b7       	in	r28, 0x3d	; 61
    20e4:	de b7       	in	r29, 0x3e	; 62
    20e6:	9a 83       	std	Y+2, r25	; 0x02
    20e8:	89 83       	std	Y+1, r24	; 0x01
				{
    20ea:	89 81       	ldd	r24, Y+1	; 0x01
    20ec:	9a 81       	ldd	r25, Y+2	; 0x02
    20ee:	28 e1       	ldi	r18, 0x18	; 24
    20f0:	32 e0       	ldi	r19, 0x02	; 2
    20f2:	fc 01       	movw	r30, r24
    20f4:	31 83       	std	Z+1, r19	; 0x01
    20f6:	20 83       	st	Z, r18
					
				}
    20f8:	80 e0       	ldi	r24, 0x00	; 0
    20fa:	90 e0       	ldi	r25, 0x00	; 0
    20fc:	81 70       	andi	r24, 0x01	; 1
    20fe:	99 27       	eor	r25, r25
    2100:	00 97       	sbiw	r24, 0x00	; 0
    2102:	21 f0       	breq	.+8      	; 0x210c <_ZN10helicopter7drivers11ServoDriverD1Ev+0x32>
    2104:	89 81       	ldd	r24, Y+1	; 0x01
    2106:	9a 81       	ldd	r25, Y+2	; 0x02
    2108:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    210c:	0f 90       	pop	r0
    210e:	0f 90       	pop	r0
    2110:	df 91       	pop	r29
    2112:	cf 91       	pop	r28
    2114:	08 95       	ret

00002116 <_ZN10helicopter7drivers11ServoDriverD0Ev>:
					maxControlValue(0)
				{
					
				}
				
				virtual ~ServoDriver()
    2116:	cf 93       	push	r28
    2118:	df 93       	push	r29
    211a:	1f 92       	push	r1
    211c:	1f 92       	push	r1
    211e:	cd b7       	in	r28, 0x3d	; 61
    2120:	de b7       	in	r29, 0x3e	; 62
    2122:	9a 83       	std	Y+2, r25	; 0x02
    2124:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    2126:	89 81       	ldd	r24, Y+1	; 0x01
    2128:	9a 81       	ldd	r25, Y+2	; 0x02
    212a:	0e 94 6d 10 	call	0x20da	; 0x20da <_ZN10helicopter7drivers11ServoDriverD1Ev>
    212e:	89 81       	ldd	r24, Y+1	; 0x01
    2130:	9a 81       	ldd	r25, Y+2	; 0x02
    2132:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    2136:	0f 90       	pop	r0
    2138:	0f 90       	pop	r0
    213a:	df 91       	pop	r29
    213c:	cf 91       	pop	r28
    213e:	08 95       	ret

00002140 <_ZN10helicopter7drivers11ServoDriver26controlTailRotorCollectiveEd>:
#include "ServoDriver.h"

using namespace helicopter::drivers;

void ServoDriver::controlTailRotorCollective(double controlTailRotorCollective)
{
    2140:	cf 93       	push	r28
    2142:	df 93       	push	r29
    2144:	cd b7       	in	r28, 0x3d	; 61
    2146:	de b7       	in	r29, 0x3e	; 62
    2148:	2a 97       	sbiw	r28, 0x0a	; 10
    214a:	0f b6       	in	r0, 0x3f	; 63
    214c:	f8 94       	cli
    214e:	de bf       	out	0x3e, r29	; 62
    2150:	0f be       	out	0x3f, r0	; 63
    2152:	cd bf       	out	0x3d, r28	; 61
    2154:	9e 83       	std	Y+6, r25	; 0x06
    2156:	8d 83       	std	Y+5, r24	; 0x05
    2158:	4f 83       	std	Y+7, r20	; 0x07
    215a:	58 87       	std	Y+8, r21	; 0x08
    215c:	69 87       	std	Y+9, r22	; 0x09
    215e:	7a 87       	std	Y+10, r23	; 0x0a
	double control = controlTailRotorCollective;
    2160:	8f 81       	ldd	r24, Y+7	; 0x07
    2162:	98 85       	ldd	r25, Y+8	; 0x08
    2164:	a9 85       	ldd	r26, Y+9	; 0x09
    2166:	ba 85       	ldd	r27, Y+10	; 0x0a
    2168:	89 83       	std	Y+1, r24	; 0x01
    216a:	9a 83       	std	Y+2, r25	; 0x02
    216c:	ab 83       	std	Y+3, r26	; 0x03
    216e:	bc 83       	std	Y+4, r27	; 0x04
	
	if (control > maxControlValue)
    2170:	8d 81       	ldd	r24, Y+5	; 0x05
    2172:	9e 81       	ldd	r25, Y+6	; 0x06
    2174:	fc 01       	movw	r30, r24
    2176:	86 81       	ldd	r24, Z+6	; 0x06
    2178:	97 81       	ldd	r25, Z+7	; 0x07
    217a:	a0 85       	ldd	r26, Z+8	; 0x08
    217c:	b1 85       	ldd	r27, Z+9	; 0x09
    217e:	29 81       	ldd	r18, Y+1	; 0x01
    2180:	3a 81       	ldd	r19, Y+2	; 0x02
    2182:	4b 81       	ldd	r20, Y+3	; 0x03
    2184:	5c 81       	ldd	r21, Y+4	; 0x04
    2186:	bc 01       	movw	r22, r24
    2188:	cd 01       	movw	r24, r26
    218a:	0e 94 78 3e 	call	0x7cf0	; 0x7cf0 <__cmpsf2>
    218e:	88 23       	and	r24, r24
    2190:	5c f4       	brge	.+22     	; 0x21a8 <_ZN10helicopter7drivers11ServoDriver26controlTailRotorCollectiveEd+0x68>
	{
		control = maxControlValue;
    2192:	8d 81       	ldd	r24, Y+5	; 0x05
    2194:	9e 81       	ldd	r25, Y+6	; 0x06
    2196:	fc 01       	movw	r30, r24
    2198:	86 81       	ldd	r24, Z+6	; 0x06
    219a:	97 81       	ldd	r25, Z+7	; 0x07
    219c:	a0 85       	ldd	r26, Z+8	; 0x08
    219e:	b1 85       	ldd	r27, Z+9	; 0x09
    21a0:	89 83       	std	Y+1, r24	; 0x01
    21a2:	9a 83       	std	Y+2, r25	; 0x02
    21a4:	ab 83       	std	Y+3, r26	; 0x03
    21a6:	bc 83       	std	Y+4, r27	; 0x04
	}
	
	if (control < minControlValue)
    21a8:	8d 81       	ldd	r24, Y+5	; 0x05
    21aa:	9e 81       	ldd	r25, Y+6	; 0x06
    21ac:	fc 01       	movw	r30, r24
    21ae:	82 81       	ldd	r24, Z+2	; 0x02
    21b0:	93 81       	ldd	r25, Z+3	; 0x03
    21b2:	a4 81       	ldd	r26, Z+4	; 0x04
    21b4:	b5 81       	ldd	r27, Z+5	; 0x05
    21b6:	29 81       	ldd	r18, Y+1	; 0x01
    21b8:	3a 81       	ldd	r19, Y+2	; 0x02
    21ba:	4b 81       	ldd	r20, Y+3	; 0x03
    21bc:	5c 81       	ldd	r21, Y+4	; 0x04
    21be:	bc 01       	movw	r22, r24
    21c0:	cd 01       	movw	r24, r26
    21c2:	0e 94 56 40 	call	0x80ac	; 0x80ac <__gesf2>
    21c6:	18 16       	cp	r1, r24
    21c8:	5c f4       	brge	.+22     	; 0x21e0 <_ZN10helicopter7drivers11ServoDriver26controlTailRotorCollectiveEd+0xa0>
	{
		control = minControlValue;
    21ca:	8d 81       	ldd	r24, Y+5	; 0x05
    21cc:	9e 81       	ldd	r25, Y+6	; 0x06
    21ce:	fc 01       	movw	r30, r24
    21d0:	82 81       	ldd	r24, Z+2	; 0x02
    21d2:	93 81       	ldd	r25, Z+3	; 0x03
    21d4:	a4 81       	ldd	r26, Z+4	; 0x04
    21d6:	b5 81       	ldd	r27, Z+5	; 0x05
    21d8:	89 83       	std	Y+1, r24	; 0x01
    21da:	9a 83       	std	Y+2, r25	; 0x02
    21dc:	ab 83       	std	Y+3, r26	; 0x03
    21de:	bc 83       	std	Y+4, r27	; 0x04
	}
	
	controlTailRotorCollectiveImpl(control);
    21e0:	8d 81       	ldd	r24, Y+5	; 0x05
    21e2:	9e 81       	ldd	r25, Y+6	; 0x06
    21e4:	fc 01       	movw	r30, r24
    21e6:	80 81       	ld	r24, Z
    21e8:	91 81       	ldd	r25, Z+1	; 0x01
    21ea:	04 96       	adiw	r24, 0x04	; 4
    21ec:	fc 01       	movw	r30, r24
    21ee:	20 81       	ld	r18, Z
    21f0:	31 81       	ldd	r19, Z+1	; 0x01
    21f2:	89 81       	ldd	r24, Y+1	; 0x01
    21f4:	9a 81       	ldd	r25, Y+2	; 0x02
    21f6:	ab 81       	ldd	r26, Y+3	; 0x03
    21f8:	bc 81       	ldd	r27, Y+4	; 0x04
    21fa:	ed 81       	ldd	r30, Y+5	; 0x05
    21fc:	fe 81       	ldd	r31, Y+6	; 0x06
    21fe:	ac 01       	movw	r20, r24
    2200:	bd 01       	movw	r22, r26
    2202:	cf 01       	movw	r24, r30
    2204:	f9 01       	movw	r30, r18
    2206:	19 95       	eicall
}
    2208:	2a 96       	adiw	r28, 0x0a	; 10
    220a:	0f b6       	in	r0, 0x3f	; 63
    220c:	f8 94       	cli
    220e:	de bf       	out	0x3e, r29	; 62
    2210:	0f be       	out	0x3f, r0	; 63
    2212:	cd bf       	out	0x3d, r28	; 61
    2214:	df 91       	pop	r29
    2216:	cf 91       	pop	r28
    2218:	08 95       	ret

0000221a <_ZN10helicopter7drivers11ServoDriver30controlTailRotorCollectiveImplEd>:


void ServoDriver::controlTailRotorCollectiveImpl(double controlTailRotorCollective)
{
    221a:	cf 93       	push	r28
    221c:	df 93       	push	r29
    221e:	00 d0       	rcall	.+0      	; 0x2220 <_ZN10helicopter7drivers11ServoDriver30controlTailRotorCollectiveImplEd+0x6>
    2220:	00 d0       	rcall	.+0      	; 0x2222 <_ZN10helicopter7drivers11ServoDriver30controlTailRotorCollectiveImplEd+0x8>
    2222:	cd b7       	in	r28, 0x3d	; 61
    2224:	de b7       	in	r29, 0x3e	; 62
    2226:	9a 83       	std	Y+2, r25	; 0x02
    2228:	89 83       	std	Y+1, r24	; 0x01
    222a:	4b 83       	std	Y+3, r20	; 0x03
    222c:	5c 83       	std	Y+4, r21	; 0x04
    222e:	6d 83       	std	Y+5, r22	; 0x05
    2230:	7e 83       	std	Y+6, r23	; 0x06
	
}
    2232:	26 96       	adiw	r28, 0x06	; 6
    2234:	0f b6       	in	r0, 0x3f	; 63
    2236:	f8 94       	cli
    2238:	de bf       	out	0x3e, r29	; 62
    223a:	0f be       	out	0x3f, r0	; 63
    223c:	cd bf       	out	0x3d, r28	; 61
    223e:	df 91       	pop	r29
    2240:	cf 91       	pop	r28
    2242:	08 95       	ret

00002244 <_ZN10helicopter7drivers11ServoDriver19controlLongitudinalEd>:


void ServoDriver::controlLongitudinal(double controlTailRotorCollective)
{
    2244:	cf 93       	push	r28
    2246:	df 93       	push	r29
    2248:	00 d0       	rcall	.+0      	; 0x224a <_ZN10helicopter7drivers11ServoDriver19controlLongitudinalEd+0x6>
    224a:	00 d0       	rcall	.+0      	; 0x224c <_ZN10helicopter7drivers11ServoDriver19controlLongitudinalEd+0x8>
    224c:	cd b7       	in	r28, 0x3d	; 61
    224e:	de b7       	in	r29, 0x3e	; 62
    2250:	9a 83       	std	Y+2, r25	; 0x02
    2252:	89 83       	std	Y+1, r24	; 0x01
    2254:	4b 83       	std	Y+3, r20	; 0x03
    2256:	5c 83       	std	Y+4, r21	; 0x04
    2258:	6d 83       	std	Y+5, r22	; 0x05
    225a:	7e 83       	std	Y+6, r23	; 0x06
	
}
    225c:	26 96       	adiw	r28, 0x06	; 6
    225e:	0f b6       	in	r0, 0x3f	; 63
    2260:	f8 94       	cli
    2262:	de bf       	out	0x3e, r29	; 62
    2264:	0f be       	out	0x3f, r0	; 63
    2266:	cd bf       	out	0x3d, r28	; 61
    2268:	df 91       	pop	r29
    226a:	cf 91       	pop	r28
    226c:	08 95       	ret

0000226e <_ZN10helicopter7drivers11ServoDriver26controlMainRotorCollectiveEd>:

void ServoDriver::controlMainRotorCollective( double mainRotorControl )
{
    226e:	cf 93       	push	r28
    2270:	df 93       	push	r29
    2272:	00 d0       	rcall	.+0      	; 0x2274 <_ZN10helicopter7drivers11ServoDriver26controlMainRotorCollectiveEd+0x6>
    2274:	00 d0       	rcall	.+0      	; 0x2276 <_ZN10helicopter7drivers11ServoDriver26controlMainRotorCollectiveEd+0x8>
    2276:	cd b7       	in	r28, 0x3d	; 61
    2278:	de b7       	in	r29, 0x3e	; 62
    227a:	9a 83       	std	Y+2, r25	; 0x02
    227c:	89 83       	std	Y+1, r24	; 0x01
    227e:	4b 83       	std	Y+3, r20	; 0x03
    2280:	5c 83       	std	Y+4, r21	; 0x04
    2282:	6d 83       	std	Y+5, r22	; 0x05
    2284:	7e 83       	std	Y+6, r23	; 0x06

}
    2286:	26 96       	adiw	r28, 0x06	; 6
    2288:	0f b6       	in	r0, 0x3f	; 63
    228a:	f8 94       	cli
    228c:	de bf       	out	0x3e, r29	; 62
    228e:	0f be       	out	0x3f, r0	; 63
    2290:	cd bf       	out	0x3d, r28	; 61
    2292:	df 91       	pop	r29
    2294:	cf 91       	pop	r28
    2296:	08 95       	ret

00002298 <_ZN10helicopter5tasks4TaskD1Ev>:
				 * @param period The number of scheduler 'ticks' to be executed before
				 * this task is ready to run.
				 */
				Task (int delay, int period);
				
				virtual ~Task(){}
    2298:	cf 93       	push	r28
    229a:	df 93       	push	r29
    229c:	1f 92       	push	r1
    229e:	1f 92       	push	r1
    22a0:	cd b7       	in	r28, 0x3d	; 61
    22a2:	de b7       	in	r29, 0x3e	; 62
    22a4:	9a 83       	std	Y+2, r25	; 0x02
    22a6:	89 83       	std	Y+1, r24	; 0x01
    22a8:	89 81       	ldd	r24, Y+1	; 0x01
    22aa:	9a 81       	ldd	r25, Y+2	; 0x02
    22ac:	2c e8       	ldi	r18, 0x8C	; 140
    22ae:	32 e0       	ldi	r19, 0x02	; 2
    22b0:	fc 01       	movw	r30, r24
    22b2:	31 83       	std	Z+1, r19	; 0x01
    22b4:	20 83       	st	Z, r18
    22b6:	80 e0       	ldi	r24, 0x00	; 0
    22b8:	90 e0       	ldi	r25, 0x00	; 0
    22ba:	81 70       	andi	r24, 0x01	; 1
    22bc:	99 27       	eor	r25, r25
    22be:	00 97       	sbiw	r24, 0x00	; 0
    22c0:	21 f0       	breq	.+8      	; 0x22ca <_ZN10helicopter5tasks4TaskD1Ev+0x32>
    22c2:	89 81       	ldd	r24, Y+1	; 0x01
    22c4:	9a 81       	ldd	r25, Y+2	; 0x02
    22c6:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    22ca:	0f 90       	pop	r0
    22cc:	0f 90       	pop	r0
    22ce:	df 91       	pop	r29
    22d0:	cf 91       	pop	r28
    22d2:	08 95       	ret

000022d4 <_ZN10helicopter5tasks4TaskD0Ev>:
    22d4:	cf 93       	push	r28
    22d6:	df 93       	push	r29
    22d8:	1f 92       	push	r1
    22da:	1f 92       	push	r1
    22dc:	cd b7       	in	r28, 0x3d	; 61
    22de:	de b7       	in	r29, 0x3e	; 62
    22e0:	9a 83       	std	Y+2, r25	; 0x02
    22e2:	89 83       	std	Y+1, r24	; 0x01
    22e4:	89 81       	ldd	r24, Y+1	; 0x01
    22e6:	9a 81       	ldd	r25, Y+2	; 0x02
    22e8:	0e 94 4c 11 	call	0x2298	; 0x2298 <_ZN10helicopter5tasks4TaskD1Ev>
    22ec:	89 81       	ldd	r24, Y+1	; 0x01
    22ee:	9a 81       	ldd	r25, Y+2	; 0x02
    22f0:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    22f4:	0f 90       	pop	r0
    22f6:	0f 90       	pop	r0
    22f8:	df 91       	pop	r29
    22fa:	cf 91       	pop	r28
    22fc:	08 95       	ret

000022fe <_ZN10helicopter5tasks12FlashLEDTaskC1Eiii>:
					
				int ledToBlink;
				
			public:

			FlashLEDTask (int delay, int period, int ledToBlink = BLUELED) : 
    22fe:	cf 93       	push	r28
    2300:	df 93       	push	r29
    2302:	cd b7       	in	r28, 0x3d	; 61
    2304:	de b7       	in	r29, 0x3e	; 62
    2306:	28 97       	sbiw	r28, 0x08	; 8
    2308:	0f b6       	in	r0, 0x3f	; 63
    230a:	f8 94       	cli
    230c:	de bf       	out	0x3e, r29	; 62
    230e:	0f be       	out	0x3f, r0	; 63
    2310:	cd bf       	out	0x3d, r28	; 61
    2312:	9a 83       	std	Y+2, r25	; 0x02
    2314:	89 83       	std	Y+1, r24	; 0x01
    2316:	7c 83       	std	Y+4, r23	; 0x04
    2318:	6b 83       	std	Y+3, r22	; 0x03
    231a:	5e 83       	std	Y+6, r21	; 0x06
    231c:	4d 83       	std	Y+5, r20	; 0x05
    231e:	38 87       	std	Y+8, r19	; 0x08
    2320:	2f 83       	std	Y+7, r18	; 0x07
				Task(delay, period),
				isOff(false),
				ledToBlink(ledToBlink)
    2322:	89 81       	ldd	r24, Y+1	; 0x01
    2324:	9a 81       	ldd	r25, Y+2	; 0x02
    2326:	4d 81       	ldd	r20, Y+5	; 0x05
    2328:	5e 81       	ldd	r21, Y+6	; 0x06
    232a:	2b 81       	ldd	r18, Y+3	; 0x03
    232c:	3c 81       	ldd	r19, Y+4	; 0x04
    232e:	b9 01       	movw	r22, r18
    2330:	0e 94 21 37 	call	0x6e42	; 0x6e42 <_ZN10helicopter5tasks4TaskC1Eii>
    2334:	89 81       	ldd	r24, Y+1	; 0x01
    2336:	9a 81       	ldd	r25, Y+2	; 0x02
    2338:	22 e2       	ldi	r18, 0x22	; 34
    233a:	32 e0       	ldi	r19, 0x02	; 2
    233c:	fc 01       	movw	r30, r24
    233e:	31 83       	std	Z+1, r19	; 0x01
    2340:	20 83       	st	Z, r18
    2342:	89 81       	ldd	r24, Y+1	; 0x01
    2344:	9a 81       	ldd	r25, Y+2	; 0x02
    2346:	fc 01       	movw	r30, r24
    2348:	17 82       	std	Z+7, r1	; 0x07
    234a:	89 81       	ldd	r24, Y+1	; 0x01
    234c:	9a 81       	ldd	r25, Y+2	; 0x02
    234e:	2f 81       	ldd	r18, Y+7	; 0x07
    2350:	38 85       	ldd	r19, Y+8	; 0x08
    2352:	fc 01       	movw	r30, r24
    2354:	31 87       	std	Z+9, r19	; 0x09
    2356:	20 87       	std	Z+8, r18	; 0x08
			{
					
			}
    2358:	28 96       	adiw	r28, 0x08	; 8
    235a:	0f b6       	in	r0, 0x3f	; 63
    235c:	f8 94       	cli
    235e:	de bf       	out	0x3e, r29	; 62
    2360:	0f be       	out	0x3f, r0	; 63
    2362:	cd bf       	out	0x3d, r28	; 61
    2364:	df 91       	pop	r29
    2366:	cf 91       	pop	r28
    2368:	08 95       	ret

0000236a <_ZN10helicopter5tasks12FlashLEDTask4initEv>:
	
			void init()
    236a:	cf 93       	push	r28
    236c:	df 93       	push	r29
    236e:	1f 92       	push	r1
    2370:	1f 92       	push	r1
    2372:	cd b7       	in	r28, 0x3d	; 61
    2374:	de b7       	in	r29, 0x3e	; 62
    2376:	9a 83       	std	Y+2, r25	; 0x02
    2378:	89 83       	std	Y+1, r24	; 0x01
			{
				DDRA |= (1<<ledToBlink);
    237a:	81 e2       	ldi	r24, 0x21	; 33
    237c:	90 e0       	ldi	r25, 0x00	; 0
    237e:	21 e2       	ldi	r18, 0x21	; 33
    2380:	30 e0       	ldi	r19, 0x00	; 0
    2382:	f9 01       	movw	r30, r18
    2384:	20 81       	ld	r18, Z
    2386:	62 2f       	mov	r22, r18
    2388:	29 81       	ldd	r18, Y+1	; 0x01
    238a:	3a 81       	ldd	r19, Y+2	; 0x02
    238c:	f9 01       	movw	r30, r18
    238e:	40 85       	ldd	r20, Z+8	; 0x08
    2390:	51 85       	ldd	r21, Z+9	; 0x09
    2392:	21 e0       	ldi	r18, 0x01	; 1
    2394:	30 e0       	ldi	r19, 0x00	; 0
    2396:	04 2e       	mov	r0, r20
    2398:	02 c0       	rjmp	.+4      	; 0x239e <_ZN10helicopter5tasks12FlashLEDTask4initEv+0x34>
    239a:	22 0f       	add	r18, r18
    239c:	33 1f       	adc	r19, r19
    239e:	0a 94       	dec	r0
    23a0:	e2 f7       	brpl	.-8      	; 0x239a <_ZN10helicopter5tasks12FlashLEDTask4initEv+0x30>
    23a2:	26 2b       	or	r18, r22
    23a4:	fc 01       	movw	r30, r24
    23a6:	20 83       	st	Z, r18
			}
    23a8:	0f 90       	pop	r0
    23aa:	0f 90       	pop	r0
    23ac:	df 91       	pop	r29
    23ae:	cf 91       	pop	r28
    23b0:	08 95       	ret

000023b2 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv>:
	
			/**
				* Flashes the LED
				*/
			void runTaskImpl() {
    23b2:	cf 93       	push	r28
    23b4:	df 93       	push	r29
    23b6:	1f 92       	push	r1
    23b8:	1f 92       	push	r1
    23ba:	cd b7       	in	r28, 0x3d	; 61
    23bc:	de b7       	in	r29, 0x3e	; 62
    23be:	9a 83       	std	Y+2, r25	; 0x02
    23c0:	89 83       	std	Y+1, r24	; 0x01
				if (isOff)
    23c2:	89 81       	ldd	r24, Y+1	; 0x01
    23c4:	9a 81       	ldd	r25, Y+2	; 0x02
    23c6:	fc 01       	movw	r30, r24
    23c8:	87 81       	ldd	r24, Z+7	; 0x07
    23ca:	88 23       	and	r24, r24
    23cc:	e9 f0       	breq	.+58     	; 0x2408 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x56>
				{
					//Turn On the LED
					PORTA &= ~(1<<ledToBlink);
    23ce:	82 e2       	ldi	r24, 0x22	; 34
    23d0:	90 e0       	ldi	r25, 0x00	; 0
    23d2:	22 e2       	ldi	r18, 0x22	; 34
    23d4:	30 e0       	ldi	r19, 0x00	; 0
    23d6:	f9 01       	movw	r30, r18
    23d8:	20 81       	ld	r18, Z
    23da:	62 2f       	mov	r22, r18
    23dc:	29 81       	ldd	r18, Y+1	; 0x01
    23de:	3a 81       	ldd	r19, Y+2	; 0x02
    23e0:	f9 01       	movw	r30, r18
    23e2:	40 85       	ldd	r20, Z+8	; 0x08
    23e4:	51 85       	ldd	r21, Z+9	; 0x09
    23e6:	21 e0       	ldi	r18, 0x01	; 1
    23e8:	30 e0       	ldi	r19, 0x00	; 0
    23ea:	04 2e       	mov	r0, r20
    23ec:	02 c0       	rjmp	.+4      	; 0x23f2 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x40>
    23ee:	22 0f       	add	r18, r18
    23f0:	33 1f       	adc	r19, r19
    23f2:	0a 94       	dec	r0
    23f4:	e2 f7       	brpl	.-8      	; 0x23ee <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x3c>
    23f6:	20 95       	com	r18
    23f8:	26 23       	and	r18, r22
    23fa:	fc 01       	movw	r30, r24
    23fc:	20 83       	st	Z, r18
					isOff = false;
    23fe:	89 81       	ldd	r24, Y+1	; 0x01
    2400:	9a 81       	ldd	r25, Y+2	; 0x02
    2402:	fc 01       	movw	r30, r24
    2404:	17 82       	std	Z+7, r1	; 0x07
    2406:	1c c0       	rjmp	.+56     	; 0x2440 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x8e>
				}else
				{
					//Turn Off the LED
					PORTA |= (1<<ledToBlink);
    2408:	82 e2       	ldi	r24, 0x22	; 34
    240a:	90 e0       	ldi	r25, 0x00	; 0
    240c:	22 e2       	ldi	r18, 0x22	; 34
    240e:	30 e0       	ldi	r19, 0x00	; 0
    2410:	f9 01       	movw	r30, r18
    2412:	20 81       	ld	r18, Z
    2414:	62 2f       	mov	r22, r18
    2416:	29 81       	ldd	r18, Y+1	; 0x01
    2418:	3a 81       	ldd	r19, Y+2	; 0x02
    241a:	f9 01       	movw	r30, r18
    241c:	40 85       	ldd	r20, Z+8	; 0x08
    241e:	51 85       	ldd	r21, Z+9	; 0x09
    2420:	21 e0       	ldi	r18, 0x01	; 1
    2422:	30 e0       	ldi	r19, 0x00	; 0
    2424:	04 2e       	mov	r0, r20
    2426:	02 c0       	rjmp	.+4      	; 0x242c <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x7a>
    2428:	22 0f       	add	r18, r18
    242a:	33 1f       	adc	r19, r19
    242c:	0a 94       	dec	r0
    242e:	e2 f7       	brpl	.-8      	; 0x2428 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x76>
    2430:	26 2b       	or	r18, r22
    2432:	fc 01       	movw	r30, r24
    2434:	20 83       	st	Z, r18
					isOff = true;
    2436:	89 81       	ldd	r24, Y+1	; 0x01
    2438:	9a 81       	ldd	r25, Y+2	; 0x02
    243a:	21 e0       	ldi	r18, 0x01	; 1
    243c:	fc 01       	movw	r30, r24
    243e:	27 83       	std	Z+7, r18	; 0x07
				}
			}
    2440:	0f 90       	pop	r0
    2442:	0f 90       	pop	r0
    2444:	df 91       	pop	r29
    2446:	cf 91       	pop	r28
    2448:	08 95       	ret

0000244a <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEv>:
				 * Detects if the processing was completed before the next scheduler triggered.
				 * @return True if the scheduler timer triggered again before the tasks were fully processes,
				 * False if all the tasks were finished processing (i.e. the dispatch method finished) before
				 * the timer triggered again.
				 */
				bool hasBlownFrame()
    244a:	cf 93       	push	r28
    244c:	df 93       	push	r29
    244e:	1f 92       	push	r1
    2450:	1f 92       	push	r1
    2452:	cd b7       	in	r28, 0x3d	; 61
    2454:	de b7       	in	r29, 0x3e	; 62
    2456:	9a 83       	std	Y+2, r25	; 0x02
    2458:	89 83       	std	Y+1, r24	; 0x01
				{
					return blowFrameDetected;
    245a:	89 81       	ldd	r24, Y+1	; 0x01
    245c:	9a 81       	ldd	r25, Y+2	; 0x02
    245e:	fc 01       	movw	r30, r24
    2460:	82 8d       	ldd	r24, Z+26	; 0x1a
				}
    2462:	0f 90       	pop	r0
    2464:	0f 90       	pop	r0
    2466:	df 91       	pop	r29
    2468:	cf 91       	pop	r28
    246a:	08 95       	ret

0000246c <_ZN10helicopter4util5TimerC1Em9PRESCALERm>:
				 * @timeoutMilliseconds the milliseconds that should go by before the
				 * timer times out. This value must be under 1000.
				 * These variables will have to adhere to this equation:
				 * OCR = ((cpuSpeed /  timerPrescaler) / frequency)
				 */
				Timer (unsigned long cpuSpeed, PRESCALER timerPrescaler, unsigned long timeoutMilliseconds):
    246c:	ef 92       	push	r14
    246e:	ff 92       	push	r15
    2470:	0f 93       	push	r16
    2472:	1f 93       	push	r17
    2474:	cf 93       	push	r28
    2476:	df 93       	push	r29
    2478:	cd b7       	in	r28, 0x3d	; 61
    247a:	de b7       	in	r29, 0x3e	; 62
    247c:	2c 97       	sbiw	r28, 0x0c	; 12
    247e:	0f b6       	in	r0, 0x3f	; 63
    2480:	f8 94       	cli
    2482:	de bf       	out	0x3e, r29	; 62
    2484:	0f be       	out	0x3f, r0	; 63
    2486:	cd bf       	out	0x3d, r28	; 61
    2488:	9a 83       	std	Y+2, r25	; 0x02
    248a:	89 83       	std	Y+1, r24	; 0x01
    248c:	4b 83       	std	Y+3, r20	; 0x03
    248e:	5c 83       	std	Y+4, r21	; 0x04
    2490:	6d 83       	std	Y+5, r22	; 0x05
    2492:	7e 83       	std	Y+6, r23	; 0x06
    2494:	38 87       	std	Y+8, r19	; 0x08
    2496:	2f 83       	std	Y+7, r18	; 0x07
    2498:	e9 86       	std	Y+9, r14	; 0x09
    249a:	fa 86       	std	Y+10, r15	; 0x0a
    249c:	0b 87       	std	Y+11, r16	; 0x0b
    249e:	1c 87       	std	Y+12, r17	; 0x0c
					cpuSpeed(cpuSpeed), timerPrescaler(timerPrescaler), timeoutMilliseconds(timeoutMilliseconds)
    24a0:	29 81       	ldd	r18, Y+1	; 0x01
    24a2:	3a 81       	ldd	r19, Y+2	; 0x02
    24a4:	8b 81       	ldd	r24, Y+3	; 0x03
    24a6:	9c 81       	ldd	r25, Y+4	; 0x04
    24a8:	ad 81       	ldd	r26, Y+5	; 0x05
    24aa:	be 81       	ldd	r27, Y+6	; 0x06
    24ac:	f9 01       	movw	r30, r18
    24ae:	80 83       	st	Z, r24
    24b0:	91 83       	std	Z+1, r25	; 0x01
    24b2:	a2 83       	std	Z+2, r26	; 0x02
    24b4:	b3 83       	std	Z+3, r27	; 0x03
    24b6:	89 81       	ldd	r24, Y+1	; 0x01
    24b8:	9a 81       	ldd	r25, Y+2	; 0x02
    24ba:	2f 81       	ldd	r18, Y+7	; 0x07
    24bc:	38 85       	ldd	r19, Y+8	; 0x08
    24be:	fc 01       	movw	r30, r24
    24c0:	35 83       	std	Z+5, r19	; 0x05
    24c2:	24 83       	std	Z+4, r18	; 0x04
    24c4:	29 85       	ldd	r18, Y+9	; 0x09
    24c6:	3a 85       	ldd	r19, Y+10	; 0x0a
    24c8:	89 81       	ldd	r24, Y+1	; 0x01
    24ca:	9a 81       	ldd	r25, Y+2	; 0x02
    24cc:	fc 01       	movw	r30, r24
    24ce:	37 83       	std	Z+7, r19	; 0x07
    24d0:	26 83       	std	Z+6, r18	; 0x06
					{
						
					}
    24d2:	2c 96       	adiw	r28, 0x0c	; 12
    24d4:	0f b6       	in	r0, 0x3f	; 63
    24d6:	f8 94       	cli
    24d8:	de bf       	out	0x3e, r29	; 62
    24da:	0f be       	out	0x3f, r0	; 63
    24dc:	cd bf       	out	0x3d, r28	; 61
    24de:	df 91       	pop	r29
    24e0:	cf 91       	pop	r28
    24e2:	1f 91       	pop	r17
    24e4:	0f 91       	pop	r16
    24e6:	ff 90       	pop	r15
    24e8:	ef 90       	pop	r14
    24ea:	08 95       	ret

000024ec <_ZN10helicopter7drivers12SerialDriverC1EmNS1_8UartPortEPNS_4util5TimerEbb>:
				 * only used when enableTimeout = true.
				 * @param enableTimeout Bool indicating if the system should timeout
				 * while waiting to send or receive data. True by default so that the
				 * driver will timeout if it can't send or receive data after a short timeout period.
				 */		
				SerialDriver(
    24ec:	cf 92       	push	r12
    24ee:	ef 92       	push	r14
    24f0:	0f 93       	push	r16
    24f2:	1f 93       	push	r17
    24f4:	cf 93       	push	r28
    24f6:	df 93       	push	r29
    24f8:	cd b7       	in	r28, 0x3d	; 61
    24fa:	de b7       	in	r29, 0x3e	; 62
    24fc:	2b 97       	sbiw	r28, 0x0b	; 11
    24fe:	0f b6       	in	r0, 0x3f	; 63
    2500:	f8 94       	cli
    2502:	de bf       	out	0x3e, r29	; 62
    2504:	0f be       	out	0x3f, r0	; 63
    2506:	cd bf       	out	0x3d, r28	; 61
    2508:	9a 83       	std	Y+2, r25	; 0x02
    250a:	89 83       	std	Y+1, r24	; 0x01
    250c:	4b 83       	std	Y+3, r20	; 0x03
    250e:	5c 83       	std	Y+4, r21	; 0x04
    2510:	6d 83       	std	Y+5, r22	; 0x05
    2512:	7e 83       	std	Y+6, r23	; 0x06
    2514:	2f 83       	std	Y+7, r18	; 0x07
    2516:	19 87       	std	Y+9, r17	; 0x09
    2518:	08 87       	std	Y+8, r16	; 0x08
    251a:	ea 86       	std	Y+10, r14	; 0x0a
    251c:	cb 86       	std	Y+11, r12	; 0x0b
					bool useDoubleSpeedMode = false) :
				baudRate(baudRate),
				uartPort(uartPort),
				timer(timer),
				isTimeoutEnabled(enableTimeout),
				useDoubleSpeedMode(useDoubleSpeedMode)
    251e:	89 81       	ldd	r24, Y+1	; 0x01
    2520:	9a 81       	ldd	r25, Y+2	; 0x02
    2522:	2a e0       	ldi	r18, 0x0A	; 10
    2524:	32 e0       	ldi	r19, 0x02	; 2
    2526:	fc 01       	movw	r30, r24
    2528:	31 83       	std	Z+1, r19	; 0x01
    252a:	20 83       	st	Z, r18
    252c:	29 81       	ldd	r18, Y+1	; 0x01
    252e:	3a 81       	ldd	r19, Y+2	; 0x02
    2530:	8b 81       	ldd	r24, Y+3	; 0x03
    2532:	9c 81       	ldd	r25, Y+4	; 0x04
    2534:	ad 81       	ldd	r26, Y+5	; 0x05
    2536:	be 81       	ldd	r27, Y+6	; 0x06
    2538:	f9 01       	movw	r30, r18
    253a:	82 83       	std	Z+2, r24	; 0x02
    253c:	93 83       	std	Z+3, r25	; 0x03
    253e:	a4 83       	std	Z+4, r26	; 0x04
    2540:	b5 83       	std	Z+5, r27	; 0x05
    2542:	89 81       	ldd	r24, Y+1	; 0x01
    2544:	9a 81       	ldd	r25, Y+2	; 0x02
    2546:	2f 81       	ldd	r18, Y+7	; 0x07
    2548:	fc 01       	movw	r30, r24
    254a:	26 83       	std	Z+6, r18	; 0x06
    254c:	89 81       	ldd	r24, Y+1	; 0x01
    254e:	9a 81       	ldd	r25, Y+2	; 0x02
    2550:	28 85       	ldd	r18, Y+8	; 0x08
    2552:	39 85       	ldd	r19, Y+9	; 0x09
    2554:	fc 01       	movw	r30, r24
    2556:	30 87       	std	Z+8, r19	; 0x08
    2558:	27 83       	std	Z+7, r18	; 0x07
    255a:	89 81       	ldd	r24, Y+1	; 0x01
    255c:	9a 81       	ldd	r25, Y+2	; 0x02
    255e:	2a 85       	ldd	r18, Y+10	; 0x0a
    2560:	fc 01       	movw	r30, r24
    2562:	21 87       	std	Z+9, r18	; 0x09
    2564:	89 81       	ldd	r24, Y+1	; 0x01
    2566:	9a 81       	ldd	r25, Y+2	; 0x02
    2568:	2b 85       	ldd	r18, Y+11	; 0x0b
    256a:	fc 01       	movw	r30, r24
    256c:	22 87       	std	Z+10, r18	; 0x0a
				{
					
				}
    256e:	2b 96       	adiw	r28, 0x0b	; 11
    2570:	0f b6       	in	r0, 0x3f	; 63
    2572:	f8 94       	cli
    2574:	de bf       	out	0x3e, r29	; 62
    2576:	0f be       	out	0x3f, r0	; 63
    2578:	cd bf       	out	0x3d, r28	; 61
    257a:	df 91       	pop	r29
    257c:	cf 91       	pop	r28
    257e:	1f 91       	pop	r17
    2580:	0f 91       	pop	r16
    2582:	ef 90       	pop	r14
    2584:	cf 90       	pop	r12
    2586:	08 95       	ret

00002588 <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverE>:
				 * at the same time interval (i.e. 20 milliseconds) for both transmitting a byte as well
				 * as receiving a byte.
				 * @param serialDriver the driver used to communicate with the serial port
				 * which is used to communicate with the Ground Control Station.
				 */
				GroundControlStationInterface(SerialDriver *serialDriver):
    2588:	cf 93       	push	r28
    258a:	df 93       	push	r29
    258c:	00 d0       	rcall	.+0      	; 0x258e <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverE+0x6>
    258e:	1f 92       	push	r1
    2590:	cd b7       	in	r28, 0x3d	; 61
    2592:	de b7       	in	r29, 0x3e	; 62
    2594:	9a 83       	std	Y+2, r25	; 0x02
    2596:	89 83       	std	Y+1, r24	; 0x01
    2598:	7c 83       	std	Y+4, r23	; 0x04
    259a:	6b 83       	std	Y+3, r22	; 0x03
					serialDriver(serialDriver)
    259c:	89 81       	ldd	r24, Y+1	; 0x01
    259e:	9a 81       	ldd	r25, Y+2	; 0x02
    25a0:	2b 81       	ldd	r18, Y+3	; 0x03
    25a2:	3c 81       	ldd	r19, Y+4	; 0x04
    25a4:	fc 01       	movw	r30, r24
    25a6:	31 83       	std	Z+1, r19	; 0x01
    25a8:	20 83       	st	Z, r18
					{}
    25aa:	0f 90       	pop	r0
    25ac:	0f 90       	pop	r0
    25ae:	0f 90       	pop	r0
    25b0:	0f 90       	pop	r0
    25b2:	df 91       	pop	r29
    25b4:	cf 91       	pop	r28
    25b6:	08 95       	ret

000025b8 <_ZN10helicopter5model11SystemModelC1Ev>:
			
			public:
			
			float EcefToLocalNEDRotationMatrix[3][3];
			
			SystemModel():
    25b8:	cf 93       	push	r28
    25ba:	df 93       	push	r29
    25bc:	1f 92       	push	r1
    25be:	1f 92       	push	r1
    25c0:	cd b7       	in	r28, 0x3d	; 61
    25c2:	de b7       	in	r29, 0x3e	; 62
    25c4:	9a 83       	std	Y+2, r25	; 0x02
    25c6:	89 83       	std	Y+1, r24	; 0x01
				checksumErrors(0),
				numOfFramesBlown(0),
				
				initialXPositionEcef(0),
				initialYPositionEcef(0),
				initialZPositionEcef(0)
    25c8:	89 81       	ldd	r24, Y+1	; 0x01
    25ca:	9a 81       	ldd	r25, Y+2	; 0x02
    25cc:	fc 01       	movw	r30, r24
    25ce:	10 82       	st	Z, r1
    25d0:	11 82       	std	Z+1, r1	; 0x01
    25d2:	12 82       	std	Z+2, r1	; 0x02
    25d4:	13 82       	std	Z+3, r1	; 0x03
    25d6:	89 81       	ldd	r24, Y+1	; 0x01
    25d8:	9a 81       	ldd	r25, Y+2	; 0x02
    25da:	fc 01       	movw	r30, r24
    25dc:	14 82       	std	Z+4, r1	; 0x04
    25de:	15 82       	std	Z+5, r1	; 0x05
    25e0:	16 82       	std	Z+6, r1	; 0x06
    25e2:	17 82       	std	Z+7, r1	; 0x07
    25e4:	89 81       	ldd	r24, Y+1	; 0x01
    25e6:	9a 81       	ldd	r25, Y+2	; 0x02
    25e8:	fc 01       	movw	r30, r24
    25ea:	10 86       	std	Z+8, r1	; 0x08
    25ec:	11 86       	std	Z+9, r1	; 0x09
    25ee:	12 86       	std	Z+10, r1	; 0x0a
    25f0:	13 86       	std	Z+11, r1	; 0x0b
    25f2:	89 81       	ldd	r24, Y+1	; 0x01
    25f4:	9a 81       	ldd	r25, Y+2	; 0x02
    25f6:	fc 01       	movw	r30, r24
    25f8:	14 86       	std	Z+12, r1	; 0x0c
    25fa:	15 86       	std	Z+13, r1	; 0x0d
    25fc:	16 86       	std	Z+14, r1	; 0x0e
    25fe:	17 86       	std	Z+15, r1	; 0x0f
    2600:	89 81       	ldd	r24, Y+1	; 0x01
    2602:	9a 81       	ldd	r25, Y+2	; 0x02
    2604:	fc 01       	movw	r30, r24
    2606:	10 8a       	std	Z+16, r1	; 0x10
    2608:	11 8a       	std	Z+17, r1	; 0x11
    260a:	12 8a       	std	Z+18, r1	; 0x12
    260c:	13 8a       	std	Z+19, r1	; 0x13
    260e:	89 81       	ldd	r24, Y+1	; 0x01
    2610:	9a 81       	ldd	r25, Y+2	; 0x02
    2612:	fc 01       	movw	r30, r24
    2614:	14 8a       	std	Z+20, r1	; 0x14
    2616:	15 8a       	std	Z+21, r1	; 0x15
    2618:	16 8a       	std	Z+22, r1	; 0x16
    261a:	17 8a       	std	Z+23, r1	; 0x17
    261c:	89 81       	ldd	r24, Y+1	; 0x01
    261e:	9a 81       	ldd	r25, Y+2	; 0x02
    2620:	fc 01       	movw	r30, r24
    2622:	10 8e       	std	Z+24, r1	; 0x18
    2624:	11 8e       	std	Z+25, r1	; 0x19
    2626:	12 8e       	std	Z+26, r1	; 0x1a
    2628:	13 8e       	std	Z+27, r1	; 0x1b
    262a:	89 81       	ldd	r24, Y+1	; 0x01
    262c:	9a 81       	ldd	r25, Y+2	; 0x02
    262e:	fc 01       	movw	r30, r24
    2630:	14 8e       	std	Z+28, r1	; 0x1c
    2632:	15 8e       	std	Z+29, r1	; 0x1d
    2634:	16 8e       	std	Z+30, r1	; 0x1e
    2636:	17 8e       	std	Z+31, r1	; 0x1f
    2638:	89 81       	ldd	r24, Y+1	; 0x01
    263a:	9a 81       	ldd	r25, Y+2	; 0x02
    263c:	fc 01       	movw	r30, r24
    263e:	10 a2       	std	Z+32, r1	; 0x20
    2640:	11 a2       	std	Z+33, r1	; 0x21
    2642:	12 a2       	std	Z+34, r1	; 0x22
    2644:	13 a2       	std	Z+35, r1	; 0x23
    2646:	89 81       	ldd	r24, Y+1	; 0x01
    2648:	9a 81       	ldd	r25, Y+2	; 0x02
    264a:	fc 01       	movw	r30, r24
    264c:	14 a2       	std	Z+36, r1	; 0x24
    264e:	15 a2       	std	Z+37, r1	; 0x25
    2650:	16 a2       	std	Z+38, r1	; 0x26
    2652:	17 a2       	std	Z+39, r1	; 0x27
    2654:	89 81       	ldd	r24, Y+1	; 0x01
    2656:	9a 81       	ldd	r25, Y+2	; 0x02
    2658:	fc 01       	movw	r30, r24
    265a:	10 a6       	std	Z+40, r1	; 0x28
    265c:	11 a6       	std	Z+41, r1	; 0x29
    265e:	12 a6       	std	Z+42, r1	; 0x2a
    2660:	13 a6       	std	Z+43, r1	; 0x2b
    2662:	89 81       	ldd	r24, Y+1	; 0x01
    2664:	9a 81       	ldd	r25, Y+2	; 0x02
    2666:	fc 01       	movw	r30, r24
    2668:	14 a6       	std	Z+44, r1	; 0x2c
    266a:	15 a6       	std	Z+45, r1	; 0x2d
    266c:	16 a6       	std	Z+46, r1	; 0x2e
    266e:	17 a6       	std	Z+47, r1	; 0x2f
    2670:	89 81       	ldd	r24, Y+1	; 0x01
    2672:	9a 81       	ldd	r25, Y+2	; 0x02
    2674:	fc 01       	movw	r30, r24
    2676:	10 aa       	std	Z+48, r1	; 0x30
    2678:	11 aa       	std	Z+49, r1	; 0x31
    267a:	12 aa       	std	Z+50, r1	; 0x32
    267c:	13 aa       	std	Z+51, r1	; 0x33
    267e:	89 81       	ldd	r24, Y+1	; 0x01
    2680:	9a 81       	ldd	r25, Y+2	; 0x02
    2682:	fc 01       	movw	r30, r24
    2684:	14 aa       	std	Z+52, r1	; 0x34
    2686:	15 aa       	std	Z+53, r1	; 0x35
    2688:	16 aa       	std	Z+54, r1	; 0x36
    268a:	17 aa       	std	Z+55, r1	; 0x37
    268c:	89 81       	ldd	r24, Y+1	; 0x01
    268e:	9a 81       	ldd	r25, Y+2	; 0x02
    2690:	fc 01       	movw	r30, r24
    2692:	10 ae       	std	Z+56, r1	; 0x38
    2694:	11 ae       	std	Z+57, r1	; 0x39
    2696:	12 ae       	std	Z+58, r1	; 0x3a
    2698:	13 ae       	std	Z+59, r1	; 0x3b
    269a:	89 81       	ldd	r24, Y+1	; 0x01
    269c:	9a 81       	ldd	r25, Y+2	; 0x02
    269e:	fc 01       	movw	r30, r24
    26a0:	14 ae       	std	Z+60, r1	; 0x3c
    26a2:	15 ae       	std	Z+61, r1	; 0x3d
    26a4:	16 ae       	std	Z+62, r1	; 0x3e
    26a6:	17 ae       	std	Z+63, r1	; 0x3f
    26a8:	89 81       	ldd	r24, Y+1	; 0x01
    26aa:	9a 81       	ldd	r25, Y+2	; 0x02
    26ac:	80 5c       	subi	r24, 0xC0	; 192
    26ae:	9f 4f       	sbci	r25, 0xFF	; 255
    26b0:	fc 01       	movw	r30, r24
    26b2:	10 82       	st	Z, r1
    26b4:	11 82       	std	Z+1, r1	; 0x01
    26b6:	12 82       	std	Z+2, r1	; 0x02
    26b8:	13 82       	std	Z+3, r1	; 0x03
    26ba:	89 81       	ldd	r24, Y+1	; 0x01
    26bc:	9a 81       	ldd	r25, Y+2	; 0x02
    26be:	8c 5b       	subi	r24, 0xBC	; 188
    26c0:	9f 4f       	sbci	r25, 0xFF	; 255
    26c2:	fc 01       	movw	r30, r24
    26c4:	10 82       	st	Z, r1
    26c6:	11 82       	std	Z+1, r1	; 0x01
    26c8:	12 82       	std	Z+2, r1	; 0x02
    26ca:	13 82       	std	Z+3, r1	; 0x03
    26cc:	89 81       	ldd	r24, Y+1	; 0x01
    26ce:	9a 81       	ldd	r25, Y+2	; 0x02
    26d0:	88 5b       	subi	r24, 0xB8	; 184
    26d2:	9f 4f       	sbci	r25, 0xFF	; 255
    26d4:	fc 01       	movw	r30, r24
    26d6:	10 82       	st	Z, r1
    26d8:	11 82       	std	Z+1, r1	; 0x01
    26da:	12 82       	std	Z+2, r1	; 0x02
    26dc:	13 82       	std	Z+3, r1	; 0x03
    26de:	89 81       	ldd	r24, Y+1	; 0x01
    26e0:	9a 81       	ldd	r25, Y+2	; 0x02
    26e2:	84 5b       	subi	r24, 0xB4	; 180
    26e4:	9f 4f       	sbci	r25, 0xFF	; 255
    26e6:	fc 01       	movw	r30, r24
    26e8:	10 82       	st	Z, r1
    26ea:	11 82       	std	Z+1, r1	; 0x01
    26ec:	12 82       	std	Z+2, r1	; 0x02
    26ee:	13 82       	std	Z+3, r1	; 0x03
    26f0:	89 81       	ldd	r24, Y+1	; 0x01
    26f2:	9a 81       	ldd	r25, Y+2	; 0x02
    26f4:	80 5b       	subi	r24, 0xB0	; 176
    26f6:	9f 4f       	sbci	r25, 0xFF	; 255
    26f8:	fc 01       	movw	r30, r24
    26fa:	10 82       	st	Z, r1
    26fc:	11 82       	std	Z+1, r1	; 0x01
    26fe:	12 82       	std	Z+2, r1	; 0x02
    2700:	13 82       	std	Z+3, r1	; 0x03
    2702:	89 81       	ldd	r24, Y+1	; 0x01
    2704:	9a 81       	ldd	r25, Y+2	; 0x02
    2706:	8c 5a       	subi	r24, 0xAC	; 172
    2708:	9f 4f       	sbci	r25, 0xFF	; 255
    270a:	fc 01       	movw	r30, r24
    270c:	10 82       	st	Z, r1
    270e:	11 82       	std	Z+1, r1	; 0x01
    2710:	12 82       	std	Z+2, r1	; 0x02
    2712:	13 82       	std	Z+3, r1	; 0x03
    2714:	89 81       	ldd	r24, Y+1	; 0x01
    2716:	9a 81       	ldd	r25, Y+2	; 0x02
    2718:	88 5a       	subi	r24, 0xA8	; 168
    271a:	9f 4f       	sbci	r25, 0xFF	; 255
    271c:	fc 01       	movw	r30, r24
    271e:	10 82       	st	Z, r1
    2720:	11 82       	std	Z+1, r1	; 0x01
    2722:	12 82       	std	Z+2, r1	; 0x02
    2724:	13 82       	std	Z+3, r1	; 0x03
    2726:	89 81       	ldd	r24, Y+1	; 0x01
    2728:	9a 81       	ldd	r25, Y+2	; 0x02
    272a:	84 5a       	subi	r24, 0xA4	; 164
    272c:	9f 4f       	sbci	r25, 0xFF	; 255
    272e:	fc 01       	movw	r30, r24
    2730:	10 82       	st	Z, r1
    2732:	11 82       	std	Z+1, r1	; 0x01
    2734:	12 82       	std	Z+2, r1	; 0x02
    2736:	13 82       	std	Z+3, r1	; 0x03
    2738:	89 81       	ldd	r24, Y+1	; 0x01
    273a:	9a 81       	ldd	r25, Y+2	; 0x02
    273c:	80 5a       	subi	r24, 0xA0	; 160
    273e:	9f 4f       	sbci	r25, 0xFF	; 255
    2740:	fc 01       	movw	r30, r24
    2742:	10 82       	st	Z, r1
    2744:	11 82       	std	Z+1, r1	; 0x01
    2746:	12 82       	std	Z+2, r1	; 0x02
    2748:	13 82       	std	Z+3, r1	; 0x03
    274a:	89 81       	ldd	r24, Y+1	; 0x01
    274c:	9a 81       	ldd	r25, Y+2	; 0x02
    274e:	8c 59       	subi	r24, 0x9C	; 156
    2750:	9f 4f       	sbci	r25, 0xFF	; 255
    2752:	fc 01       	movw	r30, r24
    2754:	10 82       	st	Z, r1
    2756:	11 82       	std	Z+1, r1	; 0x01
    2758:	12 82       	std	Z+2, r1	; 0x02
    275a:	13 82       	std	Z+3, r1	; 0x03
    275c:	89 81       	ldd	r24, Y+1	; 0x01
    275e:	9a 81       	ldd	r25, Y+2	; 0x02
    2760:	88 59       	subi	r24, 0x98	; 152
    2762:	9f 4f       	sbci	r25, 0xFF	; 255
    2764:	fc 01       	movw	r30, r24
    2766:	10 82       	st	Z, r1
    2768:	11 82       	std	Z+1, r1	; 0x01
    276a:	12 82       	std	Z+2, r1	; 0x02
    276c:	13 82       	std	Z+3, r1	; 0x03
    276e:	89 81       	ldd	r24, Y+1	; 0x01
    2770:	9a 81       	ldd	r25, Y+2	; 0x02
    2772:	84 59       	subi	r24, 0x94	; 148
    2774:	9f 4f       	sbci	r25, 0xFF	; 255
    2776:	fc 01       	movw	r30, r24
    2778:	10 82       	st	Z, r1
    277a:	11 82       	std	Z+1, r1	; 0x01
    277c:	12 82       	std	Z+2, r1	; 0x02
    277e:	13 82       	std	Z+3, r1	; 0x03
    2780:	89 81       	ldd	r24, Y+1	; 0x01
    2782:	9a 81       	ldd	r25, Y+2	; 0x02
    2784:	80 59       	subi	r24, 0x90	; 144
    2786:	9f 4f       	sbci	r25, 0xFF	; 255
    2788:	fc 01       	movw	r30, r24
    278a:	10 82       	st	Z, r1
    278c:	11 82       	std	Z+1, r1	; 0x01
    278e:	12 82       	std	Z+2, r1	; 0x02
    2790:	13 82       	std	Z+3, r1	; 0x03
    2792:	89 81       	ldd	r24, Y+1	; 0x01
    2794:	9a 81       	ldd	r25, Y+2	; 0x02
    2796:	8c 58       	subi	r24, 0x8C	; 140
    2798:	9f 4f       	sbci	r25, 0xFF	; 255
    279a:	fc 01       	movw	r30, r24
    279c:	10 82       	st	Z, r1
    279e:	11 82       	std	Z+1, r1	; 0x01
    27a0:	12 82       	std	Z+2, r1	; 0x02
    27a2:	13 82       	std	Z+3, r1	; 0x03
    27a4:	89 81       	ldd	r24, Y+1	; 0x01
    27a6:	9a 81       	ldd	r25, Y+2	; 0x02
    27a8:	88 58       	subi	r24, 0x88	; 136
    27aa:	9f 4f       	sbci	r25, 0xFF	; 255
    27ac:	fc 01       	movw	r30, r24
    27ae:	10 82       	st	Z, r1
    27b0:	11 82       	std	Z+1, r1	; 0x01
    27b2:	12 82       	std	Z+2, r1	; 0x02
    27b4:	13 82       	std	Z+3, r1	; 0x03
    27b6:	89 81       	ldd	r24, Y+1	; 0x01
    27b8:	9a 81       	ldd	r25, Y+2	; 0x02
    27ba:	84 58       	subi	r24, 0x84	; 132
    27bc:	9f 4f       	sbci	r25, 0xFF	; 255
    27be:	fc 01       	movw	r30, r24
    27c0:	10 82       	st	Z, r1
    27c2:	11 82       	std	Z+1, r1	; 0x01
    27c4:	12 82       	std	Z+2, r1	; 0x02
    27c6:	13 82       	std	Z+3, r1	; 0x03
    27c8:	89 81       	ldd	r24, Y+1	; 0x01
    27ca:	9a 81       	ldd	r25, Y+2	; 0x02
    27cc:	80 58       	subi	r24, 0x80	; 128
    27ce:	9f 4f       	sbci	r25, 0xFF	; 255
    27d0:	fc 01       	movw	r30, r24
    27d2:	10 82       	st	Z, r1
    27d4:	11 82       	std	Z+1, r1	; 0x01
    27d6:	12 82       	std	Z+2, r1	; 0x02
    27d8:	13 82       	std	Z+3, r1	; 0x03
    27da:	89 81       	ldd	r24, Y+1	; 0x01
    27dc:	9a 81       	ldd	r25, Y+2	; 0x02
    27de:	8c 57       	subi	r24, 0x7C	; 124
    27e0:	9f 4f       	sbci	r25, 0xFF	; 255
    27e2:	fc 01       	movw	r30, r24
    27e4:	10 82       	st	Z, r1
    27e6:	11 82       	std	Z+1, r1	; 0x01
    27e8:	12 82       	std	Z+2, r1	; 0x02
    27ea:	13 82       	std	Z+3, r1	; 0x03
    27ec:	89 81       	ldd	r24, Y+1	; 0x01
    27ee:	9a 81       	ldd	r25, Y+2	; 0x02
    27f0:	88 57       	subi	r24, 0x78	; 120
    27f2:	9f 4f       	sbci	r25, 0xFF	; 255
    27f4:	fc 01       	movw	r30, r24
    27f6:	10 82       	st	Z, r1
    27f8:	11 82       	std	Z+1, r1	; 0x01
    27fa:	12 82       	std	Z+2, r1	; 0x02
    27fc:	13 82       	std	Z+3, r1	; 0x03
    27fe:	89 81       	ldd	r24, Y+1	; 0x01
    2800:	9a 81       	ldd	r25, Y+2	; 0x02
    2802:	84 57       	subi	r24, 0x74	; 116
    2804:	9f 4f       	sbci	r25, 0xFF	; 255
    2806:	fc 01       	movw	r30, r24
    2808:	10 82       	st	Z, r1
    280a:	11 82       	std	Z+1, r1	; 0x01
    280c:	12 82       	std	Z+2, r1	; 0x02
    280e:	13 82       	std	Z+3, r1	; 0x03
    2810:	89 81       	ldd	r24, Y+1	; 0x01
    2812:	9a 81       	ldd	r25, Y+2	; 0x02
    2814:	80 57       	subi	r24, 0x70	; 112
    2816:	9f 4f       	sbci	r25, 0xFF	; 255
    2818:	fc 01       	movw	r30, r24
    281a:	10 82       	st	Z, r1
    281c:	11 82       	std	Z+1, r1	; 0x01
    281e:	12 82       	std	Z+2, r1	; 0x02
    2820:	13 82       	std	Z+3, r1	; 0x03
    2822:	89 81       	ldd	r24, Y+1	; 0x01
    2824:	9a 81       	ldd	r25, Y+2	; 0x02
    2826:	8c 56       	subi	r24, 0x6C	; 108
    2828:	9f 4f       	sbci	r25, 0xFF	; 255
    282a:	fc 01       	movw	r30, r24
    282c:	10 82       	st	Z, r1
    282e:	11 82       	std	Z+1, r1	; 0x01
    2830:	12 82       	std	Z+2, r1	; 0x02
    2832:	13 82       	std	Z+3, r1	; 0x03
    2834:	89 81       	ldd	r24, Y+1	; 0x01
    2836:	9a 81       	ldd	r25, Y+2	; 0x02
    2838:	88 56       	subi	r24, 0x68	; 104
    283a:	9f 4f       	sbci	r25, 0xFF	; 255
    283c:	fc 01       	movw	r30, r24
    283e:	10 82       	st	Z, r1
    2840:	11 82       	std	Z+1, r1	; 0x01
    2842:	12 82       	std	Z+2, r1	; 0x02
    2844:	13 82       	std	Z+3, r1	; 0x03
    2846:	89 81       	ldd	r24, Y+1	; 0x01
    2848:	9a 81       	ldd	r25, Y+2	; 0x02
    284a:	84 56       	subi	r24, 0x64	; 100
    284c:	9f 4f       	sbci	r25, 0xFF	; 255
    284e:	fc 01       	movw	r30, r24
    2850:	10 82       	st	Z, r1
    2852:	11 82       	std	Z+1, r1	; 0x01
    2854:	12 82       	std	Z+2, r1	; 0x02
    2856:	13 82       	std	Z+3, r1	; 0x03
    2858:	89 81       	ldd	r24, Y+1	; 0x01
    285a:	9a 81       	ldd	r25, Y+2	; 0x02
    285c:	80 56       	subi	r24, 0x60	; 96
    285e:	9f 4f       	sbci	r25, 0xFF	; 255
    2860:	fc 01       	movw	r30, r24
    2862:	10 82       	st	Z, r1
    2864:	11 82       	std	Z+1, r1	; 0x01
    2866:	12 82       	std	Z+2, r1	; 0x02
    2868:	13 82       	std	Z+3, r1	; 0x03
    286a:	89 81       	ldd	r24, Y+1	; 0x01
    286c:	9a 81       	ldd	r25, Y+2	; 0x02
    286e:	8c 55       	subi	r24, 0x5C	; 92
    2870:	9f 4f       	sbci	r25, 0xFF	; 255
    2872:	fc 01       	movw	r30, r24
    2874:	10 82       	st	Z, r1
    2876:	11 82       	std	Z+1, r1	; 0x01
    2878:	12 82       	std	Z+2, r1	; 0x02
    287a:	13 82       	std	Z+3, r1	; 0x03
    287c:	89 81       	ldd	r24, Y+1	; 0x01
    287e:	9a 81       	ldd	r25, Y+2	; 0x02
    2880:	88 55       	subi	r24, 0x58	; 88
    2882:	9f 4f       	sbci	r25, 0xFF	; 255
    2884:	fc 01       	movw	r30, r24
    2886:	10 82       	st	Z, r1
    2888:	11 82       	std	Z+1, r1	; 0x01
    288a:	12 82       	std	Z+2, r1	; 0x02
    288c:	13 82       	std	Z+3, r1	; 0x03
    288e:	89 81       	ldd	r24, Y+1	; 0x01
    2890:	9a 81       	ldd	r25, Y+2	; 0x02
    2892:	84 55       	subi	r24, 0x54	; 84
    2894:	9f 4f       	sbci	r25, 0xFF	; 255
    2896:	fc 01       	movw	r30, r24
    2898:	10 82       	st	Z, r1
    289a:	11 82       	std	Z+1, r1	; 0x01
    289c:	12 82       	std	Z+2, r1	; 0x02
    289e:	13 82       	std	Z+3, r1	; 0x03
    28a0:	89 81       	ldd	r24, Y+1	; 0x01
    28a2:	9a 81       	ldd	r25, Y+2	; 0x02
    28a4:	80 55       	subi	r24, 0x50	; 80
    28a6:	9f 4f       	sbci	r25, 0xFF	; 255
    28a8:	fc 01       	movw	r30, r24
    28aa:	10 82       	st	Z, r1
    28ac:	11 82       	std	Z+1, r1	; 0x01
    28ae:	12 82       	std	Z+2, r1	; 0x02
    28b0:	13 82       	std	Z+3, r1	; 0x03
    28b2:	89 81       	ldd	r24, Y+1	; 0x01
    28b4:	9a 81       	ldd	r25, Y+2	; 0x02
    28b6:	8c 54       	subi	r24, 0x4C	; 76
    28b8:	9f 4f       	sbci	r25, 0xFF	; 255
    28ba:	fc 01       	movw	r30, r24
    28bc:	10 82       	st	Z, r1
    28be:	11 82       	std	Z+1, r1	; 0x01
    28c0:	12 82       	std	Z+2, r1	; 0x02
    28c2:	13 82       	std	Z+3, r1	; 0x03
    28c4:	89 81       	ldd	r24, Y+1	; 0x01
    28c6:	9a 81       	ldd	r25, Y+2	; 0x02
    28c8:	88 54       	subi	r24, 0x48	; 72
    28ca:	9f 4f       	sbci	r25, 0xFF	; 255
    28cc:	fc 01       	movw	r30, r24
    28ce:	10 82       	st	Z, r1
    28d0:	11 82       	std	Z+1, r1	; 0x01
    28d2:	12 82       	std	Z+2, r1	; 0x02
    28d4:	13 82       	std	Z+3, r1	; 0x03
    28d6:	89 81       	ldd	r24, Y+1	; 0x01
    28d8:	9a 81       	ldd	r25, Y+2	; 0x02
    28da:	84 54       	subi	r24, 0x44	; 68
    28dc:	9f 4f       	sbci	r25, 0xFF	; 255
    28de:	fc 01       	movw	r30, r24
    28e0:	10 82       	st	Z, r1
    28e2:	11 82       	std	Z+1, r1	; 0x01
    28e4:	12 82       	std	Z+2, r1	; 0x02
    28e6:	13 82       	std	Z+3, r1	; 0x03
    28e8:	89 81       	ldd	r24, Y+1	; 0x01
    28ea:	9a 81       	ldd	r25, Y+2	; 0x02
    28ec:	80 54       	subi	r24, 0x40	; 64
    28ee:	9f 4f       	sbci	r25, 0xFF	; 255
    28f0:	fc 01       	movw	r30, r24
    28f2:	10 82       	st	Z, r1
    28f4:	11 82       	std	Z+1, r1	; 0x01
    28f6:	12 82       	std	Z+2, r1	; 0x02
    28f8:	13 82       	std	Z+3, r1	; 0x03
    28fa:	89 81       	ldd	r24, Y+1	; 0x01
    28fc:	9a 81       	ldd	r25, Y+2	; 0x02
    28fe:	8c 53       	subi	r24, 0x3C	; 60
    2900:	9f 4f       	sbci	r25, 0xFF	; 255
    2902:	fc 01       	movw	r30, r24
    2904:	10 82       	st	Z, r1
    2906:	11 82       	std	Z+1, r1	; 0x01
    2908:	12 82       	std	Z+2, r1	; 0x02
    290a:	13 82       	std	Z+3, r1	; 0x03
			{
				EcefToLocalNEDRotationMatrix[0][0] = 0;
    290c:	89 81       	ldd	r24, Y+1	; 0x01
    290e:	9a 81       	ldd	r25, Y+2	; 0x02
    2910:	88 53       	subi	r24, 0x38	; 56
    2912:	9f 4f       	sbci	r25, 0xFF	; 255
    2914:	fc 01       	movw	r30, r24
    2916:	10 82       	st	Z, r1
    2918:	11 82       	std	Z+1, r1	; 0x01
    291a:	12 82       	std	Z+2, r1	; 0x02
    291c:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[0][1] = 0;
    291e:	89 81       	ldd	r24, Y+1	; 0x01
    2920:	9a 81       	ldd	r25, Y+2	; 0x02
    2922:	84 53       	subi	r24, 0x34	; 52
    2924:	9f 4f       	sbci	r25, 0xFF	; 255
    2926:	fc 01       	movw	r30, r24
    2928:	10 82       	st	Z, r1
    292a:	11 82       	std	Z+1, r1	; 0x01
    292c:	12 82       	std	Z+2, r1	; 0x02
    292e:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[0][2] = 0;
    2930:	89 81       	ldd	r24, Y+1	; 0x01
    2932:	9a 81       	ldd	r25, Y+2	; 0x02
    2934:	80 53       	subi	r24, 0x30	; 48
    2936:	9f 4f       	sbci	r25, 0xFF	; 255
    2938:	fc 01       	movw	r30, r24
    293a:	10 82       	st	Z, r1
    293c:	11 82       	std	Z+1, r1	; 0x01
    293e:	12 82       	std	Z+2, r1	; 0x02
    2940:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][0] = 0;
    2942:	89 81       	ldd	r24, Y+1	; 0x01
    2944:	9a 81       	ldd	r25, Y+2	; 0x02
    2946:	8c 52       	subi	r24, 0x2C	; 44
    2948:	9f 4f       	sbci	r25, 0xFF	; 255
    294a:	fc 01       	movw	r30, r24
    294c:	10 82       	st	Z, r1
    294e:	11 82       	std	Z+1, r1	; 0x01
    2950:	12 82       	std	Z+2, r1	; 0x02
    2952:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][1] = 0;
    2954:	89 81       	ldd	r24, Y+1	; 0x01
    2956:	9a 81       	ldd	r25, Y+2	; 0x02
    2958:	88 52       	subi	r24, 0x28	; 40
    295a:	9f 4f       	sbci	r25, 0xFF	; 255
    295c:	fc 01       	movw	r30, r24
    295e:	10 82       	st	Z, r1
    2960:	11 82       	std	Z+1, r1	; 0x01
    2962:	12 82       	std	Z+2, r1	; 0x02
    2964:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][2] = 0;
    2966:	89 81       	ldd	r24, Y+1	; 0x01
    2968:	9a 81       	ldd	r25, Y+2	; 0x02
    296a:	84 52       	subi	r24, 0x24	; 36
    296c:	9f 4f       	sbci	r25, 0xFF	; 255
    296e:	fc 01       	movw	r30, r24
    2970:	10 82       	st	Z, r1
    2972:	11 82       	std	Z+1, r1	; 0x01
    2974:	12 82       	std	Z+2, r1	; 0x02
    2976:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][0] = 0;
    2978:	89 81       	ldd	r24, Y+1	; 0x01
    297a:	9a 81       	ldd	r25, Y+2	; 0x02
    297c:	80 52       	subi	r24, 0x20	; 32
    297e:	9f 4f       	sbci	r25, 0xFF	; 255
    2980:	fc 01       	movw	r30, r24
    2982:	10 82       	st	Z, r1
    2984:	11 82       	std	Z+1, r1	; 0x01
    2986:	12 82       	std	Z+2, r1	; 0x02
    2988:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][1] = 0;
    298a:	89 81       	ldd	r24, Y+1	; 0x01
    298c:	9a 81       	ldd	r25, Y+2	; 0x02
    298e:	8c 51       	subi	r24, 0x1C	; 28
    2990:	9f 4f       	sbci	r25, 0xFF	; 255
    2992:	fc 01       	movw	r30, r24
    2994:	10 82       	st	Z, r1
    2996:	11 82       	std	Z+1, r1	; 0x01
    2998:	12 82       	std	Z+2, r1	; 0x02
    299a:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][2] = 0;								
    299c:	89 81       	ldd	r24, Y+1	; 0x01
    299e:	9a 81       	ldd	r25, Y+2	; 0x02
    29a0:	88 51       	subi	r24, 0x18	; 24
    29a2:	9f 4f       	sbci	r25, 0xFF	; 255
    29a4:	fc 01       	movw	r30, r24
    29a6:	10 82       	st	Z, r1
    29a8:	11 82       	std	Z+1, r1	; 0x01
    29aa:	12 82       	std	Z+2, r1	; 0x02
    29ac:	13 82       	std	Z+3, r1	; 0x03
			}
    29ae:	0f 90       	pop	r0
    29b0:	0f 90       	pop	r0
    29b2:	df 91       	pop	r29
    29b4:	cf 91       	pop	r28
    29b6:	08 95       	ret

000029b8 <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf>:
			void MagYawDegrees(float val) { magYawDegrees = val; }	
				
				
				
			float ReferenceMagYawDegrees() const {return referenceMagYawDegrees;}
			void ReferenceMagYawDegrees(float val) { referenceMagYawDegrees = val;}
    29b8:	cf 93       	push	r28
    29ba:	df 93       	push	r29
    29bc:	00 d0       	rcall	.+0      	; 0x29be <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf+0x6>
    29be:	00 d0       	rcall	.+0      	; 0x29c0 <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf+0x8>
    29c0:	cd b7       	in	r28, 0x3d	; 61
    29c2:	de b7       	in	r29, 0x3e	; 62
    29c4:	9a 83       	std	Y+2, r25	; 0x02
    29c6:	89 83       	std	Y+1, r24	; 0x01
    29c8:	4b 83       	std	Y+3, r20	; 0x03
    29ca:	5c 83       	std	Y+4, r21	; 0x04
    29cc:	6d 83       	std	Y+5, r22	; 0x05
    29ce:	7e 83       	std	Y+6, r23	; 0x06
    29d0:	29 81       	ldd	r18, Y+1	; 0x01
    29d2:	3a 81       	ldd	r19, Y+2	; 0x02
    29d4:	8b 81       	ldd	r24, Y+3	; 0x03
    29d6:	9c 81       	ldd	r25, Y+4	; 0x04
    29d8:	ad 81       	ldd	r26, Y+5	; 0x05
    29da:	be 81       	ldd	r27, Y+6	; 0x06
    29dc:	f9 01       	movw	r30, r18
    29de:	84 83       	std	Z+4, r24	; 0x04
    29e0:	95 83       	std	Z+5, r25	; 0x05
    29e2:	a6 83       	std	Z+6, r26	; 0x06
    29e4:	b7 83       	std	Z+7, r27	; 0x07
    29e6:	26 96       	adiw	r28, 0x06	; 6
    29e8:	0f b6       	in	r0, 0x3f	; 63
    29ea:	f8 94       	cli
    29ec:	de bf       	out	0x3e, r29	; 62
    29ee:	0f be       	out	0x3f, r0	; 63
    29f0:	cd bf       	out	0x3d, r28	; 61
    29f2:	df 91       	pop	r29
    29f4:	cf 91       	pop	r28
    29f6:	08 95       	ret

000029f8 <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf>:
				
			float YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
			void YawVelocityDegreesPerSecond(float val) { yawVelocityDegreesPerSecond = val;}
				
			float ReferenceYawVelocityDegreesPerSecond() const {return referenceYawVelocityDegreesPerSecond;}
			void ReferenceYawVelocityDegreesPerSecond(float val) { referenceYawVelocityDegreesPerSecond = val;}
    29f8:	cf 93       	push	r28
    29fa:	df 93       	push	r29
    29fc:	00 d0       	rcall	.+0      	; 0x29fe <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf+0x6>
    29fe:	00 d0       	rcall	.+0      	; 0x2a00 <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf+0x8>
    2a00:	cd b7       	in	r28, 0x3d	; 61
    2a02:	de b7       	in	r29, 0x3e	; 62
    2a04:	9a 83       	std	Y+2, r25	; 0x02
    2a06:	89 83       	std	Y+1, r24	; 0x01
    2a08:	4b 83       	std	Y+3, r20	; 0x03
    2a0a:	5c 83       	std	Y+4, r21	; 0x04
    2a0c:	6d 83       	std	Y+5, r22	; 0x05
    2a0e:	7e 83       	std	Y+6, r23	; 0x06
    2a10:	29 81       	ldd	r18, Y+1	; 0x01
    2a12:	3a 81       	ldd	r19, Y+2	; 0x02
    2a14:	8b 81       	ldd	r24, Y+3	; 0x03
    2a16:	9c 81       	ldd	r25, Y+4	; 0x04
    2a18:	ad 81       	ldd	r26, Y+5	; 0x05
    2a1a:	be 81       	ldd	r27, Y+6	; 0x06
    2a1c:	f9 01       	movw	r30, r18
    2a1e:	84 8b       	std	Z+20, r24	; 0x14
    2a20:	95 8b       	std	Z+21, r25	; 0x15
    2a22:	a6 8b       	std	Z+22, r26	; 0x16
    2a24:	b7 8b       	std	Z+23, r27	; 0x17
    2a26:	26 96       	adiw	r28, 0x06	; 6
    2a28:	0f b6       	in	r0, 0x3f	; 63
    2a2a:	f8 94       	cli
    2a2c:	de bf       	out	0x3e, r29	; 62
    2a2e:	0f be       	out	0x3f, r0	; 63
    2a30:	cd bf       	out	0x3d, r28	; 61
    2a32:	df 91       	pop	r29
    2a34:	cf 91       	pop	r28
    2a36:	08 95       	ret

00002a38 <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>:

			float ZDerivativeError() const {return zDerivativeError;}
			void ZDerivativeError(float val) { zDerivativeError = val;}						
						
						
			float LatitudeDegrees() const {return latitudeDegrees;}
    2a38:	cf 93       	push	r28
    2a3a:	df 93       	push	r29
    2a3c:	1f 92       	push	r1
    2a3e:	1f 92       	push	r1
    2a40:	cd b7       	in	r28, 0x3d	; 61
    2a42:	de b7       	in	r29, 0x3e	; 62
    2a44:	9a 83       	std	Y+2, r25	; 0x02
    2a46:	89 83       	std	Y+1, r24	; 0x01
    2a48:	89 81       	ldd	r24, Y+1	; 0x01
    2a4a:	9a 81       	ldd	r25, Y+2	; 0x02
    2a4c:	8c 55       	subi	r24, 0x5C	; 92
    2a4e:	9f 4f       	sbci	r25, 0xFF	; 255
    2a50:	fc 01       	movw	r30, r24
    2a52:	80 81       	ld	r24, Z
    2a54:	91 81       	ldd	r25, Z+1	; 0x01
    2a56:	a2 81       	ldd	r26, Z+2	; 0x02
    2a58:	b3 81       	ldd	r27, Z+3	; 0x03
    2a5a:	bc 01       	movw	r22, r24
    2a5c:	cd 01       	movw	r24, r26
    2a5e:	0f 90       	pop	r0
    2a60:	0f 90       	pop	r0
    2a62:	df 91       	pop	r29
    2a64:	cf 91       	pop	r28
    2a66:	08 95       	ret

00002a68 <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>:
			void LatitudeDegrees(float val) { latitudeDegrees = val;}						

			float LongitudeDegrees() const {return longitudeDegrees;}
    2a68:	cf 93       	push	r28
    2a6a:	df 93       	push	r29
    2a6c:	1f 92       	push	r1
    2a6e:	1f 92       	push	r1
    2a70:	cd b7       	in	r28, 0x3d	; 61
    2a72:	de b7       	in	r29, 0x3e	; 62
    2a74:	9a 83       	std	Y+2, r25	; 0x02
    2a76:	89 83       	std	Y+1, r24	; 0x01
    2a78:	89 81       	ldd	r24, Y+1	; 0x01
    2a7a:	9a 81       	ldd	r25, Y+2	; 0x02
    2a7c:	88 55       	subi	r24, 0x58	; 88
    2a7e:	9f 4f       	sbci	r25, 0xFF	; 255
    2a80:	fc 01       	movw	r30, r24
    2a82:	80 81       	ld	r24, Z
    2a84:	91 81       	ldd	r25, Z+1	; 0x01
    2a86:	a2 81       	ldd	r26, Z+2	; 0x02
    2a88:	b3 81       	ldd	r27, Z+3	; 0x03
    2a8a:	bc 01       	movw	r22, r24
    2a8c:	cd 01       	movw	r24, r26
    2a8e:	0f 90       	pop	r0
    2a90:	0f 90       	pop	r0
    2a92:	df 91       	pop	r29
    2a94:	cf 91       	pop	r28
    2a96:	08 95       	ret

00002a98 <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl>:
			
			long  BlownFrames() const {return numOfFramesBlown;}
			void BlownFrames( long val ) { numOfFramesBlown = val;}

			long  InitialXPositionEcef() const {return initialXPositionEcef;}
			void InitialXPositionEcef( long val ) { initialXPositionEcef = val;}			
    2a98:	cf 93       	push	r28
    2a9a:	df 93       	push	r29
    2a9c:	00 d0       	rcall	.+0      	; 0x2a9e <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl+0x6>
    2a9e:	00 d0       	rcall	.+0      	; 0x2aa0 <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl+0x8>
    2aa0:	cd b7       	in	r28, 0x3d	; 61
    2aa2:	de b7       	in	r29, 0x3e	; 62
    2aa4:	9a 83       	std	Y+2, r25	; 0x02
    2aa6:	89 83       	std	Y+1, r24	; 0x01
    2aa8:	4b 83       	std	Y+3, r20	; 0x03
    2aaa:	5c 83       	std	Y+4, r21	; 0x04
    2aac:	6d 83       	std	Y+5, r22	; 0x05
    2aae:	7e 83       	std	Y+6, r23	; 0x06
    2ab0:	6b 81       	ldd	r22, Y+3	; 0x03
    2ab2:	7c 81       	ldd	r23, Y+4	; 0x04
    2ab4:	8d 81       	ldd	r24, Y+5	; 0x05
    2ab6:	9e 81       	ldd	r25, Y+6	; 0x06
    2ab8:	0e 94 1a 3f 	call	0x7e34	; 0x7e34 <__floatsisf>
    2abc:	dc 01       	movw	r26, r24
    2abe:	cb 01       	movw	r24, r22
    2ac0:	29 81       	ldd	r18, Y+1	; 0x01
    2ac2:	3a 81       	ldd	r19, Y+2	; 0x02
    2ac4:	24 54       	subi	r18, 0x44	; 68
    2ac6:	3f 4f       	sbci	r19, 0xFF	; 255
    2ac8:	f9 01       	movw	r30, r18
    2aca:	80 83       	st	Z, r24
    2acc:	91 83       	std	Z+1, r25	; 0x01
    2ace:	a2 83       	std	Z+2, r26	; 0x02
    2ad0:	b3 83       	std	Z+3, r27	; 0x03
    2ad2:	26 96       	adiw	r28, 0x06	; 6
    2ad4:	0f b6       	in	r0, 0x3f	; 63
    2ad6:	f8 94       	cli
    2ad8:	de bf       	out	0x3e, r29	; 62
    2ada:	0f be       	out	0x3f, r0	; 63
    2adc:	cd bf       	out	0x3d, r28	; 61
    2ade:	df 91       	pop	r29
    2ae0:	cf 91       	pop	r28
    2ae2:	08 95       	ret

00002ae4 <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl>:

			long  InitialYPositionEcef() const {return initialYPositionEcef;}
			void InitialYPositionEcef( long val ) { initialYPositionEcef = val;}
    2ae4:	cf 93       	push	r28
    2ae6:	df 93       	push	r29
    2ae8:	00 d0       	rcall	.+0      	; 0x2aea <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl+0x6>
    2aea:	00 d0       	rcall	.+0      	; 0x2aec <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl+0x8>
    2aec:	cd b7       	in	r28, 0x3d	; 61
    2aee:	de b7       	in	r29, 0x3e	; 62
    2af0:	9a 83       	std	Y+2, r25	; 0x02
    2af2:	89 83       	std	Y+1, r24	; 0x01
    2af4:	4b 83       	std	Y+3, r20	; 0x03
    2af6:	5c 83       	std	Y+4, r21	; 0x04
    2af8:	6d 83       	std	Y+5, r22	; 0x05
    2afa:	7e 83       	std	Y+6, r23	; 0x06
    2afc:	6b 81       	ldd	r22, Y+3	; 0x03
    2afe:	7c 81       	ldd	r23, Y+4	; 0x04
    2b00:	8d 81       	ldd	r24, Y+5	; 0x05
    2b02:	9e 81       	ldd	r25, Y+6	; 0x06
    2b04:	0e 94 1a 3f 	call	0x7e34	; 0x7e34 <__floatsisf>
    2b08:	dc 01       	movw	r26, r24
    2b0a:	cb 01       	movw	r24, r22
    2b0c:	29 81       	ldd	r18, Y+1	; 0x01
    2b0e:	3a 81       	ldd	r19, Y+2	; 0x02
    2b10:	20 54       	subi	r18, 0x40	; 64
    2b12:	3f 4f       	sbci	r19, 0xFF	; 255
    2b14:	f9 01       	movw	r30, r18
    2b16:	80 83       	st	Z, r24
    2b18:	91 83       	std	Z+1, r25	; 0x01
    2b1a:	a2 83       	std	Z+2, r26	; 0x02
    2b1c:	b3 83       	std	Z+3, r27	; 0x03
    2b1e:	26 96       	adiw	r28, 0x06	; 6
    2b20:	0f b6       	in	r0, 0x3f	; 63
    2b22:	f8 94       	cli
    2b24:	de bf       	out	0x3e, r29	; 62
    2b26:	0f be       	out	0x3f, r0	; 63
    2b28:	cd bf       	out	0x3d, r28	; 61
    2b2a:	df 91       	pop	r29
    2b2c:	cf 91       	pop	r28
    2b2e:	08 95       	ret

00002b30 <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl>:

			long  InitialZPositionEcef() const {return initialZPositionEcef;}
			void InitialZPositionEcef( long val ) { initialZPositionEcef = val;}							
    2b30:	cf 93       	push	r28
    2b32:	df 93       	push	r29
    2b34:	00 d0       	rcall	.+0      	; 0x2b36 <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl+0x6>
    2b36:	00 d0       	rcall	.+0      	; 0x2b38 <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl+0x8>
    2b38:	cd b7       	in	r28, 0x3d	; 61
    2b3a:	de b7       	in	r29, 0x3e	; 62
    2b3c:	9a 83       	std	Y+2, r25	; 0x02
    2b3e:	89 83       	std	Y+1, r24	; 0x01
    2b40:	4b 83       	std	Y+3, r20	; 0x03
    2b42:	5c 83       	std	Y+4, r21	; 0x04
    2b44:	6d 83       	std	Y+5, r22	; 0x05
    2b46:	7e 83       	std	Y+6, r23	; 0x06
    2b48:	6b 81       	ldd	r22, Y+3	; 0x03
    2b4a:	7c 81       	ldd	r23, Y+4	; 0x04
    2b4c:	8d 81       	ldd	r24, Y+5	; 0x05
    2b4e:	9e 81       	ldd	r25, Y+6	; 0x06
    2b50:	0e 94 1a 3f 	call	0x7e34	; 0x7e34 <__floatsisf>
    2b54:	dc 01       	movw	r26, r24
    2b56:	cb 01       	movw	r24, r22
    2b58:	29 81       	ldd	r18, Y+1	; 0x01
    2b5a:	3a 81       	ldd	r19, Y+2	; 0x02
    2b5c:	2c 53       	subi	r18, 0x3C	; 60
    2b5e:	3f 4f       	sbci	r19, 0xFF	; 255
    2b60:	f9 01       	movw	r30, r18
    2b62:	80 83       	st	Z, r24
    2b64:	91 83       	std	Z+1, r25	; 0x01
    2b66:	a2 83       	std	Z+2, r26	; 0x02
    2b68:	b3 83       	std	Z+3, r27	; 0x03
    2b6a:	26 96       	adiw	r28, 0x06	; 6
    2b6c:	0f b6       	in	r0, 0x3f	; 63
    2b6e:	f8 94       	cli
    2b70:	de bf       	out	0x3e, r29	; 62
    2b72:	0f be       	out	0x3f, r0	; 63
    2b74:	cd bf       	out	0x3d, r28	; 61
    2b76:	df 91       	pop	r29
    2b78:	cf 91       	pop	r28
    2b7a:	08 95       	ret

00002b7c <_ZN10helicopter7drivers11ServoDriverC1Ev>:
				double minControlValue;
				double maxControlValue;
					
				
			public:
				ServoDriver(): 
    2b7c:	cf 93       	push	r28
    2b7e:	df 93       	push	r29
    2b80:	1f 92       	push	r1
    2b82:	1f 92       	push	r1
    2b84:	cd b7       	in	r28, 0x3d	; 61
    2b86:	de b7       	in	r29, 0x3e	; 62
    2b88:	9a 83       	std	Y+2, r25	; 0x02
    2b8a:	89 83       	std	Y+1, r24	; 0x01
					minControlValue(0), 
					maxControlValue(0)
    2b8c:	89 81       	ldd	r24, Y+1	; 0x01
    2b8e:	9a 81       	ldd	r25, Y+2	; 0x02
    2b90:	28 e1       	ldi	r18, 0x18	; 24
    2b92:	32 e0       	ldi	r19, 0x02	; 2
    2b94:	fc 01       	movw	r30, r24
    2b96:	31 83       	std	Z+1, r19	; 0x01
    2b98:	20 83       	st	Z, r18
    2b9a:	89 81       	ldd	r24, Y+1	; 0x01
    2b9c:	9a 81       	ldd	r25, Y+2	; 0x02
    2b9e:	fc 01       	movw	r30, r24
    2ba0:	12 82       	std	Z+2, r1	; 0x02
    2ba2:	13 82       	std	Z+3, r1	; 0x03
    2ba4:	14 82       	std	Z+4, r1	; 0x04
    2ba6:	15 82       	std	Z+5, r1	; 0x05
    2ba8:	89 81       	ldd	r24, Y+1	; 0x01
    2baa:	9a 81       	ldd	r25, Y+2	; 0x02
    2bac:	fc 01       	movw	r30, r24
    2bae:	16 82       	std	Z+6, r1	; 0x06
    2bb0:	17 82       	std	Z+7, r1	; 0x07
    2bb2:	10 86       	std	Z+8, r1	; 0x08
    2bb4:	11 86       	std	Z+9, r1	; 0x09
				{
					
				}
    2bb6:	0f 90       	pop	r0
    2bb8:	0f 90       	pop	r0
    2bba:	df 91       	pop	r29
    2bbc:	cf 91       	pop	r28
    2bbe:	08 95       	ret

00002bc0 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf>:
			public:
				PIDController (SystemModel *model, ServoDriver *servoDriver);
					
				~PIDController();
				
				void setXIntegralGain(float val)
    2bc0:	cf 93       	push	r28
    2bc2:	df 93       	push	r29
    2bc4:	00 d0       	rcall	.+0      	; 0x2bc6 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf+0x6>
    2bc6:	00 d0       	rcall	.+0      	; 0x2bc8 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf+0x8>
    2bc8:	cd b7       	in	r28, 0x3d	; 61
    2bca:	de b7       	in	r29, 0x3e	; 62
    2bcc:	9a 83       	std	Y+2, r25	; 0x02
    2bce:	89 83       	std	Y+1, r24	; 0x01
    2bd0:	4b 83       	std	Y+3, r20	; 0x03
    2bd2:	5c 83       	std	Y+4, r21	; 0x04
    2bd4:	6d 83       	std	Y+5, r22	; 0x05
    2bd6:	7e 83       	std	Y+6, r23	; 0x06
				{
					xIntegralGain = val;
    2bd8:	29 81       	ldd	r18, Y+1	; 0x01
    2bda:	3a 81       	ldd	r19, Y+2	; 0x02
    2bdc:	8b 81       	ldd	r24, Y+3	; 0x03
    2bde:	9c 81       	ldd	r25, Y+4	; 0x04
    2be0:	ad 81       	ldd	r26, Y+5	; 0x05
    2be2:	be 81       	ldd	r27, Y+6	; 0x06
    2be4:	f9 01       	movw	r30, r18
    2be6:	84 8b       	std	Z+20, r24	; 0x14
    2be8:	95 8b       	std	Z+21, r25	; 0x15
    2bea:	a6 8b       	std	Z+22, r26	; 0x16
    2bec:	b7 8b       	std	Z+23, r27	; 0x17
				}
    2bee:	26 96       	adiw	r28, 0x06	; 6
    2bf0:	0f b6       	in	r0, 0x3f	; 63
    2bf2:	f8 94       	cli
    2bf4:	de bf       	out	0x3e, r29	; 62
    2bf6:	0f be       	out	0x3f, r0	; 63
    2bf8:	cd bf       	out	0x3d, r28	; 61
    2bfa:	df 91       	pop	r29
    2bfc:	cf 91       	pop	r28
    2bfe:	08 95       	ret

00002c00 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf>:
				
				void setXDerivativeGain(float val)
    2c00:	cf 93       	push	r28
    2c02:	df 93       	push	r29
    2c04:	00 d0       	rcall	.+0      	; 0x2c06 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf+0x6>
    2c06:	00 d0       	rcall	.+0      	; 0x2c08 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf+0x8>
    2c08:	cd b7       	in	r28, 0x3d	; 61
    2c0a:	de b7       	in	r29, 0x3e	; 62
    2c0c:	9a 83       	std	Y+2, r25	; 0x02
    2c0e:	89 83       	std	Y+1, r24	; 0x01
    2c10:	4b 83       	std	Y+3, r20	; 0x03
    2c12:	5c 83       	std	Y+4, r21	; 0x04
    2c14:	6d 83       	std	Y+5, r22	; 0x05
    2c16:	7e 83       	std	Y+6, r23	; 0x06
				{
					xDerivativeGain = val;
    2c18:	29 81       	ldd	r18, Y+1	; 0x01
    2c1a:	3a 81       	ldd	r19, Y+2	; 0x02
    2c1c:	8b 81       	ldd	r24, Y+3	; 0x03
    2c1e:	9c 81       	ldd	r25, Y+4	; 0x04
    2c20:	ad 81       	ldd	r26, Y+5	; 0x05
    2c22:	be 81       	ldd	r27, Y+6	; 0x06
    2c24:	f9 01       	movw	r30, r18
    2c26:	80 8f       	std	Z+24, r24	; 0x18
    2c28:	91 8f       	std	Z+25, r25	; 0x19
    2c2a:	a2 8f       	std	Z+26, r26	; 0x1a
    2c2c:	b3 8f       	std	Z+27, r27	; 0x1b
				}
    2c2e:	26 96       	adiw	r28, 0x06	; 6
    2c30:	0f b6       	in	r0, 0x3f	; 63
    2c32:	f8 94       	cli
    2c34:	de bf       	out	0x3e, r29	; 62
    2c36:	0f be       	out	0x3f, r0	; 63
    2c38:	cd bf       	out	0x3d, r28	; 61
    2c3a:	df 91       	pop	r29
    2c3c:	cf 91       	pop	r28
    2c3e:	08 95       	ret

00002c40 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf>:
				
				void setXProportionalGain(float val)
    2c40:	cf 93       	push	r28
    2c42:	df 93       	push	r29
    2c44:	00 d0       	rcall	.+0      	; 0x2c46 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf+0x6>
    2c46:	00 d0       	rcall	.+0      	; 0x2c48 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf+0x8>
    2c48:	cd b7       	in	r28, 0x3d	; 61
    2c4a:	de b7       	in	r29, 0x3e	; 62
    2c4c:	9a 83       	std	Y+2, r25	; 0x02
    2c4e:	89 83       	std	Y+1, r24	; 0x01
    2c50:	4b 83       	std	Y+3, r20	; 0x03
    2c52:	5c 83       	std	Y+4, r21	; 0x04
    2c54:	6d 83       	std	Y+5, r22	; 0x05
    2c56:	7e 83       	std	Y+6, r23	; 0x06
				{
					xProportionalGain = val;
    2c58:	29 81       	ldd	r18, Y+1	; 0x01
    2c5a:	3a 81       	ldd	r19, Y+2	; 0x02
    2c5c:	8b 81       	ldd	r24, Y+3	; 0x03
    2c5e:	9c 81       	ldd	r25, Y+4	; 0x04
    2c60:	ad 81       	ldd	r26, Y+5	; 0x05
    2c62:	be 81       	ldd	r27, Y+6	; 0x06
    2c64:	f9 01       	movw	r30, r18
    2c66:	84 8f       	std	Z+28, r24	; 0x1c
    2c68:	95 8f       	std	Z+29, r25	; 0x1d
    2c6a:	a6 8f       	std	Z+30, r26	; 0x1e
    2c6c:	b7 8f       	std	Z+31, r27	; 0x1f
				}
    2c6e:	26 96       	adiw	r28, 0x06	; 6
    2c70:	0f b6       	in	r0, 0x3f	; 63
    2c72:	f8 94       	cli
    2c74:	de bf       	out	0x3e, r29	; 62
    2c76:	0f be       	out	0x3f, r0	; 63
    2c78:	cd bf       	out	0x3d, r28	; 61
    2c7a:	df 91       	pop	r29
    2c7c:	cf 91       	pop	r28
    2c7e:	08 95       	ret

00002c80 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf>:
				
				void setXAntiWindupGain(float val)
    2c80:	cf 93       	push	r28
    2c82:	df 93       	push	r29
    2c84:	00 d0       	rcall	.+0      	; 0x2c86 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf+0x6>
    2c86:	00 d0       	rcall	.+0      	; 0x2c88 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf+0x8>
    2c88:	cd b7       	in	r28, 0x3d	; 61
    2c8a:	de b7       	in	r29, 0x3e	; 62
    2c8c:	9a 83       	std	Y+2, r25	; 0x02
    2c8e:	89 83       	std	Y+1, r24	; 0x01
    2c90:	4b 83       	std	Y+3, r20	; 0x03
    2c92:	5c 83       	std	Y+4, r21	; 0x04
    2c94:	6d 83       	std	Y+5, r22	; 0x05
    2c96:	7e 83       	std	Y+6, r23	; 0x06
				{
					xAntiWindupGain = val;
    2c98:	29 81       	ldd	r18, Y+1	; 0x01
    2c9a:	3a 81       	ldd	r19, Y+2	; 0x02
    2c9c:	8b 81       	ldd	r24, Y+3	; 0x03
    2c9e:	9c 81       	ldd	r25, Y+4	; 0x04
    2ca0:	ad 81       	ldd	r26, Y+5	; 0x05
    2ca2:	be 81       	ldd	r27, Y+6	; 0x06
    2ca4:	f9 01       	movw	r30, r18
    2ca6:	80 a3       	std	Z+32, r24	; 0x20
    2ca8:	91 a3       	std	Z+33, r25	; 0x21
    2caa:	a2 a3       	std	Z+34, r26	; 0x22
    2cac:	b3 a3       	std	Z+35, r27	; 0x23
				}
    2cae:	26 96       	adiw	r28, 0x06	; 6
    2cb0:	0f b6       	in	r0, 0x3f	; 63
    2cb2:	f8 94       	cli
    2cb4:	de bf       	out	0x3e, r29	; 62
    2cb6:	0f be       	out	0x3f, r0	; 63
    2cb8:	cd bf       	out	0x3d, r28	; 61
    2cba:	df 91       	pop	r29
    2cbc:	cf 91       	pop	r28
    2cbe:	08 95       	ret

00002cc0 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf>:
				
				void setLongitudeInnerLoopGain(float val)
    2cc0:	cf 93       	push	r28
    2cc2:	df 93       	push	r29
    2cc4:	00 d0       	rcall	.+0      	; 0x2cc6 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf+0x6>
    2cc6:	00 d0       	rcall	.+0      	; 0x2cc8 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf+0x8>
    2cc8:	cd b7       	in	r28, 0x3d	; 61
    2cca:	de b7       	in	r29, 0x3e	; 62
    2ccc:	9a 83       	std	Y+2, r25	; 0x02
    2cce:	89 83       	std	Y+1, r24	; 0x01
    2cd0:	4b 83       	std	Y+3, r20	; 0x03
    2cd2:	5c 83       	std	Y+4, r21	; 0x04
    2cd4:	6d 83       	std	Y+5, r22	; 0x05
    2cd6:	7e 83       	std	Y+6, r23	; 0x06
				{
					longitudeInnerLoopGain = val;
    2cd8:	29 81       	ldd	r18, Y+1	; 0x01
    2cda:	3a 81       	ldd	r19, Y+2	; 0x02
    2cdc:	8b 81       	ldd	r24, Y+3	; 0x03
    2cde:	9c 81       	ldd	r25, Y+4	; 0x04
    2ce0:	ad 81       	ldd	r26, Y+5	; 0x05
    2ce2:	be 81       	ldd	r27, Y+6	; 0x06
    2ce4:	f9 01       	movw	r30, r18
    2ce6:	84 a3       	std	Z+36, r24	; 0x24
    2ce8:	95 a3       	std	Z+37, r25	; 0x25
    2cea:	a6 a3       	std	Z+38, r26	; 0x26
    2cec:	b7 a3       	std	Z+39, r27	; 0x27
				}
    2cee:	26 96       	adiw	r28, 0x06	; 6
    2cf0:	0f b6       	in	r0, 0x3f	; 63
    2cf2:	f8 94       	cli
    2cf4:	de bf       	out	0x3e, r29	; 62
    2cf6:	0f be       	out	0x3f, r0	; 63
    2cf8:	cd bf       	out	0x3d, r28	; 61
    2cfa:	df 91       	pop	r29
    2cfc:	cf 91       	pop	r28
    2cfe:	08 95       	ret

00002d00 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf>:
				
				void setMinLongitudeServoControlValue(float val)
    2d00:	cf 93       	push	r28
    2d02:	df 93       	push	r29
    2d04:	00 d0       	rcall	.+0      	; 0x2d06 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf+0x6>
    2d06:	00 d0       	rcall	.+0      	; 0x2d08 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf+0x8>
    2d08:	cd b7       	in	r28, 0x3d	; 61
    2d0a:	de b7       	in	r29, 0x3e	; 62
    2d0c:	9a 83       	std	Y+2, r25	; 0x02
    2d0e:	89 83       	std	Y+1, r24	; 0x01
    2d10:	4b 83       	std	Y+3, r20	; 0x03
    2d12:	5c 83       	std	Y+4, r21	; 0x04
    2d14:	6d 83       	std	Y+5, r22	; 0x05
    2d16:	7e 83       	std	Y+6, r23	; 0x06
				{
					minLongitudeServoControlValue = val;
    2d18:	89 81       	ldd	r24, Y+1	; 0x01
    2d1a:	9a 81       	ldd	r25, Y+2	; 0x02
    2d1c:	9c 01       	movw	r18, r24
    2d1e:	2c 5a       	subi	r18, 0xAC	; 172
    2d20:	3f 4f       	sbci	r19, 0xFF	; 255
    2d22:	8b 81       	ldd	r24, Y+3	; 0x03
    2d24:	9c 81       	ldd	r25, Y+4	; 0x04
    2d26:	ad 81       	ldd	r26, Y+5	; 0x05
    2d28:	be 81       	ldd	r27, Y+6	; 0x06
    2d2a:	f9 01       	movw	r30, r18
    2d2c:	80 83       	st	Z, r24
    2d2e:	91 83       	std	Z+1, r25	; 0x01
    2d30:	a2 83       	std	Z+2, r26	; 0x02
    2d32:	b3 83       	std	Z+3, r27	; 0x03
				}
    2d34:	26 96       	adiw	r28, 0x06	; 6
    2d36:	0f b6       	in	r0, 0x3f	; 63
    2d38:	f8 94       	cli
    2d3a:	de bf       	out	0x3e, r29	; 62
    2d3c:	0f be       	out	0x3f, r0	; 63
    2d3e:	cd bf       	out	0x3d, r28	; 61
    2d40:	df 91       	pop	r29
    2d42:	cf 91       	pop	r28
    2d44:	08 95       	ret

00002d46 <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf>:
				
				void setMaxLongitudeServoControlValue(float val)
    2d46:	cf 93       	push	r28
    2d48:	df 93       	push	r29
    2d4a:	00 d0       	rcall	.+0      	; 0x2d4c <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf+0x6>
    2d4c:	00 d0       	rcall	.+0      	; 0x2d4e <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf+0x8>
    2d4e:	cd b7       	in	r28, 0x3d	; 61
    2d50:	de b7       	in	r29, 0x3e	; 62
    2d52:	9a 83       	std	Y+2, r25	; 0x02
    2d54:	89 83       	std	Y+1, r24	; 0x01
    2d56:	4b 83       	std	Y+3, r20	; 0x03
    2d58:	5c 83       	std	Y+4, r21	; 0x04
    2d5a:	6d 83       	std	Y+5, r22	; 0x05
    2d5c:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxLongitudeServoControlValue = val;
    2d5e:	89 81       	ldd	r24, Y+1	; 0x01
    2d60:	9a 81       	ldd	r25, Y+2	; 0x02
    2d62:	9c 01       	movw	r18, r24
    2d64:	28 5a       	subi	r18, 0xA8	; 168
    2d66:	3f 4f       	sbci	r19, 0xFF	; 255
    2d68:	8b 81       	ldd	r24, Y+3	; 0x03
    2d6a:	9c 81       	ldd	r25, Y+4	; 0x04
    2d6c:	ad 81       	ldd	r26, Y+5	; 0x05
    2d6e:	be 81       	ldd	r27, Y+6	; 0x06
    2d70:	f9 01       	movw	r30, r18
    2d72:	80 83       	st	Z, r24
    2d74:	91 83       	std	Z+1, r25	; 0x01
    2d76:	a2 83       	std	Z+2, r26	; 0x02
    2d78:	b3 83       	std	Z+3, r27	; 0x03
				}
    2d7a:	26 96       	adiw	r28, 0x06	; 6
    2d7c:	0f b6       	in	r0, 0x3f	; 63
    2d7e:	f8 94       	cli
    2d80:	de bf       	out	0x3e, r29	; 62
    2d82:	0f be       	out	0x3f, r0	; 63
    2d84:	cd bf       	out	0x3d, r28	; 61
    2d86:	df 91       	pop	r29
    2d88:	cf 91       	pop	r28
    2d8a:	08 95       	ret

00002d8c <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf>:
				
				
				/**
				 * Gain value applied to the yaw proportional error
				 */
				void setYawProportionalGain(float yawProportionalGain)
    2d8c:	cf 93       	push	r28
    2d8e:	df 93       	push	r29
    2d90:	00 d0       	rcall	.+0      	; 0x2d92 <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf+0x6>
    2d92:	00 d0       	rcall	.+0      	; 0x2d94 <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf+0x8>
    2d94:	cd b7       	in	r28, 0x3d	; 61
    2d96:	de b7       	in	r29, 0x3e	; 62
    2d98:	9a 83       	std	Y+2, r25	; 0x02
    2d9a:	89 83       	std	Y+1, r24	; 0x01
    2d9c:	4b 83       	std	Y+3, r20	; 0x03
    2d9e:	5c 83       	std	Y+4, r21	; 0x04
    2da0:	6d 83       	std	Y+5, r22	; 0x05
    2da2:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawProportionalGain = yawProportionalGain;
    2da4:	29 81       	ldd	r18, Y+1	; 0x01
    2da6:	3a 81       	ldd	r19, Y+2	; 0x02
    2da8:	8b 81       	ldd	r24, Y+3	; 0x03
    2daa:	9c 81       	ldd	r25, Y+4	; 0x04
    2dac:	ad 81       	ldd	r26, Y+5	; 0x05
    2dae:	be 81       	ldd	r27, Y+6	; 0x06
    2db0:	f9 01       	movw	r30, r18
    2db2:	84 87       	std	Z+12, r24	; 0x0c
    2db4:	95 87       	std	Z+13, r25	; 0x0d
    2db6:	a6 87       	std	Z+14, r26	; 0x0e
    2db8:	b7 87       	std	Z+15, r27	; 0x0f
				}
    2dba:	26 96       	adiw	r28, 0x06	; 6
    2dbc:	0f b6       	in	r0, 0x3f	; 63
    2dbe:	f8 94       	cli
    2dc0:	de bf       	out	0x3e, r29	; 62
    2dc2:	0f be       	out	0x3f, r0	; 63
    2dc4:	cd bf       	out	0x3d, r28	; 61
    2dc6:	df 91       	pop	r29
    2dc8:	cf 91       	pop	r28
    2dca:	08 95       	ret

00002dcc <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf>:
				
				/**
				 * Gain value applied to the yaw integral
				 */
				void setYawIntegralGain(float yawIntegralGain)
    2dcc:	cf 93       	push	r28
    2dce:	df 93       	push	r29
    2dd0:	00 d0       	rcall	.+0      	; 0x2dd2 <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf+0x6>
    2dd2:	00 d0       	rcall	.+0      	; 0x2dd4 <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf+0x8>
    2dd4:	cd b7       	in	r28, 0x3d	; 61
    2dd6:	de b7       	in	r29, 0x3e	; 62
    2dd8:	9a 83       	std	Y+2, r25	; 0x02
    2dda:	89 83       	std	Y+1, r24	; 0x01
    2ddc:	4b 83       	std	Y+3, r20	; 0x03
    2dde:	5c 83       	std	Y+4, r21	; 0x04
    2de0:	6d 83       	std	Y+5, r22	; 0x05
    2de2:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawIntegralGain = yawIntegralGain;
    2de4:	29 81       	ldd	r18, Y+1	; 0x01
    2de6:	3a 81       	ldd	r19, Y+2	; 0x02
    2de8:	8b 81       	ldd	r24, Y+3	; 0x03
    2dea:	9c 81       	ldd	r25, Y+4	; 0x04
    2dec:	ad 81       	ldd	r26, Y+5	; 0x05
    2dee:	be 81       	ldd	r27, Y+6	; 0x06
    2df0:	f9 01       	movw	r30, r18
    2df2:	84 83       	std	Z+4, r24	; 0x04
    2df4:	95 83       	std	Z+5, r25	; 0x05
    2df6:	a6 83       	std	Z+6, r26	; 0x06
    2df8:	b7 83       	std	Z+7, r27	; 0x07
				}
    2dfa:	26 96       	adiw	r28, 0x06	; 6
    2dfc:	0f b6       	in	r0, 0x3f	; 63
    2dfe:	f8 94       	cli
    2e00:	de bf       	out	0x3e, r29	; 62
    2e02:	0f be       	out	0x3f, r0	; 63
    2e04:	cd bf       	out	0x3d, r28	; 61
    2e06:	df 91       	pop	r29
    2e08:	cf 91       	pop	r28
    2e0a:	08 95       	ret

00002e0c <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf>:
				
				/**
				 * Gain value applied to the derivative
				 */
				void setYawDerivativeGain(float yawDerivativeGain)
    2e0c:	cf 93       	push	r28
    2e0e:	df 93       	push	r29
    2e10:	00 d0       	rcall	.+0      	; 0x2e12 <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf+0x6>
    2e12:	00 d0       	rcall	.+0      	; 0x2e14 <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf+0x8>
    2e14:	cd b7       	in	r28, 0x3d	; 61
    2e16:	de b7       	in	r29, 0x3e	; 62
    2e18:	9a 83       	std	Y+2, r25	; 0x02
    2e1a:	89 83       	std	Y+1, r24	; 0x01
    2e1c:	4b 83       	std	Y+3, r20	; 0x03
    2e1e:	5c 83       	std	Y+4, r21	; 0x04
    2e20:	6d 83       	std	Y+5, r22	; 0x05
    2e22:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawDerivativeGain = yawDerivativeGain;
    2e24:	29 81       	ldd	r18, Y+1	; 0x01
    2e26:	3a 81       	ldd	r19, Y+2	; 0x02
    2e28:	8b 81       	ldd	r24, Y+3	; 0x03
    2e2a:	9c 81       	ldd	r25, Y+4	; 0x04
    2e2c:	ad 81       	ldd	r26, Y+5	; 0x05
    2e2e:	be 81       	ldd	r27, Y+6	; 0x06
    2e30:	f9 01       	movw	r30, r18
    2e32:	80 87       	std	Z+8, r24	; 0x08
    2e34:	91 87       	std	Z+9, r25	; 0x09
    2e36:	a2 87       	std	Z+10, r26	; 0x0a
    2e38:	b3 87       	std	Z+11, r27	; 0x0b
				}
    2e3a:	26 96       	adiw	r28, 0x06	; 6
    2e3c:	0f b6       	in	r0, 0x3f	; 63
    2e3e:	f8 94       	cli
    2e40:	de bf       	out	0x3e, r29	; 62
    2e42:	0f be       	out	0x3f, r0	; 63
    2e44:	cd bf       	out	0x3d, r28	; 61
    2e46:	df 91       	pop	r29
    2e48:	cf 91       	pop	r28
    2e4a:	08 95       	ret

00002e4c <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf>:
				
				/**
				 * The number of seconds between pid controller updates. This number
				 * should generally be less than 1. Like .05 for a 20 hz rate.
				 */
				void setIntervalPeriodSecs(float intervalPeriodSecs)
    2e4c:	cf 93       	push	r28
    2e4e:	df 93       	push	r29
    2e50:	00 d0       	rcall	.+0      	; 0x2e52 <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf+0x6>
    2e52:	00 d0       	rcall	.+0      	; 0x2e54 <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf+0x8>
    2e54:	cd b7       	in	r28, 0x3d	; 61
    2e56:	de b7       	in	r29, 0x3e	; 62
    2e58:	9a 83       	std	Y+2, r25	; 0x02
    2e5a:	89 83       	std	Y+1, r24	; 0x01
    2e5c:	4b 83       	std	Y+3, r20	; 0x03
    2e5e:	5c 83       	std	Y+4, r21	; 0x04
    2e60:	6d 83       	std	Y+5, r22	; 0x05
    2e62:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->intervalPeriodSecs = intervalPeriodSecs;
    2e64:	89 81       	ldd	r24, Y+1	; 0x01
    2e66:	9a 81       	ldd	r25, Y+2	; 0x02
    2e68:	9c 01       	movw	r18, r24
    2e6a:	24 59       	subi	r18, 0x94	; 148
    2e6c:	3f 4f       	sbci	r19, 0xFF	; 255
    2e6e:	8b 81       	ldd	r24, Y+3	; 0x03
    2e70:	9c 81       	ldd	r25, Y+4	; 0x04
    2e72:	ad 81       	ldd	r26, Y+5	; 0x05
    2e74:	be 81       	ldd	r27, Y+6	; 0x06
    2e76:	f9 01       	movw	r30, r18
    2e78:	80 83       	st	Z, r24
    2e7a:	91 83       	std	Z+1, r25	; 0x01
    2e7c:	a2 83       	std	Z+2, r26	; 0x02
    2e7e:	b3 83       	std	Z+3, r27	; 0x03
				}
    2e80:	26 96       	adiw	r28, 0x06	; 6
    2e82:	0f b6       	in	r0, 0x3f	; 63
    2e84:	f8 94       	cli
    2e86:	de bf       	out	0x3e, r29	; 62
    2e88:	0f be       	out	0x3f, r0	; 63
    2e8a:	cd bf       	out	0x3d, r28	; 61
    2e8c:	df 91       	pop	r29
    2e8e:	cf 91       	pop	r28
    2e90:	08 95       	ret

00002e92 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf>:
				 * keeps increasing despite the helicopter already at the maximum possible control values.
				 * @param yawAntiWindupGain The gain value which represents how fast the integral will
				 * go back to 0 when the servos are saturated.
				 * Some simple rule that have been suggested for the tracking time are ~ Tt = TiTd and Tt = (Ti + Td)/2.
				 */
				void setYawAntiWindupGain(float yawAntiWindupGain)
    2e92:	cf 93       	push	r28
    2e94:	df 93       	push	r29
    2e96:	00 d0       	rcall	.+0      	; 0x2e98 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf+0x6>
    2e98:	00 d0       	rcall	.+0      	; 0x2e9a <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf+0x8>
    2e9a:	cd b7       	in	r28, 0x3d	; 61
    2e9c:	de b7       	in	r29, 0x3e	; 62
    2e9e:	9a 83       	std	Y+2, r25	; 0x02
    2ea0:	89 83       	std	Y+1, r24	; 0x01
    2ea2:	4b 83       	std	Y+3, r20	; 0x03
    2ea4:	5c 83       	std	Y+4, r21	; 0x04
    2ea6:	6d 83       	std	Y+5, r22	; 0x05
    2ea8:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawAntiWindupGain = yawAntiWindupGain;
    2eaa:	29 81       	ldd	r18, Y+1	; 0x01
    2eac:	3a 81       	ldd	r19, Y+2	; 0x02
    2eae:	8b 81       	ldd	r24, Y+3	; 0x03
    2eb0:	9c 81       	ldd	r25, Y+4	; 0x04
    2eb2:	ad 81       	ldd	r26, Y+5	; 0x05
    2eb4:	be 81       	ldd	r27, Y+6	; 0x06
    2eb6:	f9 01       	movw	r30, r18
    2eb8:	80 8b       	std	Z+16, r24	; 0x10
    2eba:	91 8b       	std	Z+17, r25	; 0x11
    2ebc:	a2 8b       	std	Z+18, r26	; 0x12
    2ebe:	b3 8b       	std	Z+19, r27	; 0x13
				}
    2ec0:	26 96       	adiw	r28, 0x06	; 6
    2ec2:	0f b6       	in	r0, 0x3f	; 63
    2ec4:	f8 94       	cli
    2ec6:	de bf       	out	0x3e, r29	; 62
    2ec8:	0f be       	out	0x3f, r0	; 63
    2eca:	cd bf       	out	0x3d, r28	; 61
    2ecc:	df 91       	pop	r29
    2ece:	cf 91       	pop	r28
    2ed0:	08 95       	ret

00002ed2 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf>:
				/**
				 * The minimum control value that the yaw actuators can be set too. This is used for 
				 * integral anti-windup to determine when the actuators would be saturated.
				 * The value should be no smaller than the controlMinValue (e.g. no less than -1)
				 */
				void setMinYawServoControl(float minYawServoControlValue)
    2ed2:	cf 93       	push	r28
    2ed4:	df 93       	push	r29
    2ed6:	00 d0       	rcall	.+0      	; 0x2ed8 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf+0x6>
    2ed8:	00 d0       	rcall	.+0      	; 0x2eda <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf+0x8>
    2eda:	cd b7       	in	r28, 0x3d	; 61
    2edc:	de b7       	in	r29, 0x3e	; 62
    2ede:	9a 83       	std	Y+2, r25	; 0x02
    2ee0:	89 83       	std	Y+1, r24	; 0x01
    2ee2:	4b 83       	std	Y+3, r20	; 0x03
    2ee4:	5c 83       	std	Y+4, r21	; 0x04
    2ee6:	6d 83       	std	Y+5, r22	; 0x05
    2ee8:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->minYawServoControlValue = minYawServoControlValue;
    2eea:	89 81       	ldd	r24, Y+1	; 0x01
    2eec:	9a 81       	ldd	r25, Y+2	; 0x02
    2eee:	9c 01       	movw	r18, r24
    2ef0:	24 5b       	subi	r18, 0xB4	; 180
    2ef2:	3f 4f       	sbci	r19, 0xFF	; 255
    2ef4:	8b 81       	ldd	r24, Y+3	; 0x03
    2ef6:	9c 81       	ldd	r25, Y+4	; 0x04
    2ef8:	ad 81       	ldd	r26, Y+5	; 0x05
    2efa:	be 81       	ldd	r27, Y+6	; 0x06
    2efc:	f9 01       	movw	r30, r18
    2efe:	80 83       	st	Z, r24
    2f00:	91 83       	std	Z+1, r25	; 0x01
    2f02:	a2 83       	std	Z+2, r26	; 0x02
    2f04:	b3 83       	std	Z+3, r27	; 0x03
				}
    2f06:	26 96       	adiw	r28, 0x06	; 6
    2f08:	0f b6       	in	r0, 0x3f	; 63
    2f0a:	f8 94       	cli
    2f0c:	de bf       	out	0x3e, r29	; 62
    2f0e:	0f be       	out	0x3f, r0	; 63
    2f10:	cd bf       	out	0x3d, r28	; 61
    2f12:	df 91       	pop	r29
    2f14:	cf 91       	pop	r28
    2f16:	08 95       	ret

00002f18 <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf>:
				/**
				 * The maximum control value that the yaw actuators can be set too. This is used for 
				 * integral anti-windup to determine when the actuators would be saturated.
				 * The value should be no larger than the controlMaxValue (e.g. no greater than 1)
				 */
				void setMaxYawServoControl(float maxYawServoControlValue)
    2f18:	cf 93       	push	r28
    2f1a:	df 93       	push	r29
    2f1c:	00 d0       	rcall	.+0      	; 0x2f1e <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf+0x6>
    2f1e:	00 d0       	rcall	.+0      	; 0x2f20 <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf+0x8>
    2f20:	cd b7       	in	r28, 0x3d	; 61
    2f22:	de b7       	in	r29, 0x3e	; 62
    2f24:	9a 83       	std	Y+2, r25	; 0x02
    2f26:	89 83       	std	Y+1, r24	; 0x01
    2f28:	4b 83       	std	Y+3, r20	; 0x03
    2f2a:	5c 83       	std	Y+4, r21	; 0x04
    2f2c:	6d 83       	std	Y+5, r22	; 0x05
    2f2e:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->maxYawServoControlValue = maxYawServoControlValue;
    2f30:	89 81       	ldd	r24, Y+1	; 0x01
    2f32:	9a 81       	ldd	r25, Y+2	; 0x02
    2f34:	9c 01       	movw	r18, r24
    2f36:	20 5b       	subi	r18, 0xB0	; 176
    2f38:	3f 4f       	sbci	r19, 0xFF	; 255
    2f3a:	8b 81       	ldd	r24, Y+3	; 0x03
    2f3c:	9c 81       	ldd	r25, Y+4	; 0x04
    2f3e:	ad 81       	ldd	r26, Y+5	; 0x05
    2f40:	be 81       	ldd	r27, Y+6	; 0x06
    2f42:	f9 01       	movw	r30, r18
    2f44:	80 83       	st	Z, r24
    2f46:	91 83       	std	Z+1, r25	; 0x01
    2f48:	a2 83       	std	Z+2, r26	; 0x02
    2f4a:	b3 83       	std	Z+3, r27	; 0x03
				}
    2f4c:	26 96       	adiw	r28, 0x06	; 6
    2f4e:	0f b6       	in	r0, 0x3f	; 63
    2f50:	f8 94       	cli
    2f52:	de bf       	out	0x3e, r29	; 62
    2f54:	0f be       	out	0x3f, r0	; 63
    2f56:	cd bf       	out	0x3d, r28	; 61
    2f58:	df 91       	pop	r29
    2f5a:	cf 91       	pop	r28
    2f5c:	08 95       	ret

00002f5e <_ZN10helicopter10controller13PIDController18setControlMaxValueEf>:
				
				/**
				 * This is the maximum possible output value for a control signal.
				 * Generally, this should be set to 1.
				 */
				void setControlMaxValue(float controlMaxValue)
    2f5e:	cf 93       	push	r28
    2f60:	df 93       	push	r29
    2f62:	00 d0       	rcall	.+0      	; 0x2f64 <_ZN10helicopter10controller13PIDController18setControlMaxValueEf+0x6>
    2f64:	00 d0       	rcall	.+0      	; 0x2f66 <_ZN10helicopter10controller13PIDController18setControlMaxValueEf+0x8>
    2f66:	cd b7       	in	r28, 0x3d	; 61
    2f68:	de b7       	in	r29, 0x3e	; 62
    2f6a:	9a 83       	std	Y+2, r25	; 0x02
    2f6c:	89 83       	std	Y+1, r24	; 0x01
    2f6e:	4b 83       	std	Y+3, r20	; 0x03
    2f70:	5c 83       	std	Y+4, r21	; 0x04
    2f72:	6d 83       	std	Y+5, r22	; 0x05
    2f74:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->controlMaxValue = controlMaxValue;
    2f76:	89 81       	ldd	r24, Y+1	; 0x01
    2f78:	9a 81       	ldd	r25, Y+2	; 0x02
    2f7a:	9c 01       	movw	r18, r24
    2f7c:	20 59       	subi	r18, 0x90	; 144
    2f7e:	3f 4f       	sbci	r19, 0xFF	; 255
    2f80:	8b 81       	ldd	r24, Y+3	; 0x03
    2f82:	9c 81       	ldd	r25, Y+4	; 0x04
    2f84:	ad 81       	ldd	r26, Y+5	; 0x05
    2f86:	be 81       	ldd	r27, Y+6	; 0x06
    2f88:	f9 01       	movw	r30, r18
    2f8a:	80 83       	st	Z, r24
    2f8c:	91 83       	std	Z+1, r25	; 0x01
    2f8e:	a2 83       	std	Z+2, r26	; 0x02
    2f90:	b3 83       	std	Z+3, r27	; 0x03
				}
    2f92:	26 96       	adiw	r28, 0x06	; 6
    2f94:	0f b6       	in	r0, 0x3f	; 63
    2f96:	f8 94       	cli
    2f98:	de bf       	out	0x3e, r29	; 62
    2f9a:	0f be       	out	0x3f, r0	; 63
    2f9c:	cd bf       	out	0x3d, r28	; 61
    2f9e:	df 91       	pop	r29
    2fa0:	cf 91       	pop	r28
    2fa2:	08 95       	ret

00002fa4 <_ZN10helicopter10controller13PIDController18setControlMinValueEf>:
				
				/**
				 * This is the minimum possible value for a control signal.
				 * Generally, this should be set to -1.
				 */
				void setControlMinValue(float controlMinValue)
    2fa4:	cf 93       	push	r28
    2fa6:	df 93       	push	r29
    2fa8:	00 d0       	rcall	.+0      	; 0x2faa <_ZN10helicopter10controller13PIDController18setControlMinValueEf+0x6>
    2faa:	00 d0       	rcall	.+0      	; 0x2fac <_ZN10helicopter10controller13PIDController18setControlMinValueEf+0x8>
    2fac:	cd b7       	in	r28, 0x3d	; 61
    2fae:	de b7       	in	r29, 0x3e	; 62
    2fb0:	9a 83       	std	Y+2, r25	; 0x02
    2fb2:	89 83       	std	Y+1, r24	; 0x01
    2fb4:	4b 83       	std	Y+3, r20	; 0x03
    2fb6:	5c 83       	std	Y+4, r21	; 0x04
    2fb8:	6d 83       	std	Y+5, r22	; 0x05
    2fba:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->controlMinValue = controlMinValue;
    2fbc:	89 81       	ldd	r24, Y+1	; 0x01
    2fbe:	9a 81       	ldd	r25, Y+2	; 0x02
    2fc0:	9c 01       	movw	r18, r24
    2fc2:	2c 58       	subi	r18, 0x8C	; 140
    2fc4:	3f 4f       	sbci	r19, 0xFF	; 255
    2fc6:	8b 81       	ldd	r24, Y+3	; 0x03
    2fc8:	9c 81       	ldd	r25, Y+4	; 0x04
    2fca:	ad 81       	ldd	r26, Y+5	; 0x05
    2fcc:	be 81       	ldd	r27, Y+6	; 0x06
    2fce:	f9 01       	movw	r30, r18
    2fd0:	80 83       	st	Z, r24
    2fd2:	91 83       	std	Z+1, r25	; 0x01
    2fd4:	a2 83       	std	Z+2, r26	; 0x02
    2fd6:	b3 83       	std	Z+3, r27	; 0x03
				}			
    2fd8:	26 96       	adiw	r28, 0x06	; 6
    2fda:	0f b6       	in	r0, 0x3f	; 63
    2fdc:	f8 94       	cli
    2fde:	de bf       	out	0x3e, r29	; 62
    2fe0:	0f be       	out	0x3f, r0	; 63
    2fe2:	cd bf       	out	0x3d, r28	; 61
    2fe4:	df 91       	pop	r29
    2fe6:	cf 91       	pop	r28
    2fe8:	08 95       	ret

00002fea <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE>:
using namespace helicopter::model;
using namespace helicopter::controller;
using namespace helicopter::util;

void setupDefaultsandReferencePosition(SystemModel *model, PIDController *pidController)
{	
    2fea:	cf 93       	push	r28
    2fec:	df 93       	push	r29
    2fee:	00 d0       	rcall	.+0      	; 0x2ff0 <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE+0x6>
    2ff0:	1f 92       	push	r1
    2ff2:	cd b7       	in	r28, 0x3d	; 61
    2ff4:	de b7       	in	r29, 0x3e	; 62
    2ff6:	9a 83       	std	Y+2, r25	; 0x02
    2ff8:	89 83       	std	Y+1, r24	; 0x01
    2ffa:	7c 83       	std	Y+4, r23	; 0x04
    2ffc:	6b 83       	std	Y+3, r22	; 0x03
	
	model->ReferenceMagYawDegrees(0.0);
    2ffe:	89 81       	ldd	r24, Y+1	; 0x01
    3000:	9a 81       	ldd	r25, Y+2	; 0x02
    3002:	40 e0       	ldi	r20, 0x00	; 0
    3004:	50 e0       	ldi	r21, 0x00	; 0
    3006:	ba 01       	movw	r22, r20
    3008:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf>
	model->ReferenceYawVelocityDegreesPerSecond(0.0);
    300c:	89 81       	ldd	r24, Y+1	; 0x01
    300e:	9a 81       	ldd	r25, Y+2	; 0x02
    3010:	40 e0       	ldi	r20, 0x00	; 0
    3012:	50 e0       	ldi	r21, 0x00	; 0
    3014:	ba 01       	movw	r22, r20
    3016:	0e 94 fc 14 	call	0x29f8	; 0x29f8 <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf>
	
	pidController->setYawProportionalGain(3.0);
    301a:	8b 81       	ldd	r24, Y+3	; 0x03
    301c:	9c 81       	ldd	r25, Y+4	; 0x04
    301e:	40 e0       	ldi	r20, 0x00	; 0
    3020:	50 e0       	ldi	r21, 0x00	; 0
    3022:	60 e4       	ldi	r22, 0x40	; 64
    3024:	70 e4       	ldi	r23, 0x40	; 64
    3026:	0e 94 c6 16 	call	0x2d8c	; 0x2d8c <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf>
	pidController->setYawIntegralGain(.008);
    302a:	8b 81       	ldd	r24, Y+3	; 0x03
    302c:	9c 81       	ldd	r25, Y+4	; 0x04
    302e:	4f e6       	ldi	r20, 0x6F	; 111
    3030:	52 e1       	ldi	r21, 0x12	; 18
    3032:	63 e0       	ldi	r22, 0x03	; 3
    3034:	7c e3       	ldi	r23, 0x3C	; 60
    3036:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf>
	pidController->setYawDerivativeGain(.85);
    303a:	8b 81       	ldd	r24, Y+3	; 0x03
    303c:	9c 81       	ldd	r25, Y+4	; 0x04
    303e:	4a e9       	ldi	r20, 0x9A	; 154
    3040:	59 e9       	ldi	r21, 0x99	; 153
    3042:	69 e5       	ldi	r22, 0x59	; 89
    3044:	7f e3       	ldi	r23, 0x3F	; 63
    3046:	0e 94 06 17 	call	0x2e0c	; 0x2e0c <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf>
	pidController->setYawAntiWindupGain(.1);
    304a:	8b 81       	ldd	r24, Y+3	; 0x03
    304c:	9c 81       	ldd	r25, Y+4	; 0x04
    304e:	4d ec       	ldi	r20, 0xCD	; 205
    3050:	5c ec       	ldi	r21, 0xCC	; 204
    3052:	6c ec       	ldi	r22, 0xCC	; 204
    3054:	7d e3       	ldi	r23, 0x3D	; 61
    3056:	0e 94 49 17 	call	0x2e92	; 0x2e92 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf>
	
	pidController->setXProportionalGain(.289);
    305a:	8b 81       	ldd	r24, Y+3	; 0x03
    305c:	9c 81       	ldd	r25, Y+4	; 0x04
    305e:	4f ec       	ldi	r20, 0xCF	; 207
    3060:	57 ef       	ldi	r21, 0xF7	; 247
    3062:	63 e9       	ldi	r22, 0x93	; 147
    3064:	7e e3       	ldi	r23, 0x3E	; 62
    3066:	0e 94 20 16 	call	0x2c40	; 0x2c40 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf>
	pidController->setXIntegralGain(0);
    306a:	8b 81       	ldd	r24, Y+3	; 0x03
    306c:	9c 81       	ldd	r25, Y+4	; 0x04
    306e:	40 e0       	ldi	r20, 0x00	; 0
    3070:	50 e0       	ldi	r21, 0x00	; 0
    3072:	ba 01       	movw	r22, r20
    3074:	0e 94 e0 15 	call	0x2bc0	; 0x2bc0 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf>
	pidController->setXDerivativeGain(1.859);
    3078:	8b 81       	ldd	r24, Y+3	; 0x03
    307a:	9c 81       	ldd	r25, Y+4	; 0x04
    307c:	46 eb       	ldi	r20, 0xB6	; 182
    307e:	53 ef       	ldi	r21, 0xF3	; 243
    3080:	6d ee       	ldi	r22, 0xED	; 237
    3082:	7f e3       	ldi	r23, 0x3F	; 63
    3084:	0e 94 00 16 	call	0x2c00	; 0x2c00 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf>
	pidController->setXAntiWindupGain(0);
    3088:	8b 81       	ldd	r24, Y+3	; 0x03
    308a:	9c 81       	ldd	r25, Y+4	; 0x04
    308c:	40 e0       	ldi	r20, 0x00	; 0
    308e:	50 e0       	ldi	r21, 0x00	; 0
    3090:	ba 01       	movw	r22, r20
    3092:	0e 94 40 16 	call	0x2c80	; 0x2c80 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf>
	pidController->setLongitudeInnerLoopGain(.031);
    3096:	8b 81       	ldd	r24, Y+3	; 0x03
    3098:	9c 81       	ldd	r25, Y+4	; 0x04
    309a:	46 eb       	ldi	r20, 0xB6	; 182
    309c:	53 ef       	ldi	r21, 0xF3	; 243
    309e:	6d ef       	ldi	r22, 0xFD	; 253
    30a0:	7c e3       	ldi	r23, 0x3C	; 60
    30a2:	0e 94 60 16 	call	0x2cc0	; 0x2cc0 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf>
	
	//TODO: Don't forget that there is a difference between how often the sensors
	//are read and how often the control algorithm runs. 
	pidController->setIntervalPeriodSecs(PID_OUTER_LOOP_PERIOD);
    30a6:	8b 81       	ldd	r24, Y+3	; 0x03
    30a8:	9c 81       	ldd	r25, Y+4	; 0x04
    30aa:	4d ec       	ldi	r20, 0xCD	; 205
    30ac:	5c ec       	ldi	r21, 0xCC	; 204
    30ae:	6c e4       	ldi	r22, 0x4C	; 76
    30b0:	7d e3       	ldi	r23, 0x3D	; 61
    30b2:	0e 94 26 17 	call	0x2e4c	; 0x2e4c <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf>

//pidController->setMinYawServoControl (-10);
//pidController->setMaxYawServoControl(10);


	pidController->setMinYawServoControl (-1.0d);
    30b6:	8b 81       	ldd	r24, Y+3	; 0x03
    30b8:	9c 81       	ldd	r25, Y+4	; 0x04
    30ba:	40 e0       	ldi	r20, 0x00	; 0
    30bc:	50 e0       	ldi	r21, 0x00	; 0
    30be:	60 e8       	ldi	r22, 0x80	; 128
    30c0:	7f eb       	ldi	r23, 0xBF	; 191
    30c2:	0e 94 69 17 	call	0x2ed2	; 0x2ed2 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf>
	pidController->setMaxYawServoControl (1.0d);
    30c6:	8b 81       	ldd	r24, Y+3	; 0x03
    30c8:	9c 81       	ldd	r25, Y+4	; 0x04
    30ca:	40 e0       	ldi	r20, 0x00	; 0
    30cc:	50 e0       	ldi	r21, 0x00	; 0
    30ce:	60 e8       	ldi	r22, 0x80	; 128
    30d0:	7f e3       	ldi	r23, 0x3F	; 63
    30d2:	0e 94 8c 17 	call	0x2f18	; 0x2f18 <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf>


	pidController->setControlMaxValue(1.0d);
    30d6:	8b 81       	ldd	r24, Y+3	; 0x03
    30d8:	9c 81       	ldd	r25, Y+4	; 0x04
    30da:	40 e0       	ldi	r20, 0x00	; 0
    30dc:	50 e0       	ldi	r21, 0x00	; 0
    30de:	60 e8       	ldi	r22, 0x80	; 128
    30e0:	7f e3       	ldi	r23, 0x3F	; 63
    30e2:	0e 94 af 17 	call	0x2f5e	; 0x2f5e <_ZN10helicopter10controller13PIDController18setControlMaxValueEf>
	pidController->setControlMinValue(-1.0d);
    30e6:	8b 81       	ldd	r24, Y+3	; 0x03
    30e8:	9c 81       	ldd	r25, Y+4	; 0x04
    30ea:	40 e0       	ldi	r20, 0x00	; 0
    30ec:	50 e0       	ldi	r21, 0x00	; 0
    30ee:	60 e8       	ldi	r22, 0x80	; 128
    30f0:	7f eb       	ldi	r23, 0xBF	; 191
    30f2:	0e 94 d2 17 	call	0x2fa4	; 0x2fa4 <_ZN10helicopter10controller13PIDController18setControlMinValueEf>
	
	pidController->setMaxLongitudeServoControlValue(1.0d);
    30f6:	8b 81       	ldd	r24, Y+3	; 0x03
    30f8:	9c 81       	ldd	r25, Y+4	; 0x04
    30fa:	40 e0       	ldi	r20, 0x00	; 0
    30fc:	50 e0       	ldi	r21, 0x00	; 0
    30fe:	60 e8       	ldi	r22, 0x80	; 128
    3100:	7f e3       	ldi	r23, 0x3F	; 63
    3102:	0e 94 a3 16 	call	0x2d46	; 0x2d46 <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf>
	pidController->setMinLongitudeServoControlValue(-1.0d);
    3106:	8b 81       	ldd	r24, Y+3	; 0x03
    3108:	9c 81       	ldd	r25, Y+4	; 0x04
    310a:	40 e0       	ldi	r20, 0x00	; 0
    310c:	50 e0       	ldi	r21, 0x00	; 0
    310e:	60 e8       	ldi	r22, 0x80	; 128
    3110:	7f eb       	ldi	r23, 0xBF	; 191
    3112:	0e 94 80 16 	call	0x2d00	; 0x2d00 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf>
}
    3116:	0f 90       	pop	r0
    3118:	0f 90       	pop	r0
    311a:	0f 90       	pop	r0
    311c:	0f 90       	pop	r0
    311e:	df 91       	pop	r29
    3120:	cf 91       	pop	r28
    3122:	08 95       	ret

00003124 <main>:


int main(void)
{	
    3124:	4f 92       	push	r4
    3126:	5f 92       	push	r5
    3128:	6f 92       	push	r6
    312a:	7f 92       	push	r7
    312c:	8f 92       	push	r8
    312e:	9f 92       	push	r9
    3130:	af 92       	push	r10
    3132:	bf 92       	push	r11
    3134:	cf 92       	push	r12
    3136:	df 92       	push	r13
    3138:	ef 92       	push	r14
    313a:	ff 92       	push	r15
    313c:	0f 93       	push	r16
    313e:	1f 93       	push	r17
    3140:	cf 93       	push	r28
    3142:	df 93       	push	r29
    3144:	cd b7       	in	r28, 0x3d	; 61
    3146:	de b7       	in	r29, 0x3e	; 62
    3148:	e9 97       	sbiw	r28, 0x39	; 57
    314a:	0f b6       	in	r0, 0x3f	; 63
    314c:	f8 94       	cli
    314e:	de bf       	out	0x3e, r29	; 62
    3150:	0f be       	out	0x3f, r0	; 63
    3152:	cd bf       	out	0x3d, r28	; 61
	SystemModel *model = new SystemModel();
    3154:	8c ee       	ldi	r24, 0xEC	; 236
    3156:	90 e0       	ldi	r25, 0x00	; 0
    3158:	0e 94 13 38 	call	0x7026	; 0x7026 <_Znwj>
    315c:	8c 01       	movw	r16, r24
    315e:	c8 01       	movw	r24, r16
    3160:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <_ZN10helicopter5model11SystemModelC1Ev>
    3164:	1b 83       	std	Y+3, r17	; 0x03
    3166:	0a 83       	std	Y+2, r16	; 0x02
	
	
	//TODO: This somehow needs to be a simulator servo driver
	//TODO: Setup the code so that it can be setup for a simulator or not setup for a simulator.
	ServoDriver *servoDriver = new ServoDriver();
    3168:	8a e0       	ldi	r24, 0x0A	; 10
    316a:	90 e0       	ldi	r25, 0x00	; 0
    316c:	0e 94 13 38 	call	0x7026	; 0x7026 <_Znwj>
    3170:	8c 01       	movw	r16, r24
    3172:	c8 01       	movw	r24, r16
    3174:	0e 94 be 15 	call	0x2b7c	; 0x2b7c <_ZN10helicopter7drivers11ServoDriverC1Ev>
    3178:	1d 83       	std	Y+5, r17	; 0x05
    317a:	0c 83       	std	Y+4, r16	; 0x04
	
	PIDController *pidController = new PIDController(model, servoDriver);
    317c:	88 e7       	ldi	r24, 0x78	; 120
    317e:	90 e0       	ldi	r25, 0x00	; 0
    3180:	0e 94 13 38 	call	0x7026	; 0x7026 <_Znwj>
    3184:	8c 01       	movw	r16, r24
    3186:	2c 81       	ldd	r18, Y+4	; 0x04
    3188:	3d 81       	ldd	r19, Y+5	; 0x05
    318a:	8a 81       	ldd	r24, Y+2	; 0x02
    318c:	9b 81       	ldd	r25, Y+3	; 0x03
    318e:	a9 01       	movw	r20, r18
    3190:	bc 01       	movw	r22, r24
    3192:	c8 01       	movw	r24, r16
    3194:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelEPNS_7drivers11ServoDriverE>
    3198:	1f 83       	std	Y+7, r17	; 0x07
    319a:	0e 83       	std	Y+6, r16	; 0x06
	
	
	
	setupDefaultsandReferencePosition(model, pidController);
    319c:	2e 81       	ldd	r18, Y+6	; 0x06
    319e:	3f 81       	ldd	r19, Y+7	; 0x07
    31a0:	8a 81       	ldd	r24, Y+2	; 0x02
    31a2:	9b 81       	ldd	r25, Y+3	; 0x03
    31a4:	b9 01       	movw	r22, r18
    31a6:	0e 94 f5 17 	call	0x2fea	; 0x2fea <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE>
	
	//Timer *timer = new Timer(F_CPU,PRESCALE_BY_TENTWENTYFOUR,75); //Good timeout when using the radio
	Timer *timer = new Timer(F_CPU, PRESCALE_BY_TENTWENTYFOUR, 10); //Good timeout when using the USB
    31aa:	88 e0       	ldi	r24, 0x08	; 8
    31ac:	90 e0       	ldi	r25, 0x00	; 0
    31ae:	0e 94 13 38 	call	0x7026	; 0x7026 <_Znwj>
    31b2:	6c 01       	movw	r12, r24
    31b4:	1a e0       	ldi	r17, 0x0A	; 10
    31b6:	e1 2e       	mov	r14, r17
    31b8:	f1 2c       	mov	r15, r1
    31ba:	00 e0       	ldi	r16, 0x00	; 0
    31bc:	10 e0       	ldi	r17, 0x00	; 0
    31be:	20 e0       	ldi	r18, 0x00	; 0
    31c0:	34 e0       	ldi	r19, 0x04	; 4
    31c2:	40 e0       	ldi	r20, 0x00	; 0
    31c4:	54 e2       	ldi	r21, 0x24	; 36
    31c6:	64 ef       	ldi	r22, 0xF4	; 244
    31c8:	70 e0       	ldi	r23, 0x00	; 0
    31ca:	c6 01       	movw	r24, r12
    31cc:	0e 94 36 12 	call	0x246c	; 0x246c <_ZN10helicopter4util5TimerC1Em9PRESCALERm>
    31d0:	d9 86       	std	Y+9, r13	; 0x09
    31d2:	c8 86       	std	Y+8, r12	; 0x08
	
	//Create a driver for communicating with the Ground Control Station (GCS).
	//SerialDriver *serialDriver = new SerialDriver(57600, SerialDriver::Zero, timer, true, true);  
	SerialDriver *serialDriver = new SerialDriver(76800, SerialDriver::Zero, timer, true, true);  
    31d4:	8b e0       	ldi	r24, 0x0B	; 11
    31d6:	90 e0       	ldi	r25, 0x00	; 0
    31d8:	0e 94 13 38 	call	0x7026	; 0x7026 <_Znwj>
    31dc:	5c 01       	movw	r10, r24
    31de:	88 85       	ldd	r24, Y+8	; 0x08
    31e0:	99 85       	ldd	r25, Y+9	; 0x09
    31e2:	cc 24       	eor	r12, r12
    31e4:	c3 94       	inc	r12
    31e6:	ee 24       	eor	r14, r14
    31e8:	e3 94       	inc	r14
    31ea:	8c 01       	movw	r16, r24
    31ec:	20 e0       	ldi	r18, 0x00	; 0
    31ee:	40 e0       	ldi	r20, 0x00	; 0
    31f0:	5c e2       	ldi	r21, 0x2C	; 44
    31f2:	61 e0       	ldi	r22, 0x01	; 1
    31f4:	70 e0       	ldi	r23, 0x00	; 0
    31f6:	c5 01       	movw	r24, r10
    31f8:	0e 94 76 12 	call	0x24ec	; 0x24ec <_ZN10helicopter7drivers12SerialDriverC1EmNS1_8UartPortEPNS_4util5TimerEbb>
    31fc:	bb 86       	std	Y+11, r11	; 0x0b
    31fe:	aa 86       	std	Y+10, r10	; 0x0a
	serialDriver->initialize();
    3200:	8a 85       	ldd	r24, Y+10	; 0x0a
    3202:	9b 85       	ldd	r25, Y+11	; 0x0b
    3204:	fc 01       	movw	r30, r24
    3206:	80 81       	ld	r24, Z
    3208:	91 81       	ldd	r25, Z+1	; 0x01
    320a:	04 96       	adiw	r24, 0x04	; 4
    320c:	fc 01       	movw	r30, r24
    320e:	20 81       	ld	r18, Z
    3210:	31 81       	ldd	r19, Z+1	; 0x01
    3212:	8a 85       	ldd	r24, Y+10	; 0x0a
    3214:	9b 85       	ldd	r25, Y+11	; 0x0b
    3216:	f9 01       	movw	r30, r18
    3218:	19 95       	eicall
	
	GroundControlStationInterface *gcsInterface = new GroundControlStationInterface(serialDriver);
    321a:	82 e0       	ldi	r24, 0x02	; 2
    321c:	90 e0       	ldi	r25, 0x00	; 0
    321e:	0e 94 13 38 	call	0x7026	; 0x7026 <_Znwj>
    3222:	8c 01       	movw	r16, r24
    3224:	8a 85       	ldd	r24, Y+10	; 0x0a
    3226:	9b 85       	ldd	r25, Y+11	; 0x0b
    3228:	bc 01       	movw	r22, r24
    322a:	c8 01       	movw	r24, r16
    322c:	0e 94 c4 12 	call	0x2588	; 0x2588 <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverE>
    3230:	1d 87       	std	Y+13, r17	; 0x0d
    3232:	0c 87       	std	Y+12, r16	; 0x0c
	//This frequency works well for radio.
//	SimTelemetryTask *simTelemTask = new SimTelemetryTask(radioInterface, model, 0, 10);//starting at tick 1, execute 20 times a second
//	TransmitTelemetryTask *transTelemTask = new TransmitTelemetryTask(radioInterface, model, 1, 10);//starting at tick 2, execute 20 times a second

	//this frequency works well for USB.
	SimTelemetryTask *simTelemTask = new SimTelemetryTask(gcsInterface, model, pidController,0, 4);//starting at tick 0, execute 50 times a second
    3234:	8d e0       	ldi	r24, 0x0D	; 13
    3236:	90 e0       	ldi	r25, 0x00	; 0
    3238:	0e 94 13 38 	call	0x7026	; 0x7026 <_Znwj>
    323c:	6c 01       	movw	r12, r24
    323e:	2e 81       	ldd	r18, Y+6	; 0x06
    3240:	3f 81       	ldd	r19, Y+7	; 0x07
    3242:	4a 81       	ldd	r20, Y+2	; 0x02
    3244:	5b 81       	ldd	r21, Y+3	; 0x03
    3246:	8c 85       	ldd	r24, Y+12	; 0x0c
    3248:	9d 85       	ldd	r25, Y+13	; 0x0d
    324a:	68 94       	set
    324c:	ee 24       	eor	r14, r14
    324e:	e2 f8       	bld	r14, 2
    3250:	f1 2c       	mov	r15, r1
    3252:	00 e0       	ldi	r16, 0x00	; 0
    3254:	10 e0       	ldi	r17, 0x00	; 0
    3256:	bc 01       	movw	r22, r24
    3258:	c6 01       	movw	r24, r12
    325a:	0e 94 7e 34 	call	0x68fc	; 0x68fc <_ZN10helicopter5tasks16SimTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEPNS_10controller13PIDControllerEii>
    325e:	df 86       	std	Y+15, r13	; 0x0f
    3260:	ce 86       	std	Y+14, r12	; 0x0e
	TransmitTelemetryTask *transTelemTask = new TransmitTelemetryTask(gcsInterface, model, 1, 4);//starting at tick 1, execute 50 times a second
    3262:	8b e0       	ldi	r24, 0x0B	; 11
    3264:	90 e0       	ldi	r25, 0x00	; 0
    3266:	0e 94 13 38 	call	0x7026	; 0x7026 <_Znwj>
    326a:	7c 01       	movw	r14, r24
    326c:	4a 81       	ldd	r20, Y+2	; 0x02
    326e:	5b 81       	ldd	r21, Y+3	; 0x03
    3270:	8c 85       	ldd	r24, Y+12	; 0x0c
    3272:	9d 85       	ldd	r25, Y+13	; 0x0d
    3274:	04 e0       	ldi	r16, 0x04	; 4
    3276:	10 e0       	ldi	r17, 0x00	; 0
    3278:	21 e0       	ldi	r18, 0x01	; 1
    327a:	30 e0       	ldi	r19, 0x00	; 0
    327c:	bc 01       	movw	r22, r24
    327e:	c7 01       	movw	r24, r14
    3280:	0e 94 6a 37 	call	0x6ed4	; 0x6ed4 <_ZN10helicopter5tasks21TransmitTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEii>
    3284:	f9 8a       	std	Y+17, r15	; 0x11
    3286:	e8 8a       	std	Y+16, r14	; 0x10
	
	FlashLEDTask *flashTask = new FlashLEDTask(2, SCHEDULER_TICK_FREQUENCY_HZ);//starting at tick 2, execute once a second
    3288:	8a e0       	ldi	r24, 0x0A	; 10
    328a:	90 e0       	ldi	r25, 0x00	; 0
    328c:	0e 94 13 38 	call	0x7026	; 0x7026 <_Znwj>
    3290:	8c 01       	movw	r16, r24
    3292:	23 e0       	ldi	r18, 0x03	; 3
    3294:	30 e0       	ldi	r19, 0x00	; 0
    3296:	46 e4       	ldi	r20, 0x46	; 70
    3298:	50 e0       	ldi	r21, 0x00	; 0
    329a:	62 e0       	ldi	r22, 0x02	; 2
    329c:	70 e0       	ldi	r23, 0x00	; 0
    329e:	c8 01       	movw	r24, r16
    32a0:	0e 94 7f 11 	call	0x22fe	; 0x22fe <_ZN10helicopter5tasks12FlashLEDTaskC1Eiii>
    32a4:	1b 8b       	std	Y+19, r17	; 0x13
    32a6:	0a 8b       	std	Y+18, r16	; 0x12
		
		
	SensorProcessingTask *sensorProcessingTask = new SensorProcessingTask(model, 5, 4);
    32a8:	89 e0       	ldi	r24, 0x09	; 9
    32aa:	90 e0       	ldi	r25, 0x00	; 0
    32ac:	0e 94 13 38 	call	0x7026	; 0x7026 <_Znwj>
    32b0:	8c 01       	movw	r16, r24
    32b2:	8a 81       	ldd	r24, Y+2	; 0x02
    32b4:	9b 81       	ldd	r25, Y+3	; 0x03
    32b6:	24 e0       	ldi	r18, 0x04	; 4
    32b8:	30 e0       	ldi	r19, 0x00	; 0
    32ba:	45 e0       	ldi	r20, 0x05	; 5
    32bc:	50 e0       	ldi	r21, 0x00	; 0
    32be:	bc 01       	movw	r22, r24
    32c0:	c8 01       	movw	r24, r16
    32c2:	0e 94 f2 31 	call	0x63e4	; 0x63e4 <_ZN10helicopter5tasks20SensorProcessingTaskC1EPNS_5model11SystemModelEii>
    32c6:	1d 8b       	std	Y+21, r17	; 0x15
    32c8:	0c 8b       	std	Y+20, r16	; 0x14
		
	//execute the pid outer loop at the PID_OUTER_LOOP_PERIOD rate. The division is to convert the period into ticks for the scheduler.
	PIDOuterLoopTask *pidOuterLoop = new PIDOuterLoopTask(pidController, 3, (SCHEDULER_TICK_FREQUENCY_HZ / (1/PID_OUTER_LOOP_PERIOD)));
    32ca:	89 e0       	ldi	r24, 0x09	; 9
    32cc:	90 e0       	ldi	r25, 0x00	; 0
    32ce:	0e 94 13 38 	call	0x7026	; 0x7026 <_Znwj>
    32d2:	8c 01       	movw	r16, r24
    32d4:	8e 81       	ldd	r24, Y+6	; 0x06
    32d6:	9f 81       	ldd	r25, Y+7	; 0x07
    32d8:	23 e0       	ldi	r18, 0x03	; 3
    32da:	30 e0       	ldi	r19, 0x00	; 0
    32dc:	43 e0       	ldi	r20, 0x03	; 3
    32de:	50 e0       	ldi	r21, 0x00	; 0
    32e0:	bc 01       	movw	r22, r24
    32e2:	c8 01       	movw	r24, r16
    32e4:	0e 94 a7 30 	call	0x614e	; 0x614e <_ZN10helicopter5tasks16PIDOuterLoopTaskC1EPNS_10controller13PIDControllerEii>
    32e8:	1f 8b       	std	Y+23, r17	; 0x17
    32ea:	0e 8b       	std	Y+22, r16	; 0x16
	PIDInnerLoopTask *pidInnerLoop = new PIDInnerLoopTask(pidController, 4, (SCHEDULER_TICK_FREQUENCY_HZ / (1/PID_OUTER_LOOP_PERIOD)));
    32ec:	89 e0       	ldi	r24, 0x09	; 9
    32ee:	90 e0       	ldi	r25, 0x00	; 0
    32f0:	0e 94 13 38 	call	0x7026	; 0x7026 <_Znwj>
    32f4:	8c 01       	movw	r16, r24
    32f6:	8e 81       	ldd	r24, Y+6	; 0x06
    32f8:	9f 81       	ldd	r25, Y+7	; 0x07
    32fa:	23 e0       	ldi	r18, 0x03	; 3
    32fc:	30 e0       	ldi	r19, 0x00	; 0
    32fe:	44 e0       	ldi	r20, 0x04	; 4
    3300:	50 e0       	ldi	r21, 0x00	; 0
    3302:	bc 01       	movw	r22, r24
    3304:	c8 01       	movw	r24, r16
    3306:	0e 94 2a 30 	call	0x6054	; 0x6054 <_ZN10helicopter5tasks16PIDInnerLoopTaskC1EPNS_10controller13PIDControllerEii>
    330a:	19 8f       	std	Y+25, r17	; 0x19
    330c:	08 8f       	std	Y+24, r16	; 0x18
	


	Scheduler *scheduler = Scheduler::getScheduler();
    330e:	0e 94 86 2d 	call	0x5b0c	; 0x5b0c <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>
    3312:	9b 8f       	std	Y+27, r25	; 0x1b
    3314:	8a 8f       	std	Y+26, r24	; 0x1a
	
	scheduler->addTask(flashTask);
    3316:	2a 89       	ldd	r18, Y+18	; 0x12
    3318:	3b 89       	ldd	r19, Y+19	; 0x13
    331a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    331c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    331e:	b9 01       	movw	r22, r18
    3320:	0e 94 16 2e 	call	0x5c2c	; 0x5c2c <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(simTelemTask);
    3324:	2e 85       	ldd	r18, Y+14	; 0x0e
    3326:	3f 85       	ldd	r19, Y+15	; 0x0f
    3328:	8a 8d       	ldd	r24, Y+26	; 0x1a
    332a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    332c:	b9 01       	movw	r22, r18
    332e:	0e 94 16 2e 	call	0x5c2c	; 0x5c2c <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(transTelemTask);
    3332:	28 89       	ldd	r18, Y+16	; 0x10
    3334:	39 89       	ldd	r19, Y+17	; 0x11
    3336:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3338:	9b 8d       	ldd	r25, Y+27	; 0x1b
    333a:	b9 01       	movw	r22, r18
    333c:	0e 94 16 2e 	call	0x5c2c	; 0x5c2c <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(pidOuterLoop);
    3340:	2e 89       	ldd	r18, Y+22	; 0x16
    3342:	3f 89       	ldd	r19, Y+23	; 0x17
    3344:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3346:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3348:	b9 01       	movw	r22, r18
    334a:	0e 94 16 2e 	call	0x5c2c	; 0x5c2c <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(pidInnerLoop);
    334e:	28 8d       	ldd	r18, Y+24	; 0x18
    3350:	39 8d       	ldd	r19, Y+25	; 0x19
    3352:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3354:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3356:	b9 01       	movw	r22, r18
    3358:	0e 94 16 2e 	call	0x5c2c	; 0x5c2c <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(sensorProcessingTask);
    335c:	2c 89       	ldd	r18, Y+20	; 0x14
    335e:	3d 89       	ldd	r19, Y+21	; 0x15
    3360:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3362:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3364:	b9 01       	movw	r22, r18
    3366:	0e 94 16 2e 	call	0x5c2c	; 0x5c2c <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	
	//Wait until we receive location data before starting the scheduler
	//TODO rework this
	bool isInitialized = false;
    336a:	19 82       	std	Y+1, r1	; 0x01
	while (!isInitialized)
    336c:	2e c1       	rjmp	.+604    	; 0x35ca <main+0x4a6>
	{
		simTelemTask->runTaskImpl();
    336e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3370:	9f 85       	ldd	r25, Y+15	; 0x0f
    3372:	fc 01       	movw	r30, r24
    3374:	80 81       	ld	r24, Z
    3376:	91 81       	ldd	r25, Z+1	; 0x01
    3378:	fc 01       	movw	r30, r24
    337a:	20 81       	ld	r18, Z
    337c:	31 81       	ldd	r19, Z+1	; 0x01
    337e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3380:	9f 85       	ldd	r25, Y+15	; 0x0f
    3382:	f9 01       	movw	r30, r18
    3384:	19 95       	eicall
		
		if (model->LatitudeDegrees() != 0 && model->LongitudeDegrees() != 0)
    3386:	8a 81       	ldd	r24, Y+2	; 0x02
    3388:	9b 81       	ldd	r25, Y+3	; 0x03
    338a:	0e 94 1c 15 	call	0x2a38	; 0x2a38 <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    338e:	dc 01       	movw	r26, r24
    3390:	cb 01       	movw	r24, r22
    3392:	20 e0       	ldi	r18, 0x00	; 0
    3394:	30 e0       	ldi	r19, 0x00	; 0
    3396:	a9 01       	movw	r20, r18
    3398:	bc 01       	movw	r22, r24
    339a:	cd 01       	movw	r24, r26
    339c:	0e 94 78 3e 	call	0x7cf0	; 0x7cf0 <__cmpsf2>
    33a0:	88 23       	and	r24, r24
    33a2:	89 f0       	breq	.+34     	; 0x33c6 <main+0x2a2>
    33a4:	8a 81       	ldd	r24, Y+2	; 0x02
    33a6:	9b 81       	ldd	r25, Y+3	; 0x03
    33a8:	0e 94 34 15 	call	0x2a68	; 0x2a68 <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    33ac:	dc 01       	movw	r26, r24
    33ae:	cb 01       	movw	r24, r22
    33b0:	20 e0       	ldi	r18, 0x00	; 0
    33b2:	30 e0       	ldi	r19, 0x00	; 0
    33b4:	a9 01       	movw	r20, r18
    33b6:	bc 01       	movw	r22, r24
    33b8:	cd 01       	movw	r24, r26
    33ba:	0e 94 78 3e 	call	0x7cf0	; 0x7cf0 <__cmpsf2>
    33be:	88 23       	and	r24, r24
    33c0:	11 f0       	breq	.+4      	; 0x33c6 <main+0x2a2>
    33c2:	81 e0       	ldi	r24, 0x01	; 1
    33c4:	01 c0       	rjmp	.+2      	; 0x33c8 <main+0x2a4>
    33c6:	80 e0       	ldi	r24, 0x00	; 0
    33c8:	88 23       	and	r24, r24
    33ca:	09 f4       	brne	.+2      	; 0x33ce <main+0x2aa>
    33cc:	82 c0       	rjmp	.+260    	; 0x34d2 <main+0x3ae>
		{
			isInitialized = true;
    33ce:	81 e0       	ldi	r24, 0x01	; 1
    33d0:	89 83       	std	Y+1, r24	; 0x01
			
			//ecefReferenceX, ecefReferenceY, ecefReferenceZ,ecefToLocalNEDRotationMatrix,
			CoordinateUtil::CalculateECEFToLocalNEDRotationMatrix(model->LatitudeDegrees(), model->LongitudeDegrees(), model->EcefToLocalNEDRotationMatrix);
    33d2:	8a 81       	ldd	r24, Y+2	; 0x02
    33d4:	9b 81       	ldd	r25, Y+3	; 0x03
    33d6:	8c 01       	movw	r16, r24
    33d8:	08 53       	subi	r16, 0x38	; 56
    33da:	1f 4f       	sbci	r17, 0xFF	; 255
    33dc:	8a 81       	ldd	r24, Y+2	; 0x02
    33de:	9b 81       	ldd	r25, Y+3	; 0x03
    33e0:	0e 94 34 15 	call	0x2a68	; 0x2a68 <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    33e4:	6b 01       	movw	r12, r22
    33e6:	7c 01       	movw	r14, r24
    33e8:	8a 81       	ldd	r24, Y+2	; 0x02
    33ea:	9b 81       	ldd	r25, Y+3	; 0x03
    33ec:	0e 94 1c 15 	call	0x2a38	; 0x2a38 <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    33f0:	dc 01       	movw	r26, r24
    33f2:	cb 01       	movw	r24, r22
    33f4:	a7 01       	movw	r20, r14
    33f6:	96 01       	movw	r18, r12
    33f8:	bc 01       	movw	r22, r24
    33fa:	cd 01       	movw	r24, r26
    33fc:	0e 94 7e 38 	call	0x70fc	; 0x70fc <_ZN10helicopter4util14CoordinateUtil37CalculateECEFToLocalNEDRotationMatrixEffPA3_f>
	
			float initialXPositionEcef = 0;
    3400:	1a a6       	std	Y+42, r1	; 0x2a
    3402:	1b a6       	std	Y+43, r1	; 0x2b
    3404:	1c a6       	std	Y+44, r1	; 0x2c
    3406:	1d a6       	std	Y+45, r1	; 0x2d
			float initialYPositionEcef = 0;
    3408:	1e a6       	std	Y+46, r1	; 0x2e
    340a:	1f a6       	std	Y+47, r1	; 0x2f
    340c:	18 aa       	std	Y+48, r1	; 0x30
    340e:	19 aa       	std	Y+49, r1	; 0x31
			float initialZPositionEcef = 0;
    3410:	1a aa       	std	Y+50, r1	; 0x32
    3412:	1b aa       	std	Y+51, r1	; 0x33
    3414:	1c aa       	std	Y+52, r1	; 0x34
    3416:	1d aa       	std	Y+53, r1	; 0x35
			CoordinateUtil::ConvertFromGeodeticToECEF(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), initialXPositionEcef, initialYPositionEcef, initialZPositionEcef);
    3418:	8a 81       	ldd	r24, Y+2	; 0x02
    341a:	9b 81       	ldd	r25, Y+3	; 0x03
    341c:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    3420:	6e ab       	std	Y+54, r22	; 0x36
    3422:	7f ab       	std	Y+55, r23	; 0x37
    3424:	88 af       	std	Y+56, r24	; 0x38
    3426:	99 af       	std	Y+57, r25	; 0x39
    3428:	8a 81       	ldd	r24, Y+2	; 0x02
    342a:	9b 81       	ldd	r25, Y+3	; 0x03
    342c:	0e 94 34 15 	call	0x2a68	; 0x2a68 <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    3430:	2b 01       	movw	r4, r22
    3432:	3c 01       	movw	r6, r24
    3434:	8a 81       	ldd	r24, Y+2	; 0x02
    3436:	9b 81       	ldd	r25, Y+3	; 0x03
    3438:	0e 94 1c 15 	call	0x2a38	; 0x2a38 <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    343c:	dc 01       	movw	r26, r24
    343e:	cb 01       	movw	r24, r22
    3440:	be 01       	movw	r22, r28
    3442:	6e 5c       	subi	r22, 0xCE	; 206
    3444:	7f 4f       	sbci	r23, 0xFF	; 255
    3446:	ae 01       	movw	r20, r28
    3448:	42 5d       	subi	r20, 0xD2	; 210
    344a:	5f 4f       	sbci	r21, 0xFF	; 255
    344c:	9e 01       	movw	r18, r28
    344e:	26 5d       	subi	r18, 0xD6	; 214
    3450:	3f 4f       	sbci	r19, 0xFF	; 255
    3452:	4b 01       	movw	r8, r22
    3454:	5a 01       	movw	r10, r20
    3456:	69 01       	movw	r12, r18
    3458:	ee a8       	ldd	r14, Y+54	; 0x36
    345a:	ff a8       	ldd	r15, Y+55	; 0x37
    345c:	08 ad       	ldd	r16, Y+56	; 0x38
    345e:	19 ad       	ldd	r17, Y+57	; 0x39
    3460:	a3 01       	movw	r20, r6
    3462:	92 01       	movw	r18, r4
    3464:	bc 01       	movw	r22, r24
    3466:	cd 01       	movw	r24, r26
    3468:	0e 94 2d 3a 	call	0x745a	; 0x745a <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEfffRfS2_S2_>
			
			model->InitialXPositionEcef(initialXPositionEcef);
    346c:	8a a5       	ldd	r24, Y+42	; 0x2a
    346e:	9b a5       	ldd	r25, Y+43	; 0x2b
    3470:	ac a5       	ldd	r26, Y+44	; 0x2c
    3472:	bd a5       	ldd	r27, Y+45	; 0x2d
    3474:	bc 01       	movw	r22, r24
    3476:	cd 01       	movw	r24, r26
    3478:	0e 94 e7 3e 	call	0x7dce	; 0x7dce <__fixsfsi>
    347c:	dc 01       	movw	r26, r24
    347e:	cb 01       	movw	r24, r22
    3480:	2a 81       	ldd	r18, Y+2	; 0x02
    3482:	3b 81       	ldd	r19, Y+3	; 0x03
    3484:	ac 01       	movw	r20, r24
    3486:	bd 01       	movw	r22, r26
    3488:	c9 01       	movw	r24, r18
    348a:	0e 94 4c 15 	call	0x2a98	; 0x2a98 <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl>
			model->InitialYPositionEcef(initialYPositionEcef);
    348e:	8e a5       	ldd	r24, Y+46	; 0x2e
    3490:	9f a5       	ldd	r25, Y+47	; 0x2f
    3492:	a8 a9       	ldd	r26, Y+48	; 0x30
    3494:	b9 a9       	ldd	r27, Y+49	; 0x31
    3496:	bc 01       	movw	r22, r24
    3498:	cd 01       	movw	r24, r26
    349a:	0e 94 e7 3e 	call	0x7dce	; 0x7dce <__fixsfsi>
    349e:	dc 01       	movw	r26, r24
    34a0:	cb 01       	movw	r24, r22
    34a2:	2a 81       	ldd	r18, Y+2	; 0x02
    34a4:	3b 81       	ldd	r19, Y+3	; 0x03
    34a6:	ac 01       	movw	r20, r24
    34a8:	bd 01       	movw	r22, r26
    34aa:	c9 01       	movw	r24, r18
    34ac:	0e 94 72 15 	call	0x2ae4	; 0x2ae4 <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl>
			model->InitialZPositionEcef(initialZPositionEcef);
    34b0:	8a a9       	ldd	r24, Y+50	; 0x32
    34b2:	9b a9       	ldd	r25, Y+51	; 0x33
    34b4:	ac a9       	ldd	r26, Y+52	; 0x34
    34b6:	bd a9       	ldd	r27, Y+53	; 0x35
    34b8:	bc 01       	movw	r22, r24
    34ba:	cd 01       	movw	r24, r26
    34bc:	0e 94 e7 3e 	call	0x7dce	; 0x7dce <__fixsfsi>
    34c0:	dc 01       	movw	r26, r24
    34c2:	cb 01       	movw	r24, r22
    34c4:	2a 81       	ldd	r18, Y+2	; 0x02
    34c6:	3b 81       	ldd	r19, Y+3	; 0x03
    34c8:	ac 01       	movw	r20, r24
    34ca:	bd 01       	movw	r22, r26
    34cc:	c9 01       	movw	r24, r18
    34ce:	0e 94 98 15 	call	0x2b30	; 0x2b30 <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl>
    34d2:	80 e0       	ldi	r24, 0x00	; 0
    34d4:	90 e0       	ldi	r25, 0x00	; 0
    34d6:	a8 ec       	ldi	r26, 0xC8	; 200
    34d8:	b2 e4       	ldi	r27, 0x42	; 66
    34da:	8c 8f       	std	Y+28, r24	; 0x1c
    34dc:	9d 8f       	std	Y+29, r25	; 0x1d
    34de:	ae 8f       	std	Y+30, r26	; 0x1e
    34e0:	bf 8f       	std	Y+31, r27	; 0x1f
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    34e2:	20 e0       	ldi	r18, 0x00	; 0
    34e4:	30 e0       	ldi	r19, 0x00	; 0
    34e6:	4a e7       	ldi	r20, 0x7A	; 122
    34e8:	55 e4       	ldi	r21, 0x45	; 69
    34ea:	6c 8d       	ldd	r22, Y+28	; 0x1c
    34ec:	7d 8d       	ldd	r23, Y+29	; 0x1d
    34ee:	8e 8d       	ldd	r24, Y+30	; 0x1e
    34f0:	9f 8d       	ldd	r25, Y+31	; 0x1f
    34f2:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    34f6:	dc 01       	movw	r26, r24
    34f8:	cb 01       	movw	r24, r22
    34fa:	88 a3       	std	Y+32, r24	; 0x20
    34fc:	99 a3       	std	Y+33, r25	; 0x21
    34fe:	aa a3       	std	Y+34, r26	; 0x22
    3500:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    3502:	20 e0       	ldi	r18, 0x00	; 0
    3504:	30 e0       	ldi	r19, 0x00	; 0
    3506:	40 e8       	ldi	r20, 0x80	; 128
    3508:	5f e3       	ldi	r21, 0x3F	; 63
    350a:	68 a1       	ldd	r22, Y+32	; 0x20
    350c:	79 a1       	ldd	r23, Y+33	; 0x21
    350e:	8a a1       	ldd	r24, Y+34	; 0x22
    3510:	9b a1       	ldd	r25, Y+35	; 0x23
    3512:	0e 94 78 3e 	call	0x7cf0	; 0x7cf0 <__cmpsf2>
    3516:	88 23       	and	r24, r24
    3518:	2c f4       	brge	.+10     	; 0x3524 <main+0x400>
		__ticks = 1;
    351a:	81 e0       	ldi	r24, 0x01	; 1
    351c:	90 e0       	ldi	r25, 0x00	; 0
    351e:	9d a3       	std	Y+37, r25	; 0x25
    3520:	8c a3       	std	Y+36, r24	; 0x24
    3522:	46 c0       	rjmp	.+140    	; 0x35b0 <main+0x48c>
	else if (__tmp > 65535)
    3524:	20 e0       	ldi	r18, 0x00	; 0
    3526:	3f ef       	ldi	r19, 0xFF	; 255
    3528:	4f e7       	ldi	r20, 0x7F	; 127
    352a:	57 e4       	ldi	r21, 0x47	; 71
    352c:	68 a1       	ldd	r22, Y+32	; 0x20
    352e:	79 a1       	ldd	r23, Y+33	; 0x21
    3530:	8a a1       	ldd	r24, Y+34	; 0x22
    3532:	9b a1       	ldd	r25, Y+35	; 0x23
    3534:	0e 94 56 40 	call	0x80ac	; 0x80ac <__gesf2>
    3538:	18 16       	cp	r1, r24
    353a:	84 f5       	brge	.+96     	; 0x359c <main+0x478>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    353c:	20 e0       	ldi	r18, 0x00	; 0
    353e:	30 e0       	ldi	r19, 0x00	; 0
    3540:	40 e2       	ldi	r20, 0x20	; 32
    3542:	51 e4       	ldi	r21, 0x41	; 65
    3544:	6c 8d       	ldd	r22, Y+28	; 0x1c
    3546:	7d 8d       	ldd	r23, Y+29	; 0x1d
    3548:	8e 8d       	ldd	r24, Y+30	; 0x1e
    354a:	9f 8d       	ldd	r25, Y+31	; 0x1f
    354c:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    3550:	dc 01       	movw	r26, r24
    3552:	cb 01       	movw	r24, r22
    3554:	bc 01       	movw	r22, r24
    3556:	cd 01       	movw	r24, r26
    3558:	0e 94 ec 3e 	call	0x7dd8	; 0x7dd8 <__fixunssfsi>
    355c:	dc 01       	movw	r26, r24
    355e:	cb 01       	movw	r24, r22
    3560:	9d a3       	std	Y+37, r25	; 0x25
    3562:	8c a3       	std	Y+36, r24	; 0x24
    3564:	12 c0       	rjmp	.+36     	; 0x358a <main+0x466>
    3566:	80 e9       	ldi	r24, 0x90	; 144
    3568:	91 e0       	ldi	r25, 0x01	; 1
    356a:	9f a3       	std	Y+39, r25	; 0x27
    356c:	8e a3       	std	Y+38, r24	; 0x26
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    356e:	8e a1       	ldd	r24, Y+38	; 0x26
    3570:	9f a1       	ldd	r25, Y+39	; 0x27
    3572:	8c 01       	movw	r16, r24
    3574:	c8 01       	movw	r24, r16
    3576:	01 97       	sbiw	r24, 0x01	; 1
    3578:	f1 f7       	brne	.-4      	; 0x3576 <main+0x452>
    357a:	8c 01       	movw	r16, r24
    357c:	1f a3       	std	Y+39, r17	; 0x27
    357e:	0e a3       	std	Y+38, r16	; 0x26
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3580:	8c a1       	ldd	r24, Y+36	; 0x24
    3582:	9d a1       	ldd	r25, Y+37	; 0x25
    3584:	01 97       	sbiw	r24, 0x01	; 1
    3586:	9d a3       	std	Y+37, r25	; 0x25
    3588:	8c a3       	std	Y+36, r24	; 0x24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    358a:	21 e0       	ldi	r18, 0x01	; 1
    358c:	8c a1       	ldd	r24, Y+36	; 0x24
    358e:	9d a1       	ldd	r25, Y+37	; 0x25
    3590:	00 97       	sbiw	r24, 0x00	; 0
    3592:	09 f4       	brne	.+2      	; 0x3596 <main+0x472>
    3594:	20 e0       	ldi	r18, 0x00	; 0
    3596:	22 23       	and	r18, r18
    3598:	31 f7       	brne	.-52     	; 0x3566 <main+0x442>
    359a:	17 c0       	rjmp	.+46     	; 0x35ca <main+0x4a6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    359c:	68 a1       	ldd	r22, Y+32	; 0x20
    359e:	79 a1       	ldd	r23, Y+33	; 0x21
    35a0:	8a a1       	ldd	r24, Y+34	; 0x22
    35a2:	9b a1       	ldd	r25, Y+35	; 0x23
    35a4:	0e 94 ec 3e 	call	0x7dd8	; 0x7dd8 <__fixunssfsi>
    35a8:	dc 01       	movw	r26, r24
    35aa:	cb 01       	movw	r24, r22
    35ac:	9d a3       	std	Y+37, r25	; 0x25
    35ae:	8c a3       	std	Y+36, r24	; 0x24
    35b0:	8c a1       	ldd	r24, Y+36	; 0x24
    35b2:	9d a1       	ldd	r25, Y+37	; 0x25
    35b4:	99 a7       	std	Y+41, r25	; 0x29
    35b6:	88 a7       	std	Y+40, r24	; 0x28
    35b8:	88 a5       	ldd	r24, Y+40	; 0x28
    35ba:	99 a5       	ldd	r25, Y+41	; 0x29
    35bc:	8c 01       	movw	r16, r24
    35be:	f8 01       	movw	r30, r16
    35c0:	31 97       	sbiw	r30, 0x01	; 1
    35c2:	f1 f7       	brne	.-4      	; 0x35c0 <main+0x49c>
    35c4:	8f 01       	movw	r16, r30
    35c6:	19 a7       	std	Y+41, r17	; 0x29
    35c8:	08 a7       	std	Y+40, r16	; 0x28
	
	
	//Wait until we receive location data before starting the scheduler
	//TODO rework this
	bool isInitialized = false;
	while (!isInitialized)
    35ca:	99 81       	ldd	r25, Y+1	; 0x01
    35cc:	81 e0       	ldi	r24, 0x01	; 1
    35ce:	89 27       	eor	r24, r25
    35d0:	88 23       	and	r24, r24
    35d2:	09 f0       	breq	.+2      	; 0x35d6 <main+0x4b2>
    35d4:	cc ce       	rjmp	.-616    	; 0x336e <main+0x24a>
		_delay_ms(100);
	}
	
	
	
	scheduler->init(); //Sets up the timer registers, inits all tasks,
    35d6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    35d8:	9b 8d       	ldd	r25, Y+27	; 0x1b
    35da:	0e 94 51 2e 	call	0x5ca2	; 0x5ca2 <_ZN10helicopter9scheduler9Scheduler4initEv>
	
	scheduler->start();
    35de:	8a 8d       	ldd	r24, Y+26	; 0x1a
    35e0:	9b 8d       	ldd	r25, Y+27	; 0x1b
    35e2:	0e 94 29 2f 	call	0x5e52	; 0x5e52 <_ZN10helicopter9scheduler9Scheduler5startEv>
    35e6:	01 c0       	rjmp	.+2      	; 0x35ea <main+0x4c6>
	
	
	while(1)
    35e8:	00 00       	nop
	{
		//Checks to see if any tasks are ready to run an executes them.
		//goes to sleep (until the next timer tick) after processing all available tasks.
		scheduler->dispatch();
    35ea:	8a 8d       	ldd	r24, Y+26	; 0x1a
    35ec:	9b 8d       	ldd	r25, Y+27	; 0x1b
    35ee:	0e 94 b2 2e 	call	0x5d64	; 0x5d64 <_ZN10helicopter9scheduler9Scheduler8dispatchEv>
		
		/**
		 * Determine if the last processing frame was blown.
		 */
		if (scheduler->hasBlownFrame())
    35f2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    35f4:	9b 8d       	ldd	r25, Y+27	; 0x1b
    35f6:	0e 94 25 12 	call	0x244a	; 0x244a <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEv>
    35fa:	88 23       	and	r24, r24
    35fc:	a9 f3       	breq	.-22     	; 0x35e8 <main+0x4c4>
		{
			pidController->addBlownFrame();
    35fe:	8e 81       	ldd	r24, Y+6	; 0x06
    3600:	9f 81       	ldd	r25, Y+7	; 0x07
    3602:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <_ZN10helicopter10controller13PIDController13addBlownFrameEv>
	scheduler->init(); //Sets up the timer registers, inits all tasks,
	
	scheduler->start();
	
	
	while(1)
    3606:	f0 cf       	rjmp	.-32     	; 0x35e8 <main+0x4c4>

00003608 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>:
	namespace tasks
	{
		/**
			* This task is used to periodically flash an LED on the flight computer.
			*/
		class FlashLEDTask : public Task
    3608:	cf 93       	push	r28
    360a:	df 93       	push	r29
    360c:	1f 92       	push	r1
    360e:	1f 92       	push	r1
    3610:	cd b7       	in	r28, 0x3d	; 61
    3612:	de b7       	in	r29, 0x3e	; 62
    3614:	9a 83       	std	Y+2, r25	; 0x02
    3616:	89 83       	std	Y+1, r24	; 0x01
    3618:	89 81       	ldd	r24, Y+1	; 0x01
    361a:	9a 81       	ldd	r25, Y+2	; 0x02
    361c:	22 e2       	ldi	r18, 0x22	; 34
    361e:	32 e0       	ldi	r19, 0x02	; 2
    3620:	fc 01       	movw	r30, r24
    3622:	31 83       	std	Z+1, r19	; 0x01
    3624:	20 83       	st	Z, r18
    3626:	89 81       	ldd	r24, Y+1	; 0x01
    3628:	9a 81       	ldd	r25, Y+2	; 0x02
    362a:	0e 94 4c 11 	call	0x2298	; 0x2298 <_ZN10helicopter5tasks4TaskD1Ev>
    362e:	80 e0       	ldi	r24, 0x00	; 0
    3630:	90 e0       	ldi	r25, 0x00	; 0
    3632:	81 70       	andi	r24, 0x01	; 1
    3634:	99 27       	eor	r25, r25
    3636:	00 97       	sbiw	r24, 0x00	; 0
    3638:	21 f0       	breq	.+8      	; 0x3642 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev+0x3a>
    363a:	89 81       	ldd	r24, Y+1	; 0x01
    363c:	9a 81       	ldd	r25, Y+2	; 0x02
    363e:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    3642:	0f 90       	pop	r0
    3644:	0f 90       	pop	r0
    3646:	df 91       	pop	r29
    3648:	cf 91       	pop	r28
    364a:	08 95       	ret

0000364c <_ZN10helicopter5tasks12FlashLEDTaskD0Ev>:
    364c:	cf 93       	push	r28
    364e:	df 93       	push	r29
    3650:	1f 92       	push	r1
    3652:	1f 92       	push	r1
    3654:	cd b7       	in	r28, 0x3d	; 61
    3656:	de b7       	in	r29, 0x3e	; 62
    3658:	9a 83       	std	Y+2, r25	; 0x02
    365a:	89 83       	std	Y+1, r24	; 0x01
    365c:	89 81       	ldd	r24, Y+1	; 0x01
    365e:	9a 81       	ldd	r25, Y+2	; 0x02
    3660:	0e 94 04 1b 	call	0x3608	; 0x3608 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>
    3664:	89 81       	ldd	r24, Y+1	; 0x01
    3666:	9a 81       	ldd	r25, Y+2	; 0x02
    3668:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    366c:	0f 90       	pop	r0
    366e:	0f 90       	pop	r0
    3670:	df 91       	pop	r29
    3672:	cf 91       	pop	r28
    3674:	08 95       	ret

00003676 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>:

using namespace helicopter::util;
using namespace helicopter::interfaces;

void GroundControlStationInterface::calculateChecksum (byte *msgPayload, int payloadSize, byte &checksumA, byte &checksumB)
{
    3676:	0f 93       	push	r16
    3678:	1f 93       	push	r17
    367a:	cf 93       	push	r28
    367c:	df 93       	push	r29
    367e:	cd b7       	in	r28, 0x3d	; 61
    3680:	de b7       	in	r29, 0x3e	; 62
    3682:	2d 97       	sbiw	r28, 0x0d	; 13
    3684:	0f b6       	in	r0, 0x3f	; 63
    3686:	f8 94       	cli
    3688:	de bf       	out	0x3e, r29	; 62
    368a:	0f be       	out	0x3f, r0	; 63
    368c:	cd bf       	out	0x3d, r28	; 61
    368e:	9d 83       	std	Y+5, r25	; 0x05
    3690:	8c 83       	std	Y+4, r24	; 0x04
    3692:	7f 83       	std	Y+7, r23	; 0x07
    3694:	6e 83       	std	Y+6, r22	; 0x06
    3696:	59 87       	std	Y+9, r21	; 0x09
    3698:	48 87       	std	Y+8, r20	; 0x08
    369a:	3b 87       	std	Y+11, r19	; 0x0b
    369c:	2a 87       	std	Y+10, r18	; 0x0a
    369e:	1d 87       	std	Y+13, r17	; 0x0d
    36a0:	0c 87       	std	Y+12, r16	; 0x0c
	for (int i = 0; i < payloadSize; i++)
    36a2:	1a 82       	std	Y+2, r1	; 0x02
    36a4:	19 82       	std	Y+1, r1	; 0x01
    36a6:	26 c0       	rjmp	.+76     	; 0x36f4 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x7e>
	{
		byte b = msgPayload[i];
    36a8:	89 81       	ldd	r24, Y+1	; 0x01
    36aa:	9a 81       	ldd	r25, Y+2	; 0x02
    36ac:	2e 81       	ldd	r18, Y+6	; 0x06
    36ae:	3f 81       	ldd	r19, Y+7	; 0x07
    36b0:	82 0f       	add	r24, r18
    36b2:	93 1f       	adc	r25, r19
    36b4:	fc 01       	movw	r30, r24
    36b6:	80 81       	ld	r24, Z
    36b8:	8b 83       	std	Y+3, r24	; 0x03
		
		//These fields can overflow, but that is intentional.
		checksumA = (byte) (checksumA + b);
    36ba:	8a 85       	ldd	r24, Y+10	; 0x0a
    36bc:	9b 85       	ldd	r25, Y+11	; 0x0b
    36be:	fc 01       	movw	r30, r24
    36c0:	90 81       	ld	r25, Z
    36c2:	8b 81       	ldd	r24, Y+3	; 0x03
    36c4:	29 2f       	mov	r18, r25
    36c6:	28 0f       	add	r18, r24
    36c8:	8a 85       	ldd	r24, Y+10	; 0x0a
    36ca:	9b 85       	ldd	r25, Y+11	; 0x0b
    36cc:	fc 01       	movw	r30, r24
    36ce:	20 83       	st	Z, r18
		checksumB = (byte) (checksumB + checksumA);
    36d0:	8c 85       	ldd	r24, Y+12	; 0x0c
    36d2:	9d 85       	ldd	r25, Y+13	; 0x0d
    36d4:	fc 01       	movw	r30, r24
    36d6:	20 81       	ld	r18, Z
    36d8:	8a 85       	ldd	r24, Y+10	; 0x0a
    36da:	9b 85       	ldd	r25, Y+11	; 0x0b
    36dc:	fc 01       	movw	r30, r24
    36de:	80 81       	ld	r24, Z
    36e0:	28 0f       	add	r18, r24
    36e2:	8c 85       	ldd	r24, Y+12	; 0x0c
    36e4:	9d 85       	ldd	r25, Y+13	; 0x0d
    36e6:	fc 01       	movw	r30, r24
    36e8:	20 83       	st	Z, r18
using namespace helicopter::util;
using namespace helicopter::interfaces;

void GroundControlStationInterface::calculateChecksum (byte *msgPayload, int payloadSize, byte &checksumA, byte &checksumB)
{
	for (int i = 0; i < payloadSize; i++)
    36ea:	89 81       	ldd	r24, Y+1	; 0x01
    36ec:	9a 81       	ldd	r25, Y+2	; 0x02
    36ee:	01 96       	adiw	r24, 0x01	; 1
    36f0:	9a 83       	std	Y+2, r25	; 0x02
    36f2:	89 83       	std	Y+1, r24	; 0x01
    36f4:	41 e0       	ldi	r20, 0x01	; 1
    36f6:	29 81       	ldd	r18, Y+1	; 0x01
    36f8:	3a 81       	ldd	r19, Y+2	; 0x02
    36fa:	88 85       	ldd	r24, Y+8	; 0x08
    36fc:	99 85       	ldd	r25, Y+9	; 0x09
    36fe:	28 17       	cp	r18, r24
    3700:	39 07       	cpc	r19, r25
    3702:	0c f0       	brlt	.+2      	; 0x3706 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x90>
    3704:	40 e0       	ldi	r20, 0x00	; 0
    3706:	44 23       	and	r20, r20
    3708:	79 f6       	brne	.-98     	; 0x36a8 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x32>
		
		//These fields can overflow, but that is intentional.
		checksumA = (byte) (checksumA + b);
		checksumB = (byte) (checksumB + checksumA);
	}
}
    370a:	2d 96       	adiw	r28, 0x0d	; 13
    370c:	0f b6       	in	r0, 0x3f	; 63
    370e:	f8 94       	cli
    3710:	de bf       	out	0x3e, r29	; 62
    3712:	0f be       	out	0x3f, r0	; 63
    3714:	cd bf       	out	0x3d, r28	; 61
    3716:	df 91       	pop	r29
    3718:	cf 91       	pop	r28
    371a:	1f 91       	pop	r17
    371c:	0f 91       	pop	r16
    371e:	08 95       	ret

00003720 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>:

int GroundControlStationInterface::transmit(Message *msgToSend)
{
    3720:	cf 92       	push	r12
    3722:	df 92       	push	r13
    3724:	ef 92       	push	r14
    3726:	ff 92       	push	r15
    3728:	0f 93       	push	r16
    372a:	1f 93       	push	r17
    372c:	cf 93       	push	r28
    372e:	df 93       	push	r29
    3730:	cd b7       	in	r28, 0x3d	; 61
    3732:	de b7       	in	r29, 0x3e	; 62
    3734:	64 97       	sbiw	r28, 0x14	; 20
    3736:	0f b6       	in	r0, 0x3f	; 63
    3738:	f8 94       	cli
    373a:	de bf       	out	0x3e, r29	; 62
    373c:	0f be       	out	0x3f, r0	; 63
    373e:	cd bf       	out	0x3d, r28	; 61
    3740:	9a 8b       	std	Y+18, r25	; 0x12
    3742:	89 8b       	std	Y+17, r24	; 0x11
    3744:	7c 8b       	std	Y+20, r23	; 0x14
    3746:	6b 8b       	std	Y+19, r22	; 0x13
		delete [] msgPayload;
		msgPayload = NULL;
	}
	
	return status;
}
    3748:	ed b6       	in	r14, 0x3d	; 61
    374a:	fe b6       	in	r15, 0x3e	; 62
	}
}

int GroundControlStationInterface::transmit(Message *msgToSend)
{
	int status = 0;
    374c:	1a 82       	std	Y+2, r1	; 0x02
    374e:	19 82       	std	Y+1, r1	; 0x01
	
	if (msgToSend != NULL)
    3750:	8b 89       	ldd	r24, Y+19	; 0x13
    3752:	9c 89       	ldd	r25, Y+20	; 0x14
    3754:	00 97       	sbiw	r24, 0x00	; 0
    3756:	09 f4       	brne	.+2      	; 0x375a <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x3a>
    3758:	b3 c0       	rjmp	.+358    	; 0x38c0 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x1a0>
    375a:	8d b7       	in	r24, 0x3d	; 61
    375c:	9e b7       	in	r25, 0x3e	; 62
    375e:	6c 01       	movw	r12, r24
	{
		byte *msgPayload = msgToSend->getBytes();
    3760:	8b 89       	ldd	r24, Y+19	; 0x13
    3762:	9c 89       	ldd	r25, Y+20	; 0x14
    3764:	fc 01       	movw	r30, r24
    3766:	80 81       	ld	r24, Z
    3768:	91 81       	ldd	r25, Z+1	; 0x01
    376a:	04 96       	adiw	r24, 0x04	; 4
    376c:	fc 01       	movw	r30, r24
    376e:	20 81       	ld	r18, Z
    3770:	31 81       	ldd	r19, Z+1	; 0x01
    3772:	8b 89       	ldd	r24, Y+19	; 0x13
    3774:	9c 89       	ldd	r25, Y+20	; 0x14
    3776:	f9 01       	movw	r30, r18
    3778:	19 95       	eicall
    377a:	9e 83       	std	Y+6, r25	; 0x06
    377c:	8d 83       	std	Y+5, r24	; 0x05
		
		int payloadSize = msgToSend->getMessageSize();
    377e:	8b 89       	ldd	r24, Y+19	; 0x13
    3780:	9c 89       	ldd	r25, Y+20	; 0x14
    3782:	0e 94 11 1e 	call	0x3c22	; 0x3c22 <_ZN10helicopter8messages7Message14getMessageSizeEv>
    3786:	98 87       	std	Y+8, r25	; 0x08
    3788:	8f 83       	std	Y+7, r24	; 0x07
		
		int completeMsgSize = payloadSize + MsgHeaderFooterSize;;
    378a:	8f 81       	ldd	r24, Y+7	; 0x07
    378c:	98 85       	ldd	r25, Y+8	; 0x08
    378e:	05 96       	adiw	r24, 0x05	; 5
    3790:	9a 87       	std	Y+10, r25	; 0x0a
    3792:	89 87       	std	Y+9, r24	; 0x09

		byte completeMsg[completeMsgSize];
    3794:	89 85       	ldd	r24, Y+9	; 0x09
    3796:	9a 85       	ldd	r25, Y+10	; 0x0a
    3798:	01 97       	sbiw	r24, 0x01	; 1
    379a:	9c 87       	std	Y+12, r25	; 0x0c
    379c:	8b 87       	std	Y+11, r24	; 0x0b
    379e:	01 96       	adiw	r24, 0x01	; 1
    37a0:	2d b7       	in	r18, 0x3d	; 61
    37a2:	3e b7       	in	r19, 0x3e	; 62
    37a4:	28 1b       	sub	r18, r24
    37a6:	39 0b       	sbc	r19, r25
    37a8:	0f b6       	in	r0, 0x3f	; 63
    37aa:	f8 94       	cli
    37ac:	3e bf       	out	0x3e, r19	; 62
    37ae:	0f be       	out	0x3f, r0	; 63
    37b0:	2d bf       	out	0x3d, r18	; 61
    37b2:	8d b7       	in	r24, 0x3d	; 61
    37b4:	9e b7       	in	r25, 0x3e	; 62
    37b6:	01 96       	adiw	r24, 0x01	; 1
    37b8:	9e 87       	std	Y+14, r25	; 0x0e
    37ba:	8d 87       	std	Y+13, r24	; 0x0d
		
		completeMsg[0] = GroundControlStationInterface::SyncByte1;
    37bc:	8d 85       	ldd	r24, Y+13	; 0x0d
    37be:	9e 85       	ldd	r25, Y+14	; 0x0e
    37c0:	25 eb       	ldi	r18, 0xB5	; 181
    37c2:	fc 01       	movw	r30, r24
    37c4:	20 83       	st	Z, r18
		completeMsg[1] = GroundControlStationInterface::SyncByte2;
    37c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    37c8:	9e 85       	ldd	r25, Y+14	; 0x0e
    37ca:	22 e6       	ldi	r18, 0x62	; 98
    37cc:	fc 01       	movw	r30, r24
    37ce:	21 83       	std	Z+1, r18	; 0x01
		completeMsg[2] = GroundControlStationInterface::SyncByte3;
    37d0:	8d 85       	ldd	r24, Y+13	; 0x0d
    37d2:	9e 85       	ldd	r25, Y+14	; 0x0e
    37d4:	27 ed       	ldi	r18, 0xD7	; 215
    37d6:	fc 01       	movw	r30, r24
    37d8:	22 83       	std	Z+2, r18	; 0x02
		
		memcpy(&completeMsg[3], msgPayload, payloadSize);
    37da:	4f 81       	ldd	r20, Y+7	; 0x07
    37dc:	58 85       	ldd	r21, Y+8	; 0x08
    37de:	8d 85       	ldd	r24, Y+13	; 0x0d
    37e0:	9e 85       	ldd	r25, Y+14	; 0x0e
    37e2:	03 96       	adiw	r24, 0x03	; 3
    37e4:	2d 81       	ldd	r18, Y+5	; 0x05
    37e6:	3e 81       	ldd	r19, Y+6	; 0x06
    37e8:	b9 01       	movw	r22, r18
    37ea:	0e 94 f8 43 	call	0x87f0	; 0x87f0 <memcpy>
		
		byte checksumA = 0;
    37ee:	1f 86       	std	Y+15, r1	; 0x0f
		byte checksumB = 0;
    37f0:	18 8a       	std	Y+16, r1	; 0x10
		
		calculateChecksum(msgPayload, payloadSize, checksumA, checksumB);
    37f2:	fe 01       	movw	r30, r28
    37f4:	70 96       	adiw	r30, 0x10	; 16
    37f6:	9e 01       	movw	r18, r28
    37f8:	21 5f       	subi	r18, 0xF1	; 241
    37fa:	3f 4f       	sbci	r19, 0xFF	; 255
    37fc:	4f 81       	ldd	r20, Y+7	; 0x07
    37fe:	58 85       	ldd	r21, Y+8	; 0x08
    3800:	6d 81       	ldd	r22, Y+5	; 0x05
    3802:	7e 81       	ldd	r23, Y+6	; 0x06
    3804:	89 89       	ldd	r24, Y+17	; 0x11
    3806:	9a 89       	ldd	r25, Y+18	; 0x12
    3808:	8f 01       	movw	r16, r30
    380a:	0e 94 3b 1b 	call	0x3676	; 0x3676 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>
		
		completeMsg[completeMsgSize - 2] = checksumA;
    380e:	89 85       	ldd	r24, Y+9	; 0x09
    3810:	9a 85       	ldd	r25, Y+10	; 0x0a
    3812:	02 97       	sbiw	r24, 0x02	; 2
    3814:	4f 85       	ldd	r20, Y+15	; 0x0f
    3816:	2d 85       	ldd	r18, Y+13	; 0x0d
    3818:	3e 85       	ldd	r19, Y+14	; 0x0e
    381a:	82 0f       	add	r24, r18
    381c:	93 1f       	adc	r25, r19
    381e:	fc 01       	movw	r30, r24
    3820:	40 83       	st	Z, r20
		completeMsg[completeMsgSize - 1] = checksumB;
    3822:	89 85       	ldd	r24, Y+9	; 0x09
    3824:	9a 85       	ldd	r25, Y+10	; 0x0a
    3826:	01 97       	sbiw	r24, 0x01	; 1
    3828:	48 89       	ldd	r20, Y+16	; 0x10
    382a:	2d 85       	ldd	r18, Y+13	; 0x0d
    382c:	3e 85       	ldd	r19, Y+14	; 0x0e
    382e:	82 0f       	add	r24, r18
    3830:	93 1f       	adc	r25, r19
    3832:	fc 01       	movw	r30, r24
    3834:	40 83       	st	Z, r20
		
		//iterate over the bytes and transmit them, unless there was an error.
		for (int i = 0; i < completeMsgSize && status == 0; i++)
    3836:	1c 82       	std	Y+4, r1	; 0x04
    3838:	1b 82       	std	Y+3, r1	; 0x03
    383a:	23 c0       	rjmp	.+70     	; 0x3882 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x162>
		{
			status = serialDriver->transmitByte(completeMsg[i]);
    383c:	89 89       	ldd	r24, Y+17	; 0x11
    383e:	9a 89       	ldd	r25, Y+18	; 0x12
    3840:	fc 01       	movw	r30, r24
    3842:	80 81       	ld	r24, Z
    3844:	91 81       	ldd	r25, Z+1	; 0x01
    3846:	fc 01       	movw	r30, r24
    3848:	80 81       	ld	r24, Z
    384a:	91 81       	ldd	r25, Z+1	; 0x01
    384c:	06 96       	adiw	r24, 0x06	; 6
    384e:	fc 01       	movw	r30, r24
    3850:	20 81       	ld	r18, Z
    3852:	31 81       	ldd	r19, Z+1	; 0x01
    3854:	4d 85       	ldd	r20, Y+13	; 0x0d
    3856:	5e 85       	ldd	r21, Y+14	; 0x0e
    3858:	8b 81       	ldd	r24, Y+3	; 0x03
    385a:	9c 81       	ldd	r25, Y+4	; 0x04
    385c:	84 0f       	add	r24, r20
    385e:	95 1f       	adc	r25, r21
    3860:	fc 01       	movw	r30, r24
    3862:	40 81       	ld	r20, Z
    3864:	89 89       	ldd	r24, Y+17	; 0x11
    3866:	9a 89       	ldd	r25, Y+18	; 0x12
    3868:	fc 01       	movw	r30, r24
    386a:	80 81       	ld	r24, Z
    386c:	91 81       	ldd	r25, Z+1	; 0x01
    386e:	64 2f       	mov	r22, r20
    3870:	f9 01       	movw	r30, r18
    3872:	19 95       	eicall
    3874:	9a 83       	std	Y+2, r25	; 0x02
    3876:	89 83       	std	Y+1, r24	; 0x01
		
		completeMsg[completeMsgSize - 2] = checksumA;
		completeMsg[completeMsgSize - 1] = checksumB;
		
		//iterate over the bytes and transmit them, unless there was an error.
		for (int i = 0; i < completeMsgSize && status == 0; i++)
    3878:	8b 81       	ldd	r24, Y+3	; 0x03
    387a:	9c 81       	ldd	r25, Y+4	; 0x04
    387c:	01 96       	adiw	r24, 0x01	; 1
    387e:	9c 83       	std	Y+4, r25	; 0x04
    3880:	8b 83       	std	Y+3, r24	; 0x03
    3882:	2b 81       	ldd	r18, Y+3	; 0x03
    3884:	3c 81       	ldd	r19, Y+4	; 0x04
    3886:	89 85       	ldd	r24, Y+9	; 0x09
    3888:	9a 85       	ldd	r25, Y+10	; 0x0a
    388a:	28 17       	cp	r18, r24
    388c:	39 07       	cpc	r19, r25
    388e:	34 f4       	brge	.+12     	; 0x389c <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x17c>
    3890:	89 81       	ldd	r24, Y+1	; 0x01
    3892:	9a 81       	ldd	r25, Y+2	; 0x02
    3894:	00 97       	sbiw	r24, 0x00	; 0
    3896:	11 f4       	brne	.+4      	; 0x389c <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x17c>
    3898:	81 e0       	ldi	r24, 0x01	; 1
    389a:	01 c0       	rjmp	.+2      	; 0x389e <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x17e>
    389c:	80 e0       	ldi	r24, 0x00	; 0
    389e:	88 23       	and	r24, r24
    38a0:	69 f6       	brne	.-102    	; 0x383c <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x11c>
		{
			status = serialDriver->transmitByte(completeMsg[i]);
		}
		
		delete [] msgPayload;
    38a2:	8d 81       	ldd	r24, Y+5	; 0x05
    38a4:	9e 81       	ldd	r25, Y+6	; 0x06
    38a6:	00 97       	sbiw	r24, 0x00	; 0
    38a8:	21 f0       	breq	.+8      	; 0x38b2 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x192>
    38aa:	8d 81       	ldd	r24, Y+5	; 0x05
    38ac:	9e 81       	ldd	r25, Y+6	; 0x06
    38ae:	0e 94 4a 38 	call	0x7094	; 0x7094 <_ZdaPv>
		msgPayload = NULL;
    38b2:	1e 82       	std	Y+6, r1	; 0x06
    38b4:	1d 82       	std	Y+5, r1	; 0x05
    38b6:	0f b6       	in	r0, 0x3f	; 63
    38b8:	f8 94       	cli
    38ba:	de be       	out	0x3e, r13	; 62
    38bc:	0f be       	out	0x3f, r0	; 63
    38be:	cd be       	out	0x3d, r12	; 61
	}
	
	return status;
    38c0:	89 81       	ldd	r24, Y+1	; 0x01
    38c2:	9a 81       	ldd	r25, Y+2	; 0x02
}
    38c4:	0f b6       	in	r0, 0x3f	; 63
    38c6:	f8 94       	cli
    38c8:	fe be       	out	0x3e, r15	; 62
    38ca:	0f be       	out	0x3f, r0	; 63
    38cc:	ed be       	out	0x3d, r14	; 61
    38ce:	64 96       	adiw	r28, 0x14	; 20
    38d0:	0f b6       	in	r0, 0x3f	; 63
    38d2:	f8 94       	cli
    38d4:	de bf       	out	0x3e, r29	; 62
    38d6:	0f be       	out	0x3f, r0	; 63
    38d8:	cd bf       	out	0x3d, r28	; 61
    38da:	df 91       	pop	r29
    38dc:	cf 91       	pop	r28
    38de:	1f 91       	pop	r17
    38e0:	0f 91       	pop	r16
    38e2:	ff 90       	pop	r15
    38e4:	ef 90       	pop	r14
    38e6:	df 90       	pop	r13
    38e8:	cf 90       	pop	r12
    38ea:	08 95       	ret

000038ec <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE>:
 * a lot of data is constantly received before that timeout, and none of the data
 * is a sync byte, then this method will never stop receiving bytes and will
 * lock up the rest of the system. 
 */
int GroundControlStationInterface::receive(Message * &receivedMessage)
{
    38ec:	cf 92       	push	r12
    38ee:	df 92       	push	r13
    38f0:	ef 92       	push	r14
    38f2:	ff 92       	push	r15
    38f4:	0f 93       	push	r16
    38f6:	1f 93       	push	r17
    38f8:	cf 93       	push	r28
    38fa:	df 93       	push	r29
    38fc:	cd b7       	in	r28, 0x3d	; 61
    38fe:	de b7       	in	r29, 0x3e	; 62
    3900:	66 97       	sbiw	r28, 0x16	; 22
    3902:	0f b6       	in	r0, 0x3f	; 63
    3904:	f8 94       	cli
    3906:	de bf       	out	0x3e, r29	; 62
    3908:	0f be       	out	0x3f, r0	; 63
    390a:	cd bf       	out	0x3d, r28	; 61
    390c:	9c 8b       	std	Y+20, r25	; 0x14
    390e:	8b 8b       	std	Y+19, r24	; 0x13
    3910:	7e 8b       	std	Y+22, r23	; 0x16
    3912:	6d 8b       	std	Y+21, r22	; 0x15
	{
		receivedMessage = NULL;
	}
	
	return status;
    3914:	ed b6       	in	r14, 0x3d	; 61
    3916:	fe b6       	in	r15, 0x3e	; 62
 * is a sync byte, then this method will never stop receiving bytes and will
 * lock up the rest of the system. 
 */
int GroundControlStationInterface::receive(Message * &receivedMessage)
{
	int status = 0;
    3918:	1a 82       	std	Y+2, r1	; 0x02
    391a:	19 82       	std	Y+1, r1	; 0x01
	
    byte firstSyncByte = 0;
    391c:	1b 82       	std	Y+3, r1	; 0x03
    byte secondSyncByte = 0;
    391e:	1c 82       	std	Y+4, r1	; 0x04
    byte thirdSyncByte = 0;
    3920:	1d 86       	std	Y+13, r1	; 0x0d
	

	//Read until the sync bytes are received or we time out.
	//Throw away any 'garbage' bytes.
	while(!(firstSyncByte == SyncByte1 && secondSyncByte == SyncByte2 && thirdSyncByte == SyncByte3) && status == 0)
    3922:	1d c0       	rjmp	.+58     	; 0x395e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x72>
	{
		firstSyncByte = secondSyncByte;
    3924:	8c 81       	ldd	r24, Y+4	; 0x04
    3926:	8b 83       	std	Y+3, r24	; 0x03
		secondSyncByte = thirdSyncByte;
    3928:	8d 85       	ldd	r24, Y+13	; 0x0d
    392a:	8c 83       	std	Y+4, r24	; 0x04
		status = serialDriver->receiveByte(thirdSyncByte);
    392c:	8b 89       	ldd	r24, Y+19	; 0x13
    392e:	9c 89       	ldd	r25, Y+20	; 0x14
    3930:	fc 01       	movw	r30, r24
    3932:	80 81       	ld	r24, Z
    3934:	91 81       	ldd	r25, Z+1	; 0x01
    3936:	fc 01       	movw	r30, r24
    3938:	80 81       	ld	r24, Z
    393a:	91 81       	ldd	r25, Z+1	; 0x01
    393c:	08 96       	adiw	r24, 0x08	; 8
    393e:	fc 01       	movw	r30, r24
    3940:	20 81       	ld	r18, Z
    3942:	31 81       	ldd	r19, Z+1	; 0x01
    3944:	8b 89       	ldd	r24, Y+19	; 0x13
    3946:	9c 89       	ldd	r25, Y+20	; 0x14
    3948:	fc 01       	movw	r30, r24
    394a:	80 81       	ld	r24, Z
    394c:	91 81       	ldd	r25, Z+1	; 0x01
    394e:	ae 01       	movw	r20, r28
    3950:	43 5f       	subi	r20, 0xF3	; 243
    3952:	5f 4f       	sbci	r21, 0xFF	; 255
    3954:	ba 01       	movw	r22, r20
    3956:	f9 01       	movw	r30, r18
    3958:	19 95       	eicall
    395a:	9a 83       	std	Y+2, r25	; 0x02
    395c:	89 83       	std	Y+1, r24	; 0x01
    byte thirdSyncByte = 0;
	

	//Read until the sync bytes are received or we time out.
	//Throw away any 'garbage' bytes.
	while(!(firstSyncByte == SyncByte1 && secondSyncByte == SyncByte2 && thirdSyncByte == SyncByte3) && status == 0)
    395e:	8b 81       	ldd	r24, Y+3	; 0x03
    3960:	85 3b       	cpi	r24, 0xB5	; 181
    3962:	31 f4       	brne	.+12     	; 0x3970 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x84>
    3964:	8c 81       	ldd	r24, Y+4	; 0x04
    3966:	82 36       	cpi	r24, 0x62	; 98
    3968:	19 f4       	brne	.+6      	; 0x3970 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x84>
    396a:	8d 85       	ldd	r24, Y+13	; 0x0d
    396c:	87 3d       	cpi	r24, 0xD7	; 215
    396e:	31 f0       	breq	.+12     	; 0x397c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x90>
    3970:	89 81       	ldd	r24, Y+1	; 0x01
    3972:	9a 81       	ldd	r25, Y+2	; 0x02
    3974:	00 97       	sbiw	r24, 0x00	; 0
    3976:	11 f4       	brne	.+4      	; 0x397c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x90>
    3978:	81 e0       	ldi	r24, 0x01	; 1
    397a:	01 c0       	rjmp	.+2      	; 0x397e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x92>
    397c:	80 e0       	ldi	r24, 0x00	; 0
    397e:	88 23       	and	r24, r24
    3980:	89 f6       	brne	.-94     	; 0x3924 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x38>
		firstSyncByte = secondSyncByte;
		secondSyncByte = thirdSyncByte;
		status = serialDriver->receiveByte(thirdSyncByte);
	}
	
	if (status == 0)
    3982:	89 81       	ldd	r24, Y+1	; 0x01
    3984:	9a 81       	ldd	r25, Y+2	; 0x02
    3986:	00 97       	sbiw	r24, 0x00	; 0
    3988:	09 f0       	breq	.+2      	; 0x398c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xa0>
    398a:	f9 c0       	rjmp	.+498    	; 0x3b7e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x292>
	{
		//once we have found a valid message, get the message ID
		byte msgType = 0;
    398c:	1e 86       	std	Y+14, r1	; 0x0e
		
		status = serialDriver->receiveByte(msgType);
    398e:	8b 89       	ldd	r24, Y+19	; 0x13
    3990:	9c 89       	ldd	r25, Y+20	; 0x14
    3992:	fc 01       	movw	r30, r24
    3994:	80 81       	ld	r24, Z
    3996:	91 81       	ldd	r25, Z+1	; 0x01
    3998:	fc 01       	movw	r30, r24
    399a:	80 81       	ld	r24, Z
    399c:	91 81       	ldd	r25, Z+1	; 0x01
    399e:	08 96       	adiw	r24, 0x08	; 8
    39a0:	fc 01       	movw	r30, r24
    39a2:	20 81       	ld	r18, Z
    39a4:	31 81       	ldd	r19, Z+1	; 0x01
    39a6:	8b 89       	ldd	r24, Y+19	; 0x13
    39a8:	9c 89       	ldd	r25, Y+20	; 0x14
    39aa:	fc 01       	movw	r30, r24
    39ac:	80 81       	ld	r24, Z
    39ae:	91 81       	ldd	r25, Z+1	; 0x01
    39b0:	ae 01       	movw	r20, r28
    39b2:	42 5f       	subi	r20, 0xF2	; 242
    39b4:	5f 4f       	sbci	r21, 0xFF	; 255
    39b6:	ba 01       	movw	r22, r20
    39b8:	f9 01       	movw	r30, r18
    39ba:	19 95       	eicall
    39bc:	9a 83       	std	Y+2, r25	; 0x02
    39be:	89 83       	std	Y+1, r24	; 0x01
		
		if (status == 0)
    39c0:	89 81       	ldd	r24, Y+1	; 0x01
    39c2:	9a 81       	ldd	r25, Y+2	; 0x02
    39c4:	00 97       	sbiw	r24, 0x00	; 0
    39c6:	09 f0       	breq	.+2      	; 0x39ca <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xde>
    39c8:	da c0       	rjmp	.+436    	; 0x3b7e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x292>
		{
			int msgSize = 0;
    39ca:	1e 82       	std	Y+6, r1	; 0x06
    39cc:	1d 82       	std	Y+5, r1	; 0x05
			
			switch(msgType)
    39ce:	8e 85       	ldd	r24, Y+14	; 0x0e
    39d0:	88 2f       	mov	r24, r24
    39d2:	90 e0       	ldi	r25, 0x00	; 0
    39d4:	82 30       	cpi	r24, 0x02	; 2
    39d6:	91 05       	cpc	r25, r1
    39d8:	29 f4       	brne	.+10     	; 0x39e4 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xf8>
			{
				case SystemTelemetryMessage::MessageType:
					msgSize = SystemTelemetryMessage::MessageSize;
    39da:	89 ec       	ldi	r24, 0xC9	; 201
    39dc:	90 e0       	ldi	r25, 0x00	; 0
    39de:	9e 83       	std	Y+6, r25	; 0x06
    39e0:	8d 83       	std	Y+5, r24	; 0x05
					break;
    39e2:	05 c0       	rjmp	.+10     	; 0x39ee <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x102>
				default:
					//unrecognized message type.
					status = -2;
    39e4:	8e ef       	ldi	r24, 0xFE	; 254
    39e6:	9f ef       	ldi	r25, 0xFF	; 255
    39e8:	9a 83       	std	Y+2, r25	; 0x02
    39ea:	89 83       	std	Y+1, r24	; 0x01
					break;
    39ec:	00 00       	nop
			}
			
			if (status == 0)
    39ee:	89 81       	ldd	r24, Y+1	; 0x01
    39f0:	9a 81       	ldd	r25, Y+2	; 0x02
    39f2:	00 97       	sbiw	r24, 0x00	; 0
    39f4:	09 f0       	breq	.+2      	; 0x39f8 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x10c>
    39f6:	c3 c0       	rjmp	.+390    	; 0x3b7e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x292>
    39f8:	8d b7       	in	r24, 0x3d	; 61
    39fa:	9e b7       	in	r25, 0x3e	; 62
    39fc:	6c 01       	movw	r12, r24
			{
				byte messagePayload[msgSize];
    39fe:	8d 81       	ldd	r24, Y+5	; 0x05
    3a00:	9e 81       	ldd	r25, Y+6	; 0x06
    3a02:	01 97       	sbiw	r24, 0x01	; 1
    3a04:	9a 87       	std	Y+10, r25	; 0x0a
    3a06:	89 87       	std	Y+9, r24	; 0x09
    3a08:	01 96       	adiw	r24, 0x01	; 1
    3a0a:	2d b7       	in	r18, 0x3d	; 61
    3a0c:	3e b7       	in	r19, 0x3e	; 62
    3a0e:	28 1b       	sub	r18, r24
    3a10:	39 0b       	sbc	r19, r25
    3a12:	0f b6       	in	r0, 0x3f	; 63
    3a14:	f8 94       	cli
    3a16:	3e bf       	out	0x3e, r19	; 62
    3a18:	0f be       	out	0x3f, r0	; 63
    3a1a:	2d bf       	out	0x3d, r18	; 61
    3a1c:	8d b7       	in	r24, 0x3d	; 61
    3a1e:	9e b7       	in	r25, 0x3e	; 62
    3a20:	01 96       	adiw	r24, 0x01	; 1
    3a22:	9c 87       	std	Y+12, r25	; 0x0c
    3a24:	8b 87       	std	Y+11, r24	; 0x0b
							
				messagePayload[0] = msgType;
    3a26:	2e 85       	ldd	r18, Y+14	; 0x0e
    3a28:	8b 85       	ldd	r24, Y+11	; 0x0b
    3a2a:	9c 85       	ldd	r25, Y+12	; 0x0c
    3a2c:	fc 01       	movw	r30, r24
    3a2e:	20 83       	st	Z, r18
							
				//Read the bytes in the payload of the message.
				//skip the first position since thats where the message type is located.
				for (int i = 1; i < msgSize && status == 0; i++)
    3a30:	81 e0       	ldi	r24, 0x01	; 1
    3a32:	90 e0       	ldi	r25, 0x00	; 0
    3a34:	98 87       	std	Y+8, r25	; 0x08
    3a36:	8f 83       	std	Y+7, r24	; 0x07
    3a38:	21 c0       	rjmp	.+66     	; 0x3a7c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x190>
				{
					status = serialDriver->receiveByte(messagePayload[i]);
    3a3a:	8b 89       	ldd	r24, Y+19	; 0x13
    3a3c:	9c 89       	ldd	r25, Y+20	; 0x14
    3a3e:	fc 01       	movw	r30, r24
    3a40:	80 81       	ld	r24, Z
    3a42:	91 81       	ldd	r25, Z+1	; 0x01
    3a44:	fc 01       	movw	r30, r24
    3a46:	80 81       	ld	r24, Z
    3a48:	91 81       	ldd	r25, Z+1	; 0x01
    3a4a:	08 96       	adiw	r24, 0x08	; 8
    3a4c:	fc 01       	movw	r30, r24
    3a4e:	20 81       	ld	r18, Z
    3a50:	31 81       	ldd	r19, Z+1	; 0x01
    3a52:	4b 85       	ldd	r20, Y+11	; 0x0b
    3a54:	5c 85       	ldd	r21, Y+12	; 0x0c
    3a56:	8f 81       	ldd	r24, Y+7	; 0x07
    3a58:	98 85       	ldd	r25, Y+8	; 0x08
    3a5a:	48 0f       	add	r20, r24
    3a5c:	59 1f       	adc	r21, r25
    3a5e:	8b 89       	ldd	r24, Y+19	; 0x13
    3a60:	9c 89       	ldd	r25, Y+20	; 0x14
    3a62:	fc 01       	movw	r30, r24
    3a64:	80 81       	ld	r24, Z
    3a66:	91 81       	ldd	r25, Z+1	; 0x01
    3a68:	ba 01       	movw	r22, r20
    3a6a:	f9 01       	movw	r30, r18
    3a6c:	19 95       	eicall
    3a6e:	9a 83       	std	Y+2, r25	; 0x02
    3a70:	89 83       	std	Y+1, r24	; 0x01
							
				messagePayload[0] = msgType;
							
				//Read the bytes in the payload of the message.
				//skip the first position since thats where the message type is located.
				for (int i = 1; i < msgSize && status == 0; i++)
    3a72:	8f 81       	ldd	r24, Y+7	; 0x07
    3a74:	98 85       	ldd	r25, Y+8	; 0x08
    3a76:	01 96       	adiw	r24, 0x01	; 1
    3a78:	98 87       	std	Y+8, r25	; 0x08
    3a7a:	8f 83       	std	Y+7, r24	; 0x07
    3a7c:	2f 81       	ldd	r18, Y+7	; 0x07
    3a7e:	38 85       	ldd	r19, Y+8	; 0x08
    3a80:	8d 81       	ldd	r24, Y+5	; 0x05
    3a82:	9e 81       	ldd	r25, Y+6	; 0x06
    3a84:	28 17       	cp	r18, r24
    3a86:	39 07       	cpc	r19, r25
    3a88:	34 f4       	brge	.+12     	; 0x3a96 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1aa>
    3a8a:	89 81       	ldd	r24, Y+1	; 0x01
    3a8c:	9a 81       	ldd	r25, Y+2	; 0x02
    3a8e:	00 97       	sbiw	r24, 0x00	; 0
    3a90:	11 f4       	brne	.+4      	; 0x3a96 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1aa>
    3a92:	81 e0       	ldi	r24, 0x01	; 1
    3a94:	01 c0       	rjmp	.+2      	; 0x3a98 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1ac>
    3a96:	80 e0       	ldi	r24, 0x00	; 0
    3a98:	88 23       	and	r24, r24
    3a9a:	79 f6       	brne	.-98     	; 0x3a3a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x14e>
				{
					status = serialDriver->receiveByte(messagePayload[i]);
				}
							
				if (status == 0)
    3a9c:	89 81       	ldd	r24, Y+1	; 0x01
    3a9e:	9a 81       	ldd	r25, Y+2	; 0x02
    3aa0:	00 97       	sbiw	r24, 0x00	; 0
    3aa2:	09 f0       	breq	.+2      	; 0x3aa6 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1ba>
    3aa4:	67 c0       	rjmp	.+206    	; 0x3b74 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x288>
				{
					//Read the two checksum bytes
					byte messageChecksumA = 0;
    3aa6:	1f 86       	std	Y+15, r1	; 0x0f
					byte messageChecksumB = 0;
    3aa8:	18 8a       	std	Y+16, r1	; 0x10
					byte calculatedChecksumA = 0;
    3aaa:	19 8a       	std	Y+17, r1	; 0x11
					byte calculatedChecksumB = 0;
    3aac:	1a 8a       	std	Y+18, r1	; 0x12
								
					//Note: status is getting overwritten here.
					status = serialDriver->receiveByte(messageChecksumA);
    3aae:	8b 89       	ldd	r24, Y+19	; 0x13
    3ab0:	9c 89       	ldd	r25, Y+20	; 0x14
    3ab2:	fc 01       	movw	r30, r24
    3ab4:	80 81       	ld	r24, Z
    3ab6:	91 81       	ldd	r25, Z+1	; 0x01
    3ab8:	fc 01       	movw	r30, r24
    3aba:	80 81       	ld	r24, Z
    3abc:	91 81       	ldd	r25, Z+1	; 0x01
    3abe:	08 96       	adiw	r24, 0x08	; 8
    3ac0:	fc 01       	movw	r30, r24
    3ac2:	20 81       	ld	r18, Z
    3ac4:	31 81       	ldd	r19, Z+1	; 0x01
    3ac6:	8b 89       	ldd	r24, Y+19	; 0x13
    3ac8:	9c 89       	ldd	r25, Y+20	; 0x14
    3aca:	fc 01       	movw	r30, r24
    3acc:	80 81       	ld	r24, Z
    3ace:	91 81       	ldd	r25, Z+1	; 0x01
    3ad0:	ae 01       	movw	r20, r28
    3ad2:	41 5f       	subi	r20, 0xF1	; 241
    3ad4:	5f 4f       	sbci	r21, 0xFF	; 255
    3ad6:	ba 01       	movw	r22, r20
    3ad8:	f9 01       	movw	r30, r18
    3ada:	19 95       	eicall
    3adc:	9a 83       	std	Y+2, r25	; 0x02
    3ade:	89 83       	std	Y+1, r24	; 0x01
					status = serialDriver->receiveByte(messageChecksumB);
    3ae0:	8b 89       	ldd	r24, Y+19	; 0x13
    3ae2:	9c 89       	ldd	r25, Y+20	; 0x14
    3ae4:	fc 01       	movw	r30, r24
    3ae6:	80 81       	ld	r24, Z
    3ae8:	91 81       	ldd	r25, Z+1	; 0x01
    3aea:	fc 01       	movw	r30, r24
    3aec:	80 81       	ld	r24, Z
    3aee:	91 81       	ldd	r25, Z+1	; 0x01
    3af0:	08 96       	adiw	r24, 0x08	; 8
    3af2:	fc 01       	movw	r30, r24
    3af4:	20 81       	ld	r18, Z
    3af6:	31 81       	ldd	r19, Z+1	; 0x01
    3af8:	8b 89       	ldd	r24, Y+19	; 0x13
    3afa:	9c 89       	ldd	r25, Y+20	; 0x14
    3afc:	fc 01       	movw	r30, r24
    3afe:	80 81       	ld	r24, Z
    3b00:	91 81       	ldd	r25, Z+1	; 0x01
    3b02:	ae 01       	movw	r20, r28
    3b04:	40 5f       	subi	r20, 0xF0	; 240
    3b06:	5f 4f       	sbci	r21, 0xFF	; 255
    3b08:	ba 01       	movw	r22, r20
    3b0a:	f9 01       	movw	r30, r18
    3b0c:	19 95       	eicall
    3b0e:	9a 83       	std	Y+2, r25	; 0x02
    3b10:	89 83       	std	Y+1, r24	; 0x01
								
					//Generate checksum for the message			
					calculateChecksum(messagePayload, msgSize, calculatedChecksumA, calculatedChecksumB);
    3b12:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b14:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b16:	fe 01       	movw	r30, r28
    3b18:	72 96       	adiw	r30, 0x12	; 18
    3b1a:	9e 01       	movw	r18, r28
    3b1c:	2f 5e       	subi	r18, 0xEF	; 239
    3b1e:	3f 4f       	sbci	r19, 0xFF	; 255
    3b20:	4d 81       	ldd	r20, Y+5	; 0x05
    3b22:	5e 81       	ldd	r21, Y+6	; 0x06
    3b24:	8b 89       	ldd	r24, Y+19	; 0x13
    3b26:	9c 89       	ldd	r25, Y+20	; 0x14
    3b28:	8f 01       	movw	r16, r30
    3b2a:	0e 94 3b 1b 	call	0x3676	; 0x3676 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>
								
					//verify that the checksum is correct
					if (calculatedChecksumA == messageChecksumA && calculatedChecksumB == messageChecksumB)
    3b2e:	99 89       	ldd	r25, Y+17	; 0x11
    3b30:	8f 85       	ldd	r24, Y+15	; 0x0f
    3b32:	98 17       	cp	r25, r24
    3b34:	d9 f4       	brne	.+54     	; 0x3b6c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x280>
    3b36:	9a 89       	ldd	r25, Y+18	; 0x12
    3b38:	88 89       	ldd	r24, Y+16	; 0x10
    3b3a:	98 17       	cp	r25, r24
    3b3c:	b9 f4       	brne	.+46     	; 0x3b6c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x280>
					{
						//build the message
						switch(msgType)
    3b3e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3b40:	88 2f       	mov	r24, r24
    3b42:	90 e0       	ldi	r25, 0x00	; 0
    3b44:	82 30       	cpi	r24, 0x02	; 2
    3b46:	91 05       	cpc	r25, r1
    3b48:	59 f4       	brne	.+22     	; 0x3b60 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x274>
						{
							case SystemTelemetryMessage::MessageType:
								receivedMessage = SystemTelemetryMessage::buildMessageSt(messagePayload);
    3b4a:	8b 85       	ldd	r24, Y+11	; 0x0b
    3b4c:	9c 85       	ldd	r25, Y+12	; 0x0c
    3b4e:	0e 94 2a 2a 	call	0x5454	; 0x5454 <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh>
    3b52:	9c 01       	movw	r18, r24
    3b54:	8d 89       	ldd	r24, Y+21	; 0x15
    3b56:	9e 89       	ldd	r25, Y+22	; 0x16
    3b58:	fc 01       	movw	r30, r24
    3b5a:	31 83       	std	Z+1, r19	; 0x01
    3b5c:	20 83       	st	Z, r18
							break;
    3b5e:	05 c0       	rjmp	.+10     	; 0x3b6a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x27e>
							default:
								//unrecognized message type.
								status = -2;
    3b60:	8e ef       	ldi	r24, 0xFE	; 254
    3b62:	9f ef       	ldi	r25, 0xFF	; 255
    3b64:	9a 83       	std	Y+2, r25	; 0x02
    3b66:	89 83       	std	Y+1, r24	; 0x01
							break;
    3b68:	00 00       	nop
								
					//verify that the checksum is correct
					if (calculatedChecksumA == messageChecksumA && calculatedChecksumB == messageChecksumB)
					{
						//build the message
						switch(msgType)
    3b6a:	04 c0       	rjmp	.+8      	; 0x3b74 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x288>
							break;
						}
					}else
					{
						//checksum mismatch
						status = -3;
    3b6c:	8d ef       	ldi	r24, 0xFD	; 253
    3b6e:	9f ef       	ldi	r25, 0xFF	; 255
    3b70:	9a 83       	std	Y+2, r25	; 0x02
    3b72:	89 83       	std	Y+1, r24	; 0x01
    3b74:	0f b6       	in	r0, 0x3f	; 63
    3b76:	f8 94       	cli
    3b78:	de be       	out	0x3e, r13	; 62
    3b7a:	0f be       	out	0x3f, r0	; 63
    3b7c:	cd be       	out	0x3d, r12	; 61
				}
			}
		}
	}
	
	if (status != 0)
    3b7e:	89 81       	ldd	r24, Y+1	; 0x01
    3b80:	9a 81       	ldd	r25, Y+2	; 0x02
    3b82:	00 97       	sbiw	r24, 0x00	; 0
    3b84:	29 f0       	breq	.+10     	; 0x3b90 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x2a4>
	{
		receivedMessage = NULL;
    3b86:	8d 89       	ldd	r24, Y+21	; 0x15
    3b88:	9e 89       	ldd	r25, Y+22	; 0x16
    3b8a:	fc 01       	movw	r30, r24
    3b8c:	11 82       	std	Z+1, r1	; 0x01
    3b8e:	10 82       	st	Z, r1
	}
	
	return status;
    3b90:	89 81       	ldd	r24, Y+1	; 0x01
    3b92:	9a 81       	ldd	r25, Y+2	; 0x02
    3b94:	0f b6       	in	r0, 0x3f	; 63
    3b96:	f8 94       	cli
    3b98:	fe be       	out	0x3e, r15	; 62
    3b9a:	0f be       	out	0x3f, r0	; 63
    3b9c:	ed be       	out	0x3d, r14	; 61
    3b9e:	66 96       	adiw	r28, 0x16	; 22
    3ba0:	0f b6       	in	r0, 0x3f	; 63
    3ba2:	f8 94       	cli
    3ba4:	de bf       	out	0x3e, r29	; 62
    3ba6:	0f be       	out	0x3f, r0	; 63
    3ba8:	cd bf       	out	0x3d, r28	; 61
    3baa:	df 91       	pop	r29
    3bac:	cf 91       	pop	r28
    3bae:	1f 91       	pop	r17
    3bb0:	0f 91       	pop	r16
    3bb2:	ff 90       	pop	r15
    3bb4:	ef 90       	pop	r14
    3bb6:	df 90       	pop	r13
    3bb8:	cf 90       	pop	r12
    3bba:	08 95       	ret

00003bbc <_ZN10helicopter8messages7MessageD1Ev>:
					msgType(msgType), msgSize(msgSize)
				{
					
				}
				
				virtual ~Message()
    3bbc:	cf 93       	push	r28
    3bbe:	df 93       	push	r29
    3bc0:	1f 92       	push	r1
    3bc2:	1f 92       	push	r1
    3bc4:	cd b7       	in	r28, 0x3d	; 61
    3bc6:	de b7       	in	r29, 0x3e	; 62
    3bc8:	9a 83       	std	Y+2, r25	; 0x02
    3bca:	89 83       	std	Y+1, r24	; 0x01
				{
    3bcc:	89 81       	ldd	r24, Y+1	; 0x01
    3bce:	9a 81       	ldd	r25, Y+2	; 0x02
    3bd0:	20 e3       	ldi	r18, 0x30	; 48
    3bd2:	32 e0       	ldi	r19, 0x02	; 2
    3bd4:	fc 01       	movw	r30, r24
    3bd6:	31 83       	std	Z+1, r19	; 0x01
    3bd8:	20 83       	st	Z, r18
					
				}
    3bda:	80 e0       	ldi	r24, 0x00	; 0
    3bdc:	90 e0       	ldi	r25, 0x00	; 0
    3bde:	81 70       	andi	r24, 0x01	; 1
    3be0:	99 27       	eor	r25, r25
    3be2:	00 97       	sbiw	r24, 0x00	; 0
    3be4:	21 f0       	breq	.+8      	; 0x3bee <_ZN10helicopter8messages7MessageD1Ev+0x32>
    3be6:	89 81       	ldd	r24, Y+1	; 0x01
    3be8:	9a 81       	ldd	r25, Y+2	; 0x02
    3bea:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    3bee:	0f 90       	pop	r0
    3bf0:	0f 90       	pop	r0
    3bf2:	df 91       	pop	r29
    3bf4:	cf 91       	pop	r28
    3bf6:	08 95       	ret

00003bf8 <_ZN10helicopter8messages7MessageD0Ev>:
					msgType(msgType), msgSize(msgSize)
				{
					
				}
				
				virtual ~Message()
    3bf8:	cf 93       	push	r28
    3bfa:	df 93       	push	r29
    3bfc:	1f 92       	push	r1
    3bfe:	1f 92       	push	r1
    3c00:	cd b7       	in	r28, 0x3d	; 61
    3c02:	de b7       	in	r29, 0x3e	; 62
    3c04:	9a 83       	std	Y+2, r25	; 0x02
    3c06:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    3c08:	89 81       	ldd	r24, Y+1	; 0x01
    3c0a:	9a 81       	ldd	r25, Y+2	; 0x02
    3c0c:	0e 94 de 1d 	call	0x3bbc	; 0x3bbc <_ZN10helicopter8messages7MessageD1Ev>
    3c10:	89 81       	ldd	r24, Y+1	; 0x01
    3c12:	9a 81       	ldd	r25, Y+2	; 0x02
    3c14:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    3c18:	0f 90       	pop	r0
    3c1a:	0f 90       	pop	r0
    3c1c:	df 91       	pop	r29
    3c1e:	cf 91       	pop	r28
    3c20:	08 95       	ret

00003c22 <_ZN10helicopter8messages7Message14getMessageSizeEv>:
	* Returns the number of bytes in this message. This should
	* be the payload of the message, and not underlying protocol
	* information (sync bytes and checksum bytes)
	*/
int Message::getMessageSize()
{
    3c22:	cf 93       	push	r28
    3c24:	df 93       	push	r29
    3c26:	1f 92       	push	r1
    3c28:	1f 92       	push	r1
    3c2a:	cd b7       	in	r28, 0x3d	; 61
    3c2c:	de b7       	in	r29, 0x3e	; 62
    3c2e:	9a 83       	std	Y+2, r25	; 0x02
    3c30:	89 83       	std	Y+1, r24	; 0x01
	return msgSize;
    3c32:	89 81       	ldd	r24, Y+1	; 0x01
    3c34:	9a 81       	ldd	r25, Y+2	; 0x02
    3c36:	fc 01       	movw	r30, r24
    3c38:	83 81       	ldd	r24, Z+3	; 0x03
    3c3a:	94 81       	ldd	r25, Z+4	; 0x04
}
    3c3c:	0f 90       	pop	r0
    3c3e:	0f 90       	pop	r0
    3c40:	df 91       	pop	r29
    3c42:	cf 91       	pop	r28
    3c44:	08 95       	ret

00003c46 <_ZN10helicopter8messages7Message8getBytesEv>:
				
/**
	* Returns the data in this message in raw byte format for transmission.
	*/
byte *Message::getBytes()
{
    3c46:	cf 93       	push	r28
    3c48:	df 93       	push	r29
    3c4a:	1f 92       	push	r1
    3c4c:	1f 92       	push	r1
    3c4e:	cd b7       	in	r28, 0x3d	; 61
    3c50:	de b7       	in	r29, 0x3e	; 62
    3c52:	9a 83       	std	Y+2, r25	; 0x02
    3c54:	89 83       	std	Y+1, r24	; 0x01
	return NULL;
    3c56:	80 e0       	ldi	r24, 0x00	; 0
    3c58:	90 e0       	ldi	r25, 0x00	; 0
}
    3c5a:	0f 90       	pop	r0
    3c5c:	0f 90       	pop	r0
    3c5e:	df 91       	pop	r29
    3c60:	cf 91       	pop	r28
    3c62:	08 95       	ret

00003c64 <_ZN10helicopter8messages7Message12buildMessageEPh>:
	* for creating a message object given a stream of bytes.
	* @param message The bytes in the payload of the message which should be used
	* to construct a message object.
	*/
void Message::buildMessage(byte *message)
{
    3c64:	cf 93       	push	r28
    3c66:	df 93       	push	r29
    3c68:	00 d0       	rcall	.+0      	; 0x3c6a <_ZN10helicopter8messages7Message12buildMessageEPh+0x6>
    3c6a:	1f 92       	push	r1
    3c6c:	cd b7       	in	r28, 0x3d	; 61
    3c6e:	de b7       	in	r29, 0x3e	; 62
    3c70:	9a 83       	std	Y+2, r25	; 0x02
    3c72:	89 83       	std	Y+1, r24	; 0x01
    3c74:	7c 83       	std	Y+4, r23	; 0x04
    3c76:	6b 83       	std	Y+3, r22	; 0x03
	//noop. subclass should implement this.
    3c78:	0f 90       	pop	r0
    3c7a:	0f 90       	pop	r0
    3c7c:	0f 90       	pop	r0
    3c7e:	0f 90       	pop	r0
    3c80:	df 91       	pop	r29
    3c82:	cf 91       	pop	r28
    3c84:	08 95       	ret

00003c86 <_ZN10helicopter8messages7MessageC1Ehi>:
			
				/**
				 * @param msgType The identifier of this message
				 * @param msgSize The size in bytes of this message
				 */
				Message (byte msgType, int msgSize):
    3c86:	cf 93       	push	r28
    3c88:	df 93       	push	r29
    3c8a:	00 d0       	rcall	.+0      	; 0x3c8c <_ZN10helicopter8messages7MessageC1Ehi+0x6>
    3c8c:	1f 92       	push	r1
    3c8e:	1f 92       	push	r1
    3c90:	cd b7       	in	r28, 0x3d	; 61
    3c92:	de b7       	in	r29, 0x3e	; 62
    3c94:	9a 83       	std	Y+2, r25	; 0x02
    3c96:	89 83       	std	Y+1, r24	; 0x01
    3c98:	6b 83       	std	Y+3, r22	; 0x03
    3c9a:	5d 83       	std	Y+5, r21	; 0x05
    3c9c:	4c 83       	std	Y+4, r20	; 0x04
					msgType(msgType), msgSize(msgSize)
    3c9e:	89 81       	ldd	r24, Y+1	; 0x01
    3ca0:	9a 81       	ldd	r25, Y+2	; 0x02
    3ca2:	20 e3       	ldi	r18, 0x30	; 48
    3ca4:	32 e0       	ldi	r19, 0x02	; 2
    3ca6:	fc 01       	movw	r30, r24
    3ca8:	31 83       	std	Z+1, r19	; 0x01
    3caa:	20 83       	st	Z, r18
    3cac:	89 81       	ldd	r24, Y+1	; 0x01
    3cae:	9a 81       	ldd	r25, Y+2	; 0x02
    3cb0:	2b 81       	ldd	r18, Y+3	; 0x03
    3cb2:	fc 01       	movw	r30, r24
    3cb4:	22 83       	std	Z+2, r18	; 0x02
    3cb6:	89 81       	ldd	r24, Y+1	; 0x01
    3cb8:	9a 81       	ldd	r25, Y+2	; 0x02
    3cba:	2c 81       	ldd	r18, Y+4	; 0x04
    3cbc:	3d 81       	ldd	r19, Y+5	; 0x05
    3cbe:	fc 01       	movw	r30, r24
    3cc0:	34 83       	std	Z+4, r19	; 0x04
    3cc2:	23 83       	std	Z+3, r18	; 0x03
				{
					
				}
    3cc4:	0f 90       	pop	r0
    3cc6:	0f 90       	pop	r0
    3cc8:	0f 90       	pop	r0
    3cca:	0f 90       	pop	r0
    3ccc:	0f 90       	pop	r0
    3cce:	df 91       	pop	r29
    3cd0:	cf 91       	pop	r28
    3cd2:	08 95       	ret

00003cd4 <_ZN10helicopter8messages11SyncMessageC1Ev>:
				static const byte MessageType = 3;
							
				static const byte MessageSize =
					sizeof(msgType);
							
				SyncMessage(): Message(MessageType,MessageSize)
    3cd4:	cf 93       	push	r28
    3cd6:	df 93       	push	r29
    3cd8:	1f 92       	push	r1
    3cda:	1f 92       	push	r1
    3cdc:	cd b7       	in	r28, 0x3d	; 61
    3cde:	de b7       	in	r29, 0x3e	; 62
    3ce0:	9a 83       	std	Y+2, r25	; 0x02
    3ce2:	89 83       	std	Y+1, r24	; 0x01
    3ce4:	89 81       	ldd	r24, Y+1	; 0x01
    3ce6:	9a 81       	ldd	r25, Y+2	; 0x02
    3ce8:	41 e0       	ldi	r20, 0x01	; 1
    3cea:	50 e0       	ldi	r21, 0x00	; 0
    3cec:	63 e0       	ldi	r22, 0x03	; 3
    3cee:	0e 94 43 1e 	call	0x3c86	; 0x3c86 <_ZN10helicopter8messages7MessageC1Ehi>
    3cf2:	89 81       	ldd	r24, Y+1	; 0x01
    3cf4:	9a 81       	ldd	r25, Y+2	; 0x02
    3cf6:	2c e3       	ldi	r18, 0x3C	; 60
    3cf8:	32 e0       	ldi	r19, 0x02	; 2
    3cfa:	fc 01       	movw	r30, r24
    3cfc:	31 83       	std	Z+1, r19	; 0x01
    3cfe:	20 83       	st	Z, r18
				{
								
				}
    3d00:	0f 90       	pop	r0
    3d02:	0f 90       	pop	r0
    3d04:	df 91       	pop	r29
    3d06:	cf 91       	pop	r28
    3d08:	08 95       	ret

00003d0a <_ZN10helicopter8messages11SyncMessageD1Ev>:
				
				~SyncMessage()
    3d0a:	cf 93       	push	r28
    3d0c:	df 93       	push	r29
    3d0e:	1f 92       	push	r1
    3d10:	1f 92       	push	r1
    3d12:	cd b7       	in	r28, 0x3d	; 61
    3d14:	de b7       	in	r29, 0x3e	; 62
    3d16:	9a 83       	std	Y+2, r25	; 0x02
    3d18:	89 83       	std	Y+1, r24	; 0x01
				{
    3d1a:	89 81       	ldd	r24, Y+1	; 0x01
    3d1c:	9a 81       	ldd	r25, Y+2	; 0x02
    3d1e:	2c e3       	ldi	r18, 0x3C	; 60
    3d20:	32 e0       	ldi	r19, 0x02	; 2
    3d22:	fc 01       	movw	r30, r24
    3d24:	31 83       	std	Z+1, r19	; 0x01
    3d26:	20 83       	st	Z, r18
    3d28:	89 81       	ldd	r24, Y+1	; 0x01
    3d2a:	9a 81       	ldd	r25, Y+2	; 0x02
    3d2c:	0e 94 de 1d 	call	0x3bbc	; 0x3bbc <_ZN10helicopter8messages7MessageD1Ev>
					
				}
    3d30:	80 e0       	ldi	r24, 0x00	; 0
    3d32:	90 e0       	ldi	r25, 0x00	; 0
    3d34:	81 70       	andi	r24, 0x01	; 1
    3d36:	99 27       	eor	r25, r25
    3d38:	00 97       	sbiw	r24, 0x00	; 0
    3d3a:	21 f0       	breq	.+8      	; 0x3d44 <_ZN10helicopter8messages11SyncMessageD1Ev+0x3a>
    3d3c:	89 81       	ldd	r24, Y+1	; 0x01
    3d3e:	9a 81       	ldd	r25, Y+2	; 0x02
    3d40:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    3d44:	0f 90       	pop	r0
    3d46:	0f 90       	pop	r0
    3d48:	df 91       	pop	r29
    3d4a:	cf 91       	pop	r28
    3d4c:	08 95       	ret

00003d4e <_ZN10helicopter8messages11SyncMessageD0Ev>:
				SyncMessage(): Message(MessageType,MessageSize)
				{
								
				}
				
				~SyncMessage()
    3d4e:	cf 93       	push	r28
    3d50:	df 93       	push	r29
    3d52:	1f 92       	push	r1
    3d54:	1f 92       	push	r1
    3d56:	cd b7       	in	r28, 0x3d	; 61
    3d58:	de b7       	in	r29, 0x3e	; 62
    3d5a:	9a 83       	std	Y+2, r25	; 0x02
    3d5c:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    3d5e:	89 81       	ldd	r24, Y+1	; 0x01
    3d60:	9a 81       	ldd	r25, Y+2	; 0x02
    3d62:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <_ZN10helicopter8messages11SyncMessageD1Ev>
    3d66:	89 81       	ldd	r24, Y+1	; 0x01
    3d68:	9a 81       	ldd	r25, Y+2	; 0x02
    3d6a:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    3d6e:	0f 90       	pop	r0
    3d70:	0f 90       	pop	r0
    3d72:	df 91       	pop	r29
    3d74:	cf 91       	pop	r28
    3d76:	08 95       	ret

00003d78 <_ZN10helicopter8messages11SyncMessage8getBytesEv>:

using namespace helicopter::messages;


byte *SyncMessage::getBytes()
{
    3d78:	cf 93       	push	r28
    3d7a:	df 93       	push	r29
    3d7c:	00 d0       	rcall	.+0      	; 0x3d7e <_ZN10helicopter8messages11SyncMessage8getBytesEv+0x6>
    3d7e:	00 d0       	rcall	.+0      	; 0x3d80 <_ZN10helicopter8messages11SyncMessage8getBytesEv+0x8>
    3d80:	cd b7       	in	r28, 0x3d	; 61
    3d82:	de b7       	in	r29, 0x3e	; 62
    3d84:	9e 83       	std	Y+6, r25	; 0x06
    3d86:	8d 83       	std	Y+5, r24	; 0x05
	byte *msg = new byte[MessageSize];
    3d88:	81 e0       	ldi	r24, 0x01	; 1
    3d8a:	90 e0       	ldi	r25, 0x00	; 0
    3d8c:	0e 94 39 38 	call	0x7072	; 0x7072 <_Znaj>
    3d90:	9a 83       	std	Y+2, r25	; 0x02
    3d92:	89 83       	std	Y+1, r24	; 0x01
	byte *msgPtr = msg;
    3d94:	89 81       	ldd	r24, Y+1	; 0x01
    3d96:	9a 81       	ldd	r25, Y+2	; 0x02
    3d98:	9c 83       	std	Y+4, r25	; 0x04
    3d9a:	8b 83       	std	Y+3, r24	; 0x03
	msgPtr[0] = this->msgType;
    3d9c:	8d 81       	ldd	r24, Y+5	; 0x05
    3d9e:	9e 81       	ldd	r25, Y+6	; 0x06
    3da0:	fc 01       	movw	r30, r24
    3da2:	22 81       	ldd	r18, Z+2	; 0x02
    3da4:	8b 81       	ldd	r24, Y+3	; 0x03
    3da6:	9c 81       	ldd	r25, Y+4	; 0x04
    3da8:	fc 01       	movw	r30, r24
    3daa:	20 83       	st	Z, r18
	
	return msg;
    3dac:	89 81       	ldd	r24, Y+1	; 0x01
    3dae:	9a 81       	ldd	r25, Y+2	; 0x02
}
    3db0:	26 96       	adiw	r28, 0x06	; 6
    3db2:	0f b6       	in	r0, 0x3f	; 63
    3db4:	f8 94       	cli
    3db6:	de bf       	out	0x3e, r29	; 62
    3db8:	0f be       	out	0x3f, r0	; 63
    3dba:	cd bf       	out	0x3d, r28	; 61
    3dbc:	df 91       	pop	r29
    3dbe:	cf 91       	pop	r28
    3dc0:	08 95       	ret

00003dc2 <_ZN10helicopter8messages11SyncMessage12buildMessageEPh>:

void SyncMessage::buildMessage(byte *message)
{
    3dc2:	cf 93       	push	r28
    3dc4:	df 93       	push	r29
    3dc6:	00 d0       	rcall	.+0      	; 0x3dc8 <_ZN10helicopter8messages11SyncMessage12buildMessageEPh+0x6>
    3dc8:	1f 92       	push	r1
    3dca:	cd b7       	in	r28, 0x3d	; 61
    3dcc:	de b7       	in	r29, 0x3e	; 62
    3dce:	9a 83       	std	Y+2, r25	; 0x02
    3dd0:	89 83       	std	Y+1, r24	; 0x01
    3dd2:	7c 83       	std	Y+4, r23	; 0x04
    3dd4:	6b 83       	std	Y+3, r22	; 0x03
	if (message != NULL)
    3dd6:	8b 81       	ldd	r24, Y+3	; 0x03
    3dd8:	9c 81       	ldd	r25, Y+4	; 0x04
    3dda:	00 97       	sbiw	r24, 0x00	; 0
    3ddc:	41 f0       	breq	.+16     	; 0x3dee <_ZN10helicopter8messages11SyncMessage12buildMessageEPh+0x2c>
	{
		msgType = message[0];
    3dde:	8b 81       	ldd	r24, Y+3	; 0x03
    3de0:	9c 81       	ldd	r25, Y+4	; 0x04
    3de2:	fc 01       	movw	r30, r24
    3de4:	20 81       	ld	r18, Z
    3de6:	89 81       	ldd	r24, Y+1	; 0x01
    3de8:	9a 81       	ldd	r25, Y+2	; 0x02
    3dea:	fc 01       	movw	r30, r24
    3dec:	22 83       	std	Z+2, r18	; 0x02
	}
}
    3dee:	0f 90       	pop	r0
    3df0:	0f 90       	pop	r0
    3df2:	0f 90       	pop	r0
    3df4:	0f 90       	pop	r0
    3df6:	df 91       	pop	r29
    3df8:	cf 91       	pop	r28
    3dfa:	08 95       	ret

00003dfc <_ZN10helicopter8messages7Message6encodeERPhRl>:
				
				/**
				 * Mem copies the value into the buffer pointer then increments
				 * the pointer location by the size of the value copied.
				 */
				void encode (byte *&buffPtr, long &val)
    3dfc:	cf 93       	push	r28
    3dfe:	df 93       	push	r29
    3e00:	00 d0       	rcall	.+0      	; 0x3e02 <_ZN10helicopter8messages7Message6encodeERPhRl+0x6>
    3e02:	00 d0       	rcall	.+0      	; 0x3e04 <_ZN10helicopter8messages7Message6encodeERPhRl+0x8>
    3e04:	cd b7       	in	r28, 0x3d	; 61
    3e06:	de b7       	in	r29, 0x3e	; 62
    3e08:	9a 83       	std	Y+2, r25	; 0x02
    3e0a:	89 83       	std	Y+1, r24	; 0x01
    3e0c:	7c 83       	std	Y+4, r23	; 0x04
    3e0e:	6b 83       	std	Y+3, r22	; 0x03
    3e10:	5e 83       	std	Y+6, r21	; 0x06
    3e12:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(buffPtr, &val, sizeof(val));
    3e14:	8b 81       	ldd	r24, Y+3	; 0x03
    3e16:	9c 81       	ldd	r25, Y+4	; 0x04
    3e18:	fc 01       	movw	r30, r24
    3e1a:	80 81       	ld	r24, Z
    3e1c:	91 81       	ldd	r25, Z+1	; 0x01
    3e1e:	2d 81       	ldd	r18, Y+5	; 0x05
    3e20:	3e 81       	ldd	r19, Y+6	; 0x06
    3e22:	44 e0       	ldi	r20, 0x04	; 4
    3e24:	50 e0       	ldi	r21, 0x00	; 0
    3e26:	b9 01       	movw	r22, r18
    3e28:	0e 94 f8 43 	call	0x87f0	; 0x87f0 <memcpy>
					buffPtr += sizeof(val);
    3e2c:	8b 81       	ldd	r24, Y+3	; 0x03
    3e2e:	9c 81       	ldd	r25, Y+4	; 0x04
    3e30:	fc 01       	movw	r30, r24
    3e32:	80 81       	ld	r24, Z
    3e34:	91 81       	ldd	r25, Z+1	; 0x01
    3e36:	9c 01       	movw	r18, r24
    3e38:	2c 5f       	subi	r18, 0xFC	; 252
    3e3a:	3f 4f       	sbci	r19, 0xFF	; 255
    3e3c:	8b 81       	ldd	r24, Y+3	; 0x03
    3e3e:	9c 81       	ldd	r25, Y+4	; 0x04
    3e40:	fc 01       	movw	r30, r24
    3e42:	31 83       	std	Z+1, r19	; 0x01
    3e44:	20 83       	st	Z, r18
				}
    3e46:	26 96       	adiw	r28, 0x06	; 6
    3e48:	0f b6       	in	r0, 0x3f	; 63
    3e4a:	f8 94       	cli
    3e4c:	de bf       	out	0x3e, r29	; 62
    3e4e:	0f be       	out	0x3f, r0	; 63
    3e50:	cd bf       	out	0x3d, r28	; 61
    3e52:	df 91       	pop	r29
    3e54:	cf 91       	pop	r28
    3e56:	08 95       	ret

00003e58 <_ZN10helicopter8messages7Message6encodeERPhRf>:
				
				void encode (byte *&buffPtr, float &val)
    3e58:	cf 93       	push	r28
    3e5a:	df 93       	push	r29
    3e5c:	00 d0       	rcall	.+0      	; 0x3e5e <_ZN10helicopter8messages7Message6encodeERPhRf+0x6>
    3e5e:	00 d0       	rcall	.+0      	; 0x3e60 <_ZN10helicopter8messages7Message6encodeERPhRf+0x8>
    3e60:	cd b7       	in	r28, 0x3d	; 61
    3e62:	de b7       	in	r29, 0x3e	; 62
    3e64:	9a 83       	std	Y+2, r25	; 0x02
    3e66:	89 83       	std	Y+1, r24	; 0x01
    3e68:	7c 83       	std	Y+4, r23	; 0x04
    3e6a:	6b 83       	std	Y+3, r22	; 0x03
    3e6c:	5e 83       	std	Y+6, r21	; 0x06
    3e6e:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(buffPtr, &val, sizeof(val));
    3e70:	8b 81       	ldd	r24, Y+3	; 0x03
    3e72:	9c 81       	ldd	r25, Y+4	; 0x04
    3e74:	fc 01       	movw	r30, r24
    3e76:	80 81       	ld	r24, Z
    3e78:	91 81       	ldd	r25, Z+1	; 0x01
    3e7a:	2d 81       	ldd	r18, Y+5	; 0x05
    3e7c:	3e 81       	ldd	r19, Y+6	; 0x06
    3e7e:	44 e0       	ldi	r20, 0x04	; 4
    3e80:	50 e0       	ldi	r21, 0x00	; 0
    3e82:	b9 01       	movw	r22, r18
    3e84:	0e 94 f8 43 	call	0x87f0	; 0x87f0 <memcpy>
					buffPtr += sizeof(val);
    3e88:	8b 81       	ldd	r24, Y+3	; 0x03
    3e8a:	9c 81       	ldd	r25, Y+4	; 0x04
    3e8c:	fc 01       	movw	r30, r24
    3e8e:	80 81       	ld	r24, Z
    3e90:	91 81       	ldd	r25, Z+1	; 0x01
    3e92:	9c 01       	movw	r18, r24
    3e94:	2c 5f       	subi	r18, 0xFC	; 252
    3e96:	3f 4f       	sbci	r19, 0xFF	; 255
    3e98:	8b 81       	ldd	r24, Y+3	; 0x03
    3e9a:	9c 81       	ldd	r25, Y+4	; 0x04
    3e9c:	fc 01       	movw	r30, r24
    3e9e:	31 83       	std	Z+1, r19	; 0x01
    3ea0:	20 83       	st	Z, r18
				}				
    3ea2:	26 96       	adiw	r28, 0x06	; 6
    3ea4:	0f b6       	in	r0, 0x3f	; 63
    3ea6:	f8 94       	cli
    3ea8:	de bf       	out	0x3e, r29	; 62
    3eaa:	0f be       	out	0x3f, r0	; 63
    3eac:	cd bf       	out	0x3d, r28	; 61
    3eae:	df 91       	pop	r29
    3eb0:	cf 91       	pop	r28
    3eb2:	08 95       	ret

00003eb4 <_ZN10helicopter8messages7Message6encodeERPhRh>:
				{
					memcpy(buffPtr, &val, sizeof(val));
					buffPtr += sizeof(val);
				}		
				
				void encode (byte *&buffPtr, byte &val)
    3eb4:	cf 93       	push	r28
    3eb6:	df 93       	push	r29
    3eb8:	00 d0       	rcall	.+0      	; 0x3eba <_ZN10helicopter8messages7Message6encodeERPhRh+0x6>
    3eba:	00 d0       	rcall	.+0      	; 0x3ebc <_ZN10helicopter8messages7Message6encodeERPhRh+0x8>
    3ebc:	cd b7       	in	r28, 0x3d	; 61
    3ebe:	de b7       	in	r29, 0x3e	; 62
    3ec0:	9a 83       	std	Y+2, r25	; 0x02
    3ec2:	89 83       	std	Y+1, r24	; 0x01
    3ec4:	7c 83       	std	Y+4, r23	; 0x04
    3ec6:	6b 83       	std	Y+3, r22	; 0x03
    3ec8:	5e 83       	std	Y+6, r21	; 0x06
    3eca:	4d 83       	std	Y+5, r20	; 0x05
				{
					*buffPtr = val;
    3ecc:	8b 81       	ldd	r24, Y+3	; 0x03
    3ece:	9c 81       	ldd	r25, Y+4	; 0x04
    3ed0:	fc 01       	movw	r30, r24
    3ed2:	80 81       	ld	r24, Z
    3ed4:	91 81       	ldd	r25, Z+1	; 0x01
    3ed6:	2d 81       	ldd	r18, Y+5	; 0x05
    3ed8:	3e 81       	ldd	r19, Y+6	; 0x06
    3eda:	f9 01       	movw	r30, r18
    3edc:	20 81       	ld	r18, Z
    3ede:	fc 01       	movw	r30, r24
    3ee0:	20 83       	st	Z, r18
					buffPtr += sizeof(val);
    3ee2:	8b 81       	ldd	r24, Y+3	; 0x03
    3ee4:	9c 81       	ldd	r25, Y+4	; 0x04
    3ee6:	fc 01       	movw	r30, r24
    3ee8:	80 81       	ld	r24, Z
    3eea:	91 81       	ldd	r25, Z+1	; 0x01
    3eec:	9c 01       	movw	r18, r24
    3eee:	2f 5f       	subi	r18, 0xFF	; 255
    3ef0:	3f 4f       	sbci	r19, 0xFF	; 255
    3ef2:	8b 81       	ldd	r24, Y+3	; 0x03
    3ef4:	9c 81       	ldd	r25, Y+4	; 0x04
    3ef6:	fc 01       	movw	r30, r24
    3ef8:	31 83       	std	Z+1, r19	; 0x01
    3efa:	20 83       	st	Z, r18
				}
    3efc:	26 96       	adiw	r28, 0x06	; 6
    3efe:	0f b6       	in	r0, 0x3f	; 63
    3f00:	f8 94       	cli
    3f02:	de bf       	out	0x3e, r29	; 62
    3f04:	0f be       	out	0x3f, r0	; 63
    3f06:	cd bf       	out	0x3d, r28	; 61
    3f08:	df 91       	pop	r29
    3f0a:	cf 91       	pop	r28
    3f0c:	08 95       	ret

00003f0e <_ZN10helicopter8messages7Message6decodeERPhRh>:
				
				/**
				 * Copies the the value at the buff pointer location into the given val parameter and
				 * increments the buffer by the sizeof(val)
				 */
				void decode (byte *&buffPtr, byte &val)
    3f0e:	cf 93       	push	r28
    3f10:	df 93       	push	r29
    3f12:	00 d0       	rcall	.+0      	; 0x3f14 <_ZN10helicopter8messages7Message6decodeERPhRh+0x6>
    3f14:	00 d0       	rcall	.+0      	; 0x3f16 <_ZN10helicopter8messages7Message6decodeERPhRh+0x8>
    3f16:	cd b7       	in	r28, 0x3d	; 61
    3f18:	de b7       	in	r29, 0x3e	; 62
    3f1a:	9a 83       	std	Y+2, r25	; 0x02
    3f1c:	89 83       	std	Y+1, r24	; 0x01
    3f1e:	7c 83       	std	Y+4, r23	; 0x04
    3f20:	6b 83       	std	Y+3, r22	; 0x03
    3f22:	5e 83       	std	Y+6, r21	; 0x06
    3f24:	4d 83       	std	Y+5, r20	; 0x05
				{
					val = *buffPtr;
    3f26:	8b 81       	ldd	r24, Y+3	; 0x03
    3f28:	9c 81       	ldd	r25, Y+4	; 0x04
    3f2a:	fc 01       	movw	r30, r24
    3f2c:	80 81       	ld	r24, Z
    3f2e:	91 81       	ldd	r25, Z+1	; 0x01
    3f30:	fc 01       	movw	r30, r24
    3f32:	20 81       	ld	r18, Z
    3f34:	8d 81       	ldd	r24, Y+5	; 0x05
    3f36:	9e 81       	ldd	r25, Y+6	; 0x06
    3f38:	fc 01       	movw	r30, r24
    3f3a:	20 83       	st	Z, r18
					buffPtr += sizeof(val);
    3f3c:	8b 81       	ldd	r24, Y+3	; 0x03
    3f3e:	9c 81       	ldd	r25, Y+4	; 0x04
    3f40:	fc 01       	movw	r30, r24
    3f42:	80 81       	ld	r24, Z
    3f44:	91 81       	ldd	r25, Z+1	; 0x01
    3f46:	9c 01       	movw	r18, r24
    3f48:	2f 5f       	subi	r18, 0xFF	; 255
    3f4a:	3f 4f       	sbci	r19, 0xFF	; 255
    3f4c:	8b 81       	ldd	r24, Y+3	; 0x03
    3f4e:	9c 81       	ldd	r25, Y+4	; 0x04
    3f50:	fc 01       	movw	r30, r24
    3f52:	31 83       	std	Z+1, r19	; 0x01
    3f54:	20 83       	st	Z, r18
				}
    3f56:	26 96       	adiw	r28, 0x06	; 6
    3f58:	0f b6       	in	r0, 0x3f	; 63
    3f5a:	f8 94       	cli
    3f5c:	de bf       	out	0x3e, r29	; 62
    3f5e:	0f be       	out	0x3f, r0	; 63
    3f60:	cd bf       	out	0x3d, r28	; 61
    3f62:	df 91       	pop	r29
    3f64:	cf 91       	pop	r28
    3f66:	08 95       	ret

00003f68 <_ZN10helicopter8messages7Message6decodeERPhRl>:
				
				void decode (byte *&buffPtr, long &val)
    3f68:	cf 93       	push	r28
    3f6a:	df 93       	push	r29
    3f6c:	00 d0       	rcall	.+0      	; 0x3f6e <_ZN10helicopter8messages7Message6decodeERPhRl+0x6>
    3f6e:	00 d0       	rcall	.+0      	; 0x3f70 <_ZN10helicopter8messages7Message6decodeERPhRl+0x8>
    3f70:	cd b7       	in	r28, 0x3d	; 61
    3f72:	de b7       	in	r29, 0x3e	; 62
    3f74:	9a 83       	std	Y+2, r25	; 0x02
    3f76:	89 83       	std	Y+1, r24	; 0x01
    3f78:	7c 83       	std	Y+4, r23	; 0x04
    3f7a:	6b 83       	std	Y+3, r22	; 0x03
    3f7c:	5e 83       	std	Y+6, r21	; 0x06
    3f7e:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(&val, buffPtr, sizeof(val));
    3f80:	8b 81       	ldd	r24, Y+3	; 0x03
    3f82:	9c 81       	ldd	r25, Y+4	; 0x04
    3f84:	fc 01       	movw	r30, r24
    3f86:	20 81       	ld	r18, Z
    3f88:	31 81       	ldd	r19, Z+1	; 0x01
    3f8a:	8d 81       	ldd	r24, Y+5	; 0x05
    3f8c:	9e 81       	ldd	r25, Y+6	; 0x06
    3f8e:	44 e0       	ldi	r20, 0x04	; 4
    3f90:	50 e0       	ldi	r21, 0x00	; 0
    3f92:	b9 01       	movw	r22, r18
    3f94:	0e 94 f8 43 	call	0x87f0	; 0x87f0 <memcpy>
					buffPtr += sizeof(val);
    3f98:	8b 81       	ldd	r24, Y+3	; 0x03
    3f9a:	9c 81       	ldd	r25, Y+4	; 0x04
    3f9c:	fc 01       	movw	r30, r24
    3f9e:	80 81       	ld	r24, Z
    3fa0:	91 81       	ldd	r25, Z+1	; 0x01
    3fa2:	9c 01       	movw	r18, r24
    3fa4:	2c 5f       	subi	r18, 0xFC	; 252
    3fa6:	3f 4f       	sbci	r19, 0xFF	; 255
    3fa8:	8b 81       	ldd	r24, Y+3	; 0x03
    3faa:	9c 81       	ldd	r25, Y+4	; 0x04
    3fac:	fc 01       	movw	r30, r24
    3fae:	31 83       	std	Z+1, r19	; 0x01
    3fb0:	20 83       	st	Z, r18
				}
    3fb2:	26 96       	adiw	r28, 0x06	; 6
    3fb4:	0f b6       	in	r0, 0x3f	; 63
    3fb6:	f8 94       	cli
    3fb8:	de bf       	out	0x3e, r29	; 62
    3fba:	0f be       	out	0x3f, r0	; 63
    3fbc:	cd bf       	out	0x3d, r28	; 61
    3fbe:	df 91       	pop	r29
    3fc0:	cf 91       	pop	r28
    3fc2:	08 95       	ret

00003fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>:
				
				void decode (byte *&buffPtr, float &val)
    3fc4:	cf 93       	push	r28
    3fc6:	df 93       	push	r29
    3fc8:	00 d0       	rcall	.+0      	; 0x3fca <_ZN10helicopter8messages7Message6decodeERPhRf+0x6>
    3fca:	00 d0       	rcall	.+0      	; 0x3fcc <_ZN10helicopter8messages7Message6decodeERPhRf+0x8>
    3fcc:	cd b7       	in	r28, 0x3d	; 61
    3fce:	de b7       	in	r29, 0x3e	; 62
    3fd0:	9a 83       	std	Y+2, r25	; 0x02
    3fd2:	89 83       	std	Y+1, r24	; 0x01
    3fd4:	7c 83       	std	Y+4, r23	; 0x04
    3fd6:	6b 83       	std	Y+3, r22	; 0x03
    3fd8:	5e 83       	std	Y+6, r21	; 0x06
    3fda:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(&val, buffPtr, sizeof(val));
    3fdc:	8b 81       	ldd	r24, Y+3	; 0x03
    3fde:	9c 81       	ldd	r25, Y+4	; 0x04
    3fe0:	fc 01       	movw	r30, r24
    3fe2:	20 81       	ld	r18, Z
    3fe4:	31 81       	ldd	r19, Z+1	; 0x01
    3fe6:	8d 81       	ldd	r24, Y+5	; 0x05
    3fe8:	9e 81       	ldd	r25, Y+6	; 0x06
    3fea:	44 e0       	ldi	r20, 0x04	; 4
    3fec:	50 e0       	ldi	r21, 0x00	; 0
    3fee:	b9 01       	movw	r22, r18
    3ff0:	0e 94 f8 43 	call	0x87f0	; 0x87f0 <memcpy>
					buffPtr += sizeof(val);
    3ff4:	8b 81       	ldd	r24, Y+3	; 0x03
    3ff6:	9c 81       	ldd	r25, Y+4	; 0x04
    3ff8:	fc 01       	movw	r30, r24
    3ffa:	80 81       	ld	r24, Z
    3ffc:	91 81       	ldd	r25, Z+1	; 0x01
    3ffe:	9c 01       	movw	r18, r24
    4000:	2c 5f       	subi	r18, 0xFC	; 252
    4002:	3f 4f       	sbci	r19, 0xFF	; 255
    4004:	8b 81       	ldd	r24, Y+3	; 0x03
    4006:	9c 81       	ldd	r25, Y+4	; 0x04
    4008:	fc 01       	movw	r30, r24
    400a:	31 83       	std	Z+1, r19	; 0x01
    400c:	20 83       	st	Z, r18
				}
    400e:	26 96       	adiw	r28, 0x06	; 6
    4010:	0f b6       	in	r0, 0x3f	; 63
    4012:	f8 94       	cli
    4014:	de bf       	out	0x3e, r29	; 62
    4016:	0f be       	out	0x3f, r0	; 63
    4018:	cd bf       	out	0x3d, r28	; 61
    401a:	df 91       	pop	r29
    401c:	cf 91       	pop	r28
    401e:	08 95       	ret

00004020 <_ZN10helicopter5model11SystemModel13MagYawDegreesEf>:
			 * Z axis is pointing up out of the FC
			 */
			

			float MagYawDegrees() const { return magYawDegrees; }
			void MagYawDegrees(float val) { magYawDegrees = val; }	
    4020:	cf 93       	push	r28
    4022:	df 93       	push	r29
    4024:	00 d0       	rcall	.+0      	; 0x4026 <_ZN10helicopter5model11SystemModel13MagYawDegreesEf+0x6>
    4026:	00 d0       	rcall	.+0      	; 0x4028 <_ZN10helicopter5model11SystemModel13MagYawDegreesEf+0x8>
    4028:	cd b7       	in	r28, 0x3d	; 61
    402a:	de b7       	in	r29, 0x3e	; 62
    402c:	9a 83       	std	Y+2, r25	; 0x02
    402e:	89 83       	std	Y+1, r24	; 0x01
    4030:	4b 83       	std	Y+3, r20	; 0x03
    4032:	5c 83       	std	Y+4, r21	; 0x04
    4034:	6d 83       	std	Y+5, r22	; 0x05
    4036:	7e 83       	std	Y+6, r23	; 0x06
    4038:	29 81       	ldd	r18, Y+1	; 0x01
    403a:	3a 81       	ldd	r19, Y+2	; 0x02
    403c:	8b 81       	ldd	r24, Y+3	; 0x03
    403e:	9c 81       	ldd	r25, Y+4	; 0x04
    4040:	ad 81       	ldd	r26, Y+5	; 0x05
    4042:	be 81       	ldd	r27, Y+6	; 0x06
    4044:	f9 01       	movw	r30, r18
    4046:	80 83       	st	Z, r24
    4048:	91 83       	std	Z+1, r25	; 0x01
    404a:	a2 83       	std	Z+2, r26	; 0x02
    404c:	b3 83       	std	Z+3, r27	; 0x03
    404e:	26 96       	adiw	r28, 0x06	; 6
    4050:	0f b6       	in	r0, 0x3f	; 63
    4052:	f8 94       	cli
    4054:	de bf       	out	0x3e, r29	; 62
    4056:	0f be       	out	0x3f, r0	; 63
    4058:	cd bf       	out	0x3d, r28	; 61
    405a:	df 91       	pop	r29
    405c:	cf 91       	pop	r28
    405e:	08 95       	ret

00004060 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf>:
				
			float YawControlBeforeServoLimitsAdjustment() const {return yawControlBeforeServoLimitsAdjustment;}
			void YawControlBeforeServoLimitsAdjustment(float val) { yawControlBeforeServoLimitsAdjustment = val;}
				
			float YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
			void YawVelocityDegreesPerSecond(float val) { yawVelocityDegreesPerSecond = val;}
    4060:	cf 93       	push	r28
    4062:	df 93       	push	r29
    4064:	00 d0       	rcall	.+0      	; 0x4066 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf+0x6>
    4066:	00 d0       	rcall	.+0      	; 0x4068 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf+0x8>
    4068:	cd b7       	in	r28, 0x3d	; 61
    406a:	de b7       	in	r29, 0x3e	; 62
    406c:	9a 83       	std	Y+2, r25	; 0x02
    406e:	89 83       	std	Y+1, r24	; 0x01
    4070:	4b 83       	std	Y+3, r20	; 0x03
    4072:	5c 83       	std	Y+4, r21	; 0x04
    4074:	6d 83       	std	Y+5, r22	; 0x05
    4076:	7e 83       	std	Y+6, r23	; 0x06
    4078:	29 81       	ldd	r18, Y+1	; 0x01
    407a:	3a 81       	ldd	r19, Y+2	; 0x02
    407c:	8b 81       	ldd	r24, Y+3	; 0x03
    407e:	9c 81       	ldd	r25, Y+4	; 0x04
    4080:	ad 81       	ldd	r26, Y+5	; 0x05
    4082:	be 81       	ldd	r27, Y+6	; 0x06
    4084:	f9 01       	movw	r30, r18
    4086:	80 8b       	std	Z+16, r24	; 0x10
    4088:	91 8b       	std	Z+17, r25	; 0x11
    408a:	a2 8b       	std	Z+18, r26	; 0x12
    408c:	b3 8b       	std	Z+19, r27	; 0x13
    408e:	26 96       	adiw	r28, 0x06	; 6
    4090:	0f b6       	in	r0, 0x3f	; 63
    4092:	f8 94       	cli
    4094:	de bf       	out	0x3e, r29	; 62
    4096:	0f be       	out	0x3f, r0	; 63
    4098:	cd bf       	out	0x3d, r28	; 61
    409a:	df 91       	pop	r29
    409c:	cf 91       	pop	r28
    409e:	08 95       	ret

000040a0 <_ZNK10helicopter5model11SystemModel15YawProportionalEv>:
			void ReferenceYawVelocityDegreesPerSecond(float val) { referenceYawVelocityDegreesPerSecond = val;}
				
			float YawIntegral() const {return yawIntegral;}
			void YawIntegral(float val) { yawIntegral = val;}

			float YawProportional() const {return yawProportional;}
    40a0:	cf 93       	push	r28
    40a2:	df 93       	push	r29
    40a4:	1f 92       	push	r1
    40a6:	1f 92       	push	r1
    40a8:	cd b7       	in	r28, 0x3d	; 61
    40aa:	de b7       	in	r29, 0x3e	; 62
    40ac:	9a 83       	std	Y+2, r25	; 0x02
    40ae:	89 83       	std	Y+1, r24	; 0x01
    40b0:	89 81       	ldd	r24, Y+1	; 0x01
    40b2:	9a 81       	ldd	r25, Y+2	; 0x02
    40b4:	fc 01       	movw	r30, r24
    40b6:	84 8d       	ldd	r24, Z+28	; 0x1c
    40b8:	95 8d       	ldd	r25, Z+29	; 0x1d
    40ba:	a6 8d       	ldd	r26, Z+30	; 0x1e
    40bc:	b7 8d       	ldd	r27, Z+31	; 0x1f
    40be:	bc 01       	movw	r22, r24
    40c0:	cd 01       	movw	r24, r26
    40c2:	0f 90       	pop	r0
    40c4:	0f 90       	pop	r0
    40c6:	df 91       	pop	r29
    40c8:	cf 91       	pop	r28
    40ca:	08 95       	ret

000040cc <_ZNK10helicopter5model11SystemModel18YawDerivativeErrorEv>:
			void YawProportional(float val) { yawProportional = val;}

			float YawDerivativeError() const {return yawDerivativeError;}
    40cc:	cf 93       	push	r28
    40ce:	df 93       	push	r29
    40d0:	1f 92       	push	r1
    40d2:	1f 92       	push	r1
    40d4:	cd b7       	in	r28, 0x3d	; 61
    40d6:	de b7       	in	r29, 0x3e	; 62
    40d8:	9a 83       	std	Y+2, r25	; 0x02
    40da:	89 83       	std	Y+1, r24	; 0x01
    40dc:	89 81       	ldd	r24, Y+1	; 0x01
    40de:	9a 81       	ldd	r25, Y+2	; 0x02
    40e0:	fc 01       	movw	r30, r24
    40e2:	80 a1       	ldd	r24, Z+32	; 0x20
    40e4:	91 a1       	ldd	r25, Z+33	; 0x21
    40e6:	a2 a1       	ldd	r26, Z+34	; 0x22
    40e8:	b3 a1       	ldd	r27, Z+35	; 0x23
    40ea:	bc 01       	movw	r22, r24
    40ec:	cd 01       	movw	r24, r26
    40ee:	0f 90       	pop	r0
    40f0:	0f 90       	pop	r0
    40f2:	df 91       	pop	r29
    40f4:	cf 91       	pop	r28
    40f6:	08 95       	ret

000040f8 <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf>:

			float LongitudeControl() const {return longitudeControl;}
			void LongitudeControl(float val) { longitudeControl = val;}
				
			float XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
			void XVelocityMetersPerSecond(float val) { xVelocityMetersPerSecond = val;}
    40f8:	cf 93       	push	r28
    40fa:	df 93       	push	r29
    40fc:	00 d0       	rcall	.+0      	; 0x40fe <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf+0x6>
    40fe:	00 d0       	rcall	.+0      	; 0x4100 <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf+0x8>
    4100:	cd b7       	in	r28, 0x3d	; 61
    4102:	de b7       	in	r29, 0x3e	; 62
    4104:	9a 83       	std	Y+2, r25	; 0x02
    4106:	89 83       	std	Y+1, r24	; 0x01
    4108:	4b 83       	std	Y+3, r20	; 0x03
    410a:	5c 83       	std	Y+4, r21	; 0x04
    410c:	6d 83       	std	Y+5, r22	; 0x05
    410e:	7e 83       	std	Y+6, r23	; 0x06
    4110:	29 81       	ldd	r18, Y+1	; 0x01
    4112:	3a 81       	ldd	r19, Y+2	; 0x02
    4114:	8b 81       	ldd	r24, Y+3	; 0x03
    4116:	9c 81       	ldd	r25, Y+4	; 0x04
    4118:	ad 81       	ldd	r26, Y+5	; 0x05
    411a:	be 81       	ldd	r27, Y+6	; 0x06
    411c:	f9 01       	movw	r30, r18
    411e:	84 ab       	std	Z+52, r24	; 0x34
    4120:	95 ab       	std	Z+53, r25	; 0x35
    4122:	a6 ab       	std	Z+54, r26	; 0x36
    4124:	b7 ab       	std	Z+55, r27	; 0x37
    4126:	26 96       	adiw	r28, 0x06	; 6
    4128:	0f b6       	in	r0, 0x3f	; 63
    412a:	f8 94       	cli
    412c:	de bf       	out	0x3e, r29	; 62
    412e:	0f be       	out	0x3f, r0	; 63
    4130:	cd bf       	out	0x3d, r28	; 61
    4132:	df 91       	pop	r29
    4134:	cf 91       	pop	r28
    4136:	08 95       	ret

00004138 <_ZNK10helicopter5model11SystemModel13XProportionalEv>:
			void ReferenceXVelocityMetersPerSecond(float val) { referenceXVelocityMetersPerSecond = val;}
				
			float XLongitudinalOuterLoopControl() const {return xLongitudinalOuterLoopControl;}
			void XLongitudinalOuterLoopControl(float val) { xLongitudinalOuterLoopControl = val;}
				
			float XProportional() const {return xProportional;}
    4138:	cf 93       	push	r28
    413a:	df 93       	push	r29
    413c:	1f 92       	push	r1
    413e:	1f 92       	push	r1
    4140:	cd b7       	in	r28, 0x3d	; 61
    4142:	de b7       	in	r29, 0x3e	; 62
    4144:	9a 83       	std	Y+2, r25	; 0x02
    4146:	89 83       	std	Y+1, r24	; 0x01
    4148:	89 81       	ldd	r24, Y+1	; 0x01
    414a:	9a 81       	ldd	r25, Y+2	; 0x02
    414c:	80 5c       	subi	r24, 0xC0	; 192
    414e:	9f 4f       	sbci	r25, 0xFF	; 255
    4150:	fc 01       	movw	r30, r24
    4152:	80 81       	ld	r24, Z
    4154:	91 81       	ldd	r25, Z+1	; 0x01
    4156:	a2 81       	ldd	r26, Z+2	; 0x02
    4158:	b3 81       	ldd	r27, Z+3	; 0x03
    415a:	bc 01       	movw	r22, r24
    415c:	cd 01       	movw	r24, r26
    415e:	0f 90       	pop	r0
    4160:	0f 90       	pop	r0
    4162:	df 91       	pop	r29
    4164:	cf 91       	pop	r28
    4166:	08 95       	ret

00004168 <_ZNK10helicopter5model11SystemModel16XDerivativeErrorEv>:
			void XProportional(float val) { xProportional = val;}
				
			float XIntegral() const {return xIntegral;}
			void XIntegral(float val) { xIntegral = val;}
				
			float XDerivativeError() const {return xDerivativeError;}
    4168:	cf 93       	push	r28
    416a:	df 93       	push	r29
    416c:	1f 92       	push	r1
    416e:	1f 92       	push	r1
    4170:	cd b7       	in	r28, 0x3d	; 61
    4172:	de b7       	in	r29, 0x3e	; 62
    4174:	9a 83       	std	Y+2, r25	; 0x02
    4176:	89 83       	std	Y+1, r24	; 0x01
    4178:	89 81       	ldd	r24, Y+1	; 0x01
    417a:	9a 81       	ldd	r25, Y+2	; 0x02
    417c:	88 5b       	subi	r24, 0xB8	; 184
    417e:	9f 4f       	sbci	r25, 0xFF	; 255
    4180:	fc 01       	movw	r30, r24
    4182:	80 81       	ld	r24, Z
    4184:	91 81       	ldd	r25, Z+1	; 0x01
    4186:	a2 81       	ldd	r26, Z+2	; 0x02
    4188:	b3 81       	ldd	r27, Z+3	; 0x03
    418a:	bc 01       	movw	r22, r24
    418c:	cd 01       	movw	r24, r26
    418e:	0f 90       	pop	r0
    4190:	0f 90       	pop	r0
    4192:	df 91       	pop	r29
    4194:	cf 91       	pop	r28
    4196:	08 95       	ret

00004198 <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf>:
			void XDerivativeError(float val) { xDerivativeError = val;}
				
		
			float ThetaPitchDegrees() const {return thetaPitchDegrees;}
			void ThetaPitchDegrees(float val) {thetaPitchDegrees = val;}
    4198:	cf 93       	push	r28
    419a:	df 93       	push	r29
    419c:	00 d0       	rcall	.+0      	; 0x419e <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf+0x6>
    419e:	00 d0       	rcall	.+0      	; 0x41a0 <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf+0x8>
    41a0:	cd b7       	in	r28, 0x3d	; 61
    41a2:	de b7       	in	r29, 0x3e	; 62
    41a4:	9a 83       	std	Y+2, r25	; 0x02
    41a6:	89 83       	std	Y+1, r24	; 0x01
    41a8:	4b 83       	std	Y+3, r20	; 0x03
    41aa:	5c 83       	std	Y+4, r21	; 0x04
    41ac:	6d 83       	std	Y+5, r22	; 0x05
    41ae:	7e 83       	std	Y+6, r23	; 0x06
    41b0:	89 81       	ldd	r24, Y+1	; 0x01
    41b2:	9a 81       	ldd	r25, Y+2	; 0x02
    41b4:	9c 01       	movw	r18, r24
    41b6:	24 5b       	subi	r18, 0xB4	; 180
    41b8:	3f 4f       	sbci	r19, 0xFF	; 255
    41ba:	8b 81       	ldd	r24, Y+3	; 0x03
    41bc:	9c 81       	ldd	r25, Y+4	; 0x04
    41be:	ad 81       	ldd	r26, Y+5	; 0x05
    41c0:	be 81       	ldd	r27, Y+6	; 0x06
    41c2:	f9 01       	movw	r30, r18
    41c4:	80 83       	st	Z, r24
    41c6:	91 83       	std	Z+1, r25	; 0x01
    41c8:	a2 83       	std	Z+2, r26	; 0x02
    41ca:	b3 83       	std	Z+3, r27	; 0x03
    41cc:	26 96       	adiw	r28, 0x06	; 6
    41ce:	0f b6       	in	r0, 0x3f	; 63
    41d0:	f8 94       	cli
    41d2:	de bf       	out	0x3e, r29	; 62
    41d4:	0f be       	out	0x3f, r0	; 63
    41d6:	cd bf       	out	0x3d, r28	; 61
    41d8:	df 91       	pop	r29
    41da:	cf 91       	pop	r28
    41dc:	08 95       	ret

000041de <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf>:

			float LateralControl() const {return lateralControl;}
			void LateralControl(float val) { lateralControl = val;}

			float YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
			void YVelocityMetersPerSecond(float val) { yVelocityMetersPerSecond = val;}
    41de:	cf 93       	push	r28
    41e0:	df 93       	push	r29
    41e2:	00 d0       	rcall	.+0      	; 0x41e4 <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf+0x6>
    41e4:	00 d0       	rcall	.+0      	; 0x41e6 <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf+0x8>
    41e6:	cd b7       	in	r28, 0x3d	; 61
    41e8:	de b7       	in	r29, 0x3e	; 62
    41ea:	9a 83       	std	Y+2, r25	; 0x02
    41ec:	89 83       	std	Y+1, r24	; 0x01
    41ee:	4b 83       	std	Y+3, r20	; 0x03
    41f0:	5c 83       	std	Y+4, r21	; 0x04
    41f2:	6d 83       	std	Y+5, r22	; 0x05
    41f4:	7e 83       	std	Y+6, r23	; 0x06
    41f6:	89 81       	ldd	r24, Y+1	; 0x01
    41f8:	9a 81       	ldd	r25, Y+2	; 0x02
    41fa:	9c 01       	movw	r18, r24
    41fc:	20 5a       	subi	r18, 0xA0	; 160
    41fe:	3f 4f       	sbci	r19, 0xFF	; 255
    4200:	8b 81       	ldd	r24, Y+3	; 0x03
    4202:	9c 81       	ldd	r25, Y+4	; 0x04
    4204:	ad 81       	ldd	r26, Y+5	; 0x05
    4206:	be 81       	ldd	r27, Y+6	; 0x06
    4208:	f9 01       	movw	r30, r18
    420a:	80 83       	st	Z, r24
    420c:	91 83       	std	Z+1, r25	; 0x01
    420e:	a2 83       	std	Z+2, r26	; 0x02
    4210:	b3 83       	std	Z+3, r27	; 0x03
    4212:	26 96       	adiw	r28, 0x06	; 6
    4214:	0f b6       	in	r0, 0x3f	; 63
    4216:	f8 94       	cli
    4218:	de bf       	out	0x3e, r29	; 62
    421a:	0f be       	out	0x3f, r0	; 63
    421c:	cd bf       	out	0x3d, r28	; 61
    421e:	df 91       	pop	r29
    4220:	cf 91       	pop	r28
    4222:	08 95       	ret

00004224 <_ZNK10helicopter5model11SystemModel13YProportionalEv>:
			void ReferenceYVelocityMetersPerSecond(float val) { referenceYVelocityMetersPerSecond = val;}

			float YLateralOuterLoopControl() const {return yLateralOuterLoopControl;}
			void YLateralOuterLoopControl(float val) { yLateralOuterLoopControl = val;}

			float YProportional() const {return yProportional;}
    4224:	cf 93       	push	r28
    4226:	df 93       	push	r29
    4228:	1f 92       	push	r1
    422a:	1f 92       	push	r1
    422c:	cd b7       	in	r28, 0x3d	; 61
    422e:	de b7       	in	r29, 0x3e	; 62
    4230:	9a 83       	std	Y+2, r25	; 0x02
    4232:	89 83       	std	Y+1, r24	; 0x01
    4234:	89 81       	ldd	r24, Y+1	; 0x01
    4236:	9a 81       	ldd	r25, Y+2	; 0x02
    4238:	84 59       	subi	r24, 0x94	; 148
    423a:	9f 4f       	sbci	r25, 0xFF	; 255
    423c:	fc 01       	movw	r30, r24
    423e:	80 81       	ld	r24, Z
    4240:	91 81       	ldd	r25, Z+1	; 0x01
    4242:	a2 81       	ldd	r26, Z+2	; 0x02
    4244:	b3 81       	ldd	r27, Z+3	; 0x03
    4246:	bc 01       	movw	r22, r24
    4248:	cd 01       	movw	r24, r26
    424a:	0f 90       	pop	r0
    424c:	0f 90       	pop	r0
    424e:	df 91       	pop	r29
    4250:	cf 91       	pop	r28
    4252:	08 95       	ret

00004254 <_ZNK10helicopter5model11SystemModel16YDerivativeErrorEv>:
			void YProportional(float val) { yProportional = val;}

			float YIntegral() const {return yIntegral;}
			void YIntegral(float val) { yIntegral = val;}

			float YDerivativeError() const {return yDerivativeError;}
    4254:	cf 93       	push	r28
    4256:	df 93       	push	r29
    4258:	1f 92       	push	r1
    425a:	1f 92       	push	r1
    425c:	cd b7       	in	r28, 0x3d	; 61
    425e:	de b7       	in	r29, 0x3e	; 62
    4260:	9a 83       	std	Y+2, r25	; 0x02
    4262:	89 83       	std	Y+1, r24	; 0x01
    4264:	89 81       	ldd	r24, Y+1	; 0x01
    4266:	9a 81       	ldd	r25, Y+2	; 0x02
    4268:	8c 58       	subi	r24, 0x8C	; 140
    426a:	9f 4f       	sbci	r25, 0xFF	; 255
    426c:	fc 01       	movw	r30, r24
    426e:	80 81       	ld	r24, Z
    4270:	91 81       	ldd	r25, Z+1	; 0x01
    4272:	a2 81       	ldd	r26, Z+2	; 0x02
    4274:	b3 81       	ldd	r27, Z+3	; 0x03
    4276:	bc 01       	movw	r22, r24
    4278:	cd 01       	movw	r24, r26
    427a:	0f 90       	pop	r0
    427c:	0f 90       	pop	r0
    427e:	df 91       	pop	r29
    4280:	cf 91       	pop	r28
    4282:	08 95       	ret

00004284 <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf>:
			void YDerivativeError(float val) { yDerivativeError = val;}


			float PhiRollDegrees() const {return phiRollDegrees;}
			void PhiRollDegrees(float val) {phiRollDegrees = val;}
    4284:	cf 93       	push	r28
    4286:	df 93       	push	r29
    4288:	00 d0       	rcall	.+0      	; 0x428a <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf+0x6>
    428a:	00 d0       	rcall	.+0      	; 0x428c <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf+0x8>
    428c:	cd b7       	in	r28, 0x3d	; 61
    428e:	de b7       	in	r29, 0x3e	; 62
    4290:	9a 83       	std	Y+2, r25	; 0x02
    4292:	89 83       	std	Y+1, r24	; 0x01
    4294:	4b 83       	std	Y+3, r20	; 0x03
    4296:	5c 83       	std	Y+4, r21	; 0x04
    4298:	6d 83       	std	Y+5, r22	; 0x05
    429a:	7e 83       	std	Y+6, r23	; 0x06
    429c:	89 81       	ldd	r24, Y+1	; 0x01
    429e:	9a 81       	ldd	r25, Y+2	; 0x02
    42a0:	9c 01       	movw	r18, r24
    42a2:	28 58       	subi	r18, 0x88	; 136
    42a4:	3f 4f       	sbci	r19, 0xFF	; 255
    42a6:	8b 81       	ldd	r24, Y+3	; 0x03
    42a8:	9c 81       	ldd	r25, Y+4	; 0x04
    42aa:	ad 81       	ldd	r26, Y+5	; 0x05
    42ac:	be 81       	ldd	r27, Y+6	; 0x06
    42ae:	f9 01       	movw	r30, r18
    42b0:	80 83       	st	Z, r24
    42b2:	91 83       	std	Z+1, r25	; 0x01
    42b4:	a2 83       	std	Z+2, r26	; 0x02
    42b6:	b3 83       	std	Z+3, r27	; 0x03
    42b8:	26 96       	adiw	r28, 0x06	; 6
    42ba:	0f b6       	in	r0, 0x3f	; 63
    42bc:	f8 94       	cli
    42be:	de bf       	out	0x3e, r29	; 62
    42c0:	0f be       	out	0x3f, r0	; 63
    42c2:	cd bf       	out	0x3d, r28	; 61
    42c4:	df 91       	pop	r29
    42c6:	cf 91       	pop	r28
    42c8:	08 95       	ret

000042ca <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf>:
						
						
						

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
			void AltitudeFeetAgl(float val) { altitudeFeetAgl = val; }
    42ca:	cf 93       	push	r28
    42cc:	df 93       	push	r29
    42ce:	00 d0       	rcall	.+0      	; 0x42d0 <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf+0x6>
    42d0:	00 d0       	rcall	.+0      	; 0x42d2 <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf+0x8>
    42d2:	cd b7       	in	r28, 0x3d	; 61
    42d4:	de b7       	in	r29, 0x3e	; 62
    42d6:	9a 83       	std	Y+2, r25	; 0x02
    42d8:	89 83       	std	Y+1, r24	; 0x01
    42da:	4b 83       	std	Y+3, r20	; 0x03
    42dc:	5c 83       	std	Y+4, r21	; 0x04
    42de:	6d 83       	std	Y+5, r22	; 0x05
    42e0:	7e 83       	std	Y+6, r23	; 0x06
    42e2:	89 81       	ldd	r24, Y+1	; 0x01
    42e4:	9a 81       	ldd	r25, Y+2	; 0x02
    42e6:	9c 01       	movw	r18, r24
    42e8:	24 58       	subi	r18, 0x84	; 132
    42ea:	3f 4f       	sbci	r19, 0xFF	; 255
    42ec:	8b 81       	ldd	r24, Y+3	; 0x03
    42ee:	9c 81       	ldd	r25, Y+4	; 0x04
    42f0:	ad 81       	ldd	r26, Y+5	; 0x05
    42f2:	be 81       	ldd	r27, Y+6	; 0x06
    42f4:	f9 01       	movw	r30, r18
    42f6:	80 83       	st	Z, r24
    42f8:	91 83       	std	Z+1, r25	; 0x01
    42fa:	a2 83       	std	Z+2, r26	; 0x02
    42fc:	b3 83       	std	Z+3, r27	; 0x03
    42fe:	26 96       	adiw	r28, 0x06	; 6
    4300:	0f b6       	in	r0, 0x3f	; 63
    4302:	f8 94       	cli
    4304:	de bf       	out	0x3e, r29	; 62
    4306:	0f be       	out	0x3f, r0	; 63
    4308:	cd bf       	out	0x3d, r28	; 61
    430a:	df 91       	pop	r29
    430c:	cf 91       	pop	r28
    430e:	08 95       	ret

00004310 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf>:

			float MainRotorControlBeforeServoLimitsAdjustment() const {return mainRotorControlBeforeServoLimitsAdjustment;}
			void MainRotorControlBeforeServoLimitsAdjustment(float val) { mainRotorControlBeforeServoLimitsAdjustment = val;}

			float ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
			void ZVelocityFeetPerSecond(float val) { zVelocityFeetPerSecond = val;}
    4310:	cf 93       	push	r28
    4312:	df 93       	push	r29
    4314:	00 d0       	rcall	.+0      	; 0x4316 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf+0x6>
    4316:	00 d0       	rcall	.+0      	; 0x4318 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf+0x8>
    4318:	cd b7       	in	r28, 0x3d	; 61
    431a:	de b7       	in	r29, 0x3e	; 62
    431c:	9a 83       	std	Y+2, r25	; 0x02
    431e:	89 83       	std	Y+1, r24	; 0x01
    4320:	4b 83       	std	Y+3, r20	; 0x03
    4322:	5c 83       	std	Y+4, r21	; 0x04
    4324:	6d 83       	std	Y+5, r22	; 0x05
    4326:	7e 83       	std	Y+6, r23	; 0x06
    4328:	89 81       	ldd	r24, Y+1	; 0x01
    432a:	9a 81       	ldd	r25, Y+2	; 0x02
    432c:	9c 01       	movw	r18, r24
    432e:	20 57       	subi	r18, 0x70	; 112
    4330:	3f 4f       	sbci	r19, 0xFF	; 255
    4332:	8b 81       	ldd	r24, Y+3	; 0x03
    4334:	9c 81       	ldd	r25, Y+4	; 0x04
    4336:	ad 81       	ldd	r26, Y+5	; 0x05
    4338:	be 81       	ldd	r27, Y+6	; 0x06
    433a:	f9 01       	movw	r30, r18
    433c:	80 83       	st	Z, r24
    433e:	91 83       	std	Z+1, r25	; 0x01
    4340:	a2 83       	std	Z+2, r26	; 0x02
    4342:	b3 83       	std	Z+3, r27	; 0x03
    4344:	26 96       	adiw	r28, 0x06	; 6
    4346:	0f b6       	in	r0, 0x3f	; 63
    4348:	f8 94       	cli
    434a:	de bf       	out	0x3e, r29	; 62
    434c:	0f be       	out	0x3f, r0	; 63
    434e:	cd bf       	out	0x3d, r28	; 61
    4350:	df 91       	pop	r29
    4352:	cf 91       	pop	r28
    4354:	08 95       	ret

00004356 <_ZNK10helicopter5model11SystemModel13ZProportionalEv>:
			void ReferenceZVelocityFeetPerSecond(float val) { referenceZVelocityFeetPerSecond = val;}

			float ZIntegral() const {return zIntegral;}
			void ZIntegral(float val) { zIntegral = val;}

			float ZProportional() const {return zProportional;}
    4356:	cf 93       	push	r28
    4358:	df 93       	push	r29
    435a:	1f 92       	push	r1
    435c:	1f 92       	push	r1
    435e:	cd b7       	in	r28, 0x3d	; 61
    4360:	de b7       	in	r29, 0x3e	; 62
    4362:	9a 83       	std	Y+2, r25	; 0x02
    4364:	89 83       	std	Y+1, r24	; 0x01
    4366:	89 81       	ldd	r24, Y+1	; 0x01
    4368:	9a 81       	ldd	r25, Y+2	; 0x02
    436a:	84 56       	subi	r24, 0x64	; 100
    436c:	9f 4f       	sbci	r25, 0xFF	; 255
    436e:	fc 01       	movw	r30, r24
    4370:	80 81       	ld	r24, Z
    4372:	91 81       	ldd	r25, Z+1	; 0x01
    4374:	a2 81       	ldd	r26, Z+2	; 0x02
    4376:	b3 81       	ldd	r27, Z+3	; 0x03
    4378:	bc 01       	movw	r22, r24
    437a:	cd 01       	movw	r24, r26
    437c:	0f 90       	pop	r0
    437e:	0f 90       	pop	r0
    4380:	df 91       	pop	r29
    4382:	cf 91       	pop	r28
    4384:	08 95       	ret

00004386 <_ZNK10helicopter5model11SystemModel16ZDerivativeErrorEv>:
			void ZProportional(float val) { zProportional = val;}

			float ZDerivativeError() const {return zDerivativeError;}
    4386:	cf 93       	push	r28
    4388:	df 93       	push	r29
    438a:	1f 92       	push	r1
    438c:	1f 92       	push	r1
    438e:	cd b7       	in	r28, 0x3d	; 61
    4390:	de b7       	in	r29, 0x3e	; 62
    4392:	9a 83       	std	Y+2, r25	; 0x02
    4394:	89 83       	std	Y+1, r24	; 0x01
    4396:	89 81       	ldd	r24, Y+1	; 0x01
    4398:	9a 81       	ldd	r25, Y+2	; 0x02
    439a:	80 56       	subi	r24, 0x60	; 96
    439c:	9f 4f       	sbci	r25, 0xFF	; 255
    439e:	fc 01       	movw	r30, r24
    43a0:	80 81       	ld	r24, Z
    43a2:	91 81       	ldd	r25, Z+1	; 0x01
    43a4:	a2 81       	ldd	r26, Z+2	; 0x02
    43a6:	b3 81       	ldd	r27, Z+3	; 0x03
    43a8:	bc 01       	movw	r22, r24
    43aa:	cd 01       	movw	r24, r26
    43ac:	0f 90       	pop	r0
    43ae:	0f 90       	pop	r0
    43b0:	df 91       	pop	r29
    43b2:	cf 91       	pop	r28
    43b4:	08 95       	ret

000043b6 <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf>:
			void ZDerivativeError(float val) { zDerivativeError = val;}						
						
						
			float LatitudeDegrees() const {return latitudeDegrees;}
			void LatitudeDegrees(float val) { latitudeDegrees = val;}						
    43b6:	cf 93       	push	r28
    43b8:	df 93       	push	r29
    43ba:	00 d0       	rcall	.+0      	; 0x43bc <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf+0x6>
    43bc:	00 d0       	rcall	.+0      	; 0x43be <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf+0x8>
    43be:	cd b7       	in	r28, 0x3d	; 61
    43c0:	de b7       	in	r29, 0x3e	; 62
    43c2:	9a 83       	std	Y+2, r25	; 0x02
    43c4:	89 83       	std	Y+1, r24	; 0x01
    43c6:	4b 83       	std	Y+3, r20	; 0x03
    43c8:	5c 83       	std	Y+4, r21	; 0x04
    43ca:	6d 83       	std	Y+5, r22	; 0x05
    43cc:	7e 83       	std	Y+6, r23	; 0x06
    43ce:	89 81       	ldd	r24, Y+1	; 0x01
    43d0:	9a 81       	ldd	r25, Y+2	; 0x02
    43d2:	9c 01       	movw	r18, r24
    43d4:	2c 55       	subi	r18, 0x5C	; 92
    43d6:	3f 4f       	sbci	r19, 0xFF	; 255
    43d8:	8b 81       	ldd	r24, Y+3	; 0x03
    43da:	9c 81       	ldd	r25, Y+4	; 0x04
    43dc:	ad 81       	ldd	r26, Y+5	; 0x05
    43de:	be 81       	ldd	r27, Y+6	; 0x06
    43e0:	f9 01       	movw	r30, r18
    43e2:	80 83       	st	Z, r24
    43e4:	91 83       	std	Z+1, r25	; 0x01
    43e6:	a2 83       	std	Z+2, r26	; 0x02
    43e8:	b3 83       	std	Z+3, r27	; 0x03
    43ea:	26 96       	adiw	r28, 0x06	; 6
    43ec:	0f b6       	in	r0, 0x3f	; 63
    43ee:	f8 94       	cli
    43f0:	de bf       	out	0x3e, r29	; 62
    43f2:	0f be       	out	0x3f, r0	; 63
    43f4:	cd bf       	out	0x3d, r28	; 61
    43f6:	df 91       	pop	r29
    43f8:	cf 91       	pop	r28
    43fa:	08 95       	ret

000043fc <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf>:

			float LongitudeDegrees() const {return longitudeDegrees;}
			void LongitudeDegrees(float val) { longitudeDegrees = val;}						
    43fc:	cf 93       	push	r28
    43fe:	df 93       	push	r29
    4400:	00 d0       	rcall	.+0      	; 0x4402 <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf+0x6>
    4402:	00 d0       	rcall	.+0      	; 0x4404 <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf+0x8>
    4404:	cd b7       	in	r28, 0x3d	; 61
    4406:	de b7       	in	r29, 0x3e	; 62
    4408:	9a 83       	std	Y+2, r25	; 0x02
    440a:	89 83       	std	Y+1, r24	; 0x01
    440c:	4b 83       	std	Y+3, r20	; 0x03
    440e:	5c 83       	std	Y+4, r21	; 0x04
    4410:	6d 83       	std	Y+5, r22	; 0x05
    4412:	7e 83       	std	Y+6, r23	; 0x06
    4414:	89 81       	ldd	r24, Y+1	; 0x01
    4416:	9a 81       	ldd	r25, Y+2	; 0x02
    4418:	9c 01       	movw	r18, r24
    441a:	28 55       	subi	r18, 0x58	; 88
    441c:	3f 4f       	sbci	r19, 0xFF	; 255
    441e:	8b 81       	ldd	r24, Y+3	; 0x03
    4420:	9c 81       	ldd	r25, Y+4	; 0x04
    4422:	ad 81       	ldd	r26, Y+5	; 0x05
    4424:	be 81       	ldd	r27, Y+6	; 0x06
    4426:	f9 01       	movw	r30, r18
    4428:	80 83       	st	Z, r24
    442a:	91 83       	std	Z+1, r25	; 0x01
    442c:	a2 83       	std	Z+2, r26	; 0x02
    442e:	b3 83       	std	Z+3, r27	; 0x03
    4430:	26 96       	adiw	r28, 0x06	; 6
    4432:	0f b6       	in	r0, 0x3f	; 63
    4434:	f8 94       	cli
    4436:	de bf       	out	0x3e, r29	; 62
    4438:	0f be       	out	0x3f, r0	; 63
    443a:	cd bf       	out	0x3d, r28	; 61
    443c:	df 91       	pop	r29
    443e:	cf 91       	pop	r28
    4440:	08 95       	ret

00004442 <_ZNK10helicopter5model11SystemModel8TimeoutsEv>:
						
						
			long Timeouts() const {return timeouts; }
    4442:	cf 93       	push	r28
    4444:	df 93       	push	r29
    4446:	1f 92       	push	r1
    4448:	1f 92       	push	r1
    444a:	cd b7       	in	r28, 0x3d	; 61
    444c:	de b7       	in	r29, 0x3e	; 62
    444e:	9a 83       	std	Y+2, r25	; 0x02
    4450:	89 83       	std	Y+1, r24	; 0x01
    4452:	89 81       	ldd	r24, Y+1	; 0x01
    4454:	9a 81       	ldd	r25, Y+2	; 0x02
    4456:	84 55       	subi	r24, 0x54	; 84
    4458:	9f 4f       	sbci	r25, 0xFF	; 255
    445a:	fc 01       	movw	r30, r24
    445c:	80 81       	ld	r24, Z
    445e:	91 81       	ldd	r25, Z+1	; 0x01
    4460:	a2 81       	ldd	r26, Z+2	; 0x02
    4462:	b3 81       	ldd	r27, Z+3	; 0x03
    4464:	bc 01       	movw	r22, r24
    4466:	cd 01       	movw	r24, r26
    4468:	0f 90       	pop	r0
    446a:	0f 90       	pop	r0
    446c:	df 91       	pop	r29
    446e:	cf 91       	pop	r28
    4470:	08 95       	ret

00004472 <_ZN10helicopter5model11SystemModel8TimeoutsEl>:
			void Timeouts(long val) { timeouts = val; }
    4472:	cf 93       	push	r28
    4474:	df 93       	push	r29
    4476:	00 d0       	rcall	.+0      	; 0x4478 <_ZN10helicopter5model11SystemModel8TimeoutsEl+0x6>
    4478:	00 d0       	rcall	.+0      	; 0x447a <_ZN10helicopter5model11SystemModel8TimeoutsEl+0x8>
    447a:	cd b7       	in	r28, 0x3d	; 61
    447c:	de b7       	in	r29, 0x3e	; 62
    447e:	9a 83       	std	Y+2, r25	; 0x02
    4480:	89 83       	std	Y+1, r24	; 0x01
    4482:	4b 83       	std	Y+3, r20	; 0x03
    4484:	5c 83       	std	Y+4, r21	; 0x04
    4486:	6d 83       	std	Y+5, r22	; 0x05
    4488:	7e 83       	std	Y+6, r23	; 0x06
    448a:	89 81       	ldd	r24, Y+1	; 0x01
    448c:	9a 81       	ldd	r25, Y+2	; 0x02
    448e:	9c 01       	movw	r18, r24
    4490:	24 55       	subi	r18, 0x54	; 84
    4492:	3f 4f       	sbci	r19, 0xFF	; 255
    4494:	8b 81       	ldd	r24, Y+3	; 0x03
    4496:	9c 81       	ldd	r25, Y+4	; 0x04
    4498:	ad 81       	ldd	r26, Y+5	; 0x05
    449a:	be 81       	ldd	r27, Y+6	; 0x06
    449c:	f9 01       	movw	r30, r18
    449e:	80 83       	st	Z, r24
    44a0:	91 83       	std	Z+1, r25	; 0x01
    44a2:	a2 83       	std	Z+2, r26	; 0x02
    44a4:	b3 83       	std	Z+3, r27	; 0x03
    44a6:	26 96       	adiw	r28, 0x06	; 6
    44a8:	0f b6       	in	r0, 0x3f	; 63
    44aa:	f8 94       	cli
    44ac:	de bf       	out	0x3e, r29	; 62
    44ae:	0f be       	out	0x3f, r0	; 63
    44b0:	cd bf       	out	0x3d, r28	; 61
    44b2:	df 91       	pop	r29
    44b4:	cf 91       	pop	r28
    44b6:	08 95       	ret

000044b8 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>:
			
			long UnrecognizedMsgTypes() const {return unrecognizedMsgTypes; }
    44b8:	cf 93       	push	r28
    44ba:	df 93       	push	r29
    44bc:	1f 92       	push	r1
    44be:	1f 92       	push	r1
    44c0:	cd b7       	in	r28, 0x3d	; 61
    44c2:	de b7       	in	r29, 0x3e	; 62
    44c4:	9a 83       	std	Y+2, r25	; 0x02
    44c6:	89 83       	std	Y+1, r24	; 0x01
    44c8:	89 81       	ldd	r24, Y+1	; 0x01
    44ca:	9a 81       	ldd	r25, Y+2	; 0x02
    44cc:	80 55       	subi	r24, 0x50	; 80
    44ce:	9f 4f       	sbci	r25, 0xFF	; 255
    44d0:	fc 01       	movw	r30, r24
    44d2:	80 81       	ld	r24, Z
    44d4:	91 81       	ldd	r25, Z+1	; 0x01
    44d6:	a2 81       	ldd	r26, Z+2	; 0x02
    44d8:	b3 81       	ldd	r27, Z+3	; 0x03
    44da:	bc 01       	movw	r22, r24
    44dc:	cd 01       	movw	r24, r26
    44de:	0f 90       	pop	r0
    44e0:	0f 90       	pop	r0
    44e2:	df 91       	pop	r29
    44e4:	cf 91       	pop	r28
    44e6:	08 95       	ret

000044e8 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl>:
			void UnrecognizedMsgTypes(long val) { unrecognizedMsgTypes = val; }
    44e8:	cf 93       	push	r28
    44ea:	df 93       	push	r29
    44ec:	00 d0       	rcall	.+0      	; 0x44ee <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl+0x6>
    44ee:	00 d0       	rcall	.+0      	; 0x44f0 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl+0x8>
    44f0:	cd b7       	in	r28, 0x3d	; 61
    44f2:	de b7       	in	r29, 0x3e	; 62
    44f4:	9a 83       	std	Y+2, r25	; 0x02
    44f6:	89 83       	std	Y+1, r24	; 0x01
    44f8:	4b 83       	std	Y+3, r20	; 0x03
    44fa:	5c 83       	std	Y+4, r21	; 0x04
    44fc:	6d 83       	std	Y+5, r22	; 0x05
    44fe:	7e 83       	std	Y+6, r23	; 0x06
    4500:	89 81       	ldd	r24, Y+1	; 0x01
    4502:	9a 81       	ldd	r25, Y+2	; 0x02
    4504:	9c 01       	movw	r18, r24
    4506:	20 55       	subi	r18, 0x50	; 80
    4508:	3f 4f       	sbci	r19, 0xFF	; 255
    450a:	8b 81       	ldd	r24, Y+3	; 0x03
    450c:	9c 81       	ldd	r25, Y+4	; 0x04
    450e:	ad 81       	ldd	r26, Y+5	; 0x05
    4510:	be 81       	ldd	r27, Y+6	; 0x06
    4512:	f9 01       	movw	r30, r18
    4514:	80 83       	st	Z, r24
    4516:	91 83       	std	Z+1, r25	; 0x01
    4518:	a2 83       	std	Z+2, r26	; 0x02
    451a:	b3 83       	std	Z+3, r27	; 0x03
    451c:	26 96       	adiw	r28, 0x06	; 6
    451e:	0f b6       	in	r0, 0x3f	; 63
    4520:	f8 94       	cli
    4522:	de bf       	out	0x3e, r29	; 62
    4524:	0f be       	out	0x3f, r0	; 63
    4526:	cd bf       	out	0x3d, r28	; 61
    4528:	df 91       	pop	r29
    452a:	cf 91       	pop	r28
    452c:	08 95       	ret

0000452e <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>:
			
			long ChecksumErrors() const {return checksumErrors; }
    452e:	cf 93       	push	r28
    4530:	df 93       	push	r29
    4532:	1f 92       	push	r1
    4534:	1f 92       	push	r1
    4536:	cd b7       	in	r28, 0x3d	; 61
    4538:	de b7       	in	r29, 0x3e	; 62
    453a:	9a 83       	std	Y+2, r25	; 0x02
    453c:	89 83       	std	Y+1, r24	; 0x01
    453e:	89 81       	ldd	r24, Y+1	; 0x01
    4540:	9a 81       	ldd	r25, Y+2	; 0x02
    4542:	8c 54       	subi	r24, 0x4C	; 76
    4544:	9f 4f       	sbci	r25, 0xFF	; 255
    4546:	fc 01       	movw	r30, r24
    4548:	80 81       	ld	r24, Z
    454a:	91 81       	ldd	r25, Z+1	; 0x01
    454c:	a2 81       	ldd	r26, Z+2	; 0x02
    454e:	b3 81       	ldd	r27, Z+3	; 0x03
    4550:	bc 01       	movw	r22, r24
    4552:	cd 01       	movw	r24, r26
    4554:	0f 90       	pop	r0
    4556:	0f 90       	pop	r0
    4558:	df 91       	pop	r29
    455a:	cf 91       	pop	r28
    455c:	08 95       	ret

0000455e <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl>:
			void ChecksumErrors(long val) { checksumErrors = val; }
    455e:	cf 93       	push	r28
    4560:	df 93       	push	r29
    4562:	00 d0       	rcall	.+0      	; 0x4564 <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl+0x6>
    4564:	00 d0       	rcall	.+0      	; 0x4566 <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl+0x8>
    4566:	cd b7       	in	r28, 0x3d	; 61
    4568:	de b7       	in	r29, 0x3e	; 62
    456a:	9a 83       	std	Y+2, r25	; 0x02
    456c:	89 83       	std	Y+1, r24	; 0x01
    456e:	4b 83       	std	Y+3, r20	; 0x03
    4570:	5c 83       	std	Y+4, r21	; 0x04
    4572:	6d 83       	std	Y+5, r22	; 0x05
    4574:	7e 83       	std	Y+6, r23	; 0x06
    4576:	89 81       	ldd	r24, Y+1	; 0x01
    4578:	9a 81       	ldd	r25, Y+2	; 0x02
    457a:	9c 01       	movw	r18, r24
    457c:	2c 54       	subi	r18, 0x4C	; 76
    457e:	3f 4f       	sbci	r19, 0xFF	; 255
    4580:	8b 81       	ldd	r24, Y+3	; 0x03
    4582:	9c 81       	ldd	r25, Y+4	; 0x04
    4584:	ad 81       	ldd	r26, Y+5	; 0x05
    4586:	be 81       	ldd	r27, Y+6	; 0x06
    4588:	f9 01       	movw	r30, r18
    458a:	80 83       	st	Z, r24
    458c:	91 83       	std	Z+1, r25	; 0x01
    458e:	a2 83       	std	Z+2, r26	; 0x02
    4590:	b3 83       	std	Z+3, r27	; 0x03
    4592:	26 96       	adiw	r28, 0x06	; 6
    4594:	0f b6       	in	r0, 0x3f	; 63
    4596:	f8 94       	cli
    4598:	de bf       	out	0x3e, r29	; 62
    459a:	0f be       	out	0x3f, r0	; 63
    459c:	cd bf       	out	0x3d, r28	; 61
    459e:	df 91       	pop	r29
    45a0:	cf 91       	pop	r28
    45a2:	08 95       	ret

000045a4 <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>:
				sizeof(UnrecognizedMsgTypes) + 
				sizeof(ChecksumErrors) + 
				sizeof(NumOfBlownFrames);

			
				SystemTelemetryMessage(): Message(MessageType,MessageSize),
    45a4:	cf 93       	push	r28
    45a6:	df 93       	push	r29
    45a8:	1f 92       	push	r1
    45aa:	1f 92       	push	r1
    45ac:	cd b7       	in	r28, 0x3d	; 61
    45ae:	de b7       	in	r29, 0x3e	; 62
    45b0:	9a 83       	std	Y+2, r25	; 0x02
    45b2:	89 83       	std	Y+1, r24	; 0x01
										
														
					Timeouts(0),
					UnrecognizedMsgTypes(0),
					ChecksumErrors(0),
					NumOfBlownFrames(0)
    45b4:	89 81       	ldd	r24, Y+1	; 0x01
    45b6:	9a 81       	ldd	r25, Y+2	; 0x02
    45b8:	49 ec       	ldi	r20, 0xC9	; 201
    45ba:	50 e0       	ldi	r21, 0x00	; 0
    45bc:	62 e0       	ldi	r22, 0x02	; 2
    45be:	0e 94 43 1e 	call	0x3c86	; 0x3c86 <_ZN10helicopter8messages7MessageC1Ehi>
    45c2:	89 81       	ldd	r24, Y+1	; 0x01
    45c4:	9a 81       	ldd	r25, Y+2	; 0x02
    45c6:	28 e4       	ldi	r18, 0x48	; 72
    45c8:	32 e0       	ldi	r19, 0x02	; 2
    45ca:	fc 01       	movw	r30, r24
    45cc:	31 83       	std	Z+1, r19	; 0x01
    45ce:	20 83       	st	Z, r18
    45d0:	89 81       	ldd	r24, Y+1	; 0x01
    45d2:	9a 81       	ldd	r25, Y+2	; 0x02
    45d4:	fc 01       	movw	r30, r24
    45d6:	15 82       	std	Z+5, r1	; 0x05
    45d8:	16 82       	std	Z+6, r1	; 0x06
    45da:	17 82       	std	Z+7, r1	; 0x07
    45dc:	10 86       	std	Z+8, r1	; 0x08
    45de:	89 81       	ldd	r24, Y+1	; 0x01
    45e0:	9a 81       	ldd	r25, Y+2	; 0x02
    45e2:	fc 01       	movw	r30, r24
    45e4:	11 86       	std	Z+9, r1	; 0x09
    45e6:	12 86       	std	Z+10, r1	; 0x0a
    45e8:	13 86       	std	Z+11, r1	; 0x0b
    45ea:	14 86       	std	Z+12, r1	; 0x0c
    45ec:	89 81       	ldd	r24, Y+1	; 0x01
    45ee:	9a 81       	ldd	r25, Y+2	; 0x02
    45f0:	fc 01       	movw	r30, r24
    45f2:	15 86       	std	Z+13, r1	; 0x0d
    45f4:	16 86       	std	Z+14, r1	; 0x0e
    45f6:	17 86       	std	Z+15, r1	; 0x0f
    45f8:	10 8a       	std	Z+16, r1	; 0x10
    45fa:	89 81       	ldd	r24, Y+1	; 0x01
    45fc:	9a 81       	ldd	r25, Y+2	; 0x02
    45fe:	fc 01       	movw	r30, r24
    4600:	11 8a       	std	Z+17, r1	; 0x11
    4602:	12 8a       	std	Z+18, r1	; 0x12
    4604:	13 8a       	std	Z+19, r1	; 0x13
    4606:	14 8a       	std	Z+20, r1	; 0x14
    4608:	89 81       	ldd	r24, Y+1	; 0x01
    460a:	9a 81       	ldd	r25, Y+2	; 0x02
    460c:	fc 01       	movw	r30, r24
    460e:	15 8a       	std	Z+21, r1	; 0x15
    4610:	16 8a       	std	Z+22, r1	; 0x16
    4612:	17 8a       	std	Z+23, r1	; 0x17
    4614:	10 8e       	std	Z+24, r1	; 0x18
    4616:	89 81       	ldd	r24, Y+1	; 0x01
    4618:	9a 81       	ldd	r25, Y+2	; 0x02
    461a:	fc 01       	movw	r30, r24
    461c:	11 8e       	std	Z+25, r1	; 0x19
    461e:	12 8e       	std	Z+26, r1	; 0x1a
    4620:	13 8e       	std	Z+27, r1	; 0x1b
    4622:	14 8e       	std	Z+28, r1	; 0x1c
    4624:	89 81       	ldd	r24, Y+1	; 0x01
    4626:	9a 81       	ldd	r25, Y+2	; 0x02
    4628:	fc 01       	movw	r30, r24
    462a:	15 8e       	std	Z+29, r1	; 0x1d
    462c:	16 8e       	std	Z+30, r1	; 0x1e
    462e:	17 8e       	std	Z+31, r1	; 0x1f
    4630:	10 a2       	std	Z+32, r1	; 0x20
    4632:	89 81       	ldd	r24, Y+1	; 0x01
    4634:	9a 81       	ldd	r25, Y+2	; 0x02
    4636:	fc 01       	movw	r30, r24
    4638:	11 a2       	std	Z+33, r1	; 0x21
    463a:	12 a2       	std	Z+34, r1	; 0x22
    463c:	13 a2       	std	Z+35, r1	; 0x23
    463e:	14 a2       	std	Z+36, r1	; 0x24
    4640:	89 81       	ldd	r24, Y+1	; 0x01
    4642:	9a 81       	ldd	r25, Y+2	; 0x02
    4644:	fc 01       	movw	r30, r24
    4646:	15 a2       	std	Z+37, r1	; 0x25
    4648:	16 a2       	std	Z+38, r1	; 0x26
    464a:	17 a2       	std	Z+39, r1	; 0x27
    464c:	10 a6       	std	Z+40, r1	; 0x28
    464e:	89 81       	ldd	r24, Y+1	; 0x01
    4650:	9a 81       	ldd	r25, Y+2	; 0x02
    4652:	fc 01       	movw	r30, r24
    4654:	11 a6       	std	Z+41, r1	; 0x29
    4656:	12 a6       	std	Z+42, r1	; 0x2a
    4658:	13 a6       	std	Z+43, r1	; 0x2b
    465a:	14 a6       	std	Z+44, r1	; 0x2c
    465c:	89 81       	ldd	r24, Y+1	; 0x01
    465e:	9a 81       	ldd	r25, Y+2	; 0x02
    4660:	fc 01       	movw	r30, r24
    4662:	15 a6       	std	Z+45, r1	; 0x2d
    4664:	16 a6       	std	Z+46, r1	; 0x2e
    4666:	17 a6       	std	Z+47, r1	; 0x2f
    4668:	10 aa       	std	Z+48, r1	; 0x30
    466a:	89 81       	ldd	r24, Y+1	; 0x01
    466c:	9a 81       	ldd	r25, Y+2	; 0x02
    466e:	fc 01       	movw	r30, r24
    4670:	11 aa       	std	Z+49, r1	; 0x31
    4672:	12 aa       	std	Z+50, r1	; 0x32
    4674:	13 aa       	std	Z+51, r1	; 0x33
    4676:	14 aa       	std	Z+52, r1	; 0x34
    4678:	89 81       	ldd	r24, Y+1	; 0x01
    467a:	9a 81       	ldd	r25, Y+2	; 0x02
    467c:	fc 01       	movw	r30, r24
    467e:	15 aa       	std	Z+53, r1	; 0x35
    4680:	16 aa       	std	Z+54, r1	; 0x36
    4682:	17 aa       	std	Z+55, r1	; 0x37
    4684:	10 ae       	std	Z+56, r1	; 0x38
    4686:	89 81       	ldd	r24, Y+1	; 0x01
    4688:	9a 81       	ldd	r25, Y+2	; 0x02
    468a:	fc 01       	movw	r30, r24
    468c:	11 ae       	std	Z+57, r1	; 0x39
    468e:	12 ae       	std	Z+58, r1	; 0x3a
    4690:	13 ae       	std	Z+59, r1	; 0x3b
    4692:	14 ae       	std	Z+60, r1	; 0x3c
    4694:	89 81       	ldd	r24, Y+1	; 0x01
    4696:	9a 81       	ldd	r25, Y+2	; 0x02
    4698:	cd 96       	adiw	r24, 0x3d	; 61
    469a:	fc 01       	movw	r30, r24
    469c:	10 82       	st	Z, r1
    469e:	11 82       	std	Z+1, r1	; 0x01
    46a0:	12 82       	std	Z+2, r1	; 0x02
    46a2:	13 82       	std	Z+3, r1	; 0x03
    46a4:	89 81       	ldd	r24, Y+1	; 0x01
    46a6:	9a 81       	ldd	r25, Y+2	; 0x02
    46a8:	8f 5b       	subi	r24, 0xBF	; 191
    46aa:	9f 4f       	sbci	r25, 0xFF	; 255
    46ac:	fc 01       	movw	r30, r24
    46ae:	10 82       	st	Z, r1
    46b0:	11 82       	std	Z+1, r1	; 0x01
    46b2:	12 82       	std	Z+2, r1	; 0x02
    46b4:	13 82       	std	Z+3, r1	; 0x03
    46b6:	89 81       	ldd	r24, Y+1	; 0x01
    46b8:	9a 81       	ldd	r25, Y+2	; 0x02
    46ba:	8b 5b       	subi	r24, 0xBB	; 187
    46bc:	9f 4f       	sbci	r25, 0xFF	; 255
    46be:	fc 01       	movw	r30, r24
    46c0:	10 82       	st	Z, r1
    46c2:	11 82       	std	Z+1, r1	; 0x01
    46c4:	12 82       	std	Z+2, r1	; 0x02
    46c6:	13 82       	std	Z+3, r1	; 0x03
    46c8:	89 81       	ldd	r24, Y+1	; 0x01
    46ca:	9a 81       	ldd	r25, Y+2	; 0x02
    46cc:	87 5b       	subi	r24, 0xB7	; 183
    46ce:	9f 4f       	sbci	r25, 0xFF	; 255
    46d0:	fc 01       	movw	r30, r24
    46d2:	10 82       	st	Z, r1
    46d4:	11 82       	std	Z+1, r1	; 0x01
    46d6:	12 82       	std	Z+2, r1	; 0x02
    46d8:	13 82       	std	Z+3, r1	; 0x03
    46da:	89 81       	ldd	r24, Y+1	; 0x01
    46dc:	9a 81       	ldd	r25, Y+2	; 0x02
    46de:	83 5b       	subi	r24, 0xB3	; 179
    46e0:	9f 4f       	sbci	r25, 0xFF	; 255
    46e2:	fc 01       	movw	r30, r24
    46e4:	10 82       	st	Z, r1
    46e6:	11 82       	std	Z+1, r1	; 0x01
    46e8:	12 82       	std	Z+2, r1	; 0x02
    46ea:	13 82       	std	Z+3, r1	; 0x03
    46ec:	89 81       	ldd	r24, Y+1	; 0x01
    46ee:	9a 81       	ldd	r25, Y+2	; 0x02
    46f0:	8f 5a       	subi	r24, 0xAF	; 175
    46f2:	9f 4f       	sbci	r25, 0xFF	; 255
    46f4:	fc 01       	movw	r30, r24
    46f6:	10 82       	st	Z, r1
    46f8:	11 82       	std	Z+1, r1	; 0x01
    46fa:	12 82       	std	Z+2, r1	; 0x02
    46fc:	13 82       	std	Z+3, r1	; 0x03
    46fe:	89 81       	ldd	r24, Y+1	; 0x01
    4700:	9a 81       	ldd	r25, Y+2	; 0x02
    4702:	8b 5a       	subi	r24, 0xAB	; 171
    4704:	9f 4f       	sbci	r25, 0xFF	; 255
    4706:	fc 01       	movw	r30, r24
    4708:	10 82       	st	Z, r1
    470a:	11 82       	std	Z+1, r1	; 0x01
    470c:	12 82       	std	Z+2, r1	; 0x02
    470e:	13 82       	std	Z+3, r1	; 0x03
    4710:	89 81       	ldd	r24, Y+1	; 0x01
    4712:	9a 81       	ldd	r25, Y+2	; 0x02
    4714:	87 5a       	subi	r24, 0xA7	; 167
    4716:	9f 4f       	sbci	r25, 0xFF	; 255
    4718:	fc 01       	movw	r30, r24
    471a:	10 82       	st	Z, r1
    471c:	11 82       	std	Z+1, r1	; 0x01
    471e:	12 82       	std	Z+2, r1	; 0x02
    4720:	13 82       	std	Z+3, r1	; 0x03
    4722:	89 81       	ldd	r24, Y+1	; 0x01
    4724:	9a 81       	ldd	r25, Y+2	; 0x02
    4726:	83 5a       	subi	r24, 0xA3	; 163
    4728:	9f 4f       	sbci	r25, 0xFF	; 255
    472a:	fc 01       	movw	r30, r24
    472c:	10 82       	st	Z, r1
    472e:	11 82       	std	Z+1, r1	; 0x01
    4730:	12 82       	std	Z+2, r1	; 0x02
    4732:	13 82       	std	Z+3, r1	; 0x03
    4734:	89 81       	ldd	r24, Y+1	; 0x01
    4736:	9a 81       	ldd	r25, Y+2	; 0x02
    4738:	8f 59       	subi	r24, 0x9F	; 159
    473a:	9f 4f       	sbci	r25, 0xFF	; 255
    473c:	fc 01       	movw	r30, r24
    473e:	10 82       	st	Z, r1
    4740:	11 82       	std	Z+1, r1	; 0x01
    4742:	12 82       	std	Z+2, r1	; 0x02
    4744:	13 82       	std	Z+3, r1	; 0x03
    4746:	89 81       	ldd	r24, Y+1	; 0x01
    4748:	9a 81       	ldd	r25, Y+2	; 0x02
    474a:	8b 59       	subi	r24, 0x9B	; 155
    474c:	9f 4f       	sbci	r25, 0xFF	; 255
    474e:	fc 01       	movw	r30, r24
    4750:	10 82       	st	Z, r1
    4752:	11 82       	std	Z+1, r1	; 0x01
    4754:	12 82       	std	Z+2, r1	; 0x02
    4756:	13 82       	std	Z+3, r1	; 0x03
    4758:	89 81       	ldd	r24, Y+1	; 0x01
    475a:	9a 81       	ldd	r25, Y+2	; 0x02
    475c:	87 59       	subi	r24, 0x97	; 151
    475e:	9f 4f       	sbci	r25, 0xFF	; 255
    4760:	fc 01       	movw	r30, r24
    4762:	10 82       	st	Z, r1
    4764:	11 82       	std	Z+1, r1	; 0x01
    4766:	12 82       	std	Z+2, r1	; 0x02
    4768:	13 82       	std	Z+3, r1	; 0x03
    476a:	89 81       	ldd	r24, Y+1	; 0x01
    476c:	9a 81       	ldd	r25, Y+2	; 0x02
    476e:	83 59       	subi	r24, 0x93	; 147
    4770:	9f 4f       	sbci	r25, 0xFF	; 255
    4772:	fc 01       	movw	r30, r24
    4774:	10 82       	st	Z, r1
    4776:	11 82       	std	Z+1, r1	; 0x01
    4778:	12 82       	std	Z+2, r1	; 0x02
    477a:	13 82       	std	Z+3, r1	; 0x03
    477c:	89 81       	ldd	r24, Y+1	; 0x01
    477e:	9a 81       	ldd	r25, Y+2	; 0x02
    4780:	8f 58       	subi	r24, 0x8F	; 143
    4782:	9f 4f       	sbci	r25, 0xFF	; 255
    4784:	fc 01       	movw	r30, r24
    4786:	10 82       	st	Z, r1
    4788:	11 82       	std	Z+1, r1	; 0x01
    478a:	12 82       	std	Z+2, r1	; 0x02
    478c:	13 82       	std	Z+3, r1	; 0x03
    478e:	89 81       	ldd	r24, Y+1	; 0x01
    4790:	9a 81       	ldd	r25, Y+2	; 0x02
    4792:	8b 58       	subi	r24, 0x8B	; 139
    4794:	9f 4f       	sbci	r25, 0xFF	; 255
    4796:	fc 01       	movw	r30, r24
    4798:	10 82       	st	Z, r1
    479a:	11 82       	std	Z+1, r1	; 0x01
    479c:	12 82       	std	Z+2, r1	; 0x02
    479e:	13 82       	std	Z+3, r1	; 0x03
    47a0:	89 81       	ldd	r24, Y+1	; 0x01
    47a2:	9a 81       	ldd	r25, Y+2	; 0x02
    47a4:	87 58       	subi	r24, 0x87	; 135
    47a6:	9f 4f       	sbci	r25, 0xFF	; 255
    47a8:	fc 01       	movw	r30, r24
    47aa:	10 82       	st	Z, r1
    47ac:	11 82       	std	Z+1, r1	; 0x01
    47ae:	12 82       	std	Z+2, r1	; 0x02
    47b0:	13 82       	std	Z+3, r1	; 0x03
    47b2:	89 81       	ldd	r24, Y+1	; 0x01
    47b4:	9a 81       	ldd	r25, Y+2	; 0x02
    47b6:	83 58       	subi	r24, 0x83	; 131
    47b8:	9f 4f       	sbci	r25, 0xFF	; 255
    47ba:	fc 01       	movw	r30, r24
    47bc:	10 82       	st	Z, r1
    47be:	11 82       	std	Z+1, r1	; 0x01
    47c0:	12 82       	std	Z+2, r1	; 0x02
    47c2:	13 82       	std	Z+3, r1	; 0x03
    47c4:	89 81       	ldd	r24, Y+1	; 0x01
    47c6:	9a 81       	ldd	r25, Y+2	; 0x02
    47c8:	8f 57       	subi	r24, 0x7F	; 127
    47ca:	9f 4f       	sbci	r25, 0xFF	; 255
    47cc:	fc 01       	movw	r30, r24
    47ce:	10 82       	st	Z, r1
    47d0:	11 82       	std	Z+1, r1	; 0x01
    47d2:	12 82       	std	Z+2, r1	; 0x02
    47d4:	13 82       	std	Z+3, r1	; 0x03
    47d6:	89 81       	ldd	r24, Y+1	; 0x01
    47d8:	9a 81       	ldd	r25, Y+2	; 0x02
    47da:	8b 57       	subi	r24, 0x7B	; 123
    47dc:	9f 4f       	sbci	r25, 0xFF	; 255
    47de:	fc 01       	movw	r30, r24
    47e0:	10 82       	st	Z, r1
    47e2:	11 82       	std	Z+1, r1	; 0x01
    47e4:	12 82       	std	Z+2, r1	; 0x02
    47e6:	13 82       	std	Z+3, r1	; 0x03
    47e8:	89 81       	ldd	r24, Y+1	; 0x01
    47ea:	9a 81       	ldd	r25, Y+2	; 0x02
    47ec:	87 57       	subi	r24, 0x77	; 119
    47ee:	9f 4f       	sbci	r25, 0xFF	; 255
    47f0:	fc 01       	movw	r30, r24
    47f2:	10 82       	st	Z, r1
    47f4:	11 82       	std	Z+1, r1	; 0x01
    47f6:	12 82       	std	Z+2, r1	; 0x02
    47f8:	13 82       	std	Z+3, r1	; 0x03
    47fa:	89 81       	ldd	r24, Y+1	; 0x01
    47fc:	9a 81       	ldd	r25, Y+2	; 0x02
    47fe:	83 57       	subi	r24, 0x73	; 115
    4800:	9f 4f       	sbci	r25, 0xFF	; 255
    4802:	fc 01       	movw	r30, r24
    4804:	10 82       	st	Z, r1
    4806:	11 82       	std	Z+1, r1	; 0x01
    4808:	12 82       	std	Z+2, r1	; 0x02
    480a:	13 82       	std	Z+3, r1	; 0x03
    480c:	89 81       	ldd	r24, Y+1	; 0x01
    480e:	9a 81       	ldd	r25, Y+2	; 0x02
    4810:	8f 56       	subi	r24, 0x6F	; 111
    4812:	9f 4f       	sbci	r25, 0xFF	; 255
    4814:	fc 01       	movw	r30, r24
    4816:	10 82       	st	Z, r1
    4818:	11 82       	std	Z+1, r1	; 0x01
    481a:	12 82       	std	Z+2, r1	; 0x02
    481c:	13 82       	std	Z+3, r1	; 0x03
    481e:	89 81       	ldd	r24, Y+1	; 0x01
    4820:	9a 81       	ldd	r25, Y+2	; 0x02
    4822:	8b 56       	subi	r24, 0x6B	; 107
    4824:	9f 4f       	sbci	r25, 0xFF	; 255
    4826:	fc 01       	movw	r30, r24
    4828:	10 82       	st	Z, r1
    482a:	11 82       	std	Z+1, r1	; 0x01
    482c:	12 82       	std	Z+2, r1	; 0x02
    482e:	13 82       	std	Z+3, r1	; 0x03
    4830:	89 81       	ldd	r24, Y+1	; 0x01
    4832:	9a 81       	ldd	r25, Y+2	; 0x02
    4834:	87 56       	subi	r24, 0x67	; 103
    4836:	9f 4f       	sbci	r25, 0xFF	; 255
    4838:	fc 01       	movw	r30, r24
    483a:	10 82       	st	Z, r1
    483c:	11 82       	std	Z+1, r1	; 0x01
    483e:	12 82       	std	Z+2, r1	; 0x02
    4840:	13 82       	std	Z+3, r1	; 0x03
    4842:	89 81       	ldd	r24, Y+1	; 0x01
    4844:	9a 81       	ldd	r25, Y+2	; 0x02
    4846:	83 56       	subi	r24, 0x63	; 99
    4848:	9f 4f       	sbci	r25, 0xFF	; 255
    484a:	fc 01       	movw	r30, r24
    484c:	10 82       	st	Z, r1
    484e:	11 82       	std	Z+1, r1	; 0x01
    4850:	12 82       	std	Z+2, r1	; 0x02
    4852:	13 82       	std	Z+3, r1	; 0x03
    4854:	89 81       	ldd	r24, Y+1	; 0x01
    4856:	9a 81       	ldd	r25, Y+2	; 0x02
    4858:	8f 55       	subi	r24, 0x5F	; 95
    485a:	9f 4f       	sbci	r25, 0xFF	; 255
    485c:	fc 01       	movw	r30, r24
    485e:	10 82       	st	Z, r1
    4860:	11 82       	std	Z+1, r1	; 0x01
    4862:	12 82       	std	Z+2, r1	; 0x02
    4864:	13 82       	std	Z+3, r1	; 0x03
    4866:	89 81       	ldd	r24, Y+1	; 0x01
    4868:	9a 81       	ldd	r25, Y+2	; 0x02
    486a:	8b 55       	subi	r24, 0x5B	; 91
    486c:	9f 4f       	sbci	r25, 0xFF	; 255
    486e:	fc 01       	movw	r30, r24
    4870:	10 82       	st	Z, r1
    4872:	11 82       	std	Z+1, r1	; 0x01
    4874:	12 82       	std	Z+2, r1	; 0x02
    4876:	13 82       	std	Z+3, r1	; 0x03
    4878:	89 81       	ldd	r24, Y+1	; 0x01
    487a:	9a 81       	ldd	r25, Y+2	; 0x02
    487c:	87 55       	subi	r24, 0x57	; 87
    487e:	9f 4f       	sbci	r25, 0xFF	; 255
    4880:	fc 01       	movw	r30, r24
    4882:	10 82       	st	Z, r1
    4884:	11 82       	std	Z+1, r1	; 0x01
    4886:	12 82       	std	Z+2, r1	; 0x02
    4888:	13 82       	std	Z+3, r1	; 0x03
    488a:	89 81       	ldd	r24, Y+1	; 0x01
    488c:	9a 81       	ldd	r25, Y+2	; 0x02
    488e:	83 55       	subi	r24, 0x53	; 83
    4890:	9f 4f       	sbci	r25, 0xFF	; 255
    4892:	fc 01       	movw	r30, r24
    4894:	10 82       	st	Z, r1
    4896:	11 82       	std	Z+1, r1	; 0x01
    4898:	12 82       	std	Z+2, r1	; 0x02
    489a:	13 82       	std	Z+3, r1	; 0x03
    489c:	89 81       	ldd	r24, Y+1	; 0x01
    489e:	9a 81       	ldd	r25, Y+2	; 0x02
    48a0:	8f 54       	subi	r24, 0x4F	; 79
    48a2:	9f 4f       	sbci	r25, 0xFF	; 255
    48a4:	fc 01       	movw	r30, r24
    48a6:	10 82       	st	Z, r1
    48a8:	11 82       	std	Z+1, r1	; 0x01
    48aa:	12 82       	std	Z+2, r1	; 0x02
    48ac:	13 82       	std	Z+3, r1	; 0x03
    48ae:	89 81       	ldd	r24, Y+1	; 0x01
    48b0:	9a 81       	ldd	r25, Y+2	; 0x02
    48b2:	8b 54       	subi	r24, 0x4B	; 75
    48b4:	9f 4f       	sbci	r25, 0xFF	; 255
    48b6:	fc 01       	movw	r30, r24
    48b8:	10 82       	st	Z, r1
    48ba:	11 82       	std	Z+1, r1	; 0x01
    48bc:	12 82       	std	Z+2, r1	; 0x02
    48be:	13 82       	std	Z+3, r1	; 0x03
    48c0:	89 81       	ldd	r24, Y+1	; 0x01
    48c2:	9a 81       	ldd	r25, Y+2	; 0x02
    48c4:	87 54       	subi	r24, 0x47	; 71
    48c6:	9f 4f       	sbci	r25, 0xFF	; 255
    48c8:	fc 01       	movw	r30, r24
    48ca:	10 82       	st	Z, r1
    48cc:	11 82       	std	Z+1, r1	; 0x01
    48ce:	12 82       	std	Z+2, r1	; 0x02
    48d0:	13 82       	std	Z+3, r1	; 0x03
    48d2:	89 81       	ldd	r24, Y+1	; 0x01
    48d4:	9a 81       	ldd	r25, Y+2	; 0x02
    48d6:	83 54       	subi	r24, 0x43	; 67
    48d8:	9f 4f       	sbci	r25, 0xFF	; 255
    48da:	fc 01       	movw	r30, r24
    48dc:	10 82       	st	Z, r1
    48de:	11 82       	std	Z+1, r1	; 0x01
    48e0:	12 82       	std	Z+2, r1	; 0x02
    48e2:	13 82       	std	Z+3, r1	; 0x03
    48e4:	89 81       	ldd	r24, Y+1	; 0x01
    48e6:	9a 81       	ldd	r25, Y+2	; 0x02
    48e8:	8f 53       	subi	r24, 0x3F	; 63
    48ea:	9f 4f       	sbci	r25, 0xFF	; 255
    48ec:	fc 01       	movw	r30, r24
    48ee:	10 82       	st	Z, r1
    48f0:	11 82       	std	Z+1, r1	; 0x01
    48f2:	12 82       	std	Z+2, r1	; 0x02
    48f4:	13 82       	std	Z+3, r1	; 0x03
    48f6:	89 81       	ldd	r24, Y+1	; 0x01
    48f8:	9a 81       	ldd	r25, Y+2	; 0x02
    48fa:	8b 53       	subi	r24, 0x3B	; 59
    48fc:	9f 4f       	sbci	r25, 0xFF	; 255
    48fe:	fc 01       	movw	r30, r24
    4900:	10 82       	st	Z, r1
    4902:	11 82       	std	Z+1, r1	; 0x01
    4904:	12 82       	std	Z+2, r1	; 0x02
    4906:	13 82       	std	Z+3, r1	; 0x03
    4908:	89 81       	ldd	r24, Y+1	; 0x01
    490a:	9a 81       	ldd	r25, Y+2	; 0x02
    490c:	87 53       	subi	r24, 0x37	; 55
    490e:	9f 4f       	sbci	r25, 0xFF	; 255
    4910:	fc 01       	movw	r30, r24
    4912:	10 82       	st	Z, r1
    4914:	11 82       	std	Z+1, r1	; 0x01
    4916:	12 82       	std	Z+2, r1	; 0x02
    4918:	13 82       	std	Z+3, r1	; 0x03
				{
				
				}
    491a:	0f 90       	pop	r0
    491c:	0f 90       	pop	r0
    491e:	df 91       	pop	r29
    4920:	cf 91       	pop	r28
    4922:	08 95       	ret

00004924 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>:
			
				~SystemTelemetryMessage() {}
    4924:	cf 93       	push	r28
    4926:	df 93       	push	r29
    4928:	1f 92       	push	r1
    492a:	1f 92       	push	r1
    492c:	cd b7       	in	r28, 0x3d	; 61
    492e:	de b7       	in	r29, 0x3e	; 62
    4930:	9a 83       	std	Y+2, r25	; 0x02
    4932:	89 83       	std	Y+1, r24	; 0x01
    4934:	89 81       	ldd	r24, Y+1	; 0x01
    4936:	9a 81       	ldd	r25, Y+2	; 0x02
    4938:	28 e4       	ldi	r18, 0x48	; 72
    493a:	32 e0       	ldi	r19, 0x02	; 2
    493c:	fc 01       	movw	r30, r24
    493e:	31 83       	std	Z+1, r19	; 0x01
    4940:	20 83       	st	Z, r18
    4942:	89 81       	ldd	r24, Y+1	; 0x01
    4944:	9a 81       	ldd	r25, Y+2	; 0x02
    4946:	0e 94 de 1d 	call	0x3bbc	; 0x3bbc <_ZN10helicopter8messages7MessageD1Ev>
    494a:	80 e0       	ldi	r24, 0x00	; 0
    494c:	90 e0       	ldi	r25, 0x00	; 0
    494e:	81 70       	andi	r24, 0x01	; 1
    4950:	99 27       	eor	r25, r25
    4952:	00 97       	sbiw	r24, 0x00	; 0
    4954:	21 f0       	breq	.+8      	; 0x495e <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev+0x3a>
    4956:	89 81       	ldd	r24, Y+1	; 0x01
    4958:	9a 81       	ldd	r25, Y+2	; 0x02
    495a:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    495e:	0f 90       	pop	r0
    4960:	0f 90       	pop	r0
    4962:	df 91       	pop	r29
    4964:	cf 91       	pop	r28
    4966:	08 95       	ret

00004968 <_ZN10helicopter8messages22SystemTelemetryMessageD0Ev>:
    4968:	cf 93       	push	r28
    496a:	df 93       	push	r29
    496c:	1f 92       	push	r1
    496e:	1f 92       	push	r1
    4970:	cd b7       	in	r28, 0x3d	; 61
    4972:	de b7       	in	r29, 0x3e	; 62
    4974:	9a 83       	std	Y+2, r25	; 0x02
    4976:	89 83       	std	Y+1, r24	; 0x01
    4978:	89 81       	ldd	r24, Y+1	; 0x01
    497a:	9a 81       	ldd	r25, Y+2	; 0x02
    497c:	0e 94 92 24 	call	0x4924	; 0x4924 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>
    4980:	89 81       	ldd	r24, Y+1	; 0x01
    4982:	9a 81       	ldd	r25, Y+2	; 0x02
    4984:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    4988:	0f 90       	pop	r0
    498a:	0f 90       	pop	r0
    498c:	df 91       	pop	r29
    498e:	cf 91       	pop	r28
    4990:	08 95       	ret

00004992 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv>:

using namespace helicopter::messages;


byte *SystemTelemetryMessage::getBytes()
{
    4992:	cf 93       	push	r28
    4994:	df 93       	push	r29
    4996:	00 d0       	rcall	.+0      	; 0x4998 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv+0x6>
    4998:	00 d0       	rcall	.+0      	; 0x499a <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv+0x8>
    499a:	cd b7       	in	r28, 0x3d	; 61
    499c:	de b7       	in	r29, 0x3e	; 62
    499e:	9e 83       	std	Y+6, r25	; 0x06
    49a0:	8d 83       	std	Y+5, r24	; 0x05
	byte *msg = new byte[MessageSize];
    49a2:	89 ec       	ldi	r24, 0xC9	; 201
    49a4:	90 e0       	ldi	r25, 0x00	; 0
    49a6:	0e 94 39 38 	call	0x7072	; 0x7072 <_Znaj>
    49aa:	9a 83       	std	Y+2, r25	; 0x02
    49ac:	89 83       	std	Y+1, r24	; 0x01
	byte *msgPtr = msg;
    49ae:	89 81       	ldd	r24, Y+1	; 0x01
    49b0:	9a 81       	ldd	r25, Y+2	; 0x02
    49b2:	9c 83       	std	Y+4, r25	; 0x04
    49b4:	8b 83       	std	Y+3, r24	; 0x03
	
	encode (msgPtr, msgType);
    49b6:	8d 81       	ldd	r24, Y+5	; 0x05
    49b8:	9e 81       	ldd	r25, Y+6	; 0x06
    49ba:	ac 01       	movw	r20, r24
    49bc:	4e 5f       	subi	r20, 0xFE	; 254
    49be:	5f 4f       	sbci	r21, 0xFF	; 255
    49c0:	8d 81       	ldd	r24, Y+5	; 0x05
    49c2:	9e 81       	ldd	r25, Y+6	; 0x06
    49c4:	9e 01       	movw	r18, r28
    49c6:	2d 5f       	subi	r18, 0xFD	; 253
    49c8:	3f 4f       	sbci	r19, 0xFF	; 255
    49ca:	b9 01       	movw	r22, r18
    49cc:	0e 94 5a 1f 	call	0x3eb4	; 0x3eb4 <_ZN10helicopter8messages7Message6encodeERPhRh>
	encode (msgPtr, MagYaw);
    49d0:	8d 81       	ldd	r24, Y+5	; 0x05
    49d2:	9e 81       	ldd	r25, Y+6	; 0x06
    49d4:	ac 01       	movw	r20, r24
    49d6:	4b 5f       	subi	r20, 0xFB	; 251
    49d8:	5f 4f       	sbci	r21, 0xFF	; 255
    49da:	8d 81       	ldd	r24, Y+5	; 0x05
    49dc:	9e 81       	ldd	r25, Y+6	; 0x06
    49de:	9e 01       	movw	r18, r28
    49e0:	2d 5f       	subi	r18, 0xFD	; 253
    49e2:	3f 4f       	sbci	r19, 0xFF	; 255
    49e4:	b9 01       	movw	r22, r18
    49e6:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawVelocityDegreesPerSecond);
    49ea:	8d 81       	ldd	r24, Y+5	; 0x05
    49ec:	9e 81       	ldd	r25, Y+6	; 0x06
    49ee:	ac 01       	movw	r20, r24
    49f0:	47 5f       	subi	r20, 0xF7	; 247
    49f2:	5f 4f       	sbci	r21, 0xFF	; 255
    49f4:	8d 81       	ldd	r24, Y+5	; 0x05
    49f6:	9e 81       	ldd	r25, Y+6	; 0x06
    49f8:	9e 01       	movw	r18, r28
    49fa:	2d 5f       	subi	r18, 0xFD	; 253
    49fc:	3f 4f       	sbci	r19, 0xFF	; 255
    49fe:	b9 01       	movw	r22, r18
    4a00:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawIntegral);
    4a04:	8d 81       	ldd	r24, Y+5	; 0x05
    4a06:	9e 81       	ldd	r25, Y+6	; 0x06
    4a08:	ac 01       	movw	r20, r24
    4a0a:	43 5f       	subi	r20, 0xF3	; 243
    4a0c:	5f 4f       	sbci	r21, 0xFF	; 255
    4a0e:	8d 81       	ldd	r24, Y+5	; 0x05
    4a10:	9e 81       	ldd	r25, Y+6	; 0x06
    4a12:	9e 01       	movw	r18, r28
    4a14:	2d 5f       	subi	r18, 0xFD	; 253
    4a16:	3f 4f       	sbci	r19, 0xFF	; 255
    4a18:	b9 01       	movw	r22, r18
    4a1a:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawProportional);
    4a1e:	8d 81       	ldd	r24, Y+5	; 0x05
    4a20:	9e 81       	ldd	r25, Y+6	; 0x06
    4a22:	ac 01       	movw	r20, r24
    4a24:	4f 5e       	subi	r20, 0xEF	; 239
    4a26:	5f 4f       	sbci	r21, 0xFF	; 255
    4a28:	8d 81       	ldd	r24, Y+5	; 0x05
    4a2a:	9e 81       	ldd	r25, Y+6	; 0x06
    4a2c:	9e 01       	movw	r18, r28
    4a2e:	2d 5f       	subi	r18, 0xFD	; 253
    4a30:	3f 4f       	sbci	r19, 0xFF	; 255
    4a32:	b9 01       	movw	r22, r18
    4a34:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawDerivativeError);
    4a38:	8d 81       	ldd	r24, Y+5	; 0x05
    4a3a:	9e 81       	ldd	r25, Y+6	; 0x06
    4a3c:	ac 01       	movw	r20, r24
    4a3e:	4b 5e       	subi	r20, 0xEB	; 235
    4a40:	5f 4f       	sbci	r21, 0xFF	; 255
    4a42:	8d 81       	ldd	r24, Y+5	; 0x05
    4a44:	9e 81       	ldd	r25, Y+6	; 0x06
    4a46:	9e 01       	movw	r18, r28
    4a48:	2d 5f       	subi	r18, 0xFD	; 253
    4a4a:	3f 4f       	sbci	r19, 0xFF	; 255
    4a4c:	b9 01       	movw	r22, r18
    4a4e:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawControl);
    4a52:	8d 81       	ldd	r24, Y+5	; 0x05
    4a54:	9e 81       	ldd	r25, Y+6	; 0x06
    4a56:	ac 01       	movw	r20, r24
    4a58:	47 5e       	subi	r20, 0xE7	; 231
    4a5a:	5f 4f       	sbci	r21, 0xFF	; 255
    4a5c:	8d 81       	ldd	r24, Y+5	; 0x05
    4a5e:	9e 81       	ldd	r25, Y+6	; 0x06
    4a60:	9e 01       	movw	r18, r28
    4a62:	2d 5f       	subi	r18, 0xFD	; 253
    4a64:	3f 4f       	sbci	r19, 0xFF	; 255
    4a66:	b9 01       	movw	r22, r18
    4a68:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawIntegralGain);
    4a6c:	8d 81       	ldd	r24, Y+5	; 0x05
    4a6e:	9e 81       	ldd	r25, Y+6	; 0x06
    4a70:	ac 01       	movw	r20, r24
    4a72:	43 5e       	subi	r20, 0xE3	; 227
    4a74:	5f 4f       	sbci	r21, 0xFF	; 255
    4a76:	8d 81       	ldd	r24, Y+5	; 0x05
    4a78:	9e 81       	ldd	r25, Y+6	; 0x06
    4a7a:	9e 01       	movw	r18, r28
    4a7c:	2d 5f       	subi	r18, 0xFD	; 253
    4a7e:	3f 4f       	sbci	r19, 0xFF	; 255
    4a80:	b9 01       	movw	r22, r18
    4a82:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawDerivativeGain);
    4a86:	8d 81       	ldd	r24, Y+5	; 0x05
    4a88:	9e 81       	ldd	r25, Y+6	; 0x06
    4a8a:	ac 01       	movw	r20, r24
    4a8c:	4f 5d       	subi	r20, 0xDF	; 223
    4a8e:	5f 4f       	sbci	r21, 0xFF	; 255
    4a90:	8d 81       	ldd	r24, Y+5	; 0x05
    4a92:	9e 81       	ldd	r25, Y+6	; 0x06
    4a94:	9e 01       	movw	r18, r28
    4a96:	2d 5f       	subi	r18, 0xFD	; 253
    4a98:	3f 4f       	sbci	r19, 0xFF	; 255
    4a9a:	b9 01       	movw	r22, r18
    4a9c:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawProportionalGain);
    4aa0:	8d 81       	ldd	r24, Y+5	; 0x05
    4aa2:	9e 81       	ldd	r25, Y+6	; 0x06
    4aa4:	ac 01       	movw	r20, r24
    4aa6:	4b 5d       	subi	r20, 0xDB	; 219
    4aa8:	5f 4f       	sbci	r21, 0xFF	; 255
    4aaa:	8d 81       	ldd	r24, Y+5	; 0x05
    4aac:	9e 81       	ldd	r25, Y+6	; 0x06
    4aae:	9e 01       	movw	r18, r28
    4ab0:	2d 5f       	subi	r18, 0xFD	; 253
    4ab2:	3f 4f       	sbci	r19, 0xFF	; 255
    4ab4:	b9 01       	movw	r22, r18
    4ab6:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawAntiWindupGain);
    4aba:	8d 81       	ldd	r24, Y+5	; 0x05
    4abc:	9e 81       	ldd	r25, Y+6	; 0x06
    4abe:	ac 01       	movw	r20, r24
    4ac0:	47 5d       	subi	r20, 0xD7	; 215
    4ac2:	5f 4f       	sbci	r21, 0xFF	; 255
    4ac4:	8d 81       	ldd	r24, Y+5	; 0x05
    4ac6:	9e 81       	ldd	r25, Y+6	; 0x06
    4ac8:	9e 01       	movw	r18, r28
    4aca:	2d 5f       	subi	r18, 0xFD	; 253
    4acc:	3f 4f       	sbci	r19, 0xFF	; 255
    4ace:	b9 01       	movw	r22, r18
    4ad0:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	


	encode (msgPtr, XNEDBodyFrame);
    4ad4:	8d 81       	ldd	r24, Y+5	; 0x05
    4ad6:	9e 81       	ldd	r25, Y+6	; 0x06
    4ad8:	ac 01       	movw	r20, r24
    4ada:	43 5d       	subi	r20, 0xD3	; 211
    4adc:	5f 4f       	sbci	r21, 0xFF	; 255
    4ade:	8d 81       	ldd	r24, Y+5	; 0x05
    4ae0:	9e 81       	ldd	r25, Y+6	; 0x06
    4ae2:	9e 01       	movw	r18, r28
    4ae4:	2d 5f       	subi	r18, 0xFD	; 253
    4ae6:	3f 4f       	sbci	r19, 0xFF	; 255
    4ae8:	b9 01       	movw	r22, r18
    4aea:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XVelocityMetersPerSecond);
    4aee:	8d 81       	ldd	r24, Y+5	; 0x05
    4af0:	9e 81       	ldd	r25, Y+6	; 0x06
    4af2:	ac 01       	movw	r20, r24
    4af4:	4f 5c       	subi	r20, 0xCF	; 207
    4af6:	5f 4f       	sbci	r21, 0xFF	; 255
    4af8:	8d 81       	ldd	r24, Y+5	; 0x05
    4afa:	9e 81       	ldd	r25, Y+6	; 0x06
    4afc:	9e 01       	movw	r18, r28
    4afe:	2d 5f       	subi	r18, 0xFD	; 253
    4b00:	3f 4f       	sbci	r19, 0xFF	; 255
    4b02:	b9 01       	movw	r22, r18
    4b04:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ThetaPitchDegrees);	
    4b08:	8d 81       	ldd	r24, Y+5	; 0x05
    4b0a:	9e 81       	ldd	r25, Y+6	; 0x06
    4b0c:	ac 01       	movw	r20, r24
    4b0e:	4b 5c       	subi	r20, 0xCB	; 203
    4b10:	5f 4f       	sbci	r21, 0xFF	; 255
    4b12:	8d 81       	ldd	r24, Y+5	; 0x05
    4b14:	9e 81       	ldd	r25, Y+6	; 0x06
    4b16:	9e 01       	movw	r18, r28
    4b18:	2d 5f       	subi	r18, 0xFD	; 253
    4b1a:	3f 4f       	sbci	r19, 0xFF	; 255
    4b1c:	b9 01       	movw	r22, r18
    4b1e:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XIntegral);
    4b22:	8d 81       	ldd	r24, Y+5	; 0x05
    4b24:	9e 81       	ldd	r25, Y+6	; 0x06
    4b26:	ac 01       	movw	r20, r24
    4b28:	47 5c       	subi	r20, 0xC7	; 199
    4b2a:	5f 4f       	sbci	r21, 0xFF	; 255
    4b2c:	8d 81       	ldd	r24, Y+5	; 0x05
    4b2e:	9e 81       	ldd	r25, Y+6	; 0x06
    4b30:	9e 01       	movw	r18, r28
    4b32:	2d 5f       	subi	r18, 0xFD	; 253
    4b34:	3f 4f       	sbci	r19, 0xFF	; 255
    4b36:	b9 01       	movw	r22, r18
    4b38:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XProportional);
    4b3c:	8d 81       	ldd	r24, Y+5	; 0x05
    4b3e:	9e 81       	ldd	r25, Y+6	; 0x06
    4b40:	ac 01       	movw	r20, r24
    4b42:	43 5c       	subi	r20, 0xC3	; 195
    4b44:	5f 4f       	sbci	r21, 0xFF	; 255
    4b46:	8d 81       	ldd	r24, Y+5	; 0x05
    4b48:	9e 81       	ldd	r25, Y+6	; 0x06
    4b4a:	9e 01       	movw	r18, r28
    4b4c:	2d 5f       	subi	r18, 0xFD	; 253
    4b4e:	3f 4f       	sbci	r19, 0xFF	; 255
    4b50:	b9 01       	movw	r22, r18
    4b52:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XDerivativeError);
    4b56:	8d 81       	ldd	r24, Y+5	; 0x05
    4b58:	9e 81       	ldd	r25, Y+6	; 0x06
    4b5a:	ac 01       	movw	r20, r24
    4b5c:	4f 5b       	subi	r20, 0xBF	; 191
    4b5e:	5f 4f       	sbci	r21, 0xFF	; 255
    4b60:	8d 81       	ldd	r24, Y+5	; 0x05
    4b62:	9e 81       	ldd	r25, Y+6	; 0x06
    4b64:	9e 01       	movw	r18, r28
    4b66:	2d 5f       	subi	r18, 0xFD	; 253
    4b68:	3f 4f       	sbci	r19, 0xFF	; 255
    4b6a:	b9 01       	movw	r22, r18
    4b6c:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LongitudeControl);
    4b70:	8d 81       	ldd	r24, Y+5	; 0x05
    4b72:	9e 81       	ldd	r25, Y+6	; 0x06
    4b74:	ac 01       	movw	r20, r24
    4b76:	4b 5b       	subi	r20, 0xBB	; 187
    4b78:	5f 4f       	sbci	r21, 0xFF	; 255
    4b7a:	8d 81       	ldd	r24, Y+5	; 0x05
    4b7c:	9e 81       	ldd	r25, Y+6	; 0x06
    4b7e:	9e 01       	movw	r18, r28
    4b80:	2d 5f       	subi	r18, 0xFD	; 253
    4b82:	3f 4f       	sbci	r19, 0xFF	; 255
    4b84:	b9 01       	movw	r22, r18
    4b86:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XIntegralGain);
    4b8a:	8d 81       	ldd	r24, Y+5	; 0x05
    4b8c:	9e 81       	ldd	r25, Y+6	; 0x06
    4b8e:	ac 01       	movw	r20, r24
    4b90:	47 5b       	subi	r20, 0xB7	; 183
    4b92:	5f 4f       	sbci	r21, 0xFF	; 255
    4b94:	8d 81       	ldd	r24, Y+5	; 0x05
    4b96:	9e 81       	ldd	r25, Y+6	; 0x06
    4b98:	9e 01       	movw	r18, r28
    4b9a:	2d 5f       	subi	r18, 0xFD	; 253
    4b9c:	3f 4f       	sbci	r19, 0xFF	; 255
    4b9e:	b9 01       	movw	r22, r18
    4ba0:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XDerivativeGain);
    4ba4:	8d 81       	ldd	r24, Y+5	; 0x05
    4ba6:	9e 81       	ldd	r25, Y+6	; 0x06
    4ba8:	ac 01       	movw	r20, r24
    4baa:	43 5b       	subi	r20, 0xB3	; 179
    4bac:	5f 4f       	sbci	r21, 0xFF	; 255
    4bae:	8d 81       	ldd	r24, Y+5	; 0x05
    4bb0:	9e 81       	ldd	r25, Y+6	; 0x06
    4bb2:	9e 01       	movw	r18, r28
    4bb4:	2d 5f       	subi	r18, 0xFD	; 253
    4bb6:	3f 4f       	sbci	r19, 0xFF	; 255
    4bb8:	b9 01       	movw	r22, r18
    4bba:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XProportionalGain);
    4bbe:	8d 81       	ldd	r24, Y+5	; 0x05
    4bc0:	9e 81       	ldd	r25, Y+6	; 0x06
    4bc2:	ac 01       	movw	r20, r24
    4bc4:	4f 5a       	subi	r20, 0xAF	; 175
    4bc6:	5f 4f       	sbci	r21, 0xFF	; 255
    4bc8:	8d 81       	ldd	r24, Y+5	; 0x05
    4bca:	9e 81       	ldd	r25, Y+6	; 0x06
    4bcc:	9e 01       	movw	r18, r28
    4bce:	2d 5f       	subi	r18, 0xFD	; 253
    4bd0:	3f 4f       	sbci	r19, 0xFF	; 255
    4bd2:	b9 01       	movw	r22, r18
    4bd4:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XAntiWindupGain);	
    4bd8:	8d 81       	ldd	r24, Y+5	; 0x05
    4bda:	9e 81       	ldd	r25, Y+6	; 0x06
    4bdc:	ac 01       	movw	r20, r24
    4bde:	4b 5a       	subi	r20, 0xAB	; 171
    4be0:	5f 4f       	sbci	r21, 0xFF	; 255
    4be2:	8d 81       	ldd	r24, Y+5	; 0x05
    4be4:	9e 81       	ldd	r25, Y+6	; 0x06
    4be6:	9e 01       	movw	r18, r28
    4be8:	2d 5f       	subi	r18, 0xFD	; 253
    4bea:	3f 4f       	sbci	r19, 0xFF	; 255
    4bec:	b9 01       	movw	r22, r18
    4bee:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LongitudeInnerLoopGain);	
    4bf2:	8d 81       	ldd	r24, Y+5	; 0x05
    4bf4:	9e 81       	ldd	r25, Y+6	; 0x06
    4bf6:	ac 01       	movw	r20, r24
    4bf8:	47 5a       	subi	r20, 0xA7	; 167
    4bfa:	5f 4f       	sbci	r21, 0xFF	; 255
    4bfc:	8d 81       	ldd	r24, Y+5	; 0x05
    4bfe:	9e 81       	ldd	r25, Y+6	; 0x06
    4c00:	9e 01       	movw	r18, r28
    4c02:	2d 5f       	subi	r18, 0xFD	; 253
    4c04:	3f 4f       	sbci	r19, 0xFF	; 255
    4c06:	b9 01       	movw	r22, r18
    4c08:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	
	encode (msgPtr, YNEDBodyFrame);
    4c0c:	8d 81       	ldd	r24, Y+5	; 0x05
    4c0e:	9e 81       	ldd	r25, Y+6	; 0x06
    4c10:	ac 01       	movw	r20, r24
    4c12:	43 5a       	subi	r20, 0xA3	; 163
    4c14:	5f 4f       	sbci	r21, 0xFF	; 255
    4c16:	8d 81       	ldd	r24, Y+5	; 0x05
    4c18:	9e 81       	ldd	r25, Y+6	; 0x06
    4c1a:	9e 01       	movw	r18, r28
    4c1c:	2d 5f       	subi	r18, 0xFD	; 253
    4c1e:	3f 4f       	sbci	r19, 0xFF	; 255
    4c20:	b9 01       	movw	r22, r18
    4c22:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YVelocityMetersPerSecond);
    4c26:	8d 81       	ldd	r24, Y+5	; 0x05
    4c28:	9e 81       	ldd	r25, Y+6	; 0x06
    4c2a:	ac 01       	movw	r20, r24
    4c2c:	4f 59       	subi	r20, 0x9F	; 159
    4c2e:	5f 4f       	sbci	r21, 0xFF	; 255
    4c30:	8d 81       	ldd	r24, Y+5	; 0x05
    4c32:	9e 81       	ldd	r25, Y+6	; 0x06
    4c34:	9e 01       	movw	r18, r28
    4c36:	2d 5f       	subi	r18, 0xFD	; 253
    4c38:	3f 4f       	sbci	r19, 0xFF	; 255
    4c3a:	b9 01       	movw	r22, r18
    4c3c:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, PhiRollDegrees);
    4c40:	8d 81       	ldd	r24, Y+5	; 0x05
    4c42:	9e 81       	ldd	r25, Y+6	; 0x06
    4c44:	ac 01       	movw	r20, r24
    4c46:	4b 59       	subi	r20, 0x9B	; 155
    4c48:	5f 4f       	sbci	r21, 0xFF	; 255
    4c4a:	8d 81       	ldd	r24, Y+5	; 0x05
    4c4c:	9e 81       	ldd	r25, Y+6	; 0x06
    4c4e:	9e 01       	movw	r18, r28
    4c50:	2d 5f       	subi	r18, 0xFD	; 253
    4c52:	3f 4f       	sbci	r19, 0xFF	; 255
    4c54:	b9 01       	movw	r22, r18
    4c56:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YIntegral);
    4c5a:	8d 81       	ldd	r24, Y+5	; 0x05
    4c5c:	9e 81       	ldd	r25, Y+6	; 0x06
    4c5e:	ac 01       	movw	r20, r24
    4c60:	47 59       	subi	r20, 0x97	; 151
    4c62:	5f 4f       	sbci	r21, 0xFF	; 255
    4c64:	8d 81       	ldd	r24, Y+5	; 0x05
    4c66:	9e 81       	ldd	r25, Y+6	; 0x06
    4c68:	9e 01       	movw	r18, r28
    4c6a:	2d 5f       	subi	r18, 0xFD	; 253
    4c6c:	3f 4f       	sbci	r19, 0xFF	; 255
    4c6e:	b9 01       	movw	r22, r18
    4c70:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YProportional);
    4c74:	8d 81       	ldd	r24, Y+5	; 0x05
    4c76:	9e 81       	ldd	r25, Y+6	; 0x06
    4c78:	ac 01       	movw	r20, r24
    4c7a:	43 59       	subi	r20, 0x93	; 147
    4c7c:	5f 4f       	sbci	r21, 0xFF	; 255
    4c7e:	8d 81       	ldd	r24, Y+5	; 0x05
    4c80:	9e 81       	ldd	r25, Y+6	; 0x06
    4c82:	9e 01       	movw	r18, r28
    4c84:	2d 5f       	subi	r18, 0xFD	; 253
    4c86:	3f 4f       	sbci	r19, 0xFF	; 255
    4c88:	b9 01       	movw	r22, r18
    4c8a:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YDerivativeError);
    4c8e:	8d 81       	ldd	r24, Y+5	; 0x05
    4c90:	9e 81       	ldd	r25, Y+6	; 0x06
    4c92:	ac 01       	movw	r20, r24
    4c94:	4f 58       	subi	r20, 0x8F	; 143
    4c96:	5f 4f       	sbci	r21, 0xFF	; 255
    4c98:	8d 81       	ldd	r24, Y+5	; 0x05
    4c9a:	9e 81       	ldd	r25, Y+6	; 0x06
    4c9c:	9e 01       	movw	r18, r28
    4c9e:	2d 5f       	subi	r18, 0xFD	; 253
    4ca0:	3f 4f       	sbci	r19, 0xFF	; 255
    4ca2:	b9 01       	movw	r22, r18
    4ca4:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LateralControl);
    4ca8:	8d 81       	ldd	r24, Y+5	; 0x05
    4caa:	9e 81       	ldd	r25, Y+6	; 0x06
    4cac:	ac 01       	movw	r20, r24
    4cae:	4b 58       	subi	r20, 0x8B	; 139
    4cb0:	5f 4f       	sbci	r21, 0xFF	; 255
    4cb2:	8d 81       	ldd	r24, Y+5	; 0x05
    4cb4:	9e 81       	ldd	r25, Y+6	; 0x06
    4cb6:	9e 01       	movw	r18, r28
    4cb8:	2d 5f       	subi	r18, 0xFD	; 253
    4cba:	3f 4f       	sbci	r19, 0xFF	; 255
    4cbc:	b9 01       	movw	r22, r18
    4cbe:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YIntegralGain);
    4cc2:	8d 81       	ldd	r24, Y+5	; 0x05
    4cc4:	9e 81       	ldd	r25, Y+6	; 0x06
    4cc6:	ac 01       	movw	r20, r24
    4cc8:	47 58       	subi	r20, 0x87	; 135
    4cca:	5f 4f       	sbci	r21, 0xFF	; 255
    4ccc:	8d 81       	ldd	r24, Y+5	; 0x05
    4cce:	9e 81       	ldd	r25, Y+6	; 0x06
    4cd0:	9e 01       	movw	r18, r28
    4cd2:	2d 5f       	subi	r18, 0xFD	; 253
    4cd4:	3f 4f       	sbci	r19, 0xFF	; 255
    4cd6:	b9 01       	movw	r22, r18
    4cd8:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YDerivativeGain);
    4cdc:	8d 81       	ldd	r24, Y+5	; 0x05
    4cde:	9e 81       	ldd	r25, Y+6	; 0x06
    4ce0:	ac 01       	movw	r20, r24
    4ce2:	43 58       	subi	r20, 0x83	; 131
    4ce4:	5f 4f       	sbci	r21, 0xFF	; 255
    4ce6:	8d 81       	ldd	r24, Y+5	; 0x05
    4ce8:	9e 81       	ldd	r25, Y+6	; 0x06
    4cea:	9e 01       	movw	r18, r28
    4cec:	2d 5f       	subi	r18, 0xFD	; 253
    4cee:	3f 4f       	sbci	r19, 0xFF	; 255
    4cf0:	b9 01       	movw	r22, r18
    4cf2:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YProportionalGain);
    4cf6:	8d 81       	ldd	r24, Y+5	; 0x05
    4cf8:	9e 81       	ldd	r25, Y+6	; 0x06
    4cfa:	ac 01       	movw	r20, r24
    4cfc:	4f 57       	subi	r20, 0x7F	; 127
    4cfe:	5f 4f       	sbci	r21, 0xFF	; 255
    4d00:	8d 81       	ldd	r24, Y+5	; 0x05
    4d02:	9e 81       	ldd	r25, Y+6	; 0x06
    4d04:	9e 01       	movw	r18, r28
    4d06:	2d 5f       	subi	r18, 0xFD	; 253
    4d08:	3f 4f       	sbci	r19, 0xFF	; 255
    4d0a:	b9 01       	movw	r22, r18
    4d0c:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YAntiWindupGain);
    4d10:	8d 81       	ldd	r24, Y+5	; 0x05
    4d12:	9e 81       	ldd	r25, Y+6	; 0x06
    4d14:	ac 01       	movw	r20, r24
    4d16:	4b 57       	subi	r20, 0x7B	; 123
    4d18:	5f 4f       	sbci	r21, 0xFF	; 255
    4d1a:	8d 81       	ldd	r24, Y+5	; 0x05
    4d1c:	9e 81       	ldd	r25, Y+6	; 0x06
    4d1e:	9e 01       	movw	r18, r28
    4d20:	2d 5f       	subi	r18, 0xFD	; 253
    4d22:	3f 4f       	sbci	r19, 0xFF	; 255
    4d24:	b9 01       	movw	r22, r18
    4d26:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LateralInnerLoopGain);	
    4d2a:	8d 81       	ldd	r24, Y+5	; 0x05
    4d2c:	9e 81       	ldd	r25, Y+6	; 0x06
    4d2e:	ac 01       	movw	r20, r24
    4d30:	47 57       	subi	r20, 0x77	; 119
    4d32:	5f 4f       	sbci	r21, 0xFF	; 255
    4d34:	8d 81       	ldd	r24, Y+5	; 0x05
    4d36:	9e 81       	ldd	r25, Y+6	; 0x06
    4d38:	9e 01       	movw	r18, r28
    4d3a:	2d 5f       	subi	r18, 0xFD	; 253
    4d3c:	3f 4f       	sbci	r19, 0xFF	; 255
    4d3e:	b9 01       	movw	r22, r18
    4d40:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	
	

	encode (msgPtr, AltitudeFeetAgl);
    4d44:	8d 81       	ldd	r24, Y+5	; 0x05
    4d46:	9e 81       	ldd	r25, Y+6	; 0x06
    4d48:	ac 01       	movw	r20, r24
    4d4a:	43 57       	subi	r20, 0x73	; 115
    4d4c:	5f 4f       	sbci	r21, 0xFF	; 255
    4d4e:	8d 81       	ldd	r24, Y+5	; 0x05
    4d50:	9e 81       	ldd	r25, Y+6	; 0x06
    4d52:	9e 01       	movw	r18, r28
    4d54:	2d 5f       	subi	r18, 0xFD	; 253
    4d56:	3f 4f       	sbci	r19, 0xFF	; 255
    4d58:	b9 01       	movw	r22, r18
    4d5a:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZVelocityMetersPerSecond);
    4d5e:	8d 81       	ldd	r24, Y+5	; 0x05
    4d60:	9e 81       	ldd	r25, Y+6	; 0x06
    4d62:	ac 01       	movw	r20, r24
    4d64:	4f 56       	subi	r20, 0x6F	; 111
    4d66:	5f 4f       	sbci	r21, 0xFF	; 255
    4d68:	8d 81       	ldd	r24, Y+5	; 0x05
    4d6a:	9e 81       	ldd	r25, Y+6	; 0x06
    4d6c:	9e 01       	movw	r18, r28
    4d6e:	2d 5f       	subi	r18, 0xFD	; 253
    4d70:	3f 4f       	sbci	r19, 0xFF	; 255
    4d72:	b9 01       	movw	r22, r18
    4d74:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZIntegral);
    4d78:	8d 81       	ldd	r24, Y+5	; 0x05
    4d7a:	9e 81       	ldd	r25, Y+6	; 0x06
    4d7c:	ac 01       	movw	r20, r24
    4d7e:	4b 56       	subi	r20, 0x6B	; 107
    4d80:	5f 4f       	sbci	r21, 0xFF	; 255
    4d82:	8d 81       	ldd	r24, Y+5	; 0x05
    4d84:	9e 81       	ldd	r25, Y+6	; 0x06
    4d86:	9e 01       	movw	r18, r28
    4d88:	2d 5f       	subi	r18, 0xFD	; 253
    4d8a:	3f 4f       	sbci	r19, 0xFF	; 255
    4d8c:	b9 01       	movw	r22, r18
    4d8e:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZProportional);
    4d92:	8d 81       	ldd	r24, Y+5	; 0x05
    4d94:	9e 81       	ldd	r25, Y+6	; 0x06
    4d96:	ac 01       	movw	r20, r24
    4d98:	47 56       	subi	r20, 0x67	; 103
    4d9a:	5f 4f       	sbci	r21, 0xFF	; 255
    4d9c:	8d 81       	ldd	r24, Y+5	; 0x05
    4d9e:	9e 81       	ldd	r25, Y+6	; 0x06
    4da0:	9e 01       	movw	r18, r28
    4da2:	2d 5f       	subi	r18, 0xFD	; 253
    4da4:	3f 4f       	sbci	r19, 0xFF	; 255
    4da6:	b9 01       	movw	r22, r18
    4da8:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZDerivativeError);
    4dac:	8d 81       	ldd	r24, Y+5	; 0x05
    4dae:	9e 81       	ldd	r25, Y+6	; 0x06
    4db0:	ac 01       	movw	r20, r24
    4db2:	43 56       	subi	r20, 0x63	; 99
    4db4:	5f 4f       	sbci	r21, 0xFF	; 255
    4db6:	8d 81       	ldd	r24, Y+5	; 0x05
    4db8:	9e 81       	ldd	r25, Y+6	; 0x06
    4dba:	9e 01       	movw	r18, r28
    4dbc:	2d 5f       	subi	r18, 0xFD	; 253
    4dbe:	3f 4f       	sbci	r19, 0xFF	; 255
    4dc0:	b9 01       	movw	r22, r18
    4dc2:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, MainRotorCollectiveControl);
    4dc6:	8d 81       	ldd	r24, Y+5	; 0x05
    4dc8:	9e 81       	ldd	r25, Y+6	; 0x06
    4dca:	ac 01       	movw	r20, r24
    4dcc:	4f 55       	subi	r20, 0x5F	; 95
    4dce:	5f 4f       	sbci	r21, 0xFF	; 255
    4dd0:	8d 81       	ldd	r24, Y+5	; 0x05
    4dd2:	9e 81       	ldd	r25, Y+6	; 0x06
    4dd4:	9e 01       	movw	r18, r28
    4dd6:	2d 5f       	subi	r18, 0xFD	; 253
    4dd8:	3f 4f       	sbci	r19, 0xFF	; 255
    4dda:	b9 01       	movw	r22, r18
    4ddc:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZIntegralGain);
    4de0:	8d 81       	ldd	r24, Y+5	; 0x05
    4de2:	9e 81       	ldd	r25, Y+6	; 0x06
    4de4:	ac 01       	movw	r20, r24
    4de6:	4b 55       	subi	r20, 0x5B	; 91
    4de8:	5f 4f       	sbci	r21, 0xFF	; 255
    4dea:	8d 81       	ldd	r24, Y+5	; 0x05
    4dec:	9e 81       	ldd	r25, Y+6	; 0x06
    4dee:	9e 01       	movw	r18, r28
    4df0:	2d 5f       	subi	r18, 0xFD	; 253
    4df2:	3f 4f       	sbci	r19, 0xFF	; 255
    4df4:	b9 01       	movw	r22, r18
    4df6:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZDerivativeGain);
    4dfa:	8d 81       	ldd	r24, Y+5	; 0x05
    4dfc:	9e 81       	ldd	r25, Y+6	; 0x06
    4dfe:	ac 01       	movw	r20, r24
    4e00:	47 55       	subi	r20, 0x57	; 87
    4e02:	5f 4f       	sbci	r21, 0xFF	; 255
    4e04:	8d 81       	ldd	r24, Y+5	; 0x05
    4e06:	9e 81       	ldd	r25, Y+6	; 0x06
    4e08:	9e 01       	movw	r18, r28
    4e0a:	2d 5f       	subi	r18, 0xFD	; 253
    4e0c:	3f 4f       	sbci	r19, 0xFF	; 255
    4e0e:	b9 01       	movw	r22, r18
    4e10:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZProportionalGain);
    4e14:	8d 81       	ldd	r24, Y+5	; 0x05
    4e16:	9e 81       	ldd	r25, Y+6	; 0x06
    4e18:	ac 01       	movw	r20, r24
    4e1a:	43 55       	subi	r20, 0x53	; 83
    4e1c:	5f 4f       	sbci	r21, 0xFF	; 255
    4e1e:	8d 81       	ldd	r24, Y+5	; 0x05
    4e20:	9e 81       	ldd	r25, Y+6	; 0x06
    4e22:	9e 01       	movw	r18, r28
    4e24:	2d 5f       	subi	r18, 0xFD	; 253
    4e26:	3f 4f       	sbci	r19, 0xFF	; 255
    4e28:	b9 01       	movw	r22, r18
    4e2a:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZAntiWindupGain);
    4e2e:	8d 81       	ldd	r24, Y+5	; 0x05
    4e30:	9e 81       	ldd	r25, Y+6	; 0x06
    4e32:	ac 01       	movw	r20, r24
    4e34:	4f 54       	subi	r20, 0x4F	; 79
    4e36:	5f 4f       	sbci	r21, 0xFF	; 255
    4e38:	8d 81       	ldd	r24, Y+5	; 0x05
    4e3a:	9e 81       	ldd	r25, Y+6	; 0x06
    4e3c:	9e 01       	movw	r18, r28
    4e3e:	2d 5f       	subi	r18, 0xFD	; 253
    4e40:	3f 4f       	sbci	r19, 0xFF	; 255
    4e42:	b9 01       	movw	r22, r18
    4e44:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
		
	
	encode(msgPtr, LatitudeDegrees);
    4e48:	8d 81       	ldd	r24, Y+5	; 0x05
    4e4a:	9e 81       	ldd	r25, Y+6	; 0x06
    4e4c:	ac 01       	movw	r20, r24
    4e4e:	4b 54       	subi	r20, 0x4B	; 75
    4e50:	5f 4f       	sbci	r21, 0xFF	; 255
    4e52:	8d 81       	ldd	r24, Y+5	; 0x05
    4e54:	9e 81       	ldd	r25, Y+6	; 0x06
    4e56:	9e 01       	movw	r18, r28
    4e58:	2d 5f       	subi	r18, 0xFD	; 253
    4e5a:	3f 4f       	sbci	r19, 0xFF	; 255
    4e5c:	b9 01       	movw	r22, r18
    4e5e:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode(msgPtr, LongitudeDegrees);
    4e62:	8d 81       	ldd	r24, Y+5	; 0x05
    4e64:	9e 81       	ldd	r25, Y+6	; 0x06
    4e66:	ac 01       	movw	r20, r24
    4e68:	47 54       	subi	r20, 0x47	; 71
    4e6a:	5f 4f       	sbci	r21, 0xFF	; 255
    4e6c:	8d 81       	ldd	r24, Y+5	; 0x05
    4e6e:	9e 81       	ldd	r25, Y+6	; 0x06
    4e70:	9e 01       	movw	r18, r28
    4e72:	2d 5f       	subi	r18, 0xFD	; 253
    4e74:	3f 4f       	sbci	r19, 0xFF	; 255
    4e76:	b9 01       	movw	r22, r18
    4e78:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter8messages7Message6encodeERPhRf>
	
	encode (msgPtr, Timeouts);
    4e7c:	8d 81       	ldd	r24, Y+5	; 0x05
    4e7e:	9e 81       	ldd	r25, Y+6	; 0x06
    4e80:	ac 01       	movw	r20, r24
    4e82:	43 54       	subi	r20, 0x43	; 67
    4e84:	5f 4f       	sbci	r21, 0xFF	; 255
    4e86:	8d 81       	ldd	r24, Y+5	; 0x05
    4e88:	9e 81       	ldd	r25, Y+6	; 0x06
    4e8a:	9e 01       	movw	r18, r28
    4e8c:	2d 5f       	subi	r18, 0xFD	; 253
    4e8e:	3f 4f       	sbci	r19, 0xFF	; 255
    4e90:	b9 01       	movw	r22, r18
    4e92:	0e 94 fe 1e 	call	0x3dfc	; 0x3dfc <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, UnrecognizedMsgTypes);
    4e96:	8d 81       	ldd	r24, Y+5	; 0x05
    4e98:	9e 81       	ldd	r25, Y+6	; 0x06
    4e9a:	ac 01       	movw	r20, r24
    4e9c:	4f 53       	subi	r20, 0x3F	; 63
    4e9e:	5f 4f       	sbci	r21, 0xFF	; 255
    4ea0:	8d 81       	ldd	r24, Y+5	; 0x05
    4ea2:	9e 81       	ldd	r25, Y+6	; 0x06
    4ea4:	9e 01       	movw	r18, r28
    4ea6:	2d 5f       	subi	r18, 0xFD	; 253
    4ea8:	3f 4f       	sbci	r19, 0xFF	; 255
    4eaa:	b9 01       	movw	r22, r18
    4eac:	0e 94 fe 1e 	call	0x3dfc	; 0x3dfc <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, ChecksumErrors);
    4eb0:	8d 81       	ldd	r24, Y+5	; 0x05
    4eb2:	9e 81       	ldd	r25, Y+6	; 0x06
    4eb4:	ac 01       	movw	r20, r24
    4eb6:	4b 53       	subi	r20, 0x3B	; 59
    4eb8:	5f 4f       	sbci	r21, 0xFF	; 255
    4eba:	8d 81       	ldd	r24, Y+5	; 0x05
    4ebc:	9e 81       	ldd	r25, Y+6	; 0x06
    4ebe:	9e 01       	movw	r18, r28
    4ec0:	2d 5f       	subi	r18, 0xFD	; 253
    4ec2:	3f 4f       	sbci	r19, 0xFF	; 255
    4ec4:	b9 01       	movw	r22, r18
    4ec6:	0e 94 fe 1e 	call	0x3dfc	; 0x3dfc <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, NumOfBlownFrames);
    4eca:	8d 81       	ldd	r24, Y+5	; 0x05
    4ecc:	9e 81       	ldd	r25, Y+6	; 0x06
    4ece:	ac 01       	movw	r20, r24
    4ed0:	47 53       	subi	r20, 0x37	; 55
    4ed2:	5f 4f       	sbci	r21, 0xFF	; 255
    4ed4:	8d 81       	ldd	r24, Y+5	; 0x05
    4ed6:	9e 81       	ldd	r25, Y+6	; 0x06
    4ed8:	9e 01       	movw	r18, r28
    4eda:	2d 5f       	subi	r18, 0xFD	; 253
    4edc:	3f 4f       	sbci	r19, 0xFF	; 255
    4ede:	b9 01       	movw	r22, r18
    4ee0:	0e 94 fe 1e 	call	0x3dfc	; 0x3dfc <_ZN10helicopter8messages7Message6encodeERPhRl>
				
	return msg;
    4ee4:	89 81       	ldd	r24, Y+1	; 0x01
    4ee6:	9a 81       	ldd	r25, Y+2	; 0x02
}
    4ee8:	26 96       	adiw	r28, 0x06	; 6
    4eea:	0f b6       	in	r0, 0x3f	; 63
    4eec:	f8 94       	cli
    4eee:	de bf       	out	0x3e, r29	; 62
    4ef0:	0f be       	out	0x3f, r0	; 63
    4ef2:	cd bf       	out	0x3d, r28	; 61
    4ef4:	df 91       	pop	r29
    4ef6:	cf 91       	pop	r28
    4ef8:	08 95       	ret

00004efa <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh>:

void SystemTelemetryMessage::buildMessage(byte *message)
{
    4efa:	cf 93       	push	r28
    4efc:	df 93       	push	r29
    4efe:	00 d0       	rcall	.+0      	; 0x4f00 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x6>
    4f00:	1f 92       	push	r1
    4f02:	cd b7       	in	r28, 0x3d	; 61
    4f04:	de b7       	in	r29, 0x3e	; 62
    4f06:	9a 83       	std	Y+2, r25	; 0x02
    4f08:	89 83       	std	Y+1, r24	; 0x01
    4f0a:	7c 83       	std	Y+4, r23	; 0x04
    4f0c:	6b 83       	std	Y+3, r22	; 0x03
	if (message != NULL)
    4f0e:	8b 81       	ldd	r24, Y+3	; 0x03
    4f10:	9c 81       	ldd	r25, Y+4	; 0x04
    4f12:	00 97       	sbiw	r24, 0x00	; 0
    4f14:	09 f4       	brne	.+2      	; 0x4f18 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x1e>
    4f16:	97 c2       	rjmp	.+1326   	; 0x5446 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x54c>
	{
		decode (message,msgType);
    4f18:	89 81       	ldd	r24, Y+1	; 0x01
    4f1a:	9a 81       	ldd	r25, Y+2	; 0x02
    4f1c:	ac 01       	movw	r20, r24
    4f1e:	4e 5f       	subi	r20, 0xFE	; 254
    4f20:	5f 4f       	sbci	r21, 0xFF	; 255
    4f22:	89 81       	ldd	r24, Y+1	; 0x01
    4f24:	9a 81       	ldd	r25, Y+2	; 0x02
    4f26:	9e 01       	movw	r18, r28
    4f28:	2d 5f       	subi	r18, 0xFD	; 253
    4f2a:	3f 4f       	sbci	r19, 0xFF	; 255
    4f2c:	b9 01       	movw	r22, r18
    4f2e:	0e 94 87 1f 	call	0x3f0e	; 0x3f0e <_ZN10helicopter8messages7Message6decodeERPhRh>
		decode (message,MagYaw);
    4f32:	89 81       	ldd	r24, Y+1	; 0x01
    4f34:	9a 81       	ldd	r25, Y+2	; 0x02
    4f36:	ac 01       	movw	r20, r24
    4f38:	4b 5f       	subi	r20, 0xFB	; 251
    4f3a:	5f 4f       	sbci	r21, 0xFF	; 255
    4f3c:	89 81       	ldd	r24, Y+1	; 0x01
    4f3e:	9a 81       	ldd	r25, Y+2	; 0x02
    4f40:	9e 01       	movw	r18, r28
    4f42:	2d 5f       	subi	r18, 0xFD	; 253
    4f44:	3f 4f       	sbci	r19, 0xFF	; 255
    4f46:	b9 01       	movw	r22, r18
    4f48:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawVelocityDegreesPerSecond);
    4f4c:	89 81       	ldd	r24, Y+1	; 0x01
    4f4e:	9a 81       	ldd	r25, Y+2	; 0x02
    4f50:	ac 01       	movw	r20, r24
    4f52:	47 5f       	subi	r20, 0xF7	; 247
    4f54:	5f 4f       	sbci	r21, 0xFF	; 255
    4f56:	89 81       	ldd	r24, Y+1	; 0x01
    4f58:	9a 81       	ldd	r25, Y+2	; 0x02
    4f5a:	9e 01       	movw	r18, r28
    4f5c:	2d 5f       	subi	r18, 0xFD	; 253
    4f5e:	3f 4f       	sbci	r19, 0xFF	; 255
    4f60:	b9 01       	movw	r22, r18
    4f62:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawIntegral);
    4f66:	89 81       	ldd	r24, Y+1	; 0x01
    4f68:	9a 81       	ldd	r25, Y+2	; 0x02
    4f6a:	ac 01       	movw	r20, r24
    4f6c:	43 5f       	subi	r20, 0xF3	; 243
    4f6e:	5f 4f       	sbci	r21, 0xFF	; 255
    4f70:	89 81       	ldd	r24, Y+1	; 0x01
    4f72:	9a 81       	ldd	r25, Y+2	; 0x02
    4f74:	9e 01       	movw	r18, r28
    4f76:	2d 5f       	subi	r18, 0xFD	; 253
    4f78:	3f 4f       	sbci	r19, 0xFF	; 255
    4f7a:	b9 01       	movw	r22, r18
    4f7c:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawProportional);
    4f80:	89 81       	ldd	r24, Y+1	; 0x01
    4f82:	9a 81       	ldd	r25, Y+2	; 0x02
    4f84:	ac 01       	movw	r20, r24
    4f86:	4f 5e       	subi	r20, 0xEF	; 239
    4f88:	5f 4f       	sbci	r21, 0xFF	; 255
    4f8a:	89 81       	ldd	r24, Y+1	; 0x01
    4f8c:	9a 81       	ldd	r25, Y+2	; 0x02
    4f8e:	9e 01       	movw	r18, r28
    4f90:	2d 5f       	subi	r18, 0xFD	; 253
    4f92:	3f 4f       	sbci	r19, 0xFF	; 255
    4f94:	b9 01       	movw	r22, r18
    4f96:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawDerivativeError);	
    4f9a:	89 81       	ldd	r24, Y+1	; 0x01
    4f9c:	9a 81       	ldd	r25, Y+2	; 0x02
    4f9e:	ac 01       	movw	r20, r24
    4fa0:	4b 5e       	subi	r20, 0xEB	; 235
    4fa2:	5f 4f       	sbci	r21, 0xFF	; 255
    4fa4:	89 81       	ldd	r24, Y+1	; 0x01
    4fa6:	9a 81       	ldd	r25, Y+2	; 0x02
    4fa8:	9e 01       	movw	r18, r28
    4faa:	2d 5f       	subi	r18, 0xFD	; 253
    4fac:	3f 4f       	sbci	r19, 0xFF	; 255
    4fae:	b9 01       	movw	r22, r18
    4fb0:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawControl);	
    4fb4:	89 81       	ldd	r24, Y+1	; 0x01
    4fb6:	9a 81       	ldd	r25, Y+2	; 0x02
    4fb8:	ac 01       	movw	r20, r24
    4fba:	47 5e       	subi	r20, 0xE7	; 231
    4fbc:	5f 4f       	sbci	r21, 0xFF	; 255
    4fbe:	89 81       	ldd	r24, Y+1	; 0x01
    4fc0:	9a 81       	ldd	r25, Y+2	; 0x02
    4fc2:	9e 01       	movw	r18, r28
    4fc4:	2d 5f       	subi	r18, 0xFD	; 253
    4fc6:	3f 4f       	sbci	r19, 0xFF	; 255
    4fc8:	b9 01       	movw	r22, r18
    4fca:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawIntegralGain);
    4fce:	89 81       	ldd	r24, Y+1	; 0x01
    4fd0:	9a 81       	ldd	r25, Y+2	; 0x02
    4fd2:	ac 01       	movw	r20, r24
    4fd4:	43 5e       	subi	r20, 0xE3	; 227
    4fd6:	5f 4f       	sbci	r21, 0xFF	; 255
    4fd8:	89 81       	ldd	r24, Y+1	; 0x01
    4fda:	9a 81       	ldd	r25, Y+2	; 0x02
    4fdc:	9e 01       	movw	r18, r28
    4fde:	2d 5f       	subi	r18, 0xFD	; 253
    4fe0:	3f 4f       	sbci	r19, 0xFF	; 255
    4fe2:	b9 01       	movw	r22, r18
    4fe4:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawDerivativeGain);
    4fe8:	89 81       	ldd	r24, Y+1	; 0x01
    4fea:	9a 81       	ldd	r25, Y+2	; 0x02
    4fec:	ac 01       	movw	r20, r24
    4fee:	4f 5d       	subi	r20, 0xDF	; 223
    4ff0:	5f 4f       	sbci	r21, 0xFF	; 255
    4ff2:	89 81       	ldd	r24, Y+1	; 0x01
    4ff4:	9a 81       	ldd	r25, Y+2	; 0x02
    4ff6:	9e 01       	movw	r18, r28
    4ff8:	2d 5f       	subi	r18, 0xFD	; 253
    4ffa:	3f 4f       	sbci	r19, 0xFF	; 255
    4ffc:	b9 01       	movw	r22, r18
    4ffe:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawProportionalGain);
    5002:	89 81       	ldd	r24, Y+1	; 0x01
    5004:	9a 81       	ldd	r25, Y+2	; 0x02
    5006:	ac 01       	movw	r20, r24
    5008:	4b 5d       	subi	r20, 0xDB	; 219
    500a:	5f 4f       	sbci	r21, 0xFF	; 255
    500c:	89 81       	ldd	r24, Y+1	; 0x01
    500e:	9a 81       	ldd	r25, Y+2	; 0x02
    5010:	9e 01       	movw	r18, r28
    5012:	2d 5f       	subi	r18, 0xFD	; 253
    5014:	3f 4f       	sbci	r19, 0xFF	; 255
    5016:	b9 01       	movw	r22, r18
    5018:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawAntiWindupGain);
    501c:	89 81       	ldd	r24, Y+1	; 0x01
    501e:	9a 81       	ldd	r25, Y+2	; 0x02
    5020:	ac 01       	movw	r20, r24
    5022:	47 5d       	subi	r20, 0xD7	; 215
    5024:	5f 4f       	sbci	r21, 0xFF	; 255
    5026:	89 81       	ldd	r24, Y+1	; 0x01
    5028:	9a 81       	ldd	r25, Y+2	; 0x02
    502a:	9e 01       	movw	r18, r28
    502c:	2d 5f       	subi	r18, 0xFD	; 253
    502e:	3f 4f       	sbci	r19, 0xFF	; 255
    5030:	b9 01       	movw	r22, r18
    5032:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		
		
		

		decode (message, XNEDBodyFrame);
    5036:	89 81       	ldd	r24, Y+1	; 0x01
    5038:	9a 81       	ldd	r25, Y+2	; 0x02
    503a:	ac 01       	movw	r20, r24
    503c:	43 5d       	subi	r20, 0xD3	; 211
    503e:	5f 4f       	sbci	r21, 0xFF	; 255
    5040:	89 81       	ldd	r24, Y+1	; 0x01
    5042:	9a 81       	ldd	r25, Y+2	; 0x02
    5044:	9e 01       	movw	r18, r28
    5046:	2d 5f       	subi	r18, 0xFD	; 253
    5048:	3f 4f       	sbci	r19, 0xFF	; 255
    504a:	b9 01       	movw	r22, r18
    504c:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XVelocityMetersPerSecond);
    5050:	89 81       	ldd	r24, Y+1	; 0x01
    5052:	9a 81       	ldd	r25, Y+2	; 0x02
    5054:	ac 01       	movw	r20, r24
    5056:	4f 5c       	subi	r20, 0xCF	; 207
    5058:	5f 4f       	sbci	r21, 0xFF	; 255
    505a:	89 81       	ldd	r24, Y+1	; 0x01
    505c:	9a 81       	ldd	r25, Y+2	; 0x02
    505e:	9e 01       	movw	r18, r28
    5060:	2d 5f       	subi	r18, 0xFD	; 253
    5062:	3f 4f       	sbci	r19, 0xFF	; 255
    5064:	b9 01       	movw	r22, r18
    5066:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ThetaPitchDegrees);
    506a:	89 81       	ldd	r24, Y+1	; 0x01
    506c:	9a 81       	ldd	r25, Y+2	; 0x02
    506e:	ac 01       	movw	r20, r24
    5070:	4b 5c       	subi	r20, 0xCB	; 203
    5072:	5f 4f       	sbci	r21, 0xFF	; 255
    5074:	89 81       	ldd	r24, Y+1	; 0x01
    5076:	9a 81       	ldd	r25, Y+2	; 0x02
    5078:	9e 01       	movw	r18, r28
    507a:	2d 5f       	subi	r18, 0xFD	; 253
    507c:	3f 4f       	sbci	r19, 0xFF	; 255
    507e:	b9 01       	movw	r22, r18
    5080:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XIntegral);
    5084:	89 81       	ldd	r24, Y+1	; 0x01
    5086:	9a 81       	ldd	r25, Y+2	; 0x02
    5088:	ac 01       	movw	r20, r24
    508a:	47 5c       	subi	r20, 0xC7	; 199
    508c:	5f 4f       	sbci	r21, 0xFF	; 255
    508e:	89 81       	ldd	r24, Y+1	; 0x01
    5090:	9a 81       	ldd	r25, Y+2	; 0x02
    5092:	9e 01       	movw	r18, r28
    5094:	2d 5f       	subi	r18, 0xFD	; 253
    5096:	3f 4f       	sbci	r19, 0xFF	; 255
    5098:	b9 01       	movw	r22, r18
    509a:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XProportional);
    509e:	89 81       	ldd	r24, Y+1	; 0x01
    50a0:	9a 81       	ldd	r25, Y+2	; 0x02
    50a2:	ac 01       	movw	r20, r24
    50a4:	43 5c       	subi	r20, 0xC3	; 195
    50a6:	5f 4f       	sbci	r21, 0xFF	; 255
    50a8:	89 81       	ldd	r24, Y+1	; 0x01
    50aa:	9a 81       	ldd	r25, Y+2	; 0x02
    50ac:	9e 01       	movw	r18, r28
    50ae:	2d 5f       	subi	r18, 0xFD	; 253
    50b0:	3f 4f       	sbci	r19, 0xFF	; 255
    50b2:	b9 01       	movw	r22, r18
    50b4:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XDerivativeError);
    50b8:	89 81       	ldd	r24, Y+1	; 0x01
    50ba:	9a 81       	ldd	r25, Y+2	; 0x02
    50bc:	ac 01       	movw	r20, r24
    50be:	4f 5b       	subi	r20, 0xBF	; 191
    50c0:	5f 4f       	sbci	r21, 0xFF	; 255
    50c2:	89 81       	ldd	r24, Y+1	; 0x01
    50c4:	9a 81       	ldd	r25, Y+2	; 0x02
    50c6:	9e 01       	movw	r18, r28
    50c8:	2d 5f       	subi	r18, 0xFD	; 253
    50ca:	3f 4f       	sbci	r19, 0xFF	; 255
    50cc:	b9 01       	movw	r22, r18
    50ce:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LongitudeControl);
    50d2:	89 81       	ldd	r24, Y+1	; 0x01
    50d4:	9a 81       	ldd	r25, Y+2	; 0x02
    50d6:	ac 01       	movw	r20, r24
    50d8:	4b 5b       	subi	r20, 0xBB	; 187
    50da:	5f 4f       	sbci	r21, 0xFF	; 255
    50dc:	89 81       	ldd	r24, Y+1	; 0x01
    50de:	9a 81       	ldd	r25, Y+2	; 0x02
    50e0:	9e 01       	movw	r18, r28
    50e2:	2d 5f       	subi	r18, 0xFD	; 253
    50e4:	3f 4f       	sbci	r19, 0xFF	; 255
    50e6:	b9 01       	movw	r22, r18
    50e8:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XIntegralGain);
    50ec:	89 81       	ldd	r24, Y+1	; 0x01
    50ee:	9a 81       	ldd	r25, Y+2	; 0x02
    50f0:	ac 01       	movw	r20, r24
    50f2:	47 5b       	subi	r20, 0xB7	; 183
    50f4:	5f 4f       	sbci	r21, 0xFF	; 255
    50f6:	89 81       	ldd	r24, Y+1	; 0x01
    50f8:	9a 81       	ldd	r25, Y+2	; 0x02
    50fa:	9e 01       	movw	r18, r28
    50fc:	2d 5f       	subi	r18, 0xFD	; 253
    50fe:	3f 4f       	sbci	r19, 0xFF	; 255
    5100:	b9 01       	movw	r22, r18
    5102:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XDerivativeGain);
    5106:	89 81       	ldd	r24, Y+1	; 0x01
    5108:	9a 81       	ldd	r25, Y+2	; 0x02
    510a:	ac 01       	movw	r20, r24
    510c:	43 5b       	subi	r20, 0xB3	; 179
    510e:	5f 4f       	sbci	r21, 0xFF	; 255
    5110:	89 81       	ldd	r24, Y+1	; 0x01
    5112:	9a 81       	ldd	r25, Y+2	; 0x02
    5114:	9e 01       	movw	r18, r28
    5116:	2d 5f       	subi	r18, 0xFD	; 253
    5118:	3f 4f       	sbci	r19, 0xFF	; 255
    511a:	b9 01       	movw	r22, r18
    511c:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XProportionalGain);
    5120:	89 81       	ldd	r24, Y+1	; 0x01
    5122:	9a 81       	ldd	r25, Y+2	; 0x02
    5124:	ac 01       	movw	r20, r24
    5126:	4f 5a       	subi	r20, 0xAF	; 175
    5128:	5f 4f       	sbci	r21, 0xFF	; 255
    512a:	89 81       	ldd	r24, Y+1	; 0x01
    512c:	9a 81       	ldd	r25, Y+2	; 0x02
    512e:	9e 01       	movw	r18, r28
    5130:	2d 5f       	subi	r18, 0xFD	; 253
    5132:	3f 4f       	sbci	r19, 0xFF	; 255
    5134:	b9 01       	movw	r22, r18
    5136:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XAntiWindupGain);
    513a:	89 81       	ldd	r24, Y+1	; 0x01
    513c:	9a 81       	ldd	r25, Y+2	; 0x02
    513e:	ac 01       	movw	r20, r24
    5140:	4b 5a       	subi	r20, 0xAB	; 171
    5142:	5f 4f       	sbci	r21, 0xFF	; 255
    5144:	89 81       	ldd	r24, Y+1	; 0x01
    5146:	9a 81       	ldd	r25, Y+2	; 0x02
    5148:	9e 01       	movw	r18, r28
    514a:	2d 5f       	subi	r18, 0xFD	; 253
    514c:	3f 4f       	sbci	r19, 0xFF	; 255
    514e:	b9 01       	movw	r22, r18
    5150:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LongitudeInnerLoopGain);
    5154:	89 81       	ldd	r24, Y+1	; 0x01
    5156:	9a 81       	ldd	r25, Y+2	; 0x02
    5158:	ac 01       	movw	r20, r24
    515a:	47 5a       	subi	r20, 0xA7	; 167
    515c:	5f 4f       	sbci	r21, 0xFF	; 255
    515e:	89 81       	ldd	r24, Y+1	; 0x01
    5160:	9a 81       	ldd	r25, Y+2	; 0x02
    5162:	9e 01       	movw	r18, r28
    5164:	2d 5f       	subi	r18, 0xFD	; 253
    5166:	3f 4f       	sbci	r19, 0xFF	; 255
    5168:	b9 01       	movw	r22, r18
    516a:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>

		decode (message, YNEDBodyFrame);
    516e:	89 81       	ldd	r24, Y+1	; 0x01
    5170:	9a 81       	ldd	r25, Y+2	; 0x02
    5172:	ac 01       	movw	r20, r24
    5174:	43 5a       	subi	r20, 0xA3	; 163
    5176:	5f 4f       	sbci	r21, 0xFF	; 255
    5178:	89 81       	ldd	r24, Y+1	; 0x01
    517a:	9a 81       	ldd	r25, Y+2	; 0x02
    517c:	9e 01       	movw	r18, r28
    517e:	2d 5f       	subi	r18, 0xFD	; 253
    5180:	3f 4f       	sbci	r19, 0xFF	; 255
    5182:	b9 01       	movw	r22, r18
    5184:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YVelocityMetersPerSecond);
    5188:	89 81       	ldd	r24, Y+1	; 0x01
    518a:	9a 81       	ldd	r25, Y+2	; 0x02
    518c:	ac 01       	movw	r20, r24
    518e:	4f 59       	subi	r20, 0x9F	; 159
    5190:	5f 4f       	sbci	r21, 0xFF	; 255
    5192:	89 81       	ldd	r24, Y+1	; 0x01
    5194:	9a 81       	ldd	r25, Y+2	; 0x02
    5196:	9e 01       	movw	r18, r28
    5198:	2d 5f       	subi	r18, 0xFD	; 253
    519a:	3f 4f       	sbci	r19, 0xFF	; 255
    519c:	b9 01       	movw	r22, r18
    519e:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, PhiRollDegrees);
    51a2:	89 81       	ldd	r24, Y+1	; 0x01
    51a4:	9a 81       	ldd	r25, Y+2	; 0x02
    51a6:	ac 01       	movw	r20, r24
    51a8:	4b 59       	subi	r20, 0x9B	; 155
    51aa:	5f 4f       	sbci	r21, 0xFF	; 255
    51ac:	89 81       	ldd	r24, Y+1	; 0x01
    51ae:	9a 81       	ldd	r25, Y+2	; 0x02
    51b0:	9e 01       	movw	r18, r28
    51b2:	2d 5f       	subi	r18, 0xFD	; 253
    51b4:	3f 4f       	sbci	r19, 0xFF	; 255
    51b6:	b9 01       	movw	r22, r18
    51b8:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YIntegral);
    51bc:	89 81       	ldd	r24, Y+1	; 0x01
    51be:	9a 81       	ldd	r25, Y+2	; 0x02
    51c0:	ac 01       	movw	r20, r24
    51c2:	47 59       	subi	r20, 0x97	; 151
    51c4:	5f 4f       	sbci	r21, 0xFF	; 255
    51c6:	89 81       	ldd	r24, Y+1	; 0x01
    51c8:	9a 81       	ldd	r25, Y+2	; 0x02
    51ca:	9e 01       	movw	r18, r28
    51cc:	2d 5f       	subi	r18, 0xFD	; 253
    51ce:	3f 4f       	sbci	r19, 0xFF	; 255
    51d0:	b9 01       	movw	r22, r18
    51d2:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YProportional);
    51d6:	89 81       	ldd	r24, Y+1	; 0x01
    51d8:	9a 81       	ldd	r25, Y+2	; 0x02
    51da:	ac 01       	movw	r20, r24
    51dc:	43 59       	subi	r20, 0x93	; 147
    51de:	5f 4f       	sbci	r21, 0xFF	; 255
    51e0:	89 81       	ldd	r24, Y+1	; 0x01
    51e2:	9a 81       	ldd	r25, Y+2	; 0x02
    51e4:	9e 01       	movw	r18, r28
    51e6:	2d 5f       	subi	r18, 0xFD	; 253
    51e8:	3f 4f       	sbci	r19, 0xFF	; 255
    51ea:	b9 01       	movw	r22, r18
    51ec:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YDerivativeError);
    51f0:	89 81       	ldd	r24, Y+1	; 0x01
    51f2:	9a 81       	ldd	r25, Y+2	; 0x02
    51f4:	ac 01       	movw	r20, r24
    51f6:	4f 58       	subi	r20, 0x8F	; 143
    51f8:	5f 4f       	sbci	r21, 0xFF	; 255
    51fa:	89 81       	ldd	r24, Y+1	; 0x01
    51fc:	9a 81       	ldd	r25, Y+2	; 0x02
    51fe:	9e 01       	movw	r18, r28
    5200:	2d 5f       	subi	r18, 0xFD	; 253
    5202:	3f 4f       	sbci	r19, 0xFF	; 255
    5204:	b9 01       	movw	r22, r18
    5206:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LateralControl);
    520a:	89 81       	ldd	r24, Y+1	; 0x01
    520c:	9a 81       	ldd	r25, Y+2	; 0x02
    520e:	ac 01       	movw	r20, r24
    5210:	4b 58       	subi	r20, 0x8B	; 139
    5212:	5f 4f       	sbci	r21, 0xFF	; 255
    5214:	89 81       	ldd	r24, Y+1	; 0x01
    5216:	9a 81       	ldd	r25, Y+2	; 0x02
    5218:	9e 01       	movw	r18, r28
    521a:	2d 5f       	subi	r18, 0xFD	; 253
    521c:	3f 4f       	sbci	r19, 0xFF	; 255
    521e:	b9 01       	movw	r22, r18
    5220:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YIntegralGain);
    5224:	89 81       	ldd	r24, Y+1	; 0x01
    5226:	9a 81       	ldd	r25, Y+2	; 0x02
    5228:	ac 01       	movw	r20, r24
    522a:	47 58       	subi	r20, 0x87	; 135
    522c:	5f 4f       	sbci	r21, 0xFF	; 255
    522e:	89 81       	ldd	r24, Y+1	; 0x01
    5230:	9a 81       	ldd	r25, Y+2	; 0x02
    5232:	9e 01       	movw	r18, r28
    5234:	2d 5f       	subi	r18, 0xFD	; 253
    5236:	3f 4f       	sbci	r19, 0xFF	; 255
    5238:	b9 01       	movw	r22, r18
    523a:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YDerivativeGain);
    523e:	89 81       	ldd	r24, Y+1	; 0x01
    5240:	9a 81       	ldd	r25, Y+2	; 0x02
    5242:	ac 01       	movw	r20, r24
    5244:	43 58       	subi	r20, 0x83	; 131
    5246:	5f 4f       	sbci	r21, 0xFF	; 255
    5248:	89 81       	ldd	r24, Y+1	; 0x01
    524a:	9a 81       	ldd	r25, Y+2	; 0x02
    524c:	9e 01       	movw	r18, r28
    524e:	2d 5f       	subi	r18, 0xFD	; 253
    5250:	3f 4f       	sbci	r19, 0xFF	; 255
    5252:	b9 01       	movw	r22, r18
    5254:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YProportionalGain);
    5258:	89 81       	ldd	r24, Y+1	; 0x01
    525a:	9a 81       	ldd	r25, Y+2	; 0x02
    525c:	ac 01       	movw	r20, r24
    525e:	4f 57       	subi	r20, 0x7F	; 127
    5260:	5f 4f       	sbci	r21, 0xFF	; 255
    5262:	89 81       	ldd	r24, Y+1	; 0x01
    5264:	9a 81       	ldd	r25, Y+2	; 0x02
    5266:	9e 01       	movw	r18, r28
    5268:	2d 5f       	subi	r18, 0xFD	; 253
    526a:	3f 4f       	sbci	r19, 0xFF	; 255
    526c:	b9 01       	movw	r22, r18
    526e:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YAntiWindupGain);
    5272:	89 81       	ldd	r24, Y+1	; 0x01
    5274:	9a 81       	ldd	r25, Y+2	; 0x02
    5276:	ac 01       	movw	r20, r24
    5278:	4b 57       	subi	r20, 0x7B	; 123
    527a:	5f 4f       	sbci	r21, 0xFF	; 255
    527c:	89 81       	ldd	r24, Y+1	; 0x01
    527e:	9a 81       	ldd	r25, Y+2	; 0x02
    5280:	9e 01       	movw	r18, r28
    5282:	2d 5f       	subi	r18, 0xFD	; 253
    5284:	3f 4f       	sbci	r19, 0xFF	; 255
    5286:	b9 01       	movw	r22, r18
    5288:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LateralInnerLoopGain);
    528c:	89 81       	ldd	r24, Y+1	; 0x01
    528e:	9a 81       	ldd	r25, Y+2	; 0x02
    5290:	ac 01       	movw	r20, r24
    5292:	47 57       	subi	r20, 0x77	; 119
    5294:	5f 4f       	sbci	r21, 0xFF	; 255
    5296:	89 81       	ldd	r24, Y+1	; 0x01
    5298:	9a 81       	ldd	r25, Y+2	; 0x02
    529a:	9e 01       	movw	r18, r28
    529c:	2d 5f       	subi	r18, 0xFD	; 253
    529e:	3f 4f       	sbci	r19, 0xFF	; 255
    52a0:	b9 01       	movw	r22, r18
    52a2:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>

		decode (message, AltitudeFeetAgl);
    52a6:	89 81       	ldd	r24, Y+1	; 0x01
    52a8:	9a 81       	ldd	r25, Y+2	; 0x02
    52aa:	ac 01       	movw	r20, r24
    52ac:	43 57       	subi	r20, 0x73	; 115
    52ae:	5f 4f       	sbci	r21, 0xFF	; 255
    52b0:	89 81       	ldd	r24, Y+1	; 0x01
    52b2:	9a 81       	ldd	r25, Y+2	; 0x02
    52b4:	9e 01       	movw	r18, r28
    52b6:	2d 5f       	subi	r18, 0xFD	; 253
    52b8:	3f 4f       	sbci	r19, 0xFF	; 255
    52ba:	b9 01       	movw	r22, r18
    52bc:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZVelocityMetersPerSecond);
    52c0:	89 81       	ldd	r24, Y+1	; 0x01
    52c2:	9a 81       	ldd	r25, Y+2	; 0x02
    52c4:	ac 01       	movw	r20, r24
    52c6:	4f 56       	subi	r20, 0x6F	; 111
    52c8:	5f 4f       	sbci	r21, 0xFF	; 255
    52ca:	89 81       	ldd	r24, Y+1	; 0x01
    52cc:	9a 81       	ldd	r25, Y+2	; 0x02
    52ce:	9e 01       	movw	r18, r28
    52d0:	2d 5f       	subi	r18, 0xFD	; 253
    52d2:	3f 4f       	sbci	r19, 0xFF	; 255
    52d4:	b9 01       	movw	r22, r18
    52d6:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZIntegral);
    52da:	89 81       	ldd	r24, Y+1	; 0x01
    52dc:	9a 81       	ldd	r25, Y+2	; 0x02
    52de:	ac 01       	movw	r20, r24
    52e0:	4b 56       	subi	r20, 0x6B	; 107
    52e2:	5f 4f       	sbci	r21, 0xFF	; 255
    52e4:	89 81       	ldd	r24, Y+1	; 0x01
    52e6:	9a 81       	ldd	r25, Y+2	; 0x02
    52e8:	9e 01       	movw	r18, r28
    52ea:	2d 5f       	subi	r18, 0xFD	; 253
    52ec:	3f 4f       	sbci	r19, 0xFF	; 255
    52ee:	b9 01       	movw	r22, r18
    52f0:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZProportional);
    52f4:	89 81       	ldd	r24, Y+1	; 0x01
    52f6:	9a 81       	ldd	r25, Y+2	; 0x02
    52f8:	ac 01       	movw	r20, r24
    52fa:	47 56       	subi	r20, 0x67	; 103
    52fc:	5f 4f       	sbci	r21, 0xFF	; 255
    52fe:	89 81       	ldd	r24, Y+1	; 0x01
    5300:	9a 81       	ldd	r25, Y+2	; 0x02
    5302:	9e 01       	movw	r18, r28
    5304:	2d 5f       	subi	r18, 0xFD	; 253
    5306:	3f 4f       	sbci	r19, 0xFF	; 255
    5308:	b9 01       	movw	r22, r18
    530a:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZDerivativeError);
    530e:	89 81       	ldd	r24, Y+1	; 0x01
    5310:	9a 81       	ldd	r25, Y+2	; 0x02
    5312:	ac 01       	movw	r20, r24
    5314:	43 56       	subi	r20, 0x63	; 99
    5316:	5f 4f       	sbci	r21, 0xFF	; 255
    5318:	89 81       	ldd	r24, Y+1	; 0x01
    531a:	9a 81       	ldd	r25, Y+2	; 0x02
    531c:	9e 01       	movw	r18, r28
    531e:	2d 5f       	subi	r18, 0xFD	; 253
    5320:	3f 4f       	sbci	r19, 0xFF	; 255
    5322:	b9 01       	movw	r22, r18
    5324:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, MainRotorCollectiveControl);
    5328:	89 81       	ldd	r24, Y+1	; 0x01
    532a:	9a 81       	ldd	r25, Y+2	; 0x02
    532c:	ac 01       	movw	r20, r24
    532e:	4f 55       	subi	r20, 0x5F	; 95
    5330:	5f 4f       	sbci	r21, 0xFF	; 255
    5332:	89 81       	ldd	r24, Y+1	; 0x01
    5334:	9a 81       	ldd	r25, Y+2	; 0x02
    5336:	9e 01       	movw	r18, r28
    5338:	2d 5f       	subi	r18, 0xFD	; 253
    533a:	3f 4f       	sbci	r19, 0xFF	; 255
    533c:	b9 01       	movw	r22, r18
    533e:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZIntegralGain);
    5342:	89 81       	ldd	r24, Y+1	; 0x01
    5344:	9a 81       	ldd	r25, Y+2	; 0x02
    5346:	ac 01       	movw	r20, r24
    5348:	4b 55       	subi	r20, 0x5B	; 91
    534a:	5f 4f       	sbci	r21, 0xFF	; 255
    534c:	89 81       	ldd	r24, Y+1	; 0x01
    534e:	9a 81       	ldd	r25, Y+2	; 0x02
    5350:	9e 01       	movw	r18, r28
    5352:	2d 5f       	subi	r18, 0xFD	; 253
    5354:	3f 4f       	sbci	r19, 0xFF	; 255
    5356:	b9 01       	movw	r22, r18
    5358:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZDerivativeGain);
    535c:	89 81       	ldd	r24, Y+1	; 0x01
    535e:	9a 81       	ldd	r25, Y+2	; 0x02
    5360:	ac 01       	movw	r20, r24
    5362:	47 55       	subi	r20, 0x57	; 87
    5364:	5f 4f       	sbci	r21, 0xFF	; 255
    5366:	89 81       	ldd	r24, Y+1	; 0x01
    5368:	9a 81       	ldd	r25, Y+2	; 0x02
    536a:	9e 01       	movw	r18, r28
    536c:	2d 5f       	subi	r18, 0xFD	; 253
    536e:	3f 4f       	sbci	r19, 0xFF	; 255
    5370:	b9 01       	movw	r22, r18
    5372:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZProportionalGain);
    5376:	89 81       	ldd	r24, Y+1	; 0x01
    5378:	9a 81       	ldd	r25, Y+2	; 0x02
    537a:	ac 01       	movw	r20, r24
    537c:	43 55       	subi	r20, 0x53	; 83
    537e:	5f 4f       	sbci	r21, 0xFF	; 255
    5380:	89 81       	ldd	r24, Y+1	; 0x01
    5382:	9a 81       	ldd	r25, Y+2	; 0x02
    5384:	9e 01       	movw	r18, r28
    5386:	2d 5f       	subi	r18, 0xFD	; 253
    5388:	3f 4f       	sbci	r19, 0xFF	; 255
    538a:	b9 01       	movw	r22, r18
    538c:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZAntiWindupGain);
    5390:	89 81       	ldd	r24, Y+1	; 0x01
    5392:	9a 81       	ldd	r25, Y+2	; 0x02
    5394:	ac 01       	movw	r20, r24
    5396:	4f 54       	subi	r20, 0x4F	; 79
    5398:	5f 4f       	sbci	r21, 0xFF	; 255
    539a:	89 81       	ldd	r24, Y+1	; 0x01
    539c:	9a 81       	ldd	r25, Y+2	; 0x02
    539e:	9e 01       	movw	r18, r28
    53a0:	2d 5f       	subi	r18, 0xFD	; 253
    53a2:	3f 4f       	sbci	r19, 0xFF	; 255
    53a4:	b9 01       	movw	r22, r18
    53a6:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		
	
		decode (message, LatitudeDegrees);
    53aa:	89 81       	ldd	r24, Y+1	; 0x01
    53ac:	9a 81       	ldd	r25, Y+2	; 0x02
    53ae:	ac 01       	movw	r20, r24
    53b0:	4b 54       	subi	r20, 0x4B	; 75
    53b2:	5f 4f       	sbci	r21, 0xFF	; 255
    53b4:	89 81       	ldd	r24, Y+1	; 0x01
    53b6:	9a 81       	ldd	r25, Y+2	; 0x02
    53b8:	9e 01       	movw	r18, r28
    53ba:	2d 5f       	subi	r18, 0xFD	; 253
    53bc:	3f 4f       	sbci	r19, 0xFF	; 255
    53be:	b9 01       	movw	r22, r18
    53c0:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LongitudeDegrees);
    53c4:	89 81       	ldd	r24, Y+1	; 0x01
    53c6:	9a 81       	ldd	r25, Y+2	; 0x02
    53c8:	ac 01       	movw	r20, r24
    53ca:	47 54       	subi	r20, 0x47	; 71
    53cc:	5f 4f       	sbci	r21, 0xFF	; 255
    53ce:	89 81       	ldd	r24, Y+1	; 0x01
    53d0:	9a 81       	ldd	r25, Y+2	; 0x02
    53d2:	9e 01       	movw	r18, r28
    53d4:	2d 5f       	subi	r18, 0xFD	; 253
    53d6:	3f 4f       	sbci	r19, 0xFF	; 255
    53d8:	b9 01       	movw	r22, r18
    53da:	0e 94 e2 1f 	call	0x3fc4	; 0x3fc4 <_ZN10helicopter8messages7Message6decodeERPhRf>
						
		decode (message,Timeouts);
    53de:	89 81       	ldd	r24, Y+1	; 0x01
    53e0:	9a 81       	ldd	r25, Y+2	; 0x02
    53e2:	ac 01       	movw	r20, r24
    53e4:	43 54       	subi	r20, 0x43	; 67
    53e6:	5f 4f       	sbci	r21, 0xFF	; 255
    53e8:	89 81       	ldd	r24, Y+1	; 0x01
    53ea:	9a 81       	ldd	r25, Y+2	; 0x02
    53ec:	9e 01       	movw	r18, r28
    53ee:	2d 5f       	subi	r18, 0xFD	; 253
    53f0:	3f 4f       	sbci	r19, 0xFF	; 255
    53f2:	b9 01       	movw	r22, r18
    53f4:	0e 94 b4 1f 	call	0x3f68	; 0x3f68 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message,UnrecognizedMsgTypes);
    53f8:	89 81       	ldd	r24, Y+1	; 0x01
    53fa:	9a 81       	ldd	r25, Y+2	; 0x02
    53fc:	ac 01       	movw	r20, r24
    53fe:	4f 53       	subi	r20, 0x3F	; 63
    5400:	5f 4f       	sbci	r21, 0xFF	; 255
    5402:	89 81       	ldd	r24, Y+1	; 0x01
    5404:	9a 81       	ldd	r25, Y+2	; 0x02
    5406:	9e 01       	movw	r18, r28
    5408:	2d 5f       	subi	r18, 0xFD	; 253
    540a:	3f 4f       	sbci	r19, 0xFF	; 255
    540c:	b9 01       	movw	r22, r18
    540e:	0e 94 b4 1f 	call	0x3f68	; 0x3f68 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message,ChecksumErrors);
    5412:	89 81       	ldd	r24, Y+1	; 0x01
    5414:	9a 81       	ldd	r25, Y+2	; 0x02
    5416:	ac 01       	movw	r20, r24
    5418:	4b 53       	subi	r20, 0x3B	; 59
    541a:	5f 4f       	sbci	r21, 0xFF	; 255
    541c:	89 81       	ldd	r24, Y+1	; 0x01
    541e:	9a 81       	ldd	r25, Y+2	; 0x02
    5420:	9e 01       	movw	r18, r28
    5422:	2d 5f       	subi	r18, 0xFD	; 253
    5424:	3f 4f       	sbci	r19, 0xFF	; 255
    5426:	b9 01       	movw	r22, r18
    5428:	0e 94 b4 1f 	call	0x3f68	; 0x3f68 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message,NumOfBlownFrames);
    542c:	89 81       	ldd	r24, Y+1	; 0x01
    542e:	9a 81       	ldd	r25, Y+2	; 0x02
    5430:	ac 01       	movw	r20, r24
    5432:	47 53       	subi	r20, 0x37	; 55
    5434:	5f 4f       	sbci	r21, 0xFF	; 255
    5436:	89 81       	ldd	r24, Y+1	; 0x01
    5438:	9a 81       	ldd	r25, Y+2	; 0x02
    543a:	9e 01       	movw	r18, r28
    543c:	2d 5f       	subi	r18, 0xFD	; 253
    543e:	3f 4f       	sbci	r19, 0xFF	; 255
    5440:	b9 01       	movw	r22, r18
    5442:	0e 94 b4 1f 	call	0x3f68	; 0x3f68 <_ZN10helicopter8messages7Message6decodeERPhRl>
	}
}
    5446:	0f 90       	pop	r0
    5448:	0f 90       	pop	r0
    544a:	0f 90       	pop	r0
    544c:	0f 90       	pop	r0
    544e:	df 91       	pop	r29
    5450:	cf 91       	pop	r28
    5452:	08 95       	ret

00005454 <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh>:

SystemTelemetryMessage* SystemTelemetryMessage::buildMessageSt(byte *message)
{
    5454:	0f 93       	push	r16
    5456:	1f 93       	push	r17
    5458:	cf 93       	push	r28
    545a:	df 93       	push	r29
    545c:	00 d0       	rcall	.+0      	; 0x545e <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh+0xa>
    545e:	1f 92       	push	r1
    5460:	cd b7       	in	r28, 0x3d	; 61
    5462:	de b7       	in	r29, 0x3e	; 62
    5464:	9c 83       	std	Y+4, r25	; 0x04
    5466:	8b 83       	std	Y+3, r24	; 0x03
	SystemTelemetryMessage *msg = new SystemTelemetryMessage();
    5468:	8d ec       	ldi	r24, 0xCD	; 205
    546a:	90 e0       	ldi	r25, 0x00	; 0
    546c:	0e 94 13 38 	call	0x7026	; 0x7026 <_Znwj>
    5470:	8c 01       	movw	r16, r24
    5472:	c8 01       	movw	r24, r16
    5474:	0e 94 d2 22 	call	0x45a4	; 0x45a4 <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>
    5478:	1a 83       	std	Y+2, r17	; 0x02
    547a:	09 83       	std	Y+1, r16	; 0x01
	msg->buildMessage(message);
    547c:	89 81       	ldd	r24, Y+1	; 0x01
    547e:	9a 81       	ldd	r25, Y+2	; 0x02
    5480:	fc 01       	movw	r30, r24
    5482:	80 81       	ld	r24, Z
    5484:	91 81       	ldd	r25, Z+1	; 0x01
    5486:	06 96       	adiw	r24, 0x06	; 6
    5488:	fc 01       	movw	r30, r24
    548a:	20 81       	ld	r18, Z
    548c:	31 81       	ldd	r19, Z+1	; 0x01
    548e:	4b 81       	ldd	r20, Y+3	; 0x03
    5490:	5c 81       	ldd	r21, Y+4	; 0x04
    5492:	89 81       	ldd	r24, Y+1	; 0x01
    5494:	9a 81       	ldd	r25, Y+2	; 0x02
    5496:	ba 01       	movw	r22, r20
    5498:	f9 01       	movw	r30, r18
    549a:	19 95       	eicall
	
	return msg;
    549c:	89 81       	ldd	r24, Y+1	; 0x01
    549e:	9a 81       	ldd	r25, Y+2	; 0x02
}
    54a0:	0f 90       	pop	r0
    54a2:	0f 90       	pop	r0
    54a4:	0f 90       	pop	r0
    54a6:	0f 90       	pop	r0
    54a8:	df 91       	pop	r29
    54aa:	cf 91       	pop	r28
    54ac:	1f 91       	pop	r17
    54ae:	0f 91       	pop	r16
    54b0:	08 95       	ret

000054b2 <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE>:

SystemTelemetryMessage * SystemTelemetryMessage::buildMessageFromModel(SystemModel *model)
{
    54b2:	0f 93       	push	r16
    54b4:	1f 93       	push	r17
    54b6:	cf 93       	push	r28
    54b8:	df 93       	push	r29
    54ba:	00 d0       	rcall	.+0      	; 0x54bc <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE+0xa>
    54bc:	1f 92       	push	r1
    54be:	cd b7       	in	r28, 0x3d	; 61
    54c0:	de b7       	in	r29, 0x3e	; 62
    54c2:	9c 83       	std	Y+4, r25	; 0x04
    54c4:	8b 83       	std	Y+3, r24	; 0x03
	//throw std::exception("The method or operation is not implemented.");
	SystemTelemetryMessage *message = new SystemTelemetryMessage();
    54c6:	8d ec       	ldi	r24, 0xCD	; 205
    54c8:	90 e0       	ldi	r25, 0x00	; 0
    54ca:	0e 94 13 38 	call	0x7026	; 0x7026 <_Znwj>
    54ce:	8c 01       	movw	r16, r24
    54d0:	c8 01       	movw	r24, r16
    54d2:	0e 94 d2 22 	call	0x45a4	; 0x45a4 <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>
    54d6:	1a 83       	std	Y+2, r17	; 0x02
    54d8:	09 83       	std	Y+1, r16	; 0x01
	
	message->MagYaw = model->MagYawDegrees();
    54da:	8b 81       	ldd	r24, Y+3	; 0x03
    54dc:	9c 81       	ldd	r25, Y+4	; 0x04
    54de:	0e 94 3d 01 	call	0x27a	; 0x27a <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>
    54e2:	dc 01       	movw	r26, r24
    54e4:	cb 01       	movw	r24, r22
    54e6:	29 81       	ldd	r18, Y+1	; 0x01
    54e8:	3a 81       	ldd	r19, Y+2	; 0x02
    54ea:	f9 01       	movw	r30, r18
    54ec:	85 83       	std	Z+5, r24	; 0x05
    54ee:	96 83       	std	Z+6, r25	; 0x06
    54f0:	a7 83       	std	Z+7, r26	; 0x07
    54f2:	b0 87       	std	Z+8, r27	; 0x08
	message->YawDerivativeError = model->YawDerivativeError();
    54f4:	8b 81       	ldd	r24, Y+3	; 0x03
    54f6:	9c 81       	ldd	r25, Y+4	; 0x04
    54f8:	0e 94 66 20 	call	0x40cc	; 0x40cc <_ZNK10helicopter5model11SystemModel18YawDerivativeErrorEv>
    54fc:	dc 01       	movw	r26, r24
    54fe:	cb 01       	movw	r24, r22
    5500:	29 81       	ldd	r18, Y+1	; 0x01
    5502:	3a 81       	ldd	r19, Y+2	; 0x02
    5504:	f9 01       	movw	r30, r18
    5506:	85 8b       	std	Z+21, r24	; 0x15
    5508:	96 8b       	std	Z+22, r25	; 0x16
    550a:	a7 8b       	std	Z+23, r26	; 0x17
    550c:	b0 8f       	std	Z+24, r27	; 0x18
	message->YawIntegral = model->YawIntegral();
    550e:	8b 81       	ldd	r24, Y+3	; 0x03
    5510:	9c 81       	ldd	r25, Y+4	; 0x04
    5512:	0e 94 01 02 	call	0x402	; 0x402 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>
    5516:	dc 01       	movw	r26, r24
    5518:	cb 01       	movw	r24, r22
    551a:	29 81       	ldd	r18, Y+1	; 0x01
    551c:	3a 81       	ldd	r19, Y+2	; 0x02
    551e:	f9 01       	movw	r30, r18
    5520:	85 87       	std	Z+13, r24	; 0x0d
    5522:	96 87       	std	Z+14, r25	; 0x0e
    5524:	a7 87       	std	Z+15, r26	; 0x0f
    5526:	b0 8b       	std	Z+16, r27	; 0x10
	message->YawProportional = model->YawProportional();
    5528:	8b 81       	ldd	r24, Y+3	; 0x03
    552a:	9c 81       	ldd	r25, Y+4	; 0x04
    552c:	0e 94 50 20 	call	0x40a0	; 0x40a0 <_ZNK10helicopter5model11SystemModel15YawProportionalEv>
    5530:	dc 01       	movw	r26, r24
    5532:	cb 01       	movw	r24, r22
    5534:	29 81       	ldd	r18, Y+1	; 0x01
    5536:	3a 81       	ldd	r19, Y+2	; 0x02
    5538:	f9 01       	movw	r30, r18
    553a:	81 8b       	std	Z+17, r24	; 0x11
    553c:	92 8b       	std	Z+18, r25	; 0x12
    553e:	a3 8b       	std	Z+19, r26	; 0x13
    5540:	b4 8b       	std	Z+20, r27	; 0x14
	message->YawVelocityDegreesPerSecond = model->YawVelocityDegreesPerSecond();
    5542:	8b 81       	ldd	r24, Y+3	; 0x03
    5544:	9c 81       	ldd	r25, Y+4	; 0x04
    5546:	0e 94 d5 01 	call	0x3aa	; 0x3aa <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>
    554a:	dc 01       	movw	r26, r24
    554c:	cb 01       	movw	r24, r22
    554e:	29 81       	ldd	r18, Y+1	; 0x01
    5550:	3a 81       	ldd	r19, Y+2	; 0x02
    5552:	f9 01       	movw	r30, r18
    5554:	81 87       	std	Z+9, r24	; 0x09
    5556:	92 87       	std	Z+10, r25	; 0x0a
    5558:	a3 87       	std	Z+11, r26	; 0x0b
    555a:	b4 87       	std	Z+12, r27	; 0x0c
	message->YawControl = model->YawControl();
    555c:	8b 81       	ldd	r24, Y+3	; 0x03
    555e:	9c 81       	ldd	r25, Y+4	; 0x04
    5560:	0e 94 69 01 	call	0x2d2	; 0x2d2 <_ZNK10helicopter5model11SystemModel10YawControlEv>
    5564:	dc 01       	movw	r26, r24
    5566:	cb 01       	movw	r24, r22
    5568:	29 81       	ldd	r18, Y+1	; 0x01
    556a:	3a 81       	ldd	r19, Y+2	; 0x02
    556c:	f9 01       	movw	r30, r18
    556e:	81 8f       	std	Z+25, r24	; 0x19
    5570:	92 8f       	std	Z+26, r25	; 0x1a
    5572:	a3 8f       	std	Z+27, r26	; 0x1b
    5574:	b4 8f       	std	Z+28, r27	; 0x1c
	

	message->XNEDBodyFrame = model->XNEDBodyFrame();
    5576:	8b 81       	ldd	r24, Y+3	; 0x03
    5578:	9c 81       	ldd	r25, Y+4	; 0x04
    557a:	0e 94 77 02 	call	0x4ee	; 0x4ee <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>
    557e:	dc 01       	movw	r26, r24
    5580:	cb 01       	movw	r24, r22
    5582:	29 81       	ldd	r18, Y+1	; 0x01
    5584:	3a 81       	ldd	r19, Y+2	; 0x02
    5586:	f9 01       	movw	r30, r18
    5588:	85 a7       	std	Z+45, r24	; 0x2d
    558a:	96 a7       	std	Z+46, r25	; 0x2e
    558c:	a7 a7       	std	Z+47, r26	; 0x2f
    558e:	b0 ab       	std	Z+48, r27	; 0x30
	message->XDerivativeError = model->XDerivativeError();
    5590:	8b 81       	ldd	r24, Y+3	; 0x03
    5592:	9c 81       	ldd	r25, Y+4	; 0x04
    5594:	0e 94 b4 20 	call	0x4168	; 0x4168 <_ZNK10helicopter5model11SystemModel16XDerivativeErrorEv>
    5598:	dc 01       	movw	r26, r24
    559a:	cb 01       	movw	r24, r22
    559c:	29 81       	ldd	r18, Y+1	; 0x01
    559e:	3a 81       	ldd	r19, Y+2	; 0x02
    55a0:	2f 5b       	subi	r18, 0xBF	; 191
    55a2:	3f 4f       	sbci	r19, 0xFF	; 255
    55a4:	f9 01       	movw	r30, r18
    55a6:	80 83       	st	Z, r24
    55a8:	91 83       	std	Z+1, r25	; 0x01
    55aa:	a2 83       	std	Z+2, r26	; 0x02
    55ac:	b3 83       	std	Z+3, r27	; 0x03
	message->XIntegral = model->XIntegral();
    55ae:	8b 81       	ldd	r24, Y+3	; 0x03
    55b0:	9c 81       	ldd	r25, Y+4	; 0x04
    55b2:	0e 94 94 03 	call	0x728	; 0x728 <_ZNK10helicopter5model11SystemModel9XIntegralEv>
    55b6:	dc 01       	movw	r26, r24
    55b8:	cb 01       	movw	r24, r22
    55ba:	29 81       	ldd	r18, Y+1	; 0x01
    55bc:	3a 81       	ldd	r19, Y+2	; 0x02
    55be:	f9 01       	movw	r30, r18
    55c0:	81 af       	std	Z+57, r24	; 0x39
    55c2:	92 af       	std	Z+58, r25	; 0x3a
    55c4:	a3 af       	std	Z+59, r26	; 0x3b
    55c6:	b4 af       	std	Z+60, r27	; 0x3c
	message->XProportional = model->XProportional();
    55c8:	8b 81       	ldd	r24, Y+3	; 0x03
    55ca:	9c 81       	ldd	r25, Y+4	; 0x04
    55cc:	0e 94 9c 20 	call	0x4138	; 0x4138 <_ZNK10helicopter5model11SystemModel13XProportionalEv>
    55d0:	dc 01       	movw	r26, r24
    55d2:	cb 01       	movw	r24, r22
    55d4:	29 81       	ldd	r18, Y+1	; 0x01
    55d6:	3a 81       	ldd	r19, Y+2	; 0x02
    55d8:	23 5c       	subi	r18, 0xC3	; 195
    55da:	3f 4f       	sbci	r19, 0xFF	; 255
    55dc:	f9 01       	movw	r30, r18
    55de:	80 83       	st	Z, r24
    55e0:	91 83       	std	Z+1, r25	; 0x01
    55e2:	a2 83       	std	Z+2, r26	; 0x02
    55e4:	b3 83       	std	Z+3, r27	; 0x03
	message->XVelocityMetersPerSecond = model->XVelocityMetersPerSecond();
    55e6:	8b 81       	ldd	r24, Y+3	; 0x03
    55e8:	9c 81       	ldd	r25, Y+4	; 0x04
    55ea:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>
    55ee:	dc 01       	movw	r26, r24
    55f0:	cb 01       	movw	r24, r22
    55f2:	29 81       	ldd	r18, Y+1	; 0x01
    55f4:	3a 81       	ldd	r19, Y+2	; 0x02
    55f6:	f9 01       	movw	r30, r18
    55f8:	81 ab       	std	Z+49, r24	; 0x31
    55fa:	92 ab       	std	Z+50, r25	; 0x32
    55fc:	a3 ab       	std	Z+51, r26	; 0x33
    55fe:	b4 ab       	std	Z+52, r27	; 0x34
	message->LongitudeControl = model->LongitudeControl();
    5600:	8b 81       	ldd	r24, Y+3	; 0x03
    5602:	9c 81       	ldd	r25, Y+4	; 0x04
    5604:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>
    5608:	dc 01       	movw	r26, r24
    560a:	cb 01       	movw	r24, r22
    560c:	29 81       	ldd	r18, Y+1	; 0x01
    560e:	3a 81       	ldd	r19, Y+2	; 0x02
    5610:	2b 5b       	subi	r18, 0xBB	; 187
    5612:	3f 4f       	sbci	r19, 0xFF	; 255
    5614:	f9 01       	movw	r30, r18
    5616:	80 83       	st	Z, r24
    5618:	91 83       	std	Z+1, r25	; 0x01
    561a:	a2 83       	std	Z+2, r26	; 0x02
    561c:	b3 83       	std	Z+3, r27	; 0x03
	
	
	message->YNEDBodyFrame = model->YNEDBodyFrame();
    561e:	8b 81       	ldd	r24, Y+3	; 0x03
    5620:	9c 81       	ldd	r25, Y+4	; 0x04
    5622:	0e 94 0a 04 	call	0x814	; 0x814 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>
    5626:	dc 01       	movw	r26, r24
    5628:	cb 01       	movw	r24, r22
    562a:	29 81       	ldd	r18, Y+1	; 0x01
    562c:	3a 81       	ldd	r19, Y+2	; 0x02
    562e:	23 5a       	subi	r18, 0xA3	; 163
    5630:	3f 4f       	sbci	r19, 0xFF	; 255
    5632:	f9 01       	movw	r30, r18
    5634:	80 83       	st	Z, r24
    5636:	91 83       	std	Z+1, r25	; 0x01
    5638:	a2 83       	std	Z+2, r26	; 0x02
    563a:	b3 83       	std	Z+3, r27	; 0x03
	message->YDerivativeError = model->YDerivativeError();
    563c:	8b 81       	ldd	r24, Y+3	; 0x03
    563e:	9c 81       	ldd	r25, Y+4	; 0x04
    5640:	0e 94 2a 21 	call	0x4254	; 0x4254 <_ZNK10helicopter5model11SystemModel16YDerivativeErrorEv>
    5644:	dc 01       	movw	r26, r24
    5646:	cb 01       	movw	r24, r22
    5648:	29 81       	ldd	r18, Y+1	; 0x01
    564a:	3a 81       	ldd	r19, Y+2	; 0x02
    564c:	2f 58       	subi	r18, 0x8F	; 143
    564e:	3f 4f       	sbci	r19, 0xFF	; 255
    5650:	f9 01       	movw	r30, r18
    5652:	80 83       	st	Z, r24
    5654:	91 83       	std	Z+1, r25	; 0x01
    5656:	a2 83       	std	Z+2, r26	; 0x02
    5658:	b3 83       	std	Z+3, r27	; 0x03
	message->YIntegral = model->YIntegral();
    565a:	8b 81       	ldd	r24, Y+3	; 0x03
    565c:	9c 81       	ldd	r25, Y+4	; 0x04
    565e:	0e 94 52 04 	call	0x8a4	; 0x8a4 <_ZNK10helicopter5model11SystemModel9YIntegralEv>
    5662:	dc 01       	movw	r26, r24
    5664:	cb 01       	movw	r24, r22
    5666:	29 81       	ldd	r18, Y+1	; 0x01
    5668:	3a 81       	ldd	r19, Y+2	; 0x02
    566a:	27 59       	subi	r18, 0x97	; 151
    566c:	3f 4f       	sbci	r19, 0xFF	; 255
    566e:	f9 01       	movw	r30, r18
    5670:	80 83       	st	Z, r24
    5672:	91 83       	std	Z+1, r25	; 0x01
    5674:	a2 83       	std	Z+2, r26	; 0x02
    5676:	b3 83       	std	Z+3, r27	; 0x03
	message->YProportional = model->YProportional();
    5678:	8b 81       	ldd	r24, Y+3	; 0x03
    567a:	9c 81       	ldd	r25, Y+4	; 0x04
    567c:	0e 94 12 21 	call	0x4224	; 0x4224 <_ZNK10helicopter5model11SystemModel13YProportionalEv>
    5680:	dc 01       	movw	r26, r24
    5682:	cb 01       	movw	r24, r22
    5684:	29 81       	ldd	r18, Y+1	; 0x01
    5686:	3a 81       	ldd	r19, Y+2	; 0x02
    5688:	23 59       	subi	r18, 0x93	; 147
    568a:	3f 4f       	sbci	r19, 0xFF	; 255
    568c:	f9 01       	movw	r30, r18
    568e:	80 83       	st	Z, r24
    5690:	91 83       	std	Z+1, r25	; 0x01
    5692:	a2 83       	std	Z+2, r26	; 0x02
    5694:	b3 83       	std	Z+3, r27	; 0x03
	message->YVelocityMetersPerSecond = model->YVelocityMetersPerSecond();
    5696:	8b 81       	ldd	r24, Y+3	; 0x03
    5698:	9c 81       	ldd	r25, Y+4	; 0x04
    569a:	0e 94 3a 04 	call	0x874	; 0x874 <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>
    569e:	dc 01       	movw	r26, r24
    56a0:	cb 01       	movw	r24, r22
    56a2:	29 81       	ldd	r18, Y+1	; 0x01
    56a4:	3a 81       	ldd	r19, Y+2	; 0x02
    56a6:	2f 59       	subi	r18, 0x9F	; 159
    56a8:	3f 4f       	sbci	r19, 0xFF	; 255
    56aa:	f9 01       	movw	r30, r18
    56ac:	80 83       	st	Z, r24
    56ae:	91 83       	std	Z+1, r25	; 0x01
    56b0:	a2 83       	std	Z+2, r26	; 0x02
    56b2:	b3 83       	std	Z+3, r27	; 0x03
	message->LateralControl = model->LateralControl();
    56b4:	8b 81       	ldd	r24, Y+3	; 0x03
    56b6:	9c 81       	ldd	r25, Y+4	; 0x04
    56b8:	0e 94 22 04 	call	0x844	; 0x844 <_ZNK10helicopter5model11SystemModel14LateralControlEv>
    56bc:	dc 01       	movw	r26, r24
    56be:	cb 01       	movw	r24, r22
    56c0:	29 81       	ldd	r18, Y+1	; 0x01
    56c2:	3a 81       	ldd	r19, Y+2	; 0x02
    56c4:	2b 58       	subi	r18, 0x8B	; 139
    56c6:	3f 4f       	sbci	r19, 0xFF	; 255
    56c8:	f9 01       	movw	r30, r18
    56ca:	80 83       	st	Z, r24
    56cc:	91 83       	std	Z+1, r25	; 0x01
    56ce:	a2 83       	std	Z+2, r26	; 0x02
    56d0:	b3 83       	std	Z+3, r27	; 0x03
	
	
	
	message->AltitudeFeetAgl = model->AltitudeFeetAgl();
    56d2:	8b 81       	ldd	r24, Y+3	; 0x03
    56d4:	9c 81       	ldd	r25, Y+4	; 0x04
    56d6:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    56da:	dc 01       	movw	r26, r24
    56dc:	cb 01       	movw	r24, r22
    56de:	29 81       	ldd	r18, Y+1	; 0x01
    56e0:	3a 81       	ldd	r19, Y+2	; 0x02
    56e2:	23 57       	subi	r18, 0x73	; 115
    56e4:	3f 4f       	sbci	r19, 0xFF	; 255
    56e6:	f9 01       	movw	r30, r18
    56e8:	80 83       	st	Z, r24
    56ea:	91 83       	std	Z+1, r25	; 0x01
    56ec:	a2 83       	std	Z+2, r26	; 0x02
    56ee:	b3 83       	std	Z+3, r27	; 0x03
	message->ZDerivativeError = model->ZDerivativeError();
    56f0:	8b 81       	ldd	r24, Y+3	; 0x03
    56f2:	9c 81       	ldd	r25, Y+4	; 0x04
    56f4:	0e 94 c3 21 	call	0x4386	; 0x4386 <_ZNK10helicopter5model11SystemModel16ZDerivativeErrorEv>
    56f8:	dc 01       	movw	r26, r24
    56fa:	cb 01       	movw	r24, r22
    56fc:	29 81       	ldd	r18, Y+1	; 0x01
    56fe:	3a 81       	ldd	r19, Y+2	; 0x02
    5700:	23 56       	subi	r18, 0x63	; 99
    5702:	3f 4f       	sbci	r19, 0xFF	; 255
    5704:	f9 01       	movw	r30, r18
    5706:	80 83       	st	Z, r24
    5708:	91 83       	std	Z+1, r25	; 0x01
    570a:	a2 83       	std	Z+2, r26	; 0x02
    570c:	b3 83       	std	Z+3, r27	; 0x03
	message->ZIntegral = model->ZIntegral();
    570e:	8b 81       	ldd	r24, Y+3	; 0x03
    5710:	9c 81       	ldd	r25, Y+4	; 0x04
    5712:	0e 94 40 05 	call	0xa80	; 0xa80 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>
    5716:	dc 01       	movw	r26, r24
    5718:	cb 01       	movw	r24, r22
    571a:	29 81       	ldd	r18, Y+1	; 0x01
    571c:	3a 81       	ldd	r19, Y+2	; 0x02
    571e:	2b 56       	subi	r18, 0x6B	; 107
    5720:	3f 4f       	sbci	r19, 0xFF	; 255
    5722:	f9 01       	movw	r30, r18
    5724:	80 83       	st	Z, r24
    5726:	91 83       	std	Z+1, r25	; 0x01
    5728:	a2 83       	std	Z+2, r26	; 0x02
    572a:	b3 83       	std	Z+3, r27	; 0x03
	message->ZProportional = model->ZProportional();
    572c:	8b 81       	ldd	r24, Y+3	; 0x03
    572e:	9c 81       	ldd	r25, Y+4	; 0x04
    5730:	0e 94 ab 21 	call	0x4356	; 0x4356 <_ZNK10helicopter5model11SystemModel13ZProportionalEv>
    5734:	dc 01       	movw	r26, r24
    5736:	cb 01       	movw	r24, r22
    5738:	29 81       	ldd	r18, Y+1	; 0x01
    573a:	3a 81       	ldd	r19, Y+2	; 0x02
    573c:	27 56       	subi	r18, 0x67	; 103
    573e:	3f 4f       	sbci	r19, 0xFF	; 255
    5740:	f9 01       	movw	r30, r18
    5742:	80 83       	st	Z, r24
    5744:	91 83       	std	Z+1, r25	; 0x01
    5746:	a2 83       	std	Z+2, r26	; 0x02
    5748:	b3 83       	std	Z+3, r27	; 0x03
	message->ZVelocityMetersPerSecond = (model->ZVelocityFeetPerSecond() / 3.2804f);
    574a:	8b 81       	ldd	r24, Y+3	; 0x03
    574c:	9c 81       	ldd	r25, Y+4	; 0x04
    574e:	0e 94 10 05 	call	0xa20	; 0xa20 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>
    5752:	dc 01       	movw	r26, r24
    5754:	cb 01       	movw	r24, r22
    5756:	23 e1       	ldi	r18, 0x13	; 19
    5758:	32 ef       	ldi	r19, 0xF2	; 242
    575a:	41 e5       	ldi	r20, 0x51	; 81
    575c:	50 e4       	ldi	r21, 0x40	; 64
    575e:	bc 01       	movw	r22, r24
    5760:	cd 01       	movw	r24, r26
    5762:	0e 94 7f 3e 	call	0x7cfe	; 0x7cfe <__divsf3>
    5766:	dc 01       	movw	r26, r24
    5768:	cb 01       	movw	r24, r22
    576a:	29 81       	ldd	r18, Y+1	; 0x01
    576c:	3a 81       	ldd	r19, Y+2	; 0x02
    576e:	2f 56       	subi	r18, 0x6F	; 111
    5770:	3f 4f       	sbci	r19, 0xFF	; 255
    5772:	f9 01       	movw	r30, r18
    5774:	80 83       	st	Z, r24
    5776:	91 83       	std	Z+1, r25	; 0x01
    5778:	a2 83       	std	Z+2, r26	; 0x02
    577a:	b3 83       	std	Z+3, r27	; 0x03
	message->MainRotorCollectiveControl = model->MainRotorCollectiveControl();
    577c:	8b 81       	ldd	r24, Y+3	; 0x03
    577e:	9c 81       	ldd	r25, Y+4	; 0x04
    5780:	0e 94 9a 04 	call	0x934	; 0x934 <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>
    5784:	dc 01       	movw	r26, r24
    5786:	cb 01       	movw	r24, r22
    5788:	29 81       	ldd	r18, Y+1	; 0x01
    578a:	3a 81       	ldd	r19, Y+2	; 0x02
    578c:	2f 55       	subi	r18, 0x5F	; 95
    578e:	3f 4f       	sbci	r19, 0xFF	; 255
    5790:	f9 01       	movw	r30, r18
    5792:	80 83       	st	Z, r24
    5794:	91 83       	std	Z+1, r25	; 0x01
    5796:	a2 83       	std	Z+2, r26	; 0x02
    5798:	b3 83       	std	Z+3, r27	; 0x03
	
	
	message->ChecksumErrors = model->ChecksumErrors();
    579a:	8b 81       	ldd	r24, Y+3	; 0x03
    579c:	9c 81       	ldd	r25, Y+4	; 0x04
    579e:	0e 94 97 22 	call	0x452e	; 0x452e <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>
    57a2:	dc 01       	movw	r26, r24
    57a4:	cb 01       	movw	r24, r22
    57a6:	29 81       	ldd	r18, Y+1	; 0x01
    57a8:	3a 81       	ldd	r19, Y+2	; 0x02
    57aa:	2b 53       	subi	r18, 0x3B	; 59
    57ac:	3f 4f       	sbci	r19, 0xFF	; 255
    57ae:	f9 01       	movw	r30, r18
    57b0:	80 83       	st	Z, r24
    57b2:	91 83       	std	Z+1, r25	; 0x01
    57b4:	a2 83       	std	Z+2, r26	; 0x02
    57b6:	b3 83       	std	Z+3, r27	; 0x03
	message->Timeouts = model->Timeouts();
    57b8:	8b 81       	ldd	r24, Y+3	; 0x03
    57ba:	9c 81       	ldd	r25, Y+4	; 0x04
    57bc:	0e 94 21 22 	call	0x4442	; 0x4442 <_ZNK10helicopter5model11SystemModel8TimeoutsEv>
    57c0:	dc 01       	movw	r26, r24
    57c2:	cb 01       	movw	r24, r22
    57c4:	29 81       	ldd	r18, Y+1	; 0x01
    57c6:	3a 81       	ldd	r19, Y+2	; 0x02
    57c8:	23 54       	subi	r18, 0x43	; 67
    57ca:	3f 4f       	sbci	r19, 0xFF	; 255
    57cc:	f9 01       	movw	r30, r18
    57ce:	80 83       	st	Z, r24
    57d0:	91 83       	std	Z+1, r25	; 0x01
    57d2:	a2 83       	std	Z+2, r26	; 0x02
    57d4:	b3 83       	std	Z+3, r27	; 0x03
	message->UnrecognizedMsgTypes = model->UnrecognizedMsgTypes();
    57d6:	8b 81       	ldd	r24, Y+3	; 0x03
    57d8:	9c 81       	ldd	r25, Y+4	; 0x04
    57da:	0e 94 5c 22 	call	0x44b8	; 0x44b8 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>
    57de:	dc 01       	movw	r26, r24
    57e0:	cb 01       	movw	r24, r22
    57e2:	29 81       	ldd	r18, Y+1	; 0x01
    57e4:	3a 81       	ldd	r19, Y+2	; 0x02
    57e6:	2f 53       	subi	r18, 0x3F	; 63
    57e8:	3f 4f       	sbci	r19, 0xFF	; 255
    57ea:	f9 01       	movw	r30, r18
    57ec:	80 83       	st	Z, r24
    57ee:	91 83       	std	Z+1, r25	; 0x01
    57f0:	a2 83       	std	Z+2, r26	; 0x02
    57f2:	b3 83       	std	Z+3, r27	; 0x03
	message->NumOfBlownFrames = model->BlownFrames();
    57f4:	8b 81       	ldd	r24, Y+3	; 0x03
    57f6:	9c 81       	ldd	r25, Y+4	; 0x04
    57f8:	0e 94 c1 05 	call	0xb82	; 0xb82 <_ZNK10helicopter5model11SystemModel11BlownFramesEv>
    57fc:	dc 01       	movw	r26, r24
    57fe:	cb 01       	movw	r24, r22
    5800:	29 81       	ldd	r18, Y+1	; 0x01
    5802:	3a 81       	ldd	r19, Y+2	; 0x02
    5804:	27 53       	subi	r18, 0x37	; 55
    5806:	3f 4f       	sbci	r19, 0xFF	; 255
    5808:	f9 01       	movw	r30, r18
    580a:	80 83       	st	Z, r24
    580c:	91 83       	std	Z+1, r25	; 0x01
    580e:	a2 83       	std	Z+2, r26	; 0x02
    5810:	b3 83       	std	Z+3, r27	; 0x03
	
	return message;
    5812:	89 81       	ldd	r24, Y+1	; 0x01
    5814:	9a 81       	ldd	r25, Y+2	; 0x02
}
    5816:	0f 90       	pop	r0
    5818:	0f 90       	pop	r0
    581a:	0f 90       	pop	r0
    581c:	0f 90       	pop	r0
    581e:	df 91       	pop	r29
    5820:	cf 91       	pop	r28
    5822:	1f 91       	pop	r17
    5824:	0f 91       	pop	r16
    5826:	08 95       	ret

00005828 <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE>:
	model->ChecksumErrors(this->ChecksumErrors);
	model->BlownFrames(this->NumOfBlownFrames);
}

void SystemTelemetryMessage::updateModelFromMessageFromSimulator (SystemModel *model)
{
    5828:	cf 93       	push	r28
    582a:	df 93       	push	r29
    582c:	00 d0       	rcall	.+0      	; 0x582e <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE+0x6>
    582e:	1f 92       	push	r1
    5830:	cd b7       	in	r28, 0x3d	; 61
    5832:	de b7       	in	r29, 0x3e	; 62
    5834:	9a 83       	std	Y+2, r25	; 0x02
    5836:	89 83       	std	Y+1, r24	; 0x01
    5838:	7c 83       	std	Y+4, r23	; 0x04
    583a:	6b 83       	std	Y+3, r22	; 0x03
	//These values are sensor readings from the simulator that are used for flight
	//control calculations. The real helicopter algorithms will read these values
	//from actual sensors, but when running off of the simulator, these sensor
	//readings come from the simulator itself.
	
	model->MagYawDegrees(this->MagYaw);
    583c:	89 81       	ldd	r24, Y+1	; 0x01
    583e:	9a 81       	ldd	r25, Y+2	; 0x02
    5840:	fc 01       	movw	r30, r24
    5842:	85 81       	ldd	r24, Z+5	; 0x05
    5844:	96 81       	ldd	r25, Z+6	; 0x06
    5846:	a7 81       	ldd	r26, Z+7	; 0x07
    5848:	b0 85       	ldd	r27, Z+8	; 0x08
    584a:	2b 81       	ldd	r18, Y+3	; 0x03
    584c:	3c 81       	ldd	r19, Y+4	; 0x04
    584e:	ac 01       	movw	r20, r24
    5850:	bd 01       	movw	r22, r26
    5852:	c9 01       	movw	r24, r18
    5854:	0e 94 10 20 	call	0x4020	; 0x4020 <_ZN10helicopter5model11SystemModel13MagYawDegreesEf>
	model->YawVelocityDegreesPerSecond(this->YawVelocityDegreesPerSecond);
    5858:	89 81       	ldd	r24, Y+1	; 0x01
    585a:	9a 81       	ldd	r25, Y+2	; 0x02
    585c:	fc 01       	movw	r30, r24
    585e:	81 85       	ldd	r24, Z+9	; 0x09
    5860:	92 85       	ldd	r25, Z+10	; 0x0a
    5862:	a3 85       	ldd	r26, Z+11	; 0x0b
    5864:	b4 85       	ldd	r27, Z+12	; 0x0c
    5866:	2b 81       	ldd	r18, Y+3	; 0x03
    5868:	3c 81       	ldd	r19, Y+4	; 0x04
    586a:	ac 01       	movw	r20, r24
    586c:	bd 01       	movw	r22, r26
    586e:	c9 01       	movw	r24, r18
    5870:	0e 94 30 20 	call	0x4060	; 0x4060 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf>
	
	//model->XNEDBodyFrame((double) this->XNEDBodyFrame / 100);//not supposed to be here since this is a calculated value, not a sensor reading.
	model->XVelocityMetersPerSecond(this->XVelocityMetersPerSecond);
    5874:	89 81       	ldd	r24, Y+1	; 0x01
    5876:	9a 81       	ldd	r25, Y+2	; 0x02
    5878:	fc 01       	movw	r30, r24
    587a:	81 a9       	ldd	r24, Z+49	; 0x31
    587c:	92 a9       	ldd	r25, Z+50	; 0x32
    587e:	a3 a9       	ldd	r26, Z+51	; 0x33
    5880:	b4 a9       	ldd	r27, Z+52	; 0x34
    5882:	2b 81       	ldd	r18, Y+3	; 0x03
    5884:	3c 81       	ldd	r19, Y+4	; 0x04
    5886:	ac 01       	movw	r20, r24
    5888:	bd 01       	movw	r22, r26
    588a:	c9 01       	movw	r24, r18
    588c:	0e 94 7c 20 	call	0x40f8	; 0x40f8 <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf>
	model->ThetaPitchDegrees(this->ThetaPitchDegrees);
    5890:	89 81       	ldd	r24, Y+1	; 0x01
    5892:	9a 81       	ldd	r25, Y+2	; 0x02
    5894:	fc 01       	movw	r30, r24
    5896:	85 a9       	ldd	r24, Z+53	; 0x35
    5898:	96 a9       	ldd	r25, Z+54	; 0x36
    589a:	a7 a9       	ldd	r26, Z+55	; 0x37
    589c:	b0 ad       	ldd	r27, Z+56	; 0x38
    589e:	2b 81       	ldd	r18, Y+3	; 0x03
    58a0:	3c 81       	ldd	r19, Y+4	; 0x04
    58a2:	ac 01       	movw	r20, r24
    58a4:	bd 01       	movw	r22, r26
    58a6:	c9 01       	movw	r24, r18
    58a8:	0e 94 cc 20 	call	0x4198	; 0x4198 <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf>
	
	//model->YNEDBodyFrame((double) this->YNEDBodyFrame / 100);
	model->YVelocityMetersPerSecond(this->YVelocityMetersPerSecond);
    58ac:	89 81       	ldd	r24, Y+1	; 0x01
    58ae:	9a 81       	ldd	r25, Y+2	; 0x02
    58b0:	8f 59       	subi	r24, 0x9F	; 159
    58b2:	9f 4f       	sbci	r25, 0xFF	; 255
    58b4:	fc 01       	movw	r30, r24
    58b6:	80 81       	ld	r24, Z
    58b8:	91 81       	ldd	r25, Z+1	; 0x01
    58ba:	a2 81       	ldd	r26, Z+2	; 0x02
    58bc:	b3 81       	ldd	r27, Z+3	; 0x03
    58be:	2b 81       	ldd	r18, Y+3	; 0x03
    58c0:	3c 81       	ldd	r19, Y+4	; 0x04
    58c2:	ac 01       	movw	r20, r24
    58c4:	bd 01       	movw	r22, r26
    58c6:	c9 01       	movw	r24, r18
    58c8:	0e 94 ef 20 	call	0x41de	; 0x41de <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf>
	model->PhiRollDegrees(this->PhiRollDegrees);
    58cc:	89 81       	ldd	r24, Y+1	; 0x01
    58ce:	9a 81       	ldd	r25, Y+2	; 0x02
    58d0:	8b 59       	subi	r24, 0x9B	; 155
    58d2:	9f 4f       	sbci	r25, 0xFF	; 255
    58d4:	fc 01       	movw	r30, r24
    58d6:	80 81       	ld	r24, Z
    58d8:	91 81       	ldd	r25, Z+1	; 0x01
    58da:	a2 81       	ldd	r26, Z+2	; 0x02
    58dc:	b3 81       	ldd	r27, Z+3	; 0x03
    58de:	2b 81       	ldd	r18, Y+3	; 0x03
    58e0:	3c 81       	ldd	r19, Y+4	; 0x04
    58e2:	ac 01       	movw	r20, r24
    58e4:	bd 01       	movw	r22, r26
    58e6:	c9 01       	movw	r24, r18
    58e8:	0e 94 42 21 	call	0x4284	; 0x4284 <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf>
	
	model->AltitudeFeetAgl(this->AltitudeFeetAgl);
    58ec:	89 81       	ldd	r24, Y+1	; 0x01
    58ee:	9a 81       	ldd	r25, Y+2	; 0x02
    58f0:	83 57       	subi	r24, 0x73	; 115
    58f2:	9f 4f       	sbci	r25, 0xFF	; 255
    58f4:	fc 01       	movw	r30, r24
    58f6:	80 81       	ld	r24, Z
    58f8:	91 81       	ldd	r25, Z+1	; 0x01
    58fa:	a2 81       	ldd	r26, Z+2	; 0x02
    58fc:	b3 81       	ldd	r27, Z+3	; 0x03
    58fe:	2b 81       	ldd	r18, Y+3	; 0x03
    5900:	3c 81       	ldd	r19, Y+4	; 0x04
    5902:	ac 01       	movw	r20, r24
    5904:	bd 01       	movw	r22, r26
    5906:	c9 01       	movw	r24, r18
    5908:	0e 94 65 21 	call	0x42ca	; 0x42ca <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf>
	
	//Convert from meters per sec, to foot per sec.
	
	model->ZVelocityFeetPerSecond(this->ZVelocityMetersPerSecond * 3.28084d); 
    590c:	89 81       	ldd	r24, Y+1	; 0x01
    590e:	9a 81       	ldd	r25, Y+2	; 0x02
    5910:	8f 56       	subi	r24, 0x6F	; 111
    5912:	9f 4f       	sbci	r25, 0xFF	; 255
    5914:	fc 01       	movw	r30, r24
    5916:	80 81       	ld	r24, Z
    5918:	91 81       	ldd	r25, Z+1	; 0x01
    591a:	a2 81       	ldd	r26, Z+2	; 0x02
    591c:	b3 81       	ldd	r27, Z+3	; 0x03
    591e:	28 e4       	ldi	r18, 0x48	; 72
    5920:	39 ef       	ldi	r19, 0xF9	; 249
    5922:	41 e5       	ldi	r20, 0x51	; 81
    5924:	50 e4       	ldi	r21, 0x40	; 64
    5926:	bc 01       	movw	r22, r24
    5928:	cd 01       	movw	r24, r26
    592a:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    592e:	dc 01       	movw	r26, r24
    5930:	cb 01       	movw	r24, r22
    5932:	2b 81       	ldd	r18, Y+3	; 0x03
    5934:	3c 81       	ldd	r19, Y+4	; 0x04
    5936:	ac 01       	movw	r20, r24
    5938:	bd 01       	movw	r22, r26
    593a:	c9 01       	movw	r24, r18
    593c:	0e 94 88 21 	call	0x4310	; 0x4310 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf>
	
	model->LatitudeDegrees(this->LatitudeDegrees);
    5940:	89 81       	ldd	r24, Y+1	; 0x01
    5942:	9a 81       	ldd	r25, Y+2	; 0x02
    5944:	8b 54       	subi	r24, 0x4B	; 75
    5946:	9f 4f       	sbci	r25, 0xFF	; 255
    5948:	fc 01       	movw	r30, r24
    594a:	80 81       	ld	r24, Z
    594c:	91 81       	ldd	r25, Z+1	; 0x01
    594e:	a2 81       	ldd	r26, Z+2	; 0x02
    5950:	b3 81       	ldd	r27, Z+3	; 0x03
    5952:	2b 81       	ldd	r18, Y+3	; 0x03
    5954:	3c 81       	ldd	r19, Y+4	; 0x04
    5956:	ac 01       	movw	r20, r24
    5958:	bd 01       	movw	r22, r26
    595a:	c9 01       	movw	r24, r18
    595c:	0e 94 db 21 	call	0x43b6	; 0x43b6 <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf>
	model->LongitudeDegrees(this->LongitudeDegrees);
    5960:	89 81       	ldd	r24, Y+1	; 0x01
    5962:	9a 81       	ldd	r25, Y+2	; 0x02
    5964:	87 54       	subi	r24, 0x47	; 71
    5966:	9f 4f       	sbci	r25, 0xFF	; 255
    5968:	fc 01       	movw	r30, r24
    596a:	80 81       	ld	r24, Z
    596c:	91 81       	ldd	r25, Z+1	; 0x01
    596e:	a2 81       	ldd	r26, Z+2	; 0x02
    5970:	b3 81       	ldd	r27, Z+3	; 0x03
    5972:	2b 81       	ldd	r18, Y+3	; 0x03
    5974:	3c 81       	ldd	r19, Y+4	; 0x04
    5976:	ac 01       	movw	r20, r24
    5978:	bd 01       	movw	r22, r26
    597a:	c9 01       	movw	r24, r18
    597c:	0e 94 fe 21 	call	0x43fc	; 0x43fc <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf>
    5980:	0f 90       	pop	r0
    5982:	0f 90       	pop	r0
    5984:	0f 90       	pop	r0
    5986:	0f 90       	pop	r0
    5988:	df 91       	pop	r29
    598a:	cf 91       	pop	r28
    598c:	08 95       	ret

0000598e <_ZN10helicopter5tasks4Task8getDelayEv>:
				 * subclasses runTaskImpl to execute the actual task logic.
				 */
				virtual void runTask();
				
					
				int getDelay()
    598e:	cf 93       	push	r28
    5990:	df 93       	push	r29
    5992:	1f 92       	push	r1
    5994:	1f 92       	push	r1
    5996:	cd b7       	in	r28, 0x3d	; 61
    5998:	de b7       	in	r29, 0x3e	; 62
    599a:	9a 83       	std	Y+2, r25	; 0x02
    599c:	89 83       	std	Y+1, r24	; 0x01
				{
					return delay;
    599e:	89 81       	ldd	r24, Y+1	; 0x01
    59a0:	9a 81       	ldd	r25, Y+2	; 0x02
    59a2:	fc 01       	movw	r30, r24
    59a4:	82 81       	ldd	r24, Z+2	; 0x02
    59a6:	93 81       	ldd	r25, Z+3	; 0x03
				}
    59a8:	0f 90       	pop	r0
    59aa:	0f 90       	pop	r0
    59ac:	df 91       	pop	r29
    59ae:	cf 91       	pop	r28
    59b0:	08 95       	ret

000059b2 <_ZN10helicopter5tasks4Task9getPeriodEv>:
				
				int getPeriod()
    59b2:	cf 93       	push	r28
    59b4:	df 93       	push	r29
    59b6:	1f 92       	push	r1
    59b8:	1f 92       	push	r1
    59ba:	cd b7       	in	r28, 0x3d	; 61
    59bc:	de b7       	in	r29, 0x3e	; 62
    59be:	9a 83       	std	Y+2, r25	; 0x02
    59c0:	89 83       	std	Y+1, r24	; 0x01
				{
					return period;
    59c2:	89 81       	ldd	r24, Y+1	; 0x01
    59c4:	9a 81       	ldd	r25, Y+2	; 0x02
    59c6:	fc 01       	movw	r30, r24
    59c8:	84 81       	ldd	r24, Z+4	; 0x04
    59ca:	95 81       	ldd	r25, Z+5	; 0x05
				}
    59cc:	0f 90       	pop	r0
    59ce:	0f 90       	pop	r0
    59d0:	df 91       	pop	r29
    59d2:	cf 91       	pop	r28
    59d4:	08 95       	ret

000059d6 <_ZN10helicopter5tasks4Task8setDelayEi>:
				
				void setDelay(int delay)
    59d6:	cf 93       	push	r28
    59d8:	df 93       	push	r29
    59da:	00 d0       	rcall	.+0      	; 0x59dc <_ZN10helicopter5tasks4Task8setDelayEi+0x6>
    59dc:	1f 92       	push	r1
    59de:	cd b7       	in	r28, 0x3d	; 61
    59e0:	de b7       	in	r29, 0x3e	; 62
    59e2:	9a 83       	std	Y+2, r25	; 0x02
    59e4:	89 83       	std	Y+1, r24	; 0x01
    59e6:	7c 83       	std	Y+4, r23	; 0x04
    59e8:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->delay = delay;
    59ea:	89 81       	ldd	r24, Y+1	; 0x01
    59ec:	9a 81       	ldd	r25, Y+2	; 0x02
    59ee:	2b 81       	ldd	r18, Y+3	; 0x03
    59f0:	3c 81       	ldd	r19, Y+4	; 0x04
    59f2:	fc 01       	movw	r30, r24
    59f4:	33 83       	std	Z+3, r19	; 0x03
    59f6:	22 83       	std	Z+2, r18	; 0x02
				}
    59f8:	0f 90       	pop	r0
    59fa:	0f 90       	pop	r0
    59fc:	0f 90       	pop	r0
    59fe:	0f 90       	pop	r0
    5a00:	df 91       	pop	r29
    5a02:	cf 91       	pop	r28
    5a04:	08 95       	ret

00005a06 <_ZN10helicopter5tasks4Task15getIsReadyToRunEv>:
				
				bool getIsReadyToRun()
    5a06:	cf 93       	push	r28
    5a08:	df 93       	push	r29
    5a0a:	1f 92       	push	r1
    5a0c:	1f 92       	push	r1
    5a0e:	cd b7       	in	r28, 0x3d	; 61
    5a10:	de b7       	in	r29, 0x3e	; 62
    5a12:	9a 83       	std	Y+2, r25	; 0x02
    5a14:	89 83       	std	Y+1, r24	; 0x01
				{
					return isReadyToRun;
    5a16:	89 81       	ldd	r24, Y+1	; 0x01
    5a18:	9a 81       	ldd	r25, Y+2	; 0x02
    5a1a:	fc 01       	movw	r30, r24
    5a1c:	86 81       	ldd	r24, Z+6	; 0x06
				}
    5a1e:	0f 90       	pop	r0
    5a20:	0f 90       	pop	r0
    5a22:	df 91       	pop	r29
    5a24:	cf 91       	pop	r28
    5a26:	08 95       	ret

00005a28 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>:
				
				void setIsReadyToRun(bool isReadyToRun)
    5a28:	cf 93       	push	r28
    5a2a:	df 93       	push	r29
    5a2c:	00 d0       	rcall	.+0      	; 0x5a2e <_ZN10helicopter5tasks4Task15setIsReadyToRunEb+0x6>
    5a2e:	cd b7       	in	r28, 0x3d	; 61
    5a30:	de b7       	in	r29, 0x3e	; 62
    5a32:	9a 83       	std	Y+2, r25	; 0x02
    5a34:	89 83       	std	Y+1, r24	; 0x01
    5a36:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->isReadyToRun = isReadyToRun;
    5a38:	89 81       	ldd	r24, Y+1	; 0x01
    5a3a:	9a 81       	ldd	r25, Y+2	; 0x02
    5a3c:	2b 81       	ldd	r18, Y+3	; 0x03
    5a3e:	fc 01       	movw	r30, r24
    5a40:	26 83       	std	Z+6, r18	; 0x06
				}
    5a42:	0f 90       	pop	r0
    5a44:	0f 90       	pop	r0
    5a46:	0f 90       	pop	r0
    5a48:	df 91       	pop	r29
    5a4a:	cf 91       	pop	r28
    5a4c:	08 95       	ret

00005a4e <_ZN10helicopter5tasks4Task11reduceDelayEv>:
				
				/**
				 * Reduces the delay by one tick.
				 */
				void reduceDelay()
    5a4e:	cf 93       	push	r28
    5a50:	df 93       	push	r29
    5a52:	1f 92       	push	r1
    5a54:	1f 92       	push	r1
    5a56:	cd b7       	in	r28, 0x3d	; 61
    5a58:	de b7       	in	r29, 0x3e	; 62
    5a5a:	9a 83       	std	Y+2, r25	; 0x02
    5a5c:	89 83       	std	Y+1, r24	; 0x01
				{
					delay--;
    5a5e:	89 81       	ldd	r24, Y+1	; 0x01
    5a60:	9a 81       	ldd	r25, Y+2	; 0x02
    5a62:	fc 01       	movw	r30, r24
    5a64:	82 81       	ldd	r24, Z+2	; 0x02
    5a66:	93 81       	ldd	r25, Z+3	; 0x03
    5a68:	9c 01       	movw	r18, r24
    5a6a:	21 50       	subi	r18, 0x01	; 1
    5a6c:	31 09       	sbc	r19, r1
    5a6e:	89 81       	ldd	r24, Y+1	; 0x01
    5a70:	9a 81       	ldd	r25, Y+2	; 0x02
    5a72:	fc 01       	movw	r30, r24
    5a74:	33 83       	std	Z+3, r19	; 0x03
    5a76:	22 83       	std	Z+2, r18	; 0x02
				}
    5a78:	0f 90       	pop	r0
    5a7a:	0f 90       	pop	r0
    5a7c:	df 91       	pop	r29
    5a7e:	cf 91       	pop	r28
    5a80:	08 95       	ret

00005a82 <_ZN10helicopter9scheduler9Scheduler13getNumOfTasksEv>:
			    /*
				* Starts the timer for determining which tasks are ready to run.
				*/
				void start();
				
				int getNumOfTasks()
    5a82:	cf 93       	push	r28
    5a84:	df 93       	push	r29
    5a86:	1f 92       	push	r1
    5a88:	1f 92       	push	r1
    5a8a:	cd b7       	in	r28, 0x3d	; 61
    5a8c:	de b7       	in	r29, 0x3e	; 62
    5a8e:	9a 83       	std	Y+2, r25	; 0x02
    5a90:	89 83       	std	Y+1, r24	; 0x01
				{
					return numOfTasks;
    5a92:	89 81       	ldd	r24, Y+1	; 0x01
    5a94:	9a 81       	ldd	r25, Y+2	; 0x02
    5a96:	fc 01       	movw	r30, r24
    5a98:	84 89       	ldd	r24, Z+20	; 0x14
    5a9a:	95 89       	ldd	r25, Z+21	; 0x15
				}
    5a9c:	0f 90       	pop	r0
    5a9e:	0f 90       	pop	r0
    5aa0:	df 91       	pop	r29
    5aa2:	cf 91       	pop	r28
    5aa4:	08 95       	ret

00005aa6 <_ZN10helicopter9scheduler9Scheduler8getTasksEv>:
				
				Task **getTasks()
    5aa6:	cf 93       	push	r28
    5aa8:	df 93       	push	r29
    5aaa:	1f 92       	push	r1
    5aac:	1f 92       	push	r1
    5aae:	cd b7       	in	r28, 0x3d	; 61
    5ab0:	de b7       	in	r29, 0x3e	; 62
    5ab2:	9a 83       	std	Y+2, r25	; 0x02
    5ab4:	89 83       	std	Y+1, r24	; 0x01
				{
					return tasks;
    5ab6:	89 81       	ldd	r24, Y+1	; 0x01
    5ab8:	9a 81       	ldd	r25, Y+2	; 0x02
				}
    5aba:	0f 90       	pop	r0
    5abc:	0f 90       	pop	r0
    5abe:	df 91       	pop	r29
    5ac0:	cf 91       	pop	r28
    5ac2:	08 95       	ret

00005ac4 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb>:
				/**
				 * Sets whether a blown frame was detected. (I.e. the dispatcher didn't finish before
				 * the scheduler timmer was triggered again)
				 * @param blownFrameDetected true if a frame was blown, false otherwise.
				 */
				void hasBlownFrame(bool blowFrameDetected)
    5ac4:	cf 93       	push	r28
    5ac6:	df 93       	push	r29
    5ac8:	00 d0       	rcall	.+0      	; 0x5aca <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb+0x6>
    5aca:	cd b7       	in	r28, 0x3d	; 61
    5acc:	de b7       	in	r29, 0x3e	; 62
    5ace:	9a 83       	std	Y+2, r25	; 0x02
    5ad0:	89 83       	std	Y+1, r24	; 0x01
    5ad2:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->blowFrameDetected = blowFrameDetected;
    5ad4:	89 81       	ldd	r24, Y+1	; 0x01
    5ad6:	9a 81       	ldd	r25, Y+2	; 0x02
    5ad8:	2b 81       	ldd	r18, Y+3	; 0x03
    5ada:	fc 01       	movw	r30, r24
    5adc:	22 8f       	std	Z+26, r18	; 0x1a
				}
    5ade:	0f 90       	pop	r0
    5ae0:	0f 90       	pop	r0
    5ae2:	0f 90       	pop	r0
    5ae4:	df 91       	pop	r29
    5ae6:	cf 91       	pop	r28
    5ae8:	08 95       	ret

00005aea <_ZN10helicopter9scheduler9Scheduler20hasCompletedDispatchEv>:
				/**
				 * Returns a flag indicating that the dispatch method has completed. This is for
				 * use by the scheduler to determine if the dispatcher blew a frame.
				 * @return true if the dispatch method completed, false otherwise. 
				 */
				bool hasCompletedDispatch()
    5aea:	cf 93       	push	r28
    5aec:	df 93       	push	r29
    5aee:	1f 92       	push	r1
    5af0:	1f 92       	push	r1
    5af2:	cd b7       	in	r28, 0x3d	; 61
    5af4:	de b7       	in	r29, 0x3e	; 62
    5af6:	9a 83       	std	Y+2, r25	; 0x02
    5af8:	89 83       	std	Y+1, r24	; 0x01
				{
					return completedDispatch;
    5afa:	89 81       	ldd	r24, Y+1	; 0x01
    5afc:	9a 81       	ldd	r25, Y+2	; 0x02
    5afe:	fc 01       	movw	r30, r24
    5b00:	83 8d       	ldd	r24, Z+27	; 0x1b
				}
    5b02:	0f 90       	pop	r0
    5b04:	0f 90       	pop	r0
    5b06:	df 91       	pop	r29
    5b08:	cf 91       	pop	r28
    5b0a:	08 95       	ret

00005b0c <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>:
using namespace helicopter::scheduler;

Scheduler* Scheduler::scheduler = NULL;

Scheduler* Scheduler::getScheduler()
{
    5b0c:	ef 92       	push	r14
    5b0e:	ff 92       	push	r15
    5b10:	0f 93       	push	r16
    5b12:	1f 93       	push	r17
    5b14:	cf 93       	push	r28
    5b16:	df 93       	push	r29
    5b18:	cd b7       	in	r28, 0x3d	; 61
    5b1a:	de b7       	in	r29, 0x3e	; 62
	if (scheduler == NULL)
    5b1c:	80 91 a4 02 	lds	r24, 0x02A4
    5b20:	90 91 a5 02 	lds	r25, 0x02A5
    5b24:	00 97       	sbiw	r24, 0x00	; 0
    5b26:	a1 f4       	brne	.+40     	; 0x5b50 <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv+0x44>
	{
		scheduler = new Scheduler(F_CPU, PRESCALE_BY_SIXTYFOUR, SCHEDULER_TICK_FREQUENCY_HZ);
    5b28:	8c e1       	ldi	r24, 0x1C	; 28
    5b2a:	90 e0       	ldi	r25, 0x00	; 0
    5b2c:	0e 94 13 38 	call	0x7026	; 0x7026 <_Znwj>
    5b30:	7c 01       	movw	r14, r24
    5b32:	06 e4       	ldi	r16, 0x46	; 70
    5b34:	10 e0       	ldi	r17, 0x00	; 0
    5b36:	20 e4       	ldi	r18, 0x40	; 64
    5b38:	30 e0       	ldi	r19, 0x00	; 0
    5b3a:	40 e0       	ldi	r20, 0x00	; 0
    5b3c:	54 e2       	ldi	r21, 0x24	; 36
    5b3e:	64 ef       	ldi	r22, 0xF4	; 244
    5b40:	70 e0       	ldi	r23, 0x00	; 0
    5b42:	c7 01       	movw	r24, r14
    5b44:	0e 94 b3 2d 	call	0x5b66	; 0x5b66 <_ZN10helicopter9scheduler9SchedulerC1Em9PRESCALERi>
    5b48:	f0 92 a5 02 	sts	0x02A5, r15
    5b4c:	e0 92 a4 02 	sts	0x02A4, r14
	}

	return scheduler;
    5b50:	80 91 a4 02 	lds	r24, 0x02A4
    5b54:	90 91 a5 02 	lds	r25, 0x02A5
}
    5b58:	df 91       	pop	r29
    5b5a:	cf 91       	pop	r28
    5b5c:	1f 91       	pop	r17
    5b5e:	0f 91       	pop	r16
    5b60:	ff 90       	pop	r15
    5b62:	ef 90       	pop	r14
    5b64:	08 95       	ret

00005b66 <_ZN10helicopter9scheduler9SchedulerC1Em9PRESCALERi>:

Scheduler::Scheduler(unsigned long cpuSpeed, PRESCALER prescaler, int schedulerTickFrequencyHz)
    5b66:	0f 93       	push	r16
    5b68:	1f 93       	push	r17
    5b6a:	cf 93       	push	r28
    5b6c:	df 93       	push	r29
    5b6e:	cd b7       	in	r28, 0x3d	; 61
    5b70:	de b7       	in	r29, 0x3e	; 62
    5b72:	2a 97       	sbiw	r28, 0x0a	; 10
    5b74:	0f b6       	in	r0, 0x3f	; 63
    5b76:	f8 94       	cli
    5b78:	de bf       	out	0x3e, r29	; 62
    5b7a:	0f be       	out	0x3f, r0	; 63
    5b7c:	cd bf       	out	0x3d, r28	; 61
    5b7e:	9a 83       	std	Y+2, r25	; 0x02
    5b80:	89 83       	std	Y+1, r24	; 0x01
    5b82:	4b 83       	std	Y+3, r20	; 0x03
    5b84:	5c 83       	std	Y+4, r21	; 0x04
    5b86:	6d 83       	std	Y+5, r22	; 0x05
    5b88:	7e 83       	std	Y+6, r23	; 0x06
    5b8a:	38 87       	std	Y+8, r19	; 0x08
    5b8c:	2f 83       	std	Y+7, r18	; 0x07
    5b8e:	1a 87       	std	Y+10, r17	; 0x0a
    5b90:	09 87       	std	Y+9, r16	; 0x09
{
	targetTimerCount =  ((cpuSpeed / prescaler) / schedulerTickFrequencyHz);
    5b92:	8f 81       	ldd	r24, Y+7	; 0x07
    5b94:	98 85       	ldd	r25, Y+8	; 0x08
    5b96:	9c 01       	movw	r18, r24
    5b98:	44 27       	eor	r20, r20
    5b9a:	37 fd       	sbrc	r19, 7
    5b9c:	40 95       	com	r20
    5b9e:	54 2f       	mov	r21, r20
    5ba0:	8b 81       	ldd	r24, Y+3	; 0x03
    5ba2:	9c 81       	ldd	r25, Y+4	; 0x04
    5ba4:	ad 81       	ldd	r26, Y+5	; 0x05
    5ba6:	be 81       	ldd	r27, Y+6	; 0x06
    5ba8:	bc 01       	movw	r22, r24
    5baa:	cd 01       	movw	r24, r26
    5bac:	0e 94 88 42 	call	0x8510	; 0x8510 <__udivmodsi4>
    5bb0:	da 01       	movw	r26, r20
    5bb2:	c9 01       	movw	r24, r18
    5bb4:	29 85       	ldd	r18, Y+9	; 0x09
    5bb6:	3a 85       	ldd	r19, Y+10	; 0x0a
    5bb8:	44 27       	eor	r20, r20
    5bba:	37 fd       	sbrc	r19, 7
    5bbc:	40 95       	com	r20
    5bbe:	54 2f       	mov	r21, r20
    5bc0:	bc 01       	movw	r22, r24
    5bc2:	cd 01       	movw	r24, r26
    5bc4:	0e 94 88 42 	call	0x8510	; 0x8510 <__udivmodsi4>
    5bc8:	da 01       	movw	r26, r20
    5bca:	c9 01       	movw	r24, r18
    5bcc:	9c 01       	movw	r18, r24
    5bce:	89 81       	ldd	r24, Y+1	; 0x01
    5bd0:	9a 81       	ldd	r25, Y+2	; 0x02
    5bd2:	fc 01       	movw	r30, r24
    5bd4:	37 8b       	std	Z+23, r19	; 0x17
    5bd6:	26 8b       	std	Z+22, r18	; 0x16
	
	//Calculate the timer value to achieve the desired frequency. 
	this->targetTimerCount = targetTimerCount;
    5bd8:	89 81       	ldd	r24, Y+1	; 0x01
    5bda:	9a 81       	ldd	r25, Y+2	; 0x02
    5bdc:	fc 01       	movw	r30, r24
    5bde:	26 89       	ldd	r18, Z+22	; 0x16
    5be0:	37 89       	ldd	r19, Z+23	; 0x17
    5be2:	89 81       	ldd	r24, Y+1	; 0x01
    5be4:	9a 81       	ldd	r25, Y+2	; 0x02
    5be6:	fc 01       	movw	r30, r24
    5be8:	37 8b       	std	Z+23, r19	; 0x17
    5bea:	26 8b       	std	Z+22, r18	; 0x16

	this->prescaler = prescaler;
    5bec:	89 81       	ldd	r24, Y+1	; 0x01
    5bee:	9a 81       	ldd	r25, Y+2	; 0x02
    5bf0:	2f 81       	ldd	r18, Y+7	; 0x07
    5bf2:	38 85       	ldd	r19, Y+8	; 0x08
    5bf4:	fc 01       	movw	r30, r24
    5bf6:	31 8f       	std	Z+25, r19	; 0x19
    5bf8:	20 8f       	std	Z+24, r18	; 0x18
	
	numOfTasks = 0;
    5bfa:	89 81       	ldd	r24, Y+1	; 0x01
    5bfc:	9a 81       	ldd	r25, Y+2	; 0x02
    5bfe:	fc 01       	movw	r30, r24
    5c00:	15 8a       	std	Z+21, r1	; 0x15
    5c02:	14 8a       	std	Z+20, r1	; 0x14
	
	blowFrameDetected = false;
    5c04:	89 81       	ldd	r24, Y+1	; 0x01
    5c06:	9a 81       	ldd	r25, Y+2	; 0x02
    5c08:	fc 01       	movw	r30, r24
    5c0a:	12 8e       	std	Z+26, r1	; 0x1a
	
	completedDispatch = true;
    5c0c:	89 81       	ldd	r24, Y+1	; 0x01
    5c0e:	9a 81       	ldd	r25, Y+2	; 0x02
    5c10:	21 e0       	ldi	r18, 0x01	; 1
    5c12:	fc 01       	movw	r30, r24
    5c14:	23 8f       	std	Z+27, r18	; 0x1b
}
    5c16:	2a 96       	adiw	r28, 0x0a	; 10
    5c18:	0f b6       	in	r0, 0x3f	; 63
    5c1a:	f8 94       	cli
    5c1c:	de bf       	out	0x3e, r29	; 62
    5c1e:	0f be       	out	0x3f, r0	; 63
    5c20:	cd bf       	out	0x3d, r28	; 61
    5c22:	df 91       	pop	r29
    5c24:	cf 91       	pop	r28
    5c26:	1f 91       	pop	r17
    5c28:	0f 91       	pop	r16
    5c2a:	08 95       	ret

00005c2c <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>:
	
	numOfTasks = 0;
}

int Scheduler::addTask(Task *task)
{
    5c2c:	cf 93       	push	r28
    5c2e:	df 93       	push	r29
    5c30:	00 d0       	rcall	.+0      	; 0x5c32 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x6>
    5c32:	1f 92       	push	r1
    5c34:	cd b7       	in	r28, 0x3d	; 61
    5c36:	de b7       	in	r29, 0x3e	; 62
    5c38:	9a 83       	std	Y+2, r25	; 0x02
    5c3a:	89 83       	std	Y+1, r24	; 0x01
    5c3c:	7c 83       	std	Y+4, r23	; 0x04
    5c3e:	6b 83       	std	Y+3, r22	; 0x03
	if (numOfTasks < MAXNUMOFTASKS)
    5c40:	89 81       	ldd	r24, Y+1	; 0x01
    5c42:	9a 81       	ldd	r25, Y+2	; 0x02
    5c44:	fc 01       	movw	r30, r24
    5c46:	84 89       	ldd	r24, Z+20	; 0x14
    5c48:	95 89       	ldd	r25, Z+21	; 0x15
    5c4a:	8a 30       	cpi	r24, 0x0A	; 10
    5c4c:	91 05       	cpc	r25, r1
    5c4e:	04 f5       	brge	.+64     	; 0x5c90 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x64>
	{
		tasks[numOfTasks] = task;
    5c50:	89 81       	ldd	r24, Y+1	; 0x01
    5c52:	9a 81       	ldd	r25, Y+2	; 0x02
    5c54:	fc 01       	movw	r30, r24
    5c56:	84 89       	ldd	r24, Z+20	; 0x14
    5c58:	95 89       	ldd	r25, Z+21	; 0x15
    5c5a:	29 81       	ldd	r18, Y+1	; 0x01
    5c5c:	3a 81       	ldd	r19, Y+2	; 0x02
    5c5e:	88 0f       	add	r24, r24
    5c60:	99 1f       	adc	r25, r25
    5c62:	82 0f       	add	r24, r18
    5c64:	93 1f       	adc	r25, r19
    5c66:	2b 81       	ldd	r18, Y+3	; 0x03
    5c68:	3c 81       	ldd	r19, Y+4	; 0x04
    5c6a:	fc 01       	movw	r30, r24
    5c6c:	31 83       	std	Z+1, r19	; 0x01
    5c6e:	20 83       	st	Z, r18
		numOfTasks++;
    5c70:	89 81       	ldd	r24, Y+1	; 0x01
    5c72:	9a 81       	ldd	r25, Y+2	; 0x02
    5c74:	fc 01       	movw	r30, r24
    5c76:	84 89       	ldd	r24, Z+20	; 0x14
    5c78:	95 89       	ldd	r25, Z+21	; 0x15
    5c7a:	9c 01       	movw	r18, r24
    5c7c:	2f 5f       	subi	r18, 0xFF	; 255
    5c7e:	3f 4f       	sbci	r19, 0xFF	; 255
    5c80:	89 81       	ldd	r24, Y+1	; 0x01
    5c82:	9a 81       	ldd	r25, Y+2	; 0x02
    5c84:	fc 01       	movw	r30, r24
    5c86:	35 8b       	std	Z+21, r19	; 0x15
    5c88:	24 8b       	std	Z+20, r18	; 0x14
		
		return 0;
    5c8a:	80 e0       	ldi	r24, 0x00	; 0
    5c8c:	90 e0       	ldi	r25, 0x00	; 0
    5c8e:	02 c0       	rjmp	.+4      	; 0x5c94 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x68>
	}

	return -1;
    5c90:	8f ef       	ldi	r24, 0xFF	; 255
    5c92:	9f ef       	ldi	r25, 0xFF	; 255
}
    5c94:	0f 90       	pop	r0
    5c96:	0f 90       	pop	r0
    5c98:	0f 90       	pop	r0
    5c9a:	0f 90       	pop	r0
    5c9c:	df 91       	pop	r29
    5c9e:	cf 91       	pop	r28
    5ca0:	08 95       	ret

00005ca2 <_ZN10helicopter9scheduler9Scheduler4initEv>:

void Scheduler::init()
{
    5ca2:	cf 93       	push	r28
    5ca4:	df 93       	push	r29
    5ca6:	00 d0       	rcall	.+0      	; 0x5ca8 <_ZN10helicopter9scheduler9Scheduler4initEv+0x6>
    5ca8:	1f 92       	push	r1
    5caa:	cd b7       	in	r28, 0x3d	; 61
    5cac:	de b7       	in	r29, 0x3e	; 62
    5cae:	9c 83       	std	Y+4, r25	; 0x04
    5cb0:	8b 83       	std	Y+3, r24	; 0x03
	for (int i = 0; i < numOfTasks; i++)
    5cb2:	1a 82       	std	Y+2, r1	; 0x02
    5cb4:	19 82       	std	Y+1, r1	; 0x01
    5cb6:	24 c0       	rjmp	.+72     	; 0x5d00 <_ZN10helicopter9scheduler9Scheduler4initEv+0x5e>
	{
		tasks[i]->init();
    5cb8:	2b 81       	ldd	r18, Y+3	; 0x03
    5cba:	3c 81       	ldd	r19, Y+4	; 0x04
    5cbc:	89 81       	ldd	r24, Y+1	; 0x01
    5cbe:	9a 81       	ldd	r25, Y+2	; 0x02
    5cc0:	88 0f       	add	r24, r24
    5cc2:	99 1f       	adc	r25, r25
    5cc4:	82 0f       	add	r24, r18
    5cc6:	93 1f       	adc	r25, r19
    5cc8:	fc 01       	movw	r30, r24
    5cca:	80 81       	ld	r24, Z
    5ccc:	91 81       	ldd	r25, Z+1	; 0x01
    5cce:	fc 01       	movw	r30, r24
    5cd0:	80 81       	ld	r24, Z
    5cd2:	91 81       	ldd	r25, Z+1	; 0x01
    5cd4:	06 96       	adiw	r24, 0x06	; 6
    5cd6:	fc 01       	movw	r30, r24
    5cd8:	20 81       	ld	r18, Z
    5cda:	31 81       	ldd	r19, Z+1	; 0x01
    5cdc:	4b 81       	ldd	r20, Y+3	; 0x03
    5cde:	5c 81       	ldd	r21, Y+4	; 0x04
    5ce0:	89 81       	ldd	r24, Y+1	; 0x01
    5ce2:	9a 81       	ldd	r25, Y+2	; 0x02
    5ce4:	88 0f       	add	r24, r24
    5ce6:	99 1f       	adc	r25, r25
    5ce8:	84 0f       	add	r24, r20
    5cea:	95 1f       	adc	r25, r21
    5cec:	fc 01       	movw	r30, r24
    5cee:	80 81       	ld	r24, Z
    5cf0:	91 81       	ldd	r25, Z+1	; 0x01
    5cf2:	f9 01       	movw	r30, r18
    5cf4:	19 95       	eicall
	return -1;
}

void Scheduler::init()
{
	for (int i = 0; i < numOfTasks; i++)
    5cf6:	89 81       	ldd	r24, Y+1	; 0x01
    5cf8:	9a 81       	ldd	r25, Y+2	; 0x02
    5cfa:	01 96       	adiw	r24, 0x01	; 1
    5cfc:	9a 83       	std	Y+2, r25	; 0x02
    5cfe:	89 83       	std	Y+1, r24	; 0x01
    5d00:	8b 81       	ldd	r24, Y+3	; 0x03
    5d02:	9c 81       	ldd	r25, Y+4	; 0x04
    5d04:	fc 01       	movw	r30, r24
    5d06:	24 89       	ldd	r18, Z+20	; 0x14
    5d08:	35 89       	ldd	r19, Z+21	; 0x15
    5d0a:	41 e0       	ldi	r20, 0x01	; 1
    5d0c:	89 81       	ldd	r24, Y+1	; 0x01
    5d0e:	9a 81       	ldd	r25, Y+2	; 0x02
    5d10:	82 17       	cp	r24, r18
    5d12:	93 07       	cpc	r25, r19
    5d14:	0c f0       	brlt	.+2      	; 0x5d18 <_ZN10helicopter9scheduler9Scheduler4initEv+0x76>
    5d16:	40 e0       	ldi	r20, 0x00	; 0
    5d18:	44 23       	and	r20, r20
    5d1a:	71 f6       	brne	.-100    	; 0x5cb8 <_ZN10helicopter9scheduler9Scheduler4initEv+0x16>
	{
		tasks[i]->init();
	}
	
	//setup timer
	OCR1A = targetTimerCount; //Set Clear Timer on Compare (auto reset) (CTC)
    5d1c:	88 e8       	ldi	r24, 0x88	; 136
    5d1e:	90 e0       	ldi	r25, 0x00	; 0
    5d20:	2b 81       	ldd	r18, Y+3	; 0x03
    5d22:	3c 81       	ldd	r19, Y+4	; 0x04
    5d24:	f9 01       	movw	r30, r18
    5d26:	26 89       	ldd	r18, Z+22	; 0x16
    5d28:	37 89       	ldd	r19, Z+23	; 0x17
    5d2a:	fc 01       	movw	r30, r24
    5d2c:	31 83       	std	Z+1, r19	; 0x01
    5d2e:	20 83       	st	Z, r18
		
	TCCR1B |= (1 << WGM12); //Configure timer 1 for ctc mode
    5d30:	81 e8       	ldi	r24, 0x81	; 129
    5d32:	90 e0       	ldi	r25, 0x00	; 0
    5d34:	21 e8       	ldi	r18, 0x81	; 129
    5d36:	30 e0       	ldi	r19, 0x00	; 0
    5d38:	f9 01       	movw	r30, r18
    5d3a:	20 81       	ld	r18, Z
    5d3c:	28 60       	ori	r18, 0x08	; 8
    5d3e:	fc 01       	movw	r30, r24
    5d40:	20 83       	st	Z, r18
		
	TIMSK1 |= (1 << OCIE1A); //enable ctc interrupt
    5d42:	8f e6       	ldi	r24, 0x6F	; 111
    5d44:	90 e0       	ldi	r25, 0x00	; 0
    5d46:	2f e6       	ldi	r18, 0x6F	; 111
    5d48:	30 e0       	ldi	r19, 0x00	; 0
    5d4a:	f9 01       	movw	r30, r18
    5d4c:	20 81       	ld	r18, Z
    5d4e:	22 60       	ori	r18, 0x02	; 2
    5d50:	fc 01       	movw	r30, r24
    5d52:	20 83       	st	Z, r18
		
	sei(); //Enable global interrupts
    5d54:	78 94       	sei
}
    5d56:	0f 90       	pop	r0
    5d58:	0f 90       	pop	r0
    5d5a:	0f 90       	pop	r0
    5d5c:	0f 90       	pop	r0
    5d5e:	df 91       	pop	r29
    5d60:	cf 91       	pop	r28
    5d62:	08 95       	ret

00005d64 <_ZN10helicopter9scheduler9Scheduler8dispatchEv>:

void Scheduler::dispatch()
{
    5d64:	cf 93       	push	r28
    5d66:	df 93       	push	r29
    5d68:	00 d0       	rcall	.+0      	; 0x5d6a <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x6>
    5d6a:	00 d0       	rcall	.+0      	; 0x5d6c <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x8>
    5d6c:	cd b7       	in	r28, 0x3d	; 61
    5d6e:	de b7       	in	r29, 0x3e	; 62
    5d70:	9e 83       	std	Y+6, r25	; 0x06
    5d72:	8d 83       	std	Y+5, r24	; 0x05
	completedDispatch = false;
    5d74:	8d 81       	ldd	r24, Y+5	; 0x05
    5d76:	9e 81       	ldd	r25, Y+6	; 0x06
    5d78:	fc 01       	movw	r30, r24
    5d7a:	13 8e       	std	Z+27, r1	; 0x1b
	blowFrameDetected = false;
    5d7c:	8d 81       	ldd	r24, Y+5	; 0x05
    5d7e:	9e 81       	ldd	r25, Y+6	; 0x06
    5d80:	fc 01       	movw	r30, r24
    5d82:	12 8e       	std	Z+26, r1	; 0x1a
	
	Task *task = NULL;
    5d84:	1c 82       	std	Y+4, r1	; 0x04
    5d86:	1b 82       	std	Y+3, r1	; 0x03
		
	for (int i = 0; i < numOfTasks; i++)
    5d88:	1a 82       	std	Y+2, r1	; 0x02
    5d8a:	19 82       	std	Y+1, r1	; 0x01
    5d8c:	2a c0       	rjmp	.+84     	; 0x5de2 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x7e>
	{
		task = tasks[i];
    5d8e:	2d 81       	ldd	r18, Y+5	; 0x05
    5d90:	3e 81       	ldd	r19, Y+6	; 0x06
    5d92:	89 81       	ldd	r24, Y+1	; 0x01
    5d94:	9a 81       	ldd	r25, Y+2	; 0x02
    5d96:	88 0f       	add	r24, r24
    5d98:	99 1f       	adc	r25, r25
    5d9a:	82 0f       	add	r24, r18
    5d9c:	93 1f       	adc	r25, r19
    5d9e:	fc 01       	movw	r30, r24
    5da0:	80 81       	ld	r24, Z
    5da2:	91 81       	ldd	r25, Z+1	; 0x01
    5da4:	9c 83       	std	Y+4, r25	; 0x04
    5da6:	8b 83       	std	Y+3, r24	; 0x03
		
		if (task->getIsReadyToRun())
    5da8:	8b 81       	ldd	r24, Y+3	; 0x03
    5daa:	9c 81       	ldd	r25, Y+4	; 0x04
    5dac:	0e 94 03 2d 	call	0x5a06	; 0x5a06 <_ZN10helicopter5tasks4Task15getIsReadyToRunEv>
    5db0:	88 23       	and	r24, r24
    5db2:	91 f0       	breq	.+36     	; 0x5dd8 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x74>
		{
			task->setIsReadyToRun(false);
    5db4:	8b 81       	ldd	r24, Y+3	; 0x03
    5db6:	9c 81       	ldd	r25, Y+4	; 0x04
    5db8:	60 e0       	ldi	r22, 0x00	; 0
    5dba:	0e 94 14 2d 	call	0x5a28	; 0x5a28 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>
			task->runTask();
    5dbe:	8b 81       	ldd	r24, Y+3	; 0x03
    5dc0:	9c 81       	ldd	r25, Y+4	; 0x04
    5dc2:	fc 01       	movw	r30, r24
    5dc4:	80 81       	ld	r24, Z
    5dc6:	91 81       	ldd	r25, Z+1	; 0x01
    5dc8:	08 96       	adiw	r24, 0x08	; 8
    5dca:	fc 01       	movw	r30, r24
    5dcc:	20 81       	ld	r18, Z
    5dce:	31 81       	ldd	r19, Z+1	; 0x01
    5dd0:	8b 81       	ldd	r24, Y+3	; 0x03
    5dd2:	9c 81       	ldd	r25, Y+4	; 0x04
    5dd4:	f9 01       	movw	r30, r18
    5dd6:	19 95       	eicall
	completedDispatch = false;
	blowFrameDetected = false;
	
	Task *task = NULL;
		
	for (int i = 0; i < numOfTasks; i++)
    5dd8:	89 81       	ldd	r24, Y+1	; 0x01
    5dda:	9a 81       	ldd	r25, Y+2	; 0x02
    5ddc:	01 96       	adiw	r24, 0x01	; 1
    5dde:	9a 83       	std	Y+2, r25	; 0x02
    5de0:	89 83       	std	Y+1, r24	; 0x01
    5de2:	8d 81       	ldd	r24, Y+5	; 0x05
    5de4:	9e 81       	ldd	r25, Y+6	; 0x06
    5de6:	fc 01       	movw	r30, r24
    5de8:	24 89       	ldd	r18, Z+20	; 0x14
    5dea:	35 89       	ldd	r19, Z+21	; 0x15
    5dec:	41 e0       	ldi	r20, 0x01	; 1
    5dee:	89 81       	ldd	r24, Y+1	; 0x01
    5df0:	9a 81       	ldd	r25, Y+2	; 0x02
    5df2:	82 17       	cp	r24, r18
    5df4:	93 07       	cpc	r25, r19
    5df6:	0c f0       	brlt	.+2      	; 0x5dfa <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x96>
    5df8:	40 e0       	ldi	r20, 0x00	; 0
    5dfa:	44 23       	and	r20, r20
    5dfc:	41 f6       	brne	.-112    	; 0x5d8e <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x2a>
	/*if ((TIFR1 & (1<<OCF1A)) != 0)
	{
		model->SystemModel->
	}*/
	
	completedDispatch = true;
    5dfe:	8d 81       	ldd	r24, Y+5	; 0x05
    5e00:	9e 81       	ldd	r25, Y+6	; 0x06
    5e02:	21 e0       	ldi	r18, 0x01	; 1
    5e04:	fc 01       	movw	r30, r24
    5e06:	23 8f       	std	Z+27, r18	; 0x1b
	
	//tells the processor to goto sleep to conserve power since no more
	//tasks are scheduled to be run until after the next scheduler interrupt(tick)
	//which will then wake the processor back up.
	set_sleep_mode(SLEEP_MODE_IDLE);
    5e08:	83 e5       	ldi	r24, 0x53	; 83
    5e0a:	90 e0       	ldi	r25, 0x00	; 0
    5e0c:	23 e5       	ldi	r18, 0x53	; 83
    5e0e:	30 e0       	ldi	r19, 0x00	; 0
    5e10:	f9 01       	movw	r30, r18
    5e12:	20 81       	ld	r18, Z
    5e14:	21 7f       	andi	r18, 0xF1	; 241
    5e16:	fc 01       	movw	r30, r24
    5e18:	20 83       	st	Z, r18
	sleep_mode();
    5e1a:	83 e5       	ldi	r24, 0x53	; 83
    5e1c:	90 e0       	ldi	r25, 0x00	; 0
    5e1e:	23 e5       	ldi	r18, 0x53	; 83
    5e20:	30 e0       	ldi	r19, 0x00	; 0
    5e22:	f9 01       	movw	r30, r18
    5e24:	20 81       	ld	r18, Z
    5e26:	21 60       	ori	r18, 0x01	; 1
    5e28:	fc 01       	movw	r30, r24
    5e2a:	20 83       	st	Z, r18
    5e2c:	88 95       	sleep
    5e2e:	83 e5       	ldi	r24, 0x53	; 83
    5e30:	90 e0       	ldi	r25, 0x00	; 0
    5e32:	23 e5       	ldi	r18, 0x53	; 83
    5e34:	30 e0       	ldi	r19, 0x00	; 0
    5e36:	f9 01       	movw	r30, r18
    5e38:	20 81       	ld	r18, Z
    5e3a:	2e 7f       	andi	r18, 0xFE	; 254
    5e3c:	fc 01       	movw	r30, r24
    5e3e:	20 83       	st	Z, r18
}
    5e40:	26 96       	adiw	r28, 0x06	; 6
    5e42:	0f b6       	in	r0, 0x3f	; 63
    5e44:	f8 94       	cli
    5e46:	de bf       	out	0x3e, r29	; 62
    5e48:	0f be       	out	0x3f, r0	; 63
    5e4a:	cd bf       	out	0x3d, r28	; 61
    5e4c:	df 91       	pop	r29
    5e4e:	cf 91       	pop	r28
    5e50:	08 95       	ret

00005e52 <_ZN10helicopter9scheduler9Scheduler5startEv>:

void Scheduler::start()
{
    5e52:	cf 93       	push	r28
    5e54:	df 93       	push	r29
    5e56:	1f 92       	push	r1
    5e58:	1f 92       	push	r1
    5e5a:	cd b7       	in	r28, 0x3d	; 61
    5e5c:	de b7       	in	r29, 0x3e	; 62
    5e5e:	9a 83       	std	Y+2, r25	; 0x02
    5e60:	89 83       	std	Y+1, r24	; 0x01
	//Setting TCCR to a prescaler will start the timer.
	switch(this->prescaler)
    5e62:	89 81       	ldd	r24, Y+1	; 0x01
    5e64:	9a 81       	ldd	r25, Y+2	; 0x02
    5e66:	fc 01       	movw	r30, r24
    5e68:	80 8d       	ldd	r24, Z+24	; 0x18
    5e6a:	91 8d       	ldd	r25, Z+25	; 0x19
    5e6c:	80 34       	cpi	r24, 0x40	; 64
    5e6e:	91 05       	cpc	r25, r1
    5e70:	39 f1       	breq	.+78     	; 0x5ec0 <_ZN10helicopter9scheduler9Scheduler5startEv+0x6e>
    5e72:	81 34       	cpi	r24, 0x41	; 65
    5e74:	91 05       	cpc	r25, r1
    5e76:	3c f4       	brge	.+14     	; 0x5e86 <_ZN10helicopter9scheduler9Scheduler5startEv+0x34>
    5e78:	81 30       	cpi	r24, 0x01	; 1
    5e7a:	91 05       	cpc	r25, r1
    5e7c:	69 f0       	breq	.+26     	; 0x5e98 <_ZN10helicopter9scheduler9Scheduler5startEv+0x46>
    5e7e:	88 30       	cpi	r24, 0x08	; 8
    5e80:	91 05       	cpc	r25, r1
    5e82:	a1 f0       	breq	.+40     	; 0x5eac <_ZN10helicopter9scheduler9Scheduler5startEv+0x5a>
    5e84:	3b c0       	rjmp	.+118    	; 0x5efc <_ZN10helicopter9scheduler9Scheduler5startEv+0xaa>
    5e86:	81 15       	cp	r24, r1
    5e88:	f1 e0       	ldi	r31, 0x01	; 1
    5e8a:	9f 07       	cpc	r25, r31
    5e8c:	19 f1       	breq	.+70     	; 0x5ed4 <_ZN10helicopter9scheduler9Scheduler5startEv+0x82>
    5e8e:	81 15       	cp	r24, r1
    5e90:	24 e0       	ldi	r18, 0x04	; 4
    5e92:	92 07       	cpc	r25, r18
    5e94:	49 f1       	breq	.+82     	; 0x5ee8 <_ZN10helicopter9scheduler9Scheduler5startEv+0x96>
    5e96:	32 c0       	rjmp	.+100    	; 0x5efc <_ZN10helicopter9scheduler9Scheduler5startEv+0xaa>
	{
		case 1:
			TCCR1B |= NoPrescaling;
    5e98:	81 e8       	ldi	r24, 0x81	; 129
    5e9a:	90 e0       	ldi	r25, 0x00	; 0
    5e9c:	21 e8       	ldi	r18, 0x81	; 129
    5e9e:	30 e0       	ldi	r19, 0x00	; 0
    5ea0:	f9 01       	movw	r30, r18
    5ea2:	20 81       	ld	r18, Z
    5ea4:	21 60       	ori	r18, 0x01	; 1
    5ea6:	fc 01       	movw	r30, r24
    5ea8:	20 83       	st	Z, r18
			break;
    5eaa:	31 c0       	rjmp	.+98     	; 0x5f0e <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 8:
			TCCR1B |= PrescaleByEight;
    5eac:	81 e8       	ldi	r24, 0x81	; 129
    5eae:	90 e0       	ldi	r25, 0x00	; 0
    5eb0:	21 e8       	ldi	r18, 0x81	; 129
    5eb2:	30 e0       	ldi	r19, 0x00	; 0
    5eb4:	f9 01       	movw	r30, r18
    5eb6:	20 81       	ld	r18, Z
    5eb8:	22 60       	ori	r18, 0x02	; 2
    5eba:	fc 01       	movw	r30, r24
    5ebc:	20 83       	st	Z, r18
			break;
    5ebe:	27 c0       	rjmp	.+78     	; 0x5f0e <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 64:
			TCCR1B |= PrescaleBySixtyFour;
    5ec0:	81 e8       	ldi	r24, 0x81	; 129
    5ec2:	90 e0       	ldi	r25, 0x00	; 0
    5ec4:	21 e8       	ldi	r18, 0x81	; 129
    5ec6:	30 e0       	ldi	r19, 0x00	; 0
    5ec8:	f9 01       	movw	r30, r18
    5eca:	20 81       	ld	r18, Z
    5ecc:	23 60       	ori	r18, 0x03	; 3
    5ece:	fc 01       	movw	r30, r24
    5ed0:	20 83       	st	Z, r18
			break;
    5ed2:	1d c0       	rjmp	.+58     	; 0x5f0e <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 256:
			TCCR1B |= PrescaleByTwofiftysix;
    5ed4:	81 e8       	ldi	r24, 0x81	; 129
    5ed6:	90 e0       	ldi	r25, 0x00	; 0
    5ed8:	21 e8       	ldi	r18, 0x81	; 129
    5eda:	30 e0       	ldi	r19, 0x00	; 0
    5edc:	f9 01       	movw	r30, r18
    5ede:	20 81       	ld	r18, Z
    5ee0:	24 60       	ori	r18, 0x04	; 4
    5ee2:	fc 01       	movw	r30, r24
    5ee4:	20 83       	st	Z, r18
			break;
    5ee6:	13 c0       	rjmp	.+38     	; 0x5f0e <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 1024:
			TCCR1B |= PrescaleByTentwentyfour;
    5ee8:	81 e8       	ldi	r24, 0x81	; 129
    5eea:	90 e0       	ldi	r25, 0x00	; 0
    5eec:	21 e8       	ldi	r18, 0x81	; 129
    5eee:	30 e0       	ldi	r19, 0x00	; 0
    5ef0:	f9 01       	movw	r30, r18
    5ef2:	20 81       	ld	r18, Z
    5ef4:	25 60       	ori	r18, 0x05	; 5
    5ef6:	fc 01       	movw	r30, r24
    5ef8:	20 83       	st	Z, r18
			break;
    5efa:	09 c0       	rjmp	.+18     	; 0x5f0e <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		default:
			TCCR1B |= NoPrescaling;	
    5efc:	81 e8       	ldi	r24, 0x81	; 129
    5efe:	90 e0       	ldi	r25, 0x00	; 0
    5f00:	21 e8       	ldi	r18, 0x81	; 129
    5f02:	30 e0       	ldi	r19, 0x00	; 0
    5f04:	f9 01       	movw	r30, r18
    5f06:	20 81       	ld	r18, Z
    5f08:	21 60       	ori	r18, 0x01	; 1
    5f0a:	fc 01       	movw	r30, r24
    5f0c:	20 83       	st	Z, r18
	}
}
    5f0e:	0f 90       	pop	r0
    5f10:	0f 90       	pop	r0
    5f12:	df 91       	pop	r29
    5f14:	cf 91       	pop	r28
    5f16:	08 95       	ret

00005f18 <__vector_17>:

/**
 * Interrupt service routine for determining when tasks are ready to execute.
 */
ISR(TIMER1_COMPA_vect)
{
    5f18:	1f 92       	push	r1
    5f1a:	0f 92       	push	r0
    5f1c:	00 90 5f 00 	lds	r0, 0x005F
    5f20:	0f 92       	push	r0
    5f22:	11 24       	eor	r1, r1
    5f24:	00 90 5b 00 	lds	r0, 0x005B
    5f28:	0f 92       	push	r0
    5f2a:	2f 93       	push	r18
    5f2c:	3f 93       	push	r19
    5f2e:	4f 93       	push	r20
    5f30:	5f 93       	push	r21
    5f32:	6f 93       	push	r22
    5f34:	7f 93       	push	r23
    5f36:	8f 93       	push	r24
    5f38:	9f 93       	push	r25
    5f3a:	af 93       	push	r26
    5f3c:	bf 93       	push	r27
    5f3e:	ef 93       	push	r30
    5f40:	ff 93       	push	r31
    5f42:	cf 93       	push	r28
    5f44:	df 93       	push	r29
    5f46:	00 d0       	rcall	.+0      	; 0x5f48 <__vector_17+0x30>
    5f48:	00 d0       	rcall	.+0      	; 0x5f4a <__vector_17+0x32>
    5f4a:	cd b7       	in	r28, 0x3d	; 61
    5f4c:	de b7       	in	r29, 0x3e	; 62
	//TODO do we want to stop interrupts in this method?
	Scheduler *scheduler = Scheduler::getScheduler();
    5f4e:	0e 94 86 2d 	call	0x5b0c	; 0x5b0c <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>
    5f52:	9c 83       	std	Y+4, r25	; 0x04
    5f54:	8b 83       	std	Y+3, r24	; 0x03
	
	//Detect if the scheduler blew a frame
	if (!scheduler->hasCompletedDispatch())
    5f56:	8b 81       	ldd	r24, Y+3	; 0x03
    5f58:	9c 81       	ldd	r25, Y+4	; 0x04
    5f5a:	0e 94 75 2d 	call	0x5aea	; 0x5aea <_ZN10helicopter9scheduler9Scheduler20hasCompletedDispatchEv>
    5f5e:	98 2f       	mov	r25, r24
    5f60:	81 e0       	ldi	r24, 0x01	; 1
    5f62:	89 27       	eor	r24, r25
    5f64:	88 23       	and	r24, r24
    5f66:	29 f0       	breq	.+10     	; 0x5f72 <__vector_17+0x5a>
	{
		scheduler->hasBlownFrame(true);
    5f68:	8b 81       	ldd	r24, Y+3	; 0x03
    5f6a:	9c 81       	ldd	r25, Y+4	; 0x04
    5f6c:	61 e0       	ldi	r22, 0x01	; 1
    5f6e:	0e 94 62 2d 	call	0x5ac4	; 0x5ac4 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb>
	}
	
	Task *task = NULL;
    5f72:	1e 82       	std	Y+6, r1	; 0x06
    5f74:	1d 82       	std	Y+5, r1	; 0x05
	
	//iterate through all the tasks and decrement how many
	//'ticks' are left before the task is ready to execute.
	for (int i = 0; i < scheduler->getNumOfTasks(); i++)
    5f76:	1a 82       	std	Y+2, r1	; 0x02
    5f78:	19 82       	std	Y+1, r1	; 0x01
    5f7a:	33 c0       	rjmp	.+102    	; 0x5fe2 <__vector_17+0xca>
	{
		task = scheduler->getTasks()[i];
    5f7c:	8b 81       	ldd	r24, Y+3	; 0x03
    5f7e:	9c 81       	ldd	r25, Y+4	; 0x04
    5f80:	0e 94 53 2d 	call	0x5aa6	; 0x5aa6 <_ZN10helicopter9scheduler9Scheduler8getTasksEv>
    5f84:	9c 01       	movw	r18, r24
    5f86:	89 81       	ldd	r24, Y+1	; 0x01
    5f88:	9a 81       	ldd	r25, Y+2	; 0x02
    5f8a:	88 0f       	add	r24, r24
    5f8c:	99 1f       	adc	r25, r25
    5f8e:	82 0f       	add	r24, r18
    5f90:	93 1f       	adc	r25, r19
    5f92:	fc 01       	movw	r30, r24
    5f94:	80 81       	ld	r24, Z
    5f96:	91 81       	ldd	r25, Z+1	; 0x01
    5f98:	9e 83       	std	Y+6, r25	; 0x06
    5f9a:	8d 83       	std	Y+5, r24	; 0x05
		
		if (task->getDelay() == 0)
    5f9c:	8d 81       	ldd	r24, Y+5	; 0x05
    5f9e:	9e 81       	ldd	r25, Y+6	; 0x06
    5fa0:	0e 94 c7 2c 	call	0x598e	; 0x598e <_ZN10helicopter5tasks4Task8getDelayEv>
    5fa4:	21 e0       	ldi	r18, 0x01	; 1
    5fa6:	00 97       	sbiw	r24, 0x00	; 0
    5fa8:	09 f0       	breq	.+2      	; 0x5fac <__vector_17+0x94>
    5faa:	20 e0       	ldi	r18, 0x00	; 0
    5fac:	22 23       	and	r18, r18
    5fae:	81 f0       	breq	.+32     	; 0x5fd0 <__vector_17+0xb8>
		{
			//Mark the task as ready to run
			task->setIsReadyToRun(true);
    5fb0:	8d 81       	ldd	r24, Y+5	; 0x05
    5fb2:	9e 81       	ldd	r25, Y+6	; 0x06
    5fb4:	61 e0       	ldi	r22, 0x01	; 1
    5fb6:	0e 94 14 2d 	call	0x5a28	; 0x5a28 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>
			task->setDelay(task->getPeriod());
    5fba:	8d 81       	ldd	r24, Y+5	; 0x05
    5fbc:	9e 81       	ldd	r25, Y+6	; 0x06
    5fbe:	0e 94 d9 2c 	call	0x59b2	; 0x59b2 <_ZN10helicopter5tasks4Task9getPeriodEv>
    5fc2:	9c 01       	movw	r18, r24
    5fc4:	8d 81       	ldd	r24, Y+5	; 0x05
    5fc6:	9e 81       	ldd	r25, Y+6	; 0x06
    5fc8:	b9 01       	movw	r22, r18
    5fca:	0e 94 eb 2c 	call	0x59d6	; 0x59d6 <_ZN10helicopter5tasks4Task8setDelayEi>
    5fce:	04 c0       	rjmp	.+8      	; 0x5fd8 <__vector_17+0xc0>
		}else
		{
			task->reduceDelay();
    5fd0:	8d 81       	ldd	r24, Y+5	; 0x05
    5fd2:	9e 81       	ldd	r25, Y+6	; 0x06
    5fd4:	0e 94 27 2d 	call	0x5a4e	; 0x5a4e <_ZN10helicopter5tasks4Task11reduceDelayEv>
	
	Task *task = NULL;
	
	//iterate through all the tasks and decrement how many
	//'ticks' are left before the task is ready to execute.
	for (int i = 0; i < scheduler->getNumOfTasks(); i++)
    5fd8:	89 81       	ldd	r24, Y+1	; 0x01
    5fda:	9a 81       	ldd	r25, Y+2	; 0x02
    5fdc:	01 96       	adiw	r24, 0x01	; 1
    5fde:	9a 83       	std	Y+2, r25	; 0x02
    5fe0:	89 83       	std	Y+1, r24	; 0x01
    5fe2:	8b 81       	ldd	r24, Y+3	; 0x03
    5fe4:	9c 81       	ldd	r25, Y+4	; 0x04
    5fe6:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <_ZN10helicopter9scheduler9Scheduler13getNumOfTasksEv>
    5fea:	9c 01       	movw	r18, r24
    5fec:	41 e0       	ldi	r20, 0x01	; 1
    5fee:	89 81       	ldd	r24, Y+1	; 0x01
    5ff0:	9a 81       	ldd	r25, Y+2	; 0x02
    5ff2:	82 17       	cp	r24, r18
    5ff4:	93 07       	cpc	r25, r19
    5ff6:	0c f0       	brlt	.+2      	; 0x5ffa <__vector_17+0xe2>
    5ff8:	40 e0       	ldi	r20, 0x00	; 0
    5ffa:	44 23       	and	r20, r20
    5ffc:	09 f0       	breq	.+2      	; 0x6000 <__vector_17+0xe8>
    5ffe:	be cf       	rjmp	.-132    	; 0x5f7c <__vector_17+0x64>
		}else
		{
			task->reduceDelay();
		}
	}
}
    6000:	26 96       	adiw	r28, 0x06	; 6
    6002:	0f b6       	in	r0, 0x3f	; 63
    6004:	f8 94       	cli
    6006:	de bf       	out	0x3e, r29	; 62
    6008:	0f be       	out	0x3f, r0	; 63
    600a:	cd bf       	out	0x3d, r28	; 61
    600c:	df 91       	pop	r29
    600e:	cf 91       	pop	r28
    6010:	ff 91       	pop	r31
    6012:	ef 91       	pop	r30
    6014:	bf 91       	pop	r27
    6016:	af 91       	pop	r26
    6018:	9f 91       	pop	r25
    601a:	8f 91       	pop	r24
    601c:	7f 91       	pop	r23
    601e:	6f 91       	pop	r22
    6020:	5f 91       	pop	r21
    6022:	4f 91       	pop	r20
    6024:	3f 91       	pop	r19
    6026:	2f 91       	pop	r18
    6028:	0f 90       	pop	r0
    602a:	00 92 5b 00 	sts	0x005B, r0
    602e:	0f 90       	pop	r0
    6030:	00 92 5f 00 	sts	0x005F, r0
    6034:	0f 90       	pop	r0
    6036:	1f 90       	pop	r1
    6038:	18 95       	reti

0000603a <_ZN10helicopter5tasks4Task4initEv>:
				virtual ~Task(){}
				
				/**
				 * Function to initialize the task before execution.
				 */
				virtual void init(){;}
    603a:	cf 93       	push	r28
    603c:	df 93       	push	r29
    603e:	1f 92       	push	r1
    6040:	1f 92       	push	r1
    6042:	cd b7       	in	r28, 0x3d	; 61
    6044:	de b7       	in	r29, 0x3e	; 62
    6046:	9a 83       	std	Y+2, r25	; 0x02
    6048:	89 83       	std	Y+1, r24	; 0x01
    604a:	0f 90       	pop	r0
    604c:	0f 90       	pop	r0
    604e:	df 91       	pop	r29
    6050:	cf 91       	pop	r28
    6052:	08 95       	ret

00006054 <_ZN10helicopter5tasks16PIDInnerLoopTaskC1EPNS_10controller13PIDControllerEii>:
 */ 
#include "PIDInnerLoopTask.h"

using namespace helicopter::tasks;

PIDInnerLoopTask::PIDInnerLoopTask (PIDController *pidController, int delay, int period) :
    6054:	cf 93       	push	r28
    6056:	df 93       	push	r29
    6058:	cd b7       	in	r28, 0x3d	; 61
    605a:	de b7       	in	r29, 0x3e	; 62
    605c:	28 97       	sbiw	r28, 0x08	; 8
    605e:	0f b6       	in	r0, 0x3f	; 63
    6060:	f8 94       	cli
    6062:	de bf       	out	0x3e, r29	; 62
    6064:	0f be       	out	0x3f, r0	; 63
    6066:	cd bf       	out	0x3d, r28	; 61
    6068:	9a 83       	std	Y+2, r25	; 0x02
    606a:	89 83       	std	Y+1, r24	; 0x01
    606c:	7c 83       	std	Y+4, r23	; 0x04
    606e:	6b 83       	std	Y+3, r22	; 0x03
    6070:	5e 83       	std	Y+6, r21	; 0x06
    6072:	4d 83       	std	Y+5, r20	; 0x05
    6074:	38 87       	std	Y+8, r19	; 0x08
    6076:	2f 83       	std	Y+7, r18	; 0x07
Task(delay, period),
pidController(pidController)
    6078:	89 81       	ldd	r24, Y+1	; 0x01
    607a:	9a 81       	ldd	r25, Y+2	; 0x02
    607c:	4f 81       	ldd	r20, Y+7	; 0x07
    607e:	58 85       	ldd	r21, Y+8	; 0x08
    6080:	2d 81       	ldd	r18, Y+5	; 0x05
    6082:	3e 81       	ldd	r19, Y+6	; 0x06
    6084:	b9 01       	movw	r22, r18
    6086:	0e 94 21 37 	call	0x6e42	; 0x6e42 <_ZN10helicopter5tasks4TaskC1Eii>
    608a:	89 81       	ldd	r24, Y+1	; 0x01
    608c:	9a 81       	ldd	r25, Y+2	; 0x02
    608e:	24 e5       	ldi	r18, 0x54	; 84
    6090:	32 e0       	ldi	r19, 0x02	; 2
    6092:	fc 01       	movw	r30, r24
    6094:	31 83       	std	Z+1, r19	; 0x01
    6096:	20 83       	st	Z, r18
    6098:	89 81       	ldd	r24, Y+1	; 0x01
    609a:	9a 81       	ldd	r25, Y+2	; 0x02
    609c:	2b 81       	ldd	r18, Y+3	; 0x03
    609e:	3c 81       	ldd	r19, Y+4	; 0x04
    60a0:	fc 01       	movw	r30, r24
    60a2:	30 87       	std	Z+8, r19	; 0x08
    60a4:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    60a6:	28 96       	adiw	r28, 0x08	; 8
    60a8:	0f b6       	in	r0, 0x3f	; 63
    60aa:	f8 94       	cli
    60ac:	de bf       	out	0x3e, r29	; 62
    60ae:	0f be       	out	0x3f, r0	; 63
    60b0:	cd bf       	out	0x3d, r28	; 61
    60b2:	df 91       	pop	r29
    60b4:	cf 91       	pop	r28
    60b6:	08 95       	ret

000060b8 <_ZN10helicopter5tasks16PIDInnerLoopTask11runTaskImplEv>:

void PIDInnerLoopTask::runTaskImpl()
{
    60b8:	cf 93       	push	r28
    60ba:	df 93       	push	r29
    60bc:	1f 92       	push	r1
    60be:	1f 92       	push	r1
    60c0:	cd b7       	in	r28, 0x3d	; 61
    60c2:	de b7       	in	r29, 0x3e	; 62
    60c4:	9a 83       	std	Y+2, r25	; 0x02
    60c6:	89 83       	std	Y+1, r24	; 0x01
	//pidController->cyclicLateralInnerLoopUpdate();
	pidController->cyclicLongitudeInnerLoopUpdate();
    60c8:	89 81       	ldd	r24, Y+1	; 0x01
    60ca:	9a 81       	ldd	r25, Y+2	; 0x02
    60cc:	fc 01       	movw	r30, r24
    60ce:	87 81       	ldd	r24, Z+7	; 0x07
    60d0:	90 85       	ldd	r25, Z+8	; 0x08
    60d2:	0e 94 bd 0a 	call	0x157a	; 0x157a <_ZN10helicopter10controller13PIDController30cyclicLongitudeInnerLoopUpdateEv>
}
    60d6:	0f 90       	pop	r0
    60d8:	0f 90       	pop	r0
    60da:	df 91       	pop	r29
    60dc:	cf 91       	pop	r28
    60de:	08 95       	ret

000060e0 <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class executes the outer loop of the PID controller
		 */
		class PIDInnerLoopTask : public Task
    60e0:	cf 93       	push	r28
    60e2:	df 93       	push	r29
    60e4:	1f 92       	push	r1
    60e6:	1f 92       	push	r1
    60e8:	cd b7       	in	r28, 0x3d	; 61
    60ea:	de b7       	in	r29, 0x3e	; 62
    60ec:	9a 83       	std	Y+2, r25	; 0x02
    60ee:	89 83       	std	Y+1, r24	; 0x01
    60f0:	89 81       	ldd	r24, Y+1	; 0x01
    60f2:	9a 81       	ldd	r25, Y+2	; 0x02
    60f4:	24 e5       	ldi	r18, 0x54	; 84
    60f6:	32 e0       	ldi	r19, 0x02	; 2
    60f8:	fc 01       	movw	r30, r24
    60fa:	31 83       	std	Z+1, r19	; 0x01
    60fc:	20 83       	st	Z, r18
    60fe:	89 81       	ldd	r24, Y+1	; 0x01
    6100:	9a 81       	ldd	r25, Y+2	; 0x02
    6102:	0e 94 4c 11 	call	0x2298	; 0x2298 <_ZN10helicopter5tasks4TaskD1Ev>
    6106:	80 e0       	ldi	r24, 0x00	; 0
    6108:	90 e0       	ldi	r25, 0x00	; 0
    610a:	81 70       	andi	r24, 0x01	; 1
    610c:	99 27       	eor	r25, r25
    610e:	00 97       	sbiw	r24, 0x00	; 0
    6110:	21 f0       	breq	.+8      	; 0x611a <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev+0x3a>
    6112:	89 81       	ldd	r24, Y+1	; 0x01
    6114:	9a 81       	ldd	r25, Y+2	; 0x02
    6116:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    611a:	0f 90       	pop	r0
    611c:	0f 90       	pop	r0
    611e:	df 91       	pop	r29
    6120:	cf 91       	pop	r28
    6122:	08 95       	ret

00006124 <_ZN10helicopter5tasks16PIDInnerLoopTaskD0Ev>:
    6124:	cf 93       	push	r28
    6126:	df 93       	push	r29
    6128:	1f 92       	push	r1
    612a:	1f 92       	push	r1
    612c:	cd b7       	in	r28, 0x3d	; 61
    612e:	de b7       	in	r29, 0x3e	; 62
    6130:	9a 83       	std	Y+2, r25	; 0x02
    6132:	89 83       	std	Y+1, r24	; 0x01
    6134:	89 81       	ldd	r24, Y+1	; 0x01
    6136:	9a 81       	ldd	r25, Y+2	; 0x02
    6138:	0e 94 70 30 	call	0x60e0	; 0x60e0 <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>
    613c:	89 81       	ldd	r24, Y+1	; 0x01
    613e:	9a 81       	ldd	r25, Y+2	; 0x02
    6140:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    6144:	0f 90       	pop	r0
    6146:	0f 90       	pop	r0
    6148:	df 91       	pop	r29
    614a:	cf 91       	pop	r28
    614c:	08 95       	ret

0000614e <_ZN10helicopter5tasks16PIDOuterLoopTaskC1EPNS_10controller13PIDControllerEii>:
 */ 
#include "PIDOuterLoopTask.h"

using namespace helicopter::tasks;

PIDOuterLoopTask::PIDOuterLoopTask (PIDController *pidController, int delay, int period) :
    614e:	cf 93       	push	r28
    6150:	df 93       	push	r29
    6152:	cd b7       	in	r28, 0x3d	; 61
    6154:	de b7       	in	r29, 0x3e	; 62
    6156:	28 97       	sbiw	r28, 0x08	; 8
    6158:	0f b6       	in	r0, 0x3f	; 63
    615a:	f8 94       	cli
    615c:	de bf       	out	0x3e, r29	; 62
    615e:	0f be       	out	0x3f, r0	; 63
    6160:	cd bf       	out	0x3d, r28	; 61
    6162:	9a 83       	std	Y+2, r25	; 0x02
    6164:	89 83       	std	Y+1, r24	; 0x01
    6166:	7c 83       	std	Y+4, r23	; 0x04
    6168:	6b 83       	std	Y+3, r22	; 0x03
    616a:	5e 83       	std	Y+6, r21	; 0x06
    616c:	4d 83       	std	Y+5, r20	; 0x05
    616e:	38 87       	std	Y+8, r19	; 0x08
    6170:	2f 83       	std	Y+7, r18	; 0x07
Task(delay, period),
pidController(pidController)
    6172:	89 81       	ldd	r24, Y+1	; 0x01
    6174:	9a 81       	ldd	r25, Y+2	; 0x02
    6176:	4f 81       	ldd	r20, Y+7	; 0x07
    6178:	58 85       	ldd	r21, Y+8	; 0x08
    617a:	2d 81       	ldd	r18, Y+5	; 0x05
    617c:	3e 81       	ldd	r19, Y+6	; 0x06
    617e:	b9 01       	movw	r22, r18
    6180:	0e 94 21 37 	call	0x6e42	; 0x6e42 <_ZN10helicopter5tasks4TaskC1Eii>
    6184:	89 81       	ldd	r24, Y+1	; 0x01
    6186:	9a 81       	ldd	r25, Y+2	; 0x02
    6188:	22 e6       	ldi	r18, 0x62	; 98
    618a:	32 e0       	ldi	r19, 0x02	; 2
    618c:	fc 01       	movw	r30, r24
    618e:	31 83       	std	Z+1, r19	; 0x01
    6190:	20 83       	st	Z, r18
    6192:	89 81       	ldd	r24, Y+1	; 0x01
    6194:	9a 81       	ldd	r25, Y+2	; 0x02
    6196:	2b 81       	ldd	r18, Y+3	; 0x03
    6198:	3c 81       	ldd	r19, Y+4	; 0x04
    619a:	fc 01       	movw	r30, r24
    619c:	30 87       	std	Z+8, r19	; 0x08
    619e:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    61a0:	28 96       	adiw	r28, 0x08	; 8
    61a2:	0f b6       	in	r0, 0x3f	; 63
    61a4:	f8 94       	cli
    61a6:	de bf       	out	0x3e, r29	; 62
    61a8:	0f be       	out	0x3f, r0	; 63
    61aa:	cd bf       	out	0x3d, r28	; 61
    61ac:	df 91       	pop	r29
    61ae:	cf 91       	pop	r28
    61b0:	08 95       	ret

000061b2 <_ZN10helicopter5tasks16PIDOuterLoopTask11runTaskImplEv>:

void PIDOuterLoopTask::runTaskImpl()
{
    61b2:	cf 93       	push	r28
    61b4:	df 93       	push	r29
    61b6:	1f 92       	push	r1
    61b8:	1f 92       	push	r1
    61ba:	cd b7       	in	r28, 0x3d	; 61
    61bc:	de b7       	in	r29, 0x3e	; 62
    61be:	9a 83       	std	Y+2, r25	; 0x02
    61c0:	89 83       	std	Y+1, r24	; 0x01
	pidController->mainRotorCollectiveOuterLoopUpdate();
    61c2:	89 81       	ldd	r24, Y+1	; 0x01
    61c4:	9a 81       	ldd	r25, Y+2	; 0x02
    61c6:	fc 01       	movw	r30, r24
    61c8:	87 81       	ldd	r24, Z+7	; 0x07
    61ca:	90 85       	ldd	r25, Z+8	; 0x08
    61cc:	0e 94 de 0c 	call	0x19bc	; 0x19bc <_ZN10helicopter10controller13PIDController34mainRotorCollectiveOuterLoopUpdateEv>
	pidController->tailRotorCollectiveOuterLoopUpdate();
    61d0:	89 81       	ldd	r24, Y+1	; 0x01
    61d2:	9a 81       	ldd	r25, Y+2	; 0x02
    61d4:	fc 01       	movw	r30, r24
    61d6:	87 81       	ldd	r24, Z+7	; 0x07
    61d8:	90 85       	ldd	r25, Z+8	; 0x08
    61da:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <_ZN10helicopter10controller13PIDController34tailRotorCollectiveOuterLoopUpdateEv>
	pidController->cyclicLongitudeOuterLoopUpdate();
    61de:	89 81       	ldd	r24, Y+1	; 0x01
    61e0:	9a 81       	ldd	r25, Y+2	; 0x02
    61e2:	fc 01       	movw	r30, r24
    61e4:	87 81       	ldd	r24, Z+7	; 0x07
    61e6:	90 85       	ldd	r25, Z+8	; 0x08
    61e8:	0e 94 95 09 	call	0x132a	; 0x132a <_ZN10helicopter10controller13PIDController30cyclicLongitudeOuterLoopUpdateEv>
}
    61ec:	0f 90       	pop	r0
    61ee:	0f 90       	pop	r0
    61f0:	df 91       	pop	r29
    61f2:	cf 91       	pop	r28
    61f4:	08 95       	ret

000061f6 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class executes the outer loop of the PID controller
		 */
		class PIDOuterLoopTask : public Task
    61f6:	cf 93       	push	r28
    61f8:	df 93       	push	r29
    61fa:	1f 92       	push	r1
    61fc:	1f 92       	push	r1
    61fe:	cd b7       	in	r28, 0x3d	; 61
    6200:	de b7       	in	r29, 0x3e	; 62
    6202:	9a 83       	std	Y+2, r25	; 0x02
    6204:	89 83       	std	Y+1, r24	; 0x01
    6206:	89 81       	ldd	r24, Y+1	; 0x01
    6208:	9a 81       	ldd	r25, Y+2	; 0x02
    620a:	22 e6       	ldi	r18, 0x62	; 98
    620c:	32 e0       	ldi	r19, 0x02	; 2
    620e:	fc 01       	movw	r30, r24
    6210:	31 83       	std	Z+1, r19	; 0x01
    6212:	20 83       	st	Z, r18
    6214:	89 81       	ldd	r24, Y+1	; 0x01
    6216:	9a 81       	ldd	r25, Y+2	; 0x02
    6218:	0e 94 4c 11 	call	0x2298	; 0x2298 <_ZN10helicopter5tasks4TaskD1Ev>
    621c:	80 e0       	ldi	r24, 0x00	; 0
    621e:	90 e0       	ldi	r25, 0x00	; 0
    6220:	81 70       	andi	r24, 0x01	; 1
    6222:	99 27       	eor	r25, r25
    6224:	00 97       	sbiw	r24, 0x00	; 0
    6226:	21 f0       	breq	.+8      	; 0x6230 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev+0x3a>
    6228:	89 81       	ldd	r24, Y+1	; 0x01
    622a:	9a 81       	ldd	r25, Y+2	; 0x02
    622c:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    6230:	0f 90       	pop	r0
    6232:	0f 90       	pop	r0
    6234:	df 91       	pop	r29
    6236:	cf 91       	pop	r28
    6238:	08 95       	ret

0000623a <_ZN10helicopter5tasks16PIDOuterLoopTaskD0Ev>:
    623a:	cf 93       	push	r28
    623c:	df 93       	push	r29
    623e:	1f 92       	push	r1
    6240:	1f 92       	push	r1
    6242:	cd b7       	in	r28, 0x3d	; 61
    6244:	de b7       	in	r29, 0x3e	; 62
    6246:	9a 83       	std	Y+2, r25	; 0x02
    6248:	89 83       	std	Y+1, r24	; 0x01
    624a:	89 81       	ldd	r24, Y+1	; 0x01
    624c:	9a 81       	ldd	r25, Y+2	; 0x02
    624e:	0e 94 fb 30 	call	0x61f6	; 0x61f6 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>
    6252:	89 81       	ldd	r24, Y+1	; 0x01
    6254:	9a 81       	ldd	r25, Y+2	; 0x02
    6256:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    625a:	0f 90       	pop	r0
    625c:	0f 90       	pop	r0
    625e:	df 91       	pop	r29
    6260:	cf 91       	pop	r28
    6262:	08 95       	ret

00006264 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf>:
																							
		
		
		
			float XNEDBodyFrame() const {return xNEDBodyFrame;}
			void XNEDBodyFrame(float val) { xNEDBodyFrame = val;}
    6264:	cf 93       	push	r28
    6266:	df 93       	push	r29
    6268:	00 d0       	rcall	.+0      	; 0x626a <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf+0x6>
    626a:	00 d0       	rcall	.+0      	; 0x626c <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf+0x8>
    626c:	cd b7       	in	r28, 0x3d	; 61
    626e:	de b7       	in	r29, 0x3e	; 62
    6270:	9a 83       	std	Y+2, r25	; 0x02
    6272:	89 83       	std	Y+1, r24	; 0x01
    6274:	4b 83       	std	Y+3, r20	; 0x03
    6276:	5c 83       	std	Y+4, r21	; 0x04
    6278:	6d 83       	std	Y+5, r22	; 0x05
    627a:	7e 83       	std	Y+6, r23	; 0x06
    627c:	29 81       	ldd	r18, Y+1	; 0x01
    627e:	3a 81       	ldd	r19, Y+2	; 0x02
    6280:	8b 81       	ldd	r24, Y+3	; 0x03
    6282:	9c 81       	ldd	r25, Y+4	; 0x04
    6284:	ad 81       	ldd	r26, Y+5	; 0x05
    6286:	be 81       	ldd	r27, Y+6	; 0x06
    6288:	f9 01       	movw	r30, r18
    628a:	84 a3       	std	Z+36, r24	; 0x24
    628c:	95 a3       	std	Z+37, r25	; 0x25
    628e:	a6 a3       	std	Z+38, r26	; 0x26
    6290:	b7 a3       	std	Z+39, r27	; 0x27
    6292:	26 96       	adiw	r28, 0x06	; 6
    6294:	0f b6       	in	r0, 0x3f	; 63
    6296:	f8 94       	cli
    6298:	de bf       	out	0x3e, r29	; 62
    629a:	0f be       	out	0x3f, r0	; 63
    629c:	cd bf       	out	0x3d, r28	; 61
    629e:	df 91       	pop	r29
    62a0:	cf 91       	pop	r28
    62a2:	08 95       	ret

000062a4 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf>:
						
						


			float YNEDBodyFrame() const {return yNEDBodyFrame;}
			void YNEDBodyFrame(float val) { yNEDBodyFrame = val;}
    62a4:	cf 93       	push	r28
    62a6:	df 93       	push	r29
    62a8:	00 d0       	rcall	.+0      	; 0x62aa <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf+0x6>
    62aa:	00 d0       	rcall	.+0      	; 0x62ac <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf+0x8>
    62ac:	cd b7       	in	r28, 0x3d	; 61
    62ae:	de b7       	in	r29, 0x3e	; 62
    62b0:	9a 83       	std	Y+2, r25	; 0x02
    62b2:	89 83       	std	Y+1, r24	; 0x01
    62b4:	4b 83       	std	Y+3, r20	; 0x03
    62b6:	5c 83       	std	Y+4, r21	; 0x04
    62b8:	6d 83       	std	Y+5, r22	; 0x05
    62ba:	7e 83       	std	Y+6, r23	; 0x06
    62bc:	89 81       	ldd	r24, Y+1	; 0x01
    62be:	9a 81       	ldd	r25, Y+2	; 0x02
    62c0:	9c 01       	movw	r18, r24
    62c2:	20 5b       	subi	r18, 0xB0	; 176
    62c4:	3f 4f       	sbci	r19, 0xFF	; 255
    62c6:	8b 81       	ldd	r24, Y+3	; 0x03
    62c8:	9c 81       	ldd	r25, Y+4	; 0x04
    62ca:	ad 81       	ldd	r26, Y+5	; 0x05
    62cc:	be 81       	ldd	r27, Y+6	; 0x06
    62ce:	f9 01       	movw	r30, r18
    62d0:	80 83       	st	Z, r24
    62d2:	91 83       	std	Z+1, r25	; 0x01
    62d4:	a2 83       	std	Z+2, r26	; 0x02
    62d6:	b3 83       	std	Z+3, r27	; 0x03
    62d8:	26 96       	adiw	r28, 0x06	; 6
    62da:	0f b6       	in	r0, 0x3f	; 63
    62dc:	f8 94       	cli
    62de:	de bf       	out	0x3e, r29	; 62
    62e0:	0f be       	out	0x3f, r0	; 63
    62e2:	cd bf       	out	0x3d, r28	; 61
    62e4:	df 91       	pop	r29
    62e6:	cf 91       	pop	r28
    62e8:	08 95       	ret

000062ea <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf>:

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
			void AltitudeFeetAgl(float val) { altitudeFeetAgl = val; }

			float ZNEDBodyFrame() const { return zNEDBodyFrame; }
			void ZNEDBodyFrame(float val) { zNEDBodyFrame = val; }
    62ea:	cf 93       	push	r28
    62ec:	df 93       	push	r29
    62ee:	00 d0       	rcall	.+0      	; 0x62f0 <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf+0x6>
    62f0:	00 d0       	rcall	.+0      	; 0x62f2 <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf+0x8>
    62f2:	cd b7       	in	r28, 0x3d	; 61
    62f4:	de b7       	in	r29, 0x3e	; 62
    62f6:	9a 83       	std	Y+2, r25	; 0x02
    62f8:	89 83       	std	Y+1, r24	; 0x01
    62fa:	4b 83       	std	Y+3, r20	; 0x03
    62fc:	5c 83       	std	Y+4, r21	; 0x04
    62fe:	6d 83       	std	Y+5, r22	; 0x05
    6300:	7e 83       	std	Y+6, r23	; 0x06
    6302:	89 81       	ldd	r24, Y+1	; 0x01
    6304:	9a 81       	ldd	r25, Y+2	; 0x02
    6306:	9c 01       	movw	r18, r24
    6308:	20 58       	subi	r18, 0x80	; 128
    630a:	3f 4f       	sbci	r19, 0xFF	; 255
    630c:	8b 81       	ldd	r24, Y+3	; 0x03
    630e:	9c 81       	ldd	r25, Y+4	; 0x04
    6310:	ad 81       	ldd	r26, Y+5	; 0x05
    6312:	be 81       	ldd	r27, Y+6	; 0x06
    6314:	f9 01       	movw	r30, r18
    6316:	80 83       	st	Z, r24
    6318:	91 83       	std	Z+1, r25	; 0x01
    631a:	a2 83       	std	Z+2, r26	; 0x02
    631c:	b3 83       	std	Z+3, r27	; 0x03
    631e:	26 96       	adiw	r28, 0x06	; 6
    6320:	0f b6       	in	r0, 0x3f	; 63
    6322:	f8 94       	cli
    6324:	de bf       	out	0x3e, r29	; 62
    6326:	0f be       	out	0x3f, r0	; 63
    6328:	cd bf       	out	0x3d, r28	; 61
    632a:	df 91       	pop	r29
    632c:	cf 91       	pop	r28
    632e:	08 95       	ret

00006330 <_ZNK10helicopter5model11SystemModel20InitialXPositionEcefEv>:
			void ChecksumErrors(long val) { checksumErrors = val; }
			
			long  BlownFrames() const {return numOfFramesBlown;}
			void BlownFrames( long val ) { numOfFramesBlown = val;}

			long  InitialXPositionEcef() const {return initialXPositionEcef;}
    6330:	cf 93       	push	r28
    6332:	df 93       	push	r29
    6334:	1f 92       	push	r1
    6336:	1f 92       	push	r1
    6338:	cd b7       	in	r28, 0x3d	; 61
    633a:	de b7       	in	r29, 0x3e	; 62
    633c:	9a 83       	std	Y+2, r25	; 0x02
    633e:	89 83       	std	Y+1, r24	; 0x01
    6340:	89 81       	ldd	r24, Y+1	; 0x01
    6342:	9a 81       	ldd	r25, Y+2	; 0x02
    6344:	84 54       	subi	r24, 0x44	; 68
    6346:	9f 4f       	sbci	r25, 0xFF	; 255
    6348:	fc 01       	movw	r30, r24
    634a:	80 81       	ld	r24, Z
    634c:	91 81       	ldd	r25, Z+1	; 0x01
    634e:	a2 81       	ldd	r26, Z+2	; 0x02
    6350:	b3 81       	ldd	r27, Z+3	; 0x03
    6352:	bc 01       	movw	r22, r24
    6354:	cd 01       	movw	r24, r26
    6356:	0e 94 e7 3e 	call	0x7dce	; 0x7dce <__fixsfsi>
    635a:	dc 01       	movw	r26, r24
    635c:	cb 01       	movw	r24, r22
    635e:	bc 01       	movw	r22, r24
    6360:	cd 01       	movw	r24, r26
    6362:	0f 90       	pop	r0
    6364:	0f 90       	pop	r0
    6366:	df 91       	pop	r29
    6368:	cf 91       	pop	r28
    636a:	08 95       	ret

0000636c <_ZNK10helicopter5model11SystemModel20InitialYPositionEcefEv>:
			void InitialXPositionEcef( long val ) { initialXPositionEcef = val;}			

			long  InitialYPositionEcef() const {return initialYPositionEcef;}
    636c:	cf 93       	push	r28
    636e:	df 93       	push	r29
    6370:	1f 92       	push	r1
    6372:	1f 92       	push	r1
    6374:	cd b7       	in	r28, 0x3d	; 61
    6376:	de b7       	in	r29, 0x3e	; 62
    6378:	9a 83       	std	Y+2, r25	; 0x02
    637a:	89 83       	std	Y+1, r24	; 0x01
    637c:	89 81       	ldd	r24, Y+1	; 0x01
    637e:	9a 81       	ldd	r25, Y+2	; 0x02
    6380:	80 54       	subi	r24, 0x40	; 64
    6382:	9f 4f       	sbci	r25, 0xFF	; 255
    6384:	fc 01       	movw	r30, r24
    6386:	80 81       	ld	r24, Z
    6388:	91 81       	ldd	r25, Z+1	; 0x01
    638a:	a2 81       	ldd	r26, Z+2	; 0x02
    638c:	b3 81       	ldd	r27, Z+3	; 0x03
    638e:	bc 01       	movw	r22, r24
    6390:	cd 01       	movw	r24, r26
    6392:	0e 94 e7 3e 	call	0x7dce	; 0x7dce <__fixsfsi>
    6396:	dc 01       	movw	r26, r24
    6398:	cb 01       	movw	r24, r22
    639a:	bc 01       	movw	r22, r24
    639c:	cd 01       	movw	r24, r26
    639e:	0f 90       	pop	r0
    63a0:	0f 90       	pop	r0
    63a2:	df 91       	pop	r29
    63a4:	cf 91       	pop	r28
    63a6:	08 95       	ret

000063a8 <_ZNK10helicopter5model11SystemModel20InitialZPositionEcefEv>:
			void InitialYPositionEcef( long val ) { initialYPositionEcef = val;}

			long  InitialZPositionEcef() const {return initialZPositionEcef;}
    63a8:	cf 93       	push	r28
    63aa:	df 93       	push	r29
    63ac:	1f 92       	push	r1
    63ae:	1f 92       	push	r1
    63b0:	cd b7       	in	r28, 0x3d	; 61
    63b2:	de b7       	in	r29, 0x3e	; 62
    63b4:	9a 83       	std	Y+2, r25	; 0x02
    63b6:	89 83       	std	Y+1, r24	; 0x01
    63b8:	89 81       	ldd	r24, Y+1	; 0x01
    63ba:	9a 81       	ldd	r25, Y+2	; 0x02
    63bc:	8c 53       	subi	r24, 0x3C	; 60
    63be:	9f 4f       	sbci	r25, 0xFF	; 255
    63c0:	fc 01       	movw	r30, r24
    63c2:	80 81       	ld	r24, Z
    63c4:	91 81       	ldd	r25, Z+1	; 0x01
    63c6:	a2 81       	ldd	r26, Z+2	; 0x02
    63c8:	b3 81       	ldd	r27, Z+3	; 0x03
    63ca:	bc 01       	movw	r22, r24
    63cc:	cd 01       	movw	r24, r26
    63ce:	0e 94 e7 3e 	call	0x7dce	; 0x7dce <__fixsfsi>
    63d2:	dc 01       	movw	r26, r24
    63d4:	cb 01       	movw	r24, r22
    63d6:	bc 01       	movw	r22, r24
    63d8:	cd 01       	movw	r24, r26
    63da:	0f 90       	pop	r0
    63dc:	0f 90       	pop	r0
    63de:	df 91       	pop	r29
    63e0:	cf 91       	pop	r28
    63e2:	08 95       	ret

000063e4 <_ZN10helicopter5tasks20SensorProcessingTaskC1EPNS_5model11SystemModelEii>:
#include "CoordinateUtil.h"

using namespace helicopter::tasks;
using namespace helicopter::util;

SensorProcessingTask::SensorProcessingTask (SystemModel *model, int delay, int period) :
    63e4:	cf 93       	push	r28
    63e6:	df 93       	push	r29
    63e8:	cd b7       	in	r28, 0x3d	; 61
    63ea:	de b7       	in	r29, 0x3e	; 62
    63ec:	28 97       	sbiw	r28, 0x08	; 8
    63ee:	0f b6       	in	r0, 0x3f	; 63
    63f0:	f8 94       	cli
    63f2:	de bf       	out	0x3e, r29	; 62
    63f4:	0f be       	out	0x3f, r0	; 63
    63f6:	cd bf       	out	0x3d, r28	; 61
    63f8:	9a 83       	std	Y+2, r25	; 0x02
    63fa:	89 83       	std	Y+1, r24	; 0x01
    63fc:	7c 83       	std	Y+4, r23	; 0x04
    63fe:	6b 83       	std	Y+3, r22	; 0x03
    6400:	5e 83       	std	Y+6, r21	; 0x06
    6402:	4d 83       	std	Y+5, r20	; 0x05
    6404:	38 87       	std	Y+8, r19	; 0x08
    6406:	2f 83       	std	Y+7, r18	; 0x07
	Task(delay, period),
	model(model)
    6408:	89 81       	ldd	r24, Y+1	; 0x01
    640a:	9a 81       	ldd	r25, Y+2	; 0x02
    640c:	4f 81       	ldd	r20, Y+7	; 0x07
    640e:	58 85       	ldd	r21, Y+8	; 0x08
    6410:	2d 81       	ldd	r18, Y+5	; 0x05
    6412:	3e 81       	ldd	r19, Y+6	; 0x06
    6414:	b9 01       	movw	r22, r18
    6416:	0e 94 21 37 	call	0x6e42	; 0x6e42 <_ZN10helicopter5tasks4TaskC1Eii>
    641a:	89 81       	ldd	r24, Y+1	; 0x01
    641c:	9a 81       	ldd	r25, Y+2	; 0x02
    641e:	20 e7       	ldi	r18, 0x70	; 112
    6420:	32 e0       	ldi	r19, 0x02	; 2
    6422:	fc 01       	movw	r30, r24
    6424:	31 83       	std	Z+1, r19	; 0x01
    6426:	20 83       	st	Z, r18
    6428:	89 81       	ldd	r24, Y+1	; 0x01
    642a:	9a 81       	ldd	r25, Y+2	; 0x02
    642c:	2b 81       	ldd	r18, Y+3	; 0x03
    642e:	3c 81       	ldd	r19, Y+4	; 0x04
    6430:	fc 01       	movw	r30, r24
    6432:	30 87       	std	Z+8, r19	; 0x08
    6434:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    6436:	28 96       	adiw	r28, 0x08	; 8
    6438:	0f b6       	in	r0, 0x3f	; 63
    643a:	f8 94       	cli
    643c:	de bf       	out	0x3e, r29	; 62
    643e:	0f be       	out	0x3f, r0	; 63
    6440:	cd bf       	out	0x3d, r28	; 61
    6442:	df 91       	pop	r29
    6444:	cf 91       	pop	r28
    6446:	08 95       	ret

00006448 <_ZN10helicopter5tasks20SensorProcessingTask11runTaskImplEv>:

void SensorProcessingTask::runTaskImpl()
{
    6448:	4f 92       	push	r4
    644a:	5f 92       	push	r5
    644c:	6f 92       	push	r6
    644e:	7f 92       	push	r7
    6450:	8f 92       	push	r8
    6452:	9f 92       	push	r9
    6454:	af 92       	push	r10
    6456:	bf 92       	push	r11
    6458:	cf 92       	push	r12
    645a:	df 92       	push	r13
    645c:	ef 92       	push	r14
    645e:	ff 92       	push	r15
    6460:	0f 93       	push	r16
    6462:	1f 93       	push	r17
    6464:	cf 93       	push	r28
    6466:	df 93       	push	r29
    6468:	cd b7       	in	r28, 0x3d	; 61
    646a:	de b7       	in	r29, 0x3e	; 62
    646c:	66 97       	sbiw	r28, 0x16	; 22
    646e:	0f b6       	in	r0, 0x3f	; 63
    6470:	f8 94       	cli
    6472:	de bf       	out	0x3e, r29	; 62
    6474:	0f be       	out	0x3f, r0	; 63
    6476:	cd bf       	out	0x3d, r28	; 61
    6478:	9e 87       	std	Y+14, r25	; 0x0e
    647a:	8d 87       	std	Y+13, r24	; 0x0d
	float localNEDX = 0;
    647c:	19 82       	std	Y+1, r1	; 0x01
    647e:	1a 82       	std	Y+2, r1	; 0x02
    6480:	1b 82       	std	Y+3, r1	; 0x03
    6482:	1c 82       	std	Y+4, r1	; 0x04
	float localNEDY = 0;
    6484:	1d 82       	std	Y+5, r1	; 0x05
    6486:	1e 82       	std	Y+6, r1	; 0x06
    6488:	1f 82       	std	Y+7, r1	; 0x07
    648a:	18 86       	std	Y+8, r1	; 0x08
	float localNEDZ = 0;
    648c:	19 86       	std	Y+9, r1	; 0x09
    648e:	1a 86       	std	Y+10, r1	; 0x0a
    6490:	1b 86       	std	Y+11, r1	; 0x0b
    6492:	1c 86       	std	Y+12, r1	; 0x0c
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
		localNEDX,localNEDY,localNEDZ);
    6494:	8d 85       	ldd	r24, Y+13	; 0x0d
    6496:	9e 85       	ldd	r25, Y+14	; 0x0e
    6498:	fc 01       	movw	r30, r24
    649a:	87 81       	ldd	r24, Z+7	; 0x07
    649c:	90 85       	ldd	r25, Z+8	; 0x08
    649e:	8c 01       	movw	r16, r24
    64a0:	08 53       	subi	r16, 0x38	; 56
    64a2:	1f 4f       	sbci	r17, 0xFF	; 255
	float localNEDX = 0;
	float localNEDY = 0;
	float localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    64a4:	8d 85       	ldd	r24, Y+13	; 0x0d
    64a6:	9e 85       	ldd	r25, Y+14	; 0x0e
    64a8:	fc 01       	movw	r30, r24
    64aa:	87 81       	ldd	r24, Z+7	; 0x07
    64ac:	90 85       	ldd	r25, Z+8	; 0x08
    64ae:	0e 94 d4 31 	call	0x63a8	; 0x63a8 <_ZNK10helicopter5model11SystemModel20InitialZPositionEcefEv>
    64b2:	dc 01       	movw	r26, r24
    64b4:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    64b6:	bc 01       	movw	r22, r24
    64b8:	cd 01       	movw	r24, r26
    64ba:	0e 94 1a 3f 	call	0x7e34	; 0x7e34 <__floatsisf>
    64be:	4b 01       	movw	r8, r22
    64c0:	5c 01       	movw	r10, r24
	float localNEDX = 0;
	float localNEDY = 0;
	float localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    64c2:	8d 85       	ldd	r24, Y+13	; 0x0d
    64c4:	9e 85       	ldd	r25, Y+14	; 0x0e
    64c6:	fc 01       	movw	r30, r24
    64c8:	87 81       	ldd	r24, Z+7	; 0x07
    64ca:	90 85       	ldd	r25, Z+8	; 0x08
    64cc:	0e 94 b6 31 	call	0x636c	; 0x636c <_ZNK10helicopter5model11SystemModel20InitialYPositionEcefEv>
    64d0:	dc 01       	movw	r26, r24
    64d2:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    64d4:	bc 01       	movw	r22, r24
    64d6:	cd 01       	movw	r24, r26
    64d8:	0e 94 1a 3f 	call	0x7e34	; 0x7e34 <__floatsisf>
    64dc:	6b 01       	movw	r12, r22
    64de:	7c 01       	movw	r14, r24
	float localNEDX = 0;
	float localNEDY = 0;
	float localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    64e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    64e2:	9e 85       	ldd	r25, Y+14	; 0x0e
    64e4:	fc 01       	movw	r30, r24
    64e6:	87 81       	ldd	r24, Z+7	; 0x07
    64e8:	90 85       	ldd	r25, Z+8	; 0x08
    64ea:	0e 94 98 31 	call	0x6330	; 0x6330 <_ZNK10helicopter5model11SystemModel20InitialXPositionEcefEv>
    64ee:	dc 01       	movw	r26, r24
    64f0:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    64f2:	bc 01       	movw	r22, r24
    64f4:	cd 01       	movw	r24, r26
    64f6:	0e 94 1a 3f 	call	0x7e34	; 0x7e34 <__floatsisf>
    64fa:	6f 87       	std	Y+15, r22	; 0x0f
    64fc:	78 8b       	std	Y+16, r23	; 0x10
    64fe:	89 8b       	std	Y+17, r24	; 0x11
    6500:	9a 8b       	std	Y+18, r25	; 0x12
    6502:	8d 85       	ldd	r24, Y+13	; 0x0d
    6504:	9e 85       	ldd	r25, Y+14	; 0x0e
    6506:	fc 01       	movw	r30, r24
    6508:	87 81       	ldd	r24, Z+7	; 0x07
    650a:	90 85       	ldd	r25, Z+8	; 0x08
    650c:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    6510:	6b 8b       	std	Y+19, r22	; 0x13
    6512:	7c 8b       	std	Y+20, r23	; 0x14
    6514:	8d 8b       	std	Y+21, r24	; 0x15
    6516:	9e 8b       	std	Y+22, r25	; 0x16
    6518:	8d 85       	ldd	r24, Y+13	; 0x0d
    651a:	9e 85       	ldd	r25, Y+14	; 0x0e
    651c:	fc 01       	movw	r30, r24
    651e:	87 81       	ldd	r24, Z+7	; 0x07
    6520:	90 85       	ldd	r25, Z+8	; 0x08
    6522:	0e 94 34 15 	call	0x2a68	; 0x2a68 <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    6526:	2b 01       	movw	r4, r22
    6528:	3c 01       	movw	r6, r24
    652a:	8d 85       	ldd	r24, Y+13	; 0x0d
    652c:	9e 85       	ldd	r25, Y+14	; 0x0e
    652e:	fc 01       	movw	r30, r24
    6530:	87 81       	ldd	r24, Z+7	; 0x07
    6532:	90 85       	ldd	r25, Z+8	; 0x08
    6534:	0e 94 1c 15 	call	0x2a38	; 0x2a38 <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    6538:	dc 01       	movw	r26, r24
    653a:	cb 01       	movw	r24, r22
    653c:	9e 01       	movw	r18, r28
    653e:	27 5f       	subi	r18, 0xF7	; 247
    6540:	3f 4f       	sbci	r19, 0xFF	; 255
    6542:	43 2f       	mov	r20, r19
    6544:	4f 93       	push	r20
    6546:	2f 93       	push	r18
    6548:	9e 01       	movw	r18, r28
    654a:	2b 5f       	subi	r18, 0xFB	; 251
    654c:	3f 4f       	sbci	r19, 0xFF	; 255
    654e:	43 2f       	mov	r20, r19
    6550:	4f 93       	push	r20
    6552:	2f 93       	push	r18
    6554:	9e 01       	movw	r18, r28
    6556:	2f 5f       	subi	r18, 0xFF	; 255
    6558:	3f 4f       	sbci	r19, 0xFF	; 255
    655a:	23 2f       	mov	r18, r19
    655c:	2f 93       	push	r18
    655e:	9e 01       	movw	r18, r28
    6560:	2f 5f       	subi	r18, 0xFF	; 255
    6562:	3f 4f       	sbci	r19, 0xFF	; 255
    6564:	2f 93       	push	r18
    6566:	21 2f       	mov	r18, r17
    6568:	2f 93       	push	r18
    656a:	20 2f       	mov	r18, r16
    656c:	2f 93       	push	r18
    656e:	2b 2d       	mov	r18, r11
    6570:	2f 93       	push	r18
    6572:	2a 2d       	mov	r18, r10
    6574:	2f 93       	push	r18
    6576:	29 2d       	mov	r18, r9
    6578:	2f 93       	push	r18
    657a:	28 2d       	mov	r18, r8
    657c:	2f 93       	push	r18
    657e:	2f 2d       	mov	r18, r15
    6580:	2f 93       	push	r18
    6582:	2e 2d       	mov	r18, r14
    6584:	2f 93       	push	r18
    6586:	2d 2d       	mov	r18, r13
    6588:	2f 93       	push	r18
    658a:	2c 2d       	mov	r18, r12
    658c:	2f 93       	push	r18
    658e:	af 84       	ldd	r10, Y+15	; 0x0f
    6590:	b8 88       	ldd	r11, Y+16	; 0x10
    6592:	c9 88       	ldd	r12, Y+17	; 0x11
    6594:	da 88       	ldd	r13, Y+18	; 0x12
    6596:	eb 88       	ldd	r14, Y+19	; 0x13
    6598:	fc 88       	ldd	r15, Y+20	; 0x14
    659a:	0d 89       	ldd	r16, Y+21	; 0x15
    659c:	1e 89       	ldd	r17, Y+22	; 0x16
    659e:	a3 01       	movw	r20, r6
    65a0:	92 01       	movw	r18, r4
    65a2:	bc 01       	movw	r22, r24
    65a4:	cd 01       	movw	r24, r26
    65a6:	0e 94 6e 3c 	call	0x78dc	; 0x78dc <_ZN10helicopter4util14CoordinateUtil29ConvertFromGeodedicToLocalNEDEffffffPA3_fRfS4_S4_>
    65aa:	8d b7       	in	r24, 0x3d	; 61
    65ac:	9e b7       	in	r25, 0x3e	; 62
    65ae:	40 96       	adiw	r24, 0x10	; 16
    65b0:	0f b6       	in	r0, 0x3f	; 63
    65b2:	f8 94       	cli
    65b4:	de bf       	out	0x3e, r29	; 62
    65b6:	0f be       	out	0x3f, r0	; 63
    65b8:	cd bf       	out	0x3d, r28	; 61
		
		
	model->XNEDBodyFrame(localNEDX);
    65ba:	89 81       	ldd	r24, Y+1	; 0x01
    65bc:	9a 81       	ldd	r25, Y+2	; 0x02
    65be:	ab 81       	ldd	r26, Y+3	; 0x03
    65c0:	bc 81       	ldd	r27, Y+4	; 0x04
    65c2:	2d 85       	ldd	r18, Y+13	; 0x0d
    65c4:	3e 85       	ldd	r19, Y+14	; 0x0e
    65c6:	f9 01       	movw	r30, r18
    65c8:	27 81       	ldd	r18, Z+7	; 0x07
    65ca:	30 85       	ldd	r19, Z+8	; 0x08
    65cc:	ac 01       	movw	r20, r24
    65ce:	bd 01       	movw	r22, r26
    65d0:	c9 01       	movw	r24, r18
    65d2:	0e 94 32 31 	call	0x6264	; 0x6264 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf>
	model->YNEDBodyFrame(localNEDY);
    65d6:	8d 81       	ldd	r24, Y+5	; 0x05
    65d8:	9e 81       	ldd	r25, Y+6	; 0x06
    65da:	af 81       	ldd	r26, Y+7	; 0x07
    65dc:	b8 85       	ldd	r27, Y+8	; 0x08
    65de:	2d 85       	ldd	r18, Y+13	; 0x0d
    65e0:	3e 85       	ldd	r19, Y+14	; 0x0e
    65e2:	f9 01       	movw	r30, r18
    65e4:	27 81       	ldd	r18, Z+7	; 0x07
    65e6:	30 85       	ldd	r19, Z+8	; 0x08
    65e8:	ac 01       	movw	r20, r24
    65ea:	bd 01       	movw	r22, r26
    65ec:	c9 01       	movw	r24, r18
    65ee:	0e 94 52 31 	call	0x62a4	; 0x62a4 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf>
	model->ZNEDBodyFrame(localNEDZ);
    65f2:	89 85       	ldd	r24, Y+9	; 0x09
    65f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    65f6:	ab 85       	ldd	r26, Y+11	; 0x0b
    65f8:	bc 85       	ldd	r27, Y+12	; 0x0c
    65fa:	2d 85       	ldd	r18, Y+13	; 0x0d
    65fc:	3e 85       	ldd	r19, Y+14	; 0x0e
    65fe:	f9 01       	movw	r30, r18
    6600:	27 81       	ldd	r18, Z+7	; 0x07
    6602:	30 85       	ldd	r19, Z+8	; 0x08
    6604:	ac 01       	movw	r20, r24
    6606:	bd 01       	movw	r22, r26
    6608:	c9 01       	movw	r24, r18
    660a:	0e 94 75 31 	call	0x62ea	; 0x62ea <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf>
}
    660e:	66 96       	adiw	r28, 0x16	; 22
    6610:	0f b6       	in	r0, 0x3f	; 63
    6612:	f8 94       	cli
    6614:	de bf       	out	0x3e, r29	; 62
    6616:	0f be       	out	0x3f, r0	; 63
    6618:	cd bf       	out	0x3d, r28	; 61
    661a:	df 91       	pop	r29
    661c:	cf 91       	pop	r28
    661e:	1f 91       	pop	r17
    6620:	0f 91       	pop	r16
    6622:	ff 90       	pop	r15
    6624:	ef 90       	pop	r14
    6626:	df 90       	pop	r13
    6628:	cf 90       	pop	r12
    662a:	bf 90       	pop	r11
    662c:	af 90       	pop	r10
    662e:	9f 90       	pop	r9
    6630:	8f 90       	pop	r8
    6632:	7f 90       	pop	r7
    6634:	6f 90       	pop	r6
    6636:	5f 90       	pop	r5
    6638:	4f 90       	pop	r4
    663a:	08 95       	ret

0000663c <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>:
	{
		/**
		 * This class processes and transforms sensor data such as converting latitude/longitude into
		 * x,y,z coordinates
		 */
		class SensorProcessingTask : public Task
    663c:	cf 93       	push	r28
    663e:	df 93       	push	r29
    6640:	1f 92       	push	r1
    6642:	1f 92       	push	r1
    6644:	cd b7       	in	r28, 0x3d	; 61
    6646:	de b7       	in	r29, 0x3e	; 62
    6648:	9a 83       	std	Y+2, r25	; 0x02
    664a:	89 83       	std	Y+1, r24	; 0x01
    664c:	89 81       	ldd	r24, Y+1	; 0x01
    664e:	9a 81       	ldd	r25, Y+2	; 0x02
    6650:	20 e7       	ldi	r18, 0x70	; 112
    6652:	32 e0       	ldi	r19, 0x02	; 2
    6654:	fc 01       	movw	r30, r24
    6656:	31 83       	std	Z+1, r19	; 0x01
    6658:	20 83       	st	Z, r18
    665a:	89 81       	ldd	r24, Y+1	; 0x01
    665c:	9a 81       	ldd	r25, Y+2	; 0x02
    665e:	0e 94 4c 11 	call	0x2298	; 0x2298 <_ZN10helicopter5tasks4TaskD1Ev>
    6662:	80 e0       	ldi	r24, 0x00	; 0
    6664:	90 e0       	ldi	r25, 0x00	; 0
    6666:	81 70       	andi	r24, 0x01	; 1
    6668:	99 27       	eor	r25, r25
    666a:	00 97       	sbiw	r24, 0x00	; 0
    666c:	21 f0       	breq	.+8      	; 0x6676 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev+0x3a>
    666e:	89 81       	ldd	r24, Y+1	; 0x01
    6670:	9a 81       	ldd	r25, Y+2	; 0x02
    6672:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    6676:	0f 90       	pop	r0
    6678:	0f 90       	pop	r0
    667a:	df 91       	pop	r29
    667c:	cf 91       	pop	r28
    667e:	08 95       	ret

00006680 <_ZN10helicopter5tasks20SensorProcessingTaskD0Ev>:
    6680:	cf 93       	push	r28
    6682:	df 93       	push	r29
    6684:	1f 92       	push	r1
    6686:	1f 92       	push	r1
    6688:	cd b7       	in	r28, 0x3d	; 61
    668a:	de b7       	in	r29, 0x3e	; 62
    668c:	9a 83       	std	Y+2, r25	; 0x02
    668e:	89 83       	std	Y+1, r24	; 0x01
    6690:	89 81       	ldd	r24, Y+1	; 0x01
    6692:	9a 81       	ldd	r25, Y+2	; 0x02
    6694:	0e 94 1e 33 	call	0x663c	; 0x663c <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>
    6698:	89 81       	ldd	r24, Y+1	; 0x01
    669a:	9a 81       	ldd	r25, Y+2	; 0x02
    669c:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    66a0:	0f 90       	pop	r0
    66a2:	0f 90       	pop	r0
    66a4:	df 91       	pop	r29
    66a6:	cf 91       	pop	r28
    66a8:	08 95       	ret

000066aa <_ZN10helicopter10controller13PIDController16setYIntegralGainEf>:
				
				
				
				
				
				void setYIntegralGain(float val)
    66aa:	cf 93       	push	r28
    66ac:	df 93       	push	r29
    66ae:	00 d0       	rcall	.+0      	; 0x66b0 <_ZN10helicopter10controller13PIDController16setYIntegralGainEf+0x6>
    66b0:	00 d0       	rcall	.+0      	; 0x66b2 <_ZN10helicopter10controller13PIDController16setYIntegralGainEf+0x8>
    66b2:	cd b7       	in	r28, 0x3d	; 61
    66b4:	de b7       	in	r29, 0x3e	; 62
    66b6:	9a 83       	std	Y+2, r25	; 0x02
    66b8:	89 83       	std	Y+1, r24	; 0x01
    66ba:	4b 83       	std	Y+3, r20	; 0x03
    66bc:	5c 83       	std	Y+4, r21	; 0x04
    66be:	6d 83       	std	Y+5, r22	; 0x05
    66c0:	7e 83       	std	Y+6, r23	; 0x06
				{
					yIntegralGain = val;
    66c2:	29 81       	ldd	r18, Y+1	; 0x01
    66c4:	3a 81       	ldd	r19, Y+2	; 0x02
    66c6:	8b 81       	ldd	r24, Y+3	; 0x03
    66c8:	9c 81       	ldd	r25, Y+4	; 0x04
    66ca:	ad 81       	ldd	r26, Y+5	; 0x05
    66cc:	be 81       	ldd	r27, Y+6	; 0x06
    66ce:	f9 01       	movw	r30, r18
    66d0:	80 a7       	std	Z+40, r24	; 0x28
    66d2:	91 a7       	std	Z+41, r25	; 0x29
    66d4:	a2 a7       	std	Z+42, r26	; 0x2a
    66d6:	b3 a7       	std	Z+43, r27	; 0x2b
				}
    66d8:	26 96       	adiw	r28, 0x06	; 6
    66da:	0f b6       	in	r0, 0x3f	; 63
    66dc:	f8 94       	cli
    66de:	de bf       	out	0x3e, r29	; 62
    66e0:	0f be       	out	0x3f, r0	; 63
    66e2:	cd bf       	out	0x3d, r28	; 61
    66e4:	df 91       	pop	r29
    66e6:	cf 91       	pop	r28
    66e8:	08 95       	ret

000066ea <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf>:
				
				void setYDerivativeGain(float val)
    66ea:	cf 93       	push	r28
    66ec:	df 93       	push	r29
    66ee:	00 d0       	rcall	.+0      	; 0x66f0 <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf+0x6>
    66f0:	00 d0       	rcall	.+0      	; 0x66f2 <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf+0x8>
    66f2:	cd b7       	in	r28, 0x3d	; 61
    66f4:	de b7       	in	r29, 0x3e	; 62
    66f6:	9a 83       	std	Y+2, r25	; 0x02
    66f8:	89 83       	std	Y+1, r24	; 0x01
    66fa:	4b 83       	std	Y+3, r20	; 0x03
    66fc:	5c 83       	std	Y+4, r21	; 0x04
    66fe:	6d 83       	std	Y+5, r22	; 0x05
    6700:	7e 83       	std	Y+6, r23	; 0x06
				{
					yDerivativeGain = val;
    6702:	29 81       	ldd	r18, Y+1	; 0x01
    6704:	3a 81       	ldd	r19, Y+2	; 0x02
    6706:	8b 81       	ldd	r24, Y+3	; 0x03
    6708:	9c 81       	ldd	r25, Y+4	; 0x04
    670a:	ad 81       	ldd	r26, Y+5	; 0x05
    670c:	be 81       	ldd	r27, Y+6	; 0x06
    670e:	f9 01       	movw	r30, r18
    6710:	84 a7       	std	Z+44, r24	; 0x2c
    6712:	95 a7       	std	Z+45, r25	; 0x2d
    6714:	a6 a7       	std	Z+46, r26	; 0x2e
    6716:	b7 a7       	std	Z+47, r27	; 0x2f
				}
    6718:	26 96       	adiw	r28, 0x06	; 6
    671a:	0f b6       	in	r0, 0x3f	; 63
    671c:	f8 94       	cli
    671e:	de bf       	out	0x3e, r29	; 62
    6720:	0f be       	out	0x3f, r0	; 63
    6722:	cd bf       	out	0x3d, r28	; 61
    6724:	df 91       	pop	r29
    6726:	cf 91       	pop	r28
    6728:	08 95       	ret

0000672a <_ZN10helicopter10controller13PIDController20setYProportionalGainEf>:
				
				void setYProportionalGain(float val)
    672a:	cf 93       	push	r28
    672c:	df 93       	push	r29
    672e:	00 d0       	rcall	.+0      	; 0x6730 <_ZN10helicopter10controller13PIDController20setYProportionalGainEf+0x6>
    6730:	00 d0       	rcall	.+0      	; 0x6732 <_ZN10helicopter10controller13PIDController20setYProportionalGainEf+0x8>
    6732:	cd b7       	in	r28, 0x3d	; 61
    6734:	de b7       	in	r29, 0x3e	; 62
    6736:	9a 83       	std	Y+2, r25	; 0x02
    6738:	89 83       	std	Y+1, r24	; 0x01
    673a:	4b 83       	std	Y+3, r20	; 0x03
    673c:	5c 83       	std	Y+4, r21	; 0x04
    673e:	6d 83       	std	Y+5, r22	; 0x05
    6740:	7e 83       	std	Y+6, r23	; 0x06
				{
					yProportionalGain = val;
    6742:	29 81       	ldd	r18, Y+1	; 0x01
    6744:	3a 81       	ldd	r19, Y+2	; 0x02
    6746:	8b 81       	ldd	r24, Y+3	; 0x03
    6748:	9c 81       	ldd	r25, Y+4	; 0x04
    674a:	ad 81       	ldd	r26, Y+5	; 0x05
    674c:	be 81       	ldd	r27, Y+6	; 0x06
    674e:	f9 01       	movw	r30, r18
    6750:	80 ab       	std	Z+48, r24	; 0x30
    6752:	91 ab       	std	Z+49, r25	; 0x31
    6754:	a2 ab       	std	Z+50, r26	; 0x32
    6756:	b3 ab       	std	Z+51, r27	; 0x33
				}
    6758:	26 96       	adiw	r28, 0x06	; 6
    675a:	0f b6       	in	r0, 0x3f	; 63
    675c:	f8 94       	cli
    675e:	de bf       	out	0x3e, r29	; 62
    6760:	0f be       	out	0x3f, r0	; 63
    6762:	cd bf       	out	0x3d, r28	; 61
    6764:	df 91       	pop	r29
    6766:	cf 91       	pop	r28
    6768:	08 95       	ret

0000676a <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf>:
				
				void setYAntiWindupGain(float val)
    676a:	cf 93       	push	r28
    676c:	df 93       	push	r29
    676e:	00 d0       	rcall	.+0      	; 0x6770 <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf+0x6>
    6770:	00 d0       	rcall	.+0      	; 0x6772 <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf+0x8>
    6772:	cd b7       	in	r28, 0x3d	; 61
    6774:	de b7       	in	r29, 0x3e	; 62
    6776:	9a 83       	std	Y+2, r25	; 0x02
    6778:	89 83       	std	Y+1, r24	; 0x01
    677a:	4b 83       	std	Y+3, r20	; 0x03
    677c:	5c 83       	std	Y+4, r21	; 0x04
    677e:	6d 83       	std	Y+5, r22	; 0x05
    6780:	7e 83       	std	Y+6, r23	; 0x06
				{
					yAntiWindupGain = val;
    6782:	29 81       	ldd	r18, Y+1	; 0x01
    6784:	3a 81       	ldd	r19, Y+2	; 0x02
    6786:	8b 81       	ldd	r24, Y+3	; 0x03
    6788:	9c 81       	ldd	r25, Y+4	; 0x04
    678a:	ad 81       	ldd	r26, Y+5	; 0x05
    678c:	be 81       	ldd	r27, Y+6	; 0x06
    678e:	f9 01       	movw	r30, r18
    6790:	84 ab       	std	Z+52, r24	; 0x34
    6792:	95 ab       	std	Z+53, r25	; 0x35
    6794:	a6 ab       	std	Z+54, r26	; 0x36
    6796:	b7 ab       	std	Z+55, r27	; 0x37
				}
    6798:	26 96       	adiw	r28, 0x06	; 6
    679a:	0f b6       	in	r0, 0x3f	; 63
    679c:	f8 94       	cli
    679e:	de bf       	out	0x3e, r29	; 62
    67a0:	0f be       	out	0x3f, r0	; 63
    67a2:	cd bf       	out	0x3d, r28	; 61
    67a4:	df 91       	pop	r29
    67a6:	cf 91       	pop	r28
    67a8:	08 95       	ret

000067aa <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf>:
				
				void setLateralInnerLoopGain(float val)
    67aa:	cf 93       	push	r28
    67ac:	df 93       	push	r29
    67ae:	00 d0       	rcall	.+0      	; 0x67b0 <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf+0x6>
    67b0:	00 d0       	rcall	.+0      	; 0x67b2 <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf+0x8>
    67b2:	cd b7       	in	r28, 0x3d	; 61
    67b4:	de b7       	in	r29, 0x3e	; 62
    67b6:	9a 83       	std	Y+2, r25	; 0x02
    67b8:	89 83       	std	Y+1, r24	; 0x01
    67ba:	4b 83       	std	Y+3, r20	; 0x03
    67bc:	5c 83       	std	Y+4, r21	; 0x04
    67be:	6d 83       	std	Y+5, r22	; 0x05
    67c0:	7e 83       	std	Y+6, r23	; 0x06
				{
					lateralInnerLoopGain = val;
    67c2:	29 81       	ldd	r18, Y+1	; 0x01
    67c4:	3a 81       	ldd	r19, Y+2	; 0x02
    67c6:	8b 81       	ldd	r24, Y+3	; 0x03
    67c8:	9c 81       	ldd	r25, Y+4	; 0x04
    67ca:	ad 81       	ldd	r26, Y+5	; 0x05
    67cc:	be 81       	ldd	r27, Y+6	; 0x06
    67ce:	f9 01       	movw	r30, r18
    67d0:	80 af       	std	Z+56, r24	; 0x38
    67d2:	91 af       	std	Z+57, r25	; 0x39
    67d4:	a2 af       	std	Z+58, r26	; 0x3a
    67d6:	b3 af       	std	Z+59, r27	; 0x3b
				}
    67d8:	26 96       	adiw	r28, 0x06	; 6
    67da:	0f b6       	in	r0, 0x3f	; 63
    67dc:	f8 94       	cli
    67de:	de bf       	out	0x3e, r29	; 62
    67e0:	0f be       	out	0x3f, r0	; 63
    67e2:	cd bf       	out	0x3d, r28	; 61
    67e4:	df 91       	pop	r29
    67e6:	cf 91       	pop	r28
    67e8:	08 95       	ret

000067ea <_ZN10helicopter10controller13PIDController16setZIntegralGainEf>:
				
				
				
				
				
				void setZIntegralGain(float val)
    67ea:	cf 93       	push	r28
    67ec:	df 93       	push	r29
    67ee:	00 d0       	rcall	.+0      	; 0x67f0 <_ZN10helicopter10controller13PIDController16setZIntegralGainEf+0x6>
    67f0:	00 d0       	rcall	.+0      	; 0x67f2 <_ZN10helicopter10controller13PIDController16setZIntegralGainEf+0x8>
    67f2:	cd b7       	in	r28, 0x3d	; 61
    67f4:	de b7       	in	r29, 0x3e	; 62
    67f6:	9a 83       	std	Y+2, r25	; 0x02
    67f8:	89 83       	std	Y+1, r24	; 0x01
    67fa:	4b 83       	std	Y+3, r20	; 0x03
    67fc:	5c 83       	std	Y+4, r21	; 0x04
    67fe:	6d 83       	std	Y+5, r22	; 0x05
    6800:	7e 83       	std	Y+6, r23	; 0x06
				{
					zIntegralGain = val;
    6802:	29 81       	ldd	r18, Y+1	; 0x01
    6804:	3a 81       	ldd	r19, Y+2	; 0x02
    6806:	8b 81       	ldd	r24, Y+3	; 0x03
    6808:	9c 81       	ldd	r25, Y+4	; 0x04
    680a:	ad 81       	ldd	r26, Y+5	; 0x05
    680c:	be 81       	ldd	r27, Y+6	; 0x06
    680e:	f9 01       	movw	r30, r18
    6810:	84 af       	std	Z+60, r24	; 0x3c
    6812:	95 af       	std	Z+61, r25	; 0x3d
    6814:	a6 af       	std	Z+62, r26	; 0x3e
    6816:	b7 af       	std	Z+63, r27	; 0x3f
				}
    6818:	26 96       	adiw	r28, 0x06	; 6
    681a:	0f b6       	in	r0, 0x3f	; 63
    681c:	f8 94       	cli
    681e:	de bf       	out	0x3e, r29	; 62
    6820:	0f be       	out	0x3f, r0	; 63
    6822:	cd bf       	out	0x3d, r28	; 61
    6824:	df 91       	pop	r29
    6826:	cf 91       	pop	r28
    6828:	08 95       	ret

0000682a <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf>:
				
				void setZDerivativeGain(float val)
    682a:	cf 93       	push	r28
    682c:	df 93       	push	r29
    682e:	00 d0       	rcall	.+0      	; 0x6830 <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf+0x6>
    6830:	00 d0       	rcall	.+0      	; 0x6832 <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf+0x8>
    6832:	cd b7       	in	r28, 0x3d	; 61
    6834:	de b7       	in	r29, 0x3e	; 62
    6836:	9a 83       	std	Y+2, r25	; 0x02
    6838:	89 83       	std	Y+1, r24	; 0x01
    683a:	4b 83       	std	Y+3, r20	; 0x03
    683c:	5c 83       	std	Y+4, r21	; 0x04
    683e:	6d 83       	std	Y+5, r22	; 0x05
    6840:	7e 83       	std	Y+6, r23	; 0x06
				{
					zDerivativeGain = val;
    6842:	89 81       	ldd	r24, Y+1	; 0x01
    6844:	9a 81       	ldd	r25, Y+2	; 0x02
    6846:	9c 01       	movw	r18, r24
    6848:	20 5c       	subi	r18, 0xC0	; 192
    684a:	3f 4f       	sbci	r19, 0xFF	; 255
    684c:	8b 81       	ldd	r24, Y+3	; 0x03
    684e:	9c 81       	ldd	r25, Y+4	; 0x04
    6850:	ad 81       	ldd	r26, Y+5	; 0x05
    6852:	be 81       	ldd	r27, Y+6	; 0x06
    6854:	f9 01       	movw	r30, r18
    6856:	80 83       	st	Z, r24
    6858:	91 83       	std	Z+1, r25	; 0x01
    685a:	a2 83       	std	Z+2, r26	; 0x02
    685c:	b3 83       	std	Z+3, r27	; 0x03
				}
    685e:	26 96       	adiw	r28, 0x06	; 6
    6860:	0f b6       	in	r0, 0x3f	; 63
    6862:	f8 94       	cli
    6864:	de bf       	out	0x3e, r29	; 62
    6866:	0f be       	out	0x3f, r0	; 63
    6868:	cd bf       	out	0x3d, r28	; 61
    686a:	df 91       	pop	r29
    686c:	cf 91       	pop	r28
    686e:	08 95       	ret

00006870 <_ZN10helicopter10controller13PIDController20setZProportionalGainEf>:
				
				void setZProportionalGain(float val)
    6870:	cf 93       	push	r28
    6872:	df 93       	push	r29
    6874:	00 d0       	rcall	.+0      	; 0x6876 <_ZN10helicopter10controller13PIDController20setZProportionalGainEf+0x6>
    6876:	00 d0       	rcall	.+0      	; 0x6878 <_ZN10helicopter10controller13PIDController20setZProportionalGainEf+0x8>
    6878:	cd b7       	in	r28, 0x3d	; 61
    687a:	de b7       	in	r29, 0x3e	; 62
    687c:	9a 83       	std	Y+2, r25	; 0x02
    687e:	89 83       	std	Y+1, r24	; 0x01
    6880:	4b 83       	std	Y+3, r20	; 0x03
    6882:	5c 83       	std	Y+4, r21	; 0x04
    6884:	6d 83       	std	Y+5, r22	; 0x05
    6886:	7e 83       	std	Y+6, r23	; 0x06
				{
					zProportionalGain = val;
    6888:	89 81       	ldd	r24, Y+1	; 0x01
    688a:	9a 81       	ldd	r25, Y+2	; 0x02
    688c:	9c 01       	movw	r18, r24
    688e:	2c 5b       	subi	r18, 0xBC	; 188
    6890:	3f 4f       	sbci	r19, 0xFF	; 255
    6892:	8b 81       	ldd	r24, Y+3	; 0x03
    6894:	9c 81       	ldd	r25, Y+4	; 0x04
    6896:	ad 81       	ldd	r26, Y+5	; 0x05
    6898:	be 81       	ldd	r27, Y+6	; 0x06
    689a:	f9 01       	movw	r30, r18
    689c:	80 83       	st	Z, r24
    689e:	91 83       	std	Z+1, r25	; 0x01
    68a0:	a2 83       	std	Z+2, r26	; 0x02
    68a2:	b3 83       	std	Z+3, r27	; 0x03
				}
    68a4:	26 96       	adiw	r28, 0x06	; 6
    68a6:	0f b6       	in	r0, 0x3f	; 63
    68a8:	f8 94       	cli
    68aa:	de bf       	out	0x3e, r29	; 62
    68ac:	0f be       	out	0x3f, r0	; 63
    68ae:	cd bf       	out	0x3d, r28	; 61
    68b0:	df 91       	pop	r29
    68b2:	cf 91       	pop	r28
    68b4:	08 95       	ret

000068b6 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf>:
				
				void setZAntiWindupGain(float val)
    68b6:	cf 93       	push	r28
    68b8:	df 93       	push	r29
    68ba:	00 d0       	rcall	.+0      	; 0x68bc <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf+0x6>
    68bc:	00 d0       	rcall	.+0      	; 0x68be <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf+0x8>
    68be:	cd b7       	in	r28, 0x3d	; 61
    68c0:	de b7       	in	r29, 0x3e	; 62
    68c2:	9a 83       	std	Y+2, r25	; 0x02
    68c4:	89 83       	std	Y+1, r24	; 0x01
    68c6:	4b 83       	std	Y+3, r20	; 0x03
    68c8:	5c 83       	std	Y+4, r21	; 0x04
    68ca:	6d 83       	std	Y+5, r22	; 0x05
    68cc:	7e 83       	std	Y+6, r23	; 0x06
				{
					zAntiWindupGain = val;
    68ce:	89 81       	ldd	r24, Y+1	; 0x01
    68d0:	9a 81       	ldd	r25, Y+2	; 0x02
    68d2:	9c 01       	movw	r18, r24
    68d4:	28 5b       	subi	r18, 0xB8	; 184
    68d6:	3f 4f       	sbci	r19, 0xFF	; 255
    68d8:	8b 81       	ldd	r24, Y+3	; 0x03
    68da:	9c 81       	ldd	r25, Y+4	; 0x04
    68dc:	ad 81       	ldd	r26, Y+5	; 0x05
    68de:	be 81       	ldd	r27, Y+6	; 0x06
    68e0:	f9 01       	movw	r30, r18
    68e2:	80 83       	st	Z, r24
    68e4:	91 83       	std	Z+1, r25	; 0x01
    68e6:	a2 83       	std	Z+2, r26	; 0x02
    68e8:	b3 83       	std	Z+3, r27	; 0x03
				}
    68ea:	26 96       	adiw	r28, 0x06	; 6
    68ec:	0f b6       	in	r0, 0x3f	; 63
    68ee:	f8 94       	cli
    68f0:	de bf       	out	0x3e, r29	; 62
    68f2:	0f be       	out	0x3f, r0	; 63
    68f4:	cd bf       	out	0x3d, r28	; 61
    68f6:	df 91       	pop	r29
    68f8:	cf 91       	pop	r28
    68fa:	08 95       	ret

000068fc <_ZN10helicopter5tasks16SimTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEPNS_10controller13PIDControllerEii>:
#include "SyncMessage.h"

using namespace helicopter::tasks;
using namespace helicopter::messages;

SimTelemetryTask::SimTelemetryTask(GroundControlStationInterface *radioInterface, SystemModel *model, PIDController *pidController, int delay, int period) :
    68fc:	ef 92       	push	r14
    68fe:	ff 92       	push	r15
    6900:	0f 93       	push	r16
    6902:	1f 93       	push	r17
    6904:	cf 93       	push	r28
    6906:	df 93       	push	r29
    6908:	cd b7       	in	r28, 0x3d	; 61
    690a:	de b7       	in	r29, 0x3e	; 62
    690c:	2c 97       	sbiw	r28, 0x0c	; 12
    690e:	0f b6       	in	r0, 0x3f	; 63
    6910:	f8 94       	cli
    6912:	de bf       	out	0x3e, r29	; 62
    6914:	0f be       	out	0x3f, r0	; 63
    6916:	cd bf       	out	0x3d, r28	; 61
    6918:	9a 83       	std	Y+2, r25	; 0x02
    691a:	89 83       	std	Y+1, r24	; 0x01
    691c:	7c 83       	std	Y+4, r23	; 0x04
    691e:	6b 83       	std	Y+3, r22	; 0x03
    6920:	5e 83       	std	Y+6, r21	; 0x06
    6922:	4d 83       	std	Y+5, r20	; 0x05
    6924:	38 87       	std	Y+8, r19	; 0x08
    6926:	2f 83       	std	Y+7, r18	; 0x07
    6928:	1a 87       	std	Y+10, r17	; 0x0a
    692a:	09 87       	std	Y+9, r16	; 0x09
    692c:	fc 86       	std	Y+12, r15	; 0x0c
    692e:	eb 86       	std	Y+11, r14	; 0x0b
	Task(delay, period),
	radioInterface(radioInterface),
	model(model),
	pidController(pidController)
    6930:	89 81       	ldd	r24, Y+1	; 0x01
    6932:	9a 81       	ldd	r25, Y+2	; 0x02
    6934:	4b 85       	ldd	r20, Y+11	; 0x0b
    6936:	5c 85       	ldd	r21, Y+12	; 0x0c
    6938:	29 85       	ldd	r18, Y+9	; 0x09
    693a:	3a 85       	ldd	r19, Y+10	; 0x0a
    693c:	b9 01       	movw	r22, r18
    693e:	0e 94 21 37 	call	0x6e42	; 0x6e42 <_ZN10helicopter5tasks4TaskC1Eii>
    6942:	89 81       	ldd	r24, Y+1	; 0x01
    6944:	9a 81       	ldd	r25, Y+2	; 0x02
    6946:	2e e7       	ldi	r18, 0x7E	; 126
    6948:	32 e0       	ldi	r19, 0x02	; 2
    694a:	fc 01       	movw	r30, r24
    694c:	31 83       	std	Z+1, r19	; 0x01
    694e:	20 83       	st	Z, r18
    6950:	89 81       	ldd	r24, Y+1	; 0x01
    6952:	9a 81       	ldd	r25, Y+2	; 0x02
    6954:	2b 81       	ldd	r18, Y+3	; 0x03
    6956:	3c 81       	ldd	r19, Y+4	; 0x04
    6958:	fc 01       	movw	r30, r24
    695a:	30 87       	std	Z+8, r19	; 0x08
    695c:	27 83       	std	Z+7, r18	; 0x07
    695e:	89 81       	ldd	r24, Y+1	; 0x01
    6960:	9a 81       	ldd	r25, Y+2	; 0x02
    6962:	2d 81       	ldd	r18, Y+5	; 0x05
    6964:	3e 81       	ldd	r19, Y+6	; 0x06
    6966:	fc 01       	movw	r30, r24
    6968:	32 87       	std	Z+10, r19	; 0x0a
    696a:	21 87       	std	Z+9, r18	; 0x09
    696c:	89 81       	ldd	r24, Y+1	; 0x01
    696e:	9a 81       	ldd	r25, Y+2	; 0x02
    6970:	2f 81       	ldd	r18, Y+7	; 0x07
    6972:	38 85       	ldd	r19, Y+8	; 0x08
    6974:	fc 01       	movw	r30, r24
    6976:	34 87       	std	Z+12, r19	; 0x0c
    6978:	23 87       	std	Z+11, r18	; 0x0b
{
	
}
    697a:	2c 96       	adiw	r28, 0x0c	; 12
    697c:	0f b6       	in	r0, 0x3f	; 63
    697e:	f8 94       	cli
    6980:	de bf       	out	0x3e, r29	; 62
    6982:	0f be       	out	0x3f, r0	; 63
    6984:	cd bf       	out	0x3d, r28	; 61
    6986:	df 91       	pop	r29
    6988:	cf 91       	pop	r28
    698a:	1f 91       	pop	r17
    698c:	0f 91       	pop	r16
    698e:	ff 90       	pop	r15
    6990:	ef 90       	pop	r14
    6992:	08 95       	ret

00006994 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv>:

void SimTelemetryTask::runTaskImpl() 
{
    6994:	cf 93       	push	r28
    6996:	df 93       	push	r29
    6998:	cd b7       	in	r28, 0x3d	; 61
    699a:	de b7       	in	r29, 0x3e	; 62
    699c:	2d 97       	sbiw	r28, 0x0d	; 13
    699e:	0f b6       	in	r0, 0x3f	; 63
    69a0:	f8 94       	cli
    69a2:	de bf       	out	0x3e, r29	; 62
    69a4:	0f be       	out	0x3f, r0	; 63
    69a6:	cd bf       	out	0x3d, r28	; 61
    69a8:	9d 87       	std	Y+13, r25	; 0x0d
    69aa:	8c 87       	std	Y+12, r24	; 0x0c
	
	//Send sync message to indicate to the ground control station that we are ready to receive data.
	//Without this sync message, the GCS could send data while the FC is asleep, which would cause the data
	//to overflow the usart buffer.
	SyncMessage syncMsg;
    69ac:	ce 01       	movw	r24, r28
    69ae:	05 96       	adiw	r24, 0x05	; 5
    69b0:	0e 94 6a 1e 	call	0x3cd4	; 0x3cd4 <_ZN10helicopter8messages11SyncMessageC1Ev>
	
	int status = radioInterface->transmit(&syncMsg);
    69b4:	8c 85       	ldd	r24, Y+12	; 0x0c
    69b6:	9d 85       	ldd	r25, Y+13	; 0x0d
    69b8:	fc 01       	movw	r30, r24
    69ba:	87 81       	ldd	r24, Z+7	; 0x07
    69bc:	90 85       	ldd	r25, Z+8	; 0x08
    69be:	9e 01       	movw	r18, r28
    69c0:	2b 5f       	subi	r18, 0xFB	; 251
    69c2:	3f 4f       	sbci	r19, 0xFF	; 255
    69c4:	b9 01       	movw	r22, r18
    69c6:	0e 94 90 1b 	call	0x3720	; 0x3720 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>
    69ca:	9a 83       	std	Y+2, r25	; 0x02
    69cc:	89 83       	std	Y+1, r24	; 0x01
	
	if (status == 0)
    69ce:	89 81       	ldd	r24, Y+1	; 0x01
    69d0:	9a 81       	ldd	r25, Y+2	; 0x02
    69d2:	00 97       	sbiw	r24, 0x00	; 0
    69d4:	09 f0       	breq	.+2      	; 0x69d8 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x44>
    69d6:	86 c1       	rjmp	.+780    	; 0x6ce4 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x350>
	{
	
		//Use the radio interface to get the telemetry message from the simulator
		Message *message = NULL;
    69d8:	1b 86       	std	Y+11, r1	; 0x0b
    69da:	1a 86       	std	Y+10, r1	; 0x0a
	
		status = radioInterface->receive(message);
    69dc:	8c 85       	ldd	r24, Y+12	; 0x0c
    69de:	9d 85       	ldd	r25, Y+13	; 0x0d
    69e0:	fc 01       	movw	r30, r24
    69e2:	87 81       	ldd	r24, Z+7	; 0x07
    69e4:	90 85       	ldd	r25, Z+8	; 0x08
    69e6:	9e 01       	movw	r18, r28
    69e8:	26 5f       	subi	r18, 0xF6	; 246
    69ea:	3f 4f       	sbci	r19, 0xFF	; 255
    69ec:	b9 01       	movw	r22, r18
    69ee:	0e 94 76 1c 	call	0x38ec	; 0x38ec <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE>
    69f2:	9a 83       	std	Y+2, r25	; 0x02
    69f4:	89 83       	std	Y+1, r24	; 0x01
	
		if (status == 0 && message != NULL)
    69f6:	89 81       	ldd	r24, Y+1	; 0x01
    69f8:	9a 81       	ldd	r25, Y+2	; 0x02
    69fa:	00 97       	sbiw	r24, 0x00	; 0
    69fc:	09 f0       	breq	.+2      	; 0x6a00 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x6c>
    69fe:	72 c1       	rjmp	.+740    	; 0x6ce4 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x350>
    6a00:	8a 85       	ldd	r24, Y+10	; 0x0a
    6a02:	9b 85       	ldd	r25, Y+11	; 0x0b
    6a04:	00 97       	sbiw	r24, 0x00	; 0
    6a06:	09 f4       	brne	.+2      	; 0x6a0a <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x76>
    6a08:	6d c1       	rjmp	.+730    	; 0x6ce4 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x350>
		{
			SystemTelemetryMessage *telemMsg = (SystemTelemetryMessage*) message;
    6a0a:	8a 85       	ldd	r24, Y+10	; 0x0a
    6a0c:	9b 85       	ldd	r25, Y+11	; 0x0b
    6a0e:	9c 83       	std	Y+4, r25	; 0x04
    6a10:	8b 83       	std	Y+3, r24	; 0x03
			
			//Update the model using the new data received from the simulator.
			telemMsg->updateModelFromMessageFromSimulator(model);
    6a12:	8c 85       	ldd	r24, Y+12	; 0x0c
    6a14:	9d 85       	ldd	r25, Y+13	; 0x0d
    6a16:	fc 01       	movw	r30, r24
    6a18:	21 85       	ldd	r18, Z+9	; 0x09
    6a1a:	32 85       	ldd	r19, Z+10	; 0x0a
    6a1c:	8b 81       	ldd	r24, Y+3	; 0x03
    6a1e:	9c 81       	ldd	r25, Y+4	; 0x04
    6a20:	b9 01       	movw	r22, r18
    6a22:	0e 94 14 2c 	call	0x5828	; 0x5828 <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE>
			
			pidController->setYawIntegralGain(telemMsg->YawIntegralGain);
    6a26:	8b 81       	ldd	r24, Y+3	; 0x03
    6a28:	9c 81       	ldd	r25, Y+4	; 0x04
    6a2a:	fc 01       	movw	r30, r24
    6a2c:	85 8d       	ldd	r24, Z+29	; 0x1d
    6a2e:	96 8d       	ldd	r25, Z+30	; 0x1e
    6a30:	a7 8d       	ldd	r26, Z+31	; 0x1f
    6a32:	b0 a1       	ldd	r27, Z+32	; 0x20
    6a34:	2c 85       	ldd	r18, Y+12	; 0x0c
    6a36:	3d 85       	ldd	r19, Y+13	; 0x0d
    6a38:	f9 01       	movw	r30, r18
    6a3a:	23 85       	ldd	r18, Z+11	; 0x0b
    6a3c:	34 85       	ldd	r19, Z+12	; 0x0c
    6a3e:	ac 01       	movw	r20, r24
    6a40:	bd 01       	movw	r22, r26
    6a42:	c9 01       	movw	r24, r18
    6a44:	0e 94 e6 16 	call	0x2dcc	; 0x2dcc <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf>
			pidController->setYawDerivativeGain(telemMsg->YawDerivativeGain);
    6a48:	8b 81       	ldd	r24, Y+3	; 0x03
    6a4a:	9c 81       	ldd	r25, Y+4	; 0x04
    6a4c:	fc 01       	movw	r30, r24
    6a4e:	81 a1       	ldd	r24, Z+33	; 0x21
    6a50:	92 a1       	ldd	r25, Z+34	; 0x22
    6a52:	a3 a1       	ldd	r26, Z+35	; 0x23
    6a54:	b4 a1       	ldd	r27, Z+36	; 0x24
    6a56:	2c 85       	ldd	r18, Y+12	; 0x0c
    6a58:	3d 85       	ldd	r19, Y+13	; 0x0d
    6a5a:	f9 01       	movw	r30, r18
    6a5c:	23 85       	ldd	r18, Z+11	; 0x0b
    6a5e:	34 85       	ldd	r19, Z+12	; 0x0c
    6a60:	ac 01       	movw	r20, r24
    6a62:	bd 01       	movw	r22, r26
    6a64:	c9 01       	movw	r24, r18
    6a66:	0e 94 06 17 	call	0x2e0c	; 0x2e0c <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf>
			pidController->setYawProportionalGain(telemMsg->YawProportionalGain);
    6a6a:	8b 81       	ldd	r24, Y+3	; 0x03
    6a6c:	9c 81       	ldd	r25, Y+4	; 0x04
    6a6e:	fc 01       	movw	r30, r24
    6a70:	85 a1       	ldd	r24, Z+37	; 0x25
    6a72:	96 a1       	ldd	r25, Z+38	; 0x26
    6a74:	a7 a1       	ldd	r26, Z+39	; 0x27
    6a76:	b0 a5       	ldd	r27, Z+40	; 0x28
    6a78:	2c 85       	ldd	r18, Y+12	; 0x0c
    6a7a:	3d 85       	ldd	r19, Y+13	; 0x0d
    6a7c:	f9 01       	movw	r30, r18
    6a7e:	23 85       	ldd	r18, Z+11	; 0x0b
    6a80:	34 85       	ldd	r19, Z+12	; 0x0c
    6a82:	ac 01       	movw	r20, r24
    6a84:	bd 01       	movw	r22, r26
    6a86:	c9 01       	movw	r24, r18
    6a88:	0e 94 c6 16 	call	0x2d8c	; 0x2d8c <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf>
			pidController->setYawAntiWindupGain(telemMsg->YawAntiWindupGain);
    6a8c:	8b 81       	ldd	r24, Y+3	; 0x03
    6a8e:	9c 81       	ldd	r25, Y+4	; 0x04
    6a90:	fc 01       	movw	r30, r24
    6a92:	81 a5       	ldd	r24, Z+41	; 0x29
    6a94:	92 a5       	ldd	r25, Z+42	; 0x2a
    6a96:	a3 a5       	ldd	r26, Z+43	; 0x2b
    6a98:	b4 a5       	ldd	r27, Z+44	; 0x2c
    6a9a:	2c 85       	ldd	r18, Y+12	; 0x0c
    6a9c:	3d 85       	ldd	r19, Y+13	; 0x0d
    6a9e:	f9 01       	movw	r30, r18
    6aa0:	23 85       	ldd	r18, Z+11	; 0x0b
    6aa2:	34 85       	ldd	r19, Z+12	; 0x0c
    6aa4:	ac 01       	movw	r20, r24
    6aa6:	bd 01       	movw	r22, r26
    6aa8:	c9 01       	movw	r24, r18
    6aaa:	0e 94 49 17 	call	0x2e92	; 0x2e92 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf>
		
			pidController->setXIntegralGain(telemMsg->XIntegralGain);
    6aae:	8b 81       	ldd	r24, Y+3	; 0x03
    6ab0:	9c 81       	ldd	r25, Y+4	; 0x04
    6ab2:	87 5b       	subi	r24, 0xB7	; 183
    6ab4:	9f 4f       	sbci	r25, 0xFF	; 255
    6ab6:	fc 01       	movw	r30, r24
    6ab8:	80 81       	ld	r24, Z
    6aba:	91 81       	ldd	r25, Z+1	; 0x01
    6abc:	a2 81       	ldd	r26, Z+2	; 0x02
    6abe:	b3 81       	ldd	r27, Z+3	; 0x03
    6ac0:	2c 85       	ldd	r18, Y+12	; 0x0c
    6ac2:	3d 85       	ldd	r19, Y+13	; 0x0d
    6ac4:	f9 01       	movw	r30, r18
    6ac6:	23 85       	ldd	r18, Z+11	; 0x0b
    6ac8:	34 85       	ldd	r19, Z+12	; 0x0c
    6aca:	ac 01       	movw	r20, r24
    6acc:	bd 01       	movw	r22, r26
    6ace:	c9 01       	movw	r24, r18
    6ad0:	0e 94 e0 15 	call	0x2bc0	; 0x2bc0 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf>
			pidController->setXDerivativeGain(telemMsg->XDerivativeGain);
    6ad4:	8b 81       	ldd	r24, Y+3	; 0x03
    6ad6:	9c 81       	ldd	r25, Y+4	; 0x04
    6ad8:	83 5b       	subi	r24, 0xB3	; 179
    6ada:	9f 4f       	sbci	r25, 0xFF	; 255
    6adc:	fc 01       	movw	r30, r24
    6ade:	80 81       	ld	r24, Z
    6ae0:	91 81       	ldd	r25, Z+1	; 0x01
    6ae2:	a2 81       	ldd	r26, Z+2	; 0x02
    6ae4:	b3 81       	ldd	r27, Z+3	; 0x03
    6ae6:	2c 85       	ldd	r18, Y+12	; 0x0c
    6ae8:	3d 85       	ldd	r19, Y+13	; 0x0d
    6aea:	f9 01       	movw	r30, r18
    6aec:	23 85       	ldd	r18, Z+11	; 0x0b
    6aee:	34 85       	ldd	r19, Z+12	; 0x0c
    6af0:	ac 01       	movw	r20, r24
    6af2:	bd 01       	movw	r22, r26
    6af4:	c9 01       	movw	r24, r18
    6af6:	0e 94 00 16 	call	0x2c00	; 0x2c00 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf>
			pidController->setXProportionalGain(telemMsg->XProportionalGain);
    6afa:	8b 81       	ldd	r24, Y+3	; 0x03
    6afc:	9c 81       	ldd	r25, Y+4	; 0x04
    6afe:	8f 5a       	subi	r24, 0xAF	; 175
    6b00:	9f 4f       	sbci	r25, 0xFF	; 255
    6b02:	fc 01       	movw	r30, r24
    6b04:	80 81       	ld	r24, Z
    6b06:	91 81       	ldd	r25, Z+1	; 0x01
    6b08:	a2 81       	ldd	r26, Z+2	; 0x02
    6b0a:	b3 81       	ldd	r27, Z+3	; 0x03
    6b0c:	2c 85       	ldd	r18, Y+12	; 0x0c
    6b0e:	3d 85       	ldd	r19, Y+13	; 0x0d
    6b10:	f9 01       	movw	r30, r18
    6b12:	23 85       	ldd	r18, Z+11	; 0x0b
    6b14:	34 85       	ldd	r19, Z+12	; 0x0c
    6b16:	ac 01       	movw	r20, r24
    6b18:	bd 01       	movw	r22, r26
    6b1a:	c9 01       	movw	r24, r18
    6b1c:	0e 94 20 16 	call	0x2c40	; 0x2c40 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf>
			pidController->setXAntiWindupGain(telemMsg->XAntiWindupGain);
    6b20:	8b 81       	ldd	r24, Y+3	; 0x03
    6b22:	9c 81       	ldd	r25, Y+4	; 0x04
    6b24:	8b 5a       	subi	r24, 0xAB	; 171
    6b26:	9f 4f       	sbci	r25, 0xFF	; 255
    6b28:	fc 01       	movw	r30, r24
    6b2a:	80 81       	ld	r24, Z
    6b2c:	91 81       	ldd	r25, Z+1	; 0x01
    6b2e:	a2 81       	ldd	r26, Z+2	; 0x02
    6b30:	b3 81       	ldd	r27, Z+3	; 0x03
    6b32:	2c 85       	ldd	r18, Y+12	; 0x0c
    6b34:	3d 85       	ldd	r19, Y+13	; 0x0d
    6b36:	f9 01       	movw	r30, r18
    6b38:	23 85       	ldd	r18, Z+11	; 0x0b
    6b3a:	34 85       	ldd	r19, Z+12	; 0x0c
    6b3c:	ac 01       	movw	r20, r24
    6b3e:	bd 01       	movw	r22, r26
    6b40:	c9 01       	movw	r24, r18
    6b42:	0e 94 40 16 	call	0x2c80	; 0x2c80 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf>
			pidController->setLongitudeInnerLoopGain(telemMsg->LongitudeInnerLoopGain);
    6b46:	8b 81       	ldd	r24, Y+3	; 0x03
    6b48:	9c 81       	ldd	r25, Y+4	; 0x04
    6b4a:	87 5a       	subi	r24, 0xA7	; 167
    6b4c:	9f 4f       	sbci	r25, 0xFF	; 255
    6b4e:	fc 01       	movw	r30, r24
    6b50:	80 81       	ld	r24, Z
    6b52:	91 81       	ldd	r25, Z+1	; 0x01
    6b54:	a2 81       	ldd	r26, Z+2	; 0x02
    6b56:	b3 81       	ldd	r27, Z+3	; 0x03
    6b58:	2c 85       	ldd	r18, Y+12	; 0x0c
    6b5a:	3d 85       	ldd	r19, Y+13	; 0x0d
    6b5c:	f9 01       	movw	r30, r18
    6b5e:	23 85       	ldd	r18, Z+11	; 0x0b
    6b60:	34 85       	ldd	r19, Z+12	; 0x0c
    6b62:	ac 01       	movw	r20, r24
    6b64:	bd 01       	movw	r22, r26
    6b66:	c9 01       	movw	r24, r18
    6b68:	0e 94 60 16 	call	0x2cc0	; 0x2cc0 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf>
				
			pidController->setYIntegralGain(telemMsg->YIntegralGain);
    6b6c:	8b 81       	ldd	r24, Y+3	; 0x03
    6b6e:	9c 81       	ldd	r25, Y+4	; 0x04
    6b70:	87 58       	subi	r24, 0x87	; 135
    6b72:	9f 4f       	sbci	r25, 0xFF	; 255
    6b74:	fc 01       	movw	r30, r24
    6b76:	80 81       	ld	r24, Z
    6b78:	91 81       	ldd	r25, Z+1	; 0x01
    6b7a:	a2 81       	ldd	r26, Z+2	; 0x02
    6b7c:	b3 81       	ldd	r27, Z+3	; 0x03
    6b7e:	2c 85       	ldd	r18, Y+12	; 0x0c
    6b80:	3d 85       	ldd	r19, Y+13	; 0x0d
    6b82:	f9 01       	movw	r30, r18
    6b84:	23 85       	ldd	r18, Z+11	; 0x0b
    6b86:	34 85       	ldd	r19, Z+12	; 0x0c
    6b88:	ac 01       	movw	r20, r24
    6b8a:	bd 01       	movw	r22, r26
    6b8c:	c9 01       	movw	r24, r18
    6b8e:	0e 94 55 33 	call	0x66aa	; 0x66aa <_ZN10helicopter10controller13PIDController16setYIntegralGainEf>
			pidController->setYDerivativeGain(telemMsg->YDerivativeGain);
    6b92:	8b 81       	ldd	r24, Y+3	; 0x03
    6b94:	9c 81       	ldd	r25, Y+4	; 0x04
    6b96:	83 58       	subi	r24, 0x83	; 131
    6b98:	9f 4f       	sbci	r25, 0xFF	; 255
    6b9a:	fc 01       	movw	r30, r24
    6b9c:	80 81       	ld	r24, Z
    6b9e:	91 81       	ldd	r25, Z+1	; 0x01
    6ba0:	a2 81       	ldd	r26, Z+2	; 0x02
    6ba2:	b3 81       	ldd	r27, Z+3	; 0x03
    6ba4:	2c 85       	ldd	r18, Y+12	; 0x0c
    6ba6:	3d 85       	ldd	r19, Y+13	; 0x0d
    6ba8:	f9 01       	movw	r30, r18
    6baa:	23 85       	ldd	r18, Z+11	; 0x0b
    6bac:	34 85       	ldd	r19, Z+12	; 0x0c
    6bae:	ac 01       	movw	r20, r24
    6bb0:	bd 01       	movw	r22, r26
    6bb2:	c9 01       	movw	r24, r18
    6bb4:	0e 94 75 33 	call	0x66ea	; 0x66ea <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf>
			pidController->setYProportionalGain(telemMsg->YProportionalGain);
    6bb8:	8b 81       	ldd	r24, Y+3	; 0x03
    6bba:	9c 81       	ldd	r25, Y+4	; 0x04
    6bbc:	8f 57       	subi	r24, 0x7F	; 127
    6bbe:	9f 4f       	sbci	r25, 0xFF	; 255
    6bc0:	fc 01       	movw	r30, r24
    6bc2:	80 81       	ld	r24, Z
    6bc4:	91 81       	ldd	r25, Z+1	; 0x01
    6bc6:	a2 81       	ldd	r26, Z+2	; 0x02
    6bc8:	b3 81       	ldd	r27, Z+3	; 0x03
    6bca:	2c 85       	ldd	r18, Y+12	; 0x0c
    6bcc:	3d 85       	ldd	r19, Y+13	; 0x0d
    6bce:	f9 01       	movw	r30, r18
    6bd0:	23 85       	ldd	r18, Z+11	; 0x0b
    6bd2:	34 85       	ldd	r19, Z+12	; 0x0c
    6bd4:	ac 01       	movw	r20, r24
    6bd6:	bd 01       	movw	r22, r26
    6bd8:	c9 01       	movw	r24, r18
    6bda:	0e 94 95 33 	call	0x672a	; 0x672a <_ZN10helicopter10controller13PIDController20setYProportionalGainEf>
			pidController->setYAntiWindupGain(telemMsg->YAntiWindupGain);
    6bde:	8b 81       	ldd	r24, Y+3	; 0x03
    6be0:	9c 81       	ldd	r25, Y+4	; 0x04
    6be2:	8b 57       	subi	r24, 0x7B	; 123
    6be4:	9f 4f       	sbci	r25, 0xFF	; 255
    6be6:	fc 01       	movw	r30, r24
    6be8:	80 81       	ld	r24, Z
    6bea:	91 81       	ldd	r25, Z+1	; 0x01
    6bec:	a2 81       	ldd	r26, Z+2	; 0x02
    6bee:	b3 81       	ldd	r27, Z+3	; 0x03
    6bf0:	2c 85       	ldd	r18, Y+12	; 0x0c
    6bf2:	3d 85       	ldd	r19, Y+13	; 0x0d
    6bf4:	f9 01       	movw	r30, r18
    6bf6:	23 85       	ldd	r18, Z+11	; 0x0b
    6bf8:	34 85       	ldd	r19, Z+12	; 0x0c
    6bfa:	ac 01       	movw	r20, r24
    6bfc:	bd 01       	movw	r22, r26
    6bfe:	c9 01       	movw	r24, r18
    6c00:	0e 94 b5 33 	call	0x676a	; 0x676a <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf>
			pidController->setLateralInnerLoopGain(telemMsg->LateralInnerLoopGain);
    6c04:	8b 81       	ldd	r24, Y+3	; 0x03
    6c06:	9c 81       	ldd	r25, Y+4	; 0x04
    6c08:	87 57       	subi	r24, 0x77	; 119
    6c0a:	9f 4f       	sbci	r25, 0xFF	; 255
    6c0c:	fc 01       	movw	r30, r24
    6c0e:	80 81       	ld	r24, Z
    6c10:	91 81       	ldd	r25, Z+1	; 0x01
    6c12:	a2 81       	ldd	r26, Z+2	; 0x02
    6c14:	b3 81       	ldd	r27, Z+3	; 0x03
    6c16:	2c 85       	ldd	r18, Y+12	; 0x0c
    6c18:	3d 85       	ldd	r19, Y+13	; 0x0d
    6c1a:	f9 01       	movw	r30, r18
    6c1c:	23 85       	ldd	r18, Z+11	; 0x0b
    6c1e:	34 85       	ldd	r19, Z+12	; 0x0c
    6c20:	ac 01       	movw	r20, r24
    6c22:	bd 01       	movw	r22, r26
    6c24:	c9 01       	movw	r24, r18
    6c26:	0e 94 d5 33 	call	0x67aa	; 0x67aa <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf>
			
			pidController->setZIntegralGain(telemMsg->ZIntegralGain);
    6c2a:	8b 81       	ldd	r24, Y+3	; 0x03
    6c2c:	9c 81       	ldd	r25, Y+4	; 0x04
    6c2e:	8b 55       	subi	r24, 0x5B	; 91
    6c30:	9f 4f       	sbci	r25, 0xFF	; 255
    6c32:	fc 01       	movw	r30, r24
    6c34:	80 81       	ld	r24, Z
    6c36:	91 81       	ldd	r25, Z+1	; 0x01
    6c38:	a2 81       	ldd	r26, Z+2	; 0x02
    6c3a:	b3 81       	ldd	r27, Z+3	; 0x03
    6c3c:	2c 85       	ldd	r18, Y+12	; 0x0c
    6c3e:	3d 85       	ldd	r19, Y+13	; 0x0d
    6c40:	f9 01       	movw	r30, r18
    6c42:	23 85       	ldd	r18, Z+11	; 0x0b
    6c44:	34 85       	ldd	r19, Z+12	; 0x0c
    6c46:	ac 01       	movw	r20, r24
    6c48:	bd 01       	movw	r22, r26
    6c4a:	c9 01       	movw	r24, r18
    6c4c:	0e 94 f5 33 	call	0x67ea	; 0x67ea <_ZN10helicopter10controller13PIDController16setZIntegralGainEf>
			pidController->setZDerivativeGain(telemMsg->ZDerivativeGain);
    6c50:	8b 81       	ldd	r24, Y+3	; 0x03
    6c52:	9c 81       	ldd	r25, Y+4	; 0x04
    6c54:	87 55       	subi	r24, 0x57	; 87
    6c56:	9f 4f       	sbci	r25, 0xFF	; 255
    6c58:	fc 01       	movw	r30, r24
    6c5a:	80 81       	ld	r24, Z
    6c5c:	91 81       	ldd	r25, Z+1	; 0x01
    6c5e:	a2 81       	ldd	r26, Z+2	; 0x02
    6c60:	b3 81       	ldd	r27, Z+3	; 0x03
    6c62:	2c 85       	ldd	r18, Y+12	; 0x0c
    6c64:	3d 85       	ldd	r19, Y+13	; 0x0d
    6c66:	f9 01       	movw	r30, r18
    6c68:	23 85       	ldd	r18, Z+11	; 0x0b
    6c6a:	34 85       	ldd	r19, Z+12	; 0x0c
    6c6c:	ac 01       	movw	r20, r24
    6c6e:	bd 01       	movw	r22, r26
    6c70:	c9 01       	movw	r24, r18
    6c72:	0e 94 15 34 	call	0x682a	; 0x682a <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf>
			pidController->setZProportionalGain(telemMsg->ZProportionalGain);
    6c76:	8b 81       	ldd	r24, Y+3	; 0x03
    6c78:	9c 81       	ldd	r25, Y+4	; 0x04
    6c7a:	83 55       	subi	r24, 0x53	; 83
    6c7c:	9f 4f       	sbci	r25, 0xFF	; 255
    6c7e:	fc 01       	movw	r30, r24
    6c80:	80 81       	ld	r24, Z
    6c82:	91 81       	ldd	r25, Z+1	; 0x01
    6c84:	a2 81       	ldd	r26, Z+2	; 0x02
    6c86:	b3 81       	ldd	r27, Z+3	; 0x03
    6c88:	2c 85       	ldd	r18, Y+12	; 0x0c
    6c8a:	3d 85       	ldd	r19, Y+13	; 0x0d
    6c8c:	f9 01       	movw	r30, r18
    6c8e:	23 85       	ldd	r18, Z+11	; 0x0b
    6c90:	34 85       	ldd	r19, Z+12	; 0x0c
    6c92:	ac 01       	movw	r20, r24
    6c94:	bd 01       	movw	r22, r26
    6c96:	c9 01       	movw	r24, r18
    6c98:	0e 94 38 34 	call	0x6870	; 0x6870 <_ZN10helicopter10controller13PIDController20setZProportionalGainEf>
			pidController->setZAntiWindupGain(telemMsg->ZAntiWindupGain);															
    6c9c:	8b 81       	ldd	r24, Y+3	; 0x03
    6c9e:	9c 81       	ldd	r25, Y+4	; 0x04
    6ca0:	8f 54       	subi	r24, 0x4F	; 79
    6ca2:	9f 4f       	sbci	r25, 0xFF	; 255
    6ca4:	fc 01       	movw	r30, r24
    6ca6:	80 81       	ld	r24, Z
    6ca8:	91 81       	ldd	r25, Z+1	; 0x01
    6caa:	a2 81       	ldd	r26, Z+2	; 0x02
    6cac:	b3 81       	ldd	r27, Z+3	; 0x03
    6cae:	2c 85       	ldd	r18, Y+12	; 0x0c
    6cb0:	3d 85       	ldd	r19, Y+13	; 0x0d
    6cb2:	f9 01       	movw	r30, r18
    6cb4:	23 85       	ldd	r18, Z+11	; 0x0b
    6cb6:	34 85       	ldd	r19, Z+12	; 0x0c
    6cb8:	ac 01       	movw	r20, r24
    6cba:	bd 01       	movw	r22, r26
    6cbc:	c9 01       	movw	r24, r18
    6cbe:	0e 94 5b 34 	call	0x68b6	; 0x68b6 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf>
		
			delete message;
    6cc2:	8a 85       	ldd	r24, Y+10	; 0x0a
    6cc4:	9b 85       	ldd	r25, Y+11	; 0x0b
    6cc6:	00 97       	sbiw	r24, 0x00	; 0
    6cc8:	69 f0       	breq	.+26     	; 0x6ce4 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x350>
    6cca:	8a 85       	ldd	r24, Y+10	; 0x0a
    6ccc:	9b 85       	ldd	r25, Y+11	; 0x0b
    6cce:	fc 01       	movw	r30, r24
    6cd0:	80 81       	ld	r24, Z
    6cd2:	91 81       	ldd	r25, Z+1	; 0x01
    6cd4:	02 96       	adiw	r24, 0x02	; 2
    6cd6:	fc 01       	movw	r30, r24
    6cd8:	20 81       	ld	r18, Z
    6cda:	31 81       	ldd	r19, Z+1	; 0x01
    6cdc:	8a 85       	ldd	r24, Y+10	; 0x0a
    6cde:	9b 85       	ldd	r25, Y+11	; 0x0b
    6ce0:	f9 01       	movw	r30, r18
    6ce2:	19 95       	eicall
		}
	}
	
	//Update instrumentation fields
	switch (status)
    6ce4:	89 81       	ldd	r24, Y+1	; 0x01
    6ce6:	9a 81       	ldd	r25, Y+2	; 0x02
    6ce8:	8e 3f       	cpi	r24, 0xFE	; 254
    6cea:	ff ef       	ldi	r31, 0xFF	; 255
    6cec:	9f 07       	cpc	r25, r31
    6cee:	41 f1       	breq	.+80     	; 0x6d40 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x3ac>
    6cf0:	8f 3f       	cpi	r24, 0xFF	; 255
    6cf2:	2f ef       	ldi	r18, 0xFF	; 255
    6cf4:	92 07       	cpc	r25, r18
    6cf6:	2c f4       	brge	.+10     	; 0x6d02 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x36e>
    6cf8:	8d 3f       	cpi	r24, 0xFD	; 253
    6cfa:	ef ef       	ldi	r30, 0xFF	; 255
    6cfc:	9e 07       	cpc	r25, r30
    6cfe:	b9 f1       	breq	.+110    	; 0x6d6e <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x3da>
    6d00:	4d c0       	rjmp	.+154    	; 0x6d9c <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x408>
    6d02:	8f 3f       	cpi	r24, 0xFF	; 255
    6d04:	ff ef       	ldi	r31, 0xFF	; 255
    6d06:	9f 07       	cpc	r25, r31
    6d08:	21 f0       	breq	.+8      	; 0x6d12 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x37e>
    6d0a:	00 97       	sbiw	r24, 0x00	; 0
    6d0c:	09 f4       	brne	.+2      	; 0x6d10 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x37c>
    6d0e:	47 c0       	rjmp	.+142    	; 0x6d9e <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x40a>
    6d10:	45 c0       	rjmp	.+138    	; 0x6d9c <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x408>
	{
		case 0:
			break;
		case -1:
			model->Timeouts(model->Timeouts() + 1);
    6d12:	8c 85       	ldd	r24, Y+12	; 0x0c
    6d14:	9d 85       	ldd	r25, Y+13	; 0x0d
    6d16:	fc 01       	movw	r30, r24
    6d18:	81 85       	ldd	r24, Z+9	; 0x09
    6d1a:	92 85       	ldd	r25, Z+10	; 0x0a
    6d1c:	0e 94 21 22 	call	0x4442	; 0x4442 <_ZNK10helicopter5model11SystemModel8TimeoutsEv>
    6d20:	dc 01       	movw	r26, r24
    6d22:	cb 01       	movw	r24, r22
    6d24:	01 96       	adiw	r24, 0x01	; 1
    6d26:	a1 1d       	adc	r26, r1
    6d28:	b1 1d       	adc	r27, r1
    6d2a:	2c 85       	ldd	r18, Y+12	; 0x0c
    6d2c:	3d 85       	ldd	r19, Y+13	; 0x0d
    6d2e:	f9 01       	movw	r30, r18
    6d30:	21 85       	ldd	r18, Z+9	; 0x09
    6d32:	32 85       	ldd	r19, Z+10	; 0x0a
    6d34:	ac 01       	movw	r20, r24
    6d36:	bd 01       	movw	r22, r26
    6d38:	c9 01       	movw	r24, r18
    6d3a:	0e 94 39 22 	call	0x4472	; 0x4472 <_ZN10helicopter5model11SystemModel8TimeoutsEl>
			break;
    6d3e:	30 c0       	rjmp	.+96     	; 0x6da0 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x40c>
		case -2:
			model->UnrecognizedMsgTypes(model->UnrecognizedMsgTypes() + 1);
    6d40:	8c 85       	ldd	r24, Y+12	; 0x0c
    6d42:	9d 85       	ldd	r25, Y+13	; 0x0d
    6d44:	fc 01       	movw	r30, r24
    6d46:	81 85       	ldd	r24, Z+9	; 0x09
    6d48:	92 85       	ldd	r25, Z+10	; 0x0a
    6d4a:	0e 94 5c 22 	call	0x44b8	; 0x44b8 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>
    6d4e:	dc 01       	movw	r26, r24
    6d50:	cb 01       	movw	r24, r22
    6d52:	01 96       	adiw	r24, 0x01	; 1
    6d54:	a1 1d       	adc	r26, r1
    6d56:	b1 1d       	adc	r27, r1
    6d58:	2c 85       	ldd	r18, Y+12	; 0x0c
    6d5a:	3d 85       	ldd	r19, Y+13	; 0x0d
    6d5c:	f9 01       	movw	r30, r18
    6d5e:	21 85       	ldd	r18, Z+9	; 0x09
    6d60:	32 85       	ldd	r19, Z+10	; 0x0a
    6d62:	ac 01       	movw	r20, r24
    6d64:	bd 01       	movw	r22, r26
    6d66:	c9 01       	movw	r24, r18
    6d68:	0e 94 74 22 	call	0x44e8	; 0x44e8 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl>
			break;
    6d6c:	19 c0       	rjmp	.+50     	; 0x6da0 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x40c>
		case -3:
			model->ChecksumErrors(model->ChecksumErrors() + 1);
    6d6e:	8c 85       	ldd	r24, Y+12	; 0x0c
    6d70:	9d 85       	ldd	r25, Y+13	; 0x0d
    6d72:	fc 01       	movw	r30, r24
    6d74:	81 85       	ldd	r24, Z+9	; 0x09
    6d76:	92 85       	ldd	r25, Z+10	; 0x0a
    6d78:	0e 94 97 22 	call	0x452e	; 0x452e <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>
    6d7c:	dc 01       	movw	r26, r24
    6d7e:	cb 01       	movw	r24, r22
    6d80:	01 96       	adiw	r24, 0x01	; 1
    6d82:	a1 1d       	adc	r26, r1
    6d84:	b1 1d       	adc	r27, r1
    6d86:	2c 85       	ldd	r18, Y+12	; 0x0c
    6d88:	3d 85       	ldd	r19, Y+13	; 0x0d
    6d8a:	f9 01       	movw	r30, r18
    6d8c:	21 85       	ldd	r18, Z+9	; 0x09
    6d8e:	32 85       	ldd	r19, Z+10	; 0x0a
    6d90:	ac 01       	movw	r20, r24
    6d92:	bd 01       	movw	r22, r26
    6d94:	c9 01       	movw	r24, r18
    6d96:	0e 94 af 22 	call	0x455e	; 0x455e <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl>
		default:
			break;
    6d9a:	02 c0       	rjmp	.+4      	; 0x6da0 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x40c>
    6d9c:	01 c0       	rjmp	.+2      	; 0x6da0 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x40c>
	
	//Update instrumentation fields
	switch (status)
	{
		case 0:
			break;
    6d9e:	00 00       	nop
		case -3:
			model->ChecksumErrors(model->ChecksumErrors() + 1);
		default:
			break;
		
	}
    6da0:	ce 01       	movw	r24, r28
    6da2:	05 96       	adiw	r24, 0x05	; 5
    6da4:	0e 94 85 1e 	call	0x3d0a	; 0x3d0a <_ZN10helicopter8messages11SyncMessageD1Ev>
}
    6da8:	2d 96       	adiw	r28, 0x0d	; 13
    6daa:	0f b6       	in	r0, 0x3f	; 63
    6dac:	f8 94       	cli
    6dae:	de bf       	out	0x3e, r29	; 62
    6db0:	0f be       	out	0x3f, r0	; 63
    6db2:	cd bf       	out	0x3d, r28	; 61
    6db4:	df 91       	pop	r29
    6db6:	cf 91       	pop	r28
    6db8:	08 95       	ret

00006dba <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>:
	namespace tasks
	{
		/**
		 * Task to receive simulator telemetry data from the ground control station.
		 */
		class SimTelemetryTask : public Task
    6dba:	cf 93       	push	r28
    6dbc:	df 93       	push	r29
    6dbe:	1f 92       	push	r1
    6dc0:	1f 92       	push	r1
    6dc2:	cd b7       	in	r28, 0x3d	; 61
    6dc4:	de b7       	in	r29, 0x3e	; 62
    6dc6:	9a 83       	std	Y+2, r25	; 0x02
    6dc8:	89 83       	std	Y+1, r24	; 0x01
    6dca:	89 81       	ldd	r24, Y+1	; 0x01
    6dcc:	9a 81       	ldd	r25, Y+2	; 0x02
    6dce:	2e e7       	ldi	r18, 0x7E	; 126
    6dd0:	32 e0       	ldi	r19, 0x02	; 2
    6dd2:	fc 01       	movw	r30, r24
    6dd4:	31 83       	std	Z+1, r19	; 0x01
    6dd6:	20 83       	st	Z, r18
    6dd8:	89 81       	ldd	r24, Y+1	; 0x01
    6dda:	9a 81       	ldd	r25, Y+2	; 0x02
    6ddc:	0e 94 4c 11 	call	0x2298	; 0x2298 <_ZN10helicopter5tasks4TaskD1Ev>
    6de0:	80 e0       	ldi	r24, 0x00	; 0
    6de2:	90 e0       	ldi	r25, 0x00	; 0
    6de4:	81 70       	andi	r24, 0x01	; 1
    6de6:	99 27       	eor	r25, r25
    6de8:	00 97       	sbiw	r24, 0x00	; 0
    6dea:	21 f0       	breq	.+8      	; 0x6df4 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev+0x3a>
    6dec:	89 81       	ldd	r24, Y+1	; 0x01
    6dee:	9a 81       	ldd	r25, Y+2	; 0x02
    6df0:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    6df4:	0f 90       	pop	r0
    6df6:	0f 90       	pop	r0
    6df8:	df 91       	pop	r29
    6dfa:	cf 91       	pop	r28
    6dfc:	08 95       	ret

00006dfe <_ZN10helicopter5tasks16SimTelemetryTaskD0Ev>:
    6dfe:	cf 93       	push	r28
    6e00:	df 93       	push	r29
    6e02:	1f 92       	push	r1
    6e04:	1f 92       	push	r1
    6e06:	cd b7       	in	r28, 0x3d	; 61
    6e08:	de b7       	in	r29, 0x3e	; 62
    6e0a:	9a 83       	std	Y+2, r25	; 0x02
    6e0c:	89 83       	std	Y+1, r24	; 0x01
    6e0e:	89 81       	ldd	r24, Y+1	; 0x01
    6e10:	9a 81       	ldd	r25, Y+2	; 0x02
    6e12:	0e 94 dd 36 	call	0x6dba	; 0x6dba <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>
    6e16:	89 81       	ldd	r24, Y+1	; 0x01
    6e18:	9a 81       	ldd	r25, Y+2	; 0x02
    6e1a:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    6e1e:	0f 90       	pop	r0
    6e20:	0f 90       	pop	r0
    6e22:	df 91       	pop	r29
    6e24:	cf 91       	pop	r28
    6e26:	08 95       	ret

00006e28 <_ZN10helicopter5tasks4Task11runTaskImplEv>:
				
			protected:
				/**
				* Implemented by subclasses for the actual logic to execute
				*/
				virtual void runTaskImpl(){;}
    6e28:	cf 93       	push	r28
    6e2a:	df 93       	push	r29
    6e2c:	1f 92       	push	r1
    6e2e:	1f 92       	push	r1
    6e30:	cd b7       	in	r28, 0x3d	; 61
    6e32:	de b7       	in	r29, 0x3e	; 62
    6e34:	9a 83       	std	Y+2, r25	; 0x02
    6e36:	89 83       	std	Y+1, r24	; 0x01
    6e38:	0f 90       	pop	r0
    6e3a:	0f 90       	pop	r0
    6e3c:	df 91       	pop	r29
    6e3e:	cf 91       	pop	r28
    6e40:	08 95       	ret

00006e42 <_ZN10helicopter5tasks4TaskC1Eii>:
#include <avr/interrupt.h>
#include "Task.h"

using namespace helicopter::tasks;

Task::Task(int delay, int period)
    6e42:	cf 93       	push	r28
    6e44:	df 93       	push	r29
    6e46:	00 d0       	rcall	.+0      	; 0x6e48 <_ZN10helicopter5tasks4TaskC1Eii+0x6>
    6e48:	00 d0       	rcall	.+0      	; 0x6e4a <_ZN10helicopter5tasks4TaskC1Eii+0x8>
    6e4a:	cd b7       	in	r28, 0x3d	; 61
    6e4c:	de b7       	in	r29, 0x3e	; 62
    6e4e:	9a 83       	std	Y+2, r25	; 0x02
    6e50:	89 83       	std	Y+1, r24	; 0x01
    6e52:	7c 83       	std	Y+4, r23	; 0x04
    6e54:	6b 83       	std	Y+3, r22	; 0x03
    6e56:	5e 83       	std	Y+6, r21	; 0x06
    6e58:	4d 83       	std	Y+5, r20	; 0x05
    6e5a:	89 81       	ldd	r24, Y+1	; 0x01
    6e5c:	9a 81       	ldd	r25, Y+2	; 0x02
    6e5e:	2c e8       	ldi	r18, 0x8C	; 140
    6e60:	32 e0       	ldi	r19, 0x02	; 2
    6e62:	fc 01       	movw	r30, r24
    6e64:	31 83       	std	Z+1, r19	; 0x01
    6e66:	20 83       	st	Z, r18
{
	this->delay = delay;
    6e68:	89 81       	ldd	r24, Y+1	; 0x01
    6e6a:	9a 81       	ldd	r25, Y+2	; 0x02
    6e6c:	2b 81       	ldd	r18, Y+3	; 0x03
    6e6e:	3c 81       	ldd	r19, Y+4	; 0x04
    6e70:	fc 01       	movw	r30, r24
    6e72:	33 83       	std	Z+3, r19	; 0x03
    6e74:	22 83       	std	Z+2, r18	; 0x02
	this->period = period;
    6e76:	89 81       	ldd	r24, Y+1	; 0x01
    6e78:	9a 81       	ldd	r25, Y+2	; 0x02
    6e7a:	2d 81       	ldd	r18, Y+5	; 0x05
    6e7c:	3e 81       	ldd	r19, Y+6	; 0x06
    6e7e:	fc 01       	movw	r30, r24
    6e80:	35 83       	std	Z+5, r19	; 0x05
    6e82:	24 83       	std	Z+4, r18	; 0x04
	this->isReadyToRun = false;
    6e84:	89 81       	ldd	r24, Y+1	; 0x01
    6e86:	9a 81       	ldd	r25, Y+2	; 0x02
    6e88:	fc 01       	movw	r30, r24
    6e8a:	16 82       	std	Z+6, r1	; 0x06
}
    6e8c:	26 96       	adiw	r28, 0x06	; 6
    6e8e:	0f b6       	in	r0, 0x3f	; 63
    6e90:	f8 94       	cli
    6e92:	de bf       	out	0x3e, r29	; 62
    6e94:	0f be       	out	0x3f, r0	; 63
    6e96:	cd bf       	out	0x3d, r28	; 61
    6e98:	df 91       	pop	r29
    6e9a:	cf 91       	pop	r28
    6e9c:	08 95       	ret

00006e9e <_ZN10helicopter5tasks4Task7runTaskEv>:

void Task::runTask()
{
    6e9e:	cf 93       	push	r28
    6ea0:	df 93       	push	r29
    6ea2:	1f 92       	push	r1
    6ea4:	1f 92       	push	r1
    6ea6:	cd b7       	in	r28, 0x3d	; 61
    6ea8:	de b7       	in	r29, 0x3e	; 62
    6eaa:	9a 83       	std	Y+2, r25	; 0x02
    6eac:	89 83       	std	Y+1, r24	; 0x01
	//Disable interrupts 
	cli();
    6eae:	f8 94       	cli
	
	//run task
	this->runTaskImpl();
    6eb0:	89 81       	ldd	r24, Y+1	; 0x01
    6eb2:	9a 81       	ldd	r25, Y+2	; 0x02
    6eb4:	fc 01       	movw	r30, r24
    6eb6:	80 81       	ld	r24, Z
    6eb8:	91 81       	ldd	r25, Z+1	; 0x01
    6eba:	fc 01       	movw	r30, r24
    6ebc:	20 81       	ld	r18, Z
    6ebe:	31 81       	ldd	r19, Z+1	; 0x01
    6ec0:	89 81       	ldd	r24, Y+1	; 0x01
    6ec2:	9a 81       	ldd	r25, Y+2	; 0x02
    6ec4:	f9 01       	movw	r30, r18
    6ec6:	19 95       	eicall
	
	//Re-enable interrupts
	sei();
    6ec8:	78 94       	sei
    6eca:	0f 90       	pop	r0
    6ecc:	0f 90       	pop	r0
    6ece:	df 91       	pop	r29
    6ed0:	cf 91       	pop	r28
    6ed2:	08 95       	ret

00006ed4 <_ZN10helicopter5tasks21TransmitTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEii>:
#include "TransmitTelemetryTask.h"
#include "SystemTelemetryMessage.h"

using namespace helicopter::tasks;

TransmitTelemetryTask::TransmitTelemetryTask(GroundControlStationInterface *radioInterface, SystemModel *model, int delay, int period) :
    6ed4:	0f 93       	push	r16
    6ed6:	1f 93       	push	r17
    6ed8:	cf 93       	push	r28
    6eda:	df 93       	push	r29
    6edc:	cd b7       	in	r28, 0x3d	; 61
    6ede:	de b7       	in	r29, 0x3e	; 62
    6ee0:	2a 97       	sbiw	r28, 0x0a	; 10
    6ee2:	0f b6       	in	r0, 0x3f	; 63
    6ee4:	f8 94       	cli
    6ee6:	de bf       	out	0x3e, r29	; 62
    6ee8:	0f be       	out	0x3f, r0	; 63
    6eea:	cd bf       	out	0x3d, r28	; 61
    6eec:	9a 83       	std	Y+2, r25	; 0x02
    6eee:	89 83       	std	Y+1, r24	; 0x01
    6ef0:	7c 83       	std	Y+4, r23	; 0x04
    6ef2:	6b 83       	std	Y+3, r22	; 0x03
    6ef4:	5e 83       	std	Y+6, r21	; 0x06
    6ef6:	4d 83       	std	Y+5, r20	; 0x05
    6ef8:	38 87       	std	Y+8, r19	; 0x08
    6efa:	2f 83       	std	Y+7, r18	; 0x07
    6efc:	1a 87       	std	Y+10, r17	; 0x0a
    6efe:	09 87       	std	Y+9, r16	; 0x09
	Task(delay, period),
	radioInterface(radioInterface),
	model(model)
    6f00:	89 81       	ldd	r24, Y+1	; 0x01
    6f02:	9a 81       	ldd	r25, Y+2	; 0x02
    6f04:	49 85       	ldd	r20, Y+9	; 0x09
    6f06:	5a 85       	ldd	r21, Y+10	; 0x0a
    6f08:	2f 81       	ldd	r18, Y+7	; 0x07
    6f0a:	38 85       	ldd	r19, Y+8	; 0x08
    6f0c:	b9 01       	movw	r22, r18
    6f0e:	0e 94 21 37 	call	0x6e42	; 0x6e42 <_ZN10helicopter5tasks4TaskC1Eii>
    6f12:	89 81       	ldd	r24, Y+1	; 0x01
    6f14:	9a 81       	ldd	r25, Y+2	; 0x02
    6f16:	2a e9       	ldi	r18, 0x9A	; 154
    6f18:	32 e0       	ldi	r19, 0x02	; 2
    6f1a:	fc 01       	movw	r30, r24
    6f1c:	31 83       	std	Z+1, r19	; 0x01
    6f1e:	20 83       	st	Z, r18
    6f20:	89 81       	ldd	r24, Y+1	; 0x01
    6f22:	9a 81       	ldd	r25, Y+2	; 0x02
    6f24:	2b 81       	ldd	r18, Y+3	; 0x03
    6f26:	3c 81       	ldd	r19, Y+4	; 0x04
    6f28:	fc 01       	movw	r30, r24
    6f2a:	30 87       	std	Z+8, r19	; 0x08
    6f2c:	27 83       	std	Z+7, r18	; 0x07
    6f2e:	89 81       	ldd	r24, Y+1	; 0x01
    6f30:	9a 81       	ldd	r25, Y+2	; 0x02
    6f32:	2d 81       	ldd	r18, Y+5	; 0x05
    6f34:	3e 81       	ldd	r19, Y+6	; 0x06
    6f36:	fc 01       	movw	r30, r24
    6f38:	32 87       	std	Z+10, r19	; 0x0a
    6f3a:	21 87       	std	Z+9, r18	; 0x09
{
	
}
    6f3c:	2a 96       	adiw	r28, 0x0a	; 10
    6f3e:	0f b6       	in	r0, 0x3f	; 63
    6f40:	f8 94       	cli
    6f42:	de bf       	out	0x3e, r29	; 62
    6f44:	0f be       	out	0x3f, r0	; 63
    6f46:	cd bf       	out	0x3d, r28	; 61
    6f48:	df 91       	pop	r29
    6f4a:	cf 91       	pop	r28
    6f4c:	1f 91       	pop	r17
    6f4e:	0f 91       	pop	r16
    6f50:	08 95       	ret

00006f52 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv>:


void TransmitTelemetryTask::runTaskImpl()
{
    6f52:	cf 93       	push	r28
    6f54:	df 93       	push	r29
    6f56:	00 d0       	rcall	.+0      	; 0x6f58 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv+0x6>
    6f58:	1f 92       	push	r1
    6f5a:	cd b7       	in	r28, 0x3d	; 61
    6f5c:	de b7       	in	r29, 0x3e	; 62
    6f5e:	9c 83       	std	Y+4, r25	; 0x04
    6f60:	8b 83       	std	Y+3, r24	; 0x03
	//SystemTelemetryMessage *message = model->CreateTelemetryMessage();
	SystemTelemetryMessage *message = SystemTelemetryMessage::buildMessageFromModel(model);
    6f62:	8b 81       	ldd	r24, Y+3	; 0x03
    6f64:	9c 81       	ldd	r25, Y+4	; 0x04
    6f66:	fc 01       	movw	r30, r24
    6f68:	81 85       	ldd	r24, Z+9	; 0x09
    6f6a:	92 85       	ldd	r25, Z+10	; 0x0a
    6f6c:	0e 94 59 2a 	call	0x54b2	; 0x54b2 <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE>
    6f70:	9a 83       	std	Y+2, r25	; 0x02
    6f72:	89 83       	std	Y+1, r24	; 0x01
	
	//TODO add some error handling in here
	radioInterface->transmit(message);
    6f74:	8b 81       	ldd	r24, Y+3	; 0x03
    6f76:	9c 81       	ldd	r25, Y+4	; 0x04
    6f78:	fc 01       	movw	r30, r24
    6f7a:	87 81       	ldd	r24, Z+7	; 0x07
    6f7c:	90 85       	ldd	r25, Z+8	; 0x08
    6f7e:	29 81       	ldd	r18, Y+1	; 0x01
    6f80:	3a 81       	ldd	r19, Y+2	; 0x02
    6f82:	b9 01       	movw	r22, r18
    6f84:	0e 94 90 1b 	call	0x3720	; 0x3720 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>
	
	delete message;
    6f88:	89 81       	ldd	r24, Y+1	; 0x01
    6f8a:	9a 81       	ldd	r25, Y+2	; 0x02
    6f8c:	00 97       	sbiw	r24, 0x00	; 0
    6f8e:	69 f0       	breq	.+26     	; 0x6faa <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv+0x58>
    6f90:	89 81       	ldd	r24, Y+1	; 0x01
    6f92:	9a 81       	ldd	r25, Y+2	; 0x02
    6f94:	fc 01       	movw	r30, r24
    6f96:	80 81       	ld	r24, Z
    6f98:	91 81       	ldd	r25, Z+1	; 0x01
    6f9a:	02 96       	adiw	r24, 0x02	; 2
    6f9c:	fc 01       	movw	r30, r24
    6f9e:	20 81       	ld	r18, Z
    6fa0:	31 81       	ldd	r19, Z+1	; 0x01
    6fa2:	89 81       	ldd	r24, Y+1	; 0x01
    6fa4:	9a 81       	ldd	r25, Y+2	; 0x02
    6fa6:	f9 01       	movw	r30, r18
    6fa8:	19 95       	eicall
    6faa:	0f 90       	pop	r0
    6fac:	0f 90       	pop	r0
    6fae:	0f 90       	pop	r0
    6fb0:	0f 90       	pop	r0
    6fb2:	df 91       	pop	r29
    6fb4:	cf 91       	pop	r28
    6fb6:	08 95       	ret

00006fb8 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class transmits flight computer telemetry information to the ground control station.
		 */
		class TransmitTelemetryTask : public Task
    6fb8:	cf 93       	push	r28
    6fba:	df 93       	push	r29
    6fbc:	1f 92       	push	r1
    6fbe:	1f 92       	push	r1
    6fc0:	cd b7       	in	r28, 0x3d	; 61
    6fc2:	de b7       	in	r29, 0x3e	; 62
    6fc4:	9a 83       	std	Y+2, r25	; 0x02
    6fc6:	89 83       	std	Y+1, r24	; 0x01
    6fc8:	89 81       	ldd	r24, Y+1	; 0x01
    6fca:	9a 81       	ldd	r25, Y+2	; 0x02
    6fcc:	2a e9       	ldi	r18, 0x9A	; 154
    6fce:	32 e0       	ldi	r19, 0x02	; 2
    6fd0:	fc 01       	movw	r30, r24
    6fd2:	31 83       	std	Z+1, r19	; 0x01
    6fd4:	20 83       	st	Z, r18
    6fd6:	89 81       	ldd	r24, Y+1	; 0x01
    6fd8:	9a 81       	ldd	r25, Y+2	; 0x02
    6fda:	0e 94 4c 11 	call	0x2298	; 0x2298 <_ZN10helicopter5tasks4TaskD1Ev>
    6fde:	80 e0       	ldi	r24, 0x00	; 0
    6fe0:	90 e0       	ldi	r25, 0x00	; 0
    6fe2:	81 70       	andi	r24, 0x01	; 1
    6fe4:	99 27       	eor	r25, r25
    6fe6:	00 97       	sbiw	r24, 0x00	; 0
    6fe8:	21 f0       	breq	.+8      	; 0x6ff2 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev+0x3a>
    6fea:	89 81       	ldd	r24, Y+1	; 0x01
    6fec:	9a 81       	ldd	r25, Y+2	; 0x02
    6fee:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    6ff2:	0f 90       	pop	r0
    6ff4:	0f 90       	pop	r0
    6ff6:	df 91       	pop	r29
    6ff8:	cf 91       	pop	r28
    6ffa:	08 95       	ret

00006ffc <_ZN10helicopter5tasks21TransmitTelemetryTaskD0Ev>:
    6ffc:	cf 93       	push	r28
    6ffe:	df 93       	push	r29
    7000:	1f 92       	push	r1
    7002:	1f 92       	push	r1
    7004:	cd b7       	in	r28, 0x3d	; 61
    7006:	de b7       	in	r29, 0x3e	; 62
    7008:	9a 83       	std	Y+2, r25	; 0x02
    700a:	89 83       	std	Y+1, r24	; 0x01
    700c:	89 81       	ldd	r24, Y+1	; 0x01
    700e:	9a 81       	ldd	r25, Y+2	; 0x02
    7010:	0e 94 dc 37 	call	0x6fb8	; 0x6fb8 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>
    7014:	89 81       	ldd	r24, Y+1	; 0x01
    7016:	9a 81       	ldd	r25, Y+2	; 0x02
    7018:	0e 94 24 38 	call	0x7048	; 0x7048 <_ZdlPv>
    701c:	0f 90       	pop	r0
    701e:	0f 90       	pop	r0
    7020:	df 91       	pop	r29
    7022:	cf 91       	pop	r28
    7024:	08 95       	ret

00007026 <_Znwj>:
 *  Author: HP User
 */ 
#include <CommonHeader.h>

void * operator new(size_t size)
{
    7026:	cf 93       	push	r28
    7028:	df 93       	push	r29
    702a:	1f 92       	push	r1
    702c:	1f 92       	push	r1
    702e:	cd b7       	in	r28, 0x3d	; 61
    7030:	de b7       	in	r29, 0x3e	; 62
    7032:	9a 83       	std	Y+2, r25	; 0x02
    7034:	89 83       	std	Y+1, r24	; 0x01
	return malloc(size);
    7036:	89 81       	ldd	r24, Y+1	; 0x01
    7038:	9a 81       	ldd	r25, Y+2	; 0x02
    703a:	0e 94 be 42 	call	0x857c	; 0x857c <malloc>
}
    703e:	0f 90       	pop	r0
    7040:	0f 90       	pop	r0
    7042:	df 91       	pop	r29
    7044:	cf 91       	pop	r28
    7046:	08 95       	ret

00007048 <_ZdlPv>:

void operator delete(void * ptr)
{
    7048:	cf 93       	push	r28
    704a:	df 93       	push	r29
    704c:	1f 92       	push	r1
    704e:	1f 92       	push	r1
    7050:	cd b7       	in	r28, 0x3d	; 61
    7052:	de b7       	in	r29, 0x3e	; 62
    7054:	9a 83       	std	Y+2, r25	; 0x02
    7056:	89 83       	std	Y+1, r24	; 0x01
	if (ptr != NULL)
    7058:	89 81       	ldd	r24, Y+1	; 0x01
    705a:	9a 81       	ldd	r25, Y+2	; 0x02
    705c:	00 97       	sbiw	r24, 0x00	; 0
    705e:	21 f0       	breq	.+8      	; 0x7068 <_ZdlPv+0x20>
	{
		free(ptr);
    7060:	89 81       	ldd	r24, Y+1	; 0x01
    7062:	9a 81       	ldd	r25, Y+2	; 0x02
    7064:	0e 94 59 43 	call	0x86b2	; 0x86b2 <free>
	}
}
    7068:	0f 90       	pop	r0
    706a:	0f 90       	pop	r0
    706c:	df 91       	pop	r29
    706e:	cf 91       	pop	r28
    7070:	08 95       	ret

00007072 <_Znaj>:

void * operator new[](size_t size)
{
    7072:	cf 93       	push	r28
    7074:	df 93       	push	r29
    7076:	1f 92       	push	r1
    7078:	1f 92       	push	r1
    707a:	cd b7       	in	r28, 0x3d	; 61
    707c:	de b7       	in	r29, 0x3e	; 62
    707e:	9a 83       	std	Y+2, r25	; 0x02
    7080:	89 83       	std	Y+1, r24	; 0x01
	return malloc(size);
    7082:	89 81       	ldd	r24, Y+1	; 0x01
    7084:	9a 81       	ldd	r25, Y+2	; 0x02
    7086:	0e 94 be 42 	call	0x857c	; 0x857c <malloc>
}
    708a:	0f 90       	pop	r0
    708c:	0f 90       	pop	r0
    708e:	df 91       	pop	r29
    7090:	cf 91       	pop	r28
    7092:	08 95       	ret

00007094 <_ZdaPv>:

void operator delete[](void * ptr)
{
    7094:	cf 93       	push	r28
    7096:	df 93       	push	r29
    7098:	1f 92       	push	r1
    709a:	1f 92       	push	r1
    709c:	cd b7       	in	r28, 0x3d	; 61
    709e:	de b7       	in	r29, 0x3e	; 62
    70a0:	9a 83       	std	Y+2, r25	; 0x02
    70a2:	89 83       	std	Y+1, r24	; 0x01
	if(ptr != NULL)
    70a4:	89 81       	ldd	r24, Y+1	; 0x01
    70a6:	9a 81       	ldd	r25, Y+2	; 0x02
    70a8:	00 97       	sbiw	r24, 0x00	; 0
    70aa:	21 f0       	breq	.+8      	; 0x70b4 <_ZdaPv+0x20>
	{
		free(ptr);
    70ac:	89 81       	ldd	r24, Y+1	; 0x01
    70ae:	9a 81       	ldd	r25, Y+2	; 0x02
    70b0:	0e 94 59 43 	call	0x86b2	; 0x86b2 <free>
	}
	
    70b4:	0f 90       	pop	r0
    70b6:	0f 90       	pop	r0
    70b8:	df 91       	pop	r29
    70ba:	cf 91       	pop	r28
    70bc:	08 95       	ret

000070be <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>:


using namespace helicopter::util;

float CoordinateUtil::DegreesToRad(float valueDegrees)
{
    70be:	cf 93       	push	r28
    70c0:	df 93       	push	r29
    70c2:	00 d0       	rcall	.+0      	; 0x70c4 <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf+0x6>
    70c4:	1f 92       	push	r1
    70c6:	cd b7       	in	r28, 0x3d	; 61
    70c8:	de b7       	in	r29, 0x3e	; 62
    70ca:	69 83       	std	Y+1, r22	; 0x01
    70cc:	7a 83       	std	Y+2, r23	; 0x02
    70ce:	8b 83       	std	Y+3, r24	; 0x03
    70d0:	9c 83       	std	Y+4, r25	; 0x04
	return valueDegrees * (M_PI / 180.0);
    70d2:	25 e3       	ldi	r18, 0x35	; 53
    70d4:	3a ef       	ldi	r19, 0xFA	; 250
    70d6:	4e e8       	ldi	r20, 0x8E	; 142
    70d8:	5c e3       	ldi	r21, 0x3C	; 60
    70da:	69 81       	ldd	r22, Y+1	; 0x01
    70dc:	7a 81       	ldd	r23, Y+2	; 0x02
    70de:	8b 81       	ldd	r24, Y+3	; 0x03
    70e0:	9c 81       	ldd	r25, Y+4	; 0x04
    70e2:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    70e6:	dc 01       	movw	r26, r24
    70e8:	cb 01       	movw	r24, r22
}
    70ea:	bc 01       	movw	r22, r24
    70ec:	cd 01       	movw	r24, r26
    70ee:	0f 90       	pop	r0
    70f0:	0f 90       	pop	r0
    70f2:	0f 90       	pop	r0
    70f4:	0f 90       	pop	r0
    70f6:	df 91       	pop	r29
    70f8:	cf 91       	pop	r28
    70fa:	08 95       	ret

000070fc <_ZN10helicopter4util14CoordinateUtil37CalculateECEFToLocalNEDRotationMatrixEffPA3_f>:

void CoordinateUtil::CalculateECEFToLocalNEDRotationMatrix(float latitudeDegrees, float longitudeDegrees, float  ecefToLocalNEDRotationMatrix[][3])
{
    70fc:	cf 92       	push	r12
    70fe:	df 92       	push	r13
    7100:	ef 92       	push	r14
    7102:	ff 92       	push	r15
    7104:	0f 93       	push	r16
    7106:	1f 93       	push	r17
    7108:	cf 93       	push	r28
    710a:	df 93       	push	r29
    710c:	cd b7       	in	r28, 0x3d	; 61
    710e:	de b7       	in	r29, 0x3e	; 62
    7110:	62 97       	sbiw	r28, 0x12	; 18
    7112:	0f b6       	in	r0, 0x3f	; 63
    7114:	f8 94       	cli
    7116:	de bf       	out	0x3e, r29	; 62
    7118:	0f be       	out	0x3f, r0	; 63
    711a:	cd bf       	out	0x3d, r28	; 61
    711c:	69 87       	std	Y+9, r22	; 0x09
    711e:	7a 87       	std	Y+10, r23	; 0x0a
    7120:	8b 87       	std	Y+11, r24	; 0x0b
    7122:	9c 87       	std	Y+12, r25	; 0x0c
    7124:	2d 87       	std	Y+13, r18	; 0x0d
    7126:	3e 87       	std	Y+14, r19	; 0x0e
    7128:	4f 87       	std	Y+15, r20	; 0x0f
    712a:	58 8b       	std	Y+16, r21	; 0x10
    712c:	1a 8b       	std	Y+18, r17	; 0x12
    712e:	09 8b       	std	Y+17, r16	; 0x11
	float radLat = DegreesToRad(latitudeDegrees);
    7130:	89 85       	ldd	r24, Y+9	; 0x09
    7132:	9a 85       	ldd	r25, Y+10	; 0x0a
    7134:	ab 85       	ldd	r26, Y+11	; 0x0b
    7136:	bc 85       	ldd	r27, Y+12	; 0x0c
    7138:	bc 01       	movw	r22, r24
    713a:	cd 01       	movw	r24, r26
    713c:	0e 94 5f 38 	call	0x70be	; 0x70be <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    7140:	dc 01       	movw	r26, r24
    7142:	cb 01       	movw	r24, r22
    7144:	89 83       	std	Y+1, r24	; 0x01
    7146:	9a 83       	std	Y+2, r25	; 0x02
    7148:	ab 83       	std	Y+3, r26	; 0x03
    714a:	bc 83       	std	Y+4, r27	; 0x04
	float radLong = DegreesToRad(longitudeDegrees);
    714c:	8d 85       	ldd	r24, Y+13	; 0x0d
    714e:	9e 85       	ldd	r25, Y+14	; 0x0e
    7150:	af 85       	ldd	r26, Y+15	; 0x0f
    7152:	b8 89       	ldd	r27, Y+16	; 0x10
    7154:	bc 01       	movw	r22, r24
    7156:	cd 01       	movw	r24, r26
    7158:	0e 94 5f 38 	call	0x70be	; 0x70be <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    715c:	dc 01       	movw	r26, r24
    715e:	cb 01       	movw	r24, r22
    7160:	8d 83       	std	Y+5, r24	; 0x05
    7162:	9e 83       	std	Y+6, r25	; 0x06
    7164:	af 83       	std	Y+7, r26	; 0x07
    7166:	b8 87       	std	Y+8, r27	; 0x08

	
	ecefToLocalNEDRotationMatrix[0][0] = -1 * sin(radLat) * cos(radLong);
    7168:	89 81       	ldd	r24, Y+1	; 0x01
    716a:	9a 81       	ldd	r25, Y+2	; 0x02
    716c:	ab 81       	ldd	r26, Y+3	; 0x03
    716e:	bc 81       	ldd	r27, Y+4	; 0x04
    7170:	bc 01       	movw	r22, r24
    7172:	cd 01       	movw	r24, r26
    7174:	0e 94 09 41 	call	0x8212	; 0x8212 <sin>
    7178:	dc 01       	movw	r26, r24
    717a:	cb 01       	movw	r24, r22
    717c:	6c 01       	movw	r12, r24
    717e:	7d 01       	movw	r14, r26
    7180:	f7 fa       	bst	r15, 7
    7182:	f0 94       	com	r15
    7184:	f7 f8       	bld	r15, 7
    7186:	f0 94       	com	r15
    7188:	8d 81       	ldd	r24, Y+5	; 0x05
    718a:	9e 81       	ldd	r25, Y+6	; 0x06
    718c:	af 81       	ldd	r26, Y+7	; 0x07
    718e:	b8 85       	ldd	r27, Y+8	; 0x08
    7190:	bc 01       	movw	r22, r24
    7192:	cd 01       	movw	r24, r26
    7194:	0e 94 7c 3e 	call	0x7cf8	; 0x7cf8 <cos>
    7198:	dc 01       	movw	r26, r24
    719a:	cb 01       	movw	r24, r22
    719c:	9c 01       	movw	r18, r24
    719e:	ad 01       	movw	r20, r26
    71a0:	c7 01       	movw	r24, r14
    71a2:	b6 01       	movw	r22, r12
    71a4:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    71a8:	dc 01       	movw	r26, r24
    71aa:	cb 01       	movw	r24, r22
    71ac:	29 89       	ldd	r18, Y+17	; 0x11
    71ae:	3a 89       	ldd	r19, Y+18	; 0x12
    71b0:	f9 01       	movw	r30, r18
    71b2:	80 83       	st	Z, r24
    71b4:	91 83       	std	Z+1, r25	; 0x01
    71b6:	a2 83       	std	Z+2, r26	; 0x02
    71b8:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[0][1] = -1 * sin(radLat) * sin(radLong);
    71ba:	89 81       	ldd	r24, Y+1	; 0x01
    71bc:	9a 81       	ldd	r25, Y+2	; 0x02
    71be:	ab 81       	ldd	r26, Y+3	; 0x03
    71c0:	bc 81       	ldd	r27, Y+4	; 0x04
    71c2:	bc 01       	movw	r22, r24
    71c4:	cd 01       	movw	r24, r26
    71c6:	0e 94 09 41 	call	0x8212	; 0x8212 <sin>
    71ca:	dc 01       	movw	r26, r24
    71cc:	cb 01       	movw	r24, r22
    71ce:	6c 01       	movw	r12, r24
    71d0:	7d 01       	movw	r14, r26
    71d2:	f7 fa       	bst	r15, 7
    71d4:	f0 94       	com	r15
    71d6:	f7 f8       	bld	r15, 7
    71d8:	f0 94       	com	r15
    71da:	8d 81       	ldd	r24, Y+5	; 0x05
    71dc:	9e 81       	ldd	r25, Y+6	; 0x06
    71de:	af 81       	ldd	r26, Y+7	; 0x07
    71e0:	b8 85       	ldd	r27, Y+8	; 0x08
    71e2:	bc 01       	movw	r22, r24
    71e4:	cd 01       	movw	r24, r26
    71e6:	0e 94 09 41 	call	0x8212	; 0x8212 <sin>
    71ea:	dc 01       	movw	r26, r24
    71ec:	cb 01       	movw	r24, r22
    71ee:	9c 01       	movw	r18, r24
    71f0:	ad 01       	movw	r20, r26
    71f2:	c7 01       	movw	r24, r14
    71f4:	b6 01       	movw	r22, r12
    71f6:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    71fa:	dc 01       	movw	r26, r24
    71fc:	cb 01       	movw	r24, r22
    71fe:	29 89       	ldd	r18, Y+17	; 0x11
    7200:	3a 89       	ldd	r19, Y+18	; 0x12
    7202:	f9 01       	movw	r30, r18
    7204:	84 83       	std	Z+4, r24	; 0x04
    7206:	95 83       	std	Z+5, r25	; 0x05
    7208:	a6 83       	std	Z+6, r26	; 0x06
    720a:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[0][2] = cos(radLat);
    720c:	89 81       	ldd	r24, Y+1	; 0x01
    720e:	9a 81       	ldd	r25, Y+2	; 0x02
    7210:	ab 81       	ldd	r26, Y+3	; 0x03
    7212:	bc 81       	ldd	r27, Y+4	; 0x04
    7214:	bc 01       	movw	r22, r24
    7216:	cd 01       	movw	r24, r26
    7218:	0e 94 7c 3e 	call	0x7cf8	; 0x7cf8 <cos>
    721c:	dc 01       	movw	r26, r24
    721e:	cb 01       	movw	r24, r22
    7220:	29 89       	ldd	r18, Y+17	; 0x11
    7222:	3a 89       	ldd	r19, Y+18	; 0x12
    7224:	f9 01       	movw	r30, r18
    7226:	80 87       	std	Z+8, r24	; 0x08
    7228:	91 87       	std	Z+9, r25	; 0x09
    722a:	a2 87       	std	Z+10, r26	; 0x0a
    722c:	b3 87       	std	Z+11, r27	; 0x0b
	ecefToLocalNEDRotationMatrix[1][0] = -1 * sin (radLong);
    722e:	89 89       	ldd	r24, Y+17	; 0x11
    7230:	9a 89       	ldd	r25, Y+18	; 0x12
    7232:	8c 01       	movw	r16, r24
    7234:	04 5f       	subi	r16, 0xF4	; 244
    7236:	1f 4f       	sbci	r17, 0xFF	; 255
    7238:	8d 81       	ldd	r24, Y+5	; 0x05
    723a:	9e 81       	ldd	r25, Y+6	; 0x06
    723c:	af 81       	ldd	r26, Y+7	; 0x07
    723e:	b8 85       	ldd	r27, Y+8	; 0x08
    7240:	bc 01       	movw	r22, r24
    7242:	cd 01       	movw	r24, r26
    7244:	0e 94 09 41 	call	0x8212	; 0x8212 <sin>
    7248:	dc 01       	movw	r26, r24
    724a:	cb 01       	movw	r24, r22
    724c:	b0 58       	subi	r27, 0x80	; 128
    724e:	f8 01       	movw	r30, r16
    7250:	80 83       	st	Z, r24
    7252:	91 83       	std	Z+1, r25	; 0x01
    7254:	a2 83       	std	Z+2, r26	; 0x02
    7256:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[1][1] = cos(radLong);
    7258:	89 89       	ldd	r24, Y+17	; 0x11
    725a:	9a 89       	ldd	r25, Y+18	; 0x12
    725c:	8c 01       	movw	r16, r24
    725e:	04 5f       	subi	r16, 0xF4	; 244
    7260:	1f 4f       	sbci	r17, 0xFF	; 255
    7262:	8d 81       	ldd	r24, Y+5	; 0x05
    7264:	9e 81       	ldd	r25, Y+6	; 0x06
    7266:	af 81       	ldd	r26, Y+7	; 0x07
    7268:	b8 85       	ldd	r27, Y+8	; 0x08
    726a:	bc 01       	movw	r22, r24
    726c:	cd 01       	movw	r24, r26
    726e:	0e 94 7c 3e 	call	0x7cf8	; 0x7cf8 <cos>
    7272:	dc 01       	movw	r26, r24
    7274:	cb 01       	movw	r24, r22
    7276:	f8 01       	movw	r30, r16
    7278:	84 83       	std	Z+4, r24	; 0x04
    727a:	95 83       	std	Z+5, r25	; 0x05
    727c:	a6 83       	std	Z+6, r26	; 0x06
    727e:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[1][2] = 0;
    7280:	89 89       	ldd	r24, Y+17	; 0x11
    7282:	9a 89       	ldd	r25, Y+18	; 0x12
    7284:	0c 96       	adiw	r24, 0x0c	; 12
    7286:	fc 01       	movw	r30, r24
    7288:	10 86       	std	Z+8, r1	; 0x08
    728a:	11 86       	std	Z+9, r1	; 0x09
    728c:	12 86       	std	Z+10, r1	; 0x0a
    728e:	13 86       	std	Z+11, r1	; 0x0b
	ecefToLocalNEDRotationMatrix[2][0] = -1 * cos(radLat) * cos(radLong);
    7290:	89 89       	ldd	r24, Y+17	; 0x11
    7292:	9a 89       	ldd	r25, Y+18	; 0x12
    7294:	8c 01       	movw	r16, r24
    7296:	08 5e       	subi	r16, 0xE8	; 232
    7298:	1f 4f       	sbci	r17, 0xFF	; 255
    729a:	89 81       	ldd	r24, Y+1	; 0x01
    729c:	9a 81       	ldd	r25, Y+2	; 0x02
    729e:	ab 81       	ldd	r26, Y+3	; 0x03
    72a0:	bc 81       	ldd	r27, Y+4	; 0x04
    72a2:	bc 01       	movw	r22, r24
    72a4:	cd 01       	movw	r24, r26
    72a6:	0e 94 7c 3e 	call	0x7cf8	; 0x7cf8 <cos>
    72aa:	dc 01       	movw	r26, r24
    72ac:	cb 01       	movw	r24, r22
    72ae:	6c 01       	movw	r12, r24
    72b0:	7d 01       	movw	r14, r26
    72b2:	f7 fa       	bst	r15, 7
    72b4:	f0 94       	com	r15
    72b6:	f7 f8       	bld	r15, 7
    72b8:	f0 94       	com	r15
    72ba:	8d 81       	ldd	r24, Y+5	; 0x05
    72bc:	9e 81       	ldd	r25, Y+6	; 0x06
    72be:	af 81       	ldd	r26, Y+7	; 0x07
    72c0:	b8 85       	ldd	r27, Y+8	; 0x08
    72c2:	bc 01       	movw	r22, r24
    72c4:	cd 01       	movw	r24, r26
    72c6:	0e 94 7c 3e 	call	0x7cf8	; 0x7cf8 <cos>
    72ca:	dc 01       	movw	r26, r24
    72cc:	cb 01       	movw	r24, r22
    72ce:	9c 01       	movw	r18, r24
    72d0:	ad 01       	movw	r20, r26
    72d2:	c7 01       	movw	r24, r14
    72d4:	b6 01       	movw	r22, r12
    72d6:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    72da:	dc 01       	movw	r26, r24
    72dc:	cb 01       	movw	r24, r22
    72de:	f8 01       	movw	r30, r16
    72e0:	80 83       	st	Z, r24
    72e2:	91 83       	std	Z+1, r25	; 0x01
    72e4:	a2 83       	std	Z+2, r26	; 0x02
    72e6:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[2][1] = -1 * cos(radLat)*sin(radLong);
    72e8:	89 89       	ldd	r24, Y+17	; 0x11
    72ea:	9a 89       	ldd	r25, Y+18	; 0x12
    72ec:	8c 01       	movw	r16, r24
    72ee:	08 5e       	subi	r16, 0xE8	; 232
    72f0:	1f 4f       	sbci	r17, 0xFF	; 255
    72f2:	89 81       	ldd	r24, Y+1	; 0x01
    72f4:	9a 81       	ldd	r25, Y+2	; 0x02
    72f6:	ab 81       	ldd	r26, Y+3	; 0x03
    72f8:	bc 81       	ldd	r27, Y+4	; 0x04
    72fa:	bc 01       	movw	r22, r24
    72fc:	cd 01       	movw	r24, r26
    72fe:	0e 94 7c 3e 	call	0x7cf8	; 0x7cf8 <cos>
    7302:	dc 01       	movw	r26, r24
    7304:	cb 01       	movw	r24, r22
    7306:	6c 01       	movw	r12, r24
    7308:	7d 01       	movw	r14, r26
    730a:	f7 fa       	bst	r15, 7
    730c:	f0 94       	com	r15
    730e:	f7 f8       	bld	r15, 7
    7310:	f0 94       	com	r15
    7312:	8d 81       	ldd	r24, Y+5	; 0x05
    7314:	9e 81       	ldd	r25, Y+6	; 0x06
    7316:	af 81       	ldd	r26, Y+7	; 0x07
    7318:	b8 85       	ldd	r27, Y+8	; 0x08
    731a:	bc 01       	movw	r22, r24
    731c:	cd 01       	movw	r24, r26
    731e:	0e 94 09 41 	call	0x8212	; 0x8212 <sin>
    7322:	dc 01       	movw	r26, r24
    7324:	cb 01       	movw	r24, r22
    7326:	9c 01       	movw	r18, r24
    7328:	ad 01       	movw	r20, r26
    732a:	c7 01       	movw	r24, r14
    732c:	b6 01       	movw	r22, r12
    732e:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    7332:	dc 01       	movw	r26, r24
    7334:	cb 01       	movw	r24, r22
    7336:	f8 01       	movw	r30, r16
    7338:	84 83       	std	Z+4, r24	; 0x04
    733a:	95 83       	std	Z+5, r25	; 0x05
    733c:	a6 83       	std	Z+6, r26	; 0x06
    733e:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[2][2] = -1 * sin(radLat);
    7340:	89 89       	ldd	r24, Y+17	; 0x11
    7342:	9a 89       	ldd	r25, Y+18	; 0x12
    7344:	8c 01       	movw	r16, r24
    7346:	08 5e       	subi	r16, 0xE8	; 232
    7348:	1f 4f       	sbci	r17, 0xFF	; 255
    734a:	89 81       	ldd	r24, Y+1	; 0x01
    734c:	9a 81       	ldd	r25, Y+2	; 0x02
    734e:	ab 81       	ldd	r26, Y+3	; 0x03
    7350:	bc 81       	ldd	r27, Y+4	; 0x04
    7352:	bc 01       	movw	r22, r24
    7354:	cd 01       	movw	r24, r26
    7356:	0e 94 09 41 	call	0x8212	; 0x8212 <sin>
    735a:	dc 01       	movw	r26, r24
    735c:	cb 01       	movw	r24, r22
    735e:	b0 58       	subi	r27, 0x80	; 128
    7360:	f8 01       	movw	r30, r16
    7362:	80 87       	std	Z+8, r24	; 0x08
    7364:	91 87       	std	Z+9, r25	; 0x09
    7366:	a2 87       	std	Z+10, r26	; 0x0a
    7368:	b3 87       	std	Z+11, r27	; 0x0b
}
    736a:	62 96       	adiw	r28, 0x12	; 18
    736c:	0f b6       	in	r0, 0x3f	; 63
    736e:	f8 94       	cli
    7370:	de bf       	out	0x3e, r29	; 62
    7372:	0f be       	out	0x3f, r0	; 63
    7374:	cd bf       	out	0x3d, r28	; 61
    7376:	df 91       	pop	r29
    7378:	cf 91       	pop	r28
    737a:	1f 91       	pop	r17
    737c:	0f 91       	pop	r16
    737e:	ff 90       	pop	r15
    7380:	ef 90       	pop	r14
    7382:	df 90       	pop	r13
    7384:	cf 90       	pop	r12
    7386:	08 95       	ret

00007388 <_ZN10helicopter4util14CoordinateUtil11calculateNeEff>:

float CoordinateUtil::calculateNe(float E, float latitudeRads)
{
    7388:	cf 92       	push	r12
    738a:	df 92       	push	r13
    738c:	ef 92       	push	r14
    738e:	ff 92       	push	r15
    7390:	cf 93       	push	r28
    7392:	df 93       	push	r29
    7394:	cd b7       	in	r28, 0x3d	; 61
    7396:	de b7       	in	r29, 0x3e	; 62
    7398:	28 97       	sbiw	r28, 0x08	; 8
    739a:	0f b6       	in	r0, 0x3f	; 63
    739c:	f8 94       	cli
    739e:	de bf       	out	0x3e, r29	; 62
    73a0:	0f be       	out	0x3f, r0	; 63
    73a2:	cd bf       	out	0x3d, r28	; 61
    73a4:	69 83       	std	Y+1, r22	; 0x01
    73a6:	7a 83       	std	Y+2, r23	; 0x02
    73a8:	8b 83       	std	Y+3, r24	; 0x03
    73aa:	9c 83       	std	Y+4, r25	; 0x04
    73ac:	2d 83       	std	Y+5, r18	; 0x05
    73ae:	3e 83       	std	Y+6, r19	; 0x06
    73b0:	4f 83       	std	Y+7, r20	; 0x07
    73b2:	58 87       	std	Y+8, r21	; 0x08
	return Rea / sqrt(1 - pow(E, 2) * pow(sin(latitudeRads), 2));
    73b4:	89 81       	ldd	r24, Y+1	; 0x01
    73b6:	9a 81       	ldd	r25, Y+2	; 0x02
    73b8:	ab 81       	ldd	r26, Y+3	; 0x03
    73ba:	bc 81       	ldd	r27, Y+4	; 0x04
    73bc:	20 e0       	ldi	r18, 0x00	; 0
    73be:	30 e0       	ldi	r19, 0x00	; 0
    73c0:	40 e0       	ldi	r20, 0x00	; 0
    73c2:	50 e4       	ldi	r21, 0x40	; 64
    73c4:	bc 01       	movw	r22, r24
    73c6:	cd 01       	movw	r24, r26
    73c8:	0e 94 bd 40 	call	0x817a	; 0x817a <pow>
    73cc:	6b 01       	movw	r12, r22
    73ce:	7c 01       	movw	r14, r24
    73d0:	8d 81       	ldd	r24, Y+5	; 0x05
    73d2:	9e 81       	ldd	r25, Y+6	; 0x06
    73d4:	af 81       	ldd	r26, Y+7	; 0x07
    73d6:	b8 85       	ldd	r27, Y+8	; 0x08
    73d8:	bc 01       	movw	r22, r24
    73da:	cd 01       	movw	r24, r26
    73dc:	0e 94 09 41 	call	0x8212	; 0x8212 <sin>
    73e0:	dc 01       	movw	r26, r24
    73e2:	cb 01       	movw	r24, r22
    73e4:	20 e0       	ldi	r18, 0x00	; 0
    73e6:	30 e0       	ldi	r19, 0x00	; 0
    73e8:	40 e0       	ldi	r20, 0x00	; 0
    73ea:	50 e4       	ldi	r21, 0x40	; 64
    73ec:	bc 01       	movw	r22, r24
    73ee:	cd 01       	movw	r24, r26
    73f0:	0e 94 bd 40 	call	0x817a	; 0x817a <pow>
    73f4:	dc 01       	movw	r26, r24
    73f6:	cb 01       	movw	r24, r22
    73f8:	9c 01       	movw	r18, r24
    73fa:	ad 01       	movw	r20, r26
    73fc:	c7 01       	movw	r24, r14
    73fe:	b6 01       	movw	r22, r12
    7400:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    7404:	dc 01       	movw	r26, r24
    7406:	cb 01       	movw	r24, r22
    7408:	9c 01       	movw	r18, r24
    740a:	ad 01       	movw	r20, r26
    740c:	60 e0       	ldi	r22, 0x00	; 0
    740e:	70 e0       	ldi	r23, 0x00	; 0
    7410:	80 e8       	ldi	r24, 0x80	; 128
    7412:	9f e3       	ldi	r25, 0x3F	; 63
    7414:	0e 94 13 3e 	call	0x7c26	; 0x7c26 <__subsf3>
    7418:	dc 01       	movw	r26, r24
    741a:	cb 01       	movw	r24, r22
    741c:	bc 01       	movw	r22, r24
    741e:	cd 01       	movw	r24, r26
    7420:	0e 94 13 41 	call	0x8226	; 0x8226 <sqrt>
    7424:	dc 01       	movw	r26, r24
    7426:	cb 01       	movw	r24, r22
    7428:	9c 01       	movw	r18, r24
    742a:	ad 01       	movw	r20, r26
    742c:	62 e3       	ldi	r22, 0x32	; 50
    742e:	75 ea       	ldi	r23, 0xA5	; 165
    7430:	82 ec       	ldi	r24, 0xC2	; 194
    7432:	9a e4       	ldi	r25, 0x4A	; 74
    7434:	0e 94 7f 3e 	call	0x7cfe	; 0x7cfe <__divsf3>
    7438:	dc 01       	movw	r26, r24
    743a:	cb 01       	movw	r24, r22
}
    743c:	bc 01       	movw	r22, r24
    743e:	cd 01       	movw	r24, r26
    7440:	28 96       	adiw	r28, 0x08	; 8
    7442:	0f b6       	in	r0, 0x3f	; 63
    7444:	f8 94       	cli
    7446:	de bf       	out	0x3e, r29	; 62
    7448:	0f be       	out	0x3f, r0	; 63
    744a:	cd bf       	out	0x3d, r28	; 61
    744c:	df 91       	pop	r29
    744e:	cf 91       	pop	r28
    7450:	ff 90       	pop	r15
    7452:	ef 90       	pop	r14
    7454:	df 90       	pop	r13
    7456:	cf 90       	pop	r12
    7458:	08 95       	ret

0000745a <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEfffRfS2_S2_>:
/**
 * A description of the variables used to convert lat/long to ecef can be found on page 25 of 
 * Unmanned Rotor Craft Systems
 */
void CoordinateUtil::ConvertFromGeodeticToECEF(float latitudeDegrees, float longitudeDegrees, float altitudeFeetAgl, float &ecefX, float &ecefY, float &ecefZ)
{
    745a:	8f 92       	push	r8
    745c:	9f 92       	push	r9
    745e:	af 92       	push	r10
    7460:	bf 92       	push	r11
    7462:	cf 92       	push	r12
    7464:	df 92       	push	r13
    7466:	ef 92       	push	r14
    7468:	ff 92       	push	r15
    746a:	0f 93       	push	r16
    746c:	1f 93       	push	r17
    746e:	cf 93       	push	r28
    7470:	df 93       	push	r29
    7472:	cd b7       	in	r28, 0x3d	; 61
    7474:	de b7       	in	r29, 0x3e	; 62
    7476:	6e 97       	sbiw	r28, 0x1e	; 30
    7478:	0f b6       	in	r0, 0x3f	; 63
    747a:	f8 94       	cli
    747c:	de bf       	out	0x3e, r29	; 62
    747e:	0f be       	out	0x3f, r0	; 63
    7480:	cd bf       	out	0x3d, r28	; 61
    7482:	6d 87       	std	Y+13, r22	; 0x0d
    7484:	7e 87       	std	Y+14, r23	; 0x0e
    7486:	8f 87       	std	Y+15, r24	; 0x0f
    7488:	98 8b       	std	Y+16, r25	; 0x10
    748a:	29 8b       	std	Y+17, r18	; 0x11
    748c:	3a 8b       	std	Y+18, r19	; 0x12
    748e:	4b 8b       	std	Y+19, r20	; 0x13
    7490:	5c 8b       	std	Y+20, r21	; 0x14
    7492:	ed 8a       	std	Y+21, r14	; 0x15
    7494:	fe 8a       	std	Y+22, r15	; 0x16
    7496:	0f 8b       	std	Y+23, r16	; 0x17
    7498:	18 8f       	std	Y+24, r17	; 0x18
    749a:	da 8e       	std	Y+26, r13	; 0x1a
    749c:	c9 8e       	std	Y+25, r12	; 0x19
    749e:	bc 8e       	std	Y+28, r11	; 0x1c
    74a0:	ab 8e       	std	Y+27, r10	; 0x1b
    74a2:	9e 8e       	std	Y+30, r9	; 0x1e
    74a4:	8d 8e       	std	Y+29, r8	; 0x1d
	float radLat = DegreesToRad(latitudeDegrees);
    74a6:	8d 85       	ldd	r24, Y+13	; 0x0d
    74a8:	9e 85       	ldd	r25, Y+14	; 0x0e
    74aa:	af 85       	ldd	r26, Y+15	; 0x0f
    74ac:	b8 89       	ldd	r27, Y+16	; 0x10
    74ae:	bc 01       	movw	r22, r24
    74b0:	cd 01       	movw	r24, r26
    74b2:	0e 94 5f 38 	call	0x70be	; 0x70be <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    74b6:	dc 01       	movw	r26, r24
    74b8:	cb 01       	movw	r24, r22
    74ba:	89 83       	std	Y+1, r24	; 0x01
    74bc:	9a 83       	std	Y+2, r25	; 0x02
    74be:	ab 83       	std	Y+3, r26	; 0x03
    74c0:	bc 83       	std	Y+4, r27	; 0x04
	float radLong = DegreesToRad(longitudeDegrees);
    74c2:	89 89       	ldd	r24, Y+17	; 0x11
    74c4:	9a 89       	ldd	r25, Y+18	; 0x12
    74c6:	ab 89       	ldd	r26, Y+19	; 0x13
    74c8:	bc 89       	ldd	r27, Y+20	; 0x14
    74ca:	bc 01       	movw	r22, r24
    74cc:	cd 01       	movw	r24, r26
    74ce:	0e 94 5f 38 	call	0x70be	; 0x70be <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    74d2:	dc 01       	movw	r26, r24
    74d4:	cb 01       	movw	r24, r22
    74d6:	8d 83       	std	Y+5, r24	; 0x05
    74d8:	9e 83       	std	Y+6, r25	; 0x06
    74da:	af 83       	std	Y+7, r26	; 0x07
    74dc:	b8 87       	std	Y+8, r27	; 0x08
	

	float Ne = calculateNe(E, radLat);
    74de:	89 81       	ldd	r24, Y+1	; 0x01
    74e0:	9a 81       	ldd	r25, Y+2	; 0x02
    74e2:	ab 81       	ldd	r26, Y+3	; 0x03
    74e4:	bc 81       	ldd	r27, Y+4	; 0x04
    74e6:	9c 01       	movw	r18, r24
    74e8:	ad 01       	movw	r20, r26
    74ea:	62 ed       	ldi	r22, 0xD2	; 210
    74ec:	70 e9       	ldi	r23, 0x90	; 144
    74ee:	87 ea       	ldi	r24, 0xA7	; 167
    74f0:	9d e3       	ldi	r25, 0x3D	; 61
    74f2:	0e 94 c4 39 	call	0x7388	; 0x7388 <_ZN10helicopter4util14CoordinateUtil11calculateNeEff>
    74f6:	dc 01       	movw	r26, r24
    74f8:	cb 01       	movw	r24, r22
    74fa:	89 87       	std	Y+9, r24	; 0x09
    74fc:	9a 87       	std	Y+10, r25	; 0x0a
    74fe:	ab 87       	std	Y+11, r26	; 0x0b
    7500:	bc 87       	std	Y+12, r27	; 0x0c
	
	ecefX = (Ne + altitudeFeetAgl) * cos(radLat) * cos(radLong);
    7502:	2d 89       	ldd	r18, Y+21	; 0x15
    7504:	3e 89       	ldd	r19, Y+22	; 0x16
    7506:	4f 89       	ldd	r20, Y+23	; 0x17
    7508:	58 8d       	ldd	r21, Y+24	; 0x18
    750a:	69 85       	ldd	r22, Y+9	; 0x09
    750c:	7a 85       	ldd	r23, Y+10	; 0x0a
    750e:	8b 85       	ldd	r24, Y+11	; 0x0b
    7510:	9c 85       	ldd	r25, Y+12	; 0x0c
    7512:	0e 94 14 3e 	call	0x7c28	; 0x7c28 <__addsf3>
    7516:	dc 01       	movw	r26, r24
    7518:	cb 01       	movw	r24, r22
    751a:	6c 01       	movw	r12, r24
    751c:	7d 01       	movw	r14, r26
    751e:	89 81       	ldd	r24, Y+1	; 0x01
    7520:	9a 81       	ldd	r25, Y+2	; 0x02
    7522:	ab 81       	ldd	r26, Y+3	; 0x03
    7524:	bc 81       	ldd	r27, Y+4	; 0x04
    7526:	bc 01       	movw	r22, r24
    7528:	cd 01       	movw	r24, r26
    752a:	0e 94 7c 3e 	call	0x7cf8	; 0x7cf8 <cos>
    752e:	dc 01       	movw	r26, r24
    7530:	cb 01       	movw	r24, r22
    7532:	9c 01       	movw	r18, r24
    7534:	ad 01       	movw	r20, r26
    7536:	c7 01       	movw	r24, r14
    7538:	b6 01       	movw	r22, r12
    753a:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    753e:	dc 01       	movw	r26, r24
    7540:	cb 01       	movw	r24, r22
    7542:	6c 01       	movw	r12, r24
    7544:	7d 01       	movw	r14, r26
    7546:	8d 81       	ldd	r24, Y+5	; 0x05
    7548:	9e 81       	ldd	r25, Y+6	; 0x06
    754a:	af 81       	ldd	r26, Y+7	; 0x07
    754c:	b8 85       	ldd	r27, Y+8	; 0x08
    754e:	bc 01       	movw	r22, r24
    7550:	cd 01       	movw	r24, r26
    7552:	0e 94 7c 3e 	call	0x7cf8	; 0x7cf8 <cos>
    7556:	dc 01       	movw	r26, r24
    7558:	cb 01       	movw	r24, r22
    755a:	9c 01       	movw	r18, r24
    755c:	ad 01       	movw	r20, r26
    755e:	c7 01       	movw	r24, r14
    7560:	b6 01       	movw	r22, r12
    7562:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    7566:	dc 01       	movw	r26, r24
    7568:	cb 01       	movw	r24, r22
    756a:	29 8d       	ldd	r18, Y+25	; 0x19
    756c:	3a 8d       	ldd	r19, Y+26	; 0x1a
    756e:	f9 01       	movw	r30, r18
    7570:	80 83       	st	Z, r24
    7572:	91 83       	std	Z+1, r25	; 0x01
    7574:	a2 83       	std	Z+2, r26	; 0x02
    7576:	b3 83       	std	Z+3, r27	; 0x03
	ecefY = (Ne + altitudeFeetAgl) * cos(radLat) * sin(radLong);
    7578:	2d 89       	ldd	r18, Y+21	; 0x15
    757a:	3e 89       	ldd	r19, Y+22	; 0x16
    757c:	4f 89       	ldd	r20, Y+23	; 0x17
    757e:	58 8d       	ldd	r21, Y+24	; 0x18
    7580:	69 85       	ldd	r22, Y+9	; 0x09
    7582:	7a 85       	ldd	r23, Y+10	; 0x0a
    7584:	8b 85       	ldd	r24, Y+11	; 0x0b
    7586:	9c 85       	ldd	r25, Y+12	; 0x0c
    7588:	0e 94 14 3e 	call	0x7c28	; 0x7c28 <__addsf3>
    758c:	dc 01       	movw	r26, r24
    758e:	cb 01       	movw	r24, r22
    7590:	6c 01       	movw	r12, r24
    7592:	7d 01       	movw	r14, r26
    7594:	89 81       	ldd	r24, Y+1	; 0x01
    7596:	9a 81       	ldd	r25, Y+2	; 0x02
    7598:	ab 81       	ldd	r26, Y+3	; 0x03
    759a:	bc 81       	ldd	r27, Y+4	; 0x04
    759c:	bc 01       	movw	r22, r24
    759e:	cd 01       	movw	r24, r26
    75a0:	0e 94 7c 3e 	call	0x7cf8	; 0x7cf8 <cos>
    75a4:	dc 01       	movw	r26, r24
    75a6:	cb 01       	movw	r24, r22
    75a8:	9c 01       	movw	r18, r24
    75aa:	ad 01       	movw	r20, r26
    75ac:	c7 01       	movw	r24, r14
    75ae:	b6 01       	movw	r22, r12
    75b0:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    75b4:	dc 01       	movw	r26, r24
    75b6:	cb 01       	movw	r24, r22
    75b8:	6c 01       	movw	r12, r24
    75ba:	7d 01       	movw	r14, r26
    75bc:	8d 81       	ldd	r24, Y+5	; 0x05
    75be:	9e 81       	ldd	r25, Y+6	; 0x06
    75c0:	af 81       	ldd	r26, Y+7	; 0x07
    75c2:	b8 85       	ldd	r27, Y+8	; 0x08
    75c4:	bc 01       	movw	r22, r24
    75c6:	cd 01       	movw	r24, r26
    75c8:	0e 94 09 41 	call	0x8212	; 0x8212 <sin>
    75cc:	dc 01       	movw	r26, r24
    75ce:	cb 01       	movw	r24, r22
    75d0:	9c 01       	movw	r18, r24
    75d2:	ad 01       	movw	r20, r26
    75d4:	c7 01       	movw	r24, r14
    75d6:	b6 01       	movw	r22, r12
    75d8:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    75dc:	dc 01       	movw	r26, r24
    75de:	cb 01       	movw	r24, r22
    75e0:	2b 8d       	ldd	r18, Y+27	; 0x1b
    75e2:	3c 8d       	ldd	r19, Y+28	; 0x1c
    75e4:	f9 01       	movw	r30, r18
    75e6:	80 83       	st	Z, r24
    75e8:	91 83       	std	Z+1, r25	; 0x01
    75ea:	a2 83       	std	Z+2, r26	; 0x02
    75ec:	b3 83       	std	Z+3, r27	; 0x03
	ecefZ = ((Ne * (1 - pow(E, 2))) + altitudeFeetAgl) * sin(radLat);
    75ee:	27 e4       	ldi	r18, 0x47	; 71
    75f0:	39 e4       	ldi	r19, 0x49	; 73
    75f2:	4e e7       	ldi	r20, 0x7E	; 126
    75f4:	5f e3       	ldi	r21, 0x3F	; 63
    75f6:	69 85       	ldd	r22, Y+9	; 0x09
    75f8:	7a 85       	ldd	r23, Y+10	; 0x0a
    75fa:	8b 85       	ldd	r24, Y+11	; 0x0b
    75fc:	9c 85       	ldd	r25, Y+12	; 0x0c
    75fe:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    7602:	dc 01       	movw	r26, r24
    7604:	cb 01       	movw	r24, r22
    7606:	2d 89       	ldd	r18, Y+21	; 0x15
    7608:	3e 89       	ldd	r19, Y+22	; 0x16
    760a:	4f 89       	ldd	r20, Y+23	; 0x17
    760c:	58 8d       	ldd	r21, Y+24	; 0x18
    760e:	bc 01       	movw	r22, r24
    7610:	cd 01       	movw	r24, r26
    7612:	0e 94 14 3e 	call	0x7c28	; 0x7c28 <__addsf3>
    7616:	dc 01       	movw	r26, r24
    7618:	cb 01       	movw	r24, r22
    761a:	6c 01       	movw	r12, r24
    761c:	7d 01       	movw	r14, r26
    761e:	89 81       	ldd	r24, Y+1	; 0x01
    7620:	9a 81       	ldd	r25, Y+2	; 0x02
    7622:	ab 81       	ldd	r26, Y+3	; 0x03
    7624:	bc 81       	ldd	r27, Y+4	; 0x04
    7626:	bc 01       	movw	r22, r24
    7628:	cd 01       	movw	r24, r26
    762a:	0e 94 09 41 	call	0x8212	; 0x8212 <sin>
    762e:	dc 01       	movw	r26, r24
    7630:	cb 01       	movw	r24, r22
    7632:	9c 01       	movw	r18, r24
    7634:	ad 01       	movw	r20, r26
    7636:	c7 01       	movw	r24, r14
    7638:	b6 01       	movw	r22, r12
    763a:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    763e:	dc 01       	movw	r26, r24
    7640:	cb 01       	movw	r24, r22
    7642:	2d 8d       	ldd	r18, Y+29	; 0x1d
    7644:	3e 8d       	ldd	r19, Y+30	; 0x1e
    7646:	f9 01       	movw	r30, r18
    7648:	80 83       	st	Z, r24
    764a:	91 83       	std	Z+1, r25	; 0x01
    764c:	a2 83       	std	Z+2, r26	; 0x02
    764e:	b3 83       	std	Z+3, r27	; 0x03
}
    7650:	6e 96       	adiw	r28, 0x1e	; 30
    7652:	0f b6       	in	r0, 0x3f	; 63
    7654:	f8 94       	cli
    7656:	de bf       	out	0x3e, r29	; 62
    7658:	0f be       	out	0x3f, r0	; 63
    765a:	cd bf       	out	0x3d, r28	; 61
    765c:	df 91       	pop	r29
    765e:	cf 91       	pop	r28
    7660:	1f 91       	pop	r17
    7662:	0f 91       	pop	r16
    7664:	ff 90       	pop	r15
    7666:	ef 90       	pop	r14
    7668:	df 90       	pop	r13
    766a:	cf 90       	pop	r12
    766c:	bf 90       	pop	r11
    766e:	af 90       	pop	r10
    7670:	9f 90       	pop	r9
    7672:	8f 90       	pop	r8
    7674:	08 95       	ret

00007676 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_>:

void CoordinateUtil::ConvertFromECEFToLocalNED(float ecefReferenceX, float ecefReferenceY, float ecefReferenceZ,
	float ecefX, float ecefY, float ecefZ, float ecefToLocalNEDRotationMatrix[][3],
	float &localNEDX, float &localNEDY, float &localNEDZ)
{
    7676:	af 92       	push	r10
    7678:	bf 92       	push	r11
    767a:	cf 92       	push	r12
    767c:	df 92       	push	r13
    767e:	ef 92       	push	r14
    7680:	ff 92       	push	r15
    7682:	0f 93       	push	r16
    7684:	1f 93       	push	r17
    7686:	cf 93       	push	r28
    7688:	df 93       	push	r29
    768a:	cd b7       	in	r28, 0x3d	; 61
    768c:	de b7       	in	r29, 0x3e	; 62
    768e:	e8 97       	sbiw	r28, 0x38	; 56
    7690:	0f b6       	in	r0, 0x3f	; 63
    7692:	f8 94       	cli
    7694:	de bf       	out	0x3e, r29	; 62
    7696:	0f be       	out	0x3f, r0	; 63
    7698:	cd bf       	out	0x3d, r28	; 61
    769a:	69 a7       	std	Y+41, r22	; 0x29
    769c:	7a a7       	std	Y+42, r23	; 0x2a
    769e:	8b a7       	std	Y+43, r24	; 0x2b
    76a0:	9c a7       	std	Y+44, r25	; 0x2c
    76a2:	2d a7       	std	Y+45, r18	; 0x2d
    76a4:	3e a7       	std	Y+46, r19	; 0x2e
    76a6:	4f a7       	std	Y+47, r20	; 0x2f
    76a8:	58 ab       	std	Y+48, r21	; 0x30
    76aa:	e9 aa       	std	Y+49, r14	; 0x31
    76ac:	fa aa       	std	Y+50, r15	; 0x32
    76ae:	0b ab       	std	Y+51, r16	; 0x33
    76b0:	1c ab       	std	Y+52, r17	; 0x34
    76b2:	ad aa       	std	Y+53, r10	; 0x35
    76b4:	be aa       	std	Y+54, r11	; 0x36
    76b6:	cf aa       	std	Y+55, r12	; 0x37
    76b8:	d8 ae       	std	Y+56, r13	; 0x38
	//Get the current helicopters position relative to it's starting point in ecef.
	float differenceXECEF = ecefX - ecefReferenceX;
    76ba:	29 a5       	ldd	r18, Y+41	; 0x29
    76bc:	3a a5       	ldd	r19, Y+42	; 0x2a
    76be:	4b a5       	ldd	r20, Y+43	; 0x2b
    76c0:	5c a5       	ldd	r21, Y+44	; 0x2c
    76c2:	6d a9       	ldd	r22, Y+53	; 0x35
    76c4:	7e a9       	ldd	r23, Y+54	; 0x36
    76c6:	8f a9       	ldd	r24, Y+55	; 0x37
    76c8:	98 ad       	ldd	r25, Y+56	; 0x38
    76ca:	0e 94 13 3e 	call	0x7c26	; 0x7c26 <__subsf3>
    76ce:	dc 01       	movw	r26, r24
    76d0:	cb 01       	movw	r24, r22
    76d2:	8d 83       	std	Y+5, r24	; 0x05
    76d4:	9e 83       	std	Y+6, r25	; 0x06
    76d6:	af 83       	std	Y+7, r26	; 0x07
    76d8:	b8 87       	std	Y+8, r27	; 0x08
	float differenceYECEF = ecefY - ecefReferenceY;
    76da:	2d a5       	ldd	r18, Y+45	; 0x2d
    76dc:	3e a5       	ldd	r19, Y+46	; 0x2e
    76de:	4f a5       	ldd	r20, Y+47	; 0x2f
    76e0:	58 a9       	ldd	r21, Y+48	; 0x30
    76e2:	2a 96       	adiw	r28, 0x0a	; 10
    76e4:	6c ad       	ldd	r22, Y+60	; 0x3c
    76e6:	7d ad       	ldd	r23, Y+61	; 0x3d
    76e8:	8e ad       	ldd	r24, Y+62	; 0x3e
    76ea:	9f ad       	ldd	r25, Y+63	; 0x3f
    76ec:	2a 97       	sbiw	r28, 0x0a	; 10
    76ee:	0e 94 13 3e 	call	0x7c26	; 0x7c26 <__subsf3>
    76f2:	dc 01       	movw	r26, r24
    76f4:	cb 01       	movw	r24, r22
    76f6:	89 87       	std	Y+9, r24	; 0x09
    76f8:	9a 87       	std	Y+10, r25	; 0x0a
    76fa:	ab 87       	std	Y+11, r26	; 0x0b
    76fc:	bc 87       	std	Y+12, r27	; 0x0c
	float differenceZECEF = ecefZ - ecefReferenceZ;
    76fe:	29 a9       	ldd	r18, Y+49	; 0x31
    7700:	3a a9       	ldd	r19, Y+50	; 0x32
    7702:	4b a9       	ldd	r20, Y+51	; 0x33
    7704:	5c a9       	ldd	r21, Y+52	; 0x34
    7706:	2e 96       	adiw	r28, 0x0e	; 14
    7708:	6c ad       	ldd	r22, Y+60	; 0x3c
    770a:	7d ad       	ldd	r23, Y+61	; 0x3d
    770c:	8e ad       	ldd	r24, Y+62	; 0x3e
    770e:	9f ad       	ldd	r25, Y+63	; 0x3f
    7710:	2e 97       	sbiw	r28, 0x0e	; 14
    7712:	0e 94 13 3e 	call	0x7c26	; 0x7c26 <__subsf3>
    7716:	dc 01       	movw	r26, r24
    7718:	cb 01       	movw	r24, r22
    771a:	8d 87       	std	Y+13, r24	; 0x0d
    771c:	9e 87       	std	Y+14, r25	; 0x0e
    771e:	af 87       	std	Y+15, r26	; 0x0f
    7720:	b8 8b       	std	Y+16, r27	; 0x10
	
	float rotatedMatrix[3] = {};
    7722:	2c e0       	ldi	r18, 0x0C	; 12
    7724:	ce 01       	movw	r24, r28
    7726:	41 96       	adiw	r24, 0x11	; 17
    7728:	fc 01       	movw	r30, r24
    772a:	32 2f       	mov	r19, r18
    772c:	11 92       	st	Z+, r1
    772e:	3a 95       	dec	r19
    7730:	e9 f7       	brne	.-6      	; 0x772c <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0xb6>
	float positionMatrix[3] = {differenceXECEF, differenceYECEF, differenceZECEF};
    7732:	8d 81       	ldd	r24, Y+5	; 0x05
    7734:	9e 81       	ldd	r25, Y+6	; 0x06
    7736:	af 81       	ldd	r26, Y+7	; 0x07
    7738:	b8 85       	ldd	r27, Y+8	; 0x08
    773a:	8d 8f       	std	Y+29, r24	; 0x1d
    773c:	9e 8f       	std	Y+30, r25	; 0x1e
    773e:	af 8f       	std	Y+31, r26	; 0x1f
    7740:	b8 a3       	std	Y+32, r27	; 0x20
    7742:	89 85       	ldd	r24, Y+9	; 0x09
    7744:	9a 85       	ldd	r25, Y+10	; 0x0a
    7746:	ab 85       	ldd	r26, Y+11	; 0x0b
    7748:	bc 85       	ldd	r27, Y+12	; 0x0c
    774a:	89 a3       	std	Y+33, r24	; 0x21
    774c:	9a a3       	std	Y+34, r25	; 0x22
    774e:	ab a3       	std	Y+35, r26	; 0x23
    7750:	bc a3       	std	Y+36, r27	; 0x24
    7752:	8d 85       	ldd	r24, Y+13	; 0x0d
    7754:	9e 85       	ldd	r25, Y+14	; 0x0e
    7756:	af 85       	ldd	r26, Y+15	; 0x0f
    7758:	b8 89       	ldd	r27, Y+16	; 0x10
    775a:	8d a3       	std	Y+37, r24	; 0x25
    775c:	9e a3       	std	Y+38, r25	; 0x26
    775e:	af a3       	std	Y+39, r26	; 0x27
    7760:	b8 a7       	std	Y+40, r27	; 0x28
	
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
    7762:	1a 82       	std	Y+2, r1	; 0x02
    7764:	19 82       	std	Y+1, r1	; 0x01
    7766:	78 c0       	rjmp	.+240    	; 0x7858 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1e2>
	{
		//iterate through the columns of the rotation matrix
		for (int j = 0; j < 3; j++)
    7768:	1c 82       	std	Y+4, r1	; 0x04
    776a:	1b 82       	std	Y+3, r1	; 0x03
    776c:	66 c0       	rjmp	.+204    	; 0x783a <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1c4>
		{
			rotatedMatrix[i] += ecefToLocalNEDRotationMatrix[i] [j] * positionMatrix[j];
    776e:	89 81       	ldd	r24, Y+1	; 0x01
    7770:	9a 81       	ldd	r25, Y+2	; 0x02
    7772:	88 0f       	add	r24, r24
    7774:	99 1f       	adc	r25, r25
    7776:	88 0f       	add	r24, r24
    7778:	99 1f       	adc	r25, r25
    777a:	9e 01       	movw	r18, r28
    777c:	2f 5f       	subi	r18, 0xFF	; 255
    777e:	3f 4f       	sbci	r19, 0xFF	; 255
    7780:	82 0f       	add	r24, r18
    7782:	93 1f       	adc	r25, r19
    7784:	40 96       	adiw	r24, 0x10	; 16
    7786:	fc 01       	movw	r30, r24
    7788:	c0 80       	ld	r12, Z
    778a:	d1 80       	ldd	r13, Z+1	; 0x01
    778c:	e2 80       	ldd	r14, Z+2	; 0x02
    778e:	f3 80       	ldd	r15, Z+3	; 0x03
    7790:	29 81       	ldd	r18, Y+1	; 0x01
    7792:	3a 81       	ldd	r19, Y+2	; 0x02
    7794:	c9 01       	movw	r24, r18
    7796:	88 0f       	add	r24, r24
    7798:	99 1f       	adc	r25, r25
    779a:	82 0f       	add	r24, r18
    779c:	93 1f       	adc	r25, r19
    779e:	88 0f       	add	r24, r24
    77a0:	99 1f       	adc	r25, r25
    77a2:	88 0f       	add	r24, r24
    77a4:	99 1f       	adc	r25, r25
    77a6:	60 96       	adiw	r28, 0x10	; 16
    77a8:	2e ad       	ldd	r18, Y+62	; 0x3e
    77aa:	3f ad       	ldd	r19, Y+63	; 0x3f
    77ac:	60 97       	sbiw	r28, 0x10	; 16
    77ae:	28 0f       	add	r18, r24
    77b0:	39 1f       	adc	r19, r25
    77b2:	8b 81       	ldd	r24, Y+3	; 0x03
    77b4:	9c 81       	ldd	r25, Y+4	; 0x04
    77b6:	88 0f       	add	r24, r24
    77b8:	99 1f       	adc	r25, r25
    77ba:	88 0f       	add	r24, r24
    77bc:	99 1f       	adc	r25, r25
    77be:	82 0f       	add	r24, r18
    77c0:	93 1f       	adc	r25, r19
    77c2:	fc 01       	movw	r30, r24
    77c4:	80 81       	ld	r24, Z
    77c6:	91 81       	ldd	r25, Z+1	; 0x01
    77c8:	a2 81       	ldd	r26, Z+2	; 0x02
    77ca:	b3 81       	ldd	r27, Z+3	; 0x03
    77cc:	2b 81       	ldd	r18, Y+3	; 0x03
    77ce:	3c 81       	ldd	r19, Y+4	; 0x04
    77d0:	22 0f       	add	r18, r18
    77d2:	33 1f       	adc	r19, r19
    77d4:	22 0f       	add	r18, r18
    77d6:	33 1f       	adc	r19, r19
    77d8:	ae 01       	movw	r20, r28
    77da:	4f 5f       	subi	r20, 0xFF	; 255
    77dc:	5f 4f       	sbci	r21, 0xFF	; 255
    77de:	24 0f       	add	r18, r20
    77e0:	35 1f       	adc	r19, r21
    77e2:	24 5e       	subi	r18, 0xE4	; 228
    77e4:	3f 4f       	sbci	r19, 0xFF	; 255
    77e6:	f9 01       	movw	r30, r18
    77e8:	20 81       	ld	r18, Z
    77ea:	31 81       	ldd	r19, Z+1	; 0x01
    77ec:	42 81       	ldd	r20, Z+2	; 0x02
    77ee:	53 81       	ldd	r21, Z+3	; 0x03
    77f0:	bc 01       	movw	r22, r24
    77f2:	cd 01       	movw	r24, r26
    77f4:	0e 94 5a 40 	call	0x80b4	; 0x80b4 <__mulsf3>
    77f8:	dc 01       	movw	r26, r24
    77fa:	cb 01       	movw	r24, r22
    77fc:	9c 01       	movw	r18, r24
    77fe:	ad 01       	movw	r20, r26
    7800:	c7 01       	movw	r24, r14
    7802:	b6 01       	movw	r22, r12
    7804:	0e 94 14 3e 	call	0x7c28	; 0x7c28 <__addsf3>
    7808:	dc 01       	movw	r26, r24
    780a:	cb 01       	movw	r24, r22
    780c:	29 81       	ldd	r18, Y+1	; 0x01
    780e:	3a 81       	ldd	r19, Y+2	; 0x02
    7810:	22 0f       	add	r18, r18
    7812:	33 1f       	adc	r19, r19
    7814:	22 0f       	add	r18, r18
    7816:	33 1f       	adc	r19, r19
    7818:	ae 01       	movw	r20, r28
    781a:	4f 5f       	subi	r20, 0xFF	; 255
    781c:	5f 4f       	sbci	r21, 0xFF	; 255
    781e:	24 0f       	add	r18, r20
    7820:	35 1f       	adc	r19, r21
    7822:	20 5f       	subi	r18, 0xF0	; 240
    7824:	3f 4f       	sbci	r19, 0xFF	; 255
    7826:	f9 01       	movw	r30, r18
    7828:	80 83       	st	Z, r24
    782a:	91 83       	std	Z+1, r25	; 0x01
    782c:	a2 83       	std	Z+2, r26	; 0x02
    782e:	b3 83       	std	Z+3, r27	; 0x03
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
	{
		//iterate through the columns of the rotation matrix
		for (int j = 0; j < 3; j++)
    7830:	8b 81       	ldd	r24, Y+3	; 0x03
    7832:	9c 81       	ldd	r25, Y+4	; 0x04
    7834:	01 96       	adiw	r24, 0x01	; 1
    7836:	9c 83       	std	Y+4, r25	; 0x04
    7838:	8b 83       	std	Y+3, r24	; 0x03
    783a:	21 e0       	ldi	r18, 0x01	; 1
    783c:	8b 81       	ldd	r24, Y+3	; 0x03
    783e:	9c 81       	ldd	r25, Y+4	; 0x04
    7840:	83 30       	cpi	r24, 0x03	; 3
    7842:	91 05       	cpc	r25, r1
    7844:	0c f0       	brlt	.+2      	; 0x7848 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1d2>
    7846:	20 e0       	ldi	r18, 0x00	; 0
    7848:	22 23       	and	r18, r18
    784a:	09 f0       	breq	.+2      	; 0x784e <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1d8>
    784c:	90 cf       	rjmp	.-224    	; 0x776e <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0xf8>
	float rotatedMatrix[3] = {};
	float positionMatrix[3] = {differenceXECEF, differenceYECEF, differenceZECEF};
	
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
    784e:	89 81       	ldd	r24, Y+1	; 0x01
    7850:	9a 81       	ldd	r25, Y+2	; 0x02
    7852:	01 96       	adiw	r24, 0x01	; 1
    7854:	9a 83       	std	Y+2, r25	; 0x02
    7856:	89 83       	std	Y+1, r24	; 0x01
    7858:	21 e0       	ldi	r18, 0x01	; 1
    785a:	89 81       	ldd	r24, Y+1	; 0x01
    785c:	9a 81       	ldd	r25, Y+2	; 0x02
    785e:	83 30       	cpi	r24, 0x03	; 3
    7860:	91 05       	cpc	r25, r1
    7862:	0c f0       	brlt	.+2      	; 0x7866 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1f0>
    7864:	20 e0       	ldi	r18, 0x00	; 0
    7866:	22 23       	and	r18, r18
    7868:	09 f0       	breq	.+2      	; 0x786c <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1f6>
    786a:	7e cf       	rjmp	.-260    	; 0x7768 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0xf2>
		{
			rotatedMatrix[i] += ecefToLocalNEDRotationMatrix[i] [j] * positionMatrix[j];
		}
	}
	
	localNEDX = rotatedMatrix[0];
    786c:	89 89       	ldd	r24, Y+17	; 0x11
    786e:	9a 89       	ldd	r25, Y+18	; 0x12
    7870:	ab 89       	ldd	r26, Y+19	; 0x13
    7872:	bc 89       	ldd	r27, Y+20	; 0x14
    7874:	62 96       	adiw	r28, 0x12	; 18
    7876:	2e ad       	ldd	r18, Y+62	; 0x3e
    7878:	3f ad       	ldd	r19, Y+63	; 0x3f
    787a:	62 97       	sbiw	r28, 0x12	; 18
    787c:	f9 01       	movw	r30, r18
    787e:	80 83       	st	Z, r24
    7880:	91 83       	std	Z+1, r25	; 0x01
    7882:	a2 83       	std	Z+2, r26	; 0x02
    7884:	b3 83       	std	Z+3, r27	; 0x03
	localNEDY = rotatedMatrix[1];
    7886:	8d 89       	ldd	r24, Y+21	; 0x15
    7888:	9e 89       	ldd	r25, Y+22	; 0x16
    788a:	af 89       	ldd	r26, Y+23	; 0x17
    788c:	b8 8d       	ldd	r27, Y+24	; 0x18
    788e:	64 96       	adiw	r28, 0x14	; 20
    7890:	2e ad       	ldd	r18, Y+62	; 0x3e
    7892:	3f ad       	ldd	r19, Y+63	; 0x3f
    7894:	64 97       	sbiw	r28, 0x14	; 20
    7896:	f9 01       	movw	r30, r18
    7898:	80 83       	st	Z, r24
    789a:	91 83       	std	Z+1, r25	; 0x01
    789c:	a2 83       	std	Z+2, r26	; 0x02
    789e:	b3 83       	std	Z+3, r27	; 0x03
	localNEDZ = rotatedMatrix[2];
    78a0:	89 8d       	ldd	r24, Y+25	; 0x19
    78a2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    78a4:	ab 8d       	ldd	r26, Y+27	; 0x1b
    78a6:	bc 8d       	ldd	r27, Y+28	; 0x1c
    78a8:	66 96       	adiw	r28, 0x16	; 22
    78aa:	2e ad       	ldd	r18, Y+62	; 0x3e
    78ac:	3f ad       	ldd	r19, Y+63	; 0x3f
    78ae:	66 97       	sbiw	r28, 0x16	; 22
    78b0:	f9 01       	movw	r30, r18
    78b2:	80 83       	st	Z, r24
    78b4:	91 83       	std	Z+1, r25	; 0x01
    78b6:	a2 83       	std	Z+2, r26	; 0x02
    78b8:	b3 83       	std	Z+3, r27	; 0x03
}
    78ba:	e8 96       	adiw	r28, 0x38	; 56
    78bc:	0f b6       	in	r0, 0x3f	; 63
    78be:	f8 94       	cli
    78c0:	de bf       	out	0x3e, r29	; 62
    78c2:	0f be       	out	0x3f, r0	; 63
    78c4:	cd bf       	out	0x3d, r28	; 61
    78c6:	df 91       	pop	r29
    78c8:	cf 91       	pop	r28
    78ca:	1f 91       	pop	r17
    78cc:	0f 91       	pop	r16
    78ce:	ff 90       	pop	r15
    78d0:	ef 90       	pop	r14
    78d2:	df 90       	pop	r13
    78d4:	cf 90       	pop	r12
    78d6:	bf 90       	pop	r11
    78d8:	af 90       	pop	r10
    78da:	08 95       	ret

000078dc <_ZN10helicopter4util14CoordinateUtil29ConvertFromGeodedicToLocalNEDEffffffPA3_fRfS4_S4_>:

void CoordinateUtil::ConvertFromGeodedicToLocalNED(
	float geodedicLatitude, float geodedicLongitude, float altitudeFeetAgl,
	float ecefReferenceX, float ecefReferenceY, float ecefReferenceZ, float ecefToLocalNEDRotationMatrix[][3],
	float &localNEDX,float &localNEDY,float &localNEDZ)
{
    78dc:	2f 92       	push	r2
    78de:	3f 92       	push	r3
    78e0:	4f 92       	push	r4
    78e2:	5f 92       	push	r5
    78e4:	6f 92       	push	r6
    78e6:	7f 92       	push	r7
    78e8:	8f 92       	push	r8
    78ea:	9f 92       	push	r9
    78ec:	af 92       	push	r10
    78ee:	bf 92       	push	r11
    78f0:	cf 92       	push	r12
    78f2:	df 92       	push	r13
    78f4:	ef 92       	push	r14
    78f6:	ff 92       	push	r15
    78f8:	0f 93       	push	r16
    78fa:	1f 93       	push	r17
    78fc:	cf 93       	push	r28
    78fe:	df 93       	push	r29
    7900:	cd b7       	in	r28, 0x3d	; 61
    7902:	de b7       	in	r29, 0x3e	; 62
    7904:	6c 97       	sbiw	r28, 0x1c	; 28
    7906:	0f b6       	in	r0, 0x3f	; 63
    7908:	f8 94       	cli
    790a:	de bf       	out	0x3e, r29	; 62
    790c:	0f be       	out	0x3f, r0	; 63
    790e:	cd bf       	out	0x3d, r28	; 61
    7910:	6d 87       	std	Y+13, r22	; 0x0d
    7912:	7e 87       	std	Y+14, r23	; 0x0e
    7914:	8f 87       	std	Y+15, r24	; 0x0f
    7916:	98 8b       	std	Y+16, r25	; 0x10
    7918:	29 8b       	std	Y+17, r18	; 0x11
    791a:	3a 8b       	std	Y+18, r19	; 0x12
    791c:	4b 8b       	std	Y+19, r20	; 0x13
    791e:	5c 8b       	std	Y+20, r21	; 0x14
    7920:	ed 8a       	std	Y+21, r14	; 0x15
    7922:	fe 8a       	std	Y+22, r15	; 0x16
    7924:	0f 8b       	std	Y+23, r16	; 0x17
    7926:	18 8f       	std	Y+24, r17	; 0x18
    7928:	a9 8e       	std	Y+25, r10	; 0x19
    792a:	ba 8e       	std	Y+26, r11	; 0x1a
    792c:	cb 8e       	std	Y+27, r12	; 0x1b
    792e:	dc 8e       	std	Y+28, r13	; 0x1c
	float ecefX = 0;
    7930:	19 82       	std	Y+1, r1	; 0x01
    7932:	1a 82       	std	Y+2, r1	; 0x02
    7934:	1b 82       	std	Y+3, r1	; 0x03
    7936:	1c 82       	std	Y+4, r1	; 0x04
	float ecefY = 0;
    7938:	1d 82       	std	Y+5, r1	; 0x05
    793a:	1e 82       	std	Y+6, r1	; 0x06
    793c:	1f 82       	std	Y+7, r1	; 0x07
    793e:	18 86       	std	Y+8, r1	; 0x08
	float ecefZ = 0;
    7940:	19 86       	std	Y+9, r1	; 0x09
    7942:	1a 86       	std	Y+10, r1	; 0x0a
    7944:	1b 86       	std	Y+11, r1	; 0x0b
    7946:	1c 86       	std	Y+12, r1	; 0x0c
	
	ConvertFromGeodeticToECEF(geodedicLatitude, geodedicLongitude, altitudeFeetAgl, ecefX, ecefY, ecefZ);
    7948:	fe 01       	movw	r30, r28
    794a:	39 96       	adiw	r30, 0x09	; 9
    794c:	be 01       	movw	r22, r28
    794e:	6b 5f       	subi	r22, 0xFB	; 251
    7950:	7f 4f       	sbci	r23, 0xFF	; 255
    7952:	ed 88       	ldd	r14, Y+21	; 0x15
    7954:	fe 88       	ldd	r15, Y+22	; 0x16
    7956:	0f 89       	ldd	r16, Y+23	; 0x17
    7958:	18 8d       	ldd	r17, Y+24	; 0x18
    795a:	29 89       	ldd	r18, Y+17	; 0x11
    795c:	3a 89       	ldd	r19, Y+18	; 0x12
    795e:	4b 89       	ldd	r20, Y+19	; 0x13
    7960:	5c 89       	ldd	r21, Y+20	; 0x14
    7962:	8d 85       	ldd	r24, Y+13	; 0x0d
    7964:	9e 85       	ldd	r25, Y+14	; 0x0e
    7966:	af 85       	ldd	r26, Y+15	; 0x0f
    7968:	b8 89       	ldd	r27, Y+16	; 0x10
    796a:	4f 01       	movw	r8, r30
    796c:	5b 01       	movw	r10, r22
    796e:	be 01       	movw	r22, r28
    7970:	6f 5f       	subi	r22, 0xFF	; 255
    7972:	7f 4f       	sbci	r23, 0xFF	; 255
    7974:	6b 01       	movw	r12, r22
    7976:	bc 01       	movw	r22, r24
    7978:	cd 01       	movw	r24, r26
    797a:	0e 94 2d 3a 	call	0x745a	; 0x745a <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEfffRfS2_S2_>
	
	ConvertFromECEFToLocalNED(ecefReferenceX, ecefReferenceY, ecefReferenceZ,
		ecefX, ecefY, ecefZ, ecefToLocalNEDRotationMatrix,
		localNEDX, localNEDY, localNEDZ);
    797e:	29 85       	ldd	r18, Y+9	; 0x09
    7980:	3a 85       	ldd	r19, Y+10	; 0x0a
    7982:	4b 85       	ldd	r20, Y+11	; 0x0b
    7984:	5c 85       	ldd	r21, Y+12	; 0x0c
    7986:	8d 81       	ldd	r24, Y+5	; 0x05
    7988:	9e 81       	ldd	r25, Y+6	; 0x06
    798a:	af 81       	ldd	r26, Y+7	; 0x07
    798c:	b8 85       	ldd	r27, Y+8	; 0x08
    798e:	a9 80       	ldd	r10, Y+1	; 0x01
    7990:	ba 80       	ldd	r11, Y+2	; 0x02
    7992:	cb 80       	ldd	r12, Y+3	; 0x03
    7994:	dc 80       	ldd	r13, Y+4	; 0x04
    7996:	ee a8       	ldd	r14, Y+54	; 0x36
    7998:	ff a8       	ldd	r15, Y+55	; 0x37
    799a:	08 ad       	ldd	r16, Y+56	; 0x38
    799c:	19 ad       	ldd	r17, Y+57	; 0x39
    799e:	2a a8       	ldd	r2, Y+50	; 0x32
    79a0:	3b a8       	ldd	r3, Y+51	; 0x33
    79a2:	4c a8       	ldd	r4, Y+52	; 0x34
    79a4:	5d a8       	ldd	r5, Y+53	; 0x35
    79a6:	69 8c       	ldd	r6, Y+25	; 0x19
    79a8:	7a 8c       	ldd	r7, Y+26	; 0x1a
    79aa:	8b 8c       	ldd	r8, Y+27	; 0x1b
    79ac:	9c 8c       	ldd	r9, Y+28	; 0x1c
    79ae:	22 96       	adiw	r28, 0x02	; 2
    79b0:	6f ad       	ldd	r22, Y+63	; 0x3f
    79b2:	22 97       	sbiw	r28, 0x02	; 2
    79b4:	6f 93       	push	r22
    79b6:	21 96       	adiw	r28, 0x01	; 1
    79b8:	6f ad       	ldd	r22, Y+63	; 0x3f
    79ba:	21 97       	sbiw	r28, 0x01	; 1
    79bc:	6f 93       	push	r22
    79be:	6f ad       	ldd	r22, Y+63	; 0x3f
    79c0:	6f 93       	push	r22
    79c2:	6e ad       	ldd	r22, Y+62	; 0x3e
    79c4:	6f 93       	push	r22
    79c6:	6d ad       	ldd	r22, Y+61	; 0x3d
    79c8:	6f 93       	push	r22
    79ca:	6c ad       	ldd	r22, Y+60	; 0x3c
    79cc:	6f 93       	push	r22
    79ce:	6b ad       	ldd	r22, Y+59	; 0x3b
    79d0:	6f 93       	push	r22
    79d2:	6a ad       	ldd	r22, Y+58	; 0x3a
    79d4:	6f 93       	push	r22
    79d6:	65 2f       	mov	r22, r21
    79d8:	6f 93       	push	r22
    79da:	64 2f       	mov	r22, r20
    79dc:	6f 93       	push	r22
    79de:	63 2f       	mov	r22, r19
    79e0:	6f 93       	push	r22
    79e2:	2f 93       	push	r18
    79e4:	2b 2f       	mov	r18, r27
    79e6:	2f 93       	push	r18
    79e8:	2a 2f       	mov	r18, r26
    79ea:	2f 93       	push	r18
    79ec:	29 2f       	mov	r18, r25
    79ee:	2f 93       	push	r18
    79f0:	8f 93       	push	r24
    79f2:	a2 01       	movw	r20, r4
    79f4:	91 01       	movw	r18, r2
    79f6:	c4 01       	movw	r24, r8
    79f8:	b3 01       	movw	r22, r6
    79fa:	0e 94 3b 3b 	call	0x7676	; 0x7676 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_>
    79fe:	8d b7       	in	r24, 0x3d	; 61
    7a00:	9e b7       	in	r25, 0x3e	; 62
    7a02:	40 96       	adiw	r24, 0x10	; 16
    7a04:	0f b6       	in	r0, 0x3f	; 63
    7a06:	f8 94       	cli
    7a08:	de bf       	out	0x3e, r29	; 62
    7a0a:	0f be       	out	0x3f, r0	; 63
    7a0c:	cd bf       	out	0x3d, r28	; 61
    7a0e:	6c 96       	adiw	r28, 0x1c	; 28
    7a10:	0f b6       	in	r0, 0x3f	; 63
    7a12:	f8 94       	cli
    7a14:	de bf       	out	0x3e, r29	; 62
    7a16:	0f be       	out	0x3f, r0	; 63
    7a18:	cd bf       	out	0x3d, r28	; 61
    7a1a:	df 91       	pop	r29
    7a1c:	cf 91       	pop	r28
    7a1e:	1f 91       	pop	r17
    7a20:	0f 91       	pop	r16
    7a22:	ff 90       	pop	r15
    7a24:	ef 90       	pop	r14
    7a26:	df 90       	pop	r13
    7a28:	cf 90       	pop	r12
    7a2a:	bf 90       	pop	r11
    7a2c:	af 90       	pop	r10
    7a2e:	9f 90       	pop	r9
    7a30:	8f 90       	pop	r8
    7a32:	7f 90       	pop	r7
    7a34:	6f 90       	pop	r6
    7a36:	5f 90       	pop	r5
    7a38:	4f 90       	pop	r4
    7a3a:	3f 90       	pop	r3
    7a3c:	2f 90       	pop	r2
    7a3e:	08 95       	ret

00007a40 <_ZN10helicopter4util5Timer10startTimerEv>:
#include "Timer.h"

using namespace helicopter::util;

void Timer::startTimer()
{
    7a40:	0f 93       	push	r16
    7a42:	1f 93       	push	r17
    7a44:	cf 93       	push	r28
    7a46:	df 93       	push	r29
    7a48:	00 d0       	rcall	.+0      	; 0x7a4a <_ZN10helicopter4util5Timer10startTimerEv+0xa>
    7a4a:	1f 92       	push	r1
    7a4c:	cd b7       	in	r28, 0x3d	; 61
    7a4e:	de b7       	in	r29, 0x3e	; 62
    7a50:	9c 83       	std	Y+4, r25	; 0x04
    7a52:	8b 83       	std	Y+3, r24	; 0x03
	//stop timer in case it was already started.
	stopTimer();
    7a54:	8b 81       	ldd	r24, Y+3	; 0x03
    7a56:	9c 81       	ldd	r25, Y+4	; 0x04
    7a58:	0e 94 f4 3d 	call	0x7be8	; 0x7be8 <_ZN10helicopter4util5Timer9stopTimerEv>
	
	int frequency = 0;
    7a5c:	1a 82       	std	Y+2, r1	; 0x02
    7a5e:	19 82       	std	Y+1, r1	; 0x01
	
	if (timeoutMilliseconds > 1000) 
    7a60:	8b 81       	ldd	r24, Y+3	; 0x03
    7a62:	9c 81       	ldd	r25, Y+4	; 0x04
    7a64:	fc 01       	movw	r30, r24
    7a66:	86 81       	ldd	r24, Z+6	; 0x06
    7a68:	97 81       	ldd	r25, Z+7	; 0x07
    7a6a:	89 3e       	cpi	r24, 0xE9	; 233
    7a6c:	f3 e0       	ldi	r31, 0x03	; 3
    7a6e:	9f 07       	cpc	r25, r31
    7a70:	2c f0       	brlt	.+10     	; 0x7a7c <_ZN10helicopter4util5Timer10startTimerEv+0x3c>
	{
		frequency = 1;
    7a72:	81 e0       	ldi	r24, 0x01	; 1
    7a74:	90 e0       	ldi	r25, 0x00	; 0
    7a76:	9a 83       	std	Y+2, r25	; 0x02
    7a78:	89 83       	std	Y+1, r24	; 0x01
    7a7a:	0d c0       	rjmp	.+26     	; 0x7a96 <_ZN10helicopter4util5Timer10startTimerEv+0x56>
	}else
	{
		frequency = 1000 / timeoutMilliseconds;
    7a7c:	8b 81       	ldd	r24, Y+3	; 0x03
    7a7e:	9c 81       	ldd	r25, Y+4	; 0x04
    7a80:	fc 01       	movw	r30, r24
    7a82:	26 81       	ldd	r18, Z+6	; 0x06
    7a84:	37 81       	ldd	r19, Z+7	; 0x07
    7a86:	88 ee       	ldi	r24, 0xE8	; 232
    7a88:	93 e0       	ldi	r25, 0x03	; 3
    7a8a:	b9 01       	movw	r22, r18
    7a8c:	0e 94 74 42 	call	0x84e8	; 0x84e8 <__divmodhi4>
    7a90:	9b 01       	movw	r18, r22
    7a92:	3a 83       	std	Y+2, r19	; 0x02
    7a94:	29 83       	std	Y+1, r18	; 0x01
	}

	//setup timer.
	//set the output compare register so that when the Timer Counter (TCNT) matches this output register
	//it indicates that the timer has timed out.
	OCR3A = ((cpuSpeed /  timerPrescaler) / frequency); 
    7a96:	08 e9       	ldi	r16, 0x98	; 152
    7a98:	10 e0       	ldi	r17, 0x00	; 0
    7a9a:	8b 81       	ldd	r24, Y+3	; 0x03
    7a9c:	9c 81       	ldd	r25, Y+4	; 0x04
    7a9e:	fc 01       	movw	r30, r24
    7aa0:	80 81       	ld	r24, Z
    7aa2:	91 81       	ldd	r25, Z+1	; 0x01
    7aa4:	a2 81       	ldd	r26, Z+2	; 0x02
    7aa6:	b3 81       	ldd	r27, Z+3	; 0x03
    7aa8:	2b 81       	ldd	r18, Y+3	; 0x03
    7aaa:	3c 81       	ldd	r19, Y+4	; 0x04
    7aac:	f9 01       	movw	r30, r18
    7aae:	24 81       	ldd	r18, Z+4	; 0x04
    7ab0:	35 81       	ldd	r19, Z+5	; 0x05
    7ab2:	44 27       	eor	r20, r20
    7ab4:	37 fd       	sbrc	r19, 7
    7ab6:	40 95       	com	r20
    7ab8:	54 2f       	mov	r21, r20
    7aba:	bc 01       	movw	r22, r24
    7abc:	cd 01       	movw	r24, r26
    7abe:	0e 94 88 42 	call	0x8510	; 0x8510 <__udivmodsi4>
    7ac2:	da 01       	movw	r26, r20
    7ac4:	c9 01       	movw	r24, r18
    7ac6:	29 81       	ldd	r18, Y+1	; 0x01
    7ac8:	3a 81       	ldd	r19, Y+2	; 0x02
    7aca:	44 27       	eor	r20, r20
    7acc:	37 fd       	sbrc	r19, 7
    7ace:	40 95       	com	r20
    7ad0:	54 2f       	mov	r21, r20
    7ad2:	bc 01       	movw	r22, r24
    7ad4:	cd 01       	movw	r24, r26
    7ad6:	0e 94 88 42 	call	0x8510	; 0x8510 <__udivmodsi4>
    7ada:	da 01       	movw	r26, r20
    7adc:	c9 01       	movw	r24, r18
    7ade:	f8 01       	movw	r30, r16
    7ae0:	91 83       	std	Z+1, r25	; 0x01
    7ae2:	80 83       	st	Z, r24
		
	TCCR3B |= (1 << WGM32); //Configure timer 1 for Clear on Timer Compare (CTC) mode so that if there is a match, the TCNT goes back to 0.
    7ae4:	81 e9       	ldi	r24, 0x91	; 145
    7ae6:	90 e0       	ldi	r25, 0x00	; 0
    7ae8:	21 e9       	ldi	r18, 0x91	; 145
    7aea:	30 e0       	ldi	r19, 0x00	; 0
    7aec:	f9 01       	movw	r30, r18
    7aee:	20 81       	ld	r18, Z
    7af0:	28 60       	ori	r18, 0x08	; 8
    7af2:	fc 01       	movw	r30, r24
    7af4:	20 83       	st	Z, r18
		
	//Set the Timer Counter Control Register (TCCR) with the appropriate prescaller
	//which causes the timer counter to start (i.e. the timer starts).
	switch(timerPrescaler)
    7af6:	8b 81       	ldd	r24, Y+3	; 0x03
    7af8:	9c 81       	ldd	r25, Y+4	; 0x04
    7afa:	fc 01       	movw	r30, r24
    7afc:	84 81       	ldd	r24, Z+4	; 0x04
    7afe:	95 81       	ldd	r25, Z+5	; 0x05
    7b00:	80 34       	cpi	r24, 0x40	; 64
    7b02:	91 05       	cpc	r25, r1
    7b04:	39 f1       	breq	.+78     	; 0x7b54 <_ZN10helicopter4util5Timer10startTimerEv+0x114>
    7b06:	81 34       	cpi	r24, 0x41	; 65
    7b08:	91 05       	cpc	r25, r1
    7b0a:	3c f4       	brge	.+14     	; 0x7b1a <_ZN10helicopter4util5Timer10startTimerEv+0xda>
    7b0c:	81 30       	cpi	r24, 0x01	; 1
    7b0e:	91 05       	cpc	r25, r1
    7b10:	69 f0       	breq	.+26     	; 0x7b2c <_ZN10helicopter4util5Timer10startTimerEv+0xec>
    7b12:	88 30       	cpi	r24, 0x08	; 8
    7b14:	91 05       	cpc	r25, r1
    7b16:	a1 f0       	breq	.+40     	; 0x7b40 <_ZN10helicopter4util5Timer10startTimerEv+0x100>
    7b18:	3b c0       	rjmp	.+118    	; 0x7b90 <_ZN10helicopter4util5Timer10startTimerEv+0x150>
    7b1a:	81 15       	cp	r24, r1
    7b1c:	f1 e0       	ldi	r31, 0x01	; 1
    7b1e:	9f 07       	cpc	r25, r31
    7b20:	19 f1       	breq	.+70     	; 0x7b68 <_ZN10helicopter4util5Timer10startTimerEv+0x128>
    7b22:	81 15       	cp	r24, r1
    7b24:	24 e0       	ldi	r18, 0x04	; 4
    7b26:	92 07       	cpc	r25, r18
    7b28:	49 f1       	breq	.+82     	; 0x7b7c <_ZN10helicopter4util5Timer10startTimerEv+0x13c>
    7b2a:	32 c0       	rjmp	.+100    	; 0x7b90 <_ZN10helicopter4util5Timer10startTimerEv+0x150>
	{
		case NO_PRESCALER:
		TCCR3B |= NoPrescaling;
    7b2c:	81 e9       	ldi	r24, 0x91	; 145
    7b2e:	90 e0       	ldi	r25, 0x00	; 0
    7b30:	21 e9       	ldi	r18, 0x91	; 145
    7b32:	30 e0       	ldi	r19, 0x00	; 0
    7b34:	f9 01       	movw	r30, r18
    7b36:	20 81       	ld	r18, Z
    7b38:	21 60       	ori	r18, 0x01	; 1
    7b3a:	fc 01       	movw	r30, r24
    7b3c:	20 83       	st	Z, r18
		break;
    7b3e:	31 c0       	rjmp	.+98     	; 0x7ba2 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_EIGHT:
		TCCR3B |= PrescaleByEight;
    7b40:	81 e9       	ldi	r24, 0x91	; 145
    7b42:	90 e0       	ldi	r25, 0x00	; 0
    7b44:	21 e9       	ldi	r18, 0x91	; 145
    7b46:	30 e0       	ldi	r19, 0x00	; 0
    7b48:	f9 01       	movw	r30, r18
    7b4a:	20 81       	ld	r18, Z
    7b4c:	22 60       	ori	r18, 0x02	; 2
    7b4e:	fc 01       	movw	r30, r24
    7b50:	20 83       	st	Z, r18
		break;
    7b52:	27 c0       	rjmp	.+78     	; 0x7ba2 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_SIXTYFOUR:
		TCCR3B |= PrescaleBySixtyFour;
    7b54:	81 e9       	ldi	r24, 0x91	; 145
    7b56:	90 e0       	ldi	r25, 0x00	; 0
    7b58:	21 e9       	ldi	r18, 0x91	; 145
    7b5a:	30 e0       	ldi	r19, 0x00	; 0
    7b5c:	f9 01       	movw	r30, r18
    7b5e:	20 81       	ld	r18, Z
    7b60:	23 60       	ori	r18, 0x03	; 3
    7b62:	fc 01       	movw	r30, r24
    7b64:	20 83       	st	Z, r18
		break;
    7b66:	1d c0       	rjmp	.+58     	; 0x7ba2 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_TWOFIFTYSIX:
		TCCR3B |= PrescaleByTwofiftysix;
    7b68:	81 e9       	ldi	r24, 0x91	; 145
    7b6a:	90 e0       	ldi	r25, 0x00	; 0
    7b6c:	21 e9       	ldi	r18, 0x91	; 145
    7b6e:	30 e0       	ldi	r19, 0x00	; 0
    7b70:	f9 01       	movw	r30, r18
    7b72:	20 81       	ld	r18, Z
    7b74:	24 60       	ori	r18, 0x04	; 4
    7b76:	fc 01       	movw	r30, r24
    7b78:	20 83       	st	Z, r18
		break;
    7b7a:	13 c0       	rjmp	.+38     	; 0x7ba2 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_TENTWENTYFOUR:
		TCCR3B |= PrescaleByTentwentyfour;
    7b7c:	81 e9       	ldi	r24, 0x91	; 145
    7b7e:	90 e0       	ldi	r25, 0x00	; 0
    7b80:	21 e9       	ldi	r18, 0x91	; 145
    7b82:	30 e0       	ldi	r19, 0x00	; 0
    7b84:	f9 01       	movw	r30, r18
    7b86:	20 81       	ld	r18, Z
    7b88:	25 60       	ori	r18, 0x05	; 5
    7b8a:	fc 01       	movw	r30, r24
    7b8c:	20 83       	st	Z, r18
		break;
    7b8e:	09 c0       	rjmp	.+18     	; 0x7ba2 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		default:
		TCCR3B |= NoPrescaling;
    7b90:	81 e9       	ldi	r24, 0x91	; 145
    7b92:	90 e0       	ldi	r25, 0x00	; 0
    7b94:	21 e9       	ldi	r18, 0x91	; 145
    7b96:	30 e0       	ldi	r19, 0x00	; 0
    7b98:	f9 01       	movw	r30, r18
    7b9a:	20 81       	ld	r18, Z
    7b9c:	21 60       	ori	r18, 0x01	; 1
    7b9e:	fc 01       	movw	r30, r24
    7ba0:	20 83       	st	Z, r18
	}
}
    7ba2:	0f 90       	pop	r0
    7ba4:	0f 90       	pop	r0
    7ba6:	0f 90       	pop	r0
    7ba8:	0f 90       	pop	r0
    7baa:	df 91       	pop	r29
    7bac:	cf 91       	pop	r28
    7bae:	1f 91       	pop	r17
    7bb0:	0f 91       	pop	r16
    7bb2:	08 95       	ret

00007bb4 <_ZN10helicopter4util5Timer11hasTimedoutEv>:

bool Timer::hasTimedout()
{
    7bb4:	cf 93       	push	r28
    7bb6:	df 93       	push	r29
    7bb8:	1f 92       	push	r1
    7bba:	1f 92       	push	r1
    7bbc:	cd b7       	in	r28, 0x3d	; 61
    7bbe:	de b7       	in	r29, 0x3e	; 62
    7bc0:	9a 83       	std	Y+2, r25	; 0x02
    7bc2:	89 83       	std	Y+1, r24	; 0x01
	//Check the Timer Interrupt Flags Register (TIFR) to determine if the flag was set indicating
	//that the timer has timed out.
	return (TIFR3 & (1<<OCF3A)) != 0;
    7bc4:	88 e3       	ldi	r24, 0x38	; 56
    7bc6:	90 e0       	ldi	r25, 0x00	; 0
    7bc8:	fc 01       	movw	r30, r24
    7bca:	80 81       	ld	r24, Z
    7bcc:	88 2f       	mov	r24, r24
    7bce:	90 e0       	ldi	r25, 0x00	; 0
    7bd0:	82 70       	andi	r24, 0x02	; 2
    7bd2:	99 27       	eor	r25, r25
    7bd4:	21 e0       	ldi	r18, 0x01	; 1
    7bd6:	00 97       	sbiw	r24, 0x00	; 0
    7bd8:	09 f4       	brne	.+2      	; 0x7bdc <_ZN10helicopter4util5Timer11hasTimedoutEv+0x28>
    7bda:	20 e0       	ldi	r18, 0x00	; 0
    7bdc:	82 2f       	mov	r24, r18
}
    7bde:	0f 90       	pop	r0
    7be0:	0f 90       	pop	r0
    7be2:	df 91       	pop	r29
    7be4:	cf 91       	pop	r28
    7be6:	08 95       	ret

00007be8 <_ZN10helicopter4util5Timer9stopTimerEv>:

void Timer::stopTimer()
{
    7be8:	cf 93       	push	r28
    7bea:	df 93       	push	r29
    7bec:	1f 92       	push	r1
    7bee:	1f 92       	push	r1
    7bf0:	cd b7       	in	r28, 0x3d	; 61
    7bf2:	de b7       	in	r29, 0x3e	; 62
    7bf4:	9a 83       	std	Y+2, r25	; 0x02
    7bf6:	89 83       	std	Y+1, r24	; 0x01
	//stop the timer
	TCCR3B = 0;
    7bf8:	81 e9       	ldi	r24, 0x91	; 145
    7bfa:	90 e0       	ldi	r25, 0x00	; 0
    7bfc:	fc 01       	movw	r30, r24
    7bfe:	10 82       	st	Z, r1
	
	//Then clear the timer counter (sets the count back to 0 so when the timer starts again, it starts from 0). 
	//Clear after stopping in order to avoid missing a compare match.
	TCNT3 = 0;
    7c00:	84 e9       	ldi	r24, 0x94	; 148
    7c02:	90 e0       	ldi	r25, 0x00	; 0
    7c04:	fc 01       	movw	r30, r24
    7c06:	11 82       	std	Z+1, r1	; 0x01
    7c08:	10 82       	st	Z, r1
	
	//clear the timeout flag.
	TIFR3 |= (1<<OCF3A);
    7c0a:	88 e3       	ldi	r24, 0x38	; 56
    7c0c:	90 e0       	ldi	r25, 0x00	; 0
    7c0e:	28 e3       	ldi	r18, 0x38	; 56
    7c10:	30 e0       	ldi	r19, 0x00	; 0
    7c12:	f9 01       	movw	r30, r18
    7c14:	20 81       	ld	r18, Z
    7c16:	22 60       	ori	r18, 0x02	; 2
    7c18:	fc 01       	movw	r30, r24
    7c1a:	20 83       	st	Z, r18
    7c1c:	0f 90       	pop	r0
    7c1e:	0f 90       	pop	r0
    7c20:	df 91       	pop	r29
    7c22:	cf 91       	pop	r28
    7c24:	08 95       	ret

00007c26 <__subsf3>:
    7c26:	50 58       	subi	r21, 0x80	; 128

00007c28 <__addsf3>:
    7c28:	bb 27       	eor	r27, r27
    7c2a:	aa 27       	eor	r26, r26
    7c2c:	0e d0       	rcall	.+28     	; 0x7c4a <__addsf3x>
    7c2e:	dc c1       	rjmp	.+952    	; 0x7fe8 <__fp_round>
    7c30:	a5 d1       	rcall	.+842    	; 0x7f7c <__fp_pscA>
    7c32:	30 f0       	brcs	.+12     	; 0x7c40 <__addsf3+0x18>
    7c34:	aa d1       	rcall	.+852    	; 0x7f8a <__fp_pscB>
    7c36:	20 f0       	brcs	.+8      	; 0x7c40 <__addsf3+0x18>
    7c38:	31 f4       	brne	.+12     	; 0x7c46 <__addsf3+0x1e>
    7c3a:	9f 3f       	cpi	r25, 0xFF	; 255
    7c3c:	11 f4       	brne	.+4      	; 0x7c42 <__addsf3+0x1a>
    7c3e:	1e f4       	brtc	.+6      	; 0x7c46 <__addsf3+0x1e>
    7c40:	9a c1       	rjmp	.+820    	; 0x7f76 <__fp_nan>
    7c42:	0e f4       	brtc	.+2      	; 0x7c46 <__addsf3+0x1e>
    7c44:	e0 95       	com	r30
    7c46:	e7 fb       	bst	r30, 7
    7c48:	67 c1       	rjmp	.+718    	; 0x7f18 <__fp_inf>

00007c4a <__addsf3x>:
    7c4a:	e9 2f       	mov	r30, r25
    7c4c:	ef d1       	rcall	.+990    	; 0x802c <__fp_split3>
    7c4e:	80 f3       	brcs	.-32     	; 0x7c30 <__addsf3+0x8>
    7c50:	ba 17       	cp	r27, r26
    7c52:	62 07       	cpc	r22, r18
    7c54:	73 07       	cpc	r23, r19
    7c56:	84 07       	cpc	r24, r20
    7c58:	95 07       	cpc	r25, r21
    7c5a:	18 f0       	brcs	.+6      	; 0x7c62 <__addsf3x+0x18>
    7c5c:	71 f4       	brne	.+28     	; 0x7c7a <__addsf3x+0x30>
    7c5e:	9e f5       	brtc	.+102    	; 0x7cc6 <__addsf3x+0x7c>
    7c60:	1e c2       	rjmp	.+1084   	; 0x809e <__fp_zero>
    7c62:	0e f4       	brtc	.+2      	; 0x7c66 <__addsf3x+0x1c>
    7c64:	e0 95       	com	r30
    7c66:	0b 2e       	mov	r0, r27
    7c68:	ba 2f       	mov	r27, r26
    7c6a:	a0 2d       	mov	r26, r0
    7c6c:	0b 01       	movw	r0, r22
    7c6e:	b9 01       	movw	r22, r18
    7c70:	90 01       	movw	r18, r0
    7c72:	0c 01       	movw	r0, r24
    7c74:	ca 01       	movw	r24, r20
    7c76:	a0 01       	movw	r20, r0
    7c78:	11 24       	eor	r1, r1
    7c7a:	ff 27       	eor	r31, r31
    7c7c:	59 1b       	sub	r21, r25
    7c7e:	99 f0       	breq	.+38     	; 0x7ca6 <__addsf3x+0x5c>
    7c80:	59 3f       	cpi	r21, 0xF9	; 249
    7c82:	50 f4       	brcc	.+20     	; 0x7c98 <__addsf3x+0x4e>
    7c84:	50 3e       	cpi	r21, 0xE0	; 224
    7c86:	68 f1       	brcs	.+90     	; 0x7ce2 <__addsf3x+0x98>
    7c88:	1a 16       	cp	r1, r26
    7c8a:	f0 40       	sbci	r31, 0x00	; 0
    7c8c:	a2 2f       	mov	r26, r18
    7c8e:	23 2f       	mov	r18, r19
    7c90:	34 2f       	mov	r19, r20
    7c92:	44 27       	eor	r20, r20
    7c94:	58 5f       	subi	r21, 0xF8	; 248
    7c96:	f3 cf       	rjmp	.-26     	; 0x7c7e <__addsf3x+0x34>
    7c98:	46 95       	lsr	r20
    7c9a:	37 95       	ror	r19
    7c9c:	27 95       	ror	r18
    7c9e:	a7 95       	ror	r26
    7ca0:	f0 40       	sbci	r31, 0x00	; 0
    7ca2:	53 95       	inc	r21
    7ca4:	c9 f7       	brne	.-14     	; 0x7c98 <__addsf3x+0x4e>
    7ca6:	7e f4       	brtc	.+30     	; 0x7cc6 <__addsf3x+0x7c>
    7ca8:	1f 16       	cp	r1, r31
    7caa:	ba 0b       	sbc	r27, r26
    7cac:	62 0b       	sbc	r22, r18
    7cae:	73 0b       	sbc	r23, r19
    7cb0:	84 0b       	sbc	r24, r20
    7cb2:	ba f0       	brmi	.+46     	; 0x7ce2 <__addsf3x+0x98>
    7cb4:	91 50       	subi	r25, 0x01	; 1
    7cb6:	a1 f0       	breq	.+40     	; 0x7ce0 <__addsf3x+0x96>
    7cb8:	ff 0f       	add	r31, r31
    7cba:	bb 1f       	adc	r27, r27
    7cbc:	66 1f       	adc	r22, r22
    7cbe:	77 1f       	adc	r23, r23
    7cc0:	88 1f       	adc	r24, r24
    7cc2:	c2 f7       	brpl	.-16     	; 0x7cb4 <__addsf3x+0x6a>
    7cc4:	0e c0       	rjmp	.+28     	; 0x7ce2 <__addsf3x+0x98>
    7cc6:	ba 0f       	add	r27, r26
    7cc8:	62 1f       	adc	r22, r18
    7cca:	73 1f       	adc	r23, r19
    7ccc:	84 1f       	adc	r24, r20
    7cce:	48 f4       	brcc	.+18     	; 0x7ce2 <__addsf3x+0x98>
    7cd0:	87 95       	ror	r24
    7cd2:	77 95       	ror	r23
    7cd4:	67 95       	ror	r22
    7cd6:	b7 95       	ror	r27
    7cd8:	f7 95       	ror	r31
    7cda:	9e 3f       	cpi	r25, 0xFE	; 254
    7cdc:	08 f0       	brcs	.+2      	; 0x7ce0 <__addsf3x+0x96>
    7cde:	b3 cf       	rjmp	.-154    	; 0x7c46 <__addsf3+0x1e>
    7ce0:	93 95       	inc	r25
    7ce2:	88 0f       	add	r24, r24
    7ce4:	08 f0       	brcs	.+2      	; 0x7ce8 <__addsf3x+0x9e>
    7ce6:	99 27       	eor	r25, r25
    7ce8:	ee 0f       	add	r30, r30
    7cea:	97 95       	ror	r25
    7cec:	87 95       	ror	r24
    7cee:	08 95       	ret

00007cf0 <__cmpsf2>:
    7cf0:	ef d0       	rcall	.+478    	; 0x7ed0 <__fp_cmp>
    7cf2:	08 f4       	brcc	.+2      	; 0x7cf6 <__cmpsf2+0x6>
    7cf4:	81 e0       	ldi	r24, 0x01	; 1
    7cf6:	08 95       	ret

00007cf8 <cos>:
    7cf8:	50 d1       	rcall	.+672    	; 0x7f9a <__fp_rempio2>
    7cfa:	e3 95       	inc	r30
    7cfc:	86 c1       	rjmp	.+780    	; 0x800a <__fp_sinus>

00007cfe <__divsf3>:
    7cfe:	0c d0       	rcall	.+24     	; 0x7d18 <__divsf3x>
    7d00:	73 c1       	rjmp	.+742    	; 0x7fe8 <__fp_round>
    7d02:	43 d1       	rcall	.+646    	; 0x7f8a <__fp_pscB>
    7d04:	40 f0       	brcs	.+16     	; 0x7d16 <__divsf3+0x18>
    7d06:	3a d1       	rcall	.+628    	; 0x7f7c <__fp_pscA>
    7d08:	30 f0       	brcs	.+12     	; 0x7d16 <__divsf3+0x18>
    7d0a:	21 f4       	brne	.+8      	; 0x7d14 <__divsf3+0x16>
    7d0c:	5f 3f       	cpi	r21, 0xFF	; 255
    7d0e:	19 f0       	breq	.+6      	; 0x7d16 <__divsf3+0x18>
    7d10:	03 c1       	rjmp	.+518    	; 0x7f18 <__fp_inf>
    7d12:	51 11       	cpse	r21, r1
    7d14:	c5 c1       	rjmp	.+906    	; 0x80a0 <__fp_szero>
    7d16:	2f c1       	rjmp	.+606    	; 0x7f76 <__fp_nan>

00007d18 <__divsf3x>:
    7d18:	89 d1       	rcall	.+786    	; 0x802c <__fp_split3>
    7d1a:	98 f3       	brcs	.-26     	; 0x7d02 <__divsf3+0x4>

00007d1c <__divsf3_pse>:
    7d1c:	99 23       	and	r25, r25
    7d1e:	c9 f3       	breq	.-14     	; 0x7d12 <__divsf3+0x14>
    7d20:	55 23       	and	r21, r21
    7d22:	b1 f3       	breq	.-20     	; 0x7d10 <__divsf3+0x12>
    7d24:	95 1b       	sub	r25, r21
    7d26:	55 0b       	sbc	r21, r21
    7d28:	bb 27       	eor	r27, r27
    7d2a:	aa 27       	eor	r26, r26
    7d2c:	62 17       	cp	r22, r18
    7d2e:	73 07       	cpc	r23, r19
    7d30:	84 07       	cpc	r24, r20
    7d32:	38 f0       	brcs	.+14     	; 0x7d42 <__divsf3_pse+0x26>
    7d34:	9f 5f       	subi	r25, 0xFF	; 255
    7d36:	5f 4f       	sbci	r21, 0xFF	; 255
    7d38:	22 0f       	add	r18, r18
    7d3a:	33 1f       	adc	r19, r19
    7d3c:	44 1f       	adc	r20, r20
    7d3e:	aa 1f       	adc	r26, r26
    7d40:	a9 f3       	breq	.-22     	; 0x7d2c <__divsf3_pse+0x10>
    7d42:	33 d0       	rcall	.+102    	; 0x7daa <__divsf3_pse+0x8e>
    7d44:	0e 2e       	mov	r0, r30
    7d46:	3a f0       	brmi	.+14     	; 0x7d56 <__divsf3_pse+0x3a>
    7d48:	e0 e8       	ldi	r30, 0x80	; 128
    7d4a:	30 d0       	rcall	.+96     	; 0x7dac <__divsf3_pse+0x90>
    7d4c:	91 50       	subi	r25, 0x01	; 1
    7d4e:	50 40       	sbci	r21, 0x00	; 0
    7d50:	e6 95       	lsr	r30
    7d52:	00 1c       	adc	r0, r0
    7d54:	ca f7       	brpl	.-14     	; 0x7d48 <__divsf3_pse+0x2c>
    7d56:	29 d0       	rcall	.+82     	; 0x7daa <__divsf3_pse+0x8e>
    7d58:	fe 2f       	mov	r31, r30
    7d5a:	27 d0       	rcall	.+78     	; 0x7daa <__divsf3_pse+0x8e>
    7d5c:	66 0f       	add	r22, r22
    7d5e:	77 1f       	adc	r23, r23
    7d60:	88 1f       	adc	r24, r24
    7d62:	bb 1f       	adc	r27, r27
    7d64:	26 17       	cp	r18, r22
    7d66:	37 07       	cpc	r19, r23
    7d68:	48 07       	cpc	r20, r24
    7d6a:	ab 07       	cpc	r26, r27
    7d6c:	b0 e8       	ldi	r27, 0x80	; 128
    7d6e:	09 f0       	breq	.+2      	; 0x7d72 <__divsf3_pse+0x56>
    7d70:	bb 0b       	sbc	r27, r27
    7d72:	80 2d       	mov	r24, r0
    7d74:	bf 01       	movw	r22, r30
    7d76:	ff 27       	eor	r31, r31
    7d78:	93 58       	subi	r25, 0x83	; 131
    7d7a:	5f 4f       	sbci	r21, 0xFF	; 255
    7d7c:	2a f0       	brmi	.+10     	; 0x7d88 <__divsf3_pse+0x6c>
    7d7e:	9e 3f       	cpi	r25, 0xFE	; 254
    7d80:	51 05       	cpc	r21, r1
    7d82:	68 f0       	brcs	.+26     	; 0x7d9e <__divsf3_pse+0x82>
    7d84:	c9 c0       	rjmp	.+402    	; 0x7f18 <__fp_inf>
    7d86:	8c c1       	rjmp	.+792    	; 0x80a0 <__fp_szero>
    7d88:	5f 3f       	cpi	r21, 0xFF	; 255
    7d8a:	ec f3       	brlt	.-6      	; 0x7d86 <__divsf3_pse+0x6a>
    7d8c:	98 3e       	cpi	r25, 0xE8	; 232
    7d8e:	dc f3       	brlt	.-10     	; 0x7d86 <__divsf3_pse+0x6a>
    7d90:	86 95       	lsr	r24
    7d92:	77 95       	ror	r23
    7d94:	67 95       	ror	r22
    7d96:	b7 95       	ror	r27
    7d98:	f7 95       	ror	r31
    7d9a:	9f 5f       	subi	r25, 0xFF	; 255
    7d9c:	c9 f7       	brne	.-14     	; 0x7d90 <__divsf3_pse+0x74>
    7d9e:	88 0f       	add	r24, r24
    7da0:	91 1d       	adc	r25, r1
    7da2:	96 95       	lsr	r25
    7da4:	87 95       	ror	r24
    7da6:	97 f9       	bld	r25, 7
    7da8:	08 95       	ret
    7daa:	e1 e0       	ldi	r30, 0x01	; 1
    7dac:	66 0f       	add	r22, r22
    7dae:	77 1f       	adc	r23, r23
    7db0:	88 1f       	adc	r24, r24
    7db2:	bb 1f       	adc	r27, r27
    7db4:	62 17       	cp	r22, r18
    7db6:	73 07       	cpc	r23, r19
    7db8:	84 07       	cpc	r24, r20
    7dba:	ba 07       	cpc	r27, r26
    7dbc:	20 f0       	brcs	.+8      	; 0x7dc6 <__divsf3_pse+0xaa>
    7dbe:	62 1b       	sub	r22, r18
    7dc0:	73 0b       	sbc	r23, r19
    7dc2:	84 0b       	sbc	r24, r20
    7dc4:	ba 0b       	sbc	r27, r26
    7dc6:	ee 1f       	adc	r30, r30
    7dc8:	88 f7       	brcc	.-30     	; 0x7dac <__divsf3_pse+0x90>
    7dca:	e0 95       	com	r30
    7dcc:	08 95       	ret

00007dce <__fixsfsi>:
    7dce:	04 d0       	rcall	.+8      	; 0x7dd8 <__fixunssfsi>
    7dd0:	68 94       	set
    7dd2:	b1 11       	cpse	r27, r1
    7dd4:	65 c1       	rjmp	.+714    	; 0x80a0 <__fp_szero>
    7dd6:	08 95       	ret

00007dd8 <__fixunssfsi>:
    7dd8:	31 d1       	rcall	.+610    	; 0x803c <__fp_splitA>
    7dda:	88 f0       	brcs	.+34     	; 0x7dfe <__fixunssfsi+0x26>
    7ddc:	9f 57       	subi	r25, 0x7F	; 127
    7dde:	90 f0       	brcs	.+36     	; 0x7e04 <__fixunssfsi+0x2c>
    7de0:	b9 2f       	mov	r27, r25
    7de2:	99 27       	eor	r25, r25
    7de4:	b7 51       	subi	r27, 0x17	; 23
    7de6:	a0 f0       	brcs	.+40     	; 0x7e10 <__fixunssfsi+0x38>
    7de8:	d1 f0       	breq	.+52     	; 0x7e1e <__fixunssfsi+0x46>
    7dea:	66 0f       	add	r22, r22
    7dec:	77 1f       	adc	r23, r23
    7dee:	88 1f       	adc	r24, r24
    7df0:	99 1f       	adc	r25, r25
    7df2:	1a f0       	brmi	.+6      	; 0x7dfa <__fixunssfsi+0x22>
    7df4:	ba 95       	dec	r27
    7df6:	c9 f7       	brne	.-14     	; 0x7dea <__fixunssfsi+0x12>
    7df8:	12 c0       	rjmp	.+36     	; 0x7e1e <__fixunssfsi+0x46>
    7dfa:	b1 30       	cpi	r27, 0x01	; 1
    7dfc:	81 f0       	breq	.+32     	; 0x7e1e <__fixunssfsi+0x46>
    7dfe:	4f d1       	rcall	.+670    	; 0x809e <__fp_zero>
    7e00:	b1 e0       	ldi	r27, 0x01	; 1
    7e02:	08 95       	ret
    7e04:	4c c1       	rjmp	.+664    	; 0x809e <__fp_zero>
    7e06:	67 2f       	mov	r22, r23
    7e08:	78 2f       	mov	r23, r24
    7e0a:	88 27       	eor	r24, r24
    7e0c:	b8 5f       	subi	r27, 0xF8	; 248
    7e0e:	39 f0       	breq	.+14     	; 0x7e1e <__fixunssfsi+0x46>
    7e10:	b9 3f       	cpi	r27, 0xF9	; 249
    7e12:	cc f3       	brlt	.-14     	; 0x7e06 <__fixunssfsi+0x2e>
    7e14:	86 95       	lsr	r24
    7e16:	77 95       	ror	r23
    7e18:	67 95       	ror	r22
    7e1a:	b3 95       	inc	r27
    7e1c:	d9 f7       	brne	.-10     	; 0x7e14 <__fixunssfsi+0x3c>
    7e1e:	3e f4       	brtc	.+14     	; 0x7e2e <__fixunssfsi+0x56>
    7e20:	90 95       	com	r25
    7e22:	80 95       	com	r24
    7e24:	70 95       	com	r23
    7e26:	61 95       	neg	r22
    7e28:	7f 4f       	sbci	r23, 0xFF	; 255
    7e2a:	8f 4f       	sbci	r24, 0xFF	; 255
    7e2c:	9f 4f       	sbci	r25, 0xFF	; 255
    7e2e:	08 95       	ret

00007e30 <__floatunsisf>:
    7e30:	e8 94       	clt
    7e32:	09 c0       	rjmp	.+18     	; 0x7e46 <__floatsisf+0x12>

00007e34 <__floatsisf>:
    7e34:	97 fb       	bst	r25, 7
    7e36:	3e f4       	brtc	.+14     	; 0x7e46 <__floatsisf+0x12>
    7e38:	90 95       	com	r25
    7e3a:	80 95       	com	r24
    7e3c:	70 95       	com	r23
    7e3e:	61 95       	neg	r22
    7e40:	7f 4f       	sbci	r23, 0xFF	; 255
    7e42:	8f 4f       	sbci	r24, 0xFF	; 255
    7e44:	9f 4f       	sbci	r25, 0xFF	; 255
    7e46:	99 23       	and	r25, r25
    7e48:	a9 f0       	breq	.+42     	; 0x7e74 <__floatsisf+0x40>
    7e4a:	f9 2f       	mov	r31, r25
    7e4c:	96 e9       	ldi	r25, 0x96	; 150
    7e4e:	bb 27       	eor	r27, r27
    7e50:	93 95       	inc	r25
    7e52:	f6 95       	lsr	r31
    7e54:	87 95       	ror	r24
    7e56:	77 95       	ror	r23
    7e58:	67 95       	ror	r22
    7e5a:	b7 95       	ror	r27
    7e5c:	f1 11       	cpse	r31, r1
    7e5e:	f8 cf       	rjmp	.-16     	; 0x7e50 <__floatsisf+0x1c>
    7e60:	fa f4       	brpl	.+62     	; 0x7ea0 <__floatsisf+0x6c>
    7e62:	bb 0f       	add	r27, r27
    7e64:	11 f4       	brne	.+4      	; 0x7e6a <__floatsisf+0x36>
    7e66:	60 ff       	sbrs	r22, 0
    7e68:	1b c0       	rjmp	.+54     	; 0x7ea0 <__floatsisf+0x6c>
    7e6a:	6f 5f       	subi	r22, 0xFF	; 255
    7e6c:	7f 4f       	sbci	r23, 0xFF	; 255
    7e6e:	8f 4f       	sbci	r24, 0xFF	; 255
    7e70:	9f 4f       	sbci	r25, 0xFF	; 255
    7e72:	16 c0       	rjmp	.+44     	; 0x7ea0 <__floatsisf+0x6c>
    7e74:	88 23       	and	r24, r24
    7e76:	11 f0       	breq	.+4      	; 0x7e7c <__floatsisf+0x48>
    7e78:	96 e9       	ldi	r25, 0x96	; 150
    7e7a:	11 c0       	rjmp	.+34     	; 0x7e9e <__floatsisf+0x6a>
    7e7c:	77 23       	and	r23, r23
    7e7e:	21 f0       	breq	.+8      	; 0x7e88 <__floatsisf+0x54>
    7e80:	9e e8       	ldi	r25, 0x8E	; 142
    7e82:	87 2f       	mov	r24, r23
    7e84:	76 2f       	mov	r23, r22
    7e86:	05 c0       	rjmp	.+10     	; 0x7e92 <__floatsisf+0x5e>
    7e88:	66 23       	and	r22, r22
    7e8a:	71 f0       	breq	.+28     	; 0x7ea8 <__floatsisf+0x74>
    7e8c:	96 e8       	ldi	r25, 0x86	; 134
    7e8e:	86 2f       	mov	r24, r22
    7e90:	70 e0       	ldi	r23, 0x00	; 0
    7e92:	60 e0       	ldi	r22, 0x00	; 0
    7e94:	2a f0       	brmi	.+10     	; 0x7ea0 <__floatsisf+0x6c>
    7e96:	9a 95       	dec	r25
    7e98:	66 0f       	add	r22, r22
    7e9a:	77 1f       	adc	r23, r23
    7e9c:	88 1f       	adc	r24, r24
    7e9e:	da f7       	brpl	.-10     	; 0x7e96 <__floatsisf+0x62>
    7ea0:	88 0f       	add	r24, r24
    7ea2:	96 95       	lsr	r25
    7ea4:	87 95       	ror	r24
    7ea6:	97 f9       	bld	r25, 7
    7ea8:	08 95       	ret

00007eaa <floor>:
    7eaa:	e2 d0       	rcall	.+452    	; 0x8070 <__fp_trunc>
    7eac:	80 f0       	brcs	.+32     	; 0x7ece <floor+0x24>
    7eae:	9f 37       	cpi	r25, 0x7F	; 127
    7eb0:	40 f4       	brcc	.+16     	; 0x7ec2 <floor+0x18>
    7eb2:	91 11       	cpse	r25, r1
    7eb4:	0e f0       	brts	.+2      	; 0x7eb8 <floor+0xe>
    7eb6:	f4 c0       	rjmp	.+488    	; 0x80a0 <__fp_szero>
    7eb8:	60 e0       	ldi	r22, 0x00	; 0
    7eba:	70 e0       	ldi	r23, 0x00	; 0
    7ebc:	80 e8       	ldi	r24, 0x80	; 128
    7ebe:	9f eb       	ldi	r25, 0xBF	; 191
    7ec0:	08 95       	ret
    7ec2:	26 f4       	brtc	.+8      	; 0x7ecc <floor+0x22>
    7ec4:	1b 16       	cp	r1, r27
    7ec6:	61 1d       	adc	r22, r1
    7ec8:	71 1d       	adc	r23, r1
    7eca:	81 1d       	adc	r24, r1
    7ecc:	2b c0       	rjmp	.+86     	; 0x7f24 <__fp_mintl>
    7ece:	45 c0       	rjmp	.+138    	; 0x7f5a <__fp_mpack>

00007ed0 <__fp_cmp>:
    7ed0:	99 0f       	add	r25, r25
    7ed2:	00 08       	sbc	r0, r0
    7ed4:	55 0f       	add	r21, r21
    7ed6:	aa 0b       	sbc	r26, r26
    7ed8:	e0 e8       	ldi	r30, 0x80	; 128
    7eda:	fe ef       	ldi	r31, 0xFE	; 254
    7edc:	16 16       	cp	r1, r22
    7ede:	17 06       	cpc	r1, r23
    7ee0:	e8 07       	cpc	r30, r24
    7ee2:	f9 07       	cpc	r31, r25
    7ee4:	c0 f0       	brcs	.+48     	; 0x7f16 <__fp_cmp+0x46>
    7ee6:	12 16       	cp	r1, r18
    7ee8:	13 06       	cpc	r1, r19
    7eea:	e4 07       	cpc	r30, r20
    7eec:	f5 07       	cpc	r31, r21
    7eee:	98 f0       	brcs	.+38     	; 0x7f16 <__fp_cmp+0x46>
    7ef0:	62 1b       	sub	r22, r18
    7ef2:	73 0b       	sbc	r23, r19
    7ef4:	84 0b       	sbc	r24, r20
    7ef6:	95 0b       	sbc	r25, r21
    7ef8:	39 f4       	brne	.+14     	; 0x7f08 <__fp_cmp+0x38>
    7efa:	0a 26       	eor	r0, r26
    7efc:	61 f0       	breq	.+24     	; 0x7f16 <__fp_cmp+0x46>
    7efe:	23 2b       	or	r18, r19
    7f00:	24 2b       	or	r18, r20
    7f02:	25 2b       	or	r18, r21
    7f04:	21 f4       	brne	.+8      	; 0x7f0e <__fp_cmp+0x3e>
    7f06:	08 95       	ret
    7f08:	0a 26       	eor	r0, r26
    7f0a:	09 f4       	brne	.+2      	; 0x7f0e <__fp_cmp+0x3e>
    7f0c:	a1 40       	sbci	r26, 0x01	; 1
    7f0e:	a6 95       	lsr	r26
    7f10:	8f ef       	ldi	r24, 0xFF	; 255
    7f12:	81 1d       	adc	r24, r1
    7f14:	81 1d       	adc	r24, r1
    7f16:	08 95       	ret

00007f18 <__fp_inf>:
    7f18:	97 f9       	bld	r25, 7
    7f1a:	9f 67       	ori	r25, 0x7F	; 127
    7f1c:	80 e8       	ldi	r24, 0x80	; 128
    7f1e:	70 e0       	ldi	r23, 0x00	; 0
    7f20:	60 e0       	ldi	r22, 0x00	; 0
    7f22:	08 95       	ret

00007f24 <__fp_mintl>:
    7f24:	88 23       	and	r24, r24
    7f26:	71 f4       	brne	.+28     	; 0x7f44 <__fp_mintl+0x20>
    7f28:	77 23       	and	r23, r23
    7f2a:	21 f0       	breq	.+8      	; 0x7f34 <__fp_mintl+0x10>
    7f2c:	98 50       	subi	r25, 0x08	; 8
    7f2e:	87 2b       	or	r24, r23
    7f30:	76 2f       	mov	r23, r22
    7f32:	07 c0       	rjmp	.+14     	; 0x7f42 <__fp_mintl+0x1e>
    7f34:	66 23       	and	r22, r22
    7f36:	11 f4       	brne	.+4      	; 0x7f3c <__fp_mintl+0x18>
    7f38:	99 27       	eor	r25, r25
    7f3a:	0d c0       	rjmp	.+26     	; 0x7f56 <__fp_mintl+0x32>
    7f3c:	90 51       	subi	r25, 0x10	; 16
    7f3e:	86 2b       	or	r24, r22
    7f40:	70 e0       	ldi	r23, 0x00	; 0
    7f42:	60 e0       	ldi	r22, 0x00	; 0
    7f44:	2a f0       	brmi	.+10     	; 0x7f50 <__fp_mintl+0x2c>
    7f46:	9a 95       	dec	r25
    7f48:	66 0f       	add	r22, r22
    7f4a:	77 1f       	adc	r23, r23
    7f4c:	88 1f       	adc	r24, r24
    7f4e:	da f7       	brpl	.-10     	; 0x7f46 <__fp_mintl+0x22>
    7f50:	88 0f       	add	r24, r24
    7f52:	96 95       	lsr	r25
    7f54:	87 95       	ror	r24
    7f56:	97 f9       	bld	r25, 7
    7f58:	08 95       	ret

00007f5a <__fp_mpack>:
    7f5a:	9f 3f       	cpi	r25, 0xFF	; 255
    7f5c:	31 f0       	breq	.+12     	; 0x7f6a <__fp_mpack_finite+0xc>

00007f5e <__fp_mpack_finite>:
    7f5e:	91 50       	subi	r25, 0x01	; 1
    7f60:	20 f4       	brcc	.+8      	; 0x7f6a <__fp_mpack_finite+0xc>
    7f62:	87 95       	ror	r24
    7f64:	77 95       	ror	r23
    7f66:	67 95       	ror	r22
    7f68:	b7 95       	ror	r27
    7f6a:	88 0f       	add	r24, r24
    7f6c:	91 1d       	adc	r25, r1
    7f6e:	96 95       	lsr	r25
    7f70:	87 95       	ror	r24
    7f72:	97 f9       	bld	r25, 7
    7f74:	08 95       	ret

00007f76 <__fp_nan>:
    7f76:	9f ef       	ldi	r25, 0xFF	; 255
    7f78:	80 ec       	ldi	r24, 0xC0	; 192
    7f7a:	08 95       	ret

00007f7c <__fp_pscA>:
    7f7c:	00 24       	eor	r0, r0
    7f7e:	0a 94       	dec	r0
    7f80:	16 16       	cp	r1, r22
    7f82:	17 06       	cpc	r1, r23
    7f84:	18 06       	cpc	r1, r24
    7f86:	09 06       	cpc	r0, r25
    7f88:	08 95       	ret

00007f8a <__fp_pscB>:
    7f8a:	00 24       	eor	r0, r0
    7f8c:	0a 94       	dec	r0
    7f8e:	12 16       	cp	r1, r18
    7f90:	13 06       	cpc	r1, r19
    7f92:	14 06       	cpc	r1, r20
    7f94:	05 06       	cpc	r0, r21
    7f96:	08 95       	ret
    7f98:	ee cf       	rjmp	.-36     	; 0x7f76 <__fp_nan>

00007f9a <__fp_rempio2>:
    7f9a:	50 d0       	rcall	.+160    	; 0x803c <__fp_splitA>
    7f9c:	e8 f3       	brcs	.-6      	; 0x7f98 <__fp_pscB+0xe>
    7f9e:	e8 94       	clt
    7fa0:	e0 e0       	ldi	r30, 0x00	; 0
    7fa2:	bb 27       	eor	r27, r27
    7fa4:	9f 57       	subi	r25, 0x7F	; 127
    7fa6:	f0 f0       	brcs	.+60     	; 0x7fe4 <__fp_rempio2+0x4a>
    7fa8:	2a ed       	ldi	r18, 0xDA	; 218
    7faa:	3f e0       	ldi	r19, 0x0F	; 15
    7fac:	49 ec       	ldi	r20, 0xC9	; 201
    7fae:	06 c0       	rjmp	.+12     	; 0x7fbc <__fp_rempio2+0x22>
    7fb0:	ee 0f       	add	r30, r30
    7fb2:	bb 0f       	add	r27, r27
    7fb4:	66 1f       	adc	r22, r22
    7fb6:	77 1f       	adc	r23, r23
    7fb8:	88 1f       	adc	r24, r24
    7fba:	28 f0       	brcs	.+10     	; 0x7fc6 <__fp_rempio2+0x2c>
    7fbc:	b2 3a       	cpi	r27, 0xA2	; 162
    7fbe:	62 07       	cpc	r22, r18
    7fc0:	73 07       	cpc	r23, r19
    7fc2:	84 07       	cpc	r24, r20
    7fc4:	28 f0       	brcs	.+10     	; 0x7fd0 <__fp_rempio2+0x36>
    7fc6:	b2 5a       	subi	r27, 0xA2	; 162
    7fc8:	62 0b       	sbc	r22, r18
    7fca:	73 0b       	sbc	r23, r19
    7fcc:	84 0b       	sbc	r24, r20
    7fce:	e3 95       	inc	r30
    7fd0:	9a 95       	dec	r25
    7fd2:	72 f7       	brpl	.-36     	; 0x7fb0 <__fp_rempio2+0x16>
    7fd4:	80 38       	cpi	r24, 0x80	; 128
    7fd6:	30 f4       	brcc	.+12     	; 0x7fe4 <__fp_rempio2+0x4a>
    7fd8:	9a 95       	dec	r25
    7fda:	bb 0f       	add	r27, r27
    7fdc:	66 1f       	adc	r22, r22
    7fde:	77 1f       	adc	r23, r23
    7fe0:	88 1f       	adc	r24, r24
    7fe2:	d2 f7       	brpl	.-12     	; 0x7fd8 <__fp_rempio2+0x3e>
    7fe4:	90 48       	sbci	r25, 0x80	; 128
    7fe6:	bb cf       	rjmp	.-138    	; 0x7f5e <__fp_mpack_finite>

00007fe8 <__fp_round>:
    7fe8:	09 2e       	mov	r0, r25
    7fea:	03 94       	inc	r0
    7fec:	00 0c       	add	r0, r0
    7fee:	11 f4       	brne	.+4      	; 0x7ff4 <__fp_round+0xc>
    7ff0:	88 23       	and	r24, r24
    7ff2:	52 f0       	brmi	.+20     	; 0x8008 <__fp_round+0x20>
    7ff4:	bb 0f       	add	r27, r27
    7ff6:	40 f4       	brcc	.+16     	; 0x8008 <__fp_round+0x20>
    7ff8:	bf 2b       	or	r27, r31
    7ffa:	11 f4       	brne	.+4      	; 0x8000 <__fp_round+0x18>
    7ffc:	60 ff       	sbrs	r22, 0
    7ffe:	04 c0       	rjmp	.+8      	; 0x8008 <__fp_round+0x20>
    8000:	6f 5f       	subi	r22, 0xFF	; 255
    8002:	7f 4f       	sbci	r23, 0xFF	; 255
    8004:	8f 4f       	sbci	r24, 0xFF	; 255
    8006:	9f 4f       	sbci	r25, 0xFF	; 255
    8008:	08 95       	ret

0000800a <__fp_sinus>:
    800a:	ef 93       	push	r30
    800c:	e0 ff       	sbrs	r30, 0
    800e:	06 c0       	rjmp	.+12     	; 0x801c <__fp_sinus+0x12>
    8010:	a2 ea       	ldi	r26, 0xA2	; 162
    8012:	2a ed       	ldi	r18, 0xDA	; 218
    8014:	3f e0       	ldi	r19, 0x0F	; 15
    8016:	49 ec       	ldi	r20, 0xC9	; 201
    8018:	5f eb       	ldi	r21, 0xBF	; 191
    801a:	17 de       	rcall	.-978    	; 0x7c4a <__addsf3x>
    801c:	e5 df       	rcall	.-54     	; 0x7fe8 <__fp_round>
    801e:	0f 90       	pop	r0
    8020:	03 94       	inc	r0
    8022:	01 fc       	sbrc	r0, 1
    8024:	90 58       	subi	r25, 0x80	; 128
    8026:	e4 ee       	ldi	r30, 0xE4	; 228
    8028:	f0 e0       	ldi	r31, 0x00	; 0
    802a:	98 c1       	rjmp	.+816    	; 0x835c <__fp_powsodd>

0000802c <__fp_split3>:
    802c:	57 fd       	sbrc	r21, 7
    802e:	90 58       	subi	r25, 0x80	; 128
    8030:	44 0f       	add	r20, r20
    8032:	55 1f       	adc	r21, r21
    8034:	59 f0       	breq	.+22     	; 0x804c <__fp_splitA+0x10>
    8036:	5f 3f       	cpi	r21, 0xFF	; 255
    8038:	71 f0       	breq	.+28     	; 0x8056 <__fp_splitA+0x1a>
    803a:	47 95       	ror	r20

0000803c <__fp_splitA>:
    803c:	88 0f       	add	r24, r24
    803e:	97 fb       	bst	r25, 7
    8040:	99 1f       	adc	r25, r25
    8042:	61 f0       	breq	.+24     	; 0x805c <__fp_splitA+0x20>
    8044:	9f 3f       	cpi	r25, 0xFF	; 255
    8046:	79 f0       	breq	.+30     	; 0x8066 <__fp_splitA+0x2a>
    8048:	87 95       	ror	r24
    804a:	08 95       	ret
    804c:	12 16       	cp	r1, r18
    804e:	13 06       	cpc	r1, r19
    8050:	14 06       	cpc	r1, r20
    8052:	55 1f       	adc	r21, r21
    8054:	f2 cf       	rjmp	.-28     	; 0x803a <__fp_split3+0xe>
    8056:	46 95       	lsr	r20
    8058:	f1 df       	rcall	.-30     	; 0x803c <__fp_splitA>
    805a:	08 c0       	rjmp	.+16     	; 0x806c <__fp_splitA+0x30>
    805c:	16 16       	cp	r1, r22
    805e:	17 06       	cpc	r1, r23
    8060:	18 06       	cpc	r1, r24
    8062:	99 1f       	adc	r25, r25
    8064:	f1 cf       	rjmp	.-30     	; 0x8048 <__fp_splitA+0xc>
    8066:	86 95       	lsr	r24
    8068:	71 05       	cpc	r23, r1
    806a:	61 05       	cpc	r22, r1
    806c:	08 94       	sec
    806e:	08 95       	ret

00008070 <__fp_trunc>:
    8070:	e5 df       	rcall	.-54     	; 0x803c <__fp_splitA>
    8072:	a0 f0       	brcs	.+40     	; 0x809c <__fp_trunc+0x2c>
    8074:	be e7       	ldi	r27, 0x7E	; 126
    8076:	b9 17       	cp	r27, r25
    8078:	88 f4       	brcc	.+34     	; 0x809c <__fp_trunc+0x2c>
    807a:	bb 27       	eor	r27, r27
    807c:	9f 38       	cpi	r25, 0x8F	; 143
    807e:	60 f4       	brcc	.+24     	; 0x8098 <__fp_trunc+0x28>
    8080:	16 16       	cp	r1, r22
    8082:	b1 1d       	adc	r27, r1
    8084:	67 2f       	mov	r22, r23
    8086:	78 2f       	mov	r23, r24
    8088:	88 27       	eor	r24, r24
    808a:	98 5f       	subi	r25, 0xF8	; 248
    808c:	f7 cf       	rjmp	.-18     	; 0x807c <__fp_trunc+0xc>
    808e:	86 95       	lsr	r24
    8090:	77 95       	ror	r23
    8092:	67 95       	ror	r22
    8094:	b1 1d       	adc	r27, r1
    8096:	93 95       	inc	r25
    8098:	96 39       	cpi	r25, 0x96	; 150
    809a:	c8 f3       	brcs	.-14     	; 0x808e <__fp_trunc+0x1e>
    809c:	08 95       	ret

0000809e <__fp_zero>:
    809e:	e8 94       	clt

000080a0 <__fp_szero>:
    80a0:	bb 27       	eor	r27, r27
    80a2:	66 27       	eor	r22, r22
    80a4:	77 27       	eor	r23, r23
    80a6:	cb 01       	movw	r24, r22
    80a8:	97 f9       	bld	r25, 7
    80aa:	08 95       	ret

000080ac <__gesf2>:
    80ac:	11 df       	rcall	.-478    	; 0x7ed0 <__fp_cmp>
    80ae:	08 f4       	brcc	.+2      	; 0x80b2 <__gesf2+0x6>
    80b0:	8f ef       	ldi	r24, 0xFF	; 255
    80b2:	08 95       	ret

000080b4 <__mulsf3>:
    80b4:	0b d0       	rcall	.+22     	; 0x80cc <__mulsf3x>
    80b6:	98 cf       	rjmp	.-208    	; 0x7fe8 <__fp_round>
    80b8:	61 df       	rcall	.-318    	; 0x7f7c <__fp_pscA>
    80ba:	28 f0       	brcs	.+10     	; 0x80c6 <__mulsf3+0x12>
    80bc:	66 df       	rcall	.-308    	; 0x7f8a <__fp_pscB>
    80be:	18 f0       	brcs	.+6      	; 0x80c6 <__mulsf3+0x12>
    80c0:	95 23       	and	r25, r21
    80c2:	09 f0       	breq	.+2      	; 0x80c6 <__mulsf3+0x12>
    80c4:	29 cf       	rjmp	.-430    	; 0x7f18 <__fp_inf>
    80c6:	57 cf       	rjmp	.-338    	; 0x7f76 <__fp_nan>
    80c8:	11 24       	eor	r1, r1
    80ca:	ea cf       	rjmp	.-44     	; 0x80a0 <__fp_szero>

000080cc <__mulsf3x>:
    80cc:	af df       	rcall	.-162    	; 0x802c <__fp_split3>
    80ce:	a0 f3       	brcs	.-24     	; 0x80b8 <__mulsf3+0x4>

000080d0 <__mulsf3_pse>:
    80d0:	95 9f       	mul	r25, r21
    80d2:	d1 f3       	breq	.-12     	; 0x80c8 <__mulsf3+0x14>
    80d4:	95 0f       	add	r25, r21
    80d6:	50 e0       	ldi	r21, 0x00	; 0
    80d8:	55 1f       	adc	r21, r21
    80da:	62 9f       	mul	r22, r18
    80dc:	f0 01       	movw	r30, r0
    80de:	72 9f       	mul	r23, r18
    80e0:	bb 27       	eor	r27, r27
    80e2:	f0 0d       	add	r31, r0
    80e4:	b1 1d       	adc	r27, r1
    80e6:	63 9f       	mul	r22, r19
    80e8:	aa 27       	eor	r26, r26
    80ea:	f0 0d       	add	r31, r0
    80ec:	b1 1d       	adc	r27, r1
    80ee:	aa 1f       	adc	r26, r26
    80f0:	64 9f       	mul	r22, r20
    80f2:	66 27       	eor	r22, r22
    80f4:	b0 0d       	add	r27, r0
    80f6:	a1 1d       	adc	r26, r1
    80f8:	66 1f       	adc	r22, r22
    80fa:	82 9f       	mul	r24, r18
    80fc:	22 27       	eor	r18, r18
    80fe:	b0 0d       	add	r27, r0
    8100:	a1 1d       	adc	r26, r1
    8102:	62 1f       	adc	r22, r18
    8104:	73 9f       	mul	r23, r19
    8106:	b0 0d       	add	r27, r0
    8108:	a1 1d       	adc	r26, r1
    810a:	62 1f       	adc	r22, r18
    810c:	83 9f       	mul	r24, r19
    810e:	a0 0d       	add	r26, r0
    8110:	61 1d       	adc	r22, r1
    8112:	22 1f       	adc	r18, r18
    8114:	74 9f       	mul	r23, r20
    8116:	33 27       	eor	r19, r19
    8118:	a0 0d       	add	r26, r0
    811a:	61 1d       	adc	r22, r1
    811c:	23 1f       	adc	r18, r19
    811e:	84 9f       	mul	r24, r20
    8120:	60 0d       	add	r22, r0
    8122:	21 1d       	adc	r18, r1
    8124:	82 2f       	mov	r24, r18
    8126:	76 2f       	mov	r23, r22
    8128:	6a 2f       	mov	r22, r26
    812a:	11 24       	eor	r1, r1
    812c:	9f 57       	subi	r25, 0x7F	; 127
    812e:	50 40       	sbci	r21, 0x00	; 0
    8130:	8a f0       	brmi	.+34     	; 0x8154 <__mulsf3_pse+0x84>
    8132:	e1 f0       	breq	.+56     	; 0x816c <__mulsf3_pse+0x9c>
    8134:	88 23       	and	r24, r24
    8136:	4a f0       	brmi	.+18     	; 0x814a <__mulsf3_pse+0x7a>
    8138:	ee 0f       	add	r30, r30
    813a:	ff 1f       	adc	r31, r31
    813c:	bb 1f       	adc	r27, r27
    813e:	66 1f       	adc	r22, r22
    8140:	77 1f       	adc	r23, r23
    8142:	88 1f       	adc	r24, r24
    8144:	91 50       	subi	r25, 0x01	; 1
    8146:	50 40       	sbci	r21, 0x00	; 0
    8148:	a9 f7       	brne	.-22     	; 0x8134 <__mulsf3_pse+0x64>
    814a:	9e 3f       	cpi	r25, 0xFE	; 254
    814c:	51 05       	cpc	r21, r1
    814e:	70 f0       	brcs	.+28     	; 0x816c <__mulsf3_pse+0x9c>
    8150:	e3 ce       	rjmp	.-570    	; 0x7f18 <__fp_inf>
    8152:	a6 cf       	rjmp	.-180    	; 0x80a0 <__fp_szero>
    8154:	5f 3f       	cpi	r21, 0xFF	; 255
    8156:	ec f3       	brlt	.-6      	; 0x8152 <__mulsf3_pse+0x82>
    8158:	98 3e       	cpi	r25, 0xE8	; 232
    815a:	dc f3       	brlt	.-10     	; 0x8152 <__mulsf3_pse+0x82>
    815c:	86 95       	lsr	r24
    815e:	77 95       	ror	r23
    8160:	67 95       	ror	r22
    8162:	b7 95       	ror	r27
    8164:	f7 95       	ror	r31
    8166:	e7 95       	ror	r30
    8168:	9f 5f       	subi	r25, 0xFF	; 255
    816a:	c1 f7       	brne	.-16     	; 0x815c <__mulsf3_pse+0x8c>
    816c:	fe 2b       	or	r31, r30
    816e:	88 0f       	add	r24, r24
    8170:	91 1d       	adc	r25, r1
    8172:	96 95       	lsr	r25
    8174:	87 95       	ror	r24
    8176:	97 f9       	bld	r25, 7
    8178:	08 95       	ret

0000817a <pow>:
    817a:	fa 01       	movw	r30, r20
    817c:	ee 0f       	add	r30, r30
    817e:	ff 1f       	adc	r31, r31
    8180:	30 96       	adiw	r30, 0x00	; 0
    8182:	21 05       	cpc	r18, r1
    8184:	31 05       	cpc	r19, r1
    8186:	99 f1       	breq	.+102    	; 0x81ee <pow+0x74>
    8188:	61 15       	cp	r22, r1
    818a:	71 05       	cpc	r23, r1
    818c:	61 f4       	brne	.+24     	; 0x81a6 <pow+0x2c>
    818e:	80 38       	cpi	r24, 0x80	; 128
    8190:	bf e3       	ldi	r27, 0x3F	; 63
    8192:	9b 07       	cpc	r25, r27
    8194:	49 f1       	breq	.+82     	; 0x81e8 <pow+0x6e>
    8196:	68 94       	set
    8198:	90 38       	cpi	r25, 0x80	; 128
    819a:	81 05       	cpc	r24, r1
    819c:	61 f0       	breq	.+24     	; 0x81b6 <pow+0x3c>
    819e:	80 38       	cpi	r24, 0x80	; 128
    81a0:	bf ef       	ldi	r27, 0xFF	; 255
    81a2:	9b 07       	cpc	r25, r27
    81a4:	41 f0       	breq	.+16     	; 0x81b6 <pow+0x3c>
    81a6:	99 23       	and	r25, r25
    81a8:	42 f5       	brpl	.+80     	; 0x81fa <pow+0x80>
    81aa:	ff 3f       	cpi	r31, 0xFF	; 255
    81ac:	e1 05       	cpc	r30, r1
    81ae:	31 05       	cpc	r19, r1
    81b0:	21 05       	cpc	r18, r1
    81b2:	11 f1       	breq	.+68     	; 0x81f8 <pow+0x7e>
    81b4:	e8 94       	clt
    81b6:	08 94       	sec
    81b8:	e7 95       	ror	r30
    81ba:	d9 01       	movw	r26, r18
    81bc:	aa 23       	and	r26, r26
    81be:	29 f4       	brne	.+10     	; 0x81ca <pow+0x50>
    81c0:	ab 2f       	mov	r26, r27
    81c2:	be 2f       	mov	r27, r30
    81c4:	f8 5f       	subi	r31, 0xF8	; 248
    81c6:	d0 f3       	brcs	.-12     	; 0x81bc <pow+0x42>
    81c8:	10 c0       	rjmp	.+32     	; 0x81ea <pow+0x70>
    81ca:	ff 5f       	subi	r31, 0xFF	; 255
    81cc:	70 f4       	brcc	.+28     	; 0x81ea <pow+0x70>
    81ce:	a6 95       	lsr	r26
    81d0:	e0 f7       	brcc	.-8      	; 0x81ca <pow+0x50>
    81d2:	f7 39       	cpi	r31, 0x97	; 151
    81d4:	50 f0       	brcs	.+20     	; 0x81ea <pow+0x70>
    81d6:	19 f0       	breq	.+6      	; 0x81de <pow+0x64>
    81d8:	ff 3a       	cpi	r31, 0xAF	; 175
    81da:	38 f4       	brcc	.+14     	; 0x81ea <pow+0x70>
    81dc:	9f 77       	andi	r25, 0x7F	; 127
    81de:	9f 93       	push	r25
    81e0:	0c d0       	rcall	.+24     	; 0x81fa <pow+0x80>
    81e2:	0f 90       	pop	r0
    81e4:	07 fc       	sbrc	r0, 7
    81e6:	90 58       	subi	r25, 0x80	; 128
    81e8:	08 95       	ret
    81ea:	3e f0       	brts	.+14     	; 0x81fa <pow+0x80>
    81ec:	c4 ce       	rjmp	.-632    	; 0x7f76 <__fp_nan>
    81ee:	60 e0       	ldi	r22, 0x00	; 0
    81f0:	70 e0       	ldi	r23, 0x00	; 0
    81f2:	80 e8       	ldi	r24, 0x80	; 128
    81f4:	9f e3       	ldi	r25, 0x3F	; 63
    81f6:	08 95       	ret
    81f8:	4f e7       	ldi	r20, 0x7F	; 127
    81fa:	9f 77       	andi	r25, 0x7F	; 127
    81fc:	5f 93       	push	r21
    81fe:	4f 93       	push	r20
    8200:	3f 93       	push	r19
    8202:	2f 93       	push	r18
    8204:	fe d0       	rcall	.+508    	; 0x8402 <log>
    8206:	2f 91       	pop	r18
    8208:	3f 91       	pop	r19
    820a:	4f 91       	pop	r20
    820c:	5f 91       	pop	r21
    820e:	52 df       	rcall	.-348    	; 0x80b4 <__mulsf3>
    8210:	4d c0       	rjmp	.+154    	; 0x82ac <exp>

00008212 <sin>:
    8212:	9f 93       	push	r25
    8214:	c2 de       	rcall	.-636    	; 0x7f9a <__fp_rempio2>
    8216:	0f 90       	pop	r0
    8218:	07 fc       	sbrc	r0, 7
    821a:	ee 5f       	subi	r30, 0xFE	; 254
    821c:	f6 ce       	rjmp	.-532    	; 0x800a <__fp_sinus>
    821e:	11 f4       	brne	.+4      	; 0x8224 <sin+0x12>
    8220:	0e f4       	brtc	.+2      	; 0x8224 <sin+0x12>
    8222:	a9 ce       	rjmp	.-686    	; 0x7f76 <__fp_nan>
    8224:	9a ce       	rjmp	.-716    	; 0x7f5a <__fp_mpack>

00008226 <sqrt>:
    8226:	0a df       	rcall	.-492    	; 0x803c <__fp_splitA>
    8228:	d0 f3       	brcs	.-12     	; 0x821e <sin+0xc>
    822a:	99 23       	and	r25, r25
    822c:	d9 f3       	breq	.-10     	; 0x8224 <sin+0x12>
    822e:	ce f3       	brts	.-14     	; 0x8222 <sin+0x10>
    8230:	9f 57       	subi	r25, 0x7F	; 127
    8232:	55 0b       	sbc	r21, r21
    8234:	87 ff       	sbrs	r24, 7
    8236:	66 d0       	rcall	.+204    	; 0x8304 <__fp_norm2>
    8238:	00 24       	eor	r0, r0
    823a:	a0 e6       	ldi	r26, 0x60	; 96
    823c:	40 ea       	ldi	r20, 0xA0	; 160
    823e:	90 01       	movw	r18, r0
    8240:	80 58       	subi	r24, 0x80	; 128
    8242:	56 95       	lsr	r21
    8244:	97 95       	ror	r25
    8246:	28 f4       	brcc	.+10     	; 0x8252 <sqrt+0x2c>
    8248:	80 5c       	subi	r24, 0xC0	; 192
    824a:	66 0f       	add	r22, r22
    824c:	77 1f       	adc	r23, r23
    824e:	88 1f       	adc	r24, r24
    8250:	20 f0       	brcs	.+8      	; 0x825a <sqrt+0x34>
    8252:	26 17       	cp	r18, r22
    8254:	37 07       	cpc	r19, r23
    8256:	48 07       	cpc	r20, r24
    8258:	30 f4       	brcc	.+12     	; 0x8266 <sqrt+0x40>
    825a:	62 1b       	sub	r22, r18
    825c:	73 0b       	sbc	r23, r19
    825e:	84 0b       	sbc	r24, r20
    8260:	20 29       	or	r18, r0
    8262:	31 29       	or	r19, r1
    8264:	4a 2b       	or	r20, r26
    8266:	a6 95       	lsr	r26
    8268:	17 94       	ror	r1
    826a:	07 94       	ror	r0
    826c:	20 25       	eor	r18, r0
    826e:	31 25       	eor	r19, r1
    8270:	4a 27       	eor	r20, r26
    8272:	58 f7       	brcc	.-42     	; 0x824a <sqrt+0x24>
    8274:	66 0f       	add	r22, r22
    8276:	77 1f       	adc	r23, r23
    8278:	88 1f       	adc	r24, r24
    827a:	20 f0       	brcs	.+8      	; 0x8284 <sqrt+0x5e>
    827c:	26 17       	cp	r18, r22
    827e:	37 07       	cpc	r19, r23
    8280:	48 07       	cpc	r20, r24
    8282:	30 f4       	brcc	.+12     	; 0x8290 <sqrt+0x6a>
    8284:	62 0b       	sbc	r22, r18
    8286:	73 0b       	sbc	r23, r19
    8288:	84 0b       	sbc	r24, r20
    828a:	20 0d       	add	r18, r0
    828c:	31 1d       	adc	r19, r1
    828e:	41 1d       	adc	r20, r1
    8290:	a0 95       	com	r26
    8292:	81 f7       	brne	.-32     	; 0x8274 <sqrt+0x4e>
    8294:	b9 01       	movw	r22, r18
    8296:	84 2f       	mov	r24, r20
    8298:	91 58       	subi	r25, 0x81	; 129
    829a:	88 0f       	add	r24, r24
    829c:	96 95       	lsr	r25
    829e:	87 95       	ror	r24
    82a0:	08 95       	ret
    82a2:	19 f4       	brne	.+6      	; 0x82aa <sqrt+0x84>
    82a4:	0e f0       	brts	.+2      	; 0x82a8 <sqrt+0x82>
    82a6:	38 ce       	rjmp	.-912    	; 0x7f18 <__fp_inf>
    82a8:	fa ce       	rjmp	.-524    	; 0x809e <__fp_zero>
    82aa:	65 ce       	rjmp	.-822    	; 0x7f76 <__fp_nan>

000082ac <exp>:
    82ac:	c7 de       	rcall	.-626    	; 0x803c <__fp_splitA>
    82ae:	c8 f3       	brcs	.-14     	; 0x82a2 <sqrt+0x7c>
    82b0:	96 38       	cpi	r25, 0x86	; 134
    82b2:	c0 f7       	brcc	.-16     	; 0x82a4 <sqrt+0x7e>
    82b4:	07 f8       	bld	r0, 7
    82b6:	0f 92       	push	r0
    82b8:	e8 94       	clt
    82ba:	2b e3       	ldi	r18, 0x3B	; 59
    82bc:	3a ea       	ldi	r19, 0xAA	; 170
    82be:	48 eb       	ldi	r20, 0xB8	; 184
    82c0:	5f e7       	ldi	r21, 0x7F	; 127
    82c2:	06 df       	rcall	.-500    	; 0x80d0 <__mulsf3_pse>
    82c4:	0f 92       	push	r0
    82c6:	0f 92       	push	r0
    82c8:	0f 92       	push	r0
    82ca:	4d b7       	in	r20, 0x3d	; 61
    82cc:	5e b7       	in	r21, 0x3e	; 62
    82ce:	0f 92       	push	r0
    82d0:	d8 d0       	rcall	.+432    	; 0x8482 <modf>
    82d2:	e2 e0       	ldi	r30, 0x02	; 2
    82d4:	f1 e0       	ldi	r31, 0x01	; 1
    82d6:	1d d0       	rcall	.+58     	; 0x8312 <__fp_powser>
    82d8:	4f 91       	pop	r20
    82da:	5f 91       	pop	r21
    82dc:	ef 91       	pop	r30
    82de:	ff 91       	pop	r31
    82e0:	e5 95       	asr	r30
    82e2:	ee 1f       	adc	r30, r30
    82e4:	ff 1f       	adc	r31, r31
    82e6:	49 f0       	breq	.+18     	; 0x82fa <exp+0x4e>
    82e8:	fe 57       	subi	r31, 0x7E	; 126
    82ea:	e0 68       	ori	r30, 0x80	; 128
    82ec:	44 27       	eor	r20, r20
    82ee:	ee 0f       	add	r30, r30
    82f0:	44 1f       	adc	r20, r20
    82f2:	fa 95       	dec	r31
    82f4:	e1 f7       	brne	.-8      	; 0x82ee <exp+0x42>
    82f6:	41 95       	neg	r20
    82f8:	55 0b       	sbc	r21, r21
    82fa:	4a d0       	rcall	.+148    	; 0x8390 <ldexp>
    82fc:	0f 90       	pop	r0
    82fe:	07 fe       	sbrs	r0, 7
    8300:	3e c0       	rjmp	.+124    	; 0x837e <inverse>
    8302:	08 95       	ret

00008304 <__fp_norm2>:
    8304:	91 50       	subi	r25, 0x01	; 1
    8306:	50 40       	sbci	r21, 0x00	; 0
    8308:	66 0f       	add	r22, r22
    830a:	77 1f       	adc	r23, r23
    830c:	88 1f       	adc	r24, r24
    830e:	d2 f7       	brpl	.-12     	; 0x8304 <__fp_norm2>
    8310:	08 95       	ret

00008312 <__fp_powser>:
    8312:	df 93       	push	r29
    8314:	cf 93       	push	r28
    8316:	1f 93       	push	r17
    8318:	0f 93       	push	r16
    831a:	ff 92       	push	r15
    831c:	ef 92       	push	r14
    831e:	df 92       	push	r13
    8320:	7b 01       	movw	r14, r22
    8322:	8c 01       	movw	r16, r24
    8324:	68 94       	set
    8326:	05 c0       	rjmp	.+10     	; 0x8332 <__fp_powser+0x20>
    8328:	da 2e       	mov	r13, r26
    832a:	ef 01       	movw	r28, r30
    832c:	cf de       	rcall	.-610    	; 0x80cc <__mulsf3x>
    832e:	fe 01       	movw	r30, r28
    8330:	e8 94       	clt
    8332:	a5 91       	lpm	r26, Z+
    8334:	25 91       	lpm	r18, Z+
    8336:	35 91       	lpm	r19, Z+
    8338:	45 91       	lpm	r20, Z+
    833a:	55 91       	lpm	r21, Z+
    833c:	ae f3       	brts	.-22     	; 0x8328 <__fp_powser+0x16>
    833e:	ef 01       	movw	r28, r30
    8340:	84 dc       	rcall	.-1784   	; 0x7c4a <__addsf3x>
    8342:	fe 01       	movw	r30, r28
    8344:	97 01       	movw	r18, r14
    8346:	a8 01       	movw	r20, r16
    8348:	da 94       	dec	r13
    834a:	79 f7       	brne	.-34     	; 0x832a <__fp_powser+0x18>
    834c:	df 90       	pop	r13
    834e:	ef 90       	pop	r14
    8350:	ff 90       	pop	r15
    8352:	0f 91       	pop	r16
    8354:	1f 91       	pop	r17
    8356:	cf 91       	pop	r28
    8358:	df 91       	pop	r29
    835a:	08 95       	ret

0000835c <__fp_powsodd>:
    835c:	9f 93       	push	r25
    835e:	8f 93       	push	r24
    8360:	7f 93       	push	r23
    8362:	6f 93       	push	r22
    8364:	ff 93       	push	r31
    8366:	ef 93       	push	r30
    8368:	9b 01       	movw	r18, r22
    836a:	ac 01       	movw	r20, r24
    836c:	a3 de       	rcall	.-698    	; 0x80b4 <__mulsf3>
    836e:	ef 91       	pop	r30
    8370:	ff 91       	pop	r31
    8372:	cf df       	rcall	.-98     	; 0x8312 <__fp_powser>
    8374:	2f 91       	pop	r18
    8376:	3f 91       	pop	r19
    8378:	4f 91       	pop	r20
    837a:	5f 91       	pop	r21
    837c:	9b ce       	rjmp	.-714    	; 0x80b4 <__mulsf3>

0000837e <inverse>:
    837e:	9b 01       	movw	r18, r22
    8380:	ac 01       	movw	r20, r24
    8382:	60 e0       	ldi	r22, 0x00	; 0
    8384:	70 e0       	ldi	r23, 0x00	; 0
    8386:	80 e8       	ldi	r24, 0x80	; 128
    8388:	9f e3       	ldi	r25, 0x3F	; 63
    838a:	b9 cc       	rjmp	.-1678   	; 0x7cfe <__divsf3>
    838c:	c5 cd       	rjmp	.-1142   	; 0x7f18 <__fp_inf>
    838e:	e5 cd       	rjmp	.-1078   	; 0x7f5a <__fp_mpack>

00008390 <ldexp>:
    8390:	55 de       	rcall	.-854    	; 0x803c <__fp_splitA>
    8392:	e8 f3       	brcs	.-6      	; 0x838e <inverse+0x10>
    8394:	99 23       	and	r25, r25
    8396:	d9 f3       	breq	.-10     	; 0x838e <inverse+0x10>
    8398:	94 0f       	add	r25, r20
    839a:	51 1d       	adc	r21, r1
    839c:	bb f3       	brvs	.-18     	; 0x838c <inverse+0xe>
    839e:	91 50       	subi	r25, 0x01	; 1
    83a0:	50 40       	sbci	r21, 0x00	; 0
    83a2:	94 f0       	brlt	.+36     	; 0x83c8 <ldexp+0x38>
    83a4:	59 f0       	breq	.+22     	; 0x83bc <ldexp+0x2c>
    83a6:	88 23       	and	r24, r24
    83a8:	32 f0       	brmi	.+12     	; 0x83b6 <ldexp+0x26>
    83aa:	66 0f       	add	r22, r22
    83ac:	77 1f       	adc	r23, r23
    83ae:	88 1f       	adc	r24, r24
    83b0:	91 50       	subi	r25, 0x01	; 1
    83b2:	50 40       	sbci	r21, 0x00	; 0
    83b4:	c1 f7       	brne	.-16     	; 0x83a6 <ldexp+0x16>
    83b6:	9e 3f       	cpi	r25, 0xFE	; 254
    83b8:	51 05       	cpc	r21, r1
    83ba:	44 f7       	brge	.-48     	; 0x838c <inverse+0xe>
    83bc:	88 0f       	add	r24, r24
    83be:	91 1d       	adc	r25, r1
    83c0:	96 95       	lsr	r25
    83c2:	87 95       	ror	r24
    83c4:	97 f9       	bld	r25, 7
    83c6:	08 95       	ret
    83c8:	5f 3f       	cpi	r21, 0xFF	; 255
    83ca:	ac f0       	brlt	.+42     	; 0x83f6 <ldexp+0x66>
    83cc:	98 3e       	cpi	r25, 0xE8	; 232
    83ce:	9c f0       	brlt	.+38     	; 0x83f6 <ldexp+0x66>
    83d0:	bb 27       	eor	r27, r27
    83d2:	86 95       	lsr	r24
    83d4:	77 95       	ror	r23
    83d6:	67 95       	ror	r22
    83d8:	b7 95       	ror	r27
    83da:	08 f4       	brcc	.+2      	; 0x83de <ldexp+0x4e>
    83dc:	b1 60       	ori	r27, 0x01	; 1
    83de:	93 95       	inc	r25
    83e0:	c1 f7       	brne	.-16     	; 0x83d2 <ldexp+0x42>
    83e2:	bb 0f       	add	r27, r27
    83e4:	58 f7       	brcc	.-42     	; 0x83bc <ldexp+0x2c>
    83e6:	11 f4       	brne	.+4      	; 0x83ec <ldexp+0x5c>
    83e8:	60 ff       	sbrs	r22, 0
    83ea:	e8 cf       	rjmp	.-48     	; 0x83bc <ldexp+0x2c>
    83ec:	6f 5f       	subi	r22, 0xFF	; 255
    83ee:	7f 4f       	sbci	r23, 0xFF	; 255
    83f0:	8f 4f       	sbci	r24, 0xFF	; 255
    83f2:	9f 4f       	sbci	r25, 0xFF	; 255
    83f4:	e3 cf       	rjmp	.-58     	; 0x83bc <ldexp+0x2c>
    83f6:	54 ce       	rjmp	.-856    	; 0x80a0 <__fp_szero>
    83f8:	0e f0       	brts	.+2      	; 0x83fc <ldexp+0x6c>
    83fa:	af cd       	rjmp	.-1186   	; 0x7f5a <__fp_mpack>
    83fc:	bc cd       	rjmp	.-1160   	; 0x7f76 <__fp_nan>
    83fe:	68 94       	set
    8400:	8b cd       	rjmp	.-1258   	; 0x7f18 <__fp_inf>

00008402 <log>:
    8402:	1c de       	rcall	.-968    	; 0x803c <__fp_splitA>
    8404:	c8 f3       	brcs	.-14     	; 0x83f8 <ldexp+0x68>
    8406:	99 23       	and	r25, r25
    8408:	d1 f3       	breq	.-12     	; 0x83fe <ldexp+0x6e>
    840a:	c6 f3       	brts	.-16     	; 0x83fc <ldexp+0x6c>
    840c:	df 93       	push	r29
    840e:	cf 93       	push	r28
    8410:	1f 93       	push	r17
    8412:	0f 93       	push	r16
    8414:	ff 92       	push	r15
    8416:	c9 2f       	mov	r28, r25
    8418:	dd 27       	eor	r29, r29
    841a:	88 23       	and	r24, r24
    841c:	2a f0       	brmi	.+10     	; 0x8428 <log+0x26>
    841e:	21 97       	sbiw	r28, 0x01	; 1
    8420:	66 0f       	add	r22, r22
    8422:	77 1f       	adc	r23, r23
    8424:	88 1f       	adc	r24, r24
    8426:	da f7       	brpl	.-10     	; 0x841e <log+0x1c>
    8428:	20 e0       	ldi	r18, 0x00	; 0
    842a:	30 e0       	ldi	r19, 0x00	; 0
    842c:	40 e8       	ldi	r20, 0x80	; 128
    842e:	5f eb       	ldi	r21, 0xBF	; 191
    8430:	9f e3       	ldi	r25, 0x3F	; 63
    8432:	88 39       	cpi	r24, 0x98	; 152
    8434:	20 f0       	brcs	.+8      	; 0x843e <log+0x3c>
    8436:	80 3e       	cpi	r24, 0xE0	; 224
    8438:	30 f0       	brcs	.+12     	; 0x8446 <log+0x44>
    843a:	21 96       	adiw	r28, 0x01	; 1
    843c:	8f 77       	andi	r24, 0x7F	; 127
    843e:	f4 db       	rcall	.-2072   	; 0x7c28 <__addsf3>
    8440:	ea e2       	ldi	r30, 0x2A	; 42
    8442:	f1 e0       	ldi	r31, 0x01	; 1
    8444:	03 c0       	rjmp	.+6      	; 0x844c <log+0x4a>
    8446:	f0 db       	rcall	.-2080   	; 0x7c28 <__addsf3>
    8448:	e7 e5       	ldi	r30, 0x57	; 87
    844a:	f1 e0       	ldi	r31, 0x01	; 1
    844c:	62 df       	rcall	.-316    	; 0x8312 <__fp_powser>
    844e:	8b 01       	movw	r16, r22
    8450:	be 01       	movw	r22, r28
    8452:	ec 01       	movw	r28, r24
    8454:	fb 2e       	mov	r15, r27
    8456:	6f 57       	subi	r22, 0x7F	; 127
    8458:	71 09       	sbc	r23, r1
    845a:	75 95       	asr	r23
    845c:	77 1f       	adc	r23, r23
    845e:	88 0b       	sbc	r24, r24
    8460:	99 0b       	sbc	r25, r25
    8462:	e8 dc       	rcall	.-1584   	; 0x7e34 <__floatsisf>
    8464:	28 e1       	ldi	r18, 0x18	; 24
    8466:	32 e7       	ldi	r19, 0x72	; 114
    8468:	41 e3       	ldi	r20, 0x31	; 49
    846a:	5f e3       	ldi	r21, 0x3F	; 63
    846c:	2f de       	rcall	.-930    	; 0x80cc <__mulsf3x>
    846e:	af 2d       	mov	r26, r15
    8470:	98 01       	movw	r18, r16
    8472:	ae 01       	movw	r20, r28
    8474:	ff 90       	pop	r15
    8476:	0f 91       	pop	r16
    8478:	1f 91       	pop	r17
    847a:	cf 91       	pop	r28
    847c:	df 91       	pop	r29
    847e:	e5 db       	rcall	.-2102   	; 0x7c4a <__addsf3x>
    8480:	b3 cd       	rjmp	.-1178   	; 0x7fe8 <__fp_round>

00008482 <modf>:
    8482:	fa 01       	movw	r30, r20
    8484:	dc 01       	movw	r26, r24
    8486:	aa 0f       	add	r26, r26
    8488:	bb 1f       	adc	r27, r27
    848a:	9b 01       	movw	r18, r22
    848c:	ac 01       	movw	r20, r24
    848e:	bf 57       	subi	r27, 0x7F	; 127
    8490:	28 f4       	brcc	.+10     	; 0x849c <modf+0x1a>
    8492:	22 27       	eor	r18, r18
    8494:	33 27       	eor	r19, r19
    8496:	44 27       	eor	r20, r20
    8498:	50 78       	andi	r21, 0x80	; 128
    849a:	1f c0       	rjmp	.+62     	; 0x84da <modf+0x58>
    849c:	b7 51       	subi	r27, 0x17	; 23
    849e:	88 f4       	brcc	.+34     	; 0x84c2 <modf+0x40>
    84a0:	ab 2f       	mov	r26, r27
    84a2:	00 24       	eor	r0, r0
    84a4:	46 95       	lsr	r20
    84a6:	37 95       	ror	r19
    84a8:	27 95       	ror	r18
    84aa:	01 1c       	adc	r0, r1
    84ac:	a3 95       	inc	r26
    84ae:	d2 f3       	brmi	.-12     	; 0x84a4 <modf+0x22>
    84b0:	00 20       	and	r0, r0
    84b2:	69 f0       	breq	.+26     	; 0x84ce <modf+0x4c>
    84b4:	22 0f       	add	r18, r18
    84b6:	33 1f       	adc	r19, r19
    84b8:	44 1f       	adc	r20, r20
    84ba:	b3 95       	inc	r27
    84bc:	da f3       	brmi	.-10     	; 0x84b4 <modf+0x32>
    84be:	0d d0       	rcall	.+26     	; 0x84da <modf+0x58>
    84c0:	b2 cb       	rjmp	.-2204   	; 0x7c26 <__subsf3>
    84c2:	61 30       	cpi	r22, 0x01	; 1
    84c4:	71 05       	cpc	r23, r1
    84c6:	a0 e8       	ldi	r26, 0x80	; 128
    84c8:	8a 07       	cpc	r24, r26
    84ca:	b9 46       	sbci	r27, 0x69	; 105
    84cc:	30 f4       	brcc	.+12     	; 0x84da <modf+0x58>
    84ce:	9b 01       	movw	r18, r22
    84d0:	ac 01       	movw	r20, r24
    84d2:	66 27       	eor	r22, r22
    84d4:	77 27       	eor	r23, r23
    84d6:	88 27       	eor	r24, r24
    84d8:	90 78       	andi	r25, 0x80	; 128
    84da:	30 96       	adiw	r30, 0x00	; 0
    84dc:	21 f0       	breq	.+8      	; 0x84e6 <modf+0x64>
    84de:	20 83       	st	Z, r18
    84e0:	31 83       	std	Z+1, r19	; 0x01
    84e2:	42 83       	std	Z+2, r20	; 0x02
    84e4:	53 83       	std	Z+3, r21	; 0x03
    84e6:	08 95       	ret

000084e8 <__divmodhi4>:
    84e8:	97 fb       	bst	r25, 7
    84ea:	07 2e       	mov	r0, r23
    84ec:	16 f4       	brtc	.+4      	; 0x84f2 <__divmodhi4+0xa>
    84ee:	00 94       	com	r0
    84f0:	07 d0       	rcall	.+14     	; 0x8500 <__divmodhi4_neg1>
    84f2:	77 fd       	sbrc	r23, 7
    84f4:	09 d0       	rcall	.+18     	; 0x8508 <__divmodhi4_neg2>
    84f6:	0e 94 aa 42 	call	0x8554	; 0x8554 <__udivmodhi4>
    84fa:	07 fc       	sbrc	r0, 7
    84fc:	05 d0       	rcall	.+10     	; 0x8508 <__divmodhi4_neg2>
    84fe:	3e f4       	brtc	.+14     	; 0x850e <__divmodhi4_exit>

00008500 <__divmodhi4_neg1>:
    8500:	90 95       	com	r25
    8502:	81 95       	neg	r24
    8504:	9f 4f       	sbci	r25, 0xFF	; 255
    8506:	08 95       	ret

00008508 <__divmodhi4_neg2>:
    8508:	70 95       	com	r23
    850a:	61 95       	neg	r22
    850c:	7f 4f       	sbci	r23, 0xFF	; 255

0000850e <__divmodhi4_exit>:
    850e:	08 95       	ret

00008510 <__udivmodsi4>:
    8510:	a1 e2       	ldi	r26, 0x21	; 33
    8512:	1a 2e       	mov	r1, r26
    8514:	aa 1b       	sub	r26, r26
    8516:	bb 1b       	sub	r27, r27
    8518:	fd 01       	movw	r30, r26
    851a:	0d c0       	rjmp	.+26     	; 0x8536 <__udivmodsi4_ep>

0000851c <__udivmodsi4_loop>:
    851c:	aa 1f       	adc	r26, r26
    851e:	bb 1f       	adc	r27, r27
    8520:	ee 1f       	adc	r30, r30
    8522:	ff 1f       	adc	r31, r31
    8524:	a2 17       	cp	r26, r18
    8526:	b3 07       	cpc	r27, r19
    8528:	e4 07       	cpc	r30, r20
    852a:	f5 07       	cpc	r31, r21
    852c:	20 f0       	brcs	.+8      	; 0x8536 <__udivmodsi4_ep>
    852e:	a2 1b       	sub	r26, r18
    8530:	b3 0b       	sbc	r27, r19
    8532:	e4 0b       	sbc	r30, r20
    8534:	f5 0b       	sbc	r31, r21

00008536 <__udivmodsi4_ep>:
    8536:	66 1f       	adc	r22, r22
    8538:	77 1f       	adc	r23, r23
    853a:	88 1f       	adc	r24, r24
    853c:	99 1f       	adc	r25, r25
    853e:	1a 94       	dec	r1
    8540:	69 f7       	brne	.-38     	; 0x851c <__udivmodsi4_loop>
    8542:	60 95       	com	r22
    8544:	70 95       	com	r23
    8546:	80 95       	com	r24
    8548:	90 95       	com	r25
    854a:	9b 01       	movw	r18, r22
    854c:	ac 01       	movw	r20, r24
    854e:	bd 01       	movw	r22, r26
    8550:	cf 01       	movw	r24, r30
    8552:	08 95       	ret

00008554 <__udivmodhi4>:
    8554:	aa 1b       	sub	r26, r26
    8556:	bb 1b       	sub	r27, r27
    8558:	51 e1       	ldi	r21, 0x11	; 17
    855a:	07 c0       	rjmp	.+14     	; 0x856a <__udivmodhi4_ep>

0000855c <__udivmodhi4_loop>:
    855c:	aa 1f       	adc	r26, r26
    855e:	bb 1f       	adc	r27, r27
    8560:	a6 17       	cp	r26, r22
    8562:	b7 07       	cpc	r27, r23
    8564:	10 f0       	brcs	.+4      	; 0x856a <__udivmodhi4_ep>
    8566:	a6 1b       	sub	r26, r22
    8568:	b7 0b       	sbc	r27, r23

0000856a <__udivmodhi4_ep>:
    856a:	88 1f       	adc	r24, r24
    856c:	99 1f       	adc	r25, r25
    856e:	5a 95       	dec	r21
    8570:	a9 f7       	brne	.-22     	; 0x855c <__udivmodhi4_loop>
    8572:	80 95       	com	r24
    8574:	90 95       	com	r25
    8576:	bc 01       	movw	r22, r24
    8578:	cd 01       	movw	r24, r26
    857a:	08 95       	ret

0000857c <malloc>:
    857c:	0f 93       	push	r16
    857e:	1f 93       	push	r17
    8580:	cf 93       	push	r28
    8582:	df 93       	push	r29
    8584:	82 30       	cpi	r24, 0x02	; 2
    8586:	91 05       	cpc	r25, r1
    8588:	10 f4       	brcc	.+4      	; 0x858e <malloc+0x12>
    858a:	82 e0       	ldi	r24, 0x02	; 2
    858c:	90 e0       	ldi	r25, 0x00	; 0
    858e:	e0 91 a8 02 	lds	r30, 0x02A8
    8592:	f0 91 a9 02 	lds	r31, 0x02A9
    8596:	20 e0       	ldi	r18, 0x00	; 0
    8598:	30 e0       	ldi	r19, 0x00	; 0
    859a:	c0 e0       	ldi	r28, 0x00	; 0
    859c:	d0 e0       	ldi	r29, 0x00	; 0
    859e:	23 c0       	rjmp	.+70     	; 0x85e6 <malloc+0x6a>
    85a0:	40 81       	ld	r20, Z
    85a2:	51 81       	ldd	r21, Z+1	; 0x01
    85a4:	48 17       	cp	r20, r24
    85a6:	59 07       	cpc	r21, r25
    85a8:	a8 f0       	brcs	.+42     	; 0x85d4 <malloc+0x58>
    85aa:	48 17       	cp	r20, r24
    85ac:	59 07       	cpc	r21, r25
    85ae:	61 f4       	brne	.+24     	; 0x85c8 <malloc+0x4c>
    85b0:	82 81       	ldd	r24, Z+2	; 0x02
    85b2:	93 81       	ldd	r25, Z+3	; 0x03
    85b4:	20 97       	sbiw	r28, 0x00	; 0
    85b6:	19 f0       	breq	.+6      	; 0x85be <malloc+0x42>
    85b8:	9b 83       	std	Y+3, r25	; 0x03
    85ba:	8a 83       	std	Y+2, r24	; 0x02
    85bc:	2e c0       	rjmp	.+92     	; 0x861a <malloc+0x9e>
    85be:	90 93 a9 02 	sts	0x02A9, r25
    85c2:	80 93 a8 02 	sts	0x02A8, r24
    85c6:	29 c0       	rjmp	.+82     	; 0x861a <malloc+0x9e>
    85c8:	21 15       	cp	r18, r1
    85ca:	31 05       	cpc	r19, r1
    85cc:	29 f0       	breq	.+10     	; 0x85d8 <malloc+0x5c>
    85ce:	42 17       	cp	r20, r18
    85d0:	53 07       	cpc	r21, r19
    85d2:	10 f0       	brcs	.+4      	; 0x85d8 <malloc+0x5c>
    85d4:	a9 01       	movw	r20, r18
    85d6:	02 c0       	rjmp	.+4      	; 0x85dc <malloc+0x60>
    85d8:	be 01       	movw	r22, r28
    85da:	df 01       	movw	r26, r30
    85dc:	02 81       	ldd	r16, Z+2	; 0x02
    85de:	13 81       	ldd	r17, Z+3	; 0x03
    85e0:	ef 01       	movw	r28, r30
    85e2:	9a 01       	movw	r18, r20
    85e4:	f8 01       	movw	r30, r16
    85e6:	30 97       	sbiw	r30, 0x00	; 0
    85e8:	d9 f6       	brne	.-74     	; 0x85a0 <malloc+0x24>
    85ea:	21 15       	cp	r18, r1
    85ec:	31 05       	cpc	r19, r1
    85ee:	09 f1       	breq	.+66     	; 0x8632 <malloc+0xb6>
    85f0:	28 1b       	sub	r18, r24
    85f2:	39 0b       	sbc	r19, r25
    85f4:	24 30       	cpi	r18, 0x04	; 4
    85f6:	31 05       	cpc	r19, r1
    85f8:	90 f4       	brcc	.+36     	; 0x861e <malloc+0xa2>
    85fa:	12 96       	adiw	r26, 0x02	; 2
    85fc:	8d 91       	ld	r24, X+
    85fe:	9c 91       	ld	r25, X
    8600:	13 97       	sbiw	r26, 0x03	; 3
    8602:	61 15       	cp	r22, r1
    8604:	71 05       	cpc	r23, r1
    8606:	21 f0       	breq	.+8      	; 0x8610 <malloc+0x94>
    8608:	fb 01       	movw	r30, r22
    860a:	93 83       	std	Z+3, r25	; 0x03
    860c:	82 83       	std	Z+2, r24	; 0x02
    860e:	04 c0       	rjmp	.+8      	; 0x8618 <malloc+0x9c>
    8610:	90 93 a9 02 	sts	0x02A9, r25
    8614:	80 93 a8 02 	sts	0x02A8, r24
    8618:	fd 01       	movw	r30, r26
    861a:	32 96       	adiw	r30, 0x02	; 2
    861c:	44 c0       	rjmp	.+136    	; 0x86a6 <malloc+0x12a>
    861e:	fd 01       	movw	r30, r26
    8620:	e2 0f       	add	r30, r18
    8622:	f3 1f       	adc	r31, r19
    8624:	81 93       	st	Z+, r24
    8626:	91 93       	st	Z+, r25
    8628:	22 50       	subi	r18, 0x02	; 2
    862a:	31 09       	sbc	r19, r1
    862c:	2d 93       	st	X+, r18
    862e:	3c 93       	st	X, r19
    8630:	3a c0       	rjmp	.+116    	; 0x86a6 <malloc+0x12a>
    8632:	20 91 a6 02 	lds	r18, 0x02A6
    8636:	30 91 a7 02 	lds	r19, 0x02A7
    863a:	23 2b       	or	r18, r19
    863c:	41 f4       	brne	.+16     	; 0x864e <malloc+0xd2>
    863e:	20 91 02 02 	lds	r18, 0x0202
    8642:	30 91 03 02 	lds	r19, 0x0203
    8646:	30 93 a7 02 	sts	0x02A7, r19
    864a:	20 93 a6 02 	sts	0x02A6, r18
    864e:	20 91 00 02 	lds	r18, 0x0200
    8652:	30 91 01 02 	lds	r19, 0x0201
    8656:	21 15       	cp	r18, r1
    8658:	31 05       	cpc	r19, r1
    865a:	41 f4       	brne	.+16     	; 0x866c <malloc+0xf0>
    865c:	2d b7       	in	r18, 0x3d	; 61
    865e:	3e b7       	in	r19, 0x3e	; 62
    8660:	40 91 04 02 	lds	r20, 0x0204
    8664:	50 91 05 02 	lds	r21, 0x0205
    8668:	24 1b       	sub	r18, r20
    866a:	35 0b       	sbc	r19, r21
    866c:	e0 91 a6 02 	lds	r30, 0x02A6
    8670:	f0 91 a7 02 	lds	r31, 0x02A7
    8674:	e2 17       	cp	r30, r18
    8676:	f3 07       	cpc	r31, r19
    8678:	a0 f4       	brcc	.+40     	; 0x86a2 <malloc+0x126>
    867a:	2e 1b       	sub	r18, r30
    867c:	3f 0b       	sbc	r19, r31
    867e:	28 17       	cp	r18, r24
    8680:	39 07       	cpc	r19, r25
    8682:	78 f0       	brcs	.+30     	; 0x86a2 <malloc+0x126>
    8684:	ac 01       	movw	r20, r24
    8686:	4e 5f       	subi	r20, 0xFE	; 254
    8688:	5f 4f       	sbci	r21, 0xFF	; 255
    868a:	24 17       	cp	r18, r20
    868c:	35 07       	cpc	r19, r21
    868e:	48 f0       	brcs	.+18     	; 0x86a2 <malloc+0x126>
    8690:	4e 0f       	add	r20, r30
    8692:	5f 1f       	adc	r21, r31
    8694:	50 93 a7 02 	sts	0x02A7, r21
    8698:	40 93 a6 02 	sts	0x02A6, r20
    869c:	81 93       	st	Z+, r24
    869e:	91 93       	st	Z+, r25
    86a0:	02 c0       	rjmp	.+4      	; 0x86a6 <malloc+0x12a>
    86a2:	e0 e0       	ldi	r30, 0x00	; 0
    86a4:	f0 e0       	ldi	r31, 0x00	; 0
    86a6:	cf 01       	movw	r24, r30
    86a8:	df 91       	pop	r29
    86aa:	cf 91       	pop	r28
    86ac:	1f 91       	pop	r17
    86ae:	0f 91       	pop	r16
    86b0:	08 95       	ret

000086b2 <free>:
    86b2:	ef 92       	push	r14
    86b4:	ff 92       	push	r15
    86b6:	0f 93       	push	r16
    86b8:	1f 93       	push	r17
    86ba:	cf 93       	push	r28
    86bc:	df 93       	push	r29
    86be:	00 97       	sbiw	r24, 0x00	; 0
    86c0:	09 f4       	brne	.+2      	; 0x86c4 <free+0x12>
    86c2:	8f c0       	rjmp	.+286    	; 0x87e2 <free+0x130>
    86c4:	dc 01       	movw	r26, r24
    86c6:	12 97       	sbiw	r26, 0x02	; 2
    86c8:	13 96       	adiw	r26, 0x03	; 3
    86ca:	1c 92       	st	X, r1
    86cc:	1e 92       	st	-X, r1
    86ce:	12 97       	sbiw	r26, 0x02	; 2
    86d0:	e0 90 a8 02 	lds	r14, 0x02A8
    86d4:	f0 90 a9 02 	lds	r15, 0x02A9
    86d8:	e1 14       	cp	r14, r1
    86da:	f1 04       	cpc	r15, r1
    86dc:	89 f4       	brne	.+34     	; 0x8700 <free+0x4e>
    86de:	2d 91       	ld	r18, X+
    86e0:	3c 91       	ld	r19, X
    86e2:	11 97       	sbiw	r26, 0x01	; 1
    86e4:	28 0f       	add	r18, r24
    86e6:	39 1f       	adc	r19, r25
    86e8:	80 91 a6 02 	lds	r24, 0x02A6
    86ec:	90 91 a7 02 	lds	r25, 0x02A7
    86f0:	82 17       	cp	r24, r18
    86f2:	93 07       	cpc	r25, r19
    86f4:	89 f5       	brne	.+98     	; 0x8758 <free+0xa6>
    86f6:	b0 93 a7 02 	sts	0x02A7, r27
    86fa:	a0 93 a6 02 	sts	0x02A6, r26
    86fe:	71 c0       	rjmp	.+226    	; 0x87e2 <free+0x130>
    8700:	e7 01       	movw	r28, r14
    8702:	20 e0       	ldi	r18, 0x00	; 0
    8704:	30 e0       	ldi	r19, 0x00	; 0
    8706:	01 c0       	rjmp	.+2      	; 0x870a <free+0x58>
    8708:	ea 01       	movw	r28, r20
    870a:	ca 17       	cp	r28, r26
    870c:	db 07       	cpc	r29, r27
    870e:	38 f4       	brcc	.+14     	; 0x871e <free+0x6c>
    8710:	4a 81       	ldd	r20, Y+2	; 0x02
    8712:	5b 81       	ldd	r21, Y+3	; 0x03
    8714:	9e 01       	movw	r18, r28
    8716:	41 15       	cp	r20, r1
    8718:	51 05       	cpc	r21, r1
    871a:	b1 f7       	brne	.-20     	; 0x8708 <free+0x56>
    871c:	22 c0       	rjmp	.+68     	; 0x8762 <free+0xb0>
    871e:	bc 01       	movw	r22, r24
    8720:	62 50       	subi	r22, 0x02	; 2
    8722:	71 09       	sbc	r23, r1
    8724:	fb 01       	movw	r30, r22
    8726:	d3 83       	std	Z+3, r29	; 0x03
    8728:	c2 83       	std	Z+2, r28	; 0x02
    872a:	00 81       	ld	r16, Z
    872c:	11 81       	ldd	r17, Z+1	; 0x01
    872e:	ac 01       	movw	r20, r24
    8730:	40 0f       	add	r20, r16
    8732:	51 1f       	adc	r21, r17
    8734:	4c 17       	cp	r20, r28
    8736:	5d 07       	cpc	r21, r29
    8738:	61 f4       	brne	.+24     	; 0x8752 <free+0xa0>
    873a:	48 81       	ld	r20, Y
    873c:	59 81       	ldd	r21, Y+1	; 0x01
    873e:	40 0f       	add	r20, r16
    8740:	51 1f       	adc	r21, r17
    8742:	4e 5f       	subi	r20, 0xFE	; 254
    8744:	5f 4f       	sbci	r21, 0xFF	; 255
    8746:	51 83       	std	Z+1, r21	; 0x01
    8748:	40 83       	st	Z, r20
    874a:	4a 81       	ldd	r20, Y+2	; 0x02
    874c:	5b 81       	ldd	r21, Y+3	; 0x03
    874e:	53 83       	std	Z+3, r21	; 0x03
    8750:	42 83       	std	Z+2, r20	; 0x02
    8752:	21 15       	cp	r18, r1
    8754:	31 05       	cpc	r19, r1
    8756:	29 f4       	brne	.+10     	; 0x8762 <free+0xb0>
    8758:	b0 93 a9 02 	sts	0x02A9, r27
    875c:	a0 93 a8 02 	sts	0x02A8, r26
    8760:	40 c0       	rjmp	.+128    	; 0x87e2 <free+0x130>
    8762:	f9 01       	movw	r30, r18
    8764:	b3 83       	std	Z+3, r27	; 0x03
    8766:	a2 83       	std	Z+2, r26	; 0x02
    8768:	e9 01       	movw	r28, r18
    876a:	69 91       	ld	r22, Y+
    876c:	79 91       	ld	r23, Y+
    876e:	c6 0f       	add	r28, r22
    8770:	d7 1f       	adc	r29, r23
    8772:	ac 17       	cp	r26, r28
    8774:	bd 07       	cpc	r27, r29
    8776:	79 f4       	brne	.+30     	; 0x8796 <free+0xe4>
    8778:	dc 01       	movw	r26, r24
    877a:	5e 91       	ld	r21, -X
    877c:	4e 91       	ld	r20, -X
    877e:	46 0f       	add	r20, r22
    8780:	57 1f       	adc	r21, r23
    8782:	4e 5f       	subi	r20, 0xFE	; 254
    8784:	5f 4f       	sbci	r21, 0xFF	; 255
    8786:	51 83       	std	Z+1, r21	; 0x01
    8788:	40 83       	st	Z, r20
    878a:	12 96       	adiw	r26, 0x02	; 2
    878c:	8d 91       	ld	r24, X+
    878e:	9c 91       	ld	r25, X
    8790:	13 97       	sbiw	r26, 0x03	; 3
    8792:	93 83       	std	Z+3, r25	; 0x03
    8794:	82 83       	std	Z+2, r24	; 0x02
    8796:	a0 e0       	ldi	r26, 0x00	; 0
    8798:	b0 e0       	ldi	r27, 0x00	; 0
    879a:	02 c0       	rjmp	.+4      	; 0x87a0 <free+0xee>
    879c:	d7 01       	movw	r26, r14
    879e:	7c 01       	movw	r14, r24
    87a0:	f7 01       	movw	r30, r14
    87a2:	82 81       	ldd	r24, Z+2	; 0x02
    87a4:	93 81       	ldd	r25, Z+3	; 0x03
    87a6:	00 97       	sbiw	r24, 0x00	; 0
    87a8:	c9 f7       	brne	.-14     	; 0x879c <free+0xea>
    87aa:	c7 01       	movw	r24, r14
    87ac:	02 96       	adiw	r24, 0x02	; 2
    87ae:	20 81       	ld	r18, Z
    87b0:	31 81       	ldd	r19, Z+1	; 0x01
    87b2:	82 0f       	add	r24, r18
    87b4:	93 1f       	adc	r25, r19
    87b6:	20 91 a6 02 	lds	r18, 0x02A6
    87ba:	30 91 a7 02 	lds	r19, 0x02A7
    87be:	28 17       	cp	r18, r24
    87c0:	39 07       	cpc	r19, r25
    87c2:	79 f4       	brne	.+30     	; 0x87e2 <free+0x130>
    87c4:	10 97       	sbiw	r26, 0x00	; 0
    87c6:	29 f4       	brne	.+10     	; 0x87d2 <free+0x120>
    87c8:	10 92 a9 02 	sts	0x02A9, r1
    87cc:	10 92 a8 02 	sts	0x02A8, r1
    87d0:	04 c0       	rjmp	.+8      	; 0x87da <free+0x128>
    87d2:	13 96       	adiw	r26, 0x03	; 3
    87d4:	1c 92       	st	X, r1
    87d6:	1e 92       	st	-X, r1
    87d8:	12 97       	sbiw	r26, 0x02	; 2
    87da:	f0 92 a7 02 	sts	0x02A7, r15
    87de:	e0 92 a6 02 	sts	0x02A6, r14
    87e2:	df 91       	pop	r29
    87e4:	cf 91       	pop	r28
    87e6:	1f 91       	pop	r17
    87e8:	0f 91       	pop	r16
    87ea:	ff 90       	pop	r15
    87ec:	ef 90       	pop	r14
    87ee:	08 95       	ret

000087f0 <memcpy>:
    87f0:	fb 01       	movw	r30, r22
    87f2:	dc 01       	movw	r26, r24
    87f4:	02 c0       	rjmp	.+4      	; 0x87fa <memcpy+0xa>
    87f6:	01 90       	ld	r0, Z+
    87f8:	0d 92       	st	X+, r0
    87fa:	41 50       	subi	r20, 0x01	; 1
    87fc:	50 40       	sbci	r21, 0x00	; 0
    87fe:	d8 f7       	brcc	.-10     	; 0x87f6 <memcpy+0x6>
    8800:	08 95       	ret

00008802 <_exit>:
    8802:	f8 94       	cli

00008804 <__stop_program>:
    8804:	ff cf       	rjmp	.-2      	; 0x8804 <__stop_program>
