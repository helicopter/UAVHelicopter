
Helicopter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a4  00800200  00008a06  00008a9a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00008a06  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008002a4  008002a4  00008b3e  2**0
                  ALLOC
  3 .stab         000043e0  00000000  00000000  00008b40  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000011bd  00000000  00000000  0000cf20  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000e0dd  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000cd0  00000000  00000000  0000e10c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00013ce8  00000000  00000000  0000eddc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003240  00000000  00000000  00022ac4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000030be  00000000  00000000  00025d04  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00003150  00000000  00000000  00028dc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000630d  00000000  00000000  0002bf14  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000704a  00000000  00000000  00032221  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000b48  00000000  00000000  0003926b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
	//TODO should this be delete[]?
	delete this->records;
}

void Buffer::enqueue(Record *record)
{
       0:	0c 94 1a 01 	jmp	0x234	; 0x234 <__ctors_end>
       4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
       8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
       c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      10:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
	if (record != NULL)
      14:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      18:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      1c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
	{
		//Copy the record
		//TODO danger not deep copy. 
		Record *newRecord = record->Copy();
      20:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      24:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      28:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
		
		//Add the record to the linked list.
		if (this->records == NULL)
      2c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      30:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      34:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
		{
			records = newRecord;
      38:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      3c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      40:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      44:	0c 94 73 2f 	jmp	0x5ee6	; 0x5ee6 <__vector_17>
			firstRecord = newRecord;
      48:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      4c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      50:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
			lastRecord = newRecord;
      54:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      58:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      5c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      60:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
		}else
		{
			lastRecord->setNextRecord(newRecord);
      64:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      68:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      6c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      70:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      74:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
			newRecord->setPreviousRecord(lastRecord);
      78:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      7c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      80:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      84:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      88:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
			lastRecord = newRecord;
      8c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      90:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      94:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      98:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
		}
		
		bufferSize++;
      9c:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      a0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      a4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      a8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      ac:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      b0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
	}
}
      b4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      b8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      bc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      c0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      c4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
 * This method uses Euler angle rotations.
 */
double MagnetometerSensor::getFRDY()
{
	return (rawMagX * (cos(theta)*sin(sai))) + (rawMagY * (sin(phi)*sin(theta)*sin(sai) + cos(phi)*cos(sai))) + (rawMagZ * (cos(phi)*sin(theta)*sin(sai) - sin(phi)*cos(sai)));
}
      c8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      cc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      d0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      d4:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      d8:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      dc:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      e0:	0c 94 3b 01 	jmp	0x276	; 0x276 <__bad_interrupt>
      e4:	05 a8       	ldd	r0, Z+53	; 0x35
      e6:	4c cd       	rjmp	.-1384   	; 0xfffffb80 <__eeprom_end+0xff7efb80>
      e8:	b2 d4       	rcall	.+2404   	; 0xa4e <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelEPNS_7drivers11ServoDriverE+0x44>
      ea:	4e b9       	out	0x0e, r20	; 14
      ec:	38 36       	cpi	r19, 0x68	; 104
      ee:	a9 02       	muls	r26, r25
      f0:	0c 50       	subi	r16, 0x0C	; 12
      f2:	b9 91       	ld	r27, Y+
      f4:	86 88       	ldd	r8, Z+22	; 0x16
      f6:	08 3c       	cpi	r16, 0xC8	; 200
      f8:	a6 aa       	std	Z+54, r10	; 0x36
      fa:	aa 2a       	or	r10, r26
      fc:	be 00       	.word	0x00be	; ????
      fe:	00 00       	nop
     100:	80 3f       	cpi	r24, 0xF0	; 240
     102:	07 63       	ori	r16, 0x37	; 55
     104:	42 36       	cpi	r20, 0x62	; 98
     106:	b7 9b       	sbis	0x16, 7	; 22
     108:	d8 a7       	std	Y+40, r29	; 0x28
     10a:	1a 39       	cpi	r17, 0x9A	; 154
     10c:	68 56       	subi	r22, 0x68	; 104
     10e:	18 ae       	std	Y+56, r1	; 0x38
     110:	ba ab       	std	Y+50, r27	; 0x32
     112:	55 8c       	ldd	r5, Z+29	; 0x1d
     114:	1d 3c       	cpi	r17, 0xCD	; 205
     116:	b7 cc       	rjmp	.-1682   	; 0xfffffa86 <__eeprom_end+0xff7efa86>
     118:	57 63       	ori	r21, 0x37	; 55
     11a:	bd 6d       	ori	r27, 0xDD	; 221
     11c:	ed fd       	.word	0xfded	; ????
     11e:	75 3e       	cpi	r23, 0xE5	; 229
     120:	f6 17       	cp	r31, r22
     122:	72 31       	cpi	r23, 0x12	; 18
     124:	bf 00       	.word	0x00bf	; ????
     126:	00 00       	nop
     128:	80 3f       	cpi	r24, 0xF0	; 240
     12a:	08 00       	.word	0x0008	; ????
     12c:	00 00       	nop
     12e:	be 92       	st	-X, r11
     130:	24 49       	sbci	r18, 0x94	; 148
     132:	12 3e       	cpi	r17, 0xE2	; 226
     134:	ab aa       	std	Y+51, r10	; 0x33
     136:	aa 2a       	or	r10, r26
     138:	be cd       	rjmp	.-1156   	; 0xfffffcb6 <__eeprom_end+0xff7efcb6>
     13a:	cc cc       	rjmp	.-1640   	; 0xfffffad4 <__eeprom_end+0xff7efad4>
     13c:	4c 3e       	cpi	r20, 0xEC	; 236
     13e:	00 00       	nop
     140:	00 80       	ld	r0, Z
     142:	be ab       	std	Y+54, r27	; 0x36
     144:	aa aa       	std	Y+50, r10	; 0x32
     146:	aa 3e       	cpi	r26, 0xEA	; 234
     148:	00 00       	nop
     14a:	00 00       	nop
     14c:	bf 00       	.word	0x00bf	; ????
     14e:	00 00       	nop
     150:	80 3f       	cpi	r24, 0xF0	; 240
     152:	00 00       	nop
     154:	00 00       	nop
     156:	00 08       	sbc	r0, r0
     158:	41 78       	andi	r20, 0x81	; 129
     15a:	d3 bb       	out	0x13, r29	; 19
     15c:	43 87       	std	Z+11, r20	; 0x0b
     15e:	d1 13       	cpse	r29, r17
     160:	3d 19       	sub	r19, r13
     162:	0e 3c       	cpi	r16, 0xCE	; 206
     164:	c3 bd       	out	0x23, r28	; 35
     166:	42 82       	std	Z+2, r4	; 0x02
     168:	ad 2b       	or	r26, r29
     16a:	3e 68       	ori	r19, 0x8E	; 142
     16c:	ec 82       	std	Y+4, r14	; 0x04
     16e:	76 be       	out	0x36, r7	; 54
     170:	d9 8f       	std	Y+25, r29	; 0x19
     172:	e1 a9       	ldd	r30, Z+49	; 0x31
     174:	3e 4c       	sbci	r19, 0xCE	; 206
     176:	80 ef       	ldi	r24, 0xF0	; 240
     178:	ff be       	out	0x3f, r15	; 63
     17a:	01 c4       	rjmp	.+2050   	; 0x97e <_ZNK10helicopter5model11SystemModel9ZIntegralEv+0x1a>
     17c:	ff 7f       	andi	r31, 0xFF	; 255
     17e:	3f 00       	.word	0x003f	; ????
     180:	00 00       	nop
	...

00000184 <__trampolines_start>:
     184:	0c 94 a2 0c 	jmp	0x1944	; 0x1944 <_ZN10helicopter7drivers12SerialDriverD1Ev>
     188:	0c 94 6e 1c 	jmp	0x38dc	; 0x38dc <_ZN10helicopter8messages11SyncMessageD0Ev>
     18c:	0c 94 49 0e 	jmp	0x1c92	; 0x1c92 <_ZN10helicopter7drivers11ServoDriverD1Ev>
     190:	0c 94 c0 0c 	jmp	0x1980	; 0x1980 <_ZN10helicopter7drivers12SerialDriverD0Ev>
     194:	0c 94 dd 37 	jmp	0x6fba	; 0x6fba <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>
     198:	0c 94 e4 0d 	jmp	0x1bc8	; 0x1bc8 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh>
     19c:	0c 94 a5 1b 	jmp	0x374a	; 0x374a <_ZN10helicopter8messages7MessageD1Ev>
     1a0:	0c 94 59 22 	jmp	0x44b2	; 0x44b2 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>
     1a4:	0c 94 7b 22 	jmp	0x44f6	; 0x44f6 <_ZN10helicopter8messages22SystemTelemetryMessageD0Ev>
     1a8:	0c 94 4f 38 	jmp	0x709e	; 0x709e <_ZN10helicopter5tasks4Task7runTaskEv>
     1ac:	0c 94 83 1c 	jmp	0x3906	; 0x3906 <_ZN10helicopter8messages11SyncMessage8getBytesEv>
     1b0:	0c 94 fe 38 	jmp	0x71fc	; 0x71fc <_ZN10helicopter5tasks21TransmitTelemetryTaskD0Ev>
     1b4:	0c 94 dc 38 	jmp	0x71b8	; 0x71b8 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>
     1b8:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh>
     1bc:	0c 94 13 0f 	jmp	0x1e26	; 0x1e26 <_ZN10helicopter5tasks4TaskD1Ev>
     1c0:	0c 94 ed 18 	jmp	0x31da	; 0x31da <_ZN10helicopter5tasks12FlashLEDTaskD0Ev>
     1c4:	0c 94 20 33 	jmp	0x6640	; 0x6640 <_ZN10helicopter5tasks20SensorProcessingTaskD0Ev>
     1c8:	0c 94 fe 32 	jmp	0x65fc	; 0x65fc <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>
     1cc:	0c 94 db 30 	jmp	0x61b6	; 0x61b6 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>
     1d0:	0c 94 43 30 	jmp	0x6086	; 0x6086 <_ZN10helicopter5tasks16PIDInnerLoopTask11runTaskImplEv>
     1d4:	0c 94 04 30 	jmp	0x6008	; 0x6008 <_ZN10helicopter5tasks4Task4initEv>
     1d8:	0c 94 57 30 	jmp	0x60ae	; 0x60ae <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>
     1dc:	0c 94 aa 34 	jmp	0x6954	; 0x6954 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv>
     1e0:	0c 94 ea 1b 	jmp	0x37d4	; 0x37d4 <_ZN10helicopter8messages7Message8getBytesEv>
     1e4:	0c 94 fd 30 	jmp	0x61fa	; 0x61fa <_ZN10helicopter5tasks16PIDOuterLoopTaskD0Ev>
     1e8:	0c 94 c3 1b 	jmp	0x3786	; 0x3786 <_ZN10helicopter8messages7MessageD0Ev>
     1ec:	0c 94 7c 0f 	jmp	0x1ef8	; 0x1ef8 <_ZN10helicopter5tasks12FlashLEDTask4initEv>
     1f0:	0c 94 67 0e 	jmp	0x1cce	; 0x1cce <_ZN10helicopter7drivers11ServoDriverD0Ev>
     1f4:	0c 94 31 0f 	jmp	0x1e62	; 0x1e62 <_ZN10helicopter5tasks4TaskD0Ev>
     1f8:	0c 94 cb 18 	jmp	0x3196	; 0x3196 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>
     1fc:	0c 94 90 22 	jmp	0x4520	; 0x4520 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv>
     200:	0c 94 79 30 	jmp	0x60f2	; 0x60f2 <_ZN10helicopter5tasks16PIDInnerLoopTaskD0Ev>
     204:	0c 94 ff 37 	jmp	0x6ffe	; 0x6ffe <_ZN10helicopter5tasks16SimTelemetryTaskD0Ev>
     208:	0c 94 e9 0e 	jmp	0x1dd2	; 0x1dd2 <_ZN10helicopter7drivers11ServoDriver30controlTailRotorCollectiveImplEd>
     20c:	0c 94 04 32 	jmp	0x6408	; 0x6408 <_ZN10helicopter5tasks20SensorProcessingTask11runTaskImplEv>
     210:	0c 94 d5 0c 	jmp	0x19aa	; 0x19aa <_ZN10helicopter7drivers12SerialDriver10initializeEv>
     214:	0c 94 44 25 	jmp	0x4a88	; 0x4a88 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh>
     218:	0c 94 c0 30 	jmp	0x6180	; 0x6180 <_ZN10helicopter5tasks16PIDOuterLoopTask11runTaskImplEv>
     21c:	0c 94 14 38 	jmp	0x7028	; 0x7028 <_ZN10helicopter5tasks4Task11runTaskImplEv>
     220:	0c 94 a8 1c 	jmp	0x3950	; 0x3950 <_ZN10helicopter8messages11SyncMessage12buildMessageEPh>
     224:	0c 94 a9 38 	jmp	0x7152	; 0x7152 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv>
     228:	0c 94 4c 1c 	jmp	0x3898	; 0x3898 <_ZN10helicopter8messages11SyncMessageD1Ev>
     22c:	0c 94 a0 0f 	jmp	0x1f40	; 0x1f40 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv>
     230:	0c 94 f9 1b 	jmp	0x37f2	; 0x37f2 <_ZN10helicopter8messages7Message12buildMessageEPh>

00000234 <__ctors_end>:
     234:	11 24       	eor	r1, r1
     236:	1f be       	out	0x3f, r1	; 63
     238:	cf ef       	ldi	r28, 0xFF	; 255
     23a:	d1 e2       	ldi	r29, 0x21	; 33
     23c:	de bf       	out	0x3e, r29	; 62
     23e:	cd bf       	out	0x3d, r28	; 61
     240:	00 e0       	ldi	r16, 0x00	; 0
     242:	0c bf       	out	0x3c, r16	; 60

00000244 <__do_copy_data>:
     244:	12 e0       	ldi	r17, 0x02	; 2
     246:	a0 e0       	ldi	r26, 0x00	; 0
     248:	b2 e0       	ldi	r27, 0x02	; 2
     24a:	e6 e0       	ldi	r30, 0x06	; 6
     24c:	fa e8       	ldi	r31, 0x8A	; 138
     24e:	00 e0       	ldi	r16, 0x00	; 0
     250:	0b bf       	out	0x3b, r16	; 59
     252:	02 c0       	rjmp	.+4      	; 0x258 <__do_copy_data+0x14>
     254:	07 90       	elpm	r0, Z+
     256:	0d 92       	st	X+, r0
     258:	a4 3a       	cpi	r26, 0xA4	; 164
     25a:	b1 07       	cpc	r27, r17
     25c:	d9 f7       	brne	.-10     	; 0x254 <__do_copy_data+0x10>

0000025e <__do_clear_bss>:
     25e:	22 e0       	ldi	r18, 0x02	; 2
     260:	a4 ea       	ldi	r26, 0xA4	; 164
     262:	b2 e0       	ldi	r27, 0x02	; 2
     264:	01 c0       	rjmp	.+2      	; 0x268 <.do_clear_bss_start>

00000266 <.do_clear_bss_loop>:
     266:	1d 92       	st	X+, r1

00000268 <.do_clear_bss_start>:
     268:	aa 3a       	cpi	r26, 0xAA	; 170
     26a:	b2 07       	cpc	r27, r18
     26c:	e1 f7       	brne	.-8      	; 0x266 <.do_clear_bss_loop>
     26e:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <main>
     272:	0c 94 01 45 	jmp	0x8a02	; 0x8a02 <_exit>

00000276 <__bad_interrupt>:
     276:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000027a <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>:
			 * Y axis is pointing behind the FC
			 * Z axis is pointing up out of the FC
			 */
			

			double MagYawDegrees() const { return magYawDegrees; }
     27a:	cf 93       	push	r28
     27c:	df 93       	push	r29
     27e:	1f 92       	push	r1
     280:	1f 92       	push	r1
     282:	cd b7       	in	r28, 0x3d	; 61
     284:	de b7       	in	r29, 0x3e	; 62
     286:	9a 83       	std	Y+2, r25	; 0x02
     288:	89 83       	std	Y+1, r24	; 0x01
     28a:	89 81       	ldd	r24, Y+1	; 0x01
     28c:	9a 81       	ldd	r25, Y+2	; 0x02
     28e:	fc 01       	movw	r30, r24
     290:	80 81       	ld	r24, Z
     292:	91 81       	ldd	r25, Z+1	; 0x01
     294:	a2 81       	ldd	r26, Z+2	; 0x02
     296:	b3 81       	ldd	r27, Z+3	; 0x03
     298:	bc 01       	movw	r22, r24
     29a:	cd 01       	movw	r24, r26
     29c:	0f 90       	pop	r0
     29e:	0f 90       	pop	r0
     2a0:	df 91       	pop	r29
     2a2:	cf 91       	pop	r28
     2a4:	08 95       	ret

000002a6 <_ZNK10helicopter5model11SystemModel22ReferenceMagYawDegreesEv>:
	model->MainRotorControlBeforeServoLimitsAdjustment(mainRotorControlBeforeServoLimitsAdjustment);
	model->ZIntegral(weightedZIntegral);
	model->ZProportional(zProportional);
	model->ZDerivativeError(zDerivativeError);
	
	servoDriver->controlMainRotorCollective(mainRotorControl);
     2a6:	cf 93       	push	r28
     2a8:	df 93       	push	r29
     2aa:	1f 92       	push	r1
     2ac:	1f 92       	push	r1
     2ae:	cd b7       	in	r28, 0x3d	; 61
     2b0:	de b7       	in	r29, 0x3e	; 62
     2b2:	9a 83       	std	Y+2, r25	; 0x02
     2b4:	89 83       	std	Y+1, r24	; 0x01
     2b6:	89 81       	ldd	r24, Y+1	; 0x01
     2b8:	9a 81       	ldd	r25, Y+2	; 0x02
}
     2ba:	fc 01       	movw	r30, r24
     2bc:	84 81       	ldd	r24, Z+4	; 0x04
     2be:	95 81       	ldd	r25, Z+5	; 0x05
     2c0:	a6 81       	ldd	r26, Z+6	; 0x06
     2c2:	b7 81       	ldd	r27, Z+7	; 0x07
     2c4:	bc 01       	movw	r22, r24
     2c6:	cd 01       	movw	r24, r26
     2c8:	0f 90       	pop	r0
     2ca:	0f 90       	pop	r0
     2cc:	df 91       	pop	r29
     2ce:	cf 91       	pop	r28
     2d0:	08 95       	ret

000002d2 <_ZNK10helicopter5model11SystemModel10YawControlEv>:
				
			double ReferenceMagYawDegrees() const {return referenceMagYawDegrees;}
			void ReferenceMagYawDegrees(double val) { referenceMagYawDegrees = val;}
				
				
			double YawControl() const {return yawControl;}
     2d2:	cf 93       	push	r28
     2d4:	df 93       	push	r29
     2d6:	1f 92       	push	r1
     2d8:	1f 92       	push	r1
     2da:	cd b7       	in	r28, 0x3d	; 61
     2dc:	de b7       	in	r29, 0x3e	; 62
     2de:	9a 83       	std	Y+2, r25	; 0x02
     2e0:	89 83       	std	Y+1, r24	; 0x01
     2e2:	89 81       	ldd	r24, Y+1	; 0x01
     2e4:	9a 81       	ldd	r25, Y+2	; 0x02
     2e6:	fc 01       	movw	r30, r24
     2e8:	80 85       	ldd	r24, Z+8	; 0x08
     2ea:	91 85       	ldd	r25, Z+9	; 0x09
     2ec:	a2 85       	ldd	r26, Z+10	; 0x0a
     2ee:	b3 85       	ldd	r27, Z+11	; 0x0b
     2f0:	bc 01       	movw	r22, r24
     2f2:	cd 01       	movw	r24, r26
     2f4:	0f 90       	pop	r0
     2f6:	0f 90       	pop	r0
     2f8:	df 91       	pop	r29
     2fa:	cf 91       	pop	r28
     2fc:	08 95       	ret

000002fe <_ZN10helicopter5model11SystemModel10YawControlEd>:
			void YawControl(double val) { yawControl = val;}
     2fe:	cf 93       	push	r28
     300:	df 93       	push	r29
     302:	00 d0       	rcall	.+0      	; 0x304 <_ZN10helicopter5model11SystemModel10YawControlEd+0x6>
     304:	00 d0       	rcall	.+0      	; 0x306 <_ZN10helicopter5model11SystemModel10YawControlEd+0x8>
     306:	cd b7       	in	r28, 0x3d	; 61
     308:	de b7       	in	r29, 0x3e	; 62
     30a:	9a 83       	std	Y+2, r25	; 0x02
     30c:	89 83       	std	Y+1, r24	; 0x01
     30e:	4b 83       	std	Y+3, r20	; 0x03
     310:	5c 83       	std	Y+4, r21	; 0x04
     312:	6d 83       	std	Y+5, r22	; 0x05
     314:	7e 83       	std	Y+6, r23	; 0x06
     316:	29 81       	ldd	r18, Y+1	; 0x01
     318:	3a 81       	ldd	r19, Y+2	; 0x02
     31a:	8b 81       	ldd	r24, Y+3	; 0x03
     31c:	9c 81       	ldd	r25, Y+4	; 0x04
     31e:	ad 81       	ldd	r26, Y+5	; 0x05
     320:	be 81       	ldd	r27, Y+6	; 0x06
     322:	f9 01       	movw	r30, r18
     324:	80 87       	std	Z+8, r24	; 0x08
     326:	91 87       	std	Z+9, r25	; 0x09
     328:	a2 87       	std	Z+10, r26	; 0x0a
     32a:	b3 87       	std	Z+11, r27	; 0x0b
     32c:	26 96       	adiw	r28, 0x06	; 6
     32e:	0f b6       	in	r0, 0x3f	; 63
     330:	f8 94       	cli
     332:	de bf       	out	0x3e, r29	; 62
     334:	0f be       	out	0x3f, r0	; 63
     336:	cd bf       	out	0x3d, r28	; 61
     338:	df 91       	pop	r29
     33a:	cf 91       	pop	r28
     33c:	08 95       	ret

0000033e <_ZNK10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEv>:
				
			double YawControlBeforeServoLimitsAdjustment() const {return yawControlBeforeServoLimitsAdjustment;}
     33e:	cf 93       	push	r28
     340:	df 93       	push	r29
     342:	1f 92       	push	r1
     344:	1f 92       	push	r1
     346:	cd b7       	in	r28, 0x3d	; 61
     348:	de b7       	in	r29, 0x3e	; 62
     34a:	9a 83       	std	Y+2, r25	; 0x02
     34c:	89 83       	std	Y+1, r24	; 0x01
     34e:	89 81       	ldd	r24, Y+1	; 0x01
     350:	9a 81       	ldd	r25, Y+2	; 0x02
     352:	fc 01       	movw	r30, r24
     354:	84 85       	ldd	r24, Z+12	; 0x0c
     356:	95 85       	ldd	r25, Z+13	; 0x0d
     358:	a6 85       	ldd	r26, Z+14	; 0x0e
     35a:	b7 85       	ldd	r27, Z+15	; 0x0f
     35c:	bc 01       	movw	r22, r24
     35e:	cd 01       	movw	r24, r26
     360:	0f 90       	pop	r0
     362:	0f 90       	pop	r0
     364:	df 91       	pop	r29
     366:	cf 91       	pop	r28
     368:	08 95       	ret

0000036a <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEd>:
			void YawControlBeforeServoLimitsAdjustment(double val) { yawControlBeforeServoLimitsAdjustment = val;}
     36a:	cf 93       	push	r28
     36c:	df 93       	push	r29
     36e:	00 d0       	rcall	.+0      	; 0x370 <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEd+0x6>
     370:	00 d0       	rcall	.+0      	; 0x372 <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEd+0x8>
     372:	cd b7       	in	r28, 0x3d	; 61
     374:	de b7       	in	r29, 0x3e	; 62
     376:	9a 83       	std	Y+2, r25	; 0x02
     378:	89 83       	std	Y+1, r24	; 0x01
     37a:	4b 83       	std	Y+3, r20	; 0x03
     37c:	5c 83       	std	Y+4, r21	; 0x04
     37e:	6d 83       	std	Y+5, r22	; 0x05
     380:	7e 83       	std	Y+6, r23	; 0x06
     382:	29 81       	ldd	r18, Y+1	; 0x01
     384:	3a 81       	ldd	r19, Y+2	; 0x02
     386:	8b 81       	ldd	r24, Y+3	; 0x03
     388:	9c 81       	ldd	r25, Y+4	; 0x04
     38a:	ad 81       	ldd	r26, Y+5	; 0x05
     38c:	be 81       	ldd	r27, Y+6	; 0x06
     38e:	f9 01       	movw	r30, r18
     390:	84 87       	std	Z+12, r24	; 0x0c
     392:	95 87       	std	Z+13, r25	; 0x0d
     394:	a6 87       	std	Z+14, r26	; 0x0e
     396:	b7 87       	std	Z+15, r27	; 0x0f
     398:	26 96       	adiw	r28, 0x06	; 6
     39a:	0f b6       	in	r0, 0x3f	; 63
     39c:	f8 94       	cli
     39e:	de bf       	out	0x3e, r29	; 62
     3a0:	0f be       	out	0x3f, r0	; 63
     3a2:	cd bf       	out	0x3d, r28	; 61
     3a4:	df 91       	pop	r29
     3a6:	cf 91       	pop	r28
     3a8:	08 95       	ret

000003aa <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>:
				
			double YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
     3aa:	cf 93       	push	r28
     3ac:	df 93       	push	r29
     3ae:	1f 92       	push	r1
     3b0:	1f 92       	push	r1
     3b2:	cd b7       	in	r28, 0x3d	; 61
     3b4:	de b7       	in	r29, 0x3e	; 62
     3b6:	9a 83       	std	Y+2, r25	; 0x02
     3b8:	89 83       	std	Y+1, r24	; 0x01
     3ba:	89 81       	ldd	r24, Y+1	; 0x01
     3bc:	9a 81       	ldd	r25, Y+2	; 0x02
     3be:	fc 01       	movw	r30, r24
     3c0:	80 89       	ldd	r24, Z+16	; 0x10
     3c2:	91 89       	ldd	r25, Z+17	; 0x11
     3c4:	a2 89       	ldd	r26, Z+18	; 0x12
     3c6:	b3 89       	ldd	r27, Z+19	; 0x13
     3c8:	bc 01       	movw	r22, r24
     3ca:	cd 01       	movw	r24, r26
     3cc:	0f 90       	pop	r0
     3ce:	0f 90       	pop	r0
     3d0:	df 91       	pop	r29
     3d2:	cf 91       	pop	r28
     3d4:	08 95       	ret

000003d6 <_ZNK10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEv>:
			void YawVelocityDegreesPerSecond(double val) { yawVelocityDegreesPerSecond = val;}
				
			double ReferenceYawVelocityDegreesPerSecond() const {return referenceYawVelocityDegreesPerSecond;}
     3d6:	cf 93       	push	r28
     3d8:	df 93       	push	r29
     3da:	1f 92       	push	r1
     3dc:	1f 92       	push	r1
     3de:	cd b7       	in	r28, 0x3d	; 61
     3e0:	de b7       	in	r29, 0x3e	; 62
     3e2:	9a 83       	std	Y+2, r25	; 0x02
     3e4:	89 83       	std	Y+1, r24	; 0x01
     3e6:	89 81       	ldd	r24, Y+1	; 0x01
     3e8:	9a 81       	ldd	r25, Y+2	; 0x02
     3ea:	fc 01       	movw	r30, r24
     3ec:	84 89       	ldd	r24, Z+20	; 0x14
     3ee:	95 89       	ldd	r25, Z+21	; 0x15
     3f0:	a6 89       	ldd	r26, Z+22	; 0x16
     3f2:	b7 89       	ldd	r27, Z+23	; 0x17
     3f4:	bc 01       	movw	r22, r24
     3f6:	cd 01       	movw	r24, r26
     3f8:	0f 90       	pop	r0
     3fa:	0f 90       	pop	r0
     3fc:	df 91       	pop	r29
     3fe:	cf 91       	pop	r28
     400:	08 95       	ret

00000402 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>:
			void ReferenceYawVelocityDegreesPerSecond(double val) { referenceYawVelocityDegreesPerSecond = val;}
				
			double YawIntegral() const {return yawIntegral;}
     402:	cf 93       	push	r28
     404:	df 93       	push	r29
     406:	1f 92       	push	r1
     408:	1f 92       	push	r1
     40a:	cd b7       	in	r28, 0x3d	; 61
     40c:	de b7       	in	r29, 0x3e	; 62
     40e:	9a 83       	std	Y+2, r25	; 0x02
     410:	89 83       	std	Y+1, r24	; 0x01
     412:	89 81       	ldd	r24, Y+1	; 0x01
     414:	9a 81       	ldd	r25, Y+2	; 0x02
     416:	fc 01       	movw	r30, r24
     418:	80 8d       	ldd	r24, Z+24	; 0x18
     41a:	91 8d       	ldd	r25, Z+25	; 0x19
     41c:	a2 8d       	ldd	r26, Z+26	; 0x1a
     41e:	b3 8d       	ldd	r27, Z+27	; 0x1b
     420:	bc 01       	movw	r22, r24
     422:	cd 01       	movw	r24, r26
     424:	0f 90       	pop	r0
     426:	0f 90       	pop	r0
     428:	df 91       	pop	r29
     42a:	cf 91       	pop	r28
     42c:	08 95       	ret

0000042e <_ZN10helicopter5model11SystemModel11YawIntegralEd>:
			void YawIntegral(double val) { yawIntegral = val;}
     42e:	cf 93       	push	r28
     430:	df 93       	push	r29
     432:	00 d0       	rcall	.+0      	; 0x434 <_ZN10helicopter5model11SystemModel11YawIntegralEd+0x6>
     434:	00 d0       	rcall	.+0      	; 0x436 <_ZN10helicopter5model11SystemModel11YawIntegralEd+0x8>
     436:	cd b7       	in	r28, 0x3d	; 61
     438:	de b7       	in	r29, 0x3e	; 62
     43a:	9a 83       	std	Y+2, r25	; 0x02
     43c:	89 83       	std	Y+1, r24	; 0x01
     43e:	4b 83       	std	Y+3, r20	; 0x03
     440:	5c 83       	std	Y+4, r21	; 0x04
     442:	6d 83       	std	Y+5, r22	; 0x05
     444:	7e 83       	std	Y+6, r23	; 0x06
     446:	29 81       	ldd	r18, Y+1	; 0x01
     448:	3a 81       	ldd	r19, Y+2	; 0x02
     44a:	8b 81       	ldd	r24, Y+3	; 0x03
     44c:	9c 81       	ldd	r25, Y+4	; 0x04
     44e:	ad 81       	ldd	r26, Y+5	; 0x05
     450:	be 81       	ldd	r27, Y+6	; 0x06
     452:	f9 01       	movw	r30, r18
     454:	80 8f       	std	Z+24, r24	; 0x18
     456:	91 8f       	std	Z+25, r25	; 0x19
     458:	a2 8f       	std	Z+26, r26	; 0x1a
     45a:	b3 8f       	std	Z+27, r27	; 0x1b
     45c:	26 96       	adiw	r28, 0x06	; 6
     45e:	0f b6       	in	r0, 0x3f	; 63
     460:	f8 94       	cli
     462:	de bf       	out	0x3e, r29	; 62
     464:	0f be       	out	0x3f, r0	; 63
     466:	cd bf       	out	0x3d, r28	; 61
     468:	df 91       	pop	r29
     46a:	cf 91       	pop	r28
     46c:	08 95       	ret

0000046e <_ZN10helicopter5model11SystemModel15YawProportionalEd>:

			double YawProportional() const {return yawProportional;}
			void YawProportional(double val) { yawProportional = val;}
     46e:	cf 93       	push	r28
     470:	df 93       	push	r29
     472:	00 d0       	rcall	.+0      	; 0x474 <_ZN10helicopter5model11SystemModel15YawProportionalEd+0x6>
     474:	00 d0       	rcall	.+0      	; 0x476 <_ZN10helicopter5model11SystemModel15YawProportionalEd+0x8>
     476:	cd b7       	in	r28, 0x3d	; 61
     478:	de b7       	in	r29, 0x3e	; 62
     47a:	9a 83       	std	Y+2, r25	; 0x02
     47c:	89 83       	std	Y+1, r24	; 0x01
     47e:	4b 83       	std	Y+3, r20	; 0x03
     480:	5c 83       	std	Y+4, r21	; 0x04
     482:	6d 83       	std	Y+5, r22	; 0x05
     484:	7e 83       	std	Y+6, r23	; 0x06
     486:	29 81       	ldd	r18, Y+1	; 0x01
     488:	3a 81       	ldd	r19, Y+2	; 0x02
     48a:	8b 81       	ldd	r24, Y+3	; 0x03
     48c:	9c 81       	ldd	r25, Y+4	; 0x04
     48e:	ad 81       	ldd	r26, Y+5	; 0x05
     490:	be 81       	ldd	r27, Y+6	; 0x06
     492:	f9 01       	movw	r30, r18
     494:	84 8f       	std	Z+28, r24	; 0x1c
     496:	95 8f       	std	Z+29, r25	; 0x1d
     498:	a6 8f       	std	Z+30, r26	; 0x1e
     49a:	b7 8f       	std	Z+31, r27	; 0x1f
     49c:	26 96       	adiw	r28, 0x06	; 6
     49e:	0f b6       	in	r0, 0x3f	; 63
     4a0:	f8 94       	cli
     4a2:	de bf       	out	0x3e, r29	; 62
     4a4:	0f be       	out	0x3f, r0	; 63
     4a6:	cd bf       	out	0x3d, r28	; 61
     4a8:	df 91       	pop	r29
     4aa:	cf 91       	pop	r28
     4ac:	08 95       	ret

000004ae <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEd>:

			double YawDerivativeError() const {return yawDerivativeError;}
			void YawDerivativeError(double val) { yawDerivativeError = val;}								
     4ae:	cf 93       	push	r28
     4b0:	df 93       	push	r29
     4b2:	00 d0       	rcall	.+0      	; 0x4b4 <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEd+0x6>
     4b4:	00 d0       	rcall	.+0      	; 0x4b6 <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEd+0x8>
     4b6:	cd b7       	in	r28, 0x3d	; 61
     4b8:	de b7       	in	r29, 0x3e	; 62
     4ba:	9a 83       	std	Y+2, r25	; 0x02
     4bc:	89 83       	std	Y+1, r24	; 0x01
     4be:	4b 83       	std	Y+3, r20	; 0x03
     4c0:	5c 83       	std	Y+4, r21	; 0x04
     4c2:	6d 83       	std	Y+5, r22	; 0x05
     4c4:	7e 83       	std	Y+6, r23	; 0x06
     4c6:	29 81       	ldd	r18, Y+1	; 0x01
     4c8:	3a 81       	ldd	r19, Y+2	; 0x02
     4ca:	8b 81       	ldd	r24, Y+3	; 0x03
     4cc:	9c 81       	ldd	r25, Y+4	; 0x04
     4ce:	ad 81       	ldd	r26, Y+5	; 0x05
     4d0:	be 81       	ldd	r27, Y+6	; 0x06
     4d2:	f9 01       	movw	r30, r18
     4d4:	80 a3       	std	Z+32, r24	; 0x20
     4d6:	91 a3       	std	Z+33, r25	; 0x21
     4d8:	a2 a3       	std	Z+34, r26	; 0x22
     4da:	b3 a3       	std	Z+35, r27	; 0x23
     4dc:	26 96       	adiw	r28, 0x06	; 6
     4de:	0f b6       	in	r0, 0x3f	; 63
     4e0:	f8 94       	cli
     4e2:	de bf       	out	0x3e, r29	; 62
     4e4:	0f be       	out	0x3f, r0	; 63
     4e6:	cd bf       	out	0x3d, r28	; 61
     4e8:	df 91       	pop	r29
     4ea:	cf 91       	pop	r28
     4ec:	08 95       	ret

000004ee <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>:
																							
		
		
		
			double XNEDBodyFrame() const {return xNEDBodyFrame;}
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	1f 92       	push	r1
     4f4:	1f 92       	push	r1
     4f6:	cd b7       	in	r28, 0x3d	; 61
     4f8:	de b7       	in	r29, 0x3e	; 62
     4fa:	9a 83       	std	Y+2, r25	; 0x02
     4fc:	89 83       	std	Y+1, r24	; 0x01
     4fe:	89 81       	ldd	r24, Y+1	; 0x01
     500:	9a 81       	ldd	r25, Y+2	; 0x02
     502:	fc 01       	movw	r30, r24
     504:	84 a1       	ldd	r24, Z+36	; 0x24
     506:	95 a1       	ldd	r25, Z+37	; 0x25
     508:	a6 a1       	ldd	r26, Z+38	; 0x26
     50a:	b7 a1       	ldd	r27, Z+39	; 0x27
     50c:	bc 01       	movw	r22, r24
     50e:	cd 01       	movw	r24, r26
     510:	0f 90       	pop	r0
     512:	0f 90       	pop	r0
     514:	df 91       	pop	r29
     516:	cf 91       	pop	r28
     518:	08 95       	ret

0000051a <_ZNK10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEv>:
			void XNEDBodyFrame(double val) { xNEDBodyFrame = val;}
						
			double ReferenceXNEDBodyFrame() const {return referenceXNEDBodyFrame;}
     51a:	cf 93       	push	r28
     51c:	df 93       	push	r29
     51e:	1f 92       	push	r1
     520:	1f 92       	push	r1
     522:	cd b7       	in	r28, 0x3d	; 61
     524:	de b7       	in	r29, 0x3e	; 62
     526:	9a 83       	std	Y+2, r25	; 0x02
     528:	89 83       	std	Y+1, r24	; 0x01
     52a:	89 81       	ldd	r24, Y+1	; 0x01
     52c:	9a 81       	ldd	r25, Y+2	; 0x02
     52e:	fc 01       	movw	r30, r24
     530:	80 a5       	ldd	r24, Z+40	; 0x28
     532:	91 a5       	ldd	r25, Z+41	; 0x29
     534:	a2 a5       	ldd	r26, Z+42	; 0x2a
     536:	b3 a5       	ldd	r27, Z+43	; 0x2b
     538:	bc 01       	movw	r22, r24
     53a:	cd 01       	movw	r24, r26
     53c:	0f 90       	pop	r0
     53e:	0f 90       	pop	r0
     540:	df 91       	pop	r29
     542:	cf 91       	pop	r28
     544:	08 95       	ret

00000546 <_ZNK10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEv>:
			void ReferenceXNEDBodyFrame(double val) { referenceXNEDBodyFrame = val;}

			double LongitudeControlBeforeServoLimitsAdjustment() const {return longitudeControlBeforeServoLimitsAdjustment;}
     546:	cf 93       	push	r28
     548:	df 93       	push	r29
     54a:	1f 92       	push	r1
     54c:	1f 92       	push	r1
     54e:	cd b7       	in	r28, 0x3d	; 61
     550:	de b7       	in	r29, 0x3e	; 62
     552:	9a 83       	std	Y+2, r25	; 0x02
     554:	89 83       	std	Y+1, r24	; 0x01
     556:	89 81       	ldd	r24, Y+1	; 0x01
     558:	9a 81       	ldd	r25, Y+2	; 0x02
     55a:	fc 01       	movw	r30, r24
     55c:	84 a5       	ldd	r24, Z+44	; 0x2c
     55e:	95 a5       	ldd	r25, Z+45	; 0x2d
     560:	a6 a5       	ldd	r26, Z+46	; 0x2e
     562:	b7 a5       	ldd	r27, Z+47	; 0x2f
     564:	bc 01       	movw	r22, r24
     566:	cd 01       	movw	r24, r26
     568:	0f 90       	pop	r0
     56a:	0f 90       	pop	r0
     56c:	df 91       	pop	r29
     56e:	cf 91       	pop	r28
     570:	08 95       	ret

00000572 <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEd>:
			void LongitudeControlBeforeServoLimitsAdjustment(double val) { longitudeControlBeforeServoLimitsAdjustment = val;}
     572:	cf 93       	push	r28
     574:	df 93       	push	r29
     576:	00 d0       	rcall	.+0      	; 0x578 <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEd+0x6>
     578:	00 d0       	rcall	.+0      	; 0x57a <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEd+0x8>
     57a:	cd b7       	in	r28, 0x3d	; 61
     57c:	de b7       	in	r29, 0x3e	; 62
     57e:	9a 83       	std	Y+2, r25	; 0x02
     580:	89 83       	std	Y+1, r24	; 0x01
     582:	4b 83       	std	Y+3, r20	; 0x03
     584:	5c 83       	std	Y+4, r21	; 0x04
     586:	6d 83       	std	Y+5, r22	; 0x05
     588:	7e 83       	std	Y+6, r23	; 0x06
     58a:	29 81       	ldd	r18, Y+1	; 0x01
     58c:	3a 81       	ldd	r19, Y+2	; 0x02
     58e:	8b 81       	ldd	r24, Y+3	; 0x03
     590:	9c 81       	ldd	r25, Y+4	; 0x04
     592:	ad 81       	ldd	r26, Y+5	; 0x05
     594:	be 81       	ldd	r27, Y+6	; 0x06
     596:	f9 01       	movw	r30, r18
     598:	84 a7       	std	Z+44, r24	; 0x2c
     59a:	95 a7       	std	Z+45, r25	; 0x2d
     59c:	a6 a7       	std	Z+46, r26	; 0x2e
     59e:	b7 a7       	std	Z+47, r27	; 0x2f
     5a0:	26 96       	adiw	r28, 0x06	; 6
     5a2:	0f b6       	in	r0, 0x3f	; 63
     5a4:	f8 94       	cli
     5a6:	de bf       	out	0x3e, r29	; 62
     5a8:	0f be       	out	0x3f, r0	; 63
     5aa:	cd bf       	out	0x3d, r28	; 61
     5ac:	df 91       	pop	r29
     5ae:	cf 91       	pop	r28
     5b0:	08 95       	ret

000005b2 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>:

			double LongitudeControl() const {return longitudeControl;}
     5b2:	cf 93       	push	r28
     5b4:	df 93       	push	r29
     5b6:	1f 92       	push	r1
     5b8:	1f 92       	push	r1
     5ba:	cd b7       	in	r28, 0x3d	; 61
     5bc:	de b7       	in	r29, 0x3e	; 62
     5be:	9a 83       	std	Y+2, r25	; 0x02
     5c0:	89 83       	std	Y+1, r24	; 0x01
     5c2:	89 81       	ldd	r24, Y+1	; 0x01
     5c4:	9a 81       	ldd	r25, Y+2	; 0x02
     5c6:	fc 01       	movw	r30, r24
     5c8:	80 a9       	ldd	r24, Z+48	; 0x30
     5ca:	91 a9       	ldd	r25, Z+49	; 0x31
     5cc:	a2 a9       	ldd	r26, Z+50	; 0x32
     5ce:	b3 a9       	ldd	r27, Z+51	; 0x33
     5d0:	bc 01       	movw	r22, r24
     5d2:	cd 01       	movw	r24, r26
     5d4:	0f 90       	pop	r0
     5d6:	0f 90       	pop	r0
     5d8:	df 91       	pop	r29
     5da:	cf 91       	pop	r28
     5dc:	08 95       	ret

000005de <_ZN10helicopter5model11SystemModel16LongitudeControlEd>:
			void LongitudeControl(double val) { longitudeControl = val;}
     5de:	cf 93       	push	r28
     5e0:	df 93       	push	r29
     5e2:	00 d0       	rcall	.+0      	; 0x5e4 <_ZN10helicopter5model11SystemModel16LongitudeControlEd+0x6>
     5e4:	00 d0       	rcall	.+0      	; 0x5e6 <_ZN10helicopter5model11SystemModel16LongitudeControlEd+0x8>
     5e6:	cd b7       	in	r28, 0x3d	; 61
     5e8:	de b7       	in	r29, 0x3e	; 62
     5ea:	9a 83       	std	Y+2, r25	; 0x02
     5ec:	89 83       	std	Y+1, r24	; 0x01
     5ee:	4b 83       	std	Y+3, r20	; 0x03
     5f0:	5c 83       	std	Y+4, r21	; 0x04
     5f2:	6d 83       	std	Y+5, r22	; 0x05
     5f4:	7e 83       	std	Y+6, r23	; 0x06
     5f6:	29 81       	ldd	r18, Y+1	; 0x01
     5f8:	3a 81       	ldd	r19, Y+2	; 0x02
     5fa:	8b 81       	ldd	r24, Y+3	; 0x03
     5fc:	9c 81       	ldd	r25, Y+4	; 0x04
     5fe:	ad 81       	ldd	r26, Y+5	; 0x05
     600:	be 81       	ldd	r27, Y+6	; 0x06
     602:	f9 01       	movw	r30, r18
     604:	80 ab       	std	Z+48, r24	; 0x30
     606:	91 ab       	std	Z+49, r25	; 0x31
     608:	a2 ab       	std	Z+50, r26	; 0x32
     60a:	b3 ab       	std	Z+51, r27	; 0x33
     60c:	26 96       	adiw	r28, 0x06	; 6
     60e:	0f b6       	in	r0, 0x3f	; 63
     610:	f8 94       	cli
     612:	de bf       	out	0x3e, r29	; 62
     614:	0f be       	out	0x3f, r0	; 63
     616:	cd bf       	out	0x3d, r28	; 61
     618:	df 91       	pop	r29
     61a:	cf 91       	pop	r28
     61c:	08 95       	ret

0000061e <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>:
				
			double XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
     61e:	cf 93       	push	r28
     620:	df 93       	push	r29
     622:	1f 92       	push	r1
     624:	1f 92       	push	r1
     626:	cd b7       	in	r28, 0x3d	; 61
     628:	de b7       	in	r29, 0x3e	; 62
     62a:	9a 83       	std	Y+2, r25	; 0x02
     62c:	89 83       	std	Y+1, r24	; 0x01
     62e:	89 81       	ldd	r24, Y+1	; 0x01
     630:	9a 81       	ldd	r25, Y+2	; 0x02
     632:	fc 01       	movw	r30, r24
     634:	84 a9       	ldd	r24, Z+52	; 0x34
     636:	95 a9       	ldd	r25, Z+53	; 0x35
     638:	a6 a9       	ldd	r26, Z+54	; 0x36
     63a:	b7 a9       	ldd	r27, Z+55	; 0x37
     63c:	bc 01       	movw	r22, r24
     63e:	cd 01       	movw	r24, r26
     640:	0f 90       	pop	r0
     642:	0f 90       	pop	r0
     644:	df 91       	pop	r29
     646:	cf 91       	pop	r28
     648:	08 95       	ret

0000064a <_ZNK10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEv>:
			void XVelocityMetersPerSecond(double val) { xVelocityMetersPerSecond = val;}
				
			double ReferenceXVelocityMetersPerSecond() const {return referenceXVelocityMetersPerSecond;}
     64a:	cf 93       	push	r28
     64c:	df 93       	push	r29
     64e:	1f 92       	push	r1
     650:	1f 92       	push	r1
     652:	cd b7       	in	r28, 0x3d	; 61
     654:	de b7       	in	r29, 0x3e	; 62
     656:	9a 83       	std	Y+2, r25	; 0x02
     658:	89 83       	std	Y+1, r24	; 0x01
     65a:	89 81       	ldd	r24, Y+1	; 0x01
     65c:	9a 81       	ldd	r25, Y+2	; 0x02
     65e:	fc 01       	movw	r30, r24
     660:	80 ad       	ldd	r24, Z+56	; 0x38
     662:	91 ad       	ldd	r25, Z+57	; 0x39
     664:	a2 ad       	ldd	r26, Z+58	; 0x3a
     666:	b3 ad       	ldd	r27, Z+59	; 0x3b
     668:	bc 01       	movw	r22, r24
     66a:	cd 01       	movw	r24, r26
     66c:	0f 90       	pop	r0
     66e:	0f 90       	pop	r0
     670:	df 91       	pop	r29
     672:	cf 91       	pop	r28
     674:	08 95       	ret

00000676 <_ZNK10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEv>:
			void ReferenceXVelocityMetersPerSecond(double val) { referenceXVelocityMetersPerSecond = val;}
				
			double XLongitudinalOuterLoopControl() const {return xLongitudinalOuterLoopControl;}
     676:	cf 93       	push	r28
     678:	df 93       	push	r29
     67a:	1f 92       	push	r1
     67c:	1f 92       	push	r1
     67e:	cd b7       	in	r28, 0x3d	; 61
     680:	de b7       	in	r29, 0x3e	; 62
     682:	9a 83       	std	Y+2, r25	; 0x02
     684:	89 83       	std	Y+1, r24	; 0x01
     686:	89 81       	ldd	r24, Y+1	; 0x01
     688:	9a 81       	ldd	r25, Y+2	; 0x02
     68a:	fc 01       	movw	r30, r24
     68c:	84 ad       	ldd	r24, Z+60	; 0x3c
     68e:	95 ad       	ldd	r25, Z+61	; 0x3d
     690:	a6 ad       	ldd	r26, Z+62	; 0x3e
     692:	b7 ad       	ldd	r27, Z+63	; 0x3f
     694:	bc 01       	movw	r22, r24
     696:	cd 01       	movw	r24, r26
     698:	0f 90       	pop	r0
     69a:	0f 90       	pop	r0
     69c:	df 91       	pop	r29
     69e:	cf 91       	pop	r28
     6a0:	08 95       	ret

000006a2 <_ZN10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEd>:
			void XLongitudinalOuterLoopControl(double val) { xLongitudinalOuterLoopControl = val;}
     6a2:	cf 93       	push	r28
     6a4:	df 93       	push	r29
     6a6:	00 d0       	rcall	.+0      	; 0x6a8 <_ZN10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEd+0x6>
     6a8:	00 d0       	rcall	.+0      	; 0x6aa <_ZN10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEd+0x8>
     6aa:	cd b7       	in	r28, 0x3d	; 61
     6ac:	de b7       	in	r29, 0x3e	; 62
     6ae:	9a 83       	std	Y+2, r25	; 0x02
     6b0:	89 83       	std	Y+1, r24	; 0x01
     6b2:	4b 83       	std	Y+3, r20	; 0x03
     6b4:	5c 83       	std	Y+4, r21	; 0x04
     6b6:	6d 83       	std	Y+5, r22	; 0x05
     6b8:	7e 83       	std	Y+6, r23	; 0x06
     6ba:	29 81       	ldd	r18, Y+1	; 0x01
     6bc:	3a 81       	ldd	r19, Y+2	; 0x02
     6be:	8b 81       	ldd	r24, Y+3	; 0x03
     6c0:	9c 81       	ldd	r25, Y+4	; 0x04
     6c2:	ad 81       	ldd	r26, Y+5	; 0x05
     6c4:	be 81       	ldd	r27, Y+6	; 0x06
     6c6:	f9 01       	movw	r30, r18
     6c8:	84 af       	std	Z+60, r24	; 0x3c
     6ca:	95 af       	std	Z+61, r25	; 0x3d
     6cc:	a6 af       	std	Z+62, r26	; 0x3e
     6ce:	b7 af       	std	Z+63, r27	; 0x3f
     6d0:	26 96       	adiw	r28, 0x06	; 6
     6d2:	0f b6       	in	r0, 0x3f	; 63
     6d4:	f8 94       	cli
     6d6:	de bf       	out	0x3e, r29	; 62
     6d8:	0f be       	out	0x3f, r0	; 63
     6da:	cd bf       	out	0x3d, r28	; 61
     6dc:	df 91       	pop	r29
     6de:	cf 91       	pop	r28
     6e0:	08 95       	ret

000006e2 <_ZN10helicopter5model11SystemModel13XProportionalEd>:
				
			double XProportional() const {return xProportional;}
			void XProportional(double val) { xProportional = val;}
     6e2:	cf 93       	push	r28
     6e4:	df 93       	push	r29
     6e6:	00 d0       	rcall	.+0      	; 0x6e8 <_ZN10helicopter5model11SystemModel13XProportionalEd+0x6>
     6e8:	00 d0       	rcall	.+0      	; 0x6ea <_ZN10helicopter5model11SystemModel13XProportionalEd+0x8>
     6ea:	cd b7       	in	r28, 0x3d	; 61
     6ec:	de b7       	in	r29, 0x3e	; 62
     6ee:	9a 83       	std	Y+2, r25	; 0x02
     6f0:	89 83       	std	Y+1, r24	; 0x01
     6f2:	4b 83       	std	Y+3, r20	; 0x03
     6f4:	5c 83       	std	Y+4, r21	; 0x04
     6f6:	6d 83       	std	Y+5, r22	; 0x05
     6f8:	7e 83       	std	Y+6, r23	; 0x06
     6fa:	89 81       	ldd	r24, Y+1	; 0x01
     6fc:	9a 81       	ldd	r25, Y+2	; 0x02
     6fe:	9c 01       	movw	r18, r24
     700:	20 5c       	subi	r18, 0xC0	; 192
     702:	3f 4f       	sbci	r19, 0xFF	; 255
     704:	8b 81       	ldd	r24, Y+3	; 0x03
     706:	9c 81       	ldd	r25, Y+4	; 0x04
     708:	ad 81       	ldd	r26, Y+5	; 0x05
     70a:	be 81       	ldd	r27, Y+6	; 0x06
     70c:	f9 01       	movw	r30, r18
     70e:	80 83       	st	Z, r24
     710:	91 83       	std	Z+1, r25	; 0x01
     712:	a2 83       	std	Z+2, r26	; 0x02
     714:	b3 83       	std	Z+3, r27	; 0x03
     716:	26 96       	adiw	r28, 0x06	; 6
     718:	0f b6       	in	r0, 0x3f	; 63
     71a:	f8 94       	cli
     71c:	de bf       	out	0x3e, r29	; 62
     71e:	0f be       	out	0x3f, r0	; 63
     720:	cd bf       	out	0x3d, r28	; 61
     722:	df 91       	pop	r29
     724:	cf 91       	pop	r28
     726:	08 95       	ret

00000728 <_ZNK10helicopter5model11SystemModel9XIntegralEv>:
				
			double XIntegral() const {return xIntegral;}
     728:	cf 93       	push	r28
     72a:	df 93       	push	r29
     72c:	1f 92       	push	r1
     72e:	1f 92       	push	r1
     730:	cd b7       	in	r28, 0x3d	; 61
     732:	de b7       	in	r29, 0x3e	; 62
     734:	9a 83       	std	Y+2, r25	; 0x02
     736:	89 83       	std	Y+1, r24	; 0x01
     738:	89 81       	ldd	r24, Y+1	; 0x01
     73a:	9a 81       	ldd	r25, Y+2	; 0x02
     73c:	8c 5b       	subi	r24, 0xBC	; 188
     73e:	9f 4f       	sbci	r25, 0xFF	; 255
     740:	fc 01       	movw	r30, r24
     742:	80 81       	ld	r24, Z
     744:	91 81       	ldd	r25, Z+1	; 0x01
     746:	a2 81       	ldd	r26, Z+2	; 0x02
     748:	b3 81       	ldd	r27, Z+3	; 0x03
     74a:	bc 01       	movw	r22, r24
     74c:	cd 01       	movw	r24, r26
     74e:	0f 90       	pop	r0
     750:	0f 90       	pop	r0
     752:	df 91       	pop	r29
     754:	cf 91       	pop	r28
     756:	08 95       	ret

00000758 <_ZN10helicopter5model11SystemModel9XIntegralEd>:
			void XIntegral(double val) { xIntegral = val;}
     758:	cf 93       	push	r28
     75a:	df 93       	push	r29
     75c:	00 d0       	rcall	.+0      	; 0x75e <_ZN10helicopter5model11SystemModel9XIntegralEd+0x6>
     75e:	00 d0       	rcall	.+0      	; 0x760 <_ZN10helicopter5model11SystemModel9XIntegralEd+0x8>
     760:	cd b7       	in	r28, 0x3d	; 61
     762:	de b7       	in	r29, 0x3e	; 62
     764:	9a 83       	std	Y+2, r25	; 0x02
     766:	89 83       	std	Y+1, r24	; 0x01
     768:	4b 83       	std	Y+3, r20	; 0x03
     76a:	5c 83       	std	Y+4, r21	; 0x04
     76c:	6d 83       	std	Y+5, r22	; 0x05
     76e:	7e 83       	std	Y+6, r23	; 0x06
     770:	89 81       	ldd	r24, Y+1	; 0x01
     772:	9a 81       	ldd	r25, Y+2	; 0x02
     774:	9c 01       	movw	r18, r24
     776:	2c 5b       	subi	r18, 0xBC	; 188
     778:	3f 4f       	sbci	r19, 0xFF	; 255
     77a:	8b 81       	ldd	r24, Y+3	; 0x03
     77c:	9c 81       	ldd	r25, Y+4	; 0x04
     77e:	ad 81       	ldd	r26, Y+5	; 0x05
     780:	be 81       	ldd	r27, Y+6	; 0x06
     782:	f9 01       	movw	r30, r18
     784:	80 83       	st	Z, r24
     786:	91 83       	std	Z+1, r25	; 0x01
     788:	a2 83       	std	Z+2, r26	; 0x02
     78a:	b3 83       	std	Z+3, r27	; 0x03
     78c:	26 96       	adiw	r28, 0x06	; 6
     78e:	0f b6       	in	r0, 0x3f	; 63
     790:	f8 94       	cli
     792:	de bf       	out	0x3e, r29	; 62
     794:	0f be       	out	0x3f, r0	; 63
     796:	cd bf       	out	0x3d, r28	; 61
     798:	df 91       	pop	r29
     79a:	cf 91       	pop	r28
     79c:	08 95       	ret

0000079e <_ZN10helicopter5model11SystemModel16XDerivativeErrorEd>:
				
			double XDerivativeError() const {return xDerivativeError;}
			void XDerivativeError(double val) { xDerivativeError = val;}
     79e:	cf 93       	push	r28
     7a0:	df 93       	push	r29
     7a2:	00 d0       	rcall	.+0      	; 0x7a4 <_ZN10helicopter5model11SystemModel16XDerivativeErrorEd+0x6>
     7a4:	00 d0       	rcall	.+0      	; 0x7a6 <_ZN10helicopter5model11SystemModel16XDerivativeErrorEd+0x8>
     7a6:	cd b7       	in	r28, 0x3d	; 61
     7a8:	de b7       	in	r29, 0x3e	; 62
     7aa:	9a 83       	std	Y+2, r25	; 0x02
     7ac:	89 83       	std	Y+1, r24	; 0x01
     7ae:	4b 83       	std	Y+3, r20	; 0x03
     7b0:	5c 83       	std	Y+4, r21	; 0x04
     7b2:	6d 83       	std	Y+5, r22	; 0x05
     7b4:	7e 83       	std	Y+6, r23	; 0x06
     7b6:	89 81       	ldd	r24, Y+1	; 0x01
     7b8:	9a 81       	ldd	r25, Y+2	; 0x02
     7ba:	9c 01       	movw	r18, r24
     7bc:	28 5b       	subi	r18, 0xB8	; 184
     7be:	3f 4f       	sbci	r19, 0xFF	; 255
     7c0:	8b 81       	ldd	r24, Y+3	; 0x03
     7c2:	9c 81       	ldd	r25, Y+4	; 0x04
     7c4:	ad 81       	ldd	r26, Y+5	; 0x05
     7c6:	be 81       	ldd	r27, Y+6	; 0x06
     7c8:	f9 01       	movw	r30, r18
     7ca:	80 83       	st	Z, r24
     7cc:	91 83       	std	Z+1, r25	; 0x01
     7ce:	a2 83       	std	Z+2, r26	; 0x02
     7d0:	b3 83       	std	Z+3, r27	; 0x03
     7d2:	26 96       	adiw	r28, 0x06	; 6
     7d4:	0f b6       	in	r0, 0x3f	; 63
     7d6:	f8 94       	cli
     7d8:	de bf       	out	0x3e, r29	; 62
     7da:	0f be       	out	0x3f, r0	; 63
     7dc:	cd bf       	out	0x3d, r28	; 61
     7de:	df 91       	pop	r29
     7e0:	cf 91       	pop	r28
     7e2:	08 95       	ret

000007e4 <_ZNK10helicopter5model11SystemModel17ThetaPitchDegreesEv>:
				
		
			double ThetaPitchDegrees() const {return thetaPitchDegrees;}
     7e4:	cf 93       	push	r28
     7e6:	df 93       	push	r29
     7e8:	1f 92       	push	r1
     7ea:	1f 92       	push	r1
     7ec:	cd b7       	in	r28, 0x3d	; 61
     7ee:	de b7       	in	r29, 0x3e	; 62
     7f0:	9a 83       	std	Y+2, r25	; 0x02
     7f2:	89 83       	std	Y+1, r24	; 0x01
     7f4:	89 81       	ldd	r24, Y+1	; 0x01
     7f6:	9a 81       	ldd	r25, Y+2	; 0x02
     7f8:	84 5b       	subi	r24, 0xB4	; 180
     7fa:	9f 4f       	sbci	r25, 0xFF	; 255
     7fc:	fc 01       	movw	r30, r24
     7fe:	80 81       	ld	r24, Z
     800:	91 81       	ldd	r25, Z+1	; 0x01
     802:	a2 81       	ldd	r26, Z+2	; 0x02
     804:	b3 81       	ldd	r27, Z+3	; 0x03
     806:	bc 01       	movw	r22, r24
     808:	cd 01       	movw	r24, r26
     80a:	0f 90       	pop	r0
     80c:	0f 90       	pop	r0
     80e:	df 91       	pop	r29
     810:	cf 91       	pop	r28
     812:	08 95       	ret

00000814 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>:
						
						
						


			double YNEDBodyFrame() const {return yNEDBodyFrame;}
     814:	cf 93       	push	r28
     816:	df 93       	push	r29
     818:	1f 92       	push	r1
     81a:	1f 92       	push	r1
     81c:	cd b7       	in	r28, 0x3d	; 61
     81e:	de b7       	in	r29, 0x3e	; 62
     820:	9a 83       	std	Y+2, r25	; 0x02
     822:	89 83       	std	Y+1, r24	; 0x01
     824:	89 81       	ldd	r24, Y+1	; 0x01
     826:	9a 81       	ldd	r25, Y+2	; 0x02
     828:	80 5b       	subi	r24, 0xB0	; 176
     82a:	9f 4f       	sbci	r25, 0xFF	; 255
     82c:	fc 01       	movw	r30, r24
     82e:	80 81       	ld	r24, Z
     830:	91 81       	ldd	r25, Z+1	; 0x01
     832:	a2 81       	ldd	r26, Z+2	; 0x02
     834:	b3 81       	ldd	r27, Z+3	; 0x03
     836:	bc 01       	movw	r22, r24
     838:	cd 01       	movw	r24, r26
     83a:	0f 90       	pop	r0
     83c:	0f 90       	pop	r0
     83e:	df 91       	pop	r29
     840:	cf 91       	pop	r28
     842:	08 95       	ret

00000844 <_ZNK10helicopter5model11SystemModel14LateralControlEv>:
			void ReferenceYNEDBodyFrame(double val) { referenceYNEDBodyFrame = val;}

			double LateralControlBeforeServoLimitsAdjustment() const {return lateralControlBeforeServoLimitsAdjustment;}
			void LateralControlBeforeServoLimitsAdjustment(double val) { lateralControlBeforeServoLimitsAdjustment = val;}

			double LateralControl() const {return lateralControl;}
     844:	cf 93       	push	r28
     846:	df 93       	push	r29
     848:	1f 92       	push	r1
     84a:	1f 92       	push	r1
     84c:	cd b7       	in	r28, 0x3d	; 61
     84e:	de b7       	in	r29, 0x3e	; 62
     850:	9a 83       	std	Y+2, r25	; 0x02
     852:	89 83       	std	Y+1, r24	; 0x01
     854:	89 81       	ldd	r24, Y+1	; 0x01
     856:	9a 81       	ldd	r25, Y+2	; 0x02
     858:	84 5a       	subi	r24, 0xA4	; 164
     85a:	9f 4f       	sbci	r25, 0xFF	; 255
     85c:	fc 01       	movw	r30, r24
     85e:	80 81       	ld	r24, Z
     860:	91 81       	ldd	r25, Z+1	; 0x01
     862:	a2 81       	ldd	r26, Z+2	; 0x02
     864:	b3 81       	ldd	r27, Z+3	; 0x03
     866:	bc 01       	movw	r22, r24
     868:	cd 01       	movw	r24, r26
     86a:	0f 90       	pop	r0
     86c:	0f 90       	pop	r0
     86e:	df 91       	pop	r29
     870:	cf 91       	pop	r28
     872:	08 95       	ret

00000874 <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>:
			void LateralControl(double val) { lateralControl = val;}

			double YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
     874:	cf 93       	push	r28
     876:	df 93       	push	r29
     878:	1f 92       	push	r1
     87a:	1f 92       	push	r1
     87c:	cd b7       	in	r28, 0x3d	; 61
     87e:	de b7       	in	r29, 0x3e	; 62
     880:	9a 83       	std	Y+2, r25	; 0x02
     882:	89 83       	std	Y+1, r24	; 0x01
     884:	89 81       	ldd	r24, Y+1	; 0x01
     886:	9a 81       	ldd	r25, Y+2	; 0x02
     888:	80 5a       	subi	r24, 0xA0	; 160
     88a:	9f 4f       	sbci	r25, 0xFF	; 255
     88c:	fc 01       	movw	r30, r24
     88e:	80 81       	ld	r24, Z
     890:	91 81       	ldd	r25, Z+1	; 0x01
     892:	a2 81       	ldd	r26, Z+2	; 0x02
     894:	b3 81       	ldd	r27, Z+3	; 0x03
     896:	bc 01       	movw	r22, r24
     898:	cd 01       	movw	r24, r26
     89a:	0f 90       	pop	r0
     89c:	0f 90       	pop	r0
     89e:	df 91       	pop	r29
     8a0:	cf 91       	pop	r28
     8a2:	08 95       	ret

000008a4 <_ZNK10helicopter5model11SystemModel9YIntegralEv>:
			void YLateralOuterLoopControl(double val) { yLateralOuterLoopControl = val;}

			double YProportional() const {return yProportional;}
			void YProportional(double val) { yProportional = val;}

			double YIntegral() const {return yIntegral;}
     8a4:	cf 93       	push	r28
     8a6:	df 93       	push	r29
     8a8:	1f 92       	push	r1
     8aa:	1f 92       	push	r1
     8ac:	cd b7       	in	r28, 0x3d	; 61
     8ae:	de b7       	in	r29, 0x3e	; 62
     8b0:	9a 83       	std	Y+2, r25	; 0x02
     8b2:	89 83       	std	Y+1, r24	; 0x01
     8b4:	89 81       	ldd	r24, Y+1	; 0x01
     8b6:	9a 81       	ldd	r25, Y+2	; 0x02
     8b8:	80 59       	subi	r24, 0x90	; 144
     8ba:	9f 4f       	sbci	r25, 0xFF	; 255
     8bc:	fc 01       	movw	r30, r24
     8be:	80 81       	ld	r24, Z
     8c0:	91 81       	ldd	r25, Z+1	; 0x01
     8c2:	a2 81       	ldd	r26, Z+2	; 0x02
     8c4:	b3 81       	ldd	r27, Z+3	; 0x03
     8c6:	bc 01       	movw	r22, r24
     8c8:	cd 01       	movw	r24, r26
     8ca:	0f 90       	pop	r0
     8cc:	0f 90       	pop	r0
     8ce:	df 91       	pop	r29
     8d0:	cf 91       	pop	r28
     8d2:	08 95       	ret

000008d4 <_ZNK10helicopter5model11SystemModel12AltitudeFeetEv>:
						
						
						
						

			double AltitudeFeet() const { return altitudeFeet; }
     8d4:	cf 93       	push	r28
     8d6:	df 93       	push	r29
     8d8:	1f 92       	push	r1
     8da:	1f 92       	push	r1
     8dc:	cd b7       	in	r28, 0x3d	; 61
     8de:	de b7       	in	r29, 0x3e	; 62
     8e0:	9a 83       	std	Y+2, r25	; 0x02
     8e2:	89 83       	std	Y+1, r24	; 0x01
     8e4:	89 81       	ldd	r24, Y+1	; 0x01
     8e6:	9a 81       	ldd	r25, Y+2	; 0x02
     8e8:	84 58       	subi	r24, 0x84	; 132
     8ea:	9f 4f       	sbci	r25, 0xFF	; 255
     8ec:	fc 01       	movw	r30, r24
     8ee:	80 81       	ld	r24, Z
     8f0:	91 81       	ldd	r25, Z+1	; 0x01
     8f2:	a2 81       	ldd	r26, Z+2	; 0x02
     8f4:	b3 81       	ldd	r27, Z+3	; 0x03
     8f6:	bc 01       	movw	r22, r24
     8f8:	cd 01       	movw	r24, r26
     8fa:	0f 90       	pop	r0
     8fc:	0f 90       	pop	r0
     8fe:	df 91       	pop	r29
     900:	cf 91       	pop	r28
     902:	08 95       	ret

00000904 <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>:

			double ReferenceAltitudeFeet() const {return referenceAltitudeFeet;}
			void ReferenceAltitudeFeet(double val) { referenceAltitudeFeet = val;}


			double MainRotorCollectiveControl() const {return mainRotorControl;}
     904:	cf 93       	push	r28
     906:	df 93       	push	r29
     908:	1f 92       	push	r1
     90a:	1f 92       	push	r1
     90c:	cd b7       	in	r28, 0x3d	; 61
     90e:	de b7       	in	r29, 0x3e	; 62
     910:	9a 83       	std	Y+2, r25	; 0x02
     912:	89 83       	std	Y+1, r24	; 0x01
     914:	89 81       	ldd	r24, Y+1	; 0x01
     916:	9a 81       	ldd	r25, Y+2	; 0x02
     918:	88 57       	subi	r24, 0x78	; 120
     91a:	9f 4f       	sbci	r25, 0xFF	; 255
     91c:	fc 01       	movw	r30, r24
     91e:	80 81       	ld	r24, Z
     920:	91 81       	ldd	r25, Z+1	; 0x01
     922:	a2 81       	ldd	r26, Z+2	; 0x02
     924:	b3 81       	ldd	r27, Z+3	; 0x03
     926:	bc 01       	movw	r22, r24
     928:	cd 01       	movw	r24, r26
     92a:	0f 90       	pop	r0
     92c:	0f 90       	pop	r0
     92e:	df 91       	pop	r29
     930:	cf 91       	pop	r28
     932:	08 95       	ret

00000934 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>:
			void MainRotorCollectiveControl(double val) { mainRotorControl = val;}

			double MainRotorControlBeforeServoLimitsAdjustment() const {return mainRotorControlBeforeServoLimitsAdjustment;}
			void MainRotorControlBeforeServoLimitsAdjustment(double val) { mainRotorControlBeforeServoLimitsAdjustment = val;}

			double ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
     934:	cf 93       	push	r28
     936:	df 93       	push	r29
     938:	1f 92       	push	r1
     93a:	1f 92       	push	r1
     93c:	cd b7       	in	r28, 0x3d	; 61
     93e:	de b7       	in	r29, 0x3e	; 62
     940:	9a 83       	std	Y+2, r25	; 0x02
     942:	89 83       	std	Y+1, r24	; 0x01
     944:	89 81       	ldd	r24, Y+1	; 0x01
     946:	9a 81       	ldd	r25, Y+2	; 0x02
     948:	80 57       	subi	r24, 0x70	; 112
     94a:	9f 4f       	sbci	r25, 0xFF	; 255
     94c:	fc 01       	movw	r30, r24
     94e:	80 81       	ld	r24, Z
     950:	91 81       	ldd	r25, Z+1	; 0x01
     952:	a2 81       	ldd	r26, Z+2	; 0x02
     954:	b3 81       	ldd	r27, Z+3	; 0x03
     956:	bc 01       	movw	r22, r24
     958:	cd 01       	movw	r24, r26
     95a:	0f 90       	pop	r0
     95c:	0f 90       	pop	r0
     95e:	df 91       	pop	r29
     960:	cf 91       	pop	r28
     962:	08 95       	ret

00000964 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>:
			void ZVelocityFeetPerSecond(double val) { zVelocityFeetPerSecond = val;}

			double ReferenceZVelocityFeetPerSecond() const {return referenceZVelocityFeetPerSecond;}
			void ReferenceZVelocityFeetPerSecond(double val) { referenceZVelocityFeetPerSecond = val;}

			double ZIntegral() const {return zIntegral;}
     964:	cf 93       	push	r28
     966:	df 93       	push	r29
     968:	1f 92       	push	r1
     96a:	1f 92       	push	r1
     96c:	cd b7       	in	r28, 0x3d	; 61
     96e:	de b7       	in	r29, 0x3e	; 62
     970:	9a 83       	std	Y+2, r25	; 0x02
     972:	89 83       	std	Y+1, r24	; 0x01
     974:	89 81       	ldd	r24, Y+1	; 0x01
     976:	9a 81       	ldd	r25, Y+2	; 0x02
     978:	88 56       	subi	r24, 0x68	; 104
     97a:	9f 4f       	sbci	r25, 0xFF	; 255
     97c:	fc 01       	movw	r30, r24
     97e:	80 81       	ld	r24, Z
     980:	91 81       	ldd	r25, Z+1	; 0x01
     982:	a2 81       	ldd	r26, Z+2	; 0x02
     984:	b3 81       	ldd	r27, Z+3	; 0x03
     986:	bc 01       	movw	r22, r24
     988:	cd 01       	movw	r24, r26
     98a:	0f 90       	pop	r0
     98c:	0f 90       	pop	r0
     98e:	df 91       	pop	r29
     990:	cf 91       	pop	r28
     992:	08 95       	ret

00000994 <_ZNK10helicopter5model11SystemModel11BlownFramesEv>:
			void UnrecognizedMsgTypes(long val) { unrecognizedMsgTypes = val; }
			
			long ChecksumErrors() const {return checksumErrors; }
			void ChecksumErrors(long val) { checksumErrors = val; }
			
			long  BlownFrames() const {return numOfFramesBlown;}
     994:	cf 93       	push	r28
     996:	df 93       	push	r29
     998:	1f 92       	push	r1
     99a:	1f 92       	push	r1
     99c:	cd b7       	in	r28, 0x3d	; 61
     99e:	de b7       	in	r29, 0x3e	; 62
     9a0:	9a 83       	std	Y+2, r25	; 0x02
     9a2:	89 83       	std	Y+1, r24	; 0x01
     9a4:	89 81       	ldd	r24, Y+1	; 0x01
     9a6:	9a 81       	ldd	r25, Y+2	; 0x02
     9a8:	88 54       	subi	r24, 0x48	; 72
     9aa:	9f 4f       	sbci	r25, 0xFF	; 255
     9ac:	fc 01       	movw	r30, r24
     9ae:	80 81       	ld	r24, Z
     9b0:	91 81       	ldd	r25, Z+1	; 0x01
     9b2:	a2 81       	ldd	r26, Z+2	; 0x02
     9b4:	b3 81       	ldd	r27, Z+3	; 0x03
     9b6:	bc 01       	movw	r22, r24
     9b8:	cd 01       	movw	r24, r26
     9ba:	0f 90       	pop	r0
     9bc:	0f 90       	pop	r0
     9be:	df 91       	pop	r29
     9c0:	cf 91       	pop	r28
     9c2:	08 95       	ret

000009c4 <_ZN10helicopter5model11SystemModel11BlownFramesEl>:
			void BlownFrames( long val ) { numOfFramesBlown = val;}
     9c4:	cf 93       	push	r28
     9c6:	df 93       	push	r29
     9c8:	00 d0       	rcall	.+0      	; 0x9ca <_ZN10helicopter5model11SystemModel11BlownFramesEl+0x6>
     9ca:	00 d0       	rcall	.+0      	; 0x9cc <_ZN10helicopter5model11SystemModel11BlownFramesEl+0x8>
     9cc:	cd b7       	in	r28, 0x3d	; 61
     9ce:	de b7       	in	r29, 0x3e	; 62
     9d0:	9a 83       	std	Y+2, r25	; 0x02
     9d2:	89 83       	std	Y+1, r24	; 0x01
     9d4:	4b 83       	std	Y+3, r20	; 0x03
     9d6:	5c 83       	std	Y+4, r21	; 0x04
     9d8:	6d 83       	std	Y+5, r22	; 0x05
     9da:	7e 83       	std	Y+6, r23	; 0x06
     9dc:	89 81       	ldd	r24, Y+1	; 0x01
     9de:	9a 81       	ldd	r25, Y+2	; 0x02
     9e0:	9c 01       	movw	r18, r24
     9e2:	28 54       	subi	r18, 0x48	; 72
     9e4:	3f 4f       	sbci	r19, 0xFF	; 255
     9e6:	8b 81       	ldd	r24, Y+3	; 0x03
     9e8:	9c 81       	ldd	r25, Y+4	; 0x04
     9ea:	ad 81       	ldd	r26, Y+5	; 0x05
     9ec:	be 81       	ldd	r27, Y+6	; 0x06
     9ee:	f9 01       	movw	r30, r18
     9f0:	80 83       	st	Z, r24
     9f2:	91 83       	std	Z+1, r25	; 0x01
     9f4:	a2 83       	std	Z+2, r26	; 0x02
     9f6:	b3 83       	std	Z+3, r27	; 0x03
     9f8:	26 96       	adiw	r28, 0x06	; 6
     9fa:	0f b6       	in	r0, 0x3f	; 63
     9fc:	f8 94       	cli
     9fe:	de bf       	out	0x3e, r29	; 62
     a00:	0f be       	out	0x3f, r0	; 63
     a02:	cd bf       	out	0x3d, r28	; 61
     a04:	df 91       	pop	r29
     a06:	cf 91       	pop	r28
     a08:	08 95       	ret

00000a0a <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelEPNS_7drivers11ServoDriverE>:

#include "PIDController.h"

using namespace helicopter::controller;

PIDController::PIDController(SystemModel *model, ServoDriver *servoDriver): 
     a0a:	cf 93       	push	r28
     a0c:	df 93       	push	r29
     a0e:	00 d0       	rcall	.+0      	; 0xa10 <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelEPNS_7drivers11ServoDriverE+0x6>
     a10:	00 d0       	rcall	.+0      	; 0xa12 <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelEPNS_7drivers11ServoDriverE+0x8>
     a12:	cd b7       	in	r28, 0x3d	; 61
     a14:	de b7       	in	r29, 0x3e	; 62
     a16:	9a 83       	std	Y+2, r25	; 0x02
     a18:	89 83       	std	Y+1, r24	; 0x01
     a1a:	7c 83       	std	Y+4, r23	; 0x04
     a1c:	6b 83       	std	Y+3, r22	; 0x03
     a1e:	5e 83       	std	Y+6, r21	; 0x06
     a20:	4d 83       	std	Y+5, r20	; 0x05
minMainRotorServoControlValue(0),
maxMainRotorServoControlValue(0),

intervalPeriodSecs(0),
controlMaxValue(0),
controlMinValue(0)
     a22:	89 81       	ldd	r24, Y+1	; 0x01
     a24:	9a 81       	ldd	r25, Y+2	; 0x02
     a26:	2b 81       	ldd	r18, Y+3	; 0x03
     a28:	3c 81       	ldd	r19, Y+4	; 0x04
     a2a:	fc 01       	movw	r30, r24
     a2c:	31 83       	std	Z+1, r19	; 0x01
     a2e:	20 83       	st	Z, r18
     a30:	89 81       	ldd	r24, Y+1	; 0x01
     a32:	9a 81       	ldd	r25, Y+2	; 0x02
     a34:	2d 81       	ldd	r18, Y+5	; 0x05
     a36:	3e 81       	ldd	r19, Y+6	; 0x06
     a38:	fc 01       	movw	r30, r24
     a3a:	33 83       	std	Z+3, r19	; 0x03
     a3c:	22 83       	std	Z+2, r18	; 0x02
     a3e:	89 81       	ldd	r24, Y+1	; 0x01
     a40:	9a 81       	ldd	r25, Y+2	; 0x02
     a42:	fc 01       	movw	r30, r24
     a44:	14 82       	std	Z+4, r1	; 0x04
     a46:	15 82       	std	Z+5, r1	; 0x05
     a48:	16 82       	std	Z+6, r1	; 0x06
     a4a:	17 82       	std	Z+7, r1	; 0x07
     a4c:	89 81       	ldd	r24, Y+1	; 0x01
     a4e:	9a 81       	ldd	r25, Y+2	; 0x02
     a50:	fc 01       	movw	r30, r24
     a52:	10 86       	std	Z+8, r1	; 0x08
     a54:	11 86       	std	Z+9, r1	; 0x09
     a56:	12 86       	std	Z+10, r1	; 0x0a
     a58:	13 86       	std	Z+11, r1	; 0x0b
     a5a:	89 81       	ldd	r24, Y+1	; 0x01
     a5c:	9a 81       	ldd	r25, Y+2	; 0x02
     a5e:	fc 01       	movw	r30, r24
     a60:	14 86       	std	Z+12, r1	; 0x0c
     a62:	15 86       	std	Z+13, r1	; 0x0d
     a64:	16 86       	std	Z+14, r1	; 0x0e
     a66:	17 86       	std	Z+15, r1	; 0x0f
     a68:	89 81       	ldd	r24, Y+1	; 0x01
     a6a:	9a 81       	ldd	r25, Y+2	; 0x02
     a6c:	fc 01       	movw	r30, r24
     a6e:	10 8a       	std	Z+16, r1	; 0x10
     a70:	11 8a       	std	Z+17, r1	; 0x11
     a72:	12 8a       	std	Z+18, r1	; 0x12
     a74:	13 8a       	std	Z+19, r1	; 0x13
     a76:	89 81       	ldd	r24, Y+1	; 0x01
     a78:	9a 81       	ldd	r25, Y+2	; 0x02
     a7a:	fc 01       	movw	r30, r24
     a7c:	14 8a       	std	Z+20, r1	; 0x14
     a7e:	15 8a       	std	Z+21, r1	; 0x15
     a80:	16 8a       	std	Z+22, r1	; 0x16
     a82:	17 8a       	std	Z+23, r1	; 0x17
     a84:	89 81       	ldd	r24, Y+1	; 0x01
     a86:	9a 81       	ldd	r25, Y+2	; 0x02
     a88:	fc 01       	movw	r30, r24
     a8a:	10 8e       	std	Z+24, r1	; 0x18
     a8c:	11 8e       	std	Z+25, r1	; 0x19
     a8e:	12 8e       	std	Z+26, r1	; 0x1a
     a90:	13 8e       	std	Z+27, r1	; 0x1b
     a92:	89 81       	ldd	r24, Y+1	; 0x01
     a94:	9a 81       	ldd	r25, Y+2	; 0x02
     a96:	fc 01       	movw	r30, r24
     a98:	14 8e       	std	Z+28, r1	; 0x1c
     a9a:	15 8e       	std	Z+29, r1	; 0x1d
     a9c:	16 8e       	std	Z+30, r1	; 0x1e
     a9e:	17 8e       	std	Z+31, r1	; 0x1f
     aa0:	89 81       	ldd	r24, Y+1	; 0x01
     aa2:	9a 81       	ldd	r25, Y+2	; 0x02
     aa4:	fc 01       	movw	r30, r24
     aa6:	10 a2       	std	Z+32, r1	; 0x20
     aa8:	11 a2       	std	Z+33, r1	; 0x21
     aaa:	12 a2       	std	Z+34, r1	; 0x22
     aac:	13 a2       	std	Z+35, r1	; 0x23
     aae:	89 81       	ldd	r24, Y+1	; 0x01
     ab0:	9a 81       	ldd	r25, Y+2	; 0x02
     ab2:	fc 01       	movw	r30, r24
     ab4:	14 a2       	std	Z+36, r1	; 0x24
     ab6:	15 a2       	std	Z+37, r1	; 0x25
     ab8:	16 a2       	std	Z+38, r1	; 0x26
     aba:	17 a2       	std	Z+39, r1	; 0x27
     abc:	89 81       	ldd	r24, Y+1	; 0x01
     abe:	9a 81       	ldd	r25, Y+2	; 0x02
     ac0:	fc 01       	movw	r30, r24
     ac2:	10 a6       	std	Z+40, r1	; 0x28
     ac4:	11 a6       	std	Z+41, r1	; 0x29
     ac6:	12 a6       	std	Z+42, r1	; 0x2a
     ac8:	13 a6       	std	Z+43, r1	; 0x2b
     aca:	89 81       	ldd	r24, Y+1	; 0x01
     acc:	9a 81       	ldd	r25, Y+2	; 0x02
     ace:	fc 01       	movw	r30, r24
     ad0:	14 a6       	std	Z+44, r1	; 0x2c
     ad2:	15 a6       	std	Z+45, r1	; 0x2d
     ad4:	16 a6       	std	Z+46, r1	; 0x2e
     ad6:	17 a6       	std	Z+47, r1	; 0x2f
     ad8:	89 81       	ldd	r24, Y+1	; 0x01
     ada:	9a 81       	ldd	r25, Y+2	; 0x02
     adc:	fc 01       	movw	r30, r24
     ade:	10 aa       	std	Z+48, r1	; 0x30
     ae0:	11 aa       	std	Z+49, r1	; 0x31
     ae2:	12 aa       	std	Z+50, r1	; 0x32
     ae4:	13 aa       	std	Z+51, r1	; 0x33
     ae6:	89 81       	ldd	r24, Y+1	; 0x01
     ae8:	9a 81       	ldd	r25, Y+2	; 0x02
     aea:	fc 01       	movw	r30, r24
     aec:	14 aa       	std	Z+52, r1	; 0x34
     aee:	15 aa       	std	Z+53, r1	; 0x35
     af0:	16 aa       	std	Z+54, r1	; 0x36
     af2:	17 aa       	std	Z+55, r1	; 0x37
     af4:	89 81       	ldd	r24, Y+1	; 0x01
     af6:	9a 81       	ldd	r25, Y+2	; 0x02
     af8:	fc 01       	movw	r30, r24
     afa:	10 ae       	std	Z+56, r1	; 0x38
     afc:	11 ae       	std	Z+57, r1	; 0x39
     afe:	12 ae       	std	Z+58, r1	; 0x3a
     b00:	13 ae       	std	Z+59, r1	; 0x3b
     b02:	89 81       	ldd	r24, Y+1	; 0x01
     b04:	9a 81       	ldd	r25, Y+2	; 0x02
     b06:	fc 01       	movw	r30, r24
     b08:	14 ae       	std	Z+60, r1	; 0x3c
     b0a:	15 ae       	std	Z+61, r1	; 0x3d
     b0c:	16 ae       	std	Z+62, r1	; 0x3e
     b0e:	17 ae       	std	Z+63, r1	; 0x3f
     b10:	89 81       	ldd	r24, Y+1	; 0x01
     b12:	9a 81       	ldd	r25, Y+2	; 0x02
     b14:	80 5c       	subi	r24, 0xC0	; 192
     b16:	9f 4f       	sbci	r25, 0xFF	; 255
     b18:	fc 01       	movw	r30, r24
     b1a:	10 82       	st	Z, r1
     b1c:	11 82       	std	Z+1, r1	; 0x01
     b1e:	12 82       	std	Z+2, r1	; 0x02
     b20:	13 82       	std	Z+3, r1	; 0x03
     b22:	89 81       	ldd	r24, Y+1	; 0x01
     b24:	9a 81       	ldd	r25, Y+2	; 0x02
     b26:	8c 5b       	subi	r24, 0xBC	; 188
     b28:	9f 4f       	sbci	r25, 0xFF	; 255
     b2a:	fc 01       	movw	r30, r24
     b2c:	10 82       	st	Z, r1
     b2e:	11 82       	std	Z+1, r1	; 0x01
     b30:	12 82       	std	Z+2, r1	; 0x02
     b32:	13 82       	std	Z+3, r1	; 0x03
     b34:	89 81       	ldd	r24, Y+1	; 0x01
     b36:	9a 81       	ldd	r25, Y+2	; 0x02
     b38:	88 5b       	subi	r24, 0xB8	; 184
     b3a:	9f 4f       	sbci	r25, 0xFF	; 255
     b3c:	fc 01       	movw	r30, r24
     b3e:	10 82       	st	Z, r1
     b40:	11 82       	std	Z+1, r1	; 0x01
     b42:	12 82       	std	Z+2, r1	; 0x02
     b44:	13 82       	std	Z+3, r1	; 0x03
     b46:	89 81       	ldd	r24, Y+1	; 0x01
     b48:	9a 81       	ldd	r25, Y+2	; 0x02
     b4a:	84 5b       	subi	r24, 0xB4	; 180
     b4c:	9f 4f       	sbci	r25, 0xFF	; 255
     b4e:	fc 01       	movw	r30, r24
     b50:	10 82       	st	Z, r1
     b52:	11 82       	std	Z+1, r1	; 0x01
     b54:	12 82       	std	Z+2, r1	; 0x02
     b56:	13 82       	std	Z+3, r1	; 0x03
     b58:	89 81       	ldd	r24, Y+1	; 0x01
     b5a:	9a 81       	ldd	r25, Y+2	; 0x02
     b5c:	80 5b       	subi	r24, 0xB0	; 176
     b5e:	9f 4f       	sbci	r25, 0xFF	; 255
     b60:	fc 01       	movw	r30, r24
     b62:	10 82       	st	Z, r1
     b64:	11 82       	std	Z+1, r1	; 0x01
     b66:	12 82       	std	Z+2, r1	; 0x02
     b68:	13 82       	std	Z+3, r1	; 0x03
     b6a:	89 81       	ldd	r24, Y+1	; 0x01
     b6c:	9a 81       	ldd	r25, Y+2	; 0x02
     b6e:	8c 5a       	subi	r24, 0xAC	; 172
     b70:	9f 4f       	sbci	r25, 0xFF	; 255
     b72:	fc 01       	movw	r30, r24
     b74:	10 82       	st	Z, r1
     b76:	11 82       	std	Z+1, r1	; 0x01
     b78:	12 82       	std	Z+2, r1	; 0x02
     b7a:	13 82       	std	Z+3, r1	; 0x03
     b7c:	89 81       	ldd	r24, Y+1	; 0x01
     b7e:	9a 81       	ldd	r25, Y+2	; 0x02
     b80:	88 5a       	subi	r24, 0xA8	; 168
     b82:	9f 4f       	sbci	r25, 0xFF	; 255
     b84:	fc 01       	movw	r30, r24
     b86:	10 82       	st	Z, r1
     b88:	11 82       	std	Z+1, r1	; 0x01
     b8a:	12 82       	std	Z+2, r1	; 0x02
     b8c:	13 82       	std	Z+3, r1	; 0x03
     b8e:	89 81       	ldd	r24, Y+1	; 0x01
     b90:	9a 81       	ldd	r25, Y+2	; 0x02
     b92:	84 5a       	subi	r24, 0xA4	; 164
     b94:	9f 4f       	sbci	r25, 0xFF	; 255
     b96:	fc 01       	movw	r30, r24
     b98:	10 82       	st	Z, r1
     b9a:	11 82       	std	Z+1, r1	; 0x01
     b9c:	12 82       	std	Z+2, r1	; 0x02
     b9e:	13 82       	std	Z+3, r1	; 0x03
     ba0:	89 81       	ldd	r24, Y+1	; 0x01
     ba2:	9a 81       	ldd	r25, Y+2	; 0x02
     ba4:	80 5a       	subi	r24, 0xA0	; 160
     ba6:	9f 4f       	sbci	r25, 0xFF	; 255
     ba8:	fc 01       	movw	r30, r24
     baa:	10 82       	st	Z, r1
     bac:	11 82       	std	Z+1, r1	; 0x01
     bae:	12 82       	std	Z+2, r1	; 0x02
     bb0:	13 82       	std	Z+3, r1	; 0x03
     bb2:	89 81       	ldd	r24, Y+1	; 0x01
     bb4:	9a 81       	ldd	r25, Y+2	; 0x02
     bb6:	8c 59       	subi	r24, 0x9C	; 156
     bb8:	9f 4f       	sbci	r25, 0xFF	; 255
     bba:	fc 01       	movw	r30, r24
     bbc:	10 82       	st	Z, r1
     bbe:	11 82       	std	Z+1, r1	; 0x01
     bc0:	12 82       	std	Z+2, r1	; 0x02
     bc2:	13 82       	std	Z+3, r1	; 0x03
     bc4:	89 81       	ldd	r24, Y+1	; 0x01
     bc6:	9a 81       	ldd	r25, Y+2	; 0x02
     bc8:	88 59       	subi	r24, 0x98	; 152
     bca:	9f 4f       	sbci	r25, 0xFF	; 255
     bcc:	fc 01       	movw	r30, r24
     bce:	10 82       	st	Z, r1
     bd0:	11 82       	std	Z+1, r1	; 0x01
     bd2:	12 82       	std	Z+2, r1	; 0x02
     bd4:	13 82       	std	Z+3, r1	; 0x03
     bd6:	89 81       	ldd	r24, Y+1	; 0x01
     bd8:	9a 81       	ldd	r25, Y+2	; 0x02
     bda:	84 59       	subi	r24, 0x94	; 148
     bdc:	9f 4f       	sbci	r25, 0xFF	; 255
     bde:	fc 01       	movw	r30, r24
     be0:	10 82       	st	Z, r1
     be2:	11 82       	std	Z+1, r1	; 0x01
     be4:	12 82       	std	Z+2, r1	; 0x02
     be6:	13 82       	std	Z+3, r1	; 0x03
     be8:	89 81       	ldd	r24, Y+1	; 0x01
     bea:	9a 81       	ldd	r25, Y+2	; 0x02
     bec:	80 59       	subi	r24, 0x90	; 144
     bee:	9f 4f       	sbci	r25, 0xFF	; 255
     bf0:	fc 01       	movw	r30, r24
     bf2:	10 82       	st	Z, r1
     bf4:	11 82       	std	Z+1, r1	; 0x01
     bf6:	12 82       	std	Z+2, r1	; 0x02
     bf8:	13 82       	std	Z+3, r1	; 0x03
     bfa:	89 81       	ldd	r24, Y+1	; 0x01
     bfc:	9a 81       	ldd	r25, Y+2	; 0x02
     bfe:	8c 58       	subi	r24, 0x8C	; 140
     c00:	9f 4f       	sbci	r25, 0xFF	; 255
     c02:	fc 01       	movw	r30, r24
     c04:	10 82       	st	Z, r1
     c06:	11 82       	std	Z+1, r1	; 0x01
     c08:	12 82       	std	Z+2, r1	; 0x02
     c0a:	13 82       	std	Z+3, r1	; 0x03
{
	
}
     c0c:	26 96       	adiw	r28, 0x06	; 6
     c0e:	0f b6       	in	r0, 0x3f	; 63
     c10:	f8 94       	cli
     c12:	de bf       	out	0x3e, r29	; 62
     c14:	0f be       	out	0x3f, r0	; 63
     c16:	cd bf       	out	0x3d, r28	; 61
     c18:	df 91       	pop	r29
     c1a:	cf 91       	pop	r28
     c1c:	08 95       	ret

00000c1e <_ZN10helicopter10controller13PIDController21calculateProportionalEdd>:
{
	delete model;
}

double PIDController::calculateProportional(double currentValue, double referenceValue)
{
     c1e:	0f 93       	push	r16
     c20:	1f 93       	push	r17
     c22:	cf 93       	push	r28
     c24:	df 93       	push	r29
     c26:	cd b7       	in	r28, 0x3d	; 61
     c28:	de b7       	in	r29, 0x3e	; 62
     c2a:	2a 97       	sbiw	r28, 0x0a	; 10
     c2c:	0f b6       	in	r0, 0x3f	; 63
     c2e:	f8 94       	cli
     c30:	de bf       	out	0x3e, r29	; 62
     c32:	0f be       	out	0x3f, r0	; 63
     c34:	cd bf       	out	0x3d, r28	; 61
     c36:	9a 83       	std	Y+2, r25	; 0x02
     c38:	89 83       	std	Y+1, r24	; 0x01
     c3a:	4b 83       	std	Y+3, r20	; 0x03
     c3c:	5c 83       	std	Y+4, r21	; 0x04
     c3e:	6d 83       	std	Y+5, r22	; 0x05
     c40:	7e 83       	std	Y+6, r23	; 0x06
     c42:	0f 83       	std	Y+7, r16	; 0x07
     c44:	18 87       	std	Y+8, r17	; 0x08
     c46:	29 87       	std	Y+9, r18	; 0x09
     c48:	3a 87       	std	Y+10, r19	; 0x0a
	return currentValue - referenceValue;
     c4a:	2f 81       	ldd	r18, Y+7	; 0x07
     c4c:	38 85       	ldd	r19, Y+8	; 0x08
     c4e:	49 85       	ldd	r20, Y+9	; 0x09
     c50:	5a 85       	ldd	r21, Y+10	; 0x0a
     c52:	6b 81       	ldd	r22, Y+3	; 0x03
     c54:	7c 81       	ldd	r23, Y+4	; 0x04
     c56:	8d 81       	ldd	r24, Y+5	; 0x05
     c58:	9e 81       	ldd	r25, Y+6	; 0x06
     c5a:	0e 94 13 3f 	call	0x7e26	; 0x7e26 <__subsf3>
     c5e:	dc 01       	movw	r26, r24
     c60:	cb 01       	movw	r24, r22
}
     c62:	bc 01       	movw	r22, r24
     c64:	cd 01       	movw	r24, r26
     c66:	2a 96       	adiw	r28, 0x0a	; 10
     c68:	0f b6       	in	r0, 0x3f	; 63
     c6a:	f8 94       	cli
     c6c:	de bf       	out	0x3e, r29	; 62
     c6e:	0f be       	out	0x3f, r0	; 63
     c70:	cd bf       	out	0x3d, r28	; 61
     c72:	df 91       	pop	r29
     c74:	cf 91       	pop	r28
     c76:	1f 91       	pop	r17
     c78:	0f 91       	pop	r16
     c7a:	08 95       	ret

00000c7c <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEddd>:


//TODO refactor to make this common for all PID calculations. I'll want to include the specific
//variables max values as parameters so I can 'generalize' it.
double PIDController::calculateIntegralAntiWindup(double oldControlPreServoAdj, double oldControl, double antiWindupGain)
{
     c7c:	cf 92       	push	r12
     c7e:	df 92       	push	r13
     c80:	ef 92       	push	r14
     c82:	ff 92       	push	r15
     c84:	0f 93       	push	r16
     c86:	1f 93       	push	r17
     c88:	cf 93       	push	r28
     c8a:	df 93       	push	r29
     c8c:	cd b7       	in	r28, 0x3d	; 61
     c8e:	de b7       	in	r29, 0x3e	; 62
     c90:	62 97       	sbiw	r28, 0x12	; 18
     c92:	0f b6       	in	r0, 0x3f	; 63
     c94:	f8 94       	cli
     c96:	de bf       	out	0x3e, r29	; 62
     c98:	0f be       	out	0x3f, r0	; 63
     c9a:	cd bf       	out	0x3d, r28	; 61
     c9c:	9e 83       	std	Y+6, r25	; 0x06
     c9e:	8d 83       	std	Y+5, r24	; 0x05
     ca0:	4f 83       	std	Y+7, r20	; 0x07
     ca2:	58 87       	std	Y+8, r21	; 0x08
     ca4:	69 87       	std	Y+9, r22	; 0x09
     ca6:	7a 87       	std	Y+10, r23	; 0x0a
     ca8:	0b 87       	std	Y+11, r16	; 0x0b
     caa:	1c 87       	std	Y+12, r17	; 0x0c
     cac:	2d 87       	std	Y+13, r18	; 0x0d
     cae:	3e 87       	std	Y+14, r19	; 0x0e
     cb0:	cf 86       	std	Y+15, r12	; 0x0f
     cb2:	d8 8a       	std	Y+16, r13	; 0x10
     cb4:	e9 8a       	std	Y+17, r14	; 0x11
     cb6:	fa 8a       	std	Y+18, r15	; 0x12
	double antiWindup = 0;
     cb8:	19 82       	std	Y+1, r1	; 0x01
     cba:	1a 82       	std	Y+2, r1	; 0x02
     cbc:	1b 82       	std	Y+3, r1	; 0x03
     cbe:	1c 82       	std	Y+4, r1	; 0x04
	
	antiWindup = antiWindupGain * (oldControlPreServoAdj - oldControl);
     cc0:	2b 85       	ldd	r18, Y+11	; 0x0b
     cc2:	3c 85       	ldd	r19, Y+12	; 0x0c
     cc4:	4d 85       	ldd	r20, Y+13	; 0x0d
     cc6:	5e 85       	ldd	r21, Y+14	; 0x0e
     cc8:	6f 81       	ldd	r22, Y+7	; 0x07
     cca:	78 85       	ldd	r23, Y+8	; 0x08
     ccc:	89 85       	ldd	r24, Y+9	; 0x09
     cce:	9a 85       	ldd	r25, Y+10	; 0x0a
     cd0:	0e 94 13 3f 	call	0x7e26	; 0x7e26 <__subsf3>
     cd4:	dc 01       	movw	r26, r24
     cd6:	cb 01       	movw	r24, r22
     cd8:	2f 85       	ldd	r18, Y+15	; 0x0f
     cda:	38 89       	ldd	r19, Y+16	; 0x10
     cdc:	49 89       	ldd	r20, Y+17	; 0x11
     cde:	5a 89       	ldd	r21, Y+18	; 0x12
     ce0:	bc 01       	movw	r22, r24
     ce2:	cd 01       	movw	r24, r26
     ce4:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
     ce8:	dc 01       	movw	r26, r24
     cea:	cb 01       	movw	r24, r22
     cec:	89 83       	std	Y+1, r24	; 0x01
     cee:	9a 83       	std	Y+2, r25	; 0x02
     cf0:	ab 83       	std	Y+3, r26	; 0x03
     cf2:	bc 83       	std	Y+4, r27	; 0x04
	{
		antiWindup = yawAntiWindupGain * (oldYawControlValue - minYawServoControlValue);
	}
	*/
	
	return antiWindup;
     cf4:	89 81       	ldd	r24, Y+1	; 0x01
     cf6:	9a 81       	ldd	r25, Y+2	; 0x02
     cf8:	ab 81       	ldd	r26, Y+3	; 0x03
     cfa:	bc 81       	ldd	r27, Y+4	; 0x04
}
     cfc:	bc 01       	movw	r22, r24
     cfe:	cd 01       	movw	r24, r26
     d00:	62 96       	adiw	r28, 0x12	; 18
     d02:	0f b6       	in	r0, 0x3f	; 63
     d04:	f8 94       	cli
     d06:	de bf       	out	0x3e, r29	; 62
     d08:	0f be       	out	0x3f, r0	; 63
     d0a:	cd bf       	out	0x3d, r28	; 61
     d0c:	df 91       	pop	r29
     d0e:	cf 91       	pop	r28
     d10:	1f 91       	pop	r17
     d12:	0f 91       	pop	r16
     d14:	ff 90       	pop	r15
     d16:	ef 90       	pop	r14
     d18:	df 90       	pop	r13
     d1a:	cf 90       	pop	r12
     d1c:	08 95       	ret

00000d1e <_ZN10helicopter10controller13PIDController17calculateIntegralEdddd>:

/**
 * Anti-windup algorithm provided by Control Systems Design by Karl Johan Astrom 2002. chapter 6
 */
double PIDController::calculateIntegral(double proportional, double oldIntegral, double antiWindup, double integralGain)
{
     d1e:	8f 92       	push	r8
     d20:	9f 92       	push	r9
     d22:	af 92       	push	r10
     d24:	bf 92       	push	r11
     d26:	cf 92       	push	r12
     d28:	df 92       	push	r13
     d2a:	ef 92       	push	r14
     d2c:	ff 92       	push	r15
     d2e:	0f 93       	push	r16
     d30:	1f 93       	push	r17
     d32:	cf 93       	push	r28
     d34:	df 93       	push	r29
     d36:	cd b7       	in	r28, 0x3d	; 61
     d38:	de b7       	in	r29, 0x3e	; 62
     d3a:	66 97       	sbiw	r28, 0x16	; 22
     d3c:	0f b6       	in	r0, 0x3f	; 63
     d3e:	f8 94       	cli
     d40:	de bf       	out	0x3e, r29	; 62
     d42:	0f be       	out	0x3f, r0	; 63
     d44:	cd bf       	out	0x3d, r28	; 61
     d46:	9e 83       	std	Y+6, r25	; 0x06
     d48:	8d 83       	std	Y+5, r24	; 0x05
     d4a:	4f 83       	std	Y+7, r20	; 0x07
     d4c:	58 87       	std	Y+8, r21	; 0x08
     d4e:	69 87       	std	Y+9, r22	; 0x09
     d50:	7a 87       	std	Y+10, r23	; 0x0a
     d52:	0b 87       	std	Y+11, r16	; 0x0b
     d54:	1c 87       	std	Y+12, r17	; 0x0c
     d56:	2d 87       	std	Y+13, r18	; 0x0d
     d58:	3e 87       	std	Y+14, r19	; 0x0e
     d5a:	cf 86       	std	Y+15, r12	; 0x0f
     d5c:	d8 8a       	std	Y+16, r13	; 0x10
     d5e:	e9 8a       	std	Y+17, r14	; 0x11
     d60:	fa 8a       	std	Y+18, r15	; 0x12
     d62:	8b 8a       	std	Y+19, r8	; 0x13
     d64:	9c 8a       	std	Y+20, r9	; 0x14
     d66:	ad 8a       	std	Y+21, r10	; 0x15
     d68:	be 8a       	std	Y+22, r11	; 0x16
	
	double workingIntegral = 0;
     d6a:	19 82       	std	Y+1, r1	; 0x01
     d6c:	1a 82       	std	Y+2, r1	; 0x02
     d6e:	1b 82       	std	Y+3, r1	; 0x03
     d70:	1c 82       	std	Y+4, r1	; 0x04
	
	workingIntegral = proportional * intervalPeriodSecs * integralGain;
     d72:	8d 81       	ldd	r24, Y+5	; 0x05
     d74:	9e 81       	ldd	r25, Y+6	; 0x06
     d76:	84 59       	subi	r24, 0x94	; 148
     d78:	9f 4f       	sbci	r25, 0xFF	; 255
     d7a:	fc 01       	movw	r30, r24
     d7c:	80 81       	ld	r24, Z
     d7e:	91 81       	ldd	r25, Z+1	; 0x01
     d80:	a2 81       	ldd	r26, Z+2	; 0x02
     d82:	b3 81       	ldd	r27, Z+3	; 0x03
     d84:	2f 81       	ldd	r18, Y+7	; 0x07
     d86:	38 85       	ldd	r19, Y+8	; 0x08
     d88:	49 85       	ldd	r20, Y+9	; 0x09
     d8a:	5a 85       	ldd	r21, Y+10	; 0x0a
     d8c:	bc 01       	movw	r22, r24
     d8e:	cd 01       	movw	r24, r26
     d90:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
     d94:	dc 01       	movw	r26, r24
     d96:	cb 01       	movw	r24, r22
     d98:	2b 89       	ldd	r18, Y+19	; 0x13
     d9a:	3c 89       	ldd	r19, Y+20	; 0x14
     d9c:	4d 89       	ldd	r20, Y+21	; 0x15
     d9e:	5e 89       	ldd	r21, Y+22	; 0x16
     da0:	bc 01       	movw	r22, r24
     da2:	cd 01       	movw	r24, r26
     da4:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
     da8:	dc 01       	movw	r26, r24
     daa:	cb 01       	movw	r24, r22
     dac:	89 83       	std	Y+1, r24	; 0x01
     dae:	9a 83       	std	Y+2, r25	; 0x02
     db0:	ab 83       	std	Y+3, r26	; 0x03
     db2:	bc 83       	std	Y+4, r27	; 0x04
	//Integrate (i.e. sum this working value with the current integral value).
	//Note: i'm going out of order from what is defined in the book referenced above.
	//I am summing before subtracting the antiwindup value to make it easier.
	//I also find it odd that the integral 'gain' is being applied before 
	//accounting for the anti-windup. But this could be to compensate for large errors.
	workingIntegral = workingIntegral + oldIntegral;
     db4:	2b 85       	ldd	r18, Y+11	; 0x0b
     db6:	3c 85       	ldd	r19, Y+12	; 0x0c
     db8:	4d 85       	ldd	r20, Y+13	; 0x0d
     dba:	5e 85       	ldd	r21, Y+14	; 0x0e
     dbc:	69 81       	ldd	r22, Y+1	; 0x01
     dbe:	7a 81       	ldd	r23, Y+2	; 0x02
     dc0:	8b 81       	ldd	r24, Y+3	; 0x03
     dc2:	9c 81       	ldd	r25, Y+4	; 0x04
     dc4:	0e 94 14 3f 	call	0x7e28	; 0x7e28 <__addsf3>
     dc8:	dc 01       	movw	r26, r24
     dca:	cb 01       	movw	r24, r22
     dcc:	89 83       	std	Y+1, r24	; 0x01
     dce:	9a 83       	std	Y+2, r25	; 0x02
     dd0:	ab 83       	std	Y+3, r26	; 0x03
     dd2:	bc 83       	std	Y+4, r27	; 0x04
	
	if (antiWindup != 0)
     dd4:	20 e0       	ldi	r18, 0x00	; 0
     dd6:	30 e0       	ldi	r19, 0x00	; 0
     dd8:	a9 01       	movw	r20, r18
     dda:	6f 85       	ldd	r22, Y+15	; 0x0f
     ddc:	78 89       	ldd	r23, Y+16	; 0x10
     dde:	89 89       	ldd	r24, Y+17	; 0x11
     de0:	9a 89       	ldd	r25, Y+18	; 0x12
     de2:	0e 94 78 3f 	call	0x7ef0	; 0x7ef0 <__cmpsf2>
     de6:	88 23       	and	r24, r24
     de8:	09 f4       	brne	.+2      	; 0xdec <_ZN10helicopter10controller13PIDController17calculateIntegralEdddd+0xce>
     dea:	52 c0       	rjmp	.+164    	; 0xe90 <_ZN10helicopter10controller13PIDController17calculateIntegralEdddd+0x172>
	{
		//We want to know if the integral is greater than 0 or less than 0 so that when we subtract
		//the antiwindup value, we get closer to 0, and don't exceed 0.
		if (workingIntegral > 0 && antiWindup > workingIntegral)
     dec:	20 e0       	ldi	r18, 0x00	; 0
     dee:	30 e0       	ldi	r19, 0x00	; 0
     df0:	a9 01       	movw	r20, r18
     df2:	69 81       	ldd	r22, Y+1	; 0x01
     df4:	7a 81       	ldd	r23, Y+2	; 0x02
     df6:	8b 81       	ldd	r24, Y+3	; 0x03
     df8:	9c 81       	ldd	r25, Y+4	; 0x04
     dfa:	0e 94 56 41 	call	0x82ac	; 0x82ac <__gesf2>
     dfe:	18 16       	cp	r1, r24
     e00:	8c f4       	brge	.+34     	; 0xe24 <_ZN10helicopter10controller13PIDController17calculateIntegralEdddd+0x106>
     e02:	29 81       	ldd	r18, Y+1	; 0x01
     e04:	3a 81       	ldd	r19, Y+2	; 0x02
     e06:	4b 81       	ldd	r20, Y+3	; 0x03
     e08:	5c 81       	ldd	r21, Y+4	; 0x04
     e0a:	6f 85       	ldd	r22, Y+15	; 0x0f
     e0c:	78 89       	ldd	r23, Y+16	; 0x10
     e0e:	89 89       	ldd	r24, Y+17	; 0x11
     e10:	9a 89       	ldd	r25, Y+18	; 0x12
     e12:	0e 94 56 41 	call	0x82ac	; 0x82ac <__gesf2>
     e16:	18 16       	cp	r1, r24
     e18:	2c f4       	brge	.+10     	; 0xe24 <_ZN10helicopter10controller13PIDController17calculateIntegralEdddd+0x106>
		{
			workingIntegral = 0;
     e1a:	19 82       	std	Y+1, r1	; 0x01
     e1c:	1a 82       	std	Y+2, r1	; 0x02
     e1e:	1b 82       	std	Y+3, r1	; 0x03
     e20:	1c 82       	std	Y+4, r1	; 0x04
     e22:	1b c0       	rjmp	.+54     	; 0xe5a <_ZN10helicopter10controller13PIDController17calculateIntegralEdddd+0x13c>
		}else if (workingIntegral < 0 && antiWindup < workingIntegral)
     e24:	20 e0       	ldi	r18, 0x00	; 0
     e26:	30 e0       	ldi	r19, 0x00	; 0
     e28:	a9 01       	movw	r20, r18
     e2a:	69 81       	ldd	r22, Y+1	; 0x01
     e2c:	7a 81       	ldd	r23, Y+2	; 0x02
     e2e:	8b 81       	ldd	r24, Y+3	; 0x03
     e30:	9c 81       	ldd	r25, Y+4	; 0x04
     e32:	0e 94 78 3f 	call	0x7ef0	; 0x7ef0 <__cmpsf2>
     e36:	88 23       	and	r24, r24
     e38:	84 f4       	brge	.+32     	; 0xe5a <_ZN10helicopter10controller13PIDController17calculateIntegralEdddd+0x13c>
     e3a:	29 81       	ldd	r18, Y+1	; 0x01
     e3c:	3a 81       	ldd	r19, Y+2	; 0x02
     e3e:	4b 81       	ldd	r20, Y+3	; 0x03
     e40:	5c 81       	ldd	r21, Y+4	; 0x04
     e42:	6f 85       	ldd	r22, Y+15	; 0x0f
     e44:	78 89       	ldd	r23, Y+16	; 0x10
     e46:	89 89       	ldd	r24, Y+17	; 0x11
     e48:	9a 89       	ldd	r25, Y+18	; 0x12
     e4a:	0e 94 78 3f 	call	0x7ef0	; 0x7ef0 <__cmpsf2>
     e4e:	88 23       	and	r24, r24
     e50:	24 f4       	brge	.+8      	; 0xe5a <_ZN10helicopter10controller13PIDController17calculateIntegralEdddd+0x13c>
		{
			workingIntegral = 0;
     e52:	19 82       	std	Y+1, r1	; 0x01
     e54:	1a 82       	std	Y+2, r1	; 0x02
     e56:	1b 82       	std	Y+3, r1	; 0x03
     e58:	1c 82       	std	Y+4, r1	; 0x04
		}
		
		if (workingIntegral != 0)
     e5a:	20 e0       	ldi	r18, 0x00	; 0
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	a9 01       	movw	r20, r18
     e60:	69 81       	ldd	r22, Y+1	; 0x01
     e62:	7a 81       	ldd	r23, Y+2	; 0x02
     e64:	8b 81       	ldd	r24, Y+3	; 0x03
     e66:	9c 81       	ldd	r25, Y+4	; 0x04
     e68:	0e 94 78 3f 	call	0x7ef0	; 0x7ef0 <__cmpsf2>
     e6c:	88 23       	and	r24, r24
     e6e:	81 f0       	breq	.+32     	; 0xe90 <_ZN10helicopter10controller13PIDController17calculateIntegralEdddd+0x172>
		{
				//Subtract the anti-windup value from the working integral. 
			workingIntegral = workingIntegral - antiWindup;
     e70:	2f 85       	ldd	r18, Y+15	; 0x0f
     e72:	38 89       	ldd	r19, Y+16	; 0x10
     e74:	49 89       	ldd	r20, Y+17	; 0x11
     e76:	5a 89       	ldd	r21, Y+18	; 0x12
     e78:	69 81       	ldd	r22, Y+1	; 0x01
     e7a:	7a 81       	ldd	r23, Y+2	; 0x02
     e7c:	8b 81       	ldd	r24, Y+3	; 0x03
     e7e:	9c 81       	ldd	r25, Y+4	; 0x04
     e80:	0e 94 13 3f 	call	0x7e26	; 0x7e26 <__subsf3>
     e84:	dc 01       	movw	r26, r24
     e86:	cb 01       	movw	r24, r22
     e88:	89 83       	std	Y+1, r24	; 0x01
     e8a:	9a 83       	std	Y+2, r25	; 0x02
     e8c:	ab 83       	std	Y+3, r26	; 0x03
     e8e:	bc 83       	std	Y+4, r27	; 0x04
		}
	}
	
	return workingIntegral;
     e90:	89 81       	ldd	r24, Y+1	; 0x01
     e92:	9a 81       	ldd	r25, Y+2	; 0x02
     e94:	ab 81       	ldd	r26, Y+3	; 0x03
     e96:	bc 81       	ldd	r27, Y+4	; 0x04
}
     e98:	bc 01       	movw	r22, r24
     e9a:	cd 01       	movw	r24, r26
     e9c:	66 96       	adiw	r28, 0x16	; 22
     e9e:	0f b6       	in	r0, 0x3f	; 63
     ea0:	f8 94       	cli
     ea2:	de bf       	out	0x3e, r29	; 62
     ea4:	0f be       	out	0x3f, r0	; 63
     ea6:	cd bf       	out	0x3d, r28	; 61
     ea8:	df 91       	pop	r29
     eaa:	cf 91       	pop	r28
     eac:	1f 91       	pop	r17
     eae:	0f 91       	pop	r16
     eb0:	ff 90       	pop	r15
     eb2:	ef 90       	pop	r14
     eb4:	df 90       	pop	r13
     eb6:	cf 90       	pop	r12
     eb8:	bf 90       	pop	r11
     eba:	af 90       	pop	r10
     ebc:	9f 90       	pop	r9
     ebe:	8f 90       	pop	r8
     ec0:	08 95       	ret

00000ec2 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEdd>:
	//return integral;
//}


double PIDController::calculateVelocityError(double currentVelocity, double referenceVelocity)
{
     ec2:	0f 93       	push	r16
     ec4:	1f 93       	push	r17
     ec6:	cf 93       	push	r28
     ec8:	df 93       	push	r29
     eca:	cd b7       	in	r28, 0x3d	; 61
     ecc:	de b7       	in	r29, 0x3e	; 62
     ece:	2a 97       	sbiw	r28, 0x0a	; 10
     ed0:	0f b6       	in	r0, 0x3f	; 63
     ed2:	f8 94       	cli
     ed4:	de bf       	out	0x3e, r29	; 62
     ed6:	0f be       	out	0x3f, r0	; 63
     ed8:	cd bf       	out	0x3d, r28	; 61
     eda:	9a 83       	std	Y+2, r25	; 0x02
     edc:	89 83       	std	Y+1, r24	; 0x01
     ede:	4b 83       	std	Y+3, r20	; 0x03
     ee0:	5c 83       	std	Y+4, r21	; 0x04
     ee2:	6d 83       	std	Y+5, r22	; 0x05
     ee4:	7e 83       	std	Y+6, r23	; 0x06
     ee6:	0f 83       	std	Y+7, r16	; 0x07
     ee8:	18 87       	std	Y+8, r17	; 0x08
     eea:	29 87       	std	Y+9, r18	; 0x09
     eec:	3a 87       	std	Y+10, r19	; 0x0a
	return currentVelocity - referenceVelocity;
     eee:	2f 81       	ldd	r18, Y+7	; 0x07
     ef0:	38 85       	ldd	r19, Y+8	; 0x08
     ef2:	49 85       	ldd	r20, Y+9	; 0x09
     ef4:	5a 85       	ldd	r21, Y+10	; 0x0a
     ef6:	6b 81       	ldd	r22, Y+3	; 0x03
     ef8:	7c 81       	ldd	r23, Y+4	; 0x04
     efa:	8d 81       	ldd	r24, Y+5	; 0x05
     efc:	9e 81       	ldd	r25, Y+6	; 0x06
     efe:	0e 94 13 3f 	call	0x7e26	; 0x7e26 <__subsf3>
     f02:	dc 01       	movw	r26, r24
     f04:	cb 01       	movw	r24, r22
}
     f06:	bc 01       	movw	r22, r24
     f08:	cd 01       	movw	r24, r26
     f0a:	2a 96       	adiw	r28, 0x0a	; 10
     f0c:	0f b6       	in	r0, 0x3f	; 63
     f0e:	f8 94       	cli
     f10:	de bf       	out	0x3e, r29	; 62
     f12:	0f be       	out	0x3f, r0	; 63
     f14:	cd bf       	out	0x3d, r28	; 61
     f16:	df 91       	pop	r29
     f18:	cf 91       	pop	r28
     f1a:	1f 91       	pop	r17
     f1c:	0f 91       	pop	r16
     f1e:	08 95       	ret

00000f20 <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEddddd>:

double PIDController::calculateOuterLoopControlValue(double proportionalError, double velocityError, double integral, double proportionalGain, double derivativeGain)
{
     f20:	8f 92       	push	r8
     f22:	9f 92       	push	r9
     f24:	af 92       	push	r10
     f26:	bf 92       	push	r11
     f28:	cf 92       	push	r12
     f2a:	df 92       	push	r13
     f2c:	ef 92       	push	r14
     f2e:	ff 92       	push	r15
     f30:	0f 93       	push	r16
     f32:	1f 93       	push	r17
     f34:	cf 93       	push	r28
     f36:	df 93       	push	r29
     f38:	cd b7       	in	r28, 0x3d	; 61
     f3a:	de b7       	in	r29, 0x3e	; 62
     f3c:	66 97       	sbiw	r28, 0x16	; 22
     f3e:	0f b6       	in	r0, 0x3f	; 63
     f40:	f8 94       	cli
     f42:	de bf       	out	0x3e, r29	; 62
     f44:	0f be       	out	0x3f, r0	; 63
     f46:	cd bf       	out	0x3d, r28	; 61
     f48:	9e 83       	std	Y+6, r25	; 0x06
     f4a:	8d 83       	std	Y+5, r24	; 0x05
     f4c:	4f 83       	std	Y+7, r20	; 0x07
     f4e:	58 87       	std	Y+8, r21	; 0x08
     f50:	69 87       	std	Y+9, r22	; 0x09
     f52:	7a 87       	std	Y+10, r23	; 0x0a
     f54:	0b 87       	std	Y+11, r16	; 0x0b
     f56:	1c 87       	std	Y+12, r17	; 0x0c
     f58:	2d 87       	std	Y+13, r18	; 0x0d
     f5a:	3e 87       	std	Y+14, r19	; 0x0e
     f5c:	cf 86       	std	Y+15, r12	; 0x0f
     f5e:	d8 8a       	std	Y+16, r13	; 0x10
     f60:	e9 8a       	std	Y+17, r14	; 0x11
     f62:	fa 8a       	std	Y+18, r15	; 0x12
     f64:	8b 8a       	std	Y+19, r8	; 0x13
     f66:	9c 8a       	std	Y+20, r9	; 0x14
     f68:	ad 8a       	std	Y+21, r10	; 0x15
     f6a:	be 8a       	std	Y+22, r11	; 0x16
	double controlValue = 0;
     f6c:	19 82       	std	Y+1, r1	; 0x01
     f6e:	1a 82       	std	Y+2, r1	; 0x02
     f70:	1b 82       	std	Y+3, r1	; 0x03
     f72:	1c 82       	std	Y+4, r1	; 0x04
	
	controlValue = integral  + proportionalError * proportionalGain + velocityError * derivativeGain;
     f74:	2b 89       	ldd	r18, Y+19	; 0x13
     f76:	3c 89       	ldd	r19, Y+20	; 0x14
     f78:	4d 89       	ldd	r20, Y+21	; 0x15
     f7a:	5e 89       	ldd	r21, Y+22	; 0x16
     f7c:	6f 81       	ldd	r22, Y+7	; 0x07
     f7e:	78 85       	ldd	r23, Y+8	; 0x08
     f80:	89 85       	ldd	r24, Y+9	; 0x09
     f82:	9a 85       	ldd	r25, Y+10	; 0x0a
     f84:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
     f88:	dc 01       	movw	r26, r24
     f8a:	cb 01       	movw	r24, r22
     f8c:	2f 85       	ldd	r18, Y+15	; 0x0f
     f8e:	38 89       	ldd	r19, Y+16	; 0x10
     f90:	49 89       	ldd	r20, Y+17	; 0x11
     f92:	5a 89       	ldd	r21, Y+18	; 0x12
     f94:	bc 01       	movw	r22, r24
     f96:	cd 01       	movw	r24, r26
     f98:	0e 94 14 3f 	call	0x7e28	; 0x7e28 <__addsf3>
     f9c:	dc 01       	movw	r26, r24
     f9e:	cb 01       	movw	r24, r22
     fa0:	6c 01       	movw	r12, r24
     fa2:	7d 01       	movw	r14, r26
     fa4:	2e a1       	ldd	r18, Y+38	; 0x26
     fa6:	3f a1       	ldd	r19, Y+39	; 0x27
     fa8:	48 a5       	ldd	r20, Y+40	; 0x28
     faa:	59 a5       	ldd	r21, Y+41	; 0x29
     fac:	6b 85       	ldd	r22, Y+11	; 0x0b
     fae:	7c 85       	ldd	r23, Y+12	; 0x0c
     fb0:	8d 85       	ldd	r24, Y+13	; 0x0d
     fb2:	9e 85       	ldd	r25, Y+14	; 0x0e
     fb4:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
     fb8:	dc 01       	movw	r26, r24
     fba:	cb 01       	movw	r24, r22
     fbc:	9c 01       	movw	r18, r24
     fbe:	ad 01       	movw	r20, r26
     fc0:	c7 01       	movw	r24, r14
     fc2:	b6 01       	movw	r22, r12
     fc4:	0e 94 14 3f 	call	0x7e28	; 0x7e28 <__addsf3>
     fc8:	dc 01       	movw	r26, r24
     fca:	cb 01       	movw	r24, r22
     fcc:	89 83       	std	Y+1, r24	; 0x01
     fce:	9a 83       	std	Y+2, r25	; 0x02
     fd0:	ab 83       	std	Y+3, r26	; 0x03
     fd2:	bc 83       	std	Y+4, r27	; 0x04
	{
		controlValue = controlMinValue;
	}
	*/
	
	return controlValue;
     fd4:	89 81       	ldd	r24, Y+1	; 0x01
     fd6:	9a 81       	ldd	r25, Y+2	; 0x02
     fd8:	ab 81       	ldd	r26, Y+3	; 0x03
     fda:	bc 81       	ldd	r27, Y+4	; 0x04
}
     fdc:	bc 01       	movw	r22, r24
     fde:	cd 01       	movw	r24, r26
     fe0:	66 96       	adiw	r28, 0x16	; 22
     fe2:	0f b6       	in	r0, 0x3f	; 63
     fe4:	f8 94       	cli
     fe6:	de bf       	out	0x3e, r29	; 62
     fe8:	0f be       	out	0x3f, r0	; 63
     fea:	cd bf       	out	0x3d, r28	; 61
     fec:	df 91       	pop	r29
     fee:	cf 91       	pop	r28
     ff0:	1f 91       	pop	r17
     ff2:	0f 91       	pop	r16
     ff4:	ff 90       	pop	r15
     ff6:	ef 90       	pop	r14
     ff8:	df 90       	pop	r13
     ffa:	cf 90       	pop	r12
     ffc:	bf 90       	pop	r11
     ffe:	af 90       	pop	r10
    1000:	9f 90       	pop	r9
    1002:	8f 90       	pop	r8
    1004:	08 95       	ret

00001006 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEddd>:


double PIDController::adjustControlForServoLimits( double controlValueToAdjust, double minServoControlValue, double maxServoControlValue )
{
    1006:	cf 92       	push	r12
    1008:	df 92       	push	r13
    100a:	ef 92       	push	r14
    100c:	ff 92       	push	r15
    100e:	0f 93       	push	r16
    1010:	1f 93       	push	r17
    1012:	cf 93       	push	r28
    1014:	df 93       	push	r29
    1016:	cd b7       	in	r28, 0x3d	; 61
    1018:	de b7       	in	r29, 0x3e	; 62
    101a:	2e 97       	sbiw	r28, 0x0e	; 14
    101c:	0f b6       	in	r0, 0x3f	; 63
    101e:	f8 94       	cli
    1020:	de bf       	out	0x3e, r29	; 62
    1022:	0f be       	out	0x3f, r0	; 63
    1024:	cd bf       	out	0x3d, r28	; 61
    1026:	9a 83       	std	Y+2, r25	; 0x02
    1028:	89 83       	std	Y+1, r24	; 0x01
    102a:	4b 83       	std	Y+3, r20	; 0x03
    102c:	5c 83       	std	Y+4, r21	; 0x04
    102e:	6d 83       	std	Y+5, r22	; 0x05
    1030:	7e 83       	std	Y+6, r23	; 0x06
    1032:	0f 83       	std	Y+7, r16	; 0x07
    1034:	18 87       	std	Y+8, r17	; 0x08
    1036:	29 87       	std	Y+9, r18	; 0x09
    1038:	3a 87       	std	Y+10, r19	; 0x0a
    103a:	cb 86       	std	Y+11, r12	; 0x0b
    103c:	dc 86       	std	Y+12, r13	; 0x0c
    103e:	ed 86       	std	Y+13, r14	; 0x0d
    1040:	fe 86       	std	Y+14, r15	; 0x0e

	//TODO: when generalizing ensure to change this value. 
	//Todo revisit including trim.
	//controlValue += yawServoTrim;
	
	if (controlValueToAdjust > maxServoControlValue)
    1042:	2b 85       	ldd	r18, Y+11	; 0x0b
    1044:	3c 85       	ldd	r19, Y+12	; 0x0c
    1046:	4d 85       	ldd	r20, Y+13	; 0x0d
    1048:	5e 85       	ldd	r21, Y+14	; 0x0e
    104a:	6b 81       	ldd	r22, Y+3	; 0x03
    104c:	7c 81       	ldd	r23, Y+4	; 0x04
    104e:	8d 81       	ldd	r24, Y+5	; 0x05
    1050:	9e 81       	ldd	r25, Y+6	; 0x06
    1052:	0e 94 56 41 	call	0x82ac	; 0x82ac <__gesf2>
    1056:	18 16       	cp	r1, r24
    1058:	4c f4       	brge	.+18     	; 0x106c <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEddd+0x66>
	{
		controlValueToAdjust = maxServoControlValue;
    105a:	8b 85       	ldd	r24, Y+11	; 0x0b
    105c:	9c 85       	ldd	r25, Y+12	; 0x0c
    105e:	ad 85       	ldd	r26, Y+13	; 0x0d
    1060:	be 85       	ldd	r27, Y+14	; 0x0e
    1062:	8b 83       	std	Y+3, r24	; 0x03
    1064:	9c 83       	std	Y+4, r25	; 0x04
    1066:	ad 83       	std	Y+5, r26	; 0x05
    1068:	be 83       	std	Y+6, r27	; 0x06
    106a:	14 c0       	rjmp	.+40     	; 0x1094 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEddd+0x8e>
	}else if (controlValueToAdjust < minServoControlValue)
    106c:	2f 81       	ldd	r18, Y+7	; 0x07
    106e:	38 85       	ldd	r19, Y+8	; 0x08
    1070:	49 85       	ldd	r20, Y+9	; 0x09
    1072:	5a 85       	ldd	r21, Y+10	; 0x0a
    1074:	6b 81       	ldd	r22, Y+3	; 0x03
    1076:	7c 81       	ldd	r23, Y+4	; 0x04
    1078:	8d 81       	ldd	r24, Y+5	; 0x05
    107a:	9e 81       	ldd	r25, Y+6	; 0x06
    107c:	0e 94 78 3f 	call	0x7ef0	; 0x7ef0 <__cmpsf2>
    1080:	88 23       	and	r24, r24
    1082:	44 f4       	brge	.+16     	; 0x1094 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEddd+0x8e>
	{
		controlValueToAdjust = minServoControlValue;
    1084:	8f 81       	ldd	r24, Y+7	; 0x07
    1086:	98 85       	ldd	r25, Y+8	; 0x08
    1088:	a9 85       	ldd	r26, Y+9	; 0x09
    108a:	ba 85       	ldd	r27, Y+10	; 0x0a
    108c:	8b 83       	std	Y+3, r24	; 0x03
    108e:	9c 83       	std	Y+4, r25	; 0x04
    1090:	ad 83       	std	Y+5, r26	; 0x05
    1092:	be 83       	std	Y+6, r27	; 0x06
	}
	
	return controlValueToAdjust;
    1094:	8b 81       	ldd	r24, Y+3	; 0x03
    1096:	9c 81       	ldd	r25, Y+4	; 0x04
    1098:	ad 81       	ldd	r26, Y+5	; 0x05
    109a:	be 81       	ldd	r27, Y+6	; 0x06
}
    109c:	bc 01       	movw	r22, r24
    109e:	cd 01       	movw	r24, r26
    10a0:	2e 96       	adiw	r28, 0x0e	; 14
    10a2:	0f b6       	in	r0, 0x3f	; 63
    10a4:	f8 94       	cli
    10a6:	de bf       	out	0x3e, r29	; 62
    10a8:	0f be       	out	0x3f, r0	; 63
    10aa:	cd bf       	out	0x3d, r28	; 61
    10ac:	df 91       	pop	r29
    10ae:	cf 91       	pop	r28
    10b0:	1f 91       	pop	r17
    10b2:	0f 91       	pop	r16
    10b4:	ff 90       	pop	r15
    10b6:	ef 90       	pop	r14
    10b8:	df 90       	pop	r13
    10ba:	cf 90       	pop	r12
    10bc:	08 95       	ret

000010be <_Z30calculateInnerLoopControlValueddd>:


double calculateInnerLoopControlValue( double outerLoopSetpoint, double measuredValue, double gain )
{
    10be:	ef 92       	push	r14
    10c0:	ff 92       	push	r15
    10c2:	0f 93       	push	r16
    10c4:	1f 93       	push	r17
    10c6:	cf 93       	push	r28
    10c8:	df 93       	push	r29
    10ca:	cd b7       	in	r28, 0x3d	; 61
    10cc:	de b7       	in	r29, 0x3e	; 62
    10ce:	2c 97       	sbiw	r28, 0x0c	; 12
    10d0:	0f b6       	in	r0, 0x3f	; 63
    10d2:	f8 94       	cli
    10d4:	de bf       	out	0x3e, r29	; 62
    10d6:	0f be       	out	0x3f, r0	; 63
    10d8:	cd bf       	out	0x3d, r28	; 61
    10da:	69 83       	std	Y+1, r22	; 0x01
    10dc:	7a 83       	std	Y+2, r23	; 0x02
    10de:	8b 83       	std	Y+3, r24	; 0x03
    10e0:	9c 83       	std	Y+4, r25	; 0x04
    10e2:	2d 83       	std	Y+5, r18	; 0x05
    10e4:	3e 83       	std	Y+6, r19	; 0x06
    10e6:	4f 83       	std	Y+7, r20	; 0x07
    10e8:	58 87       	std	Y+8, r21	; 0x08
    10ea:	e9 86       	std	Y+9, r14	; 0x09
    10ec:	fa 86       	std	Y+10, r15	; 0x0a
    10ee:	0b 87       	std	Y+11, r16	; 0x0b
    10f0:	1c 87       	std	Y+12, r17	; 0x0c
	//NOTE: IN MY OTHER IMPLEMENTATION I SUBTRACT THE VELOCITY (YES VELOCITY) OF THE ANGULAR MOTION.
	return gain * (measuredValue - outerLoopSetpoint);
    10f2:	29 81       	ldd	r18, Y+1	; 0x01
    10f4:	3a 81       	ldd	r19, Y+2	; 0x02
    10f6:	4b 81       	ldd	r20, Y+3	; 0x03
    10f8:	5c 81       	ldd	r21, Y+4	; 0x04
    10fa:	6d 81       	ldd	r22, Y+5	; 0x05
    10fc:	7e 81       	ldd	r23, Y+6	; 0x06
    10fe:	8f 81       	ldd	r24, Y+7	; 0x07
    1100:	98 85       	ldd	r25, Y+8	; 0x08
    1102:	0e 94 13 3f 	call	0x7e26	; 0x7e26 <__subsf3>
    1106:	dc 01       	movw	r26, r24
    1108:	cb 01       	movw	r24, r22
    110a:	29 85       	ldd	r18, Y+9	; 0x09
    110c:	3a 85       	ldd	r19, Y+10	; 0x0a
    110e:	4b 85       	ldd	r20, Y+11	; 0x0b
    1110:	5c 85       	ldd	r21, Y+12	; 0x0c
    1112:	bc 01       	movw	r22, r24
    1114:	cd 01       	movw	r24, r26
    1116:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    111a:	dc 01       	movw	r26, r24
    111c:	cb 01       	movw	r24, r22
}
    111e:	bc 01       	movw	r22, r24
    1120:	cd 01       	movw	r24, r26
    1122:	2c 96       	adiw	r28, 0x0c	; 12
    1124:	0f b6       	in	r0, 0x3f	; 63
    1126:	f8 94       	cli
    1128:	de bf       	out	0x3e, r29	; 62
    112a:	0f be       	out	0x3f, r0	; 63
    112c:	cd bf       	out	0x3d, r28	; 61
    112e:	df 91       	pop	r29
    1130:	cf 91       	pop	r28
    1132:	1f 91       	pop	r17
    1134:	0f 91       	pop	r16
    1136:	ff 90       	pop	r15
    1138:	ef 90       	pop	r14
    113a:	08 95       	ret

0000113c <_ZN10helicopter10controller13PIDController30cyclicLongitudeOuterLoopUpdateEv>:

//side motion / roll / lateral

//forward motion / pitch / longitud
void PIDController::cyclicLongitudeOuterLoopUpdate()
{
    113c:	7f 92       	push	r7
    113e:	8f 92       	push	r8
    1140:	9f 92       	push	r9
    1142:	af 92       	push	r10
    1144:	bf 92       	push	r11
    1146:	cf 92       	push	r12
    1148:	df 92       	push	r13
    114a:	ef 92       	push	r14
    114c:	ff 92       	push	r15
    114e:	0f 93       	push	r16
    1150:	1f 93       	push	r17
    1152:	cf 93       	push	r28
    1154:	df 93       	push	r29
    1156:	cd b7       	in	r28, 0x3d	; 61
    1158:	de b7       	in	r29, 0x3e	; 62
    115a:	66 97       	sbiw	r28, 0x16	; 22
    115c:	0f b6       	in	r0, 0x3f	; 63
    115e:	f8 94       	cli
    1160:	de bf       	out	0x3e, r29	; 62
    1162:	0f be       	out	0x3f, r0	; 63
    1164:	cd bf       	out	0x3d, r28	; 61
    1166:	9e 8b       	std	Y+22, r25	; 0x16
    1168:	8d 8b       	std	Y+21, r24	; 0x15
	//double yawProportional = calculateYawProportional(model->MagYawDegrees(), model->ReferenceMagYawDegrees());
	double xProportional = calculateProportional(model->XNEDBodyFrame(), model->ReferenceXNEDBodyFrame());
    116a:	8d 89       	ldd	r24, Y+21	; 0x15
    116c:	9e 89       	ldd	r25, Y+22	; 0x16
    116e:	fc 01       	movw	r30, r24
    1170:	80 81       	ld	r24, Z
    1172:	91 81       	ldd	r25, Z+1	; 0x01
    1174:	0e 94 8d 02 	call	0x51a	; 0x51a <_ZNK10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEv>
    1178:	6b 01       	movw	r12, r22
    117a:	7c 01       	movw	r14, r24
    117c:	8d 89       	ldd	r24, Y+21	; 0x15
    117e:	9e 89       	ldd	r25, Y+22	; 0x16
    1180:	fc 01       	movw	r30, r24
    1182:	80 81       	ld	r24, Z
    1184:	91 81       	ldd	r25, Z+1	; 0x01
    1186:	0e 94 77 02 	call	0x4ee	; 0x4ee <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>
    118a:	dc 01       	movw	r26, r24
    118c:	cb 01       	movw	r24, r22
    118e:	ed 89       	ldd	r30, Y+21	; 0x15
    1190:	fe 89       	ldd	r31, Y+22	; 0x16
    1192:	97 01       	movw	r18, r14
    1194:	86 01       	movw	r16, r12
    1196:	ac 01       	movw	r20, r24
    1198:	bd 01       	movw	r22, r26
    119a:	cf 01       	movw	r24, r30
    119c:	0e 94 0f 06 	call	0xc1e	; 0xc1e <_ZN10helicopter10controller13PIDController21calculateProportionalEdd>
    11a0:	dc 01       	movw	r26, r24
    11a2:	cb 01       	movw	r24, r22
    11a4:	89 83       	std	Y+1, r24	; 0x01
    11a6:	9a 83       	std	Y+2, r25	; 0x02
    11a8:	ab 83       	std	Y+3, r26	; 0x03
    11aa:	bc 83       	std	Y+4, r27	; 0x04
	double xIntegralAntiWindup = calculateIntegralAntiWindup(model->LongitudeControlBeforeServoLimitsAdjustment(), model->LongitudeControl(), xAntiWindupGain);
    11ac:	8d 89       	ldd	r24, Y+21	; 0x15
    11ae:	9e 89       	ldd	r25, Y+22	; 0x16
    11b0:	fc 01       	movw	r30, r24
    11b2:	c0 a0       	ldd	r12, Z+32	; 0x20
    11b4:	d1 a0       	ldd	r13, Z+33	; 0x21
    11b6:	e2 a0       	ldd	r14, Z+34	; 0x22
    11b8:	f3 a0       	ldd	r15, Z+35	; 0x23
    11ba:	8d 89       	ldd	r24, Y+21	; 0x15
    11bc:	9e 89       	ldd	r25, Y+22	; 0x16
    11be:	fc 01       	movw	r30, r24
    11c0:	80 81       	ld	r24, Z
    11c2:	91 81       	ldd	r25, Z+1	; 0x01
    11c4:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>
    11c8:	4b 01       	movw	r8, r22
    11ca:	5c 01       	movw	r10, r24
    11cc:	8d 89       	ldd	r24, Y+21	; 0x15
    11ce:	9e 89       	ldd	r25, Y+22	; 0x16
    11d0:	fc 01       	movw	r30, r24
    11d2:	80 81       	ld	r24, Z
    11d4:	91 81       	ldd	r25, Z+1	; 0x01
    11d6:	0e 94 a3 02 	call	0x546	; 0x546 <_ZNK10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEv>
    11da:	dc 01       	movw	r26, r24
    11dc:	cb 01       	movw	r24, r22
    11de:	ed 89       	ldd	r30, Y+21	; 0x15
    11e0:	fe 89       	ldd	r31, Y+22	; 0x16
    11e2:	95 01       	movw	r18, r10
    11e4:	84 01       	movw	r16, r8
    11e6:	ac 01       	movw	r20, r24
    11e8:	bd 01       	movw	r22, r26
    11ea:	cf 01       	movw	r24, r30
    11ec:	0e 94 3e 06 	call	0xc7c	; 0xc7c <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEddd>
    11f0:	dc 01       	movw	r26, r24
    11f2:	cb 01       	movw	r24, r22
    11f4:	8d 83       	std	Y+5, r24	; 0x05
    11f6:	9e 83       	std	Y+6, r25	; 0x06
    11f8:	af 83       	std	Y+7, r26	; 0x07
    11fa:	b8 87       	std	Y+8, r27	; 0x08
	double weightedXIntegral = calculateIntegral(xProportional, model->XIntegral(), xIntegralAntiWindup, xIntegralGain);
    11fc:	8d 89       	ldd	r24, Y+21	; 0x15
    11fe:	9e 89       	ldd	r25, Y+22	; 0x16
    1200:	fc 01       	movw	r30, r24
    1202:	a4 88       	ldd	r10, Z+20	; 0x14
    1204:	b5 88       	ldd	r11, Z+21	; 0x15
    1206:	c6 88       	ldd	r12, Z+22	; 0x16
    1208:	d7 88       	ldd	r13, Z+23	; 0x17
    120a:	8d 89       	ldd	r24, Y+21	; 0x15
    120c:	9e 89       	ldd	r25, Y+22	; 0x16
    120e:	fc 01       	movw	r30, r24
    1210:	80 81       	ld	r24, Z
    1212:	91 81       	ldd	r25, Z+1	; 0x01
    1214:	0e 94 94 03 	call	0x728	; 0x728 <_ZNK10helicopter5model11SystemModel9XIntegralEv>
    1218:	9b 01       	movw	r18, r22
    121a:	ac 01       	movw	r20, r24
    121c:	ed 80       	ldd	r14, Y+5	; 0x05
    121e:	fe 80       	ldd	r15, Y+6	; 0x06
    1220:	0f 81       	ldd	r16, Y+7	; 0x07
    1222:	18 85       	ldd	r17, Y+8	; 0x08
    1224:	89 81       	ldd	r24, Y+1	; 0x01
    1226:	9a 81       	ldd	r25, Y+2	; 0x02
    1228:	ab 81       	ldd	r26, Y+3	; 0x03
    122a:	bc 81       	ldd	r27, Y+4	; 0x04
    122c:	ed 89       	ldd	r30, Y+21	; 0x15
    122e:	fe 89       	ldd	r31, Y+22	; 0x16
    1230:	45 01       	movw	r8, r10
    1232:	56 01       	movw	r10, r12
    1234:	67 01       	movw	r12, r14
    1236:	78 01       	movw	r14, r16
    1238:	89 01       	movw	r16, r18
    123a:	9a 01       	movw	r18, r20
    123c:	ac 01       	movw	r20, r24
    123e:	bd 01       	movw	r22, r26
    1240:	cf 01       	movw	r24, r30
    1242:	0e 94 8f 06 	call	0xd1e	; 0xd1e <_ZN10helicopter10controller13PIDController17calculateIntegralEdddd>
    1246:	dc 01       	movw	r26, r24
    1248:	cb 01       	movw	r24, r22
    124a:	89 87       	std	Y+9, r24	; 0x09
    124c:	9a 87       	std	Y+10, r25	; 0x0a
    124e:	ab 87       	std	Y+11, r26	; 0x0b
    1250:	bc 87       	std	Y+12, r27	; 0x0c
	double xDerivativeError = calculateVelocityError(model->XVelocityMetersPerSecond(), model->ReferenceXVelocityMetersPerSecond());
    1252:	8d 89       	ldd	r24, Y+21	; 0x15
    1254:	9e 89       	ldd	r25, Y+22	; 0x16
    1256:	fc 01       	movw	r30, r24
    1258:	80 81       	ld	r24, Z
    125a:	91 81       	ldd	r25, Z+1	; 0x01
    125c:	0e 94 25 03 	call	0x64a	; 0x64a <_ZNK10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEv>
    1260:	6b 01       	movw	r12, r22
    1262:	7c 01       	movw	r14, r24
    1264:	8d 89       	ldd	r24, Y+21	; 0x15
    1266:	9e 89       	ldd	r25, Y+22	; 0x16
    1268:	fc 01       	movw	r30, r24
    126a:	80 81       	ld	r24, Z
    126c:	91 81       	ldd	r25, Z+1	; 0x01
    126e:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>
    1272:	dc 01       	movw	r26, r24
    1274:	cb 01       	movw	r24, r22
    1276:	ed 89       	ldd	r30, Y+21	; 0x15
    1278:	fe 89       	ldd	r31, Y+22	; 0x16
    127a:	97 01       	movw	r18, r14
    127c:	86 01       	movw	r16, r12
    127e:	ac 01       	movw	r20, r24
    1280:	bd 01       	movw	r22, r26
    1282:	cf 01       	movw	r24, r30
    1284:	0e 94 61 07 	call	0xec2	; 0xec2 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEdd>
    1288:	dc 01       	movw	r26, r24
    128a:	cb 01       	movw	r24, r22
    128c:	8d 87       	std	Y+13, r24	; 0x0d
    128e:	9e 87       	std	Y+14, r25	; 0x0e
    1290:	af 87       	std	Y+15, r26	; 0x0f
    1292:	b8 8b       	std	Y+16, r27	; 0x10
	double xLongitudinalOuterLoopControl = calculateOuterLoopControlValue(xProportional, xDerivativeError, weightedXIntegral, xProportionalGain, xDerivativeGain);
    1294:	8d 89       	ldd	r24, Y+21	; 0x15
    1296:	9e 89       	ldd	r25, Y+22	; 0x16
    1298:	fc 01       	movw	r30, r24
    129a:	80 8d       	ldd	r24, Z+24	; 0x18
    129c:	91 8d       	ldd	r25, Z+25	; 0x19
    129e:	a2 8d       	ldd	r26, Z+26	; 0x1a
    12a0:	b3 8d       	ldd	r27, Z+27	; 0x1b
    12a2:	2d 89       	ldd	r18, Y+21	; 0x15
    12a4:	3e 89       	ldd	r19, Y+22	; 0x16
    12a6:	f9 01       	movw	r30, r18
    12a8:	84 8c       	ldd	r8, Z+28	; 0x1c
    12aa:	95 8c       	ldd	r9, Z+29	; 0x1d
    12ac:	a6 8c       	ldd	r10, Z+30	; 0x1e
    12ae:	b7 8c       	ldd	r11, Z+31	; 0x1f
    12b0:	c9 84       	ldd	r12, Y+9	; 0x09
    12b2:	da 84       	ldd	r13, Y+10	; 0x0a
    12b4:	eb 84       	ldd	r14, Y+11	; 0x0b
    12b6:	fc 84       	ldd	r15, Y+12	; 0x0c
    12b8:	0d 85       	ldd	r16, Y+13	; 0x0d
    12ba:	1e 85       	ldd	r17, Y+14	; 0x0e
    12bc:	2f 85       	ldd	r18, Y+15	; 0x0f
    12be:	38 89       	ldd	r19, Y+16	; 0x10
    12c0:	49 81       	ldd	r20, Y+1	; 0x01
    12c2:	5a 81       	ldd	r21, Y+2	; 0x02
    12c4:	6b 81       	ldd	r22, Y+3	; 0x03
    12c6:	7c 81       	ldd	r23, Y+4	; 0x04
    12c8:	ed 89       	ldd	r30, Y+21	; 0x15
    12ca:	fe 89       	ldd	r31, Y+22	; 0x16
    12cc:	7b 2e       	mov	r7, r27
    12ce:	7f 92       	push	r7
    12d0:	7a 2e       	mov	r7, r26
    12d2:	7f 92       	push	r7
    12d4:	79 2e       	mov	r7, r25
    12d6:	7f 92       	push	r7
    12d8:	8f 93       	push	r24
    12da:	cf 01       	movw	r24, r30
    12dc:	0e 94 90 07 	call	0xf20	; 0xf20 <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEddddd>
    12e0:	0f 90       	pop	r0
    12e2:	0f 90       	pop	r0
    12e4:	0f 90       	pop	r0
    12e6:	0f 90       	pop	r0
    12e8:	dc 01       	movw	r26, r24
    12ea:	cb 01       	movw	r24, r22
    12ec:	89 8b       	std	Y+17, r24	; 0x11
    12ee:	9a 8b       	std	Y+18, r25	; 0x12
    12f0:	ab 8b       	std	Y+19, r26	; 0x13
    12f2:	bc 8b       	std	Y+20, r27	; 0x14
	//double xOuterLoopControl = adjustControlForServoLimits(xControlBeforeServoLimitsAdjustment);
	
	model->XLongitudinalOuterLoopControl(xLongitudinalOuterLoopControl);
    12f4:	8d 89       	ldd	r24, Y+21	; 0x15
    12f6:	9e 89       	ldd	r25, Y+22	; 0x16
    12f8:	fc 01       	movw	r30, r24
    12fa:	20 81       	ld	r18, Z
    12fc:	31 81       	ldd	r19, Z+1	; 0x01
    12fe:	89 89       	ldd	r24, Y+17	; 0x11
    1300:	9a 89       	ldd	r25, Y+18	; 0x12
    1302:	ab 89       	ldd	r26, Y+19	; 0x13
    1304:	bc 89       	ldd	r27, Y+20	; 0x14
    1306:	ac 01       	movw	r20, r24
    1308:	bd 01       	movw	r22, r26
    130a:	c9 01       	movw	r24, r18
    130c:	0e 94 51 03 	call	0x6a2	; 0x6a2 <_ZN10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEd>
	//model->YawControlBeforeServoLimitsAdjustment(yawControlBeforeServoLimitsAdjustment);
	model->XIntegral(weightedXIntegral);
    1310:	8d 89       	ldd	r24, Y+21	; 0x15
    1312:	9e 89       	ldd	r25, Y+22	; 0x16
    1314:	fc 01       	movw	r30, r24
    1316:	20 81       	ld	r18, Z
    1318:	31 81       	ldd	r19, Z+1	; 0x01
    131a:	89 85       	ldd	r24, Y+9	; 0x09
    131c:	9a 85       	ldd	r25, Y+10	; 0x0a
    131e:	ab 85       	ldd	r26, Y+11	; 0x0b
    1320:	bc 85       	ldd	r27, Y+12	; 0x0c
    1322:	ac 01       	movw	r20, r24
    1324:	bd 01       	movw	r22, r26
    1326:	c9 01       	movw	r24, r18
    1328:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN10helicopter5model11SystemModel9XIntegralEd>
	model->XProportional(xProportional);
    132c:	8d 89       	ldd	r24, Y+21	; 0x15
    132e:	9e 89       	ldd	r25, Y+22	; 0x16
    1330:	fc 01       	movw	r30, r24
    1332:	20 81       	ld	r18, Z
    1334:	31 81       	ldd	r19, Z+1	; 0x01
    1336:	89 81       	ldd	r24, Y+1	; 0x01
    1338:	9a 81       	ldd	r25, Y+2	; 0x02
    133a:	ab 81       	ldd	r26, Y+3	; 0x03
    133c:	bc 81       	ldd	r27, Y+4	; 0x04
    133e:	ac 01       	movw	r20, r24
    1340:	bd 01       	movw	r22, r26
    1342:	c9 01       	movw	r24, r18
    1344:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN10helicopter5model11SystemModel13XProportionalEd>
	model->XDerivativeError(xDerivativeError);
    1348:	8d 89       	ldd	r24, Y+21	; 0x15
    134a:	9e 89       	ldd	r25, Y+22	; 0x16
    134c:	fc 01       	movw	r30, r24
    134e:	20 81       	ld	r18, Z
    1350:	31 81       	ldd	r19, Z+1	; 0x01
    1352:	8d 85       	ldd	r24, Y+13	; 0x0d
    1354:	9e 85       	ldd	r25, Y+14	; 0x0e
    1356:	af 85       	ldd	r26, Y+15	; 0x0f
    1358:	b8 89       	ldd	r27, Y+16	; 0x10
    135a:	ac 01       	movw	r20, r24
    135c:	bd 01       	movw	r22, r26
    135e:	c9 01       	movw	r24, r18
    1360:	0e 94 cf 03 	call	0x79e	; 0x79e <_ZN10helicopter5model11SystemModel16XDerivativeErrorEd>
	
	
	model->XLongitudinalOuterLoopControl(model->ReferenceXNEDBodyFrame());
    1364:	8d 89       	ldd	r24, Y+21	; 0x15
    1366:	9e 89       	ldd	r25, Y+22	; 0x16
    1368:	fc 01       	movw	r30, r24
    136a:	80 81       	ld	r24, Z
    136c:	91 81       	ldd	r25, Z+1	; 0x01
    136e:	0e 94 8d 02 	call	0x51a	; 0x51a <_ZNK10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEv>
    1372:	dc 01       	movw	r26, r24
    1374:	cb 01       	movw	r24, r22
    1376:	2d 89       	ldd	r18, Y+21	; 0x15
    1378:	3e 89       	ldd	r19, Y+22	; 0x16
    137a:	f9 01       	movw	r30, r18
    137c:	20 81       	ld	r18, Z
    137e:	31 81       	ldd	r19, Z+1	; 0x01
    1380:	ac 01       	movw	r20, r24
    1382:	bd 01       	movw	r22, r26
    1384:	c9 01       	movw	r24, r18
    1386:	0e 94 51 03 	call	0x6a2	; 0x6a2 <_ZN10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEd>
	//model->YawControlBeforeServoLimitsAdjustment(yawControlBeforeServoLimitsAdjustment);
	model->XIntegral(.23d);
    138a:	8d 89       	ldd	r24, Y+21	; 0x15
    138c:	9e 89       	ldd	r25, Y+22	; 0x16
    138e:	fc 01       	movw	r30, r24
    1390:	80 81       	ld	r24, Z
    1392:	91 81       	ldd	r25, Z+1	; 0x01
    1394:	4f e1       	ldi	r20, 0x1F	; 31
    1396:	55 e8       	ldi	r21, 0x85	; 133
    1398:	6b e6       	ldi	r22, 0x6B	; 107
    139a:	7e e3       	ldi	r23, 0x3E	; 62
    139c:	0e 94 ac 03 	call	0x758	; 0x758 <_ZN10helicopter5model11SystemModel9XIntegralEd>
	model->XProportional(model->XNEDBodyFrame());
    13a0:	8d 89       	ldd	r24, Y+21	; 0x15
    13a2:	9e 89       	ldd	r25, Y+22	; 0x16
    13a4:	fc 01       	movw	r30, r24
    13a6:	80 81       	ld	r24, Z
    13a8:	91 81       	ldd	r25, Z+1	; 0x01
    13aa:	0e 94 77 02 	call	0x4ee	; 0x4ee <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>
    13ae:	dc 01       	movw	r26, r24
    13b0:	cb 01       	movw	r24, r22
    13b2:	2d 89       	ldd	r18, Y+21	; 0x15
    13b4:	3e 89       	ldd	r19, Y+22	; 0x16
    13b6:	f9 01       	movw	r30, r18
    13b8:	20 81       	ld	r18, Z
    13ba:	31 81       	ldd	r19, Z+1	; 0x01
    13bc:	ac 01       	movw	r20, r24
    13be:	bd 01       	movw	r22, r26
    13c0:	c9 01       	movw	r24, r18
    13c2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN10helicopter5model11SystemModel13XProportionalEd>
	model->XDerivativeError(model->XVelocityMetersPerSecond());	
    13c6:	8d 89       	ldd	r24, Y+21	; 0x15
    13c8:	9e 89       	ldd	r25, Y+22	; 0x16
    13ca:	fc 01       	movw	r30, r24
    13cc:	80 81       	ld	r24, Z
    13ce:	91 81       	ldd	r25, Z+1	; 0x01
    13d0:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>
    13d4:	dc 01       	movw	r26, r24
    13d6:	cb 01       	movw	r24, r22
    13d8:	2d 89       	ldd	r18, Y+21	; 0x15
    13da:	3e 89       	ldd	r19, Y+22	; 0x16
    13dc:	f9 01       	movw	r30, r18
    13de:	20 81       	ld	r18, Z
    13e0:	31 81       	ldd	r19, Z+1	; 0x01
    13e2:	ac 01       	movw	r20, r24
    13e4:	bd 01       	movw	r22, r26
    13e6:	c9 01       	movw	r24, r18
    13e8:	0e 94 cf 03 	call	0x79e	; 0x79e <_ZN10helicopter5model11SystemModel16XDerivativeErrorEd>
	
	
//	servoDriver->controlTailRotorCollective(xControl);
}
    13ec:	66 96       	adiw	r28, 0x16	; 22
    13ee:	0f b6       	in	r0, 0x3f	; 63
    13f0:	f8 94       	cli
    13f2:	de bf       	out	0x3e, r29	; 62
    13f4:	0f be       	out	0x3f, r0	; 63
    13f6:	cd bf       	out	0x3d, r28	; 61
    13f8:	df 91       	pop	r29
    13fa:	cf 91       	pop	r28
    13fc:	1f 91       	pop	r17
    13fe:	0f 91       	pop	r16
    1400:	ff 90       	pop	r15
    1402:	ef 90       	pop	r14
    1404:	df 90       	pop	r13
    1406:	cf 90       	pop	r12
    1408:	bf 90       	pop	r11
    140a:	af 90       	pop	r10
    140c:	9f 90       	pop	r9
    140e:	8f 90       	pop	r8
    1410:	7f 90       	pop	r7
    1412:	08 95       	ret

00001414 <_ZN10helicopter10controller13PIDController30cyclicLongitudeInnerLoopUpdateEv>:
	
	//	servoDriver->controlTailRotorCollective(xControl);
}

void PIDController::cyclicLongitudeInnerLoopUpdate()
{
    1414:	6f 92       	push	r6
    1416:	7f 92       	push	r7
    1418:	8f 92       	push	r8
    141a:	9f 92       	push	r9
    141c:	af 92       	push	r10
    141e:	bf 92       	push	r11
    1420:	cf 92       	push	r12
    1422:	df 92       	push	r13
    1424:	ef 92       	push	r14
    1426:	ff 92       	push	r15
    1428:	0f 93       	push	r16
    142a:	1f 93       	push	r17
    142c:	cf 93       	push	r28
    142e:	df 93       	push	r29
    1430:	cd b7       	in	r28, 0x3d	; 61
    1432:	de b7       	in	r29, 0x3e	; 62
    1434:	2a 97       	sbiw	r28, 0x0a	; 10
    1436:	0f b6       	in	r0, 0x3f	; 63
    1438:	f8 94       	cli
    143a:	de bf       	out	0x3e, r29	; 62
    143c:	0f be       	out	0x3f, r0	; 63
    143e:	cd bf       	out	0x3d, r28	; 61
    1440:	9a 87       	std	Y+10, r25	; 0x0a
    1442:	89 87       	std	Y+9, r24	; 0x09
	double xLongitudinalInnerLoopControlBeforeServoLimits = calculateInnerLoopControlValue(model->XLongitudinalOuterLoopControl(), model->ThetaPitchDegrees(), longitudeInnerLoopGain);
    1444:	89 85       	ldd	r24, Y+9	; 0x09
    1446:	9a 85       	ldd	r25, Y+10	; 0x0a
    1448:	fc 01       	movw	r30, r24
    144a:	64 a0       	ldd	r6, Z+36	; 0x24
    144c:	75 a0       	ldd	r7, Z+37	; 0x25
    144e:	86 a0       	ldd	r8, Z+38	; 0x26
    1450:	97 a0       	ldd	r9, Z+39	; 0x27
    1452:	89 85       	ldd	r24, Y+9	; 0x09
    1454:	9a 85       	ldd	r25, Y+10	; 0x0a
    1456:	fc 01       	movw	r30, r24
    1458:	80 81       	ld	r24, Z
    145a:	91 81       	ldd	r25, Z+1	; 0x01
    145c:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <_ZNK10helicopter5model11SystemModel17ThetaPitchDegreesEv>
    1460:	5b 01       	movw	r10, r22
    1462:	6c 01       	movw	r12, r24
    1464:	89 85       	ldd	r24, Y+9	; 0x09
    1466:	9a 85       	ldd	r25, Y+10	; 0x0a
    1468:	fc 01       	movw	r30, r24
    146a:	80 81       	ld	r24, Z
    146c:	91 81       	ldd	r25, Z+1	; 0x01
    146e:	0e 94 3b 03 	call	0x676	; 0x676 <_ZNK10helicopter5model11SystemModel29XLongitudinalOuterLoopControlEv>
    1472:	dc 01       	movw	r26, r24
    1474:	cb 01       	movw	r24, r22
    1476:	84 01       	movw	r16, r8
    1478:	73 01       	movw	r14, r6
    147a:	a6 01       	movw	r20, r12
    147c:	95 01       	movw	r18, r10
    147e:	bc 01       	movw	r22, r24
    1480:	cd 01       	movw	r24, r26
    1482:	0e 94 5f 08 	call	0x10be	; 0x10be <_Z30calculateInnerLoopControlValueddd>
    1486:	dc 01       	movw	r26, r24
    1488:	cb 01       	movw	r24, r22
    148a:	89 83       	std	Y+1, r24	; 0x01
    148c:	9a 83       	std	Y+2, r25	; 0x02
    148e:	ab 83       	std	Y+3, r26	; 0x03
    1490:	bc 83       	std	Y+4, r27	; 0x04
	
	double xLongitudinalInnerLoopControl = adjustControlForServoLimits(xLongitudinalInnerLoopControlBeforeServoLimits, minLongitudeServoControlValue, maxLongitudeServoControlValue);
    1492:	89 85       	ldd	r24, Y+9	; 0x09
    1494:	9a 85       	ldd	r25, Y+10	; 0x0a
    1496:	88 5a       	subi	r24, 0xA8	; 168
    1498:	9f 4f       	sbci	r25, 0xFF	; 255
    149a:	fc 01       	movw	r30, r24
    149c:	e0 80       	ld	r14, Z
    149e:	f1 80       	ldd	r15, Z+1	; 0x01
    14a0:	02 81       	ldd	r16, Z+2	; 0x02
    14a2:	13 81       	ldd	r17, Z+3	; 0x03
    14a4:	89 85       	ldd	r24, Y+9	; 0x09
    14a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    14a8:	8c 5a       	subi	r24, 0xAC	; 172
    14aa:	9f 4f       	sbci	r25, 0xFF	; 255
    14ac:	fc 01       	movw	r30, r24
    14ae:	20 81       	ld	r18, Z
    14b0:	31 81       	ldd	r19, Z+1	; 0x01
    14b2:	42 81       	ldd	r20, Z+2	; 0x02
    14b4:	53 81       	ldd	r21, Z+3	; 0x03
    14b6:	89 81       	ldd	r24, Y+1	; 0x01
    14b8:	9a 81       	ldd	r25, Y+2	; 0x02
    14ba:	ab 81       	ldd	r26, Y+3	; 0x03
    14bc:	bc 81       	ldd	r27, Y+4	; 0x04
    14be:	e9 85       	ldd	r30, Y+9	; 0x09
    14c0:	fa 85       	ldd	r31, Y+10	; 0x0a
    14c2:	67 01       	movw	r12, r14
    14c4:	78 01       	movw	r14, r16
    14c6:	89 01       	movw	r16, r18
    14c8:	9a 01       	movw	r18, r20
    14ca:	ac 01       	movw	r20, r24
    14cc:	bd 01       	movw	r22, r26
    14ce:	cf 01       	movw	r24, r30
    14d0:	0e 94 03 08 	call	0x1006	; 0x1006 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEddd>
    14d4:	dc 01       	movw	r26, r24
    14d6:	cb 01       	movw	r24, r22
    14d8:	8d 83       	std	Y+5, r24	; 0x05
    14da:	9e 83       	std	Y+6, r25	; 0x06
    14dc:	af 83       	std	Y+7, r26	; 0x07
    14de:	b8 87       	std	Y+8, r27	; 0x08
	
	model->LongitudeControlBeforeServoLimitsAdjustment(xLongitudinalInnerLoopControlBeforeServoLimits);
    14e0:	89 85       	ldd	r24, Y+9	; 0x09
    14e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    14e4:	fc 01       	movw	r30, r24
    14e6:	20 81       	ld	r18, Z
    14e8:	31 81       	ldd	r19, Z+1	; 0x01
    14ea:	89 81       	ldd	r24, Y+1	; 0x01
    14ec:	9a 81       	ldd	r25, Y+2	; 0x02
    14ee:	ab 81       	ldd	r26, Y+3	; 0x03
    14f0:	bc 81       	ldd	r27, Y+4	; 0x04
    14f2:	ac 01       	movw	r20, r24
    14f4:	bd 01       	movw	r22, r26
    14f6:	c9 01       	movw	r24, r18
    14f8:	0e 94 b9 02 	call	0x572	; 0x572 <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEd>
	
	model->LongitudeControl(xLongitudinalInnerLoopControl);
    14fc:	89 85       	ldd	r24, Y+9	; 0x09
    14fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    1500:	fc 01       	movw	r30, r24
    1502:	20 81       	ld	r18, Z
    1504:	31 81       	ldd	r19, Z+1	; 0x01
    1506:	8d 81       	ldd	r24, Y+5	; 0x05
    1508:	9e 81       	ldd	r25, Y+6	; 0x06
    150a:	af 81       	ldd	r26, Y+7	; 0x07
    150c:	b8 85       	ldd	r27, Y+8	; 0x08
    150e:	ac 01       	movw	r20, r24
    1510:	bd 01       	movw	r22, r26
    1512:	c9 01       	movw	r24, r18
    1514:	0e 94 ef 02 	call	0x5de	; 0x5de <_ZN10helicopter5model11SystemModel16LongitudeControlEd>
	
	servoDriver->controlLongitudinal(xLongitudinalInnerLoopControl);
    1518:	89 85       	ldd	r24, Y+9	; 0x09
    151a:	9a 85       	ldd	r25, Y+10	; 0x0a
    151c:	fc 01       	movw	r30, r24
    151e:	22 81       	ldd	r18, Z+2	; 0x02
    1520:	33 81       	ldd	r19, Z+3	; 0x03
    1522:	8d 81       	ldd	r24, Y+5	; 0x05
    1524:	9e 81       	ldd	r25, Y+6	; 0x06
    1526:	af 81       	ldd	r26, Y+7	; 0x07
    1528:	b8 85       	ldd	r27, Y+8	; 0x08
    152a:	ac 01       	movw	r20, r24
    152c:	bd 01       	movw	r22, r26
    152e:	c9 01       	movw	r24, r18
    1530:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <_ZN10helicopter7drivers11ServoDriver19controlLongitudinalEd>
}
    1534:	2a 96       	adiw	r28, 0x0a	; 10
    1536:	0f b6       	in	r0, 0x3f	; 63
    1538:	f8 94       	cli
    153a:	de bf       	out	0x3e, r29	; 62
    153c:	0f be       	out	0x3f, r0	; 63
    153e:	cd bf       	out	0x3d, r28	; 61
    1540:	df 91       	pop	r29
    1542:	cf 91       	pop	r28
    1544:	1f 91       	pop	r17
    1546:	0f 91       	pop	r16
    1548:	ff 90       	pop	r15
    154a:	ef 90       	pop	r14
    154c:	df 90       	pop	r13
    154e:	cf 90       	pop	r12
    1550:	bf 90       	pop	r11
    1552:	af 90       	pop	r10
    1554:	9f 90       	pop	r9
    1556:	8f 90       	pop	r8
    1558:	7f 90       	pop	r7
    155a:	6f 90       	pop	r6
    155c:	08 95       	ret

0000155e <_ZN10helicopter10controller13PIDController34tailRotorCollectiveOuterLoopUpdateEv>:
	
	servoDriver->controlLongitudinal(yLateralInnerLoopControl);
}

void PIDController::tailRotorCollectiveOuterLoopUpdate()
{
    155e:	7f 92       	push	r7
    1560:	8f 92       	push	r8
    1562:	9f 92       	push	r9
    1564:	af 92       	push	r10
    1566:	bf 92       	push	r11
    1568:	cf 92       	push	r12
    156a:	df 92       	push	r13
    156c:	ef 92       	push	r14
    156e:	ff 92       	push	r15
    1570:	0f 93       	push	r16
    1572:	1f 93       	push	r17
    1574:	cf 93       	push	r28
    1576:	df 93       	push	r29
    1578:	cd b7       	in	r28, 0x3d	; 61
    157a:	de b7       	in	r29, 0x3e	; 62
    157c:	6a 97       	sbiw	r28, 0x1a	; 26
    157e:	0f b6       	in	r0, 0x3f	; 63
    1580:	f8 94       	cli
    1582:	de bf       	out	0x3e, r29	; 62
    1584:	0f be       	out	0x3f, r0	; 63
    1586:	cd bf       	out	0x3d, r28	; 61
    1588:	9a 8f       	std	Y+26, r25	; 0x1a
    158a:	89 8f       	std	Y+25, r24	; 0x19
	double yawProportional = calculateProportional(model->MagYawDegrees(), model->ReferenceMagYawDegrees());
    158c:	89 8d       	ldd	r24, Y+25	; 0x19
    158e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1590:	fc 01       	movw	r30, r24
    1592:	80 81       	ld	r24, Z
    1594:	91 81       	ldd	r25, Z+1	; 0x01
    1596:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_ZNK10helicopter5model11SystemModel22ReferenceMagYawDegreesEv>
    159a:	6b 01       	movw	r12, r22
    159c:	7c 01       	movw	r14, r24
    159e:	89 8d       	ldd	r24, Y+25	; 0x19
    15a0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    15a2:	fc 01       	movw	r30, r24
    15a4:	80 81       	ld	r24, Z
    15a6:	91 81       	ldd	r25, Z+1	; 0x01
    15a8:	0e 94 3d 01 	call	0x27a	; 0x27a <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>
    15ac:	dc 01       	movw	r26, r24
    15ae:	cb 01       	movw	r24, r22
    15b0:	e9 8d       	ldd	r30, Y+25	; 0x19
    15b2:	fa 8d       	ldd	r31, Y+26	; 0x1a
    15b4:	97 01       	movw	r18, r14
    15b6:	86 01       	movw	r16, r12
    15b8:	ac 01       	movw	r20, r24
    15ba:	bd 01       	movw	r22, r26
    15bc:	cf 01       	movw	r24, r30
    15be:	0e 94 0f 06 	call	0xc1e	; 0xc1e <_ZN10helicopter10controller13PIDController21calculateProportionalEdd>
    15c2:	dc 01       	movw	r26, r24
    15c4:	cb 01       	movw	r24, r22
    15c6:	89 83       	std	Y+1, r24	; 0x01
    15c8:	9a 83       	std	Y+2, r25	; 0x02
    15ca:	ab 83       	std	Y+3, r26	; 0x03
    15cc:	bc 83       	std	Y+4, r27	; 0x04
	
	yawProportional = convertYawErrorFrom360to180(yawProportional);
    15ce:	89 81       	ldd	r24, Y+1	; 0x01
    15d0:	9a 81       	ldd	r25, Y+2	; 0x02
    15d2:	ab 81       	ldd	r26, Y+3	; 0x03
    15d4:	bc 81       	ldd	r27, Y+4	; 0x04
    15d6:	29 8d       	ldd	r18, Y+25	; 0x19
    15d8:	3a 8d       	ldd	r19, Y+26	; 0x1a
    15da:	ac 01       	movw	r20, r24
    15dc:	bd 01       	movw	r22, r26
    15de:	c9 01       	movw	r24, r18
    15e0:	0e 94 4e 0c 	call	0x189c	; 0x189c <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ed>
    15e4:	dc 01       	movw	r26, r24
    15e6:	cb 01       	movw	r24, r22
    15e8:	89 83       	std	Y+1, r24	; 0x01
    15ea:	9a 83       	std	Y+2, r25	; 0x02
    15ec:	ab 83       	std	Y+3, r26	; 0x03
    15ee:	bc 83       	std	Y+4, r27	; 0x04
	
	double yawIntegralAntiWindup = calculateIntegralAntiWindup(model->YawControlBeforeServoLimitsAdjustment(), model->YawControl(), yawAntiWindupGain);
    15f0:	89 8d       	ldd	r24, Y+25	; 0x19
    15f2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    15f4:	fc 01       	movw	r30, r24
    15f6:	c0 88       	ldd	r12, Z+16	; 0x10
    15f8:	d1 88       	ldd	r13, Z+17	; 0x11
    15fa:	e2 88       	ldd	r14, Z+18	; 0x12
    15fc:	f3 88       	ldd	r15, Z+19	; 0x13
    15fe:	89 8d       	ldd	r24, Y+25	; 0x19
    1600:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1602:	fc 01       	movw	r30, r24
    1604:	80 81       	ld	r24, Z
    1606:	91 81       	ldd	r25, Z+1	; 0x01
    1608:	0e 94 69 01 	call	0x2d2	; 0x2d2 <_ZNK10helicopter5model11SystemModel10YawControlEv>
    160c:	4b 01       	movw	r8, r22
    160e:	5c 01       	movw	r10, r24
    1610:	89 8d       	ldd	r24, Y+25	; 0x19
    1612:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1614:	fc 01       	movw	r30, r24
    1616:	80 81       	ld	r24, Z
    1618:	91 81       	ldd	r25, Z+1	; 0x01
    161a:	0e 94 9f 01 	call	0x33e	; 0x33e <_ZNK10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEv>
    161e:	dc 01       	movw	r26, r24
    1620:	cb 01       	movw	r24, r22
    1622:	e9 8d       	ldd	r30, Y+25	; 0x19
    1624:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1626:	95 01       	movw	r18, r10
    1628:	84 01       	movw	r16, r8
    162a:	ac 01       	movw	r20, r24
    162c:	bd 01       	movw	r22, r26
    162e:	cf 01       	movw	r24, r30
    1630:	0e 94 3e 06 	call	0xc7c	; 0xc7c <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEddd>
    1634:	dc 01       	movw	r26, r24
    1636:	cb 01       	movw	r24, r22
    1638:	8d 83       	std	Y+5, r24	; 0x05
    163a:	9e 83       	std	Y+6, r25	; 0x06
    163c:	af 83       	std	Y+7, r26	; 0x07
    163e:	b8 87       	std	Y+8, r27	; 0x08
	double weightedYawIntegral = calculateIntegral(yawProportional, model->YawIntegral(), yawIntegralAntiWindup, yawIntegralGain);
    1640:	89 8d       	ldd	r24, Y+25	; 0x19
    1642:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1644:	fc 01       	movw	r30, r24
    1646:	a4 80       	ldd	r10, Z+4	; 0x04
    1648:	b5 80       	ldd	r11, Z+5	; 0x05
    164a:	c6 80       	ldd	r12, Z+6	; 0x06
    164c:	d7 80       	ldd	r13, Z+7	; 0x07
    164e:	89 8d       	ldd	r24, Y+25	; 0x19
    1650:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1652:	fc 01       	movw	r30, r24
    1654:	80 81       	ld	r24, Z
    1656:	91 81       	ldd	r25, Z+1	; 0x01
    1658:	0e 94 01 02 	call	0x402	; 0x402 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>
    165c:	9b 01       	movw	r18, r22
    165e:	ac 01       	movw	r20, r24
    1660:	ed 80       	ldd	r14, Y+5	; 0x05
    1662:	fe 80       	ldd	r15, Y+6	; 0x06
    1664:	0f 81       	ldd	r16, Y+7	; 0x07
    1666:	18 85       	ldd	r17, Y+8	; 0x08
    1668:	89 81       	ldd	r24, Y+1	; 0x01
    166a:	9a 81       	ldd	r25, Y+2	; 0x02
    166c:	ab 81       	ldd	r26, Y+3	; 0x03
    166e:	bc 81       	ldd	r27, Y+4	; 0x04
    1670:	e9 8d       	ldd	r30, Y+25	; 0x19
    1672:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1674:	45 01       	movw	r8, r10
    1676:	56 01       	movw	r10, r12
    1678:	67 01       	movw	r12, r14
    167a:	78 01       	movw	r14, r16
    167c:	89 01       	movw	r16, r18
    167e:	9a 01       	movw	r18, r20
    1680:	ac 01       	movw	r20, r24
    1682:	bd 01       	movw	r22, r26
    1684:	cf 01       	movw	r24, r30
    1686:	0e 94 8f 06 	call	0xd1e	; 0xd1e <_ZN10helicopter10controller13PIDController17calculateIntegralEdddd>
    168a:	dc 01       	movw	r26, r24
    168c:	cb 01       	movw	r24, r22
    168e:	89 87       	std	Y+9, r24	; 0x09
    1690:	9a 87       	std	Y+10, r25	; 0x0a
    1692:	ab 87       	std	Y+11, r26	; 0x0b
    1694:	bc 87       	std	Y+12, r27	; 0x0c
	double yawDerivativeError = calculateVelocityError(model->YawVelocityDegreesPerSecond(), model->ReferenceYawVelocityDegreesPerSecond());
    1696:	89 8d       	ldd	r24, Y+25	; 0x19
    1698:	9a 8d       	ldd	r25, Y+26	; 0x1a
    169a:	fc 01       	movw	r30, r24
    169c:	80 81       	ld	r24, Z
    169e:	91 81       	ldd	r25, Z+1	; 0x01
    16a0:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <_ZNK10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEv>
    16a4:	6b 01       	movw	r12, r22
    16a6:	7c 01       	movw	r14, r24
    16a8:	89 8d       	ldd	r24, Y+25	; 0x19
    16aa:	9a 8d       	ldd	r25, Y+26	; 0x1a
    16ac:	fc 01       	movw	r30, r24
    16ae:	80 81       	ld	r24, Z
    16b0:	91 81       	ldd	r25, Z+1	; 0x01
    16b2:	0e 94 d5 01 	call	0x3aa	; 0x3aa <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>
    16b6:	dc 01       	movw	r26, r24
    16b8:	cb 01       	movw	r24, r22
    16ba:	e9 8d       	ldd	r30, Y+25	; 0x19
    16bc:	fa 8d       	ldd	r31, Y+26	; 0x1a
    16be:	97 01       	movw	r18, r14
    16c0:	86 01       	movw	r16, r12
    16c2:	ac 01       	movw	r20, r24
    16c4:	bd 01       	movw	r22, r26
    16c6:	cf 01       	movw	r24, r30
    16c8:	0e 94 61 07 	call	0xec2	; 0xec2 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEdd>
    16cc:	dc 01       	movw	r26, r24
    16ce:	cb 01       	movw	r24, r22
    16d0:	8d 87       	std	Y+13, r24	; 0x0d
    16d2:	9e 87       	std	Y+14, r25	; 0x0e
    16d4:	af 87       	std	Y+15, r26	; 0x0f
    16d6:	b8 8b       	std	Y+16, r27	; 0x10
	double yawControlBeforeServoLimitsAdjustment = calculateOuterLoopControlValue(yawProportional, yawDerivativeError, weightedYawIntegral, yawProportionalGain, yawDerivativeGain);
    16d8:	89 8d       	ldd	r24, Y+25	; 0x19
    16da:	9a 8d       	ldd	r25, Y+26	; 0x1a
    16dc:	fc 01       	movw	r30, r24
    16de:	80 85       	ldd	r24, Z+8	; 0x08
    16e0:	91 85       	ldd	r25, Z+9	; 0x09
    16e2:	a2 85       	ldd	r26, Z+10	; 0x0a
    16e4:	b3 85       	ldd	r27, Z+11	; 0x0b
    16e6:	29 8d       	ldd	r18, Y+25	; 0x19
    16e8:	3a 8d       	ldd	r19, Y+26	; 0x1a
    16ea:	f9 01       	movw	r30, r18
    16ec:	84 84       	ldd	r8, Z+12	; 0x0c
    16ee:	95 84       	ldd	r9, Z+13	; 0x0d
    16f0:	a6 84       	ldd	r10, Z+14	; 0x0e
    16f2:	b7 84       	ldd	r11, Z+15	; 0x0f
    16f4:	c9 84       	ldd	r12, Y+9	; 0x09
    16f6:	da 84       	ldd	r13, Y+10	; 0x0a
    16f8:	eb 84       	ldd	r14, Y+11	; 0x0b
    16fa:	fc 84       	ldd	r15, Y+12	; 0x0c
    16fc:	0d 85       	ldd	r16, Y+13	; 0x0d
    16fe:	1e 85       	ldd	r17, Y+14	; 0x0e
    1700:	2f 85       	ldd	r18, Y+15	; 0x0f
    1702:	38 89       	ldd	r19, Y+16	; 0x10
    1704:	49 81       	ldd	r20, Y+1	; 0x01
    1706:	5a 81       	ldd	r21, Y+2	; 0x02
    1708:	6b 81       	ldd	r22, Y+3	; 0x03
    170a:	7c 81       	ldd	r23, Y+4	; 0x04
    170c:	e9 8d       	ldd	r30, Y+25	; 0x19
    170e:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1710:	7b 2e       	mov	r7, r27
    1712:	7f 92       	push	r7
    1714:	7a 2e       	mov	r7, r26
    1716:	7f 92       	push	r7
    1718:	79 2e       	mov	r7, r25
    171a:	7f 92       	push	r7
    171c:	8f 93       	push	r24
    171e:	cf 01       	movw	r24, r30
    1720:	0e 94 90 07 	call	0xf20	; 0xf20 <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEddddd>
    1724:	0f 90       	pop	r0
    1726:	0f 90       	pop	r0
    1728:	0f 90       	pop	r0
    172a:	0f 90       	pop	r0
    172c:	dc 01       	movw	r26, r24
    172e:	cb 01       	movw	r24, r22
    1730:	89 8b       	std	Y+17, r24	; 0x11
    1732:	9a 8b       	std	Y+18, r25	; 0x12
    1734:	ab 8b       	std	Y+19, r26	; 0x13
    1736:	bc 8b       	std	Y+20, r27	; 0x14
	double yawControl = adjustControlForServoLimits(yawControlBeforeServoLimitsAdjustment, minYawServoControlValue, maxYawServoControlValue);
    1738:	89 8d       	ldd	r24, Y+25	; 0x19
    173a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    173c:	80 5b       	subi	r24, 0xB0	; 176
    173e:	9f 4f       	sbci	r25, 0xFF	; 255
    1740:	fc 01       	movw	r30, r24
    1742:	e0 80       	ld	r14, Z
    1744:	f1 80       	ldd	r15, Z+1	; 0x01
    1746:	02 81       	ldd	r16, Z+2	; 0x02
    1748:	13 81       	ldd	r17, Z+3	; 0x03
    174a:	89 8d       	ldd	r24, Y+25	; 0x19
    174c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    174e:	84 5b       	subi	r24, 0xB4	; 180
    1750:	9f 4f       	sbci	r25, 0xFF	; 255
    1752:	fc 01       	movw	r30, r24
    1754:	20 81       	ld	r18, Z
    1756:	31 81       	ldd	r19, Z+1	; 0x01
    1758:	42 81       	ldd	r20, Z+2	; 0x02
    175a:	53 81       	ldd	r21, Z+3	; 0x03
    175c:	89 89       	ldd	r24, Y+17	; 0x11
    175e:	9a 89       	ldd	r25, Y+18	; 0x12
    1760:	ab 89       	ldd	r26, Y+19	; 0x13
    1762:	bc 89       	ldd	r27, Y+20	; 0x14
    1764:	e9 8d       	ldd	r30, Y+25	; 0x19
    1766:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1768:	67 01       	movw	r12, r14
    176a:	78 01       	movw	r14, r16
    176c:	89 01       	movw	r16, r18
    176e:	9a 01       	movw	r18, r20
    1770:	ac 01       	movw	r20, r24
    1772:	bd 01       	movw	r22, r26
    1774:	cf 01       	movw	r24, r30
    1776:	0e 94 03 08 	call	0x1006	; 0x1006 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEddd>
    177a:	dc 01       	movw	r26, r24
    177c:	cb 01       	movw	r24, r22
    177e:	8d 8b       	std	Y+21, r24	; 0x15
    1780:	9e 8b       	std	Y+22, r25	; 0x16
    1782:	af 8b       	std	Y+23, r26	; 0x17
    1784:	b8 8f       	std	Y+24, r27	; 0x18
	
	model->YawControl(yawControl);
    1786:	89 8d       	ldd	r24, Y+25	; 0x19
    1788:	9a 8d       	ldd	r25, Y+26	; 0x1a
    178a:	fc 01       	movw	r30, r24
    178c:	20 81       	ld	r18, Z
    178e:	31 81       	ldd	r19, Z+1	; 0x01
    1790:	8d 89       	ldd	r24, Y+21	; 0x15
    1792:	9e 89       	ldd	r25, Y+22	; 0x16
    1794:	af 89       	ldd	r26, Y+23	; 0x17
    1796:	b8 8d       	ldd	r27, Y+24	; 0x18
    1798:	ac 01       	movw	r20, r24
    179a:	bd 01       	movw	r22, r26
    179c:	c9 01       	movw	r24, r18
    179e:	0e 94 7f 01 	call	0x2fe	; 0x2fe <_ZN10helicopter5model11SystemModel10YawControlEd>
	model->YawControlBeforeServoLimitsAdjustment(yawControlBeforeServoLimitsAdjustment);
    17a2:	89 8d       	ldd	r24, Y+25	; 0x19
    17a4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    17a6:	fc 01       	movw	r30, r24
    17a8:	20 81       	ld	r18, Z
    17aa:	31 81       	ldd	r19, Z+1	; 0x01
    17ac:	89 89       	ldd	r24, Y+17	; 0x11
    17ae:	9a 89       	ldd	r25, Y+18	; 0x12
    17b0:	ab 89       	ldd	r26, Y+19	; 0x13
    17b2:	bc 89       	ldd	r27, Y+20	; 0x14
    17b4:	ac 01       	movw	r20, r24
    17b6:	bd 01       	movw	r22, r26
    17b8:	c9 01       	movw	r24, r18
    17ba:	0e 94 b5 01 	call	0x36a	; 0x36a <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEd>
	model->YawIntegral(weightedYawIntegral);
    17be:	89 8d       	ldd	r24, Y+25	; 0x19
    17c0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    17c2:	fc 01       	movw	r30, r24
    17c4:	20 81       	ld	r18, Z
    17c6:	31 81       	ldd	r19, Z+1	; 0x01
    17c8:	89 85       	ldd	r24, Y+9	; 0x09
    17ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    17cc:	ab 85       	ldd	r26, Y+11	; 0x0b
    17ce:	bc 85       	ldd	r27, Y+12	; 0x0c
    17d0:	ac 01       	movw	r20, r24
    17d2:	bd 01       	movw	r22, r26
    17d4:	c9 01       	movw	r24, r18
    17d6:	0e 94 17 02 	call	0x42e	; 0x42e <_ZN10helicopter5model11SystemModel11YawIntegralEd>
	model->YawProportional(yawProportional);
    17da:	89 8d       	ldd	r24, Y+25	; 0x19
    17dc:	9a 8d       	ldd	r25, Y+26	; 0x1a
    17de:	fc 01       	movw	r30, r24
    17e0:	20 81       	ld	r18, Z
    17e2:	31 81       	ldd	r19, Z+1	; 0x01
    17e4:	89 81       	ldd	r24, Y+1	; 0x01
    17e6:	9a 81       	ldd	r25, Y+2	; 0x02
    17e8:	ab 81       	ldd	r26, Y+3	; 0x03
    17ea:	bc 81       	ldd	r27, Y+4	; 0x04
    17ec:	ac 01       	movw	r20, r24
    17ee:	bd 01       	movw	r22, r26
    17f0:	c9 01       	movw	r24, r18
    17f2:	0e 94 37 02 	call	0x46e	; 0x46e <_ZN10helicopter5model11SystemModel15YawProportionalEd>
	model->YawDerivativeError(yawDerivativeError);
    17f6:	89 8d       	ldd	r24, Y+25	; 0x19
    17f8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    17fa:	fc 01       	movw	r30, r24
    17fc:	20 81       	ld	r18, Z
    17fe:	31 81       	ldd	r19, Z+1	; 0x01
    1800:	8d 85       	ldd	r24, Y+13	; 0x0d
    1802:	9e 85       	ldd	r25, Y+14	; 0x0e
    1804:	af 85       	ldd	r26, Y+15	; 0x0f
    1806:	b8 89       	ldd	r27, Y+16	; 0x10
    1808:	ac 01       	movw	r20, r24
    180a:	bd 01       	movw	r22, r26
    180c:	c9 01       	movw	r24, r18
    180e:	0e 94 57 02 	call	0x4ae	; 0x4ae <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEd>
	
	servoDriver->controlTailRotorCollective(yawControl);
    1812:	89 8d       	ldd	r24, Y+25	; 0x19
    1814:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1816:	fc 01       	movw	r30, r24
    1818:	22 81       	ldd	r18, Z+2	; 0x02
    181a:	33 81       	ldd	r19, Z+3	; 0x03
    181c:	8d 89       	ldd	r24, Y+21	; 0x15
    181e:	9e 89       	ldd	r25, Y+22	; 0x16
    1820:	af 89       	ldd	r26, Y+23	; 0x17
    1822:	b8 8d       	ldd	r27, Y+24	; 0x18
    1824:	ac 01       	movw	r20, r24
    1826:	bd 01       	movw	r22, r26
    1828:	c9 01       	movw	r24, r18
    182a:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <_ZN10helicopter7drivers11ServoDriver26controlTailRotorCollectiveEd>
}
    182e:	6a 96       	adiw	r28, 0x1a	; 26
    1830:	0f b6       	in	r0, 0x3f	; 63
    1832:	f8 94       	cli
    1834:	de bf       	out	0x3e, r29	; 62
    1836:	0f be       	out	0x3f, r0	; 63
    1838:	cd bf       	out	0x3d, r28	; 61
    183a:	df 91       	pop	r29
    183c:	cf 91       	pop	r28
    183e:	1f 91       	pop	r17
    1840:	0f 91       	pop	r16
    1842:	ff 90       	pop	r15
    1844:	ef 90       	pop	r14
    1846:	df 90       	pop	r13
    1848:	cf 90       	pop	r12
    184a:	bf 90       	pop	r11
    184c:	af 90       	pop	r10
    184e:	9f 90       	pop	r9
    1850:	8f 90       	pop	r8
    1852:	7f 90       	pop	r7
    1854:	08 95       	ret

00001856 <_ZN10helicopter10controller13PIDController13addBlownFrameEv>:



//TODO WTF IS THIS DOING HERE?? THIS IS THE WRONG CONTROLLER!!
void PIDController::addBlownFrame()
{
    1856:	cf 93       	push	r28
    1858:	df 93       	push	r29
    185a:	1f 92       	push	r1
    185c:	1f 92       	push	r1
    185e:	cd b7       	in	r28, 0x3d	; 61
    1860:	de b7       	in	r29, 0x3e	; 62
    1862:	9a 83       	std	Y+2, r25	; 0x02
    1864:	89 83       	std	Y+1, r24	; 0x01
	model->BlownFrames(model->BlownFrames() + 1);
    1866:	89 81       	ldd	r24, Y+1	; 0x01
    1868:	9a 81       	ldd	r25, Y+2	; 0x02
    186a:	fc 01       	movw	r30, r24
    186c:	80 81       	ld	r24, Z
    186e:	91 81       	ldd	r25, Z+1	; 0x01
    1870:	0e 94 ca 04 	call	0x994	; 0x994 <_ZNK10helicopter5model11SystemModel11BlownFramesEv>
    1874:	dc 01       	movw	r26, r24
    1876:	cb 01       	movw	r24, r22
    1878:	01 96       	adiw	r24, 0x01	; 1
    187a:	a1 1d       	adc	r26, r1
    187c:	b1 1d       	adc	r27, r1
    187e:	29 81       	ldd	r18, Y+1	; 0x01
    1880:	3a 81       	ldd	r19, Y+2	; 0x02
    1882:	f9 01       	movw	r30, r18
    1884:	20 81       	ld	r18, Z
    1886:	31 81       	ldd	r19, Z+1	; 0x01
    1888:	ac 01       	movw	r20, r24
    188a:	bd 01       	movw	r22, r26
    188c:	c9 01       	movw	r24, r18
    188e:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <_ZN10helicopter5model11SystemModel11BlownFramesEl>
}
    1892:	0f 90       	pop	r0
    1894:	0f 90       	pop	r0
    1896:	df 91       	pop	r29
    1898:	cf 91       	pop	r28
    189a:	08 95       	ret

0000189c <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ed>:

double PIDController::convertYawErrorFrom360to180( double yawError ) 
{
    189c:	cf 93       	push	r28
    189e:	df 93       	push	r29
    18a0:	00 d0       	rcall	.+0      	; 0x18a2 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ed+0x6>
    18a2:	00 d0       	rcall	.+0      	; 0x18a4 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ed+0x8>
    18a4:	cd b7       	in	r28, 0x3d	; 61
    18a6:	de b7       	in	r29, 0x3e	; 62
    18a8:	9a 83       	std	Y+2, r25	; 0x02
    18aa:	89 83       	std	Y+1, r24	; 0x01
    18ac:	4b 83       	std	Y+3, r20	; 0x03
    18ae:	5c 83       	std	Y+4, r21	; 0x04
    18b0:	6d 83       	std	Y+5, r22	; 0x05
    18b2:	7e 83       	std	Y+6, r23	; 0x06
	if (yawError >= 180)
    18b4:	20 e0       	ldi	r18, 0x00	; 0
    18b6:	30 e0       	ldi	r19, 0x00	; 0
    18b8:	44 e3       	ldi	r20, 0x34	; 52
    18ba:	53 e4       	ldi	r21, 0x43	; 67
    18bc:	6b 81       	ldd	r22, Y+3	; 0x03
    18be:	7c 81       	ldd	r23, Y+4	; 0x04
    18c0:	8d 81       	ldd	r24, Y+5	; 0x05
    18c2:	9e 81       	ldd	r25, Y+6	; 0x06
    18c4:	0e 94 56 41 	call	0x82ac	; 0x82ac <__gesf2>
    18c8:	88 23       	and	r24, r24
    18ca:	8c f0       	brlt	.+34     	; 0x18ee <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ed+0x52>
	{
		yawError = yawError - 360;
    18cc:	20 e0       	ldi	r18, 0x00	; 0
    18ce:	30 e0       	ldi	r19, 0x00	; 0
    18d0:	44 eb       	ldi	r20, 0xB4	; 180
    18d2:	53 e4       	ldi	r21, 0x43	; 67
    18d4:	6b 81       	ldd	r22, Y+3	; 0x03
    18d6:	7c 81       	ldd	r23, Y+4	; 0x04
    18d8:	8d 81       	ldd	r24, Y+5	; 0x05
    18da:	9e 81       	ldd	r25, Y+6	; 0x06
    18dc:	0e 94 13 3f 	call	0x7e26	; 0x7e26 <__subsf3>
    18e0:	dc 01       	movw	r26, r24
    18e2:	cb 01       	movw	r24, r22
    18e4:	8b 83       	std	Y+3, r24	; 0x03
    18e6:	9c 83       	std	Y+4, r25	; 0x04
    18e8:	ad 83       	std	Y+5, r26	; 0x05
    18ea:	be 83       	std	Y+6, r27	; 0x06
    18ec:	1c c0       	rjmp	.+56     	; 0x1926 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ed+0x8a>
	}
	else if (yawError < -180)
    18ee:	20 e0       	ldi	r18, 0x00	; 0
    18f0:	30 e0       	ldi	r19, 0x00	; 0
    18f2:	44 e3       	ldi	r20, 0x34	; 52
    18f4:	53 ec       	ldi	r21, 0xC3	; 195
    18f6:	6b 81       	ldd	r22, Y+3	; 0x03
    18f8:	7c 81       	ldd	r23, Y+4	; 0x04
    18fa:	8d 81       	ldd	r24, Y+5	; 0x05
    18fc:	9e 81       	ldd	r25, Y+6	; 0x06
    18fe:	0e 94 78 3f 	call	0x7ef0	; 0x7ef0 <__cmpsf2>
    1902:	88 23       	and	r24, r24
    1904:	84 f4       	brge	.+32     	; 0x1926 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ed+0x8a>
	{
		yawError = yawError + 360;
    1906:	20 e0       	ldi	r18, 0x00	; 0
    1908:	30 e0       	ldi	r19, 0x00	; 0
    190a:	44 eb       	ldi	r20, 0xB4	; 180
    190c:	53 e4       	ldi	r21, 0x43	; 67
    190e:	6b 81       	ldd	r22, Y+3	; 0x03
    1910:	7c 81       	ldd	r23, Y+4	; 0x04
    1912:	8d 81       	ldd	r24, Y+5	; 0x05
    1914:	9e 81       	ldd	r25, Y+6	; 0x06
    1916:	0e 94 14 3f 	call	0x7e28	; 0x7e28 <__addsf3>
    191a:	dc 01       	movw	r26, r24
    191c:	cb 01       	movw	r24, r22
    191e:	8b 83       	std	Y+3, r24	; 0x03
    1920:	9c 83       	std	Y+4, r25	; 0x04
    1922:	ad 83       	std	Y+5, r26	; 0x05
    1924:	be 83       	std	Y+6, r27	; 0x06
	}	
	
	return yawError;
    1926:	8b 81       	ldd	r24, Y+3	; 0x03
    1928:	9c 81       	ldd	r25, Y+4	; 0x04
    192a:	ad 81       	ldd	r26, Y+5	; 0x05
    192c:	be 81       	ldd	r27, Y+6	; 0x06
}
    192e:	bc 01       	movw	r22, r24
    1930:	cd 01       	movw	r24, r26
    1932:	26 96       	adiw	r28, 0x06	; 6
    1934:	0f b6       	in	r0, 0x3f	; 63
    1936:	f8 94       	cli
    1938:	de bf       	out	0x3e, r29	; 62
    193a:	0f be       	out	0x3f, r0	; 63
    193c:	cd bf       	out	0x3d, r28	; 61
    193e:	df 91       	pop	r29
    1940:	cf 91       	pop	r28
    1942:	08 95       	ret

00001944 <_ZN10helicopter7drivers12SerialDriverD1Ev>:
				useDoubleSpeedMode(useDoubleSpeedMode)
				{
					
				}
						
				virtual ~SerialDriver()
    1944:	cf 93       	push	r28
    1946:	df 93       	push	r29
    1948:	1f 92       	push	r1
    194a:	1f 92       	push	r1
    194c:	cd b7       	in	r28, 0x3d	; 61
    194e:	de b7       	in	r29, 0x3e	; 62
    1950:	9a 83       	std	Y+2, r25	; 0x02
    1952:	89 83       	std	Y+1, r24	; 0x01
				{
    1954:	89 81       	ldd	r24, Y+1	; 0x01
    1956:	9a 81       	ldd	r25, Y+2	; 0x02
    1958:	2a e0       	ldi	r18, 0x0A	; 10
    195a:	32 e0       	ldi	r19, 0x02	; 2
    195c:	fc 01       	movw	r30, r24
    195e:	31 83       	std	Z+1, r19	; 0x01
    1960:	20 83       	st	Z, r18
					
				}
    1962:	80 e0       	ldi	r24, 0x00	; 0
    1964:	90 e0       	ldi	r25, 0x00	; 0
    1966:	81 70       	andi	r24, 0x01	; 1
    1968:	99 27       	eor	r25, r25
    196a:	00 97       	sbiw	r24, 0x00	; 0
    196c:	21 f0       	breq	.+8      	; 0x1976 <_ZN10helicopter7drivers12SerialDriverD1Ev+0x32>
    196e:	89 81       	ldd	r24, Y+1	; 0x01
    1970:	9a 81       	ldd	r25, Y+2	; 0x02
    1972:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    1976:	0f 90       	pop	r0
    1978:	0f 90       	pop	r0
    197a:	df 91       	pop	r29
    197c:	cf 91       	pop	r28
    197e:	08 95       	ret

00001980 <_ZN10helicopter7drivers12SerialDriverD0Ev>:
				useDoubleSpeedMode(useDoubleSpeedMode)
				{
					
				}
						
				virtual ~SerialDriver()
    1980:	cf 93       	push	r28
    1982:	df 93       	push	r29
    1984:	1f 92       	push	r1
    1986:	1f 92       	push	r1
    1988:	cd b7       	in	r28, 0x3d	; 61
    198a:	de b7       	in	r29, 0x3e	; 62
    198c:	9a 83       	std	Y+2, r25	; 0x02
    198e:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    1990:	89 81       	ldd	r24, Y+1	; 0x01
    1992:	9a 81       	ldd	r25, Y+2	; 0x02
    1994:	0e 94 a2 0c 	call	0x1944	; 0x1944 <_ZN10helicopter7drivers12SerialDriverD1Ev>
    1998:	89 81       	ldd	r24, Y+1	; 0x01
    199a:	9a 81       	ldd	r25, Y+2	; 0x02
    199c:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    19a0:	0f 90       	pop	r0
    19a2:	0f 90       	pop	r0
    19a4:	df 91       	pop	r29
    19a6:	cf 91       	pop	r28
    19a8:	08 95       	ret

000019aa <_ZN10helicopter7drivers12SerialDriver10initializeEv>:
#include "CommonHeader.h"

using namespace helicopter::drivers;

void SerialDriver::initialize()
{
    19aa:	cf 93       	push	r28
    19ac:	df 93       	push	r29
    19ae:	00 d0       	rcall	.+0      	; 0x19b0 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x6>
    19b0:	1f 92       	push	r1
    19b2:	cd b7       	in	r28, 0x3d	; 61
    19b4:	de b7       	in	r29, 0x3e	; 62
    19b6:	9c 83       	std	Y+4, r25	; 0x04
    19b8:	8b 83       	std	Y+3, r24	; 0x03
	unsigned int baudPrescaller = 0;
    19ba:	1a 82       	std	Y+2, r1	; 0x02
    19bc:	19 82       	std	Y+1, r1	; 0x01
	
	if (useDoubleSpeedMode)
    19be:	8b 81       	ldd	r24, Y+3	; 0x03
    19c0:	9c 81       	ldd	r25, Y+4	; 0x04
    19c2:	fc 01       	movw	r30, r24
    19c4:	82 85       	ldd	r24, Z+10	; 0x0a
    19c6:	88 23       	and	r24, r24
    19c8:	b9 f1       	breq	.+110    	; 0x1a38 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x8e>
	{
		baudPrescaller = floor((((F_CPU / (baudRate * 8UL))) - 1UL));
    19ca:	8b 81       	ldd	r24, Y+3	; 0x03
    19cc:	9c 81       	ldd	r25, Y+4	; 0x04
    19ce:	fc 01       	movw	r30, r24
    19d0:	82 81       	ldd	r24, Z+2	; 0x02
    19d2:	93 81       	ldd	r25, Z+3	; 0x03
    19d4:	a4 81       	ldd	r26, Z+4	; 0x04
    19d6:	b5 81       	ldd	r27, Z+5	; 0x05
    19d8:	88 0f       	add	r24, r24
    19da:	99 1f       	adc	r25, r25
    19dc:	aa 1f       	adc	r26, r26
    19de:	bb 1f       	adc	r27, r27
    19e0:	88 0f       	add	r24, r24
    19e2:	99 1f       	adc	r25, r25
    19e4:	aa 1f       	adc	r26, r26
    19e6:	bb 1f       	adc	r27, r27
    19e8:	88 0f       	add	r24, r24
    19ea:	99 1f       	adc	r25, r25
    19ec:	aa 1f       	adc	r26, r26
    19ee:	bb 1f       	adc	r27, r27
    19f0:	9c 01       	movw	r18, r24
    19f2:	ad 01       	movw	r20, r26
    19f4:	80 e0       	ldi	r24, 0x00	; 0
    19f6:	94 e2       	ldi	r25, 0x24	; 36
    19f8:	a4 ef       	ldi	r26, 0xF4	; 244
    19fa:	b0 e0       	ldi	r27, 0x00	; 0
    19fc:	bc 01       	movw	r22, r24
    19fe:	cd 01       	movw	r24, r26
    1a00:	0e 94 88 43 	call	0x8710	; 0x8710 <__udivmodsi4>
    1a04:	da 01       	movw	r26, r20
    1a06:	c9 01       	movw	r24, r18
    1a08:	01 97       	sbiw	r24, 0x01	; 1
    1a0a:	a1 09       	sbc	r26, r1
    1a0c:	b1 09       	sbc	r27, r1
    1a0e:	bc 01       	movw	r22, r24
    1a10:	cd 01       	movw	r24, r26
    1a12:	0e 94 18 40 	call	0x8030	; 0x8030 <__floatunsisf>
    1a16:	dc 01       	movw	r26, r24
    1a18:	cb 01       	movw	r24, r22
    1a1a:	bc 01       	movw	r22, r24
    1a1c:	cd 01       	movw	r24, r26
    1a1e:	0e 94 55 40 	call	0x80aa	; 0x80aa <floor>
    1a22:	dc 01       	movw	r26, r24
    1a24:	cb 01       	movw	r24, r22
    1a26:	bc 01       	movw	r22, r24
    1a28:	cd 01       	movw	r24, r26
    1a2a:	0e 94 ec 3f 	call	0x7fd8	; 0x7fd8 <__fixunssfsi>
    1a2e:	dc 01       	movw	r26, r24
    1a30:	cb 01       	movw	r24, r22
    1a32:	9a 83       	std	Y+2, r25	; 0x02
    1a34:	89 83       	std	Y+1, r24	; 0x01
    1a36:	3a c0       	rjmp	.+116    	; 0x1aac <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x102>
	}else
	{
		//Calculation for the baud prescaller 
		baudPrescaller = floor((((F_CPU / (baudRate * 16UL))) - 1UL));
    1a38:	8b 81       	ldd	r24, Y+3	; 0x03
    1a3a:	9c 81       	ldd	r25, Y+4	; 0x04
    1a3c:	fc 01       	movw	r30, r24
    1a3e:	82 81       	ldd	r24, Z+2	; 0x02
    1a40:	93 81       	ldd	r25, Z+3	; 0x03
    1a42:	a4 81       	ldd	r26, Z+4	; 0x04
    1a44:	b5 81       	ldd	r27, Z+5	; 0x05
    1a46:	88 0f       	add	r24, r24
    1a48:	99 1f       	adc	r25, r25
    1a4a:	aa 1f       	adc	r26, r26
    1a4c:	bb 1f       	adc	r27, r27
    1a4e:	88 0f       	add	r24, r24
    1a50:	99 1f       	adc	r25, r25
    1a52:	aa 1f       	adc	r26, r26
    1a54:	bb 1f       	adc	r27, r27
    1a56:	88 0f       	add	r24, r24
    1a58:	99 1f       	adc	r25, r25
    1a5a:	aa 1f       	adc	r26, r26
    1a5c:	bb 1f       	adc	r27, r27
    1a5e:	88 0f       	add	r24, r24
    1a60:	99 1f       	adc	r25, r25
    1a62:	aa 1f       	adc	r26, r26
    1a64:	bb 1f       	adc	r27, r27
    1a66:	9c 01       	movw	r18, r24
    1a68:	ad 01       	movw	r20, r26
    1a6a:	80 e0       	ldi	r24, 0x00	; 0
    1a6c:	94 e2       	ldi	r25, 0x24	; 36
    1a6e:	a4 ef       	ldi	r26, 0xF4	; 244
    1a70:	b0 e0       	ldi	r27, 0x00	; 0
    1a72:	bc 01       	movw	r22, r24
    1a74:	cd 01       	movw	r24, r26
    1a76:	0e 94 88 43 	call	0x8710	; 0x8710 <__udivmodsi4>
    1a7a:	da 01       	movw	r26, r20
    1a7c:	c9 01       	movw	r24, r18
    1a7e:	01 97       	sbiw	r24, 0x01	; 1
    1a80:	a1 09       	sbc	r26, r1
    1a82:	b1 09       	sbc	r27, r1
    1a84:	bc 01       	movw	r22, r24
    1a86:	cd 01       	movw	r24, r26
    1a88:	0e 94 18 40 	call	0x8030	; 0x8030 <__floatunsisf>
    1a8c:	dc 01       	movw	r26, r24
    1a8e:	cb 01       	movw	r24, r22
    1a90:	bc 01       	movw	r22, r24
    1a92:	cd 01       	movw	r24, r26
    1a94:	0e 94 55 40 	call	0x80aa	; 0x80aa <floor>
    1a98:	dc 01       	movw	r26, r24
    1a9a:	cb 01       	movw	r24, r22
    1a9c:	bc 01       	movw	r22, r24
    1a9e:	cd 01       	movw	r24, r26
    1aa0:	0e 94 ec 3f 	call	0x7fd8	; 0x7fd8 <__fixunssfsi>
    1aa4:	dc 01       	movw	r26, r24
    1aa6:	cb 01       	movw	r24, r22
    1aa8:	9a 83       	std	Y+2, r25	; 0x02
    1aaa:	89 83       	std	Y+1, r24	; 0x01
	}
	
	
	if (uartPort == Zero)
    1aac:	8b 81       	ldd	r24, Y+3	; 0x03
    1aae:	9c 81       	ldd	r25, Y+4	; 0x04
    1ab0:	fc 01       	movw	r30, r24
    1ab2:	86 81       	ldd	r24, Z+6	; 0x06
    1ab4:	88 23       	and	r24, r24
    1ab6:	41 f5       	brne	.+80     	; 0x1b08 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x15e>
	{
		/* Set baud rate */
		UBRR0 = baudPrescaller;
    1ab8:	84 ec       	ldi	r24, 0xC4	; 196
    1aba:	90 e0       	ldi	r25, 0x00	; 0
    1abc:	29 81       	ldd	r18, Y+1	; 0x01
    1abe:	3a 81       	ldd	r19, Y+2	; 0x02
    1ac0:	fc 01       	movw	r30, r24
    1ac2:	31 83       	std	Z+1, r19	; 0x01
    1ac4:	20 83       	st	Z, r18
		
		/* Set frame format: asynchronous usart, no parity 1stop bit, 8 bits of data, */
		UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);
    1ac6:	82 ec       	ldi	r24, 0xC2	; 194
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
    1aca:	22 ec       	ldi	r18, 0xC2	; 194
    1acc:	30 e0       	ldi	r19, 0x00	; 0
    1ace:	f9 01       	movw	r30, r18
    1ad0:	20 81       	ld	r18, Z
    1ad2:	26 60       	ori	r18, 0x06	; 6
    1ad4:	fc 01       	movw	r30, r24
    1ad6:	20 83       	st	Z, r18
		
		//If double speed mode flag was set, set the U2X0 flag to enable double speed mode.
		if (useDoubleSpeedMode)
    1ad8:	8b 81       	ldd	r24, Y+3	; 0x03
    1ada:	9c 81       	ldd	r25, Y+4	; 0x04
    1adc:	fc 01       	movw	r30, r24
    1ade:	82 85       	ldd	r24, Z+10	; 0x0a
    1ae0:	88 23       	and	r24, r24
    1ae2:	49 f0       	breq	.+18     	; 0x1af6 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x14c>
		{
			UCSR0A |= (1<<U2X0);
    1ae4:	80 ec       	ldi	r24, 0xC0	; 192
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	20 ec       	ldi	r18, 0xC0	; 192
    1aea:	30 e0       	ldi	r19, 0x00	; 0
    1aec:	f9 01       	movw	r30, r18
    1aee:	20 81       	ld	r18, Z
    1af0:	22 60       	ori	r18, 0x02	; 2
    1af2:	fc 01       	movw	r30, r24
    1af4:	20 83       	st	Z, r18
		}
		
			
			
		/* Enable receiver and transmitter */
		UCSR0B |= (1<<RXEN0) | (1<<TXEN0);
    1af6:	81 ec       	ldi	r24, 0xC1	; 193
    1af8:	90 e0       	ldi	r25, 0x00	; 0
    1afa:	21 ec       	ldi	r18, 0xC1	; 193
    1afc:	30 e0       	ldi	r19, 0x00	; 0
    1afe:	f9 01       	movw	r30, r18
    1b00:	20 81       	ld	r18, Z
    1b02:	28 61       	ori	r18, 0x18	; 24
    1b04:	fc 01       	movw	r30, r24
    1b06:	20 83       	st	Z, r18
	}
}
    1b08:	0f 90       	pop	r0
    1b0a:	0f 90       	pop	r0
    1b0c:	0f 90       	pop	r0
    1b0e:	0f 90       	pop	r0
    1b10:	df 91       	pop	r29
    1b12:	cf 91       	pop	r28
    1b14:	08 95       	ret

00001b16 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh>:

int SerialDriver::transmitByte(byte byteToSend)
{
    1b16:	cf 93       	push	r28
    1b18:	df 93       	push	r29
    1b1a:	00 d0       	rcall	.+0      	; 0x1b1c <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6>
    1b1c:	cd b7       	in	r28, 0x3d	; 61
    1b1e:	de b7       	in	r29, 0x3e	; 62
    1b20:	9a 83       	std	Y+2, r25	; 0x02
    1b22:	89 83       	std	Y+1, r24	; 0x01
    1b24:	6b 83       	std	Y+3, r22	; 0x03
	if (uartPort == Zero)
    1b26:	89 81       	ldd	r24, Y+1	; 0x01
    1b28:	9a 81       	ldd	r25, Y+2	; 0x02
    1b2a:	fc 01       	movw	r30, r24
    1b2c:	86 81       	ldd	r24, Z+6	; 0x06
    1b2e:	88 23       	and	r24, r24
    1b30:	09 f0       	breq	.+2      	; 0x1b34 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x1e>
    1b32:	42 c0       	rjmp	.+132    	; 0x1bb8 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0xa2>
	{
		if (isTimeoutEnabled)
    1b34:	89 81       	ldd	r24, Y+1	; 0x01
    1b36:	9a 81       	ldd	r25, Y+2	; 0x02
    1b38:	fc 01       	movw	r30, r24
    1b3a:	81 85       	ldd	r24, Z+9	; 0x09
    1b3c:	88 23       	and	r24, r24
    1b3e:	09 f1       	breq	.+66     	; 0x1b82 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6c>
		{
			timer->startTimer();
    1b40:	89 81       	ldd	r24, Y+1	; 0x01
    1b42:	9a 81       	ldd	r25, Y+2	; 0x02
    1b44:	fc 01       	movw	r30, r24
    1b46:	87 81       	ldd	r24, Z+7	; 0x07
    1b48:	90 85       	ldd	r25, Z+8	; 0x08
    1b4a:	0e 94 20 3e 	call	0x7c40	; 0x7c40 <_ZN10helicopter4util5Timer10startTimerEv>
		}
		
		/* Wait for empty transmit buffer */
		while ( !( UCSR0A & (1<<UDRE0)) )
    1b4e:	19 c0       	rjmp	.+50     	; 0x1b82 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6c>
		{
			//Check for timeout
			if (isTimeoutEnabled)
    1b50:	89 81       	ldd	r24, Y+1	; 0x01
    1b52:	9a 81       	ldd	r25, Y+2	; 0x02
    1b54:	fc 01       	movw	r30, r24
    1b56:	81 85       	ldd	r24, Z+9	; 0x09
    1b58:	88 23       	and	r24, r24
    1b5a:	a1 f0       	breq	.+40     	; 0x1b84 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6e>
			{
				if (timer->hasTimedout())
    1b5c:	89 81       	ldd	r24, Y+1	; 0x01
    1b5e:	9a 81       	ldd	r25, Y+2	; 0x02
    1b60:	fc 01       	movw	r30, r24
    1b62:	87 81       	ldd	r24, Z+7	; 0x07
    1b64:	90 85       	ldd	r25, Z+8	; 0x08
    1b66:	0e 94 da 3e 	call	0x7db4	; 0x7db4 <_ZN10helicopter4util5Timer11hasTimedoutEv>
    1b6a:	88 23       	and	r24, r24
    1b6c:	59 f0       	breq	.+22     	; 0x1b84 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6e>
				{
					timer->stopTimer();
    1b6e:	89 81       	ldd	r24, Y+1	; 0x01
    1b70:	9a 81       	ldd	r25, Y+2	; 0x02
    1b72:	fc 01       	movw	r30, r24
    1b74:	87 81       	ldd	r24, Z+7	; 0x07
    1b76:	90 85       	ldd	r25, Z+8	; 0x08
    1b78:	0e 94 f4 3e 	call	0x7de8	; 0x7de8 <_ZN10helicopter4util5Timer9stopTimerEv>
					return -1;
    1b7c:	8f ef       	ldi	r24, 0xFF	; 255
    1b7e:	9f ef       	ldi	r25, 0xFF	; 255
    1b80:	1d c0       	rjmp	.+58     	; 0x1bbc <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0xa6>
		{
			timer->startTimer();
		}
		
		/* Wait for empty transmit buffer */
		while ( !( UCSR0A & (1<<UDRE0)) )
    1b82:	00 00       	nop
    1b84:	80 ec       	ldi	r24, 0xC0	; 192
    1b86:	90 e0       	ldi	r25, 0x00	; 0
    1b88:	fc 01       	movw	r30, r24
    1b8a:	80 81       	ld	r24, Z
    1b8c:	88 2f       	mov	r24, r24
    1b8e:	90 e0       	ldi	r25, 0x00	; 0
    1b90:	80 72       	andi	r24, 0x20	; 32
    1b92:	99 27       	eor	r25, r25
    1b94:	21 e0       	ldi	r18, 0x01	; 1
    1b96:	00 97       	sbiw	r24, 0x00	; 0
    1b98:	09 f0       	breq	.+2      	; 0x1b9c <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x86>
    1b9a:	20 e0       	ldi	r18, 0x00	; 0
    1b9c:	22 23       	and	r18, r18
    1b9e:	c1 f6       	brne	.-80     	; 0x1b50 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x3a>
			}
		}
				
				
		/* Put data into buffer, sends the data */
		UDR0 = byteToSend;
    1ba0:	86 ec       	ldi	r24, 0xC6	; 198
    1ba2:	90 e0       	ldi	r25, 0x00	; 0
    1ba4:	2b 81       	ldd	r18, Y+3	; 0x03
    1ba6:	fc 01       	movw	r30, r24
    1ba8:	20 83       	st	Z, r18
		
		timer->stopTimer();
    1baa:	89 81       	ldd	r24, Y+1	; 0x01
    1bac:	9a 81       	ldd	r25, Y+2	; 0x02
    1bae:	fc 01       	movw	r30, r24
    1bb0:	87 81       	ldd	r24, Z+7	; 0x07
    1bb2:	90 85       	ldd	r25, Z+8	; 0x08
    1bb4:	0e 94 f4 3e 	call	0x7de8	; 0x7de8 <_ZN10helicopter4util5Timer9stopTimerEv>
	}
	
	return 0;
    1bb8:	80 e0       	ldi	r24, 0x00	; 0
    1bba:	90 e0       	ldi	r25, 0x00	; 0
}
    1bbc:	0f 90       	pop	r0
    1bbe:	0f 90       	pop	r0
    1bc0:	0f 90       	pop	r0
    1bc2:	df 91       	pop	r29
    1bc4:	cf 91       	pop	r28
    1bc6:	08 95       	ret

00001bc8 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh>:

int SerialDriver::receiveByte(byte &receivedByte)
{
    1bc8:	cf 93       	push	r28
    1bca:	df 93       	push	r29
    1bcc:	00 d0       	rcall	.+0      	; 0x1bce <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x6>
    1bce:	1f 92       	push	r1
    1bd0:	1f 92       	push	r1
    1bd2:	cd b7       	in	r28, 0x3d	; 61
    1bd4:	de b7       	in	r29, 0x3e	; 62
    1bd6:	9b 83       	std	Y+3, r25	; 0x03
    1bd8:	8a 83       	std	Y+2, r24	; 0x02
    1bda:	7d 83       	std	Y+5, r23	; 0x05
    1bdc:	6c 83       	std	Y+4, r22	; 0x04
	bool hasDataOverrun = false;
    1bde:	19 82       	std	Y+1, r1	; 0x01
	
	if (uartPort == Zero)
    1be0:	8a 81       	ldd	r24, Y+2	; 0x02
    1be2:	9b 81       	ldd	r25, Y+3	; 0x03
    1be4:	fc 01       	movw	r30, r24
    1be6:	86 81       	ldd	r24, Z+6	; 0x06
    1be8:	88 23       	and	r24, r24
    1bea:	09 f0       	breq	.+2      	; 0x1bee <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x26>
    1bec:	41 c0       	rjmp	.+130    	; 0x1c70 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0xa8>
	{
		
		if (isTimeoutEnabled)
    1bee:	8a 81       	ldd	r24, Y+2	; 0x02
    1bf0:	9b 81       	ldd	r25, Y+3	; 0x03
    1bf2:	fc 01       	movw	r30, r24
    1bf4:	81 85       	ldd	r24, Z+9	; 0x09
    1bf6:	88 23       	and	r24, r24
    1bf8:	d9 f0       	breq	.+54     	; 0x1c30 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x68>
		{
			timer->startTimer();
    1bfa:	8a 81       	ldd	r24, Y+2	; 0x02
    1bfc:	9b 81       	ldd	r25, Y+3	; 0x03
    1bfe:	fc 01       	movw	r30, r24
    1c00:	87 81       	ldd	r24, Z+7	; 0x07
    1c02:	90 85       	ldd	r25, Z+8	; 0x08
    1c04:	0e 94 20 3e 	call	0x7c40	; 0x7c40 <_ZN10helicopter4util5Timer10startTimerEv>
		}
		//int counter = 0;
		
		/* Wait for data on the receive buffer */
		while ( !(UCSR0A & (1<<RXC0)) )
    1c08:	13 c0       	rjmp	.+38     	; 0x1c30 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x68>
		{
			if (timer->hasTimedout())
    1c0a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c0c:	9b 81       	ldd	r25, Y+3	; 0x03
    1c0e:	fc 01       	movw	r30, r24
    1c10:	87 81       	ldd	r24, Z+7	; 0x07
    1c12:	90 85       	ldd	r25, Z+8	; 0x08
    1c14:	0e 94 da 3e 	call	0x7db4	; 0x7db4 <_ZN10helicopter4util5Timer11hasTimedoutEv>
    1c18:	88 23       	and	r24, r24
    1c1a:	59 f0       	breq	.+22     	; 0x1c32 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x6a>
			{
				timer->stopTimer();
    1c1c:	8a 81       	ldd	r24, Y+2	; 0x02
    1c1e:	9b 81       	ldd	r25, Y+3	; 0x03
    1c20:	fc 01       	movw	r30, r24
    1c22:	87 81       	ldd	r24, Z+7	; 0x07
    1c24:	90 85       	ldd	r25, Z+8	; 0x08
    1c26:	0e 94 f4 3e 	call	0x7de8	; 0x7de8 <_ZN10helicopter4util5Timer9stopTimerEv>
				return -1;
    1c2a:	8f ef       	ldi	r24, 0xFF	; 255
    1c2c:	9f ef       	ldi	r25, 0xFF	; 255
    1c2e:	29 c0       	rjmp	.+82     	; 0x1c82 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0xba>
			timer->startTimer();
		}
		//int counter = 0;
		
		/* Wait for data on the receive buffer */
		while ( !(UCSR0A & (1<<RXC0)) )
    1c30:	00 00       	nop
    1c32:	80 ec       	ldi	r24, 0xC0	; 192
    1c34:	90 e0       	ldi	r25, 0x00	; 0
    1c36:	fc 01       	movw	r30, r24
    1c38:	80 81       	ld	r24, Z
    1c3a:	80 95       	com	r24
    1c3c:	88 1f       	adc	r24, r24
    1c3e:	88 27       	eor	r24, r24
    1c40:	88 1f       	adc	r24, r24
    1c42:	88 23       	and	r24, r24
    1c44:	11 f7       	brne	.-60     	; 0x1c0a <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x42>
			}*/
		}
		
		//determine if there has been a data overrun.
		//Swallow the overrun because nothing can be done.
		hasDataOverrun = (UCSR0A & (1 << DOR0)) != 0;
    1c46:	80 ec       	ldi	r24, 0xC0	; 192
    1c48:	90 e0       	ldi	r25, 0x00	; 0
    1c4a:	fc 01       	movw	r30, r24
    1c4c:	80 81       	ld	r24, Z
    1c4e:	88 2f       	mov	r24, r24
    1c50:	90 e0       	ldi	r25, 0x00	; 0
    1c52:	88 70       	andi	r24, 0x08	; 8
    1c54:	99 27       	eor	r25, r25
    1c56:	21 e0       	ldi	r18, 0x01	; 1
    1c58:	00 97       	sbiw	r24, 0x00	; 0
    1c5a:	09 f4       	brne	.+2      	; 0x1c5e <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x96>
    1c5c:	20 e0       	ldi	r18, 0x00	; 0
    1c5e:	29 83       	std	Y+1, r18	; 0x01
		
		/* Read the data from the serial port buffer */
		receivedByte = UDR0;
    1c60:	86 ec       	ldi	r24, 0xC6	; 198
    1c62:	90 e0       	ldi	r25, 0x00	; 0
    1c64:	fc 01       	movw	r30, r24
    1c66:	20 81       	ld	r18, Z
    1c68:	8c 81       	ldd	r24, Y+4	; 0x04
    1c6a:	9d 81       	ldd	r25, Y+5	; 0x05
    1c6c:	fc 01       	movw	r30, r24
    1c6e:	20 83       	st	Z, r18
	}
	
	timer->stopTimer();
    1c70:	8a 81       	ldd	r24, Y+2	; 0x02
    1c72:	9b 81       	ldd	r25, Y+3	; 0x03
    1c74:	fc 01       	movw	r30, r24
    1c76:	87 81       	ldd	r24, Z+7	; 0x07
    1c78:	90 85       	ldd	r25, Z+8	; 0x08
    1c7a:	0e 94 f4 3e 	call	0x7de8	; 0x7de8 <_ZN10helicopter4util5Timer9stopTimerEv>
	
	return 0;
    1c7e:	80 e0       	ldi	r24, 0x00	; 0
    1c80:	90 e0       	ldi	r25, 0x00	; 0
    1c82:	0f 90       	pop	r0
    1c84:	0f 90       	pop	r0
    1c86:	0f 90       	pop	r0
    1c88:	0f 90       	pop	r0
    1c8a:	0f 90       	pop	r0
    1c8c:	df 91       	pop	r29
    1c8e:	cf 91       	pop	r28
    1c90:	08 95       	ret

00001c92 <_ZN10helicopter7drivers11ServoDriverD1Ev>:
					maxControlValue(0)
				{
					
				}
				
				virtual ~ServoDriver()
    1c92:	cf 93       	push	r28
    1c94:	df 93       	push	r29
    1c96:	1f 92       	push	r1
    1c98:	1f 92       	push	r1
    1c9a:	cd b7       	in	r28, 0x3d	; 61
    1c9c:	de b7       	in	r29, 0x3e	; 62
    1c9e:	9a 83       	std	Y+2, r25	; 0x02
    1ca0:	89 83       	std	Y+1, r24	; 0x01
				{
    1ca2:	89 81       	ldd	r24, Y+1	; 0x01
    1ca4:	9a 81       	ldd	r25, Y+2	; 0x02
    1ca6:	28 e1       	ldi	r18, 0x18	; 24
    1ca8:	32 e0       	ldi	r19, 0x02	; 2
    1caa:	fc 01       	movw	r30, r24
    1cac:	31 83       	std	Z+1, r19	; 0x01
    1cae:	20 83       	st	Z, r18
					
				}
    1cb0:	80 e0       	ldi	r24, 0x00	; 0
    1cb2:	90 e0       	ldi	r25, 0x00	; 0
    1cb4:	81 70       	andi	r24, 0x01	; 1
    1cb6:	99 27       	eor	r25, r25
    1cb8:	00 97       	sbiw	r24, 0x00	; 0
    1cba:	21 f0       	breq	.+8      	; 0x1cc4 <_ZN10helicopter7drivers11ServoDriverD1Ev+0x32>
    1cbc:	89 81       	ldd	r24, Y+1	; 0x01
    1cbe:	9a 81       	ldd	r25, Y+2	; 0x02
    1cc0:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    1cc4:	0f 90       	pop	r0
    1cc6:	0f 90       	pop	r0
    1cc8:	df 91       	pop	r29
    1cca:	cf 91       	pop	r28
    1ccc:	08 95       	ret

00001cce <_ZN10helicopter7drivers11ServoDriverD0Ev>:
					maxControlValue(0)
				{
					
				}
				
				virtual ~ServoDriver()
    1cce:	cf 93       	push	r28
    1cd0:	df 93       	push	r29
    1cd2:	1f 92       	push	r1
    1cd4:	1f 92       	push	r1
    1cd6:	cd b7       	in	r28, 0x3d	; 61
    1cd8:	de b7       	in	r29, 0x3e	; 62
    1cda:	9a 83       	std	Y+2, r25	; 0x02
    1cdc:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    1cde:	89 81       	ldd	r24, Y+1	; 0x01
    1ce0:	9a 81       	ldd	r25, Y+2	; 0x02
    1ce2:	0e 94 49 0e 	call	0x1c92	; 0x1c92 <_ZN10helicopter7drivers11ServoDriverD1Ev>
    1ce6:	89 81       	ldd	r24, Y+1	; 0x01
    1ce8:	9a 81       	ldd	r25, Y+2	; 0x02
    1cea:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    1cee:	0f 90       	pop	r0
    1cf0:	0f 90       	pop	r0
    1cf2:	df 91       	pop	r29
    1cf4:	cf 91       	pop	r28
    1cf6:	08 95       	ret

00001cf8 <_ZN10helicopter7drivers11ServoDriver26controlTailRotorCollectiveEd>:
#include "ServoDriver.h"

using namespace helicopter::drivers;

void ServoDriver::controlTailRotorCollective(double controlTailRotorCollective)
{
    1cf8:	cf 93       	push	r28
    1cfa:	df 93       	push	r29
    1cfc:	cd b7       	in	r28, 0x3d	; 61
    1cfe:	de b7       	in	r29, 0x3e	; 62
    1d00:	2a 97       	sbiw	r28, 0x0a	; 10
    1d02:	0f b6       	in	r0, 0x3f	; 63
    1d04:	f8 94       	cli
    1d06:	de bf       	out	0x3e, r29	; 62
    1d08:	0f be       	out	0x3f, r0	; 63
    1d0a:	cd bf       	out	0x3d, r28	; 61
    1d0c:	9e 83       	std	Y+6, r25	; 0x06
    1d0e:	8d 83       	std	Y+5, r24	; 0x05
    1d10:	4f 83       	std	Y+7, r20	; 0x07
    1d12:	58 87       	std	Y+8, r21	; 0x08
    1d14:	69 87       	std	Y+9, r22	; 0x09
    1d16:	7a 87       	std	Y+10, r23	; 0x0a
	double control = controlTailRotorCollective;
    1d18:	8f 81       	ldd	r24, Y+7	; 0x07
    1d1a:	98 85       	ldd	r25, Y+8	; 0x08
    1d1c:	a9 85       	ldd	r26, Y+9	; 0x09
    1d1e:	ba 85       	ldd	r27, Y+10	; 0x0a
    1d20:	89 83       	std	Y+1, r24	; 0x01
    1d22:	9a 83       	std	Y+2, r25	; 0x02
    1d24:	ab 83       	std	Y+3, r26	; 0x03
    1d26:	bc 83       	std	Y+4, r27	; 0x04
	
	if (control > maxControlValue)
    1d28:	8d 81       	ldd	r24, Y+5	; 0x05
    1d2a:	9e 81       	ldd	r25, Y+6	; 0x06
    1d2c:	fc 01       	movw	r30, r24
    1d2e:	86 81       	ldd	r24, Z+6	; 0x06
    1d30:	97 81       	ldd	r25, Z+7	; 0x07
    1d32:	a0 85       	ldd	r26, Z+8	; 0x08
    1d34:	b1 85       	ldd	r27, Z+9	; 0x09
    1d36:	29 81       	ldd	r18, Y+1	; 0x01
    1d38:	3a 81       	ldd	r19, Y+2	; 0x02
    1d3a:	4b 81       	ldd	r20, Y+3	; 0x03
    1d3c:	5c 81       	ldd	r21, Y+4	; 0x04
    1d3e:	bc 01       	movw	r22, r24
    1d40:	cd 01       	movw	r24, r26
    1d42:	0e 94 78 3f 	call	0x7ef0	; 0x7ef0 <__cmpsf2>
    1d46:	88 23       	and	r24, r24
    1d48:	5c f4       	brge	.+22     	; 0x1d60 <_ZN10helicopter7drivers11ServoDriver26controlTailRotorCollectiveEd+0x68>
	{
		control = maxControlValue;
    1d4a:	8d 81       	ldd	r24, Y+5	; 0x05
    1d4c:	9e 81       	ldd	r25, Y+6	; 0x06
    1d4e:	fc 01       	movw	r30, r24
    1d50:	86 81       	ldd	r24, Z+6	; 0x06
    1d52:	97 81       	ldd	r25, Z+7	; 0x07
    1d54:	a0 85       	ldd	r26, Z+8	; 0x08
    1d56:	b1 85       	ldd	r27, Z+9	; 0x09
    1d58:	89 83       	std	Y+1, r24	; 0x01
    1d5a:	9a 83       	std	Y+2, r25	; 0x02
    1d5c:	ab 83       	std	Y+3, r26	; 0x03
    1d5e:	bc 83       	std	Y+4, r27	; 0x04
	}
	
	if (control < minControlValue)
    1d60:	8d 81       	ldd	r24, Y+5	; 0x05
    1d62:	9e 81       	ldd	r25, Y+6	; 0x06
    1d64:	fc 01       	movw	r30, r24
    1d66:	82 81       	ldd	r24, Z+2	; 0x02
    1d68:	93 81       	ldd	r25, Z+3	; 0x03
    1d6a:	a4 81       	ldd	r26, Z+4	; 0x04
    1d6c:	b5 81       	ldd	r27, Z+5	; 0x05
    1d6e:	29 81       	ldd	r18, Y+1	; 0x01
    1d70:	3a 81       	ldd	r19, Y+2	; 0x02
    1d72:	4b 81       	ldd	r20, Y+3	; 0x03
    1d74:	5c 81       	ldd	r21, Y+4	; 0x04
    1d76:	bc 01       	movw	r22, r24
    1d78:	cd 01       	movw	r24, r26
    1d7a:	0e 94 56 41 	call	0x82ac	; 0x82ac <__gesf2>
    1d7e:	18 16       	cp	r1, r24
    1d80:	5c f4       	brge	.+22     	; 0x1d98 <_ZN10helicopter7drivers11ServoDriver26controlTailRotorCollectiveEd+0xa0>
	{
		control = minControlValue;
    1d82:	8d 81       	ldd	r24, Y+5	; 0x05
    1d84:	9e 81       	ldd	r25, Y+6	; 0x06
    1d86:	fc 01       	movw	r30, r24
    1d88:	82 81       	ldd	r24, Z+2	; 0x02
    1d8a:	93 81       	ldd	r25, Z+3	; 0x03
    1d8c:	a4 81       	ldd	r26, Z+4	; 0x04
    1d8e:	b5 81       	ldd	r27, Z+5	; 0x05
    1d90:	89 83       	std	Y+1, r24	; 0x01
    1d92:	9a 83       	std	Y+2, r25	; 0x02
    1d94:	ab 83       	std	Y+3, r26	; 0x03
    1d96:	bc 83       	std	Y+4, r27	; 0x04
	}
	
	controlTailRotorCollectiveImpl(control);
    1d98:	8d 81       	ldd	r24, Y+5	; 0x05
    1d9a:	9e 81       	ldd	r25, Y+6	; 0x06
    1d9c:	fc 01       	movw	r30, r24
    1d9e:	80 81       	ld	r24, Z
    1da0:	91 81       	ldd	r25, Z+1	; 0x01
    1da2:	04 96       	adiw	r24, 0x04	; 4
    1da4:	fc 01       	movw	r30, r24
    1da6:	20 81       	ld	r18, Z
    1da8:	31 81       	ldd	r19, Z+1	; 0x01
    1daa:	89 81       	ldd	r24, Y+1	; 0x01
    1dac:	9a 81       	ldd	r25, Y+2	; 0x02
    1dae:	ab 81       	ldd	r26, Y+3	; 0x03
    1db0:	bc 81       	ldd	r27, Y+4	; 0x04
    1db2:	ed 81       	ldd	r30, Y+5	; 0x05
    1db4:	fe 81       	ldd	r31, Y+6	; 0x06
    1db6:	ac 01       	movw	r20, r24
    1db8:	bd 01       	movw	r22, r26
    1dba:	cf 01       	movw	r24, r30
    1dbc:	f9 01       	movw	r30, r18
    1dbe:	19 95       	eicall
}
    1dc0:	2a 96       	adiw	r28, 0x0a	; 10
    1dc2:	0f b6       	in	r0, 0x3f	; 63
    1dc4:	f8 94       	cli
    1dc6:	de bf       	out	0x3e, r29	; 62
    1dc8:	0f be       	out	0x3f, r0	; 63
    1dca:	cd bf       	out	0x3d, r28	; 61
    1dcc:	df 91       	pop	r29
    1dce:	cf 91       	pop	r28
    1dd0:	08 95       	ret

00001dd2 <_ZN10helicopter7drivers11ServoDriver30controlTailRotorCollectiveImplEd>:


void ServoDriver::controlTailRotorCollectiveImpl(double controlTailRotorCollective)
{
    1dd2:	cf 93       	push	r28
    1dd4:	df 93       	push	r29
    1dd6:	00 d0       	rcall	.+0      	; 0x1dd8 <_ZN10helicopter7drivers11ServoDriver30controlTailRotorCollectiveImplEd+0x6>
    1dd8:	00 d0       	rcall	.+0      	; 0x1dda <_ZN10helicopter7drivers11ServoDriver30controlTailRotorCollectiveImplEd+0x8>
    1dda:	cd b7       	in	r28, 0x3d	; 61
    1ddc:	de b7       	in	r29, 0x3e	; 62
    1dde:	9a 83       	std	Y+2, r25	; 0x02
    1de0:	89 83       	std	Y+1, r24	; 0x01
    1de2:	4b 83       	std	Y+3, r20	; 0x03
    1de4:	5c 83       	std	Y+4, r21	; 0x04
    1de6:	6d 83       	std	Y+5, r22	; 0x05
    1de8:	7e 83       	std	Y+6, r23	; 0x06
	
}
    1dea:	26 96       	adiw	r28, 0x06	; 6
    1dec:	0f b6       	in	r0, 0x3f	; 63
    1dee:	f8 94       	cli
    1df0:	de bf       	out	0x3e, r29	; 62
    1df2:	0f be       	out	0x3f, r0	; 63
    1df4:	cd bf       	out	0x3d, r28	; 61
    1df6:	df 91       	pop	r29
    1df8:	cf 91       	pop	r28
    1dfa:	08 95       	ret

00001dfc <_ZN10helicopter7drivers11ServoDriver19controlLongitudinalEd>:


void ServoDriver::controlLongitudinal(double controlTailRotorCollective)
{
    1dfc:	cf 93       	push	r28
    1dfe:	df 93       	push	r29
    1e00:	00 d0       	rcall	.+0      	; 0x1e02 <_ZN10helicopter7drivers11ServoDriver19controlLongitudinalEd+0x6>
    1e02:	00 d0       	rcall	.+0      	; 0x1e04 <_ZN10helicopter7drivers11ServoDriver19controlLongitudinalEd+0x8>
    1e04:	cd b7       	in	r28, 0x3d	; 61
    1e06:	de b7       	in	r29, 0x3e	; 62
    1e08:	9a 83       	std	Y+2, r25	; 0x02
    1e0a:	89 83       	std	Y+1, r24	; 0x01
    1e0c:	4b 83       	std	Y+3, r20	; 0x03
    1e0e:	5c 83       	std	Y+4, r21	; 0x04
    1e10:	6d 83       	std	Y+5, r22	; 0x05
    1e12:	7e 83       	std	Y+6, r23	; 0x06
	
}
    1e14:	26 96       	adiw	r28, 0x06	; 6
    1e16:	0f b6       	in	r0, 0x3f	; 63
    1e18:	f8 94       	cli
    1e1a:	de bf       	out	0x3e, r29	; 62
    1e1c:	0f be       	out	0x3f, r0	; 63
    1e1e:	cd bf       	out	0x3d, r28	; 61
    1e20:	df 91       	pop	r29
    1e22:	cf 91       	pop	r28
    1e24:	08 95       	ret

00001e26 <_ZN10helicopter5tasks4TaskD1Ev>:
				 * @param period The number of scheduler 'ticks' to be executed before
				 * this task is ready to run.
				 */
				Task (int delay, int period);
				
				virtual ~Task(){}
    1e26:	cf 93       	push	r28
    1e28:	df 93       	push	r29
    1e2a:	1f 92       	push	r1
    1e2c:	1f 92       	push	r1
    1e2e:	cd b7       	in	r28, 0x3d	; 61
    1e30:	de b7       	in	r29, 0x3e	; 62
    1e32:	9a 83       	std	Y+2, r25	; 0x02
    1e34:	89 83       	std	Y+1, r24	; 0x01
    1e36:	89 81       	ldd	r24, Y+1	; 0x01
    1e38:	9a 81       	ldd	r25, Y+2	; 0x02
    1e3a:	2c e8       	ldi	r18, 0x8C	; 140
    1e3c:	32 e0       	ldi	r19, 0x02	; 2
    1e3e:	fc 01       	movw	r30, r24
    1e40:	31 83       	std	Z+1, r19	; 0x01
    1e42:	20 83       	st	Z, r18
    1e44:	80 e0       	ldi	r24, 0x00	; 0
    1e46:	90 e0       	ldi	r25, 0x00	; 0
    1e48:	81 70       	andi	r24, 0x01	; 1
    1e4a:	99 27       	eor	r25, r25
    1e4c:	00 97       	sbiw	r24, 0x00	; 0
    1e4e:	21 f0       	breq	.+8      	; 0x1e58 <_ZN10helicopter5tasks4TaskD1Ev+0x32>
    1e50:	89 81       	ldd	r24, Y+1	; 0x01
    1e52:	9a 81       	ldd	r25, Y+2	; 0x02
    1e54:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    1e58:	0f 90       	pop	r0
    1e5a:	0f 90       	pop	r0
    1e5c:	df 91       	pop	r29
    1e5e:	cf 91       	pop	r28
    1e60:	08 95       	ret

00001e62 <_ZN10helicopter5tasks4TaskD0Ev>:
    1e62:	cf 93       	push	r28
    1e64:	df 93       	push	r29
    1e66:	1f 92       	push	r1
    1e68:	1f 92       	push	r1
    1e6a:	cd b7       	in	r28, 0x3d	; 61
    1e6c:	de b7       	in	r29, 0x3e	; 62
    1e6e:	9a 83       	std	Y+2, r25	; 0x02
    1e70:	89 83       	std	Y+1, r24	; 0x01
    1e72:	89 81       	ldd	r24, Y+1	; 0x01
    1e74:	9a 81       	ldd	r25, Y+2	; 0x02
    1e76:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <_ZN10helicopter5tasks4TaskD1Ev>
    1e7a:	89 81       	ldd	r24, Y+1	; 0x01
    1e7c:	9a 81       	ldd	r25, Y+2	; 0x02
    1e7e:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    1e82:	0f 90       	pop	r0
    1e84:	0f 90       	pop	r0
    1e86:	df 91       	pop	r29
    1e88:	cf 91       	pop	r28
    1e8a:	08 95       	ret

00001e8c <_ZN10helicopter5tasks12FlashLEDTaskC1Eiii>:
					
				int ledToBlink;
				
			public:

			FlashLEDTask (int delay, int period, int ledToBlink = BLUELED) : 
    1e8c:	cf 93       	push	r28
    1e8e:	df 93       	push	r29
    1e90:	cd b7       	in	r28, 0x3d	; 61
    1e92:	de b7       	in	r29, 0x3e	; 62
    1e94:	28 97       	sbiw	r28, 0x08	; 8
    1e96:	0f b6       	in	r0, 0x3f	; 63
    1e98:	f8 94       	cli
    1e9a:	de bf       	out	0x3e, r29	; 62
    1e9c:	0f be       	out	0x3f, r0	; 63
    1e9e:	cd bf       	out	0x3d, r28	; 61
    1ea0:	9a 83       	std	Y+2, r25	; 0x02
    1ea2:	89 83       	std	Y+1, r24	; 0x01
    1ea4:	7c 83       	std	Y+4, r23	; 0x04
    1ea6:	6b 83       	std	Y+3, r22	; 0x03
    1ea8:	5e 83       	std	Y+6, r21	; 0x06
    1eaa:	4d 83       	std	Y+5, r20	; 0x05
    1eac:	38 87       	std	Y+8, r19	; 0x08
    1eae:	2f 83       	std	Y+7, r18	; 0x07
				Task(delay, period),
				isOff(false),
				ledToBlink(ledToBlink)
    1eb0:	89 81       	ldd	r24, Y+1	; 0x01
    1eb2:	9a 81       	ldd	r25, Y+2	; 0x02
    1eb4:	4d 81       	ldd	r20, Y+5	; 0x05
    1eb6:	5e 81       	ldd	r21, Y+6	; 0x06
    1eb8:	2b 81       	ldd	r18, Y+3	; 0x03
    1eba:	3c 81       	ldd	r19, Y+4	; 0x04
    1ebc:	b9 01       	movw	r22, r18
    1ebe:	0e 94 21 38 	call	0x7042	; 0x7042 <_ZN10helicopter5tasks4TaskC1Eii>
    1ec2:	89 81       	ldd	r24, Y+1	; 0x01
    1ec4:	9a 81       	ldd	r25, Y+2	; 0x02
    1ec6:	22 e2       	ldi	r18, 0x22	; 34
    1ec8:	32 e0       	ldi	r19, 0x02	; 2
    1eca:	fc 01       	movw	r30, r24
    1ecc:	31 83       	std	Z+1, r19	; 0x01
    1ece:	20 83       	st	Z, r18
    1ed0:	89 81       	ldd	r24, Y+1	; 0x01
    1ed2:	9a 81       	ldd	r25, Y+2	; 0x02
    1ed4:	fc 01       	movw	r30, r24
    1ed6:	17 82       	std	Z+7, r1	; 0x07
    1ed8:	89 81       	ldd	r24, Y+1	; 0x01
    1eda:	9a 81       	ldd	r25, Y+2	; 0x02
    1edc:	2f 81       	ldd	r18, Y+7	; 0x07
    1ede:	38 85       	ldd	r19, Y+8	; 0x08
    1ee0:	fc 01       	movw	r30, r24
    1ee2:	31 87       	std	Z+9, r19	; 0x09
    1ee4:	20 87       	std	Z+8, r18	; 0x08
			{
					
			}
    1ee6:	28 96       	adiw	r28, 0x08	; 8
    1ee8:	0f b6       	in	r0, 0x3f	; 63
    1eea:	f8 94       	cli
    1eec:	de bf       	out	0x3e, r29	; 62
    1eee:	0f be       	out	0x3f, r0	; 63
    1ef0:	cd bf       	out	0x3d, r28	; 61
    1ef2:	df 91       	pop	r29
    1ef4:	cf 91       	pop	r28
    1ef6:	08 95       	ret

00001ef8 <_ZN10helicopter5tasks12FlashLEDTask4initEv>:
	
			void init()
    1ef8:	cf 93       	push	r28
    1efa:	df 93       	push	r29
    1efc:	1f 92       	push	r1
    1efe:	1f 92       	push	r1
    1f00:	cd b7       	in	r28, 0x3d	; 61
    1f02:	de b7       	in	r29, 0x3e	; 62
    1f04:	9a 83       	std	Y+2, r25	; 0x02
    1f06:	89 83       	std	Y+1, r24	; 0x01
			{
				DDRA |= (1<<ledToBlink);
    1f08:	81 e2       	ldi	r24, 0x21	; 33
    1f0a:	90 e0       	ldi	r25, 0x00	; 0
    1f0c:	21 e2       	ldi	r18, 0x21	; 33
    1f0e:	30 e0       	ldi	r19, 0x00	; 0
    1f10:	f9 01       	movw	r30, r18
    1f12:	20 81       	ld	r18, Z
    1f14:	62 2f       	mov	r22, r18
    1f16:	29 81       	ldd	r18, Y+1	; 0x01
    1f18:	3a 81       	ldd	r19, Y+2	; 0x02
    1f1a:	f9 01       	movw	r30, r18
    1f1c:	40 85       	ldd	r20, Z+8	; 0x08
    1f1e:	51 85       	ldd	r21, Z+9	; 0x09
    1f20:	21 e0       	ldi	r18, 0x01	; 1
    1f22:	30 e0       	ldi	r19, 0x00	; 0
    1f24:	04 2e       	mov	r0, r20
    1f26:	02 c0       	rjmp	.+4      	; 0x1f2c <_ZN10helicopter5tasks12FlashLEDTask4initEv+0x34>
    1f28:	22 0f       	add	r18, r18
    1f2a:	33 1f       	adc	r19, r19
    1f2c:	0a 94       	dec	r0
    1f2e:	e2 f7       	brpl	.-8      	; 0x1f28 <_ZN10helicopter5tasks12FlashLEDTask4initEv+0x30>
    1f30:	26 2b       	or	r18, r22
    1f32:	fc 01       	movw	r30, r24
    1f34:	20 83       	st	Z, r18
			}
    1f36:	0f 90       	pop	r0
    1f38:	0f 90       	pop	r0
    1f3a:	df 91       	pop	r29
    1f3c:	cf 91       	pop	r28
    1f3e:	08 95       	ret

00001f40 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv>:
	
			/**
				* Flashes the LED
				*/
			void runTaskImpl() {
    1f40:	cf 93       	push	r28
    1f42:	df 93       	push	r29
    1f44:	1f 92       	push	r1
    1f46:	1f 92       	push	r1
    1f48:	cd b7       	in	r28, 0x3d	; 61
    1f4a:	de b7       	in	r29, 0x3e	; 62
    1f4c:	9a 83       	std	Y+2, r25	; 0x02
    1f4e:	89 83       	std	Y+1, r24	; 0x01
				if (isOff)
    1f50:	89 81       	ldd	r24, Y+1	; 0x01
    1f52:	9a 81       	ldd	r25, Y+2	; 0x02
    1f54:	fc 01       	movw	r30, r24
    1f56:	87 81       	ldd	r24, Z+7	; 0x07
    1f58:	88 23       	and	r24, r24
    1f5a:	e9 f0       	breq	.+58     	; 0x1f96 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x56>
				{
					//Turn On the LED
					PORTA &= ~(1<<ledToBlink);
    1f5c:	82 e2       	ldi	r24, 0x22	; 34
    1f5e:	90 e0       	ldi	r25, 0x00	; 0
    1f60:	22 e2       	ldi	r18, 0x22	; 34
    1f62:	30 e0       	ldi	r19, 0x00	; 0
    1f64:	f9 01       	movw	r30, r18
    1f66:	20 81       	ld	r18, Z
    1f68:	62 2f       	mov	r22, r18
    1f6a:	29 81       	ldd	r18, Y+1	; 0x01
    1f6c:	3a 81       	ldd	r19, Y+2	; 0x02
    1f6e:	f9 01       	movw	r30, r18
    1f70:	40 85       	ldd	r20, Z+8	; 0x08
    1f72:	51 85       	ldd	r21, Z+9	; 0x09
    1f74:	21 e0       	ldi	r18, 0x01	; 1
    1f76:	30 e0       	ldi	r19, 0x00	; 0
    1f78:	04 2e       	mov	r0, r20
    1f7a:	02 c0       	rjmp	.+4      	; 0x1f80 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x40>
    1f7c:	22 0f       	add	r18, r18
    1f7e:	33 1f       	adc	r19, r19
    1f80:	0a 94       	dec	r0
    1f82:	e2 f7       	brpl	.-8      	; 0x1f7c <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x3c>
    1f84:	20 95       	com	r18
    1f86:	26 23       	and	r18, r22
    1f88:	fc 01       	movw	r30, r24
    1f8a:	20 83       	st	Z, r18
					isOff = false;
    1f8c:	89 81       	ldd	r24, Y+1	; 0x01
    1f8e:	9a 81       	ldd	r25, Y+2	; 0x02
    1f90:	fc 01       	movw	r30, r24
    1f92:	17 82       	std	Z+7, r1	; 0x07
    1f94:	1c c0       	rjmp	.+56     	; 0x1fce <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x8e>
				}else
				{
					//Turn Off the LED
					PORTA |= (1<<ledToBlink);
    1f96:	82 e2       	ldi	r24, 0x22	; 34
    1f98:	90 e0       	ldi	r25, 0x00	; 0
    1f9a:	22 e2       	ldi	r18, 0x22	; 34
    1f9c:	30 e0       	ldi	r19, 0x00	; 0
    1f9e:	f9 01       	movw	r30, r18
    1fa0:	20 81       	ld	r18, Z
    1fa2:	62 2f       	mov	r22, r18
    1fa4:	29 81       	ldd	r18, Y+1	; 0x01
    1fa6:	3a 81       	ldd	r19, Y+2	; 0x02
    1fa8:	f9 01       	movw	r30, r18
    1faa:	40 85       	ldd	r20, Z+8	; 0x08
    1fac:	51 85       	ldd	r21, Z+9	; 0x09
    1fae:	21 e0       	ldi	r18, 0x01	; 1
    1fb0:	30 e0       	ldi	r19, 0x00	; 0
    1fb2:	04 2e       	mov	r0, r20
    1fb4:	02 c0       	rjmp	.+4      	; 0x1fba <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x7a>
    1fb6:	22 0f       	add	r18, r18
    1fb8:	33 1f       	adc	r19, r19
    1fba:	0a 94       	dec	r0
    1fbc:	e2 f7       	brpl	.-8      	; 0x1fb6 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x76>
    1fbe:	26 2b       	or	r18, r22
    1fc0:	fc 01       	movw	r30, r24
    1fc2:	20 83       	st	Z, r18
					isOff = true;
    1fc4:	89 81       	ldd	r24, Y+1	; 0x01
    1fc6:	9a 81       	ldd	r25, Y+2	; 0x02
    1fc8:	21 e0       	ldi	r18, 0x01	; 1
    1fca:	fc 01       	movw	r30, r24
    1fcc:	27 83       	std	Z+7, r18	; 0x07
				}
			}
    1fce:	0f 90       	pop	r0
    1fd0:	0f 90       	pop	r0
    1fd2:	df 91       	pop	r29
    1fd4:	cf 91       	pop	r28
    1fd6:	08 95       	ret

00001fd8 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEv>:
				 * Detects if the processing was completed before the next scheduler triggered.
				 * @return True if the scheduler timer triggered again before the tasks were fully processes,
				 * False if all the tasks were finished processing (i.e. the dispatch method finished) before
				 * the timer triggered again.
				 */
				bool hasBlownFrame()
    1fd8:	cf 93       	push	r28
    1fda:	df 93       	push	r29
    1fdc:	1f 92       	push	r1
    1fde:	1f 92       	push	r1
    1fe0:	cd b7       	in	r28, 0x3d	; 61
    1fe2:	de b7       	in	r29, 0x3e	; 62
    1fe4:	9a 83       	std	Y+2, r25	; 0x02
    1fe6:	89 83       	std	Y+1, r24	; 0x01
				{
					return blowFrameDetected;
    1fe8:	89 81       	ldd	r24, Y+1	; 0x01
    1fea:	9a 81       	ldd	r25, Y+2	; 0x02
    1fec:	fc 01       	movw	r30, r24
    1fee:	82 8d       	ldd	r24, Z+26	; 0x1a
				}
    1ff0:	0f 90       	pop	r0
    1ff2:	0f 90       	pop	r0
    1ff4:	df 91       	pop	r29
    1ff6:	cf 91       	pop	r28
    1ff8:	08 95       	ret

00001ffa <_ZN10helicopter4util5TimerC1Em9PRESCALERm>:
				 * @timeoutMilliseconds the milliseconds that should go by before the
				 * timer times out. This value must be under 1000.
				 * These variables will have to adhere to this equation:
				 * OCR = ((cpuSpeed /  timerPrescaler) / frequency)
				 */
				Timer (unsigned long cpuSpeed, PRESCALER timerPrescaler, unsigned long timeoutMilliseconds):
    1ffa:	ef 92       	push	r14
    1ffc:	ff 92       	push	r15
    1ffe:	0f 93       	push	r16
    2000:	1f 93       	push	r17
    2002:	cf 93       	push	r28
    2004:	df 93       	push	r29
    2006:	cd b7       	in	r28, 0x3d	; 61
    2008:	de b7       	in	r29, 0x3e	; 62
    200a:	2c 97       	sbiw	r28, 0x0c	; 12
    200c:	0f b6       	in	r0, 0x3f	; 63
    200e:	f8 94       	cli
    2010:	de bf       	out	0x3e, r29	; 62
    2012:	0f be       	out	0x3f, r0	; 63
    2014:	cd bf       	out	0x3d, r28	; 61
    2016:	9a 83       	std	Y+2, r25	; 0x02
    2018:	89 83       	std	Y+1, r24	; 0x01
    201a:	4b 83       	std	Y+3, r20	; 0x03
    201c:	5c 83       	std	Y+4, r21	; 0x04
    201e:	6d 83       	std	Y+5, r22	; 0x05
    2020:	7e 83       	std	Y+6, r23	; 0x06
    2022:	38 87       	std	Y+8, r19	; 0x08
    2024:	2f 83       	std	Y+7, r18	; 0x07
    2026:	e9 86       	std	Y+9, r14	; 0x09
    2028:	fa 86       	std	Y+10, r15	; 0x0a
    202a:	0b 87       	std	Y+11, r16	; 0x0b
    202c:	1c 87       	std	Y+12, r17	; 0x0c
					cpuSpeed(cpuSpeed), timerPrescaler(timerPrescaler), timeoutMilliseconds(timeoutMilliseconds)
    202e:	29 81       	ldd	r18, Y+1	; 0x01
    2030:	3a 81       	ldd	r19, Y+2	; 0x02
    2032:	8b 81       	ldd	r24, Y+3	; 0x03
    2034:	9c 81       	ldd	r25, Y+4	; 0x04
    2036:	ad 81       	ldd	r26, Y+5	; 0x05
    2038:	be 81       	ldd	r27, Y+6	; 0x06
    203a:	f9 01       	movw	r30, r18
    203c:	80 83       	st	Z, r24
    203e:	91 83       	std	Z+1, r25	; 0x01
    2040:	a2 83       	std	Z+2, r26	; 0x02
    2042:	b3 83       	std	Z+3, r27	; 0x03
    2044:	89 81       	ldd	r24, Y+1	; 0x01
    2046:	9a 81       	ldd	r25, Y+2	; 0x02
    2048:	2f 81       	ldd	r18, Y+7	; 0x07
    204a:	38 85       	ldd	r19, Y+8	; 0x08
    204c:	fc 01       	movw	r30, r24
    204e:	35 83       	std	Z+5, r19	; 0x05
    2050:	24 83       	std	Z+4, r18	; 0x04
    2052:	29 85       	ldd	r18, Y+9	; 0x09
    2054:	3a 85       	ldd	r19, Y+10	; 0x0a
    2056:	89 81       	ldd	r24, Y+1	; 0x01
    2058:	9a 81       	ldd	r25, Y+2	; 0x02
    205a:	fc 01       	movw	r30, r24
    205c:	37 83       	std	Z+7, r19	; 0x07
    205e:	26 83       	std	Z+6, r18	; 0x06
					{
						
					}
    2060:	2c 96       	adiw	r28, 0x0c	; 12
    2062:	0f b6       	in	r0, 0x3f	; 63
    2064:	f8 94       	cli
    2066:	de bf       	out	0x3e, r29	; 62
    2068:	0f be       	out	0x3f, r0	; 63
    206a:	cd bf       	out	0x3d, r28	; 61
    206c:	df 91       	pop	r29
    206e:	cf 91       	pop	r28
    2070:	1f 91       	pop	r17
    2072:	0f 91       	pop	r16
    2074:	ff 90       	pop	r15
    2076:	ef 90       	pop	r14
    2078:	08 95       	ret

0000207a <_ZN10helicopter7drivers12SerialDriverC1EmNS1_8UartPortEPNS_4util5TimerEbb>:
				 * only used when enableTimeout = true.
				 * @param enableTimeout Bool indicating if the system should timeout
				 * while waiting to send or receive data. True by default so that the
				 * driver will timeout if it can't send or receive data after a short timeout period.
				 */		
				SerialDriver(
    207a:	cf 92       	push	r12
    207c:	ef 92       	push	r14
    207e:	0f 93       	push	r16
    2080:	1f 93       	push	r17
    2082:	cf 93       	push	r28
    2084:	df 93       	push	r29
    2086:	cd b7       	in	r28, 0x3d	; 61
    2088:	de b7       	in	r29, 0x3e	; 62
    208a:	2b 97       	sbiw	r28, 0x0b	; 11
    208c:	0f b6       	in	r0, 0x3f	; 63
    208e:	f8 94       	cli
    2090:	de bf       	out	0x3e, r29	; 62
    2092:	0f be       	out	0x3f, r0	; 63
    2094:	cd bf       	out	0x3d, r28	; 61
    2096:	9a 83       	std	Y+2, r25	; 0x02
    2098:	89 83       	std	Y+1, r24	; 0x01
    209a:	4b 83       	std	Y+3, r20	; 0x03
    209c:	5c 83       	std	Y+4, r21	; 0x04
    209e:	6d 83       	std	Y+5, r22	; 0x05
    20a0:	7e 83       	std	Y+6, r23	; 0x06
    20a2:	2f 83       	std	Y+7, r18	; 0x07
    20a4:	19 87       	std	Y+9, r17	; 0x09
    20a6:	08 87       	std	Y+8, r16	; 0x08
    20a8:	ea 86       	std	Y+10, r14	; 0x0a
    20aa:	cb 86       	std	Y+11, r12	; 0x0b
					bool useDoubleSpeedMode = false) :
				baudRate(baudRate),
				uartPort(uartPort),
				timer(timer),
				isTimeoutEnabled(enableTimeout),
				useDoubleSpeedMode(useDoubleSpeedMode)
    20ac:	89 81       	ldd	r24, Y+1	; 0x01
    20ae:	9a 81       	ldd	r25, Y+2	; 0x02
    20b0:	2a e0       	ldi	r18, 0x0A	; 10
    20b2:	32 e0       	ldi	r19, 0x02	; 2
    20b4:	fc 01       	movw	r30, r24
    20b6:	31 83       	std	Z+1, r19	; 0x01
    20b8:	20 83       	st	Z, r18
    20ba:	29 81       	ldd	r18, Y+1	; 0x01
    20bc:	3a 81       	ldd	r19, Y+2	; 0x02
    20be:	8b 81       	ldd	r24, Y+3	; 0x03
    20c0:	9c 81       	ldd	r25, Y+4	; 0x04
    20c2:	ad 81       	ldd	r26, Y+5	; 0x05
    20c4:	be 81       	ldd	r27, Y+6	; 0x06
    20c6:	f9 01       	movw	r30, r18
    20c8:	82 83       	std	Z+2, r24	; 0x02
    20ca:	93 83       	std	Z+3, r25	; 0x03
    20cc:	a4 83       	std	Z+4, r26	; 0x04
    20ce:	b5 83       	std	Z+5, r27	; 0x05
    20d0:	89 81       	ldd	r24, Y+1	; 0x01
    20d2:	9a 81       	ldd	r25, Y+2	; 0x02
    20d4:	2f 81       	ldd	r18, Y+7	; 0x07
    20d6:	fc 01       	movw	r30, r24
    20d8:	26 83       	std	Z+6, r18	; 0x06
    20da:	89 81       	ldd	r24, Y+1	; 0x01
    20dc:	9a 81       	ldd	r25, Y+2	; 0x02
    20de:	28 85       	ldd	r18, Y+8	; 0x08
    20e0:	39 85       	ldd	r19, Y+9	; 0x09
    20e2:	fc 01       	movw	r30, r24
    20e4:	30 87       	std	Z+8, r19	; 0x08
    20e6:	27 83       	std	Z+7, r18	; 0x07
    20e8:	89 81       	ldd	r24, Y+1	; 0x01
    20ea:	9a 81       	ldd	r25, Y+2	; 0x02
    20ec:	2a 85       	ldd	r18, Y+10	; 0x0a
    20ee:	fc 01       	movw	r30, r24
    20f0:	21 87       	std	Z+9, r18	; 0x09
    20f2:	89 81       	ldd	r24, Y+1	; 0x01
    20f4:	9a 81       	ldd	r25, Y+2	; 0x02
    20f6:	2b 85       	ldd	r18, Y+11	; 0x0b
    20f8:	fc 01       	movw	r30, r24
    20fa:	22 87       	std	Z+10, r18	; 0x0a
				{
					
				}
    20fc:	2b 96       	adiw	r28, 0x0b	; 11
    20fe:	0f b6       	in	r0, 0x3f	; 63
    2100:	f8 94       	cli
    2102:	de bf       	out	0x3e, r29	; 62
    2104:	0f be       	out	0x3f, r0	; 63
    2106:	cd bf       	out	0x3d, r28	; 61
    2108:	df 91       	pop	r29
    210a:	cf 91       	pop	r28
    210c:	1f 91       	pop	r17
    210e:	0f 91       	pop	r16
    2110:	ef 90       	pop	r14
    2112:	cf 90       	pop	r12
    2114:	08 95       	ret

00002116 <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverE>:
				 * at the same time interval (i.e. 20 milliseconds) for both transmitting a byte as well
				 * as receiving a byte.
				 * @param serialDriver the driver used to communicate with the serial port
				 * which is used to communicate with the Ground Control Station.
				 */
				GroundControlStationInterface(SerialDriver *serialDriver):
    2116:	cf 93       	push	r28
    2118:	df 93       	push	r29
    211a:	00 d0       	rcall	.+0      	; 0x211c <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverE+0x6>
    211c:	1f 92       	push	r1
    211e:	cd b7       	in	r28, 0x3d	; 61
    2120:	de b7       	in	r29, 0x3e	; 62
    2122:	9a 83       	std	Y+2, r25	; 0x02
    2124:	89 83       	std	Y+1, r24	; 0x01
    2126:	7c 83       	std	Y+4, r23	; 0x04
    2128:	6b 83       	std	Y+3, r22	; 0x03
					serialDriver(serialDriver)
    212a:	89 81       	ldd	r24, Y+1	; 0x01
    212c:	9a 81       	ldd	r25, Y+2	; 0x02
    212e:	2b 81       	ldd	r18, Y+3	; 0x03
    2130:	3c 81       	ldd	r19, Y+4	; 0x04
    2132:	fc 01       	movw	r30, r24
    2134:	31 83       	std	Z+1, r19	; 0x01
    2136:	20 83       	st	Z, r18
					{}
    2138:	0f 90       	pop	r0
    213a:	0f 90       	pop	r0
    213c:	0f 90       	pop	r0
    213e:	0f 90       	pop	r0
    2140:	df 91       	pop	r29
    2142:	cf 91       	pop	r28
    2144:	08 95       	ret

00002146 <_ZN10helicopter5model11SystemModelC1Ev>:
			
			public:
			
			double EcefToLocalNEDRotationMatrix[3][3];
			
			SystemModel():
    2146:	cf 93       	push	r28
    2148:	df 93       	push	r29
    214a:	1f 92       	push	r1
    214c:	1f 92       	push	r1
    214e:	cd b7       	in	r28, 0x3d	; 61
    2150:	de b7       	in	r29, 0x3e	; 62
    2152:	9a 83       	std	Y+2, r25	; 0x02
    2154:	89 83       	std	Y+1, r24	; 0x01
				checksumErrors(0),
				numOfFramesBlown(0),
				
				initialXPositionEcef(0),
				initialYPositionEcef(0),
				initialZPositionEcef(0)
    2156:	89 81       	ldd	r24, Y+1	; 0x01
    2158:	9a 81       	ldd	r25, Y+2	; 0x02
    215a:	fc 01       	movw	r30, r24
    215c:	10 82       	st	Z, r1
    215e:	11 82       	std	Z+1, r1	; 0x01
    2160:	12 82       	std	Z+2, r1	; 0x02
    2162:	13 82       	std	Z+3, r1	; 0x03
    2164:	89 81       	ldd	r24, Y+1	; 0x01
    2166:	9a 81       	ldd	r25, Y+2	; 0x02
    2168:	fc 01       	movw	r30, r24
    216a:	14 82       	std	Z+4, r1	; 0x04
    216c:	15 82       	std	Z+5, r1	; 0x05
    216e:	16 82       	std	Z+6, r1	; 0x06
    2170:	17 82       	std	Z+7, r1	; 0x07
    2172:	89 81       	ldd	r24, Y+1	; 0x01
    2174:	9a 81       	ldd	r25, Y+2	; 0x02
    2176:	fc 01       	movw	r30, r24
    2178:	10 86       	std	Z+8, r1	; 0x08
    217a:	11 86       	std	Z+9, r1	; 0x09
    217c:	12 86       	std	Z+10, r1	; 0x0a
    217e:	13 86       	std	Z+11, r1	; 0x0b
    2180:	89 81       	ldd	r24, Y+1	; 0x01
    2182:	9a 81       	ldd	r25, Y+2	; 0x02
    2184:	fc 01       	movw	r30, r24
    2186:	14 86       	std	Z+12, r1	; 0x0c
    2188:	15 86       	std	Z+13, r1	; 0x0d
    218a:	16 86       	std	Z+14, r1	; 0x0e
    218c:	17 86       	std	Z+15, r1	; 0x0f
    218e:	89 81       	ldd	r24, Y+1	; 0x01
    2190:	9a 81       	ldd	r25, Y+2	; 0x02
    2192:	fc 01       	movw	r30, r24
    2194:	10 8a       	std	Z+16, r1	; 0x10
    2196:	11 8a       	std	Z+17, r1	; 0x11
    2198:	12 8a       	std	Z+18, r1	; 0x12
    219a:	13 8a       	std	Z+19, r1	; 0x13
    219c:	89 81       	ldd	r24, Y+1	; 0x01
    219e:	9a 81       	ldd	r25, Y+2	; 0x02
    21a0:	fc 01       	movw	r30, r24
    21a2:	14 8a       	std	Z+20, r1	; 0x14
    21a4:	15 8a       	std	Z+21, r1	; 0x15
    21a6:	16 8a       	std	Z+22, r1	; 0x16
    21a8:	17 8a       	std	Z+23, r1	; 0x17
    21aa:	89 81       	ldd	r24, Y+1	; 0x01
    21ac:	9a 81       	ldd	r25, Y+2	; 0x02
    21ae:	fc 01       	movw	r30, r24
    21b0:	10 8e       	std	Z+24, r1	; 0x18
    21b2:	11 8e       	std	Z+25, r1	; 0x19
    21b4:	12 8e       	std	Z+26, r1	; 0x1a
    21b6:	13 8e       	std	Z+27, r1	; 0x1b
    21b8:	89 81       	ldd	r24, Y+1	; 0x01
    21ba:	9a 81       	ldd	r25, Y+2	; 0x02
    21bc:	fc 01       	movw	r30, r24
    21be:	14 8e       	std	Z+28, r1	; 0x1c
    21c0:	15 8e       	std	Z+29, r1	; 0x1d
    21c2:	16 8e       	std	Z+30, r1	; 0x1e
    21c4:	17 8e       	std	Z+31, r1	; 0x1f
    21c6:	89 81       	ldd	r24, Y+1	; 0x01
    21c8:	9a 81       	ldd	r25, Y+2	; 0x02
    21ca:	fc 01       	movw	r30, r24
    21cc:	10 a2       	std	Z+32, r1	; 0x20
    21ce:	11 a2       	std	Z+33, r1	; 0x21
    21d0:	12 a2       	std	Z+34, r1	; 0x22
    21d2:	13 a2       	std	Z+35, r1	; 0x23
    21d4:	89 81       	ldd	r24, Y+1	; 0x01
    21d6:	9a 81       	ldd	r25, Y+2	; 0x02
    21d8:	fc 01       	movw	r30, r24
    21da:	14 a2       	std	Z+36, r1	; 0x24
    21dc:	15 a2       	std	Z+37, r1	; 0x25
    21de:	16 a2       	std	Z+38, r1	; 0x26
    21e0:	17 a2       	std	Z+39, r1	; 0x27
    21e2:	89 81       	ldd	r24, Y+1	; 0x01
    21e4:	9a 81       	ldd	r25, Y+2	; 0x02
    21e6:	fc 01       	movw	r30, r24
    21e8:	10 a6       	std	Z+40, r1	; 0x28
    21ea:	11 a6       	std	Z+41, r1	; 0x29
    21ec:	12 a6       	std	Z+42, r1	; 0x2a
    21ee:	13 a6       	std	Z+43, r1	; 0x2b
    21f0:	89 81       	ldd	r24, Y+1	; 0x01
    21f2:	9a 81       	ldd	r25, Y+2	; 0x02
    21f4:	fc 01       	movw	r30, r24
    21f6:	14 a6       	std	Z+44, r1	; 0x2c
    21f8:	15 a6       	std	Z+45, r1	; 0x2d
    21fa:	16 a6       	std	Z+46, r1	; 0x2e
    21fc:	17 a6       	std	Z+47, r1	; 0x2f
    21fe:	89 81       	ldd	r24, Y+1	; 0x01
    2200:	9a 81       	ldd	r25, Y+2	; 0x02
    2202:	fc 01       	movw	r30, r24
    2204:	10 aa       	std	Z+48, r1	; 0x30
    2206:	11 aa       	std	Z+49, r1	; 0x31
    2208:	12 aa       	std	Z+50, r1	; 0x32
    220a:	13 aa       	std	Z+51, r1	; 0x33
    220c:	89 81       	ldd	r24, Y+1	; 0x01
    220e:	9a 81       	ldd	r25, Y+2	; 0x02
    2210:	fc 01       	movw	r30, r24
    2212:	14 aa       	std	Z+52, r1	; 0x34
    2214:	15 aa       	std	Z+53, r1	; 0x35
    2216:	16 aa       	std	Z+54, r1	; 0x36
    2218:	17 aa       	std	Z+55, r1	; 0x37
    221a:	89 81       	ldd	r24, Y+1	; 0x01
    221c:	9a 81       	ldd	r25, Y+2	; 0x02
    221e:	fc 01       	movw	r30, r24
    2220:	10 ae       	std	Z+56, r1	; 0x38
    2222:	11 ae       	std	Z+57, r1	; 0x39
    2224:	12 ae       	std	Z+58, r1	; 0x3a
    2226:	13 ae       	std	Z+59, r1	; 0x3b
    2228:	89 81       	ldd	r24, Y+1	; 0x01
    222a:	9a 81       	ldd	r25, Y+2	; 0x02
    222c:	fc 01       	movw	r30, r24
    222e:	14 ae       	std	Z+60, r1	; 0x3c
    2230:	15 ae       	std	Z+61, r1	; 0x3d
    2232:	16 ae       	std	Z+62, r1	; 0x3e
    2234:	17 ae       	std	Z+63, r1	; 0x3f
    2236:	89 81       	ldd	r24, Y+1	; 0x01
    2238:	9a 81       	ldd	r25, Y+2	; 0x02
    223a:	80 5c       	subi	r24, 0xC0	; 192
    223c:	9f 4f       	sbci	r25, 0xFF	; 255
    223e:	fc 01       	movw	r30, r24
    2240:	10 82       	st	Z, r1
    2242:	11 82       	std	Z+1, r1	; 0x01
    2244:	12 82       	std	Z+2, r1	; 0x02
    2246:	13 82       	std	Z+3, r1	; 0x03
    2248:	89 81       	ldd	r24, Y+1	; 0x01
    224a:	9a 81       	ldd	r25, Y+2	; 0x02
    224c:	8c 5b       	subi	r24, 0xBC	; 188
    224e:	9f 4f       	sbci	r25, 0xFF	; 255
    2250:	fc 01       	movw	r30, r24
    2252:	10 82       	st	Z, r1
    2254:	11 82       	std	Z+1, r1	; 0x01
    2256:	12 82       	std	Z+2, r1	; 0x02
    2258:	13 82       	std	Z+3, r1	; 0x03
    225a:	89 81       	ldd	r24, Y+1	; 0x01
    225c:	9a 81       	ldd	r25, Y+2	; 0x02
    225e:	88 5b       	subi	r24, 0xB8	; 184
    2260:	9f 4f       	sbci	r25, 0xFF	; 255
    2262:	fc 01       	movw	r30, r24
    2264:	10 82       	st	Z, r1
    2266:	11 82       	std	Z+1, r1	; 0x01
    2268:	12 82       	std	Z+2, r1	; 0x02
    226a:	13 82       	std	Z+3, r1	; 0x03
    226c:	89 81       	ldd	r24, Y+1	; 0x01
    226e:	9a 81       	ldd	r25, Y+2	; 0x02
    2270:	84 5b       	subi	r24, 0xB4	; 180
    2272:	9f 4f       	sbci	r25, 0xFF	; 255
    2274:	fc 01       	movw	r30, r24
    2276:	10 82       	st	Z, r1
    2278:	11 82       	std	Z+1, r1	; 0x01
    227a:	12 82       	std	Z+2, r1	; 0x02
    227c:	13 82       	std	Z+3, r1	; 0x03
    227e:	89 81       	ldd	r24, Y+1	; 0x01
    2280:	9a 81       	ldd	r25, Y+2	; 0x02
    2282:	80 5b       	subi	r24, 0xB0	; 176
    2284:	9f 4f       	sbci	r25, 0xFF	; 255
    2286:	fc 01       	movw	r30, r24
    2288:	10 82       	st	Z, r1
    228a:	11 82       	std	Z+1, r1	; 0x01
    228c:	12 82       	std	Z+2, r1	; 0x02
    228e:	13 82       	std	Z+3, r1	; 0x03
    2290:	89 81       	ldd	r24, Y+1	; 0x01
    2292:	9a 81       	ldd	r25, Y+2	; 0x02
    2294:	8c 5a       	subi	r24, 0xAC	; 172
    2296:	9f 4f       	sbci	r25, 0xFF	; 255
    2298:	fc 01       	movw	r30, r24
    229a:	10 82       	st	Z, r1
    229c:	11 82       	std	Z+1, r1	; 0x01
    229e:	12 82       	std	Z+2, r1	; 0x02
    22a0:	13 82       	std	Z+3, r1	; 0x03
    22a2:	89 81       	ldd	r24, Y+1	; 0x01
    22a4:	9a 81       	ldd	r25, Y+2	; 0x02
    22a6:	88 5a       	subi	r24, 0xA8	; 168
    22a8:	9f 4f       	sbci	r25, 0xFF	; 255
    22aa:	fc 01       	movw	r30, r24
    22ac:	10 82       	st	Z, r1
    22ae:	11 82       	std	Z+1, r1	; 0x01
    22b0:	12 82       	std	Z+2, r1	; 0x02
    22b2:	13 82       	std	Z+3, r1	; 0x03
    22b4:	89 81       	ldd	r24, Y+1	; 0x01
    22b6:	9a 81       	ldd	r25, Y+2	; 0x02
    22b8:	84 5a       	subi	r24, 0xA4	; 164
    22ba:	9f 4f       	sbci	r25, 0xFF	; 255
    22bc:	fc 01       	movw	r30, r24
    22be:	10 82       	st	Z, r1
    22c0:	11 82       	std	Z+1, r1	; 0x01
    22c2:	12 82       	std	Z+2, r1	; 0x02
    22c4:	13 82       	std	Z+3, r1	; 0x03
    22c6:	89 81       	ldd	r24, Y+1	; 0x01
    22c8:	9a 81       	ldd	r25, Y+2	; 0x02
    22ca:	80 5a       	subi	r24, 0xA0	; 160
    22cc:	9f 4f       	sbci	r25, 0xFF	; 255
    22ce:	fc 01       	movw	r30, r24
    22d0:	10 82       	st	Z, r1
    22d2:	11 82       	std	Z+1, r1	; 0x01
    22d4:	12 82       	std	Z+2, r1	; 0x02
    22d6:	13 82       	std	Z+3, r1	; 0x03
    22d8:	89 81       	ldd	r24, Y+1	; 0x01
    22da:	9a 81       	ldd	r25, Y+2	; 0x02
    22dc:	8c 59       	subi	r24, 0x9C	; 156
    22de:	9f 4f       	sbci	r25, 0xFF	; 255
    22e0:	fc 01       	movw	r30, r24
    22e2:	10 82       	st	Z, r1
    22e4:	11 82       	std	Z+1, r1	; 0x01
    22e6:	12 82       	std	Z+2, r1	; 0x02
    22e8:	13 82       	std	Z+3, r1	; 0x03
    22ea:	89 81       	ldd	r24, Y+1	; 0x01
    22ec:	9a 81       	ldd	r25, Y+2	; 0x02
    22ee:	88 59       	subi	r24, 0x98	; 152
    22f0:	9f 4f       	sbci	r25, 0xFF	; 255
    22f2:	fc 01       	movw	r30, r24
    22f4:	10 82       	st	Z, r1
    22f6:	11 82       	std	Z+1, r1	; 0x01
    22f8:	12 82       	std	Z+2, r1	; 0x02
    22fa:	13 82       	std	Z+3, r1	; 0x03
    22fc:	89 81       	ldd	r24, Y+1	; 0x01
    22fe:	9a 81       	ldd	r25, Y+2	; 0x02
    2300:	84 59       	subi	r24, 0x94	; 148
    2302:	9f 4f       	sbci	r25, 0xFF	; 255
    2304:	fc 01       	movw	r30, r24
    2306:	10 82       	st	Z, r1
    2308:	11 82       	std	Z+1, r1	; 0x01
    230a:	12 82       	std	Z+2, r1	; 0x02
    230c:	13 82       	std	Z+3, r1	; 0x03
    230e:	89 81       	ldd	r24, Y+1	; 0x01
    2310:	9a 81       	ldd	r25, Y+2	; 0x02
    2312:	80 59       	subi	r24, 0x90	; 144
    2314:	9f 4f       	sbci	r25, 0xFF	; 255
    2316:	fc 01       	movw	r30, r24
    2318:	10 82       	st	Z, r1
    231a:	11 82       	std	Z+1, r1	; 0x01
    231c:	12 82       	std	Z+2, r1	; 0x02
    231e:	13 82       	std	Z+3, r1	; 0x03
    2320:	89 81       	ldd	r24, Y+1	; 0x01
    2322:	9a 81       	ldd	r25, Y+2	; 0x02
    2324:	8c 58       	subi	r24, 0x8C	; 140
    2326:	9f 4f       	sbci	r25, 0xFF	; 255
    2328:	fc 01       	movw	r30, r24
    232a:	10 82       	st	Z, r1
    232c:	11 82       	std	Z+1, r1	; 0x01
    232e:	12 82       	std	Z+2, r1	; 0x02
    2330:	13 82       	std	Z+3, r1	; 0x03
    2332:	89 81       	ldd	r24, Y+1	; 0x01
    2334:	9a 81       	ldd	r25, Y+2	; 0x02
    2336:	88 58       	subi	r24, 0x88	; 136
    2338:	9f 4f       	sbci	r25, 0xFF	; 255
    233a:	fc 01       	movw	r30, r24
    233c:	10 82       	st	Z, r1
    233e:	11 82       	std	Z+1, r1	; 0x01
    2340:	12 82       	std	Z+2, r1	; 0x02
    2342:	13 82       	std	Z+3, r1	; 0x03
    2344:	89 81       	ldd	r24, Y+1	; 0x01
    2346:	9a 81       	ldd	r25, Y+2	; 0x02
    2348:	84 58       	subi	r24, 0x84	; 132
    234a:	9f 4f       	sbci	r25, 0xFF	; 255
    234c:	fc 01       	movw	r30, r24
    234e:	10 82       	st	Z, r1
    2350:	11 82       	std	Z+1, r1	; 0x01
    2352:	12 82       	std	Z+2, r1	; 0x02
    2354:	13 82       	std	Z+3, r1	; 0x03
    2356:	89 81       	ldd	r24, Y+1	; 0x01
    2358:	9a 81       	ldd	r25, Y+2	; 0x02
    235a:	80 58       	subi	r24, 0x80	; 128
    235c:	9f 4f       	sbci	r25, 0xFF	; 255
    235e:	fc 01       	movw	r30, r24
    2360:	10 82       	st	Z, r1
    2362:	11 82       	std	Z+1, r1	; 0x01
    2364:	12 82       	std	Z+2, r1	; 0x02
    2366:	13 82       	std	Z+3, r1	; 0x03
    2368:	89 81       	ldd	r24, Y+1	; 0x01
    236a:	9a 81       	ldd	r25, Y+2	; 0x02
    236c:	8c 57       	subi	r24, 0x7C	; 124
    236e:	9f 4f       	sbci	r25, 0xFF	; 255
    2370:	fc 01       	movw	r30, r24
    2372:	10 82       	st	Z, r1
    2374:	11 82       	std	Z+1, r1	; 0x01
    2376:	12 82       	std	Z+2, r1	; 0x02
    2378:	13 82       	std	Z+3, r1	; 0x03
    237a:	89 81       	ldd	r24, Y+1	; 0x01
    237c:	9a 81       	ldd	r25, Y+2	; 0x02
    237e:	88 57       	subi	r24, 0x78	; 120
    2380:	9f 4f       	sbci	r25, 0xFF	; 255
    2382:	fc 01       	movw	r30, r24
    2384:	10 82       	st	Z, r1
    2386:	11 82       	std	Z+1, r1	; 0x01
    2388:	12 82       	std	Z+2, r1	; 0x02
    238a:	13 82       	std	Z+3, r1	; 0x03
    238c:	89 81       	ldd	r24, Y+1	; 0x01
    238e:	9a 81       	ldd	r25, Y+2	; 0x02
    2390:	84 57       	subi	r24, 0x74	; 116
    2392:	9f 4f       	sbci	r25, 0xFF	; 255
    2394:	fc 01       	movw	r30, r24
    2396:	10 82       	st	Z, r1
    2398:	11 82       	std	Z+1, r1	; 0x01
    239a:	12 82       	std	Z+2, r1	; 0x02
    239c:	13 82       	std	Z+3, r1	; 0x03
    239e:	89 81       	ldd	r24, Y+1	; 0x01
    23a0:	9a 81       	ldd	r25, Y+2	; 0x02
    23a2:	80 57       	subi	r24, 0x70	; 112
    23a4:	9f 4f       	sbci	r25, 0xFF	; 255
    23a6:	fc 01       	movw	r30, r24
    23a8:	10 82       	st	Z, r1
    23aa:	11 82       	std	Z+1, r1	; 0x01
    23ac:	12 82       	std	Z+2, r1	; 0x02
    23ae:	13 82       	std	Z+3, r1	; 0x03
    23b0:	89 81       	ldd	r24, Y+1	; 0x01
    23b2:	9a 81       	ldd	r25, Y+2	; 0x02
    23b4:	8c 56       	subi	r24, 0x6C	; 108
    23b6:	9f 4f       	sbci	r25, 0xFF	; 255
    23b8:	fc 01       	movw	r30, r24
    23ba:	10 82       	st	Z, r1
    23bc:	11 82       	std	Z+1, r1	; 0x01
    23be:	12 82       	std	Z+2, r1	; 0x02
    23c0:	13 82       	std	Z+3, r1	; 0x03
    23c2:	89 81       	ldd	r24, Y+1	; 0x01
    23c4:	9a 81       	ldd	r25, Y+2	; 0x02
    23c6:	88 56       	subi	r24, 0x68	; 104
    23c8:	9f 4f       	sbci	r25, 0xFF	; 255
    23ca:	fc 01       	movw	r30, r24
    23cc:	10 82       	st	Z, r1
    23ce:	11 82       	std	Z+1, r1	; 0x01
    23d0:	12 82       	std	Z+2, r1	; 0x02
    23d2:	13 82       	std	Z+3, r1	; 0x03
    23d4:	89 81       	ldd	r24, Y+1	; 0x01
    23d6:	9a 81       	ldd	r25, Y+2	; 0x02
    23d8:	84 56       	subi	r24, 0x64	; 100
    23da:	9f 4f       	sbci	r25, 0xFF	; 255
    23dc:	fc 01       	movw	r30, r24
    23de:	10 82       	st	Z, r1
    23e0:	11 82       	std	Z+1, r1	; 0x01
    23e2:	12 82       	std	Z+2, r1	; 0x02
    23e4:	13 82       	std	Z+3, r1	; 0x03
    23e6:	89 81       	ldd	r24, Y+1	; 0x01
    23e8:	9a 81       	ldd	r25, Y+2	; 0x02
    23ea:	80 56       	subi	r24, 0x60	; 96
    23ec:	9f 4f       	sbci	r25, 0xFF	; 255
    23ee:	fc 01       	movw	r30, r24
    23f0:	10 82       	st	Z, r1
    23f2:	11 82       	std	Z+1, r1	; 0x01
    23f4:	12 82       	std	Z+2, r1	; 0x02
    23f6:	13 82       	std	Z+3, r1	; 0x03
    23f8:	89 81       	ldd	r24, Y+1	; 0x01
    23fa:	9a 81       	ldd	r25, Y+2	; 0x02
    23fc:	8c 55       	subi	r24, 0x5C	; 92
    23fe:	9f 4f       	sbci	r25, 0xFF	; 255
    2400:	fc 01       	movw	r30, r24
    2402:	10 82       	st	Z, r1
    2404:	11 82       	std	Z+1, r1	; 0x01
    2406:	12 82       	std	Z+2, r1	; 0x02
    2408:	13 82       	std	Z+3, r1	; 0x03
    240a:	89 81       	ldd	r24, Y+1	; 0x01
    240c:	9a 81       	ldd	r25, Y+2	; 0x02
    240e:	88 55       	subi	r24, 0x58	; 88
    2410:	9f 4f       	sbci	r25, 0xFF	; 255
    2412:	fc 01       	movw	r30, r24
    2414:	10 82       	st	Z, r1
    2416:	11 82       	std	Z+1, r1	; 0x01
    2418:	12 82       	std	Z+2, r1	; 0x02
    241a:	13 82       	std	Z+3, r1	; 0x03
    241c:	89 81       	ldd	r24, Y+1	; 0x01
    241e:	9a 81       	ldd	r25, Y+2	; 0x02
    2420:	84 55       	subi	r24, 0x54	; 84
    2422:	9f 4f       	sbci	r25, 0xFF	; 255
    2424:	fc 01       	movw	r30, r24
    2426:	10 82       	st	Z, r1
    2428:	11 82       	std	Z+1, r1	; 0x01
    242a:	12 82       	std	Z+2, r1	; 0x02
    242c:	13 82       	std	Z+3, r1	; 0x03
    242e:	89 81       	ldd	r24, Y+1	; 0x01
    2430:	9a 81       	ldd	r25, Y+2	; 0x02
    2432:	80 55       	subi	r24, 0x50	; 80
    2434:	9f 4f       	sbci	r25, 0xFF	; 255
    2436:	fc 01       	movw	r30, r24
    2438:	10 82       	st	Z, r1
    243a:	11 82       	std	Z+1, r1	; 0x01
    243c:	12 82       	std	Z+2, r1	; 0x02
    243e:	13 82       	std	Z+3, r1	; 0x03
    2440:	89 81       	ldd	r24, Y+1	; 0x01
    2442:	9a 81       	ldd	r25, Y+2	; 0x02
    2444:	8c 54       	subi	r24, 0x4C	; 76
    2446:	9f 4f       	sbci	r25, 0xFF	; 255
    2448:	fc 01       	movw	r30, r24
    244a:	10 82       	st	Z, r1
    244c:	11 82       	std	Z+1, r1	; 0x01
    244e:	12 82       	std	Z+2, r1	; 0x02
    2450:	13 82       	std	Z+3, r1	; 0x03
    2452:	89 81       	ldd	r24, Y+1	; 0x01
    2454:	9a 81       	ldd	r25, Y+2	; 0x02
    2456:	88 54       	subi	r24, 0x48	; 72
    2458:	9f 4f       	sbci	r25, 0xFF	; 255
    245a:	fc 01       	movw	r30, r24
    245c:	10 82       	st	Z, r1
    245e:	11 82       	std	Z+1, r1	; 0x01
    2460:	12 82       	std	Z+2, r1	; 0x02
    2462:	13 82       	std	Z+3, r1	; 0x03
    2464:	89 81       	ldd	r24, Y+1	; 0x01
    2466:	9a 81       	ldd	r25, Y+2	; 0x02
    2468:	84 54       	subi	r24, 0x44	; 68
    246a:	9f 4f       	sbci	r25, 0xFF	; 255
    246c:	fc 01       	movw	r30, r24
    246e:	10 82       	st	Z, r1
    2470:	11 82       	std	Z+1, r1	; 0x01
    2472:	12 82       	std	Z+2, r1	; 0x02
    2474:	13 82       	std	Z+3, r1	; 0x03
    2476:	89 81       	ldd	r24, Y+1	; 0x01
    2478:	9a 81       	ldd	r25, Y+2	; 0x02
    247a:	80 54       	subi	r24, 0x40	; 64
    247c:	9f 4f       	sbci	r25, 0xFF	; 255
    247e:	fc 01       	movw	r30, r24
    2480:	10 82       	st	Z, r1
    2482:	11 82       	std	Z+1, r1	; 0x01
    2484:	12 82       	std	Z+2, r1	; 0x02
    2486:	13 82       	std	Z+3, r1	; 0x03
    2488:	89 81       	ldd	r24, Y+1	; 0x01
    248a:	9a 81       	ldd	r25, Y+2	; 0x02
    248c:	8c 53       	subi	r24, 0x3C	; 60
    248e:	9f 4f       	sbci	r25, 0xFF	; 255
    2490:	fc 01       	movw	r30, r24
    2492:	10 82       	st	Z, r1
    2494:	11 82       	std	Z+1, r1	; 0x01
    2496:	12 82       	std	Z+2, r1	; 0x02
    2498:	13 82       	std	Z+3, r1	; 0x03
			{
				EcefToLocalNEDRotationMatrix[0][0] = 0;
    249a:	89 81       	ldd	r24, Y+1	; 0x01
    249c:	9a 81       	ldd	r25, Y+2	; 0x02
    249e:	88 53       	subi	r24, 0x38	; 56
    24a0:	9f 4f       	sbci	r25, 0xFF	; 255
    24a2:	fc 01       	movw	r30, r24
    24a4:	10 82       	st	Z, r1
    24a6:	11 82       	std	Z+1, r1	; 0x01
    24a8:	12 82       	std	Z+2, r1	; 0x02
    24aa:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[0][1] = 0;
    24ac:	89 81       	ldd	r24, Y+1	; 0x01
    24ae:	9a 81       	ldd	r25, Y+2	; 0x02
    24b0:	84 53       	subi	r24, 0x34	; 52
    24b2:	9f 4f       	sbci	r25, 0xFF	; 255
    24b4:	fc 01       	movw	r30, r24
    24b6:	10 82       	st	Z, r1
    24b8:	11 82       	std	Z+1, r1	; 0x01
    24ba:	12 82       	std	Z+2, r1	; 0x02
    24bc:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[0][2] = 0;
    24be:	89 81       	ldd	r24, Y+1	; 0x01
    24c0:	9a 81       	ldd	r25, Y+2	; 0x02
    24c2:	80 53       	subi	r24, 0x30	; 48
    24c4:	9f 4f       	sbci	r25, 0xFF	; 255
    24c6:	fc 01       	movw	r30, r24
    24c8:	10 82       	st	Z, r1
    24ca:	11 82       	std	Z+1, r1	; 0x01
    24cc:	12 82       	std	Z+2, r1	; 0x02
    24ce:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][0] = 0;
    24d0:	89 81       	ldd	r24, Y+1	; 0x01
    24d2:	9a 81       	ldd	r25, Y+2	; 0x02
    24d4:	8c 52       	subi	r24, 0x2C	; 44
    24d6:	9f 4f       	sbci	r25, 0xFF	; 255
    24d8:	fc 01       	movw	r30, r24
    24da:	10 82       	st	Z, r1
    24dc:	11 82       	std	Z+1, r1	; 0x01
    24de:	12 82       	std	Z+2, r1	; 0x02
    24e0:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][1] = 0;
    24e2:	89 81       	ldd	r24, Y+1	; 0x01
    24e4:	9a 81       	ldd	r25, Y+2	; 0x02
    24e6:	88 52       	subi	r24, 0x28	; 40
    24e8:	9f 4f       	sbci	r25, 0xFF	; 255
    24ea:	fc 01       	movw	r30, r24
    24ec:	10 82       	st	Z, r1
    24ee:	11 82       	std	Z+1, r1	; 0x01
    24f0:	12 82       	std	Z+2, r1	; 0x02
    24f2:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][2] = 0;
    24f4:	89 81       	ldd	r24, Y+1	; 0x01
    24f6:	9a 81       	ldd	r25, Y+2	; 0x02
    24f8:	84 52       	subi	r24, 0x24	; 36
    24fa:	9f 4f       	sbci	r25, 0xFF	; 255
    24fc:	fc 01       	movw	r30, r24
    24fe:	10 82       	st	Z, r1
    2500:	11 82       	std	Z+1, r1	; 0x01
    2502:	12 82       	std	Z+2, r1	; 0x02
    2504:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][0] = 0;
    2506:	89 81       	ldd	r24, Y+1	; 0x01
    2508:	9a 81       	ldd	r25, Y+2	; 0x02
    250a:	80 52       	subi	r24, 0x20	; 32
    250c:	9f 4f       	sbci	r25, 0xFF	; 255
    250e:	fc 01       	movw	r30, r24
    2510:	10 82       	st	Z, r1
    2512:	11 82       	std	Z+1, r1	; 0x01
    2514:	12 82       	std	Z+2, r1	; 0x02
    2516:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][1] = 0;
    2518:	89 81       	ldd	r24, Y+1	; 0x01
    251a:	9a 81       	ldd	r25, Y+2	; 0x02
    251c:	8c 51       	subi	r24, 0x1C	; 28
    251e:	9f 4f       	sbci	r25, 0xFF	; 255
    2520:	fc 01       	movw	r30, r24
    2522:	10 82       	st	Z, r1
    2524:	11 82       	std	Z+1, r1	; 0x01
    2526:	12 82       	std	Z+2, r1	; 0x02
    2528:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][2] = 0;								
    252a:	89 81       	ldd	r24, Y+1	; 0x01
    252c:	9a 81       	ldd	r25, Y+2	; 0x02
    252e:	88 51       	subi	r24, 0x18	; 24
    2530:	9f 4f       	sbci	r25, 0xFF	; 255
    2532:	fc 01       	movw	r30, r24
    2534:	10 82       	st	Z, r1
    2536:	11 82       	std	Z+1, r1	; 0x01
    2538:	12 82       	std	Z+2, r1	; 0x02
    253a:	13 82       	std	Z+3, r1	; 0x03
			}
    253c:	0f 90       	pop	r0
    253e:	0f 90       	pop	r0
    2540:	df 91       	pop	r29
    2542:	cf 91       	pop	r28
    2544:	08 95       	ret

00002546 <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEd>:
			void MagYawDegrees(double val) { magYawDegrees = val; }	
				
				
				
			double ReferenceMagYawDegrees() const {return referenceMagYawDegrees;}
			void ReferenceMagYawDegrees(double val) { referenceMagYawDegrees = val;}
    2546:	cf 93       	push	r28
    2548:	df 93       	push	r29
    254a:	00 d0       	rcall	.+0      	; 0x254c <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEd+0x6>
    254c:	00 d0       	rcall	.+0      	; 0x254e <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEd+0x8>
    254e:	cd b7       	in	r28, 0x3d	; 61
    2550:	de b7       	in	r29, 0x3e	; 62
    2552:	9a 83       	std	Y+2, r25	; 0x02
    2554:	89 83       	std	Y+1, r24	; 0x01
    2556:	4b 83       	std	Y+3, r20	; 0x03
    2558:	5c 83       	std	Y+4, r21	; 0x04
    255a:	6d 83       	std	Y+5, r22	; 0x05
    255c:	7e 83       	std	Y+6, r23	; 0x06
    255e:	29 81       	ldd	r18, Y+1	; 0x01
    2560:	3a 81       	ldd	r19, Y+2	; 0x02
    2562:	8b 81       	ldd	r24, Y+3	; 0x03
    2564:	9c 81       	ldd	r25, Y+4	; 0x04
    2566:	ad 81       	ldd	r26, Y+5	; 0x05
    2568:	be 81       	ldd	r27, Y+6	; 0x06
    256a:	f9 01       	movw	r30, r18
    256c:	84 83       	std	Z+4, r24	; 0x04
    256e:	95 83       	std	Z+5, r25	; 0x05
    2570:	a6 83       	std	Z+6, r26	; 0x06
    2572:	b7 83       	std	Z+7, r27	; 0x07
    2574:	26 96       	adiw	r28, 0x06	; 6
    2576:	0f b6       	in	r0, 0x3f	; 63
    2578:	f8 94       	cli
    257a:	de bf       	out	0x3e, r29	; 62
    257c:	0f be       	out	0x3f, r0	; 63
    257e:	cd bf       	out	0x3d, r28	; 61
    2580:	df 91       	pop	r29
    2582:	cf 91       	pop	r28
    2584:	08 95       	ret

00002586 <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEd>:
				
			double YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
			void YawVelocityDegreesPerSecond(double val) { yawVelocityDegreesPerSecond = val;}
				
			double ReferenceYawVelocityDegreesPerSecond() const {return referenceYawVelocityDegreesPerSecond;}
			void ReferenceYawVelocityDegreesPerSecond(double val) { referenceYawVelocityDegreesPerSecond = val;}
    2586:	cf 93       	push	r28
    2588:	df 93       	push	r29
    258a:	00 d0       	rcall	.+0      	; 0x258c <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEd+0x6>
    258c:	00 d0       	rcall	.+0      	; 0x258e <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEd+0x8>
    258e:	cd b7       	in	r28, 0x3d	; 61
    2590:	de b7       	in	r29, 0x3e	; 62
    2592:	9a 83       	std	Y+2, r25	; 0x02
    2594:	89 83       	std	Y+1, r24	; 0x01
    2596:	4b 83       	std	Y+3, r20	; 0x03
    2598:	5c 83       	std	Y+4, r21	; 0x04
    259a:	6d 83       	std	Y+5, r22	; 0x05
    259c:	7e 83       	std	Y+6, r23	; 0x06
    259e:	29 81       	ldd	r18, Y+1	; 0x01
    25a0:	3a 81       	ldd	r19, Y+2	; 0x02
    25a2:	8b 81       	ldd	r24, Y+3	; 0x03
    25a4:	9c 81       	ldd	r25, Y+4	; 0x04
    25a6:	ad 81       	ldd	r26, Y+5	; 0x05
    25a8:	be 81       	ldd	r27, Y+6	; 0x06
    25aa:	f9 01       	movw	r30, r18
    25ac:	84 8b       	std	Z+20, r24	; 0x14
    25ae:	95 8b       	std	Z+21, r25	; 0x15
    25b0:	a6 8b       	std	Z+22, r26	; 0x16
    25b2:	b7 8b       	std	Z+23, r27	; 0x17
    25b4:	26 96       	adiw	r28, 0x06	; 6
    25b6:	0f b6       	in	r0, 0x3f	; 63
    25b8:	f8 94       	cli
    25ba:	de bf       	out	0x3e, r29	; 62
    25bc:	0f be       	out	0x3f, r0	; 63
    25be:	cd bf       	out	0x3d, r28	; 61
    25c0:	df 91       	pop	r29
    25c2:	cf 91       	pop	r28
    25c4:	08 95       	ret

000025c6 <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>:

			double ZDerivativeError() const {return zDerivativeError;}
			void ZDerivativeError(double val) { zDerivativeError = val;}						
						
						
			double LatitudeDegrees() const {return latitudeDegrees;}
    25c6:	cf 93       	push	r28
    25c8:	df 93       	push	r29
    25ca:	1f 92       	push	r1
    25cc:	1f 92       	push	r1
    25ce:	cd b7       	in	r28, 0x3d	; 61
    25d0:	de b7       	in	r29, 0x3e	; 62
    25d2:	9a 83       	std	Y+2, r25	; 0x02
    25d4:	89 83       	std	Y+1, r24	; 0x01
    25d6:	89 81       	ldd	r24, Y+1	; 0x01
    25d8:	9a 81       	ldd	r25, Y+2	; 0x02
    25da:	8c 55       	subi	r24, 0x5C	; 92
    25dc:	9f 4f       	sbci	r25, 0xFF	; 255
    25de:	fc 01       	movw	r30, r24
    25e0:	80 81       	ld	r24, Z
    25e2:	91 81       	ldd	r25, Z+1	; 0x01
    25e4:	a2 81       	ldd	r26, Z+2	; 0x02
    25e6:	b3 81       	ldd	r27, Z+3	; 0x03
    25e8:	bc 01       	movw	r22, r24
    25ea:	cd 01       	movw	r24, r26
    25ec:	0f 90       	pop	r0
    25ee:	0f 90       	pop	r0
    25f0:	df 91       	pop	r29
    25f2:	cf 91       	pop	r28
    25f4:	08 95       	ret

000025f6 <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>:
			void LatitudeDegrees(double val) { latitudeDegrees = val;}						

			double LongitudeDegrees() const {return longitudeDegrees;}
    25f6:	cf 93       	push	r28
    25f8:	df 93       	push	r29
    25fa:	1f 92       	push	r1
    25fc:	1f 92       	push	r1
    25fe:	cd b7       	in	r28, 0x3d	; 61
    2600:	de b7       	in	r29, 0x3e	; 62
    2602:	9a 83       	std	Y+2, r25	; 0x02
    2604:	89 83       	std	Y+1, r24	; 0x01
    2606:	89 81       	ldd	r24, Y+1	; 0x01
    2608:	9a 81       	ldd	r25, Y+2	; 0x02
    260a:	88 55       	subi	r24, 0x58	; 88
    260c:	9f 4f       	sbci	r25, 0xFF	; 255
    260e:	fc 01       	movw	r30, r24
    2610:	80 81       	ld	r24, Z
    2612:	91 81       	ldd	r25, Z+1	; 0x01
    2614:	a2 81       	ldd	r26, Z+2	; 0x02
    2616:	b3 81       	ldd	r27, Z+3	; 0x03
    2618:	bc 01       	movw	r22, r24
    261a:	cd 01       	movw	r24, r26
    261c:	0f 90       	pop	r0
    261e:	0f 90       	pop	r0
    2620:	df 91       	pop	r29
    2622:	cf 91       	pop	r28
    2624:	08 95       	ret

00002626 <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl>:
			
			long  BlownFrames() const {return numOfFramesBlown;}
			void BlownFrames( long val ) { numOfFramesBlown = val;}

			long  InitialXPositionEcef() const {return initialXPositionEcef;}
			void InitialXPositionEcef( long val ) { initialXPositionEcef = val;}			
    2626:	cf 93       	push	r28
    2628:	df 93       	push	r29
    262a:	00 d0       	rcall	.+0      	; 0x262c <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl+0x6>
    262c:	00 d0       	rcall	.+0      	; 0x262e <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl+0x8>
    262e:	cd b7       	in	r28, 0x3d	; 61
    2630:	de b7       	in	r29, 0x3e	; 62
    2632:	9a 83       	std	Y+2, r25	; 0x02
    2634:	89 83       	std	Y+1, r24	; 0x01
    2636:	4b 83       	std	Y+3, r20	; 0x03
    2638:	5c 83       	std	Y+4, r21	; 0x04
    263a:	6d 83       	std	Y+5, r22	; 0x05
    263c:	7e 83       	std	Y+6, r23	; 0x06
    263e:	6b 81       	ldd	r22, Y+3	; 0x03
    2640:	7c 81       	ldd	r23, Y+4	; 0x04
    2642:	8d 81       	ldd	r24, Y+5	; 0x05
    2644:	9e 81       	ldd	r25, Y+6	; 0x06
    2646:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    264a:	dc 01       	movw	r26, r24
    264c:	cb 01       	movw	r24, r22
    264e:	29 81       	ldd	r18, Y+1	; 0x01
    2650:	3a 81       	ldd	r19, Y+2	; 0x02
    2652:	24 54       	subi	r18, 0x44	; 68
    2654:	3f 4f       	sbci	r19, 0xFF	; 255
    2656:	f9 01       	movw	r30, r18
    2658:	80 83       	st	Z, r24
    265a:	91 83       	std	Z+1, r25	; 0x01
    265c:	a2 83       	std	Z+2, r26	; 0x02
    265e:	b3 83       	std	Z+3, r27	; 0x03
    2660:	26 96       	adiw	r28, 0x06	; 6
    2662:	0f b6       	in	r0, 0x3f	; 63
    2664:	f8 94       	cli
    2666:	de bf       	out	0x3e, r29	; 62
    2668:	0f be       	out	0x3f, r0	; 63
    266a:	cd bf       	out	0x3d, r28	; 61
    266c:	df 91       	pop	r29
    266e:	cf 91       	pop	r28
    2670:	08 95       	ret

00002672 <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl>:

			long  InitialYPositionEcef() const {return initialYPositionEcef;}
			void InitialYPositionEcef( long val ) { initialYPositionEcef = val;}
    2672:	cf 93       	push	r28
    2674:	df 93       	push	r29
    2676:	00 d0       	rcall	.+0      	; 0x2678 <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl+0x6>
    2678:	00 d0       	rcall	.+0      	; 0x267a <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl+0x8>
    267a:	cd b7       	in	r28, 0x3d	; 61
    267c:	de b7       	in	r29, 0x3e	; 62
    267e:	9a 83       	std	Y+2, r25	; 0x02
    2680:	89 83       	std	Y+1, r24	; 0x01
    2682:	4b 83       	std	Y+3, r20	; 0x03
    2684:	5c 83       	std	Y+4, r21	; 0x04
    2686:	6d 83       	std	Y+5, r22	; 0x05
    2688:	7e 83       	std	Y+6, r23	; 0x06
    268a:	6b 81       	ldd	r22, Y+3	; 0x03
    268c:	7c 81       	ldd	r23, Y+4	; 0x04
    268e:	8d 81       	ldd	r24, Y+5	; 0x05
    2690:	9e 81       	ldd	r25, Y+6	; 0x06
    2692:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    2696:	dc 01       	movw	r26, r24
    2698:	cb 01       	movw	r24, r22
    269a:	29 81       	ldd	r18, Y+1	; 0x01
    269c:	3a 81       	ldd	r19, Y+2	; 0x02
    269e:	20 54       	subi	r18, 0x40	; 64
    26a0:	3f 4f       	sbci	r19, 0xFF	; 255
    26a2:	f9 01       	movw	r30, r18
    26a4:	80 83       	st	Z, r24
    26a6:	91 83       	std	Z+1, r25	; 0x01
    26a8:	a2 83       	std	Z+2, r26	; 0x02
    26aa:	b3 83       	std	Z+3, r27	; 0x03
    26ac:	26 96       	adiw	r28, 0x06	; 6
    26ae:	0f b6       	in	r0, 0x3f	; 63
    26b0:	f8 94       	cli
    26b2:	de bf       	out	0x3e, r29	; 62
    26b4:	0f be       	out	0x3f, r0	; 63
    26b6:	cd bf       	out	0x3d, r28	; 61
    26b8:	df 91       	pop	r29
    26ba:	cf 91       	pop	r28
    26bc:	08 95       	ret

000026be <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl>:

			long  InitialZPositionEcef() const {return initialZPositionEcef;}
			void InitialZPositionEcef( long val ) { initialZPositionEcef = val;}							
    26be:	cf 93       	push	r28
    26c0:	df 93       	push	r29
    26c2:	00 d0       	rcall	.+0      	; 0x26c4 <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl+0x6>
    26c4:	00 d0       	rcall	.+0      	; 0x26c6 <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl+0x8>
    26c6:	cd b7       	in	r28, 0x3d	; 61
    26c8:	de b7       	in	r29, 0x3e	; 62
    26ca:	9a 83       	std	Y+2, r25	; 0x02
    26cc:	89 83       	std	Y+1, r24	; 0x01
    26ce:	4b 83       	std	Y+3, r20	; 0x03
    26d0:	5c 83       	std	Y+4, r21	; 0x04
    26d2:	6d 83       	std	Y+5, r22	; 0x05
    26d4:	7e 83       	std	Y+6, r23	; 0x06
    26d6:	6b 81       	ldd	r22, Y+3	; 0x03
    26d8:	7c 81       	ldd	r23, Y+4	; 0x04
    26da:	8d 81       	ldd	r24, Y+5	; 0x05
    26dc:	9e 81       	ldd	r25, Y+6	; 0x06
    26de:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    26e2:	dc 01       	movw	r26, r24
    26e4:	cb 01       	movw	r24, r22
    26e6:	29 81       	ldd	r18, Y+1	; 0x01
    26e8:	3a 81       	ldd	r19, Y+2	; 0x02
    26ea:	2c 53       	subi	r18, 0x3C	; 60
    26ec:	3f 4f       	sbci	r19, 0xFF	; 255
    26ee:	f9 01       	movw	r30, r18
    26f0:	80 83       	st	Z, r24
    26f2:	91 83       	std	Z+1, r25	; 0x01
    26f4:	a2 83       	std	Z+2, r26	; 0x02
    26f6:	b3 83       	std	Z+3, r27	; 0x03
    26f8:	26 96       	adiw	r28, 0x06	; 6
    26fa:	0f b6       	in	r0, 0x3f	; 63
    26fc:	f8 94       	cli
    26fe:	de bf       	out	0x3e, r29	; 62
    2700:	0f be       	out	0x3f, r0	; 63
    2702:	cd bf       	out	0x3d, r28	; 61
    2704:	df 91       	pop	r29
    2706:	cf 91       	pop	r28
    2708:	08 95       	ret

0000270a <_ZN10helicopter7drivers11ServoDriverC1Ev>:
				double minControlValue;
				double maxControlValue;
					
				
			public:
				ServoDriver(): 
    270a:	cf 93       	push	r28
    270c:	df 93       	push	r29
    270e:	1f 92       	push	r1
    2710:	1f 92       	push	r1
    2712:	cd b7       	in	r28, 0x3d	; 61
    2714:	de b7       	in	r29, 0x3e	; 62
    2716:	9a 83       	std	Y+2, r25	; 0x02
    2718:	89 83       	std	Y+1, r24	; 0x01
					minControlValue(0), 
					maxControlValue(0)
    271a:	89 81       	ldd	r24, Y+1	; 0x01
    271c:	9a 81       	ldd	r25, Y+2	; 0x02
    271e:	28 e1       	ldi	r18, 0x18	; 24
    2720:	32 e0       	ldi	r19, 0x02	; 2
    2722:	fc 01       	movw	r30, r24
    2724:	31 83       	std	Z+1, r19	; 0x01
    2726:	20 83       	st	Z, r18
    2728:	89 81       	ldd	r24, Y+1	; 0x01
    272a:	9a 81       	ldd	r25, Y+2	; 0x02
    272c:	fc 01       	movw	r30, r24
    272e:	12 82       	std	Z+2, r1	; 0x02
    2730:	13 82       	std	Z+3, r1	; 0x03
    2732:	14 82       	std	Z+4, r1	; 0x04
    2734:	15 82       	std	Z+5, r1	; 0x05
    2736:	89 81       	ldd	r24, Y+1	; 0x01
    2738:	9a 81       	ldd	r25, Y+2	; 0x02
    273a:	fc 01       	movw	r30, r24
    273c:	16 82       	std	Z+6, r1	; 0x06
    273e:	17 82       	std	Z+7, r1	; 0x07
    2740:	10 86       	std	Z+8, r1	; 0x08
    2742:	11 86       	std	Z+9, r1	; 0x09
				{
					
				}
    2744:	0f 90       	pop	r0
    2746:	0f 90       	pop	r0
    2748:	df 91       	pop	r29
    274a:	cf 91       	pop	r28
    274c:	08 95       	ret

0000274e <_ZN10helicopter10controller13PIDController16setXIntegralGainEd>:
			public:
				PIDController (SystemModel *model, ServoDriver *servoDriver);
					
				~PIDController();
				
				void setXIntegralGain(double val)
    274e:	cf 93       	push	r28
    2750:	df 93       	push	r29
    2752:	00 d0       	rcall	.+0      	; 0x2754 <_ZN10helicopter10controller13PIDController16setXIntegralGainEd+0x6>
    2754:	00 d0       	rcall	.+0      	; 0x2756 <_ZN10helicopter10controller13PIDController16setXIntegralGainEd+0x8>
    2756:	cd b7       	in	r28, 0x3d	; 61
    2758:	de b7       	in	r29, 0x3e	; 62
    275a:	9a 83       	std	Y+2, r25	; 0x02
    275c:	89 83       	std	Y+1, r24	; 0x01
    275e:	4b 83       	std	Y+3, r20	; 0x03
    2760:	5c 83       	std	Y+4, r21	; 0x04
    2762:	6d 83       	std	Y+5, r22	; 0x05
    2764:	7e 83       	std	Y+6, r23	; 0x06
				{
					xIntegralGain = val;
    2766:	29 81       	ldd	r18, Y+1	; 0x01
    2768:	3a 81       	ldd	r19, Y+2	; 0x02
    276a:	8b 81       	ldd	r24, Y+3	; 0x03
    276c:	9c 81       	ldd	r25, Y+4	; 0x04
    276e:	ad 81       	ldd	r26, Y+5	; 0x05
    2770:	be 81       	ldd	r27, Y+6	; 0x06
    2772:	f9 01       	movw	r30, r18
    2774:	84 8b       	std	Z+20, r24	; 0x14
    2776:	95 8b       	std	Z+21, r25	; 0x15
    2778:	a6 8b       	std	Z+22, r26	; 0x16
    277a:	b7 8b       	std	Z+23, r27	; 0x17
				}
    277c:	26 96       	adiw	r28, 0x06	; 6
    277e:	0f b6       	in	r0, 0x3f	; 63
    2780:	f8 94       	cli
    2782:	de bf       	out	0x3e, r29	; 62
    2784:	0f be       	out	0x3f, r0	; 63
    2786:	cd bf       	out	0x3d, r28	; 61
    2788:	df 91       	pop	r29
    278a:	cf 91       	pop	r28
    278c:	08 95       	ret

0000278e <_ZN10helicopter10controller13PIDController18setXDerivativeGainEd>:
				
				void setXDerivativeGain(double val)
    278e:	cf 93       	push	r28
    2790:	df 93       	push	r29
    2792:	00 d0       	rcall	.+0      	; 0x2794 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEd+0x6>
    2794:	00 d0       	rcall	.+0      	; 0x2796 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEd+0x8>
    2796:	cd b7       	in	r28, 0x3d	; 61
    2798:	de b7       	in	r29, 0x3e	; 62
    279a:	9a 83       	std	Y+2, r25	; 0x02
    279c:	89 83       	std	Y+1, r24	; 0x01
    279e:	4b 83       	std	Y+3, r20	; 0x03
    27a0:	5c 83       	std	Y+4, r21	; 0x04
    27a2:	6d 83       	std	Y+5, r22	; 0x05
    27a4:	7e 83       	std	Y+6, r23	; 0x06
				{
					xDerivativeGain = val;
    27a6:	29 81       	ldd	r18, Y+1	; 0x01
    27a8:	3a 81       	ldd	r19, Y+2	; 0x02
    27aa:	8b 81       	ldd	r24, Y+3	; 0x03
    27ac:	9c 81       	ldd	r25, Y+4	; 0x04
    27ae:	ad 81       	ldd	r26, Y+5	; 0x05
    27b0:	be 81       	ldd	r27, Y+6	; 0x06
    27b2:	f9 01       	movw	r30, r18
    27b4:	80 8f       	std	Z+24, r24	; 0x18
    27b6:	91 8f       	std	Z+25, r25	; 0x19
    27b8:	a2 8f       	std	Z+26, r26	; 0x1a
    27ba:	b3 8f       	std	Z+27, r27	; 0x1b
				}
    27bc:	26 96       	adiw	r28, 0x06	; 6
    27be:	0f b6       	in	r0, 0x3f	; 63
    27c0:	f8 94       	cli
    27c2:	de bf       	out	0x3e, r29	; 62
    27c4:	0f be       	out	0x3f, r0	; 63
    27c6:	cd bf       	out	0x3d, r28	; 61
    27c8:	df 91       	pop	r29
    27ca:	cf 91       	pop	r28
    27cc:	08 95       	ret

000027ce <_ZN10helicopter10controller13PIDController20setXProportionalGainEd>:
				
				void setXProportionalGain(double val)
    27ce:	cf 93       	push	r28
    27d0:	df 93       	push	r29
    27d2:	00 d0       	rcall	.+0      	; 0x27d4 <_ZN10helicopter10controller13PIDController20setXProportionalGainEd+0x6>
    27d4:	00 d0       	rcall	.+0      	; 0x27d6 <_ZN10helicopter10controller13PIDController20setXProportionalGainEd+0x8>
    27d6:	cd b7       	in	r28, 0x3d	; 61
    27d8:	de b7       	in	r29, 0x3e	; 62
    27da:	9a 83       	std	Y+2, r25	; 0x02
    27dc:	89 83       	std	Y+1, r24	; 0x01
    27de:	4b 83       	std	Y+3, r20	; 0x03
    27e0:	5c 83       	std	Y+4, r21	; 0x04
    27e2:	6d 83       	std	Y+5, r22	; 0x05
    27e4:	7e 83       	std	Y+6, r23	; 0x06
				{
					xProportionalGain = val;
    27e6:	29 81       	ldd	r18, Y+1	; 0x01
    27e8:	3a 81       	ldd	r19, Y+2	; 0x02
    27ea:	8b 81       	ldd	r24, Y+3	; 0x03
    27ec:	9c 81       	ldd	r25, Y+4	; 0x04
    27ee:	ad 81       	ldd	r26, Y+5	; 0x05
    27f0:	be 81       	ldd	r27, Y+6	; 0x06
    27f2:	f9 01       	movw	r30, r18
    27f4:	84 8f       	std	Z+28, r24	; 0x1c
    27f6:	95 8f       	std	Z+29, r25	; 0x1d
    27f8:	a6 8f       	std	Z+30, r26	; 0x1e
    27fa:	b7 8f       	std	Z+31, r27	; 0x1f
				}
    27fc:	26 96       	adiw	r28, 0x06	; 6
    27fe:	0f b6       	in	r0, 0x3f	; 63
    2800:	f8 94       	cli
    2802:	de bf       	out	0x3e, r29	; 62
    2804:	0f be       	out	0x3f, r0	; 63
    2806:	cd bf       	out	0x3d, r28	; 61
    2808:	df 91       	pop	r29
    280a:	cf 91       	pop	r28
    280c:	08 95       	ret

0000280e <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEd>:
				
				void setXAntiWindupGain(double val)
    280e:	cf 93       	push	r28
    2810:	df 93       	push	r29
    2812:	00 d0       	rcall	.+0      	; 0x2814 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEd+0x6>
    2814:	00 d0       	rcall	.+0      	; 0x2816 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEd+0x8>
    2816:	cd b7       	in	r28, 0x3d	; 61
    2818:	de b7       	in	r29, 0x3e	; 62
    281a:	9a 83       	std	Y+2, r25	; 0x02
    281c:	89 83       	std	Y+1, r24	; 0x01
    281e:	4b 83       	std	Y+3, r20	; 0x03
    2820:	5c 83       	std	Y+4, r21	; 0x04
    2822:	6d 83       	std	Y+5, r22	; 0x05
    2824:	7e 83       	std	Y+6, r23	; 0x06
				{
					xAntiWindupGain = val;
    2826:	29 81       	ldd	r18, Y+1	; 0x01
    2828:	3a 81       	ldd	r19, Y+2	; 0x02
    282a:	8b 81       	ldd	r24, Y+3	; 0x03
    282c:	9c 81       	ldd	r25, Y+4	; 0x04
    282e:	ad 81       	ldd	r26, Y+5	; 0x05
    2830:	be 81       	ldd	r27, Y+6	; 0x06
    2832:	f9 01       	movw	r30, r18
    2834:	80 a3       	std	Z+32, r24	; 0x20
    2836:	91 a3       	std	Z+33, r25	; 0x21
    2838:	a2 a3       	std	Z+34, r26	; 0x22
    283a:	b3 a3       	std	Z+35, r27	; 0x23
				}
    283c:	26 96       	adiw	r28, 0x06	; 6
    283e:	0f b6       	in	r0, 0x3f	; 63
    2840:	f8 94       	cli
    2842:	de bf       	out	0x3e, r29	; 62
    2844:	0f be       	out	0x3f, r0	; 63
    2846:	cd bf       	out	0x3d, r28	; 61
    2848:	df 91       	pop	r29
    284a:	cf 91       	pop	r28
    284c:	08 95       	ret

0000284e <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEd>:
				
				void setLongitudeInnerLoopGain(double val)
    284e:	cf 93       	push	r28
    2850:	df 93       	push	r29
    2852:	00 d0       	rcall	.+0      	; 0x2854 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEd+0x6>
    2854:	00 d0       	rcall	.+0      	; 0x2856 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEd+0x8>
    2856:	cd b7       	in	r28, 0x3d	; 61
    2858:	de b7       	in	r29, 0x3e	; 62
    285a:	9a 83       	std	Y+2, r25	; 0x02
    285c:	89 83       	std	Y+1, r24	; 0x01
    285e:	4b 83       	std	Y+3, r20	; 0x03
    2860:	5c 83       	std	Y+4, r21	; 0x04
    2862:	6d 83       	std	Y+5, r22	; 0x05
    2864:	7e 83       	std	Y+6, r23	; 0x06
				{
					longitudeInnerLoopGain = val;
    2866:	29 81       	ldd	r18, Y+1	; 0x01
    2868:	3a 81       	ldd	r19, Y+2	; 0x02
    286a:	8b 81       	ldd	r24, Y+3	; 0x03
    286c:	9c 81       	ldd	r25, Y+4	; 0x04
    286e:	ad 81       	ldd	r26, Y+5	; 0x05
    2870:	be 81       	ldd	r27, Y+6	; 0x06
    2872:	f9 01       	movw	r30, r18
    2874:	84 a3       	std	Z+36, r24	; 0x24
    2876:	95 a3       	std	Z+37, r25	; 0x25
    2878:	a6 a3       	std	Z+38, r26	; 0x26
    287a:	b7 a3       	std	Z+39, r27	; 0x27
				}
    287c:	26 96       	adiw	r28, 0x06	; 6
    287e:	0f b6       	in	r0, 0x3f	; 63
    2880:	f8 94       	cli
    2882:	de bf       	out	0x3e, r29	; 62
    2884:	0f be       	out	0x3f, r0	; 63
    2886:	cd bf       	out	0x3d, r28	; 61
    2888:	df 91       	pop	r29
    288a:	cf 91       	pop	r28
    288c:	08 95       	ret

0000288e <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEd>:
				
				void setMinLongitudeServoControlValue(double val)
    288e:	cf 93       	push	r28
    2890:	df 93       	push	r29
    2892:	00 d0       	rcall	.+0      	; 0x2894 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEd+0x6>
    2894:	00 d0       	rcall	.+0      	; 0x2896 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEd+0x8>
    2896:	cd b7       	in	r28, 0x3d	; 61
    2898:	de b7       	in	r29, 0x3e	; 62
    289a:	9a 83       	std	Y+2, r25	; 0x02
    289c:	89 83       	std	Y+1, r24	; 0x01
    289e:	4b 83       	std	Y+3, r20	; 0x03
    28a0:	5c 83       	std	Y+4, r21	; 0x04
    28a2:	6d 83       	std	Y+5, r22	; 0x05
    28a4:	7e 83       	std	Y+6, r23	; 0x06
				{
					minLongitudeServoControlValue = val;
    28a6:	89 81       	ldd	r24, Y+1	; 0x01
    28a8:	9a 81       	ldd	r25, Y+2	; 0x02
    28aa:	9c 01       	movw	r18, r24
    28ac:	2c 5a       	subi	r18, 0xAC	; 172
    28ae:	3f 4f       	sbci	r19, 0xFF	; 255
    28b0:	8b 81       	ldd	r24, Y+3	; 0x03
    28b2:	9c 81       	ldd	r25, Y+4	; 0x04
    28b4:	ad 81       	ldd	r26, Y+5	; 0x05
    28b6:	be 81       	ldd	r27, Y+6	; 0x06
    28b8:	f9 01       	movw	r30, r18
    28ba:	80 83       	st	Z, r24
    28bc:	91 83       	std	Z+1, r25	; 0x01
    28be:	a2 83       	std	Z+2, r26	; 0x02
    28c0:	b3 83       	std	Z+3, r27	; 0x03
				}
    28c2:	26 96       	adiw	r28, 0x06	; 6
    28c4:	0f b6       	in	r0, 0x3f	; 63
    28c6:	f8 94       	cli
    28c8:	de bf       	out	0x3e, r29	; 62
    28ca:	0f be       	out	0x3f, r0	; 63
    28cc:	cd bf       	out	0x3d, r28	; 61
    28ce:	df 91       	pop	r29
    28d0:	cf 91       	pop	r28
    28d2:	08 95       	ret

000028d4 <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEd>:
				
				void setMaxLongitudeServoControlValue(double val)
    28d4:	cf 93       	push	r28
    28d6:	df 93       	push	r29
    28d8:	00 d0       	rcall	.+0      	; 0x28da <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEd+0x6>
    28da:	00 d0       	rcall	.+0      	; 0x28dc <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEd+0x8>
    28dc:	cd b7       	in	r28, 0x3d	; 61
    28de:	de b7       	in	r29, 0x3e	; 62
    28e0:	9a 83       	std	Y+2, r25	; 0x02
    28e2:	89 83       	std	Y+1, r24	; 0x01
    28e4:	4b 83       	std	Y+3, r20	; 0x03
    28e6:	5c 83       	std	Y+4, r21	; 0x04
    28e8:	6d 83       	std	Y+5, r22	; 0x05
    28ea:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxLongitudeServoControlValue = val;
    28ec:	89 81       	ldd	r24, Y+1	; 0x01
    28ee:	9a 81       	ldd	r25, Y+2	; 0x02
    28f0:	9c 01       	movw	r18, r24
    28f2:	28 5a       	subi	r18, 0xA8	; 168
    28f4:	3f 4f       	sbci	r19, 0xFF	; 255
    28f6:	8b 81       	ldd	r24, Y+3	; 0x03
    28f8:	9c 81       	ldd	r25, Y+4	; 0x04
    28fa:	ad 81       	ldd	r26, Y+5	; 0x05
    28fc:	be 81       	ldd	r27, Y+6	; 0x06
    28fe:	f9 01       	movw	r30, r18
    2900:	80 83       	st	Z, r24
    2902:	91 83       	std	Z+1, r25	; 0x01
    2904:	a2 83       	std	Z+2, r26	; 0x02
    2906:	b3 83       	std	Z+3, r27	; 0x03
				}
    2908:	26 96       	adiw	r28, 0x06	; 6
    290a:	0f b6       	in	r0, 0x3f	; 63
    290c:	f8 94       	cli
    290e:	de bf       	out	0x3e, r29	; 62
    2910:	0f be       	out	0x3f, r0	; 63
    2912:	cd bf       	out	0x3d, r28	; 61
    2914:	df 91       	pop	r29
    2916:	cf 91       	pop	r28
    2918:	08 95       	ret

0000291a <_ZN10helicopter10controller13PIDController22setYawProportionalGainEd>:
				
				
				/**
				 * Gain value applied to the yaw proportional error
				 */
				void setYawProportionalGain(double yawProportionalGain)
    291a:	cf 93       	push	r28
    291c:	df 93       	push	r29
    291e:	00 d0       	rcall	.+0      	; 0x2920 <_ZN10helicopter10controller13PIDController22setYawProportionalGainEd+0x6>
    2920:	00 d0       	rcall	.+0      	; 0x2922 <_ZN10helicopter10controller13PIDController22setYawProportionalGainEd+0x8>
    2922:	cd b7       	in	r28, 0x3d	; 61
    2924:	de b7       	in	r29, 0x3e	; 62
    2926:	9a 83       	std	Y+2, r25	; 0x02
    2928:	89 83       	std	Y+1, r24	; 0x01
    292a:	4b 83       	std	Y+3, r20	; 0x03
    292c:	5c 83       	std	Y+4, r21	; 0x04
    292e:	6d 83       	std	Y+5, r22	; 0x05
    2930:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawProportionalGain = yawProportionalGain;
    2932:	29 81       	ldd	r18, Y+1	; 0x01
    2934:	3a 81       	ldd	r19, Y+2	; 0x02
    2936:	8b 81       	ldd	r24, Y+3	; 0x03
    2938:	9c 81       	ldd	r25, Y+4	; 0x04
    293a:	ad 81       	ldd	r26, Y+5	; 0x05
    293c:	be 81       	ldd	r27, Y+6	; 0x06
    293e:	f9 01       	movw	r30, r18
    2940:	84 87       	std	Z+12, r24	; 0x0c
    2942:	95 87       	std	Z+13, r25	; 0x0d
    2944:	a6 87       	std	Z+14, r26	; 0x0e
    2946:	b7 87       	std	Z+15, r27	; 0x0f
				}
    2948:	26 96       	adiw	r28, 0x06	; 6
    294a:	0f b6       	in	r0, 0x3f	; 63
    294c:	f8 94       	cli
    294e:	de bf       	out	0x3e, r29	; 62
    2950:	0f be       	out	0x3f, r0	; 63
    2952:	cd bf       	out	0x3d, r28	; 61
    2954:	df 91       	pop	r29
    2956:	cf 91       	pop	r28
    2958:	08 95       	ret

0000295a <_ZN10helicopter10controller13PIDController18setYawIntegralGainEd>:
				
				/**
				 * Gain value applied to the yaw integral
				 */
				void setYawIntegralGain(double yawIntegralGain)
    295a:	cf 93       	push	r28
    295c:	df 93       	push	r29
    295e:	00 d0       	rcall	.+0      	; 0x2960 <_ZN10helicopter10controller13PIDController18setYawIntegralGainEd+0x6>
    2960:	00 d0       	rcall	.+0      	; 0x2962 <_ZN10helicopter10controller13PIDController18setYawIntegralGainEd+0x8>
    2962:	cd b7       	in	r28, 0x3d	; 61
    2964:	de b7       	in	r29, 0x3e	; 62
    2966:	9a 83       	std	Y+2, r25	; 0x02
    2968:	89 83       	std	Y+1, r24	; 0x01
    296a:	4b 83       	std	Y+3, r20	; 0x03
    296c:	5c 83       	std	Y+4, r21	; 0x04
    296e:	6d 83       	std	Y+5, r22	; 0x05
    2970:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawIntegralGain = yawIntegralGain;
    2972:	29 81       	ldd	r18, Y+1	; 0x01
    2974:	3a 81       	ldd	r19, Y+2	; 0x02
    2976:	8b 81       	ldd	r24, Y+3	; 0x03
    2978:	9c 81       	ldd	r25, Y+4	; 0x04
    297a:	ad 81       	ldd	r26, Y+5	; 0x05
    297c:	be 81       	ldd	r27, Y+6	; 0x06
    297e:	f9 01       	movw	r30, r18
    2980:	84 83       	std	Z+4, r24	; 0x04
    2982:	95 83       	std	Z+5, r25	; 0x05
    2984:	a6 83       	std	Z+6, r26	; 0x06
    2986:	b7 83       	std	Z+7, r27	; 0x07
				}
    2988:	26 96       	adiw	r28, 0x06	; 6
    298a:	0f b6       	in	r0, 0x3f	; 63
    298c:	f8 94       	cli
    298e:	de bf       	out	0x3e, r29	; 62
    2990:	0f be       	out	0x3f, r0	; 63
    2992:	cd bf       	out	0x3d, r28	; 61
    2994:	df 91       	pop	r29
    2996:	cf 91       	pop	r28
    2998:	08 95       	ret

0000299a <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEd>:
				
				/**
				 * Gain value applied to the derivative
				 */
				void setYawDerivativeGain(double yawDerivativeGain)
    299a:	cf 93       	push	r28
    299c:	df 93       	push	r29
    299e:	00 d0       	rcall	.+0      	; 0x29a0 <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEd+0x6>
    29a0:	00 d0       	rcall	.+0      	; 0x29a2 <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEd+0x8>
    29a2:	cd b7       	in	r28, 0x3d	; 61
    29a4:	de b7       	in	r29, 0x3e	; 62
    29a6:	9a 83       	std	Y+2, r25	; 0x02
    29a8:	89 83       	std	Y+1, r24	; 0x01
    29aa:	4b 83       	std	Y+3, r20	; 0x03
    29ac:	5c 83       	std	Y+4, r21	; 0x04
    29ae:	6d 83       	std	Y+5, r22	; 0x05
    29b0:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawDerivativeGain = yawDerivativeGain;
    29b2:	29 81       	ldd	r18, Y+1	; 0x01
    29b4:	3a 81       	ldd	r19, Y+2	; 0x02
    29b6:	8b 81       	ldd	r24, Y+3	; 0x03
    29b8:	9c 81       	ldd	r25, Y+4	; 0x04
    29ba:	ad 81       	ldd	r26, Y+5	; 0x05
    29bc:	be 81       	ldd	r27, Y+6	; 0x06
    29be:	f9 01       	movw	r30, r18
    29c0:	80 87       	std	Z+8, r24	; 0x08
    29c2:	91 87       	std	Z+9, r25	; 0x09
    29c4:	a2 87       	std	Z+10, r26	; 0x0a
    29c6:	b3 87       	std	Z+11, r27	; 0x0b
				}
    29c8:	26 96       	adiw	r28, 0x06	; 6
    29ca:	0f b6       	in	r0, 0x3f	; 63
    29cc:	f8 94       	cli
    29ce:	de bf       	out	0x3e, r29	; 62
    29d0:	0f be       	out	0x3f, r0	; 63
    29d2:	cd bf       	out	0x3d, r28	; 61
    29d4:	df 91       	pop	r29
    29d6:	cf 91       	pop	r28
    29d8:	08 95       	ret

000029da <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEd>:
				
				/**
				 * The number of seconds between pid controller updates. This number
				 * should generally be less than 1. Like .05 for a 20 hz rate.
				 */
				void setIntervalPeriodSecs(double intervalPeriodSecs)
    29da:	cf 93       	push	r28
    29dc:	df 93       	push	r29
    29de:	00 d0       	rcall	.+0      	; 0x29e0 <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEd+0x6>
    29e0:	00 d0       	rcall	.+0      	; 0x29e2 <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEd+0x8>
    29e2:	cd b7       	in	r28, 0x3d	; 61
    29e4:	de b7       	in	r29, 0x3e	; 62
    29e6:	9a 83       	std	Y+2, r25	; 0x02
    29e8:	89 83       	std	Y+1, r24	; 0x01
    29ea:	4b 83       	std	Y+3, r20	; 0x03
    29ec:	5c 83       	std	Y+4, r21	; 0x04
    29ee:	6d 83       	std	Y+5, r22	; 0x05
    29f0:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->intervalPeriodSecs = intervalPeriodSecs;
    29f2:	89 81       	ldd	r24, Y+1	; 0x01
    29f4:	9a 81       	ldd	r25, Y+2	; 0x02
    29f6:	9c 01       	movw	r18, r24
    29f8:	24 59       	subi	r18, 0x94	; 148
    29fa:	3f 4f       	sbci	r19, 0xFF	; 255
    29fc:	8b 81       	ldd	r24, Y+3	; 0x03
    29fe:	9c 81       	ldd	r25, Y+4	; 0x04
    2a00:	ad 81       	ldd	r26, Y+5	; 0x05
    2a02:	be 81       	ldd	r27, Y+6	; 0x06
    2a04:	f9 01       	movw	r30, r18
    2a06:	80 83       	st	Z, r24
    2a08:	91 83       	std	Z+1, r25	; 0x01
    2a0a:	a2 83       	std	Z+2, r26	; 0x02
    2a0c:	b3 83       	std	Z+3, r27	; 0x03
				}
    2a0e:	26 96       	adiw	r28, 0x06	; 6
    2a10:	0f b6       	in	r0, 0x3f	; 63
    2a12:	f8 94       	cli
    2a14:	de bf       	out	0x3e, r29	; 62
    2a16:	0f be       	out	0x3f, r0	; 63
    2a18:	cd bf       	out	0x3d, r28	; 61
    2a1a:	df 91       	pop	r29
    2a1c:	cf 91       	pop	r28
    2a1e:	08 95       	ret

00002a20 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEd>:
				 * keeps increasing despite the helicopter already at the maximum possible control values.
				 * @param yawAntiWindupGain The gain value which represents how fast the integral will
				 * go back to 0 when the servos are saturated.
				 * Some simple rule that have been suggested for the tracking time are ~ Tt = TiTd and Tt = (Ti + Td)/2.
				 */
				void setYawAntiWindupGain(double yawAntiWindupGain)
    2a20:	cf 93       	push	r28
    2a22:	df 93       	push	r29
    2a24:	00 d0       	rcall	.+0      	; 0x2a26 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEd+0x6>
    2a26:	00 d0       	rcall	.+0      	; 0x2a28 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEd+0x8>
    2a28:	cd b7       	in	r28, 0x3d	; 61
    2a2a:	de b7       	in	r29, 0x3e	; 62
    2a2c:	9a 83       	std	Y+2, r25	; 0x02
    2a2e:	89 83       	std	Y+1, r24	; 0x01
    2a30:	4b 83       	std	Y+3, r20	; 0x03
    2a32:	5c 83       	std	Y+4, r21	; 0x04
    2a34:	6d 83       	std	Y+5, r22	; 0x05
    2a36:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawAntiWindupGain = yawAntiWindupGain;
    2a38:	29 81       	ldd	r18, Y+1	; 0x01
    2a3a:	3a 81       	ldd	r19, Y+2	; 0x02
    2a3c:	8b 81       	ldd	r24, Y+3	; 0x03
    2a3e:	9c 81       	ldd	r25, Y+4	; 0x04
    2a40:	ad 81       	ldd	r26, Y+5	; 0x05
    2a42:	be 81       	ldd	r27, Y+6	; 0x06
    2a44:	f9 01       	movw	r30, r18
    2a46:	80 8b       	std	Z+16, r24	; 0x10
    2a48:	91 8b       	std	Z+17, r25	; 0x11
    2a4a:	a2 8b       	std	Z+18, r26	; 0x12
    2a4c:	b3 8b       	std	Z+19, r27	; 0x13
				}
    2a4e:	26 96       	adiw	r28, 0x06	; 6
    2a50:	0f b6       	in	r0, 0x3f	; 63
    2a52:	f8 94       	cli
    2a54:	de bf       	out	0x3e, r29	; 62
    2a56:	0f be       	out	0x3f, r0	; 63
    2a58:	cd bf       	out	0x3d, r28	; 61
    2a5a:	df 91       	pop	r29
    2a5c:	cf 91       	pop	r28
    2a5e:	08 95       	ret

00002a60 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEd>:
				/**
				 * The minimum control value that the yaw actuators can be set too. This is used for 
				 * integral anti-windup to determine when the actuators would be saturated.
				 * The value should be no smaller than the controlMinValue (e.g. no less than -1)
				 */
				void setMinYawServoControl(double minYawServoControlValue)
    2a60:	cf 93       	push	r28
    2a62:	df 93       	push	r29
    2a64:	00 d0       	rcall	.+0      	; 0x2a66 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEd+0x6>
    2a66:	00 d0       	rcall	.+0      	; 0x2a68 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEd+0x8>
    2a68:	cd b7       	in	r28, 0x3d	; 61
    2a6a:	de b7       	in	r29, 0x3e	; 62
    2a6c:	9a 83       	std	Y+2, r25	; 0x02
    2a6e:	89 83       	std	Y+1, r24	; 0x01
    2a70:	4b 83       	std	Y+3, r20	; 0x03
    2a72:	5c 83       	std	Y+4, r21	; 0x04
    2a74:	6d 83       	std	Y+5, r22	; 0x05
    2a76:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->minYawServoControlValue = minYawServoControlValue;
    2a78:	89 81       	ldd	r24, Y+1	; 0x01
    2a7a:	9a 81       	ldd	r25, Y+2	; 0x02
    2a7c:	9c 01       	movw	r18, r24
    2a7e:	24 5b       	subi	r18, 0xB4	; 180
    2a80:	3f 4f       	sbci	r19, 0xFF	; 255
    2a82:	8b 81       	ldd	r24, Y+3	; 0x03
    2a84:	9c 81       	ldd	r25, Y+4	; 0x04
    2a86:	ad 81       	ldd	r26, Y+5	; 0x05
    2a88:	be 81       	ldd	r27, Y+6	; 0x06
    2a8a:	f9 01       	movw	r30, r18
    2a8c:	80 83       	st	Z, r24
    2a8e:	91 83       	std	Z+1, r25	; 0x01
    2a90:	a2 83       	std	Z+2, r26	; 0x02
    2a92:	b3 83       	std	Z+3, r27	; 0x03
				}
    2a94:	26 96       	adiw	r28, 0x06	; 6
    2a96:	0f b6       	in	r0, 0x3f	; 63
    2a98:	f8 94       	cli
    2a9a:	de bf       	out	0x3e, r29	; 62
    2a9c:	0f be       	out	0x3f, r0	; 63
    2a9e:	cd bf       	out	0x3d, r28	; 61
    2aa0:	df 91       	pop	r29
    2aa2:	cf 91       	pop	r28
    2aa4:	08 95       	ret

00002aa6 <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEd>:
				/**
				 * The maximum control value that the yaw actuators can be set too. This is used for 
				 * integral anti-windup to determine when the actuators would be saturated.
				 * The value should be no larger than the controlMaxValue (e.g. no greater than 1)
				 */
				void setMaxYawServoControl(double maxYawServoControlValue)
    2aa6:	cf 93       	push	r28
    2aa8:	df 93       	push	r29
    2aaa:	00 d0       	rcall	.+0      	; 0x2aac <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEd+0x6>
    2aac:	00 d0       	rcall	.+0      	; 0x2aae <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEd+0x8>
    2aae:	cd b7       	in	r28, 0x3d	; 61
    2ab0:	de b7       	in	r29, 0x3e	; 62
    2ab2:	9a 83       	std	Y+2, r25	; 0x02
    2ab4:	89 83       	std	Y+1, r24	; 0x01
    2ab6:	4b 83       	std	Y+3, r20	; 0x03
    2ab8:	5c 83       	std	Y+4, r21	; 0x04
    2aba:	6d 83       	std	Y+5, r22	; 0x05
    2abc:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->maxYawServoControlValue = maxYawServoControlValue;
    2abe:	89 81       	ldd	r24, Y+1	; 0x01
    2ac0:	9a 81       	ldd	r25, Y+2	; 0x02
    2ac2:	9c 01       	movw	r18, r24
    2ac4:	20 5b       	subi	r18, 0xB0	; 176
    2ac6:	3f 4f       	sbci	r19, 0xFF	; 255
    2ac8:	8b 81       	ldd	r24, Y+3	; 0x03
    2aca:	9c 81       	ldd	r25, Y+4	; 0x04
    2acc:	ad 81       	ldd	r26, Y+5	; 0x05
    2ace:	be 81       	ldd	r27, Y+6	; 0x06
    2ad0:	f9 01       	movw	r30, r18
    2ad2:	80 83       	st	Z, r24
    2ad4:	91 83       	std	Z+1, r25	; 0x01
    2ad6:	a2 83       	std	Z+2, r26	; 0x02
    2ad8:	b3 83       	std	Z+3, r27	; 0x03
				}
    2ada:	26 96       	adiw	r28, 0x06	; 6
    2adc:	0f b6       	in	r0, 0x3f	; 63
    2ade:	f8 94       	cli
    2ae0:	de bf       	out	0x3e, r29	; 62
    2ae2:	0f be       	out	0x3f, r0	; 63
    2ae4:	cd bf       	out	0x3d, r28	; 61
    2ae6:	df 91       	pop	r29
    2ae8:	cf 91       	pop	r28
    2aea:	08 95       	ret

00002aec <_ZN10helicopter10controller13PIDController18setControlMaxValueEd>:
				
				/**
				 * This is the maximum possible output value for a control signal.
				 * Generally, this should be set to 1.
				 */
				void setControlMaxValue(double controlMaxValue)
    2aec:	cf 93       	push	r28
    2aee:	df 93       	push	r29
    2af0:	00 d0       	rcall	.+0      	; 0x2af2 <_ZN10helicopter10controller13PIDController18setControlMaxValueEd+0x6>
    2af2:	00 d0       	rcall	.+0      	; 0x2af4 <_ZN10helicopter10controller13PIDController18setControlMaxValueEd+0x8>
    2af4:	cd b7       	in	r28, 0x3d	; 61
    2af6:	de b7       	in	r29, 0x3e	; 62
    2af8:	9a 83       	std	Y+2, r25	; 0x02
    2afa:	89 83       	std	Y+1, r24	; 0x01
    2afc:	4b 83       	std	Y+3, r20	; 0x03
    2afe:	5c 83       	std	Y+4, r21	; 0x04
    2b00:	6d 83       	std	Y+5, r22	; 0x05
    2b02:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->controlMaxValue = controlMaxValue;
    2b04:	89 81       	ldd	r24, Y+1	; 0x01
    2b06:	9a 81       	ldd	r25, Y+2	; 0x02
    2b08:	9c 01       	movw	r18, r24
    2b0a:	20 59       	subi	r18, 0x90	; 144
    2b0c:	3f 4f       	sbci	r19, 0xFF	; 255
    2b0e:	8b 81       	ldd	r24, Y+3	; 0x03
    2b10:	9c 81       	ldd	r25, Y+4	; 0x04
    2b12:	ad 81       	ldd	r26, Y+5	; 0x05
    2b14:	be 81       	ldd	r27, Y+6	; 0x06
    2b16:	f9 01       	movw	r30, r18
    2b18:	80 83       	st	Z, r24
    2b1a:	91 83       	std	Z+1, r25	; 0x01
    2b1c:	a2 83       	std	Z+2, r26	; 0x02
    2b1e:	b3 83       	std	Z+3, r27	; 0x03
				}
    2b20:	26 96       	adiw	r28, 0x06	; 6
    2b22:	0f b6       	in	r0, 0x3f	; 63
    2b24:	f8 94       	cli
    2b26:	de bf       	out	0x3e, r29	; 62
    2b28:	0f be       	out	0x3f, r0	; 63
    2b2a:	cd bf       	out	0x3d, r28	; 61
    2b2c:	df 91       	pop	r29
    2b2e:	cf 91       	pop	r28
    2b30:	08 95       	ret

00002b32 <_ZN10helicopter10controller13PIDController18setControlMinValueEd>:
				
				/**
				 * This is the minimum possible value for a control signal.
				 * Generally, this should be set to -1.
				 */
				void setControlMinValue(double controlMinValue)
    2b32:	cf 93       	push	r28
    2b34:	df 93       	push	r29
    2b36:	00 d0       	rcall	.+0      	; 0x2b38 <_ZN10helicopter10controller13PIDController18setControlMinValueEd+0x6>
    2b38:	00 d0       	rcall	.+0      	; 0x2b3a <_ZN10helicopter10controller13PIDController18setControlMinValueEd+0x8>
    2b3a:	cd b7       	in	r28, 0x3d	; 61
    2b3c:	de b7       	in	r29, 0x3e	; 62
    2b3e:	9a 83       	std	Y+2, r25	; 0x02
    2b40:	89 83       	std	Y+1, r24	; 0x01
    2b42:	4b 83       	std	Y+3, r20	; 0x03
    2b44:	5c 83       	std	Y+4, r21	; 0x04
    2b46:	6d 83       	std	Y+5, r22	; 0x05
    2b48:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->controlMinValue = controlMinValue;
    2b4a:	89 81       	ldd	r24, Y+1	; 0x01
    2b4c:	9a 81       	ldd	r25, Y+2	; 0x02
    2b4e:	9c 01       	movw	r18, r24
    2b50:	2c 58       	subi	r18, 0x8C	; 140
    2b52:	3f 4f       	sbci	r19, 0xFF	; 255
    2b54:	8b 81       	ldd	r24, Y+3	; 0x03
    2b56:	9c 81       	ldd	r25, Y+4	; 0x04
    2b58:	ad 81       	ldd	r26, Y+5	; 0x05
    2b5a:	be 81       	ldd	r27, Y+6	; 0x06
    2b5c:	f9 01       	movw	r30, r18
    2b5e:	80 83       	st	Z, r24
    2b60:	91 83       	std	Z+1, r25	; 0x01
    2b62:	a2 83       	std	Z+2, r26	; 0x02
    2b64:	b3 83       	std	Z+3, r27	; 0x03
				}			
    2b66:	26 96       	adiw	r28, 0x06	; 6
    2b68:	0f b6       	in	r0, 0x3f	; 63
    2b6a:	f8 94       	cli
    2b6c:	de bf       	out	0x3e, r29	; 62
    2b6e:	0f be       	out	0x3f, r0	; 63
    2b70:	cd bf       	out	0x3d, r28	; 61
    2b72:	df 91       	pop	r29
    2b74:	cf 91       	pop	r28
    2b76:	08 95       	ret

00002b78 <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE>:
using namespace helicopter::model;
using namespace helicopter::controller;
using namespace helicopter::util;

void setupDefaultsandReferencePosition(SystemModel *model, PIDController *pidController)
{	
    2b78:	cf 93       	push	r28
    2b7a:	df 93       	push	r29
    2b7c:	00 d0       	rcall	.+0      	; 0x2b7e <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE+0x6>
    2b7e:	1f 92       	push	r1
    2b80:	cd b7       	in	r28, 0x3d	; 61
    2b82:	de b7       	in	r29, 0x3e	; 62
    2b84:	9a 83       	std	Y+2, r25	; 0x02
    2b86:	89 83       	std	Y+1, r24	; 0x01
    2b88:	7c 83       	std	Y+4, r23	; 0x04
    2b8a:	6b 83       	std	Y+3, r22	; 0x03
	
	model->ReferenceMagYawDegrees(0.0);
    2b8c:	89 81       	ldd	r24, Y+1	; 0x01
    2b8e:	9a 81       	ldd	r25, Y+2	; 0x02
    2b90:	40 e0       	ldi	r20, 0x00	; 0
    2b92:	50 e0       	ldi	r21, 0x00	; 0
    2b94:	ba 01       	movw	r22, r20
    2b96:	0e 94 a3 12 	call	0x2546	; 0x2546 <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEd>
	model->ReferenceYawVelocityDegreesPerSecond(0.0);
    2b9a:	89 81       	ldd	r24, Y+1	; 0x01
    2b9c:	9a 81       	ldd	r25, Y+2	; 0x02
    2b9e:	40 e0       	ldi	r20, 0x00	; 0
    2ba0:	50 e0       	ldi	r21, 0x00	; 0
    2ba2:	ba 01       	movw	r22, r20
    2ba4:	0e 94 c3 12 	call	0x2586	; 0x2586 <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEd>
	
	pidController->setYawProportionalGain(3.0);
    2ba8:	8b 81       	ldd	r24, Y+3	; 0x03
    2baa:	9c 81       	ldd	r25, Y+4	; 0x04
    2bac:	40 e0       	ldi	r20, 0x00	; 0
    2bae:	50 e0       	ldi	r21, 0x00	; 0
    2bb0:	60 e4       	ldi	r22, 0x40	; 64
    2bb2:	70 e4       	ldi	r23, 0x40	; 64
    2bb4:	0e 94 8d 14 	call	0x291a	; 0x291a <_ZN10helicopter10controller13PIDController22setYawProportionalGainEd>
	pidController->setYawIntegralGain(.008);
    2bb8:	8b 81       	ldd	r24, Y+3	; 0x03
    2bba:	9c 81       	ldd	r25, Y+4	; 0x04
    2bbc:	4f e6       	ldi	r20, 0x6F	; 111
    2bbe:	52 e1       	ldi	r21, 0x12	; 18
    2bc0:	63 e0       	ldi	r22, 0x03	; 3
    2bc2:	7c e3       	ldi	r23, 0x3C	; 60
    2bc4:	0e 94 ad 14 	call	0x295a	; 0x295a <_ZN10helicopter10controller13PIDController18setYawIntegralGainEd>
	pidController->setYawDerivativeGain(.85);
    2bc8:	8b 81       	ldd	r24, Y+3	; 0x03
    2bca:	9c 81       	ldd	r25, Y+4	; 0x04
    2bcc:	4a e9       	ldi	r20, 0x9A	; 154
    2bce:	59 e9       	ldi	r21, 0x99	; 153
    2bd0:	69 e5       	ldi	r22, 0x59	; 89
    2bd2:	7f e3       	ldi	r23, 0x3F	; 63
    2bd4:	0e 94 cd 14 	call	0x299a	; 0x299a <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEd>
	pidController->setYawAntiWindupGain(.1);
    2bd8:	8b 81       	ldd	r24, Y+3	; 0x03
    2bda:	9c 81       	ldd	r25, Y+4	; 0x04
    2bdc:	4d ec       	ldi	r20, 0xCD	; 205
    2bde:	5c ec       	ldi	r21, 0xCC	; 204
    2be0:	6c ec       	ldi	r22, 0xCC	; 204
    2be2:	7d e3       	ldi	r23, 0x3D	; 61
    2be4:	0e 94 10 15 	call	0x2a20	; 0x2a20 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEd>
	
	pidController->setXProportionalGain(.289);
    2be8:	8b 81       	ldd	r24, Y+3	; 0x03
    2bea:	9c 81       	ldd	r25, Y+4	; 0x04
    2bec:	4f ec       	ldi	r20, 0xCF	; 207
    2bee:	57 ef       	ldi	r21, 0xF7	; 247
    2bf0:	63 e9       	ldi	r22, 0x93	; 147
    2bf2:	7e e3       	ldi	r23, 0x3E	; 62
    2bf4:	0e 94 e7 13 	call	0x27ce	; 0x27ce <_ZN10helicopter10controller13PIDController20setXProportionalGainEd>
	pidController->setXIntegralGain(0);
    2bf8:	8b 81       	ldd	r24, Y+3	; 0x03
    2bfa:	9c 81       	ldd	r25, Y+4	; 0x04
    2bfc:	40 e0       	ldi	r20, 0x00	; 0
    2bfe:	50 e0       	ldi	r21, 0x00	; 0
    2c00:	ba 01       	movw	r22, r20
    2c02:	0e 94 a7 13 	call	0x274e	; 0x274e <_ZN10helicopter10controller13PIDController16setXIntegralGainEd>
	pidController->setXDerivativeGain(1.859);
    2c06:	8b 81       	ldd	r24, Y+3	; 0x03
    2c08:	9c 81       	ldd	r25, Y+4	; 0x04
    2c0a:	46 eb       	ldi	r20, 0xB6	; 182
    2c0c:	53 ef       	ldi	r21, 0xF3	; 243
    2c0e:	6d ee       	ldi	r22, 0xED	; 237
    2c10:	7f e3       	ldi	r23, 0x3F	; 63
    2c12:	0e 94 c7 13 	call	0x278e	; 0x278e <_ZN10helicopter10controller13PIDController18setXDerivativeGainEd>
	pidController->setXAntiWindupGain(0);
    2c16:	8b 81       	ldd	r24, Y+3	; 0x03
    2c18:	9c 81       	ldd	r25, Y+4	; 0x04
    2c1a:	40 e0       	ldi	r20, 0x00	; 0
    2c1c:	50 e0       	ldi	r21, 0x00	; 0
    2c1e:	ba 01       	movw	r22, r20
    2c20:	0e 94 07 14 	call	0x280e	; 0x280e <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEd>
	pidController->setLongitudeInnerLoopGain(.031);
    2c24:	8b 81       	ldd	r24, Y+3	; 0x03
    2c26:	9c 81       	ldd	r25, Y+4	; 0x04
    2c28:	46 eb       	ldi	r20, 0xB6	; 182
    2c2a:	53 ef       	ldi	r21, 0xF3	; 243
    2c2c:	6d ef       	ldi	r22, 0xFD	; 253
    2c2e:	7c e3       	ldi	r23, 0x3C	; 60
    2c30:	0e 94 27 14 	call	0x284e	; 0x284e <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEd>
	
	//TODO: Don't forget that there is a difference between how often the sensors
	//are read and how often the control algorithm runs. 
	pidController->setIntervalPeriodSecs(PID_OUTER_LOOP_PERIOD);
    2c34:	8b 81       	ldd	r24, Y+3	; 0x03
    2c36:	9c 81       	ldd	r25, Y+4	; 0x04
    2c38:	4d ec       	ldi	r20, 0xCD	; 205
    2c3a:	5c ec       	ldi	r21, 0xCC	; 204
    2c3c:	6c e4       	ldi	r22, 0x4C	; 76
    2c3e:	7d e3       	ldi	r23, 0x3D	; 61
    2c40:	0e 94 ed 14 	call	0x29da	; 0x29da <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEd>

//pidController->setMinYawServoControl (-10);
//pidController->setMaxYawServoControl(10);


	pidController->setMinYawServoControl (-1.0d);
    2c44:	8b 81       	ldd	r24, Y+3	; 0x03
    2c46:	9c 81       	ldd	r25, Y+4	; 0x04
    2c48:	40 e0       	ldi	r20, 0x00	; 0
    2c4a:	50 e0       	ldi	r21, 0x00	; 0
    2c4c:	60 e8       	ldi	r22, 0x80	; 128
    2c4e:	7f eb       	ldi	r23, 0xBF	; 191
    2c50:	0e 94 30 15 	call	0x2a60	; 0x2a60 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEd>
	pidController->setMaxYawServoControl (1.0d);
    2c54:	8b 81       	ldd	r24, Y+3	; 0x03
    2c56:	9c 81       	ldd	r25, Y+4	; 0x04
    2c58:	40 e0       	ldi	r20, 0x00	; 0
    2c5a:	50 e0       	ldi	r21, 0x00	; 0
    2c5c:	60 e8       	ldi	r22, 0x80	; 128
    2c5e:	7f e3       	ldi	r23, 0x3F	; 63
    2c60:	0e 94 53 15 	call	0x2aa6	; 0x2aa6 <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEd>


	pidController->setControlMaxValue(1.0d);
    2c64:	8b 81       	ldd	r24, Y+3	; 0x03
    2c66:	9c 81       	ldd	r25, Y+4	; 0x04
    2c68:	40 e0       	ldi	r20, 0x00	; 0
    2c6a:	50 e0       	ldi	r21, 0x00	; 0
    2c6c:	60 e8       	ldi	r22, 0x80	; 128
    2c6e:	7f e3       	ldi	r23, 0x3F	; 63
    2c70:	0e 94 76 15 	call	0x2aec	; 0x2aec <_ZN10helicopter10controller13PIDController18setControlMaxValueEd>
	pidController->setControlMinValue(-1.0d);
    2c74:	8b 81       	ldd	r24, Y+3	; 0x03
    2c76:	9c 81       	ldd	r25, Y+4	; 0x04
    2c78:	40 e0       	ldi	r20, 0x00	; 0
    2c7a:	50 e0       	ldi	r21, 0x00	; 0
    2c7c:	60 e8       	ldi	r22, 0x80	; 128
    2c7e:	7f eb       	ldi	r23, 0xBF	; 191
    2c80:	0e 94 99 15 	call	0x2b32	; 0x2b32 <_ZN10helicopter10controller13PIDController18setControlMinValueEd>
	
	pidController->setMaxLongitudeServoControlValue(1.0d);
    2c84:	8b 81       	ldd	r24, Y+3	; 0x03
    2c86:	9c 81       	ldd	r25, Y+4	; 0x04
    2c88:	40 e0       	ldi	r20, 0x00	; 0
    2c8a:	50 e0       	ldi	r21, 0x00	; 0
    2c8c:	60 e8       	ldi	r22, 0x80	; 128
    2c8e:	7f e3       	ldi	r23, 0x3F	; 63
    2c90:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEd>
	pidController->setMinLongitudeServoControlValue(-1.0d);
    2c94:	8b 81       	ldd	r24, Y+3	; 0x03
    2c96:	9c 81       	ldd	r25, Y+4	; 0x04
    2c98:	40 e0       	ldi	r20, 0x00	; 0
    2c9a:	50 e0       	ldi	r21, 0x00	; 0
    2c9c:	60 e8       	ldi	r22, 0x80	; 128
    2c9e:	7f eb       	ldi	r23, 0xBF	; 191
    2ca0:	0e 94 47 14 	call	0x288e	; 0x288e <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEd>
}
    2ca4:	0f 90       	pop	r0
    2ca6:	0f 90       	pop	r0
    2ca8:	0f 90       	pop	r0
    2caa:	0f 90       	pop	r0
    2cac:	df 91       	pop	r29
    2cae:	cf 91       	pop	r28
    2cb0:	08 95       	ret

00002cb2 <main>:


int main(void)
{	
    2cb2:	4f 92       	push	r4
    2cb4:	5f 92       	push	r5
    2cb6:	6f 92       	push	r6
    2cb8:	7f 92       	push	r7
    2cba:	8f 92       	push	r8
    2cbc:	9f 92       	push	r9
    2cbe:	af 92       	push	r10
    2cc0:	bf 92       	push	r11
    2cc2:	cf 92       	push	r12
    2cc4:	df 92       	push	r13
    2cc6:	ef 92       	push	r14
    2cc8:	ff 92       	push	r15
    2cca:	0f 93       	push	r16
    2ccc:	1f 93       	push	r17
    2cce:	cf 93       	push	r28
    2cd0:	df 93       	push	r29
    2cd2:	cd b7       	in	r28, 0x3d	; 61
    2cd4:	de b7       	in	r29, 0x3e	; 62
    2cd6:	e9 97       	sbiw	r28, 0x39	; 57
    2cd8:	0f b6       	in	r0, 0x3f	; 63
    2cda:	f8 94       	cli
    2cdc:	de bf       	out	0x3e, r29	; 62
    2cde:	0f be       	out	0x3f, r0	; 63
    2ce0:	cd bf       	out	0x3d, r28	; 61
	SystemModel *model = new SystemModel();
    2ce2:	8c ee       	ldi	r24, 0xEC	; 236
    2ce4:	90 e0       	ldi	r25, 0x00	; 0
    2ce6:	0e 94 13 39 	call	0x7226	; 0x7226 <_Znwj>
    2cea:	8c 01       	movw	r16, r24
    2cec:	c8 01       	movw	r24, r16
    2cee:	0e 94 a3 10 	call	0x2146	; 0x2146 <_ZN10helicopter5model11SystemModelC1Ev>
    2cf2:	1b 83       	std	Y+3, r17	; 0x03
    2cf4:	0a 83       	std	Y+2, r16	; 0x02
	
	
	//TODO: This somehow needs to be a simulator servo driver
	//TODO: Setup the code so that it can be setup for a simulator or not setup for a simulator.
	ServoDriver *servoDriver = new ServoDriver();
    2cf6:	8a e0       	ldi	r24, 0x0A	; 10
    2cf8:	90 e0       	ldi	r25, 0x00	; 0
    2cfa:	0e 94 13 39 	call	0x7226	; 0x7226 <_Znwj>
    2cfe:	8c 01       	movw	r16, r24
    2d00:	c8 01       	movw	r24, r16
    2d02:	0e 94 85 13 	call	0x270a	; 0x270a <_ZN10helicopter7drivers11ServoDriverC1Ev>
    2d06:	1d 83       	std	Y+5, r17	; 0x05
    2d08:	0c 83       	std	Y+4, r16	; 0x04
	
	PIDController *pidController = new PIDController(model, servoDriver);
    2d0a:	88 e7       	ldi	r24, 0x78	; 120
    2d0c:	90 e0       	ldi	r25, 0x00	; 0
    2d0e:	0e 94 13 39 	call	0x7226	; 0x7226 <_Znwj>
    2d12:	8c 01       	movw	r16, r24
    2d14:	2c 81       	ldd	r18, Y+4	; 0x04
    2d16:	3d 81       	ldd	r19, Y+5	; 0x05
    2d18:	8a 81       	ldd	r24, Y+2	; 0x02
    2d1a:	9b 81       	ldd	r25, Y+3	; 0x03
    2d1c:	a9 01       	movw	r20, r18
    2d1e:	bc 01       	movw	r22, r24
    2d20:	c8 01       	movw	r24, r16
    2d22:	0e 94 05 05 	call	0xa0a	; 0xa0a <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelEPNS_7drivers11ServoDriverE>
    2d26:	1f 83       	std	Y+7, r17	; 0x07
    2d28:	0e 83       	std	Y+6, r16	; 0x06
	
	
	
	setupDefaultsandReferencePosition(model, pidController);
    2d2a:	2e 81       	ldd	r18, Y+6	; 0x06
    2d2c:	3f 81       	ldd	r19, Y+7	; 0x07
    2d2e:	8a 81       	ldd	r24, Y+2	; 0x02
    2d30:	9b 81       	ldd	r25, Y+3	; 0x03
    2d32:	b9 01       	movw	r22, r18
    2d34:	0e 94 bc 15 	call	0x2b78	; 0x2b78 <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE>
	
	//Timer *timer = new Timer(F_CPU,PRESCALE_BY_TENTWENTYFOUR,75); //Good timeout when using the radio
	Timer *timer = new Timer(F_CPU, PRESCALE_BY_TENTWENTYFOUR, 10); //Good timeout when using the USB
    2d38:	88 e0       	ldi	r24, 0x08	; 8
    2d3a:	90 e0       	ldi	r25, 0x00	; 0
    2d3c:	0e 94 13 39 	call	0x7226	; 0x7226 <_Znwj>
    2d40:	6c 01       	movw	r12, r24
    2d42:	1a e0       	ldi	r17, 0x0A	; 10
    2d44:	e1 2e       	mov	r14, r17
    2d46:	f1 2c       	mov	r15, r1
    2d48:	00 e0       	ldi	r16, 0x00	; 0
    2d4a:	10 e0       	ldi	r17, 0x00	; 0
    2d4c:	20 e0       	ldi	r18, 0x00	; 0
    2d4e:	34 e0       	ldi	r19, 0x04	; 4
    2d50:	40 e0       	ldi	r20, 0x00	; 0
    2d52:	54 e2       	ldi	r21, 0x24	; 36
    2d54:	64 ef       	ldi	r22, 0xF4	; 244
    2d56:	70 e0       	ldi	r23, 0x00	; 0
    2d58:	c6 01       	movw	r24, r12
    2d5a:	0e 94 fd 0f 	call	0x1ffa	; 0x1ffa <_ZN10helicopter4util5TimerC1Em9PRESCALERm>
    2d5e:	d9 86       	std	Y+9, r13	; 0x09
    2d60:	c8 86       	std	Y+8, r12	; 0x08
	
	//Create a driver for communicating with the Ground Control Station (GCS).
	//SerialDriver *serialDriver = new SerialDriver(57600, SerialDriver::Zero, timer, true, true);  
	SerialDriver *serialDriver = new SerialDriver(76800, SerialDriver::Zero, timer, true, true);  
    2d62:	8b e0       	ldi	r24, 0x0B	; 11
    2d64:	90 e0       	ldi	r25, 0x00	; 0
    2d66:	0e 94 13 39 	call	0x7226	; 0x7226 <_Znwj>
    2d6a:	5c 01       	movw	r10, r24
    2d6c:	88 85       	ldd	r24, Y+8	; 0x08
    2d6e:	99 85       	ldd	r25, Y+9	; 0x09
    2d70:	cc 24       	eor	r12, r12
    2d72:	c3 94       	inc	r12
    2d74:	ee 24       	eor	r14, r14
    2d76:	e3 94       	inc	r14
    2d78:	8c 01       	movw	r16, r24
    2d7a:	20 e0       	ldi	r18, 0x00	; 0
    2d7c:	40 e0       	ldi	r20, 0x00	; 0
    2d7e:	5c e2       	ldi	r21, 0x2C	; 44
    2d80:	61 e0       	ldi	r22, 0x01	; 1
    2d82:	70 e0       	ldi	r23, 0x00	; 0
    2d84:	c5 01       	movw	r24, r10
    2d86:	0e 94 3d 10 	call	0x207a	; 0x207a <_ZN10helicopter7drivers12SerialDriverC1EmNS1_8UartPortEPNS_4util5TimerEbb>
    2d8a:	bb 86       	std	Y+11, r11	; 0x0b
    2d8c:	aa 86       	std	Y+10, r10	; 0x0a
	serialDriver->initialize();
    2d8e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2d90:	9b 85       	ldd	r25, Y+11	; 0x0b
    2d92:	fc 01       	movw	r30, r24
    2d94:	80 81       	ld	r24, Z
    2d96:	91 81       	ldd	r25, Z+1	; 0x01
    2d98:	04 96       	adiw	r24, 0x04	; 4
    2d9a:	fc 01       	movw	r30, r24
    2d9c:	20 81       	ld	r18, Z
    2d9e:	31 81       	ldd	r19, Z+1	; 0x01
    2da0:	8a 85       	ldd	r24, Y+10	; 0x0a
    2da2:	9b 85       	ldd	r25, Y+11	; 0x0b
    2da4:	f9 01       	movw	r30, r18
    2da6:	19 95       	eicall
	
	GroundControlStationInterface *gcsInterface = new GroundControlStationInterface(serialDriver);
    2da8:	82 e0       	ldi	r24, 0x02	; 2
    2daa:	90 e0       	ldi	r25, 0x00	; 0
    2dac:	0e 94 13 39 	call	0x7226	; 0x7226 <_Znwj>
    2db0:	8c 01       	movw	r16, r24
    2db2:	8a 85       	ldd	r24, Y+10	; 0x0a
    2db4:	9b 85       	ldd	r25, Y+11	; 0x0b
    2db6:	bc 01       	movw	r22, r24
    2db8:	c8 01       	movw	r24, r16
    2dba:	0e 94 8b 10 	call	0x2116	; 0x2116 <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverE>
    2dbe:	1d 87       	std	Y+13, r17	; 0x0d
    2dc0:	0c 87       	std	Y+12, r16	; 0x0c
	//This frequency works well for radio.
//	SimTelemetryTask *simTelemTask = new SimTelemetryTask(radioInterface, model, 0, 10);//starting at tick 1, execute 20 times a second
//	TransmitTelemetryTask *transTelemTask = new TransmitTelemetryTask(radioInterface, model, 1, 10);//starting at tick 2, execute 20 times a second

	//this frequency works well for USB.
	SimTelemetryTask *simTelemTask = new SimTelemetryTask(gcsInterface, model, pidController,0, 4);//starting at tick 0, execute 50 times a second
    2dc2:	8d e0       	ldi	r24, 0x0D	; 13
    2dc4:	90 e0       	ldi	r25, 0x00	; 0
    2dc6:	0e 94 13 39 	call	0x7226	; 0x7226 <_Znwj>
    2dca:	6c 01       	movw	r12, r24
    2dcc:	2e 81       	ldd	r18, Y+6	; 0x06
    2dce:	3f 81       	ldd	r19, Y+7	; 0x07
    2dd0:	4a 81       	ldd	r20, Y+2	; 0x02
    2dd2:	5b 81       	ldd	r21, Y+3	; 0x03
    2dd4:	8c 85       	ldd	r24, Y+12	; 0x0c
    2dd6:	9d 85       	ldd	r25, Y+13	; 0x0d
    2dd8:	68 94       	set
    2dda:	ee 24       	eor	r14, r14
    2ddc:	e2 f8       	bld	r14, 2
    2dde:	f1 2c       	mov	r15, r1
    2de0:	00 e0       	ldi	r16, 0x00	; 0
    2de2:	10 e0       	ldi	r17, 0x00	; 0
    2de4:	bc 01       	movw	r22, r24
    2de6:	c6 01       	movw	r24, r12
    2de8:	0e 94 5e 34 	call	0x68bc	; 0x68bc <_ZN10helicopter5tasks16SimTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEPNS_10controller13PIDControllerEii>
    2dec:	df 86       	std	Y+15, r13	; 0x0f
    2dee:	ce 86       	std	Y+14, r12	; 0x0e
	TransmitTelemetryTask *transTelemTask = new TransmitTelemetryTask(gcsInterface, model, 1, 4);//starting at tick 1, execute 50 times a second
    2df0:	8b e0       	ldi	r24, 0x0B	; 11
    2df2:	90 e0       	ldi	r25, 0x00	; 0
    2df4:	0e 94 13 39 	call	0x7226	; 0x7226 <_Znwj>
    2df8:	7c 01       	movw	r14, r24
    2dfa:	4a 81       	ldd	r20, Y+2	; 0x02
    2dfc:	5b 81       	ldd	r21, Y+3	; 0x03
    2dfe:	8c 85       	ldd	r24, Y+12	; 0x0c
    2e00:	9d 85       	ldd	r25, Y+13	; 0x0d
    2e02:	04 e0       	ldi	r16, 0x04	; 4
    2e04:	10 e0       	ldi	r17, 0x00	; 0
    2e06:	21 e0       	ldi	r18, 0x01	; 1
    2e08:	30 e0       	ldi	r19, 0x00	; 0
    2e0a:	bc 01       	movw	r22, r24
    2e0c:	c7 01       	movw	r24, r14
    2e0e:	0e 94 6a 38 	call	0x70d4	; 0x70d4 <_ZN10helicopter5tasks21TransmitTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEii>
    2e12:	f9 8a       	std	Y+17, r15	; 0x11
    2e14:	e8 8a       	std	Y+16, r14	; 0x10
	
	FlashLEDTask *flashTask = new FlashLEDTask(2, SCHEDULER_TICK_FREQUENCY_HZ);//starting at tick 2, execute once a second
    2e16:	8a e0       	ldi	r24, 0x0A	; 10
    2e18:	90 e0       	ldi	r25, 0x00	; 0
    2e1a:	0e 94 13 39 	call	0x7226	; 0x7226 <_Znwj>
    2e1e:	8c 01       	movw	r16, r24
    2e20:	23 e0       	ldi	r18, 0x03	; 3
    2e22:	30 e0       	ldi	r19, 0x00	; 0
    2e24:	46 e4       	ldi	r20, 0x46	; 70
    2e26:	50 e0       	ldi	r21, 0x00	; 0
    2e28:	62 e0       	ldi	r22, 0x02	; 2
    2e2a:	70 e0       	ldi	r23, 0x00	; 0
    2e2c:	c8 01       	movw	r24, r16
    2e2e:	0e 94 46 0f 	call	0x1e8c	; 0x1e8c <_ZN10helicopter5tasks12FlashLEDTaskC1Eiii>
    2e32:	1b 8b       	std	Y+19, r17	; 0x13
    2e34:	0a 8b       	std	Y+18, r16	; 0x12
		
		
	SensorProcessingTask *sensorProcessingTask = new SensorProcessingTask(model, 5, 4);
    2e36:	89 e0       	ldi	r24, 0x09	; 9
    2e38:	90 e0       	ldi	r25, 0x00	; 0
    2e3a:	0e 94 13 39 	call	0x7226	; 0x7226 <_Znwj>
    2e3e:	8c 01       	movw	r16, r24
    2e40:	8a 81       	ldd	r24, Y+2	; 0x02
    2e42:	9b 81       	ldd	r25, Y+3	; 0x03
    2e44:	24 e0       	ldi	r18, 0x04	; 4
    2e46:	30 e0       	ldi	r19, 0x00	; 0
    2e48:	45 e0       	ldi	r20, 0x05	; 5
    2e4a:	50 e0       	ldi	r21, 0x00	; 0
    2e4c:	bc 01       	movw	r22, r24
    2e4e:	c8 01       	movw	r24, r16
    2e50:	0e 94 d2 31 	call	0x63a4	; 0x63a4 <_ZN10helicopter5tasks20SensorProcessingTaskC1EPNS_5model11SystemModelEii>
    2e54:	1d 8b       	std	Y+21, r17	; 0x15
    2e56:	0c 8b       	std	Y+20, r16	; 0x14
		
	//execute the pid outer loop at the PID_OUTER_LOOP_PERIOD rate. The division is to convert the period into ticks for the scheduler.
	PIDOuterLoopTask *pidOuterLoop = new PIDOuterLoopTask(pidController, 3, (SCHEDULER_TICK_FREQUENCY_HZ / (1/PID_OUTER_LOOP_PERIOD)));
    2e58:	89 e0       	ldi	r24, 0x09	; 9
    2e5a:	90 e0       	ldi	r25, 0x00	; 0
    2e5c:	0e 94 13 39 	call	0x7226	; 0x7226 <_Znwj>
    2e60:	8c 01       	movw	r16, r24
    2e62:	8e 81       	ldd	r24, Y+6	; 0x06
    2e64:	9f 81       	ldd	r25, Y+7	; 0x07
    2e66:	23 e0       	ldi	r18, 0x03	; 3
    2e68:	30 e0       	ldi	r19, 0x00	; 0
    2e6a:	43 e0       	ldi	r20, 0x03	; 3
    2e6c:	50 e0       	ldi	r21, 0x00	; 0
    2e6e:	bc 01       	movw	r22, r24
    2e70:	c8 01       	movw	r24, r16
    2e72:	0e 94 8e 30 	call	0x611c	; 0x611c <_ZN10helicopter5tasks16PIDOuterLoopTaskC1EPNS_10controller13PIDControllerEii>
    2e76:	1f 8b       	std	Y+23, r17	; 0x17
    2e78:	0e 8b       	std	Y+22, r16	; 0x16
	PIDInnerLoopTask *pidInnerLoop = new PIDInnerLoopTask(pidController, 4, (SCHEDULER_TICK_FREQUENCY_HZ / (1/PID_OUTER_LOOP_PERIOD)));
    2e7a:	89 e0       	ldi	r24, 0x09	; 9
    2e7c:	90 e0       	ldi	r25, 0x00	; 0
    2e7e:	0e 94 13 39 	call	0x7226	; 0x7226 <_Znwj>
    2e82:	8c 01       	movw	r16, r24
    2e84:	8e 81       	ldd	r24, Y+6	; 0x06
    2e86:	9f 81       	ldd	r25, Y+7	; 0x07
    2e88:	23 e0       	ldi	r18, 0x03	; 3
    2e8a:	30 e0       	ldi	r19, 0x00	; 0
    2e8c:	44 e0       	ldi	r20, 0x04	; 4
    2e8e:	50 e0       	ldi	r21, 0x00	; 0
    2e90:	bc 01       	movw	r22, r24
    2e92:	c8 01       	movw	r24, r16
    2e94:	0e 94 11 30 	call	0x6022	; 0x6022 <_ZN10helicopter5tasks16PIDInnerLoopTaskC1EPNS_10controller13PIDControllerEii>
    2e98:	19 8f       	std	Y+25, r17	; 0x19
    2e9a:	08 8f       	std	Y+24, r16	; 0x18
	


	Scheduler *scheduler = Scheduler::getScheduler();
    2e9c:	0e 94 6d 2d 	call	0x5ada	; 0x5ada <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>
    2ea0:	9b 8f       	std	Y+27, r25	; 0x1b
    2ea2:	8a 8f       	std	Y+26, r24	; 0x1a
	
	scheduler->addTask(flashTask);
    2ea4:	2a 89       	ldd	r18, Y+18	; 0x12
    2ea6:	3b 89       	ldd	r19, Y+19	; 0x13
    2ea8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2eaa:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2eac:	b9 01       	movw	r22, r18
    2eae:	0e 94 fd 2d 	call	0x5bfa	; 0x5bfa <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(simTelemTask);
    2eb2:	2e 85       	ldd	r18, Y+14	; 0x0e
    2eb4:	3f 85       	ldd	r19, Y+15	; 0x0f
    2eb6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2eb8:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2eba:	b9 01       	movw	r22, r18
    2ebc:	0e 94 fd 2d 	call	0x5bfa	; 0x5bfa <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(transTelemTask);
    2ec0:	28 89       	ldd	r18, Y+16	; 0x10
    2ec2:	39 89       	ldd	r19, Y+17	; 0x11
    2ec4:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2ec6:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2ec8:	b9 01       	movw	r22, r18
    2eca:	0e 94 fd 2d 	call	0x5bfa	; 0x5bfa <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(pidOuterLoop);
    2ece:	2e 89       	ldd	r18, Y+22	; 0x16
    2ed0:	3f 89       	ldd	r19, Y+23	; 0x17
    2ed2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2ed4:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2ed6:	b9 01       	movw	r22, r18
    2ed8:	0e 94 fd 2d 	call	0x5bfa	; 0x5bfa <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(pidInnerLoop);
    2edc:	28 8d       	ldd	r18, Y+24	; 0x18
    2ede:	39 8d       	ldd	r19, Y+25	; 0x19
    2ee0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2ee2:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2ee4:	b9 01       	movw	r22, r18
    2ee6:	0e 94 fd 2d 	call	0x5bfa	; 0x5bfa <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(sensorProcessingTask);
    2eea:	2c 89       	ldd	r18, Y+20	; 0x14
    2eec:	3d 89       	ldd	r19, Y+21	; 0x15
    2eee:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2ef0:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2ef2:	b9 01       	movw	r22, r18
    2ef4:	0e 94 fd 2d 	call	0x5bfa	; 0x5bfa <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	
	//Wait until we receive location data before starting the scheduler
	//TODO rework this
	bool isInitialized = false;
    2ef8:	19 82       	std	Y+1, r1	; 0x01
	while (!isInitialized)
    2efa:	2e c1       	rjmp	.+604    	; 0x3158 <main+0x4a6>
	{
		simTelemTask->runTaskImpl();
    2efc:	8e 85       	ldd	r24, Y+14	; 0x0e
    2efe:	9f 85       	ldd	r25, Y+15	; 0x0f
    2f00:	fc 01       	movw	r30, r24
    2f02:	80 81       	ld	r24, Z
    2f04:	91 81       	ldd	r25, Z+1	; 0x01
    2f06:	fc 01       	movw	r30, r24
    2f08:	20 81       	ld	r18, Z
    2f0a:	31 81       	ldd	r19, Z+1	; 0x01
    2f0c:	8e 85       	ldd	r24, Y+14	; 0x0e
    2f0e:	9f 85       	ldd	r25, Y+15	; 0x0f
    2f10:	f9 01       	movw	r30, r18
    2f12:	19 95       	eicall
		
		if (model->LatitudeDegrees() != 0 && model->LongitudeDegrees() != 0)
    2f14:	8a 81       	ldd	r24, Y+2	; 0x02
    2f16:	9b 81       	ldd	r25, Y+3	; 0x03
    2f18:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    2f1c:	dc 01       	movw	r26, r24
    2f1e:	cb 01       	movw	r24, r22
    2f20:	20 e0       	ldi	r18, 0x00	; 0
    2f22:	30 e0       	ldi	r19, 0x00	; 0
    2f24:	a9 01       	movw	r20, r18
    2f26:	bc 01       	movw	r22, r24
    2f28:	cd 01       	movw	r24, r26
    2f2a:	0e 94 78 3f 	call	0x7ef0	; 0x7ef0 <__cmpsf2>
    2f2e:	88 23       	and	r24, r24
    2f30:	89 f0       	breq	.+34     	; 0x2f54 <main+0x2a2>
    2f32:	8a 81       	ldd	r24, Y+2	; 0x02
    2f34:	9b 81       	ldd	r25, Y+3	; 0x03
    2f36:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    2f3a:	dc 01       	movw	r26, r24
    2f3c:	cb 01       	movw	r24, r22
    2f3e:	20 e0       	ldi	r18, 0x00	; 0
    2f40:	30 e0       	ldi	r19, 0x00	; 0
    2f42:	a9 01       	movw	r20, r18
    2f44:	bc 01       	movw	r22, r24
    2f46:	cd 01       	movw	r24, r26
    2f48:	0e 94 78 3f 	call	0x7ef0	; 0x7ef0 <__cmpsf2>
    2f4c:	88 23       	and	r24, r24
    2f4e:	11 f0       	breq	.+4      	; 0x2f54 <main+0x2a2>
    2f50:	81 e0       	ldi	r24, 0x01	; 1
    2f52:	01 c0       	rjmp	.+2      	; 0x2f56 <main+0x2a4>
    2f54:	80 e0       	ldi	r24, 0x00	; 0
    2f56:	88 23       	and	r24, r24
    2f58:	09 f4       	brne	.+2      	; 0x2f5c <main+0x2aa>
    2f5a:	82 c0       	rjmp	.+260    	; 0x3060 <main+0x3ae>
		{
			isInitialized = true;
    2f5c:	81 e0       	ldi	r24, 0x01	; 1
    2f5e:	89 83       	std	Y+1, r24	; 0x01
			
			//ecefReferenceX, ecefReferenceY, ecefReferenceZ,ecefToLocalNEDRotationMatrix,
			CoordinateUtil::CalculateECEFToLocalNEDRotationMatrix(model->LatitudeDegrees(), model->LongitudeDegrees(), model->EcefToLocalNEDRotationMatrix);
    2f60:	8a 81       	ldd	r24, Y+2	; 0x02
    2f62:	9b 81       	ldd	r25, Y+3	; 0x03
    2f64:	8c 01       	movw	r16, r24
    2f66:	08 53       	subi	r16, 0x38	; 56
    2f68:	1f 4f       	sbci	r17, 0xFF	; 255
    2f6a:	8a 81       	ldd	r24, Y+2	; 0x02
    2f6c:	9b 81       	ldd	r25, Y+3	; 0x03
    2f6e:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    2f72:	6b 01       	movw	r12, r22
    2f74:	7c 01       	movw	r14, r24
    2f76:	8a 81       	ldd	r24, Y+2	; 0x02
    2f78:	9b 81       	ldd	r25, Y+3	; 0x03
    2f7a:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    2f7e:	dc 01       	movw	r26, r24
    2f80:	cb 01       	movw	r24, r22
    2f82:	a7 01       	movw	r20, r14
    2f84:	96 01       	movw	r18, r12
    2f86:	bc 01       	movw	r22, r24
    2f88:	cd 01       	movw	r24, r26
    2f8a:	0e 94 7e 39 	call	0x72fc	; 0x72fc <_ZN10helicopter4util14CoordinateUtil37CalculateECEFToLocalNEDRotationMatrixEddPA3_d>
	
			double initialXPositionEcef = 0;
    2f8e:	1a a6       	std	Y+42, r1	; 0x2a
    2f90:	1b a6       	std	Y+43, r1	; 0x2b
    2f92:	1c a6       	std	Y+44, r1	; 0x2c
    2f94:	1d a6       	std	Y+45, r1	; 0x2d
			double initialYPositionEcef = 0;
    2f96:	1e a6       	std	Y+46, r1	; 0x2e
    2f98:	1f a6       	std	Y+47, r1	; 0x2f
    2f9a:	18 aa       	std	Y+48, r1	; 0x30
    2f9c:	19 aa       	std	Y+49, r1	; 0x31
			double initialZPositionEcef = 0;
    2f9e:	1a aa       	std	Y+50, r1	; 0x32
    2fa0:	1b aa       	std	Y+51, r1	; 0x33
    2fa2:	1c aa       	std	Y+52, r1	; 0x34
    2fa4:	1d aa       	std	Y+53, r1	; 0x35
			CoordinateUtil::ConvertFromGeodeticToECEF(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeet(), initialXPositionEcef, initialYPositionEcef, initialZPositionEcef);
    2fa6:	8a 81       	ldd	r24, Y+2	; 0x02
    2fa8:	9b 81       	ldd	r25, Y+3	; 0x03
    2faa:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <_ZNK10helicopter5model11SystemModel12AltitudeFeetEv>
    2fae:	6e ab       	std	Y+54, r22	; 0x36
    2fb0:	7f ab       	std	Y+55, r23	; 0x37
    2fb2:	88 af       	std	Y+56, r24	; 0x38
    2fb4:	99 af       	std	Y+57, r25	; 0x39
    2fb6:	8a 81       	ldd	r24, Y+2	; 0x02
    2fb8:	9b 81       	ldd	r25, Y+3	; 0x03
    2fba:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    2fbe:	2b 01       	movw	r4, r22
    2fc0:	3c 01       	movw	r6, r24
    2fc2:	8a 81       	ldd	r24, Y+2	; 0x02
    2fc4:	9b 81       	ldd	r25, Y+3	; 0x03
    2fc6:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    2fca:	dc 01       	movw	r26, r24
    2fcc:	cb 01       	movw	r24, r22
    2fce:	be 01       	movw	r22, r28
    2fd0:	6e 5c       	subi	r22, 0xCE	; 206
    2fd2:	7f 4f       	sbci	r23, 0xFF	; 255
    2fd4:	ae 01       	movw	r20, r28
    2fd6:	42 5d       	subi	r20, 0xD2	; 210
    2fd8:	5f 4f       	sbci	r21, 0xFF	; 255
    2fda:	9e 01       	movw	r18, r28
    2fdc:	26 5d       	subi	r18, 0xD6	; 214
    2fde:	3f 4f       	sbci	r19, 0xFF	; 255
    2fe0:	4b 01       	movw	r8, r22
    2fe2:	5a 01       	movw	r10, r20
    2fe4:	69 01       	movw	r12, r18
    2fe6:	ee a8       	ldd	r14, Y+54	; 0x36
    2fe8:	ff a8       	ldd	r15, Y+55	; 0x37
    2fea:	08 ad       	ldd	r16, Y+56	; 0x38
    2fec:	19 ad       	ldd	r17, Y+57	; 0x39
    2fee:	a3 01       	movw	r20, r6
    2ff0:	92 01       	movw	r18, r4
    2ff2:	bc 01       	movw	r22, r24
    2ff4:	cd 01       	movw	r24, r26
    2ff6:	0e 94 2d 3b 	call	0x765a	; 0x765a <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEdddRdS2_S2_>
			
			model->InitialXPositionEcef(initialXPositionEcef);
    2ffa:	8a a5       	ldd	r24, Y+42	; 0x2a
    2ffc:	9b a5       	ldd	r25, Y+43	; 0x2b
    2ffe:	ac a5       	ldd	r26, Y+44	; 0x2c
    3000:	bd a5       	ldd	r27, Y+45	; 0x2d
    3002:	bc 01       	movw	r22, r24
    3004:	cd 01       	movw	r24, r26
    3006:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    300a:	dc 01       	movw	r26, r24
    300c:	cb 01       	movw	r24, r22
    300e:	2a 81       	ldd	r18, Y+2	; 0x02
    3010:	3b 81       	ldd	r19, Y+3	; 0x03
    3012:	ac 01       	movw	r20, r24
    3014:	bd 01       	movw	r22, r26
    3016:	c9 01       	movw	r24, r18
    3018:	0e 94 13 13 	call	0x2626	; 0x2626 <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl>
			model->InitialYPositionEcef(initialYPositionEcef);
    301c:	8e a5       	ldd	r24, Y+46	; 0x2e
    301e:	9f a5       	ldd	r25, Y+47	; 0x2f
    3020:	a8 a9       	ldd	r26, Y+48	; 0x30
    3022:	b9 a9       	ldd	r27, Y+49	; 0x31
    3024:	bc 01       	movw	r22, r24
    3026:	cd 01       	movw	r24, r26
    3028:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    302c:	dc 01       	movw	r26, r24
    302e:	cb 01       	movw	r24, r22
    3030:	2a 81       	ldd	r18, Y+2	; 0x02
    3032:	3b 81       	ldd	r19, Y+3	; 0x03
    3034:	ac 01       	movw	r20, r24
    3036:	bd 01       	movw	r22, r26
    3038:	c9 01       	movw	r24, r18
    303a:	0e 94 39 13 	call	0x2672	; 0x2672 <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl>
			model->InitialZPositionEcef(initialZPositionEcef);
    303e:	8a a9       	ldd	r24, Y+50	; 0x32
    3040:	9b a9       	ldd	r25, Y+51	; 0x33
    3042:	ac a9       	ldd	r26, Y+52	; 0x34
    3044:	bd a9       	ldd	r27, Y+53	; 0x35
    3046:	bc 01       	movw	r22, r24
    3048:	cd 01       	movw	r24, r26
    304a:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    304e:	dc 01       	movw	r26, r24
    3050:	cb 01       	movw	r24, r22
    3052:	2a 81       	ldd	r18, Y+2	; 0x02
    3054:	3b 81       	ldd	r19, Y+3	; 0x03
    3056:	ac 01       	movw	r20, r24
    3058:	bd 01       	movw	r22, r26
    305a:	c9 01       	movw	r24, r18
    305c:	0e 94 5f 13 	call	0x26be	; 0x26be <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl>
    3060:	80 e0       	ldi	r24, 0x00	; 0
    3062:	90 e0       	ldi	r25, 0x00	; 0
    3064:	a8 ec       	ldi	r26, 0xC8	; 200
    3066:	b2 e4       	ldi	r27, 0x42	; 66
    3068:	8c 8f       	std	Y+28, r24	; 0x1c
    306a:	9d 8f       	std	Y+29, r25	; 0x1d
    306c:	ae 8f       	std	Y+30, r26	; 0x1e
    306e:	bf 8f       	std	Y+31, r27	; 0x1f
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    3070:	20 e0       	ldi	r18, 0x00	; 0
    3072:	30 e0       	ldi	r19, 0x00	; 0
    3074:	4a e7       	ldi	r20, 0x7A	; 122
    3076:	55 e4       	ldi	r21, 0x45	; 69
    3078:	6c 8d       	ldd	r22, Y+28	; 0x1c
    307a:	7d 8d       	ldd	r23, Y+29	; 0x1d
    307c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    307e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3080:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    3084:	dc 01       	movw	r26, r24
    3086:	cb 01       	movw	r24, r22
    3088:	88 a3       	std	Y+32, r24	; 0x20
    308a:	99 a3       	std	Y+33, r25	; 0x21
    308c:	aa a3       	std	Y+34, r26	; 0x22
    308e:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    3090:	20 e0       	ldi	r18, 0x00	; 0
    3092:	30 e0       	ldi	r19, 0x00	; 0
    3094:	40 e8       	ldi	r20, 0x80	; 128
    3096:	5f e3       	ldi	r21, 0x3F	; 63
    3098:	68 a1       	ldd	r22, Y+32	; 0x20
    309a:	79 a1       	ldd	r23, Y+33	; 0x21
    309c:	8a a1       	ldd	r24, Y+34	; 0x22
    309e:	9b a1       	ldd	r25, Y+35	; 0x23
    30a0:	0e 94 78 3f 	call	0x7ef0	; 0x7ef0 <__cmpsf2>
    30a4:	88 23       	and	r24, r24
    30a6:	2c f4       	brge	.+10     	; 0x30b2 <main+0x400>
		__ticks = 1;
    30a8:	81 e0       	ldi	r24, 0x01	; 1
    30aa:	90 e0       	ldi	r25, 0x00	; 0
    30ac:	9d a3       	std	Y+37, r25	; 0x25
    30ae:	8c a3       	std	Y+36, r24	; 0x24
    30b0:	46 c0       	rjmp	.+140    	; 0x313e <main+0x48c>
	else if (__tmp > 65535)
    30b2:	20 e0       	ldi	r18, 0x00	; 0
    30b4:	3f ef       	ldi	r19, 0xFF	; 255
    30b6:	4f e7       	ldi	r20, 0x7F	; 127
    30b8:	57 e4       	ldi	r21, 0x47	; 71
    30ba:	68 a1       	ldd	r22, Y+32	; 0x20
    30bc:	79 a1       	ldd	r23, Y+33	; 0x21
    30be:	8a a1       	ldd	r24, Y+34	; 0x22
    30c0:	9b a1       	ldd	r25, Y+35	; 0x23
    30c2:	0e 94 56 41 	call	0x82ac	; 0x82ac <__gesf2>
    30c6:	18 16       	cp	r1, r24
    30c8:	84 f5       	brge	.+96     	; 0x312a <main+0x478>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30ca:	20 e0       	ldi	r18, 0x00	; 0
    30cc:	30 e0       	ldi	r19, 0x00	; 0
    30ce:	40 e2       	ldi	r20, 0x20	; 32
    30d0:	51 e4       	ldi	r21, 0x41	; 65
    30d2:	6c 8d       	ldd	r22, Y+28	; 0x1c
    30d4:	7d 8d       	ldd	r23, Y+29	; 0x1d
    30d6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    30d8:	9f 8d       	ldd	r25, Y+31	; 0x1f
    30da:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    30de:	dc 01       	movw	r26, r24
    30e0:	cb 01       	movw	r24, r22
    30e2:	bc 01       	movw	r22, r24
    30e4:	cd 01       	movw	r24, r26
    30e6:	0e 94 ec 3f 	call	0x7fd8	; 0x7fd8 <__fixunssfsi>
    30ea:	dc 01       	movw	r26, r24
    30ec:	cb 01       	movw	r24, r22
    30ee:	9d a3       	std	Y+37, r25	; 0x25
    30f0:	8c a3       	std	Y+36, r24	; 0x24
    30f2:	12 c0       	rjmp	.+36     	; 0x3118 <main+0x466>
    30f4:	80 e9       	ldi	r24, 0x90	; 144
    30f6:	91 e0       	ldi	r25, 0x01	; 1
    30f8:	9f a3       	std	Y+39, r25	; 0x27
    30fa:	8e a3       	std	Y+38, r24	; 0x26
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    30fc:	8e a1       	ldd	r24, Y+38	; 0x26
    30fe:	9f a1       	ldd	r25, Y+39	; 0x27
    3100:	8c 01       	movw	r16, r24
    3102:	c8 01       	movw	r24, r16
    3104:	01 97       	sbiw	r24, 0x01	; 1
    3106:	f1 f7       	brne	.-4      	; 0x3104 <main+0x452>
    3108:	8c 01       	movw	r16, r24
    310a:	1f a3       	std	Y+39, r17	; 0x27
    310c:	0e a3       	std	Y+38, r16	; 0x26
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    310e:	8c a1       	ldd	r24, Y+36	; 0x24
    3110:	9d a1       	ldd	r25, Y+37	; 0x25
    3112:	01 97       	sbiw	r24, 0x01	; 1
    3114:	9d a3       	std	Y+37, r25	; 0x25
    3116:	8c a3       	std	Y+36, r24	; 0x24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3118:	21 e0       	ldi	r18, 0x01	; 1
    311a:	8c a1       	ldd	r24, Y+36	; 0x24
    311c:	9d a1       	ldd	r25, Y+37	; 0x25
    311e:	00 97       	sbiw	r24, 0x00	; 0
    3120:	09 f4       	brne	.+2      	; 0x3124 <main+0x472>
    3122:	20 e0       	ldi	r18, 0x00	; 0
    3124:	22 23       	and	r18, r18
    3126:	31 f7       	brne	.-52     	; 0x30f4 <main+0x442>
    3128:	17 c0       	rjmp	.+46     	; 0x3158 <main+0x4a6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    312a:	68 a1       	ldd	r22, Y+32	; 0x20
    312c:	79 a1       	ldd	r23, Y+33	; 0x21
    312e:	8a a1       	ldd	r24, Y+34	; 0x22
    3130:	9b a1       	ldd	r25, Y+35	; 0x23
    3132:	0e 94 ec 3f 	call	0x7fd8	; 0x7fd8 <__fixunssfsi>
    3136:	dc 01       	movw	r26, r24
    3138:	cb 01       	movw	r24, r22
    313a:	9d a3       	std	Y+37, r25	; 0x25
    313c:	8c a3       	std	Y+36, r24	; 0x24
    313e:	8c a1       	ldd	r24, Y+36	; 0x24
    3140:	9d a1       	ldd	r25, Y+37	; 0x25
    3142:	99 a7       	std	Y+41, r25	; 0x29
    3144:	88 a7       	std	Y+40, r24	; 0x28
    3146:	88 a5       	ldd	r24, Y+40	; 0x28
    3148:	99 a5       	ldd	r25, Y+41	; 0x29
    314a:	8c 01       	movw	r16, r24
    314c:	f8 01       	movw	r30, r16
    314e:	31 97       	sbiw	r30, 0x01	; 1
    3150:	f1 f7       	brne	.-4      	; 0x314e <main+0x49c>
    3152:	8f 01       	movw	r16, r30
    3154:	19 a7       	std	Y+41, r17	; 0x29
    3156:	08 a7       	std	Y+40, r16	; 0x28
	
	
	//Wait until we receive location data before starting the scheduler
	//TODO rework this
	bool isInitialized = false;
	while (!isInitialized)
    3158:	99 81       	ldd	r25, Y+1	; 0x01
    315a:	81 e0       	ldi	r24, 0x01	; 1
    315c:	89 27       	eor	r24, r25
    315e:	88 23       	and	r24, r24
    3160:	09 f0       	breq	.+2      	; 0x3164 <main+0x4b2>
    3162:	cc ce       	rjmp	.-616    	; 0x2efc <main+0x24a>
		_delay_ms(100);
	}
	
	
	
	scheduler->init(); //Sets up the timer registers, inits all tasks,
    3164:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3166:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3168:	0e 94 38 2e 	call	0x5c70	; 0x5c70 <_ZN10helicopter9scheduler9Scheduler4initEv>
	
	scheduler->start();
    316c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    316e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3170:	0e 94 10 2f 	call	0x5e20	; 0x5e20 <_ZN10helicopter9scheduler9Scheduler5startEv>
    3174:	01 c0       	rjmp	.+2      	; 0x3178 <main+0x4c6>
	
	
	while(1)
    3176:	00 00       	nop
	{
		//Checks to see if any tasks are ready to run an executes them.
		//goes to sleep (until the next timer tick) after processing all available tasks.
		scheduler->dispatch();
    3178:	8a 8d       	ldd	r24, Y+26	; 0x1a
    317a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    317c:	0e 94 99 2e 	call	0x5d32	; 0x5d32 <_ZN10helicopter9scheduler9Scheduler8dispatchEv>
		
		/**
		 * Determine if the last processing frame was blown.
		 */
		if (scheduler->hasBlownFrame())
    3180:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3182:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3184:	0e 94 ec 0f 	call	0x1fd8	; 0x1fd8 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEv>
    3188:	88 23       	and	r24, r24
    318a:	a9 f3       	breq	.-22     	; 0x3176 <main+0x4c4>
		{
			pidController->addBlownFrame();
    318c:	8e 81       	ldd	r24, Y+6	; 0x06
    318e:	9f 81       	ldd	r25, Y+7	; 0x07
    3190:	0e 94 2b 0c 	call	0x1856	; 0x1856 <_ZN10helicopter10controller13PIDController13addBlownFrameEv>
	scheduler->init(); //Sets up the timer registers, inits all tasks,
	
	scheduler->start();
	
	
	while(1)
    3194:	f0 cf       	rjmp	.-32     	; 0x3176 <main+0x4c4>

00003196 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>:
	namespace tasks
	{
		/**
			* This task is used to periodically flash an LED on the flight computer.
			*/
		class FlashLEDTask : public Task
    3196:	cf 93       	push	r28
    3198:	df 93       	push	r29
    319a:	1f 92       	push	r1
    319c:	1f 92       	push	r1
    319e:	cd b7       	in	r28, 0x3d	; 61
    31a0:	de b7       	in	r29, 0x3e	; 62
    31a2:	9a 83       	std	Y+2, r25	; 0x02
    31a4:	89 83       	std	Y+1, r24	; 0x01
    31a6:	89 81       	ldd	r24, Y+1	; 0x01
    31a8:	9a 81       	ldd	r25, Y+2	; 0x02
    31aa:	22 e2       	ldi	r18, 0x22	; 34
    31ac:	32 e0       	ldi	r19, 0x02	; 2
    31ae:	fc 01       	movw	r30, r24
    31b0:	31 83       	std	Z+1, r19	; 0x01
    31b2:	20 83       	st	Z, r18
    31b4:	89 81       	ldd	r24, Y+1	; 0x01
    31b6:	9a 81       	ldd	r25, Y+2	; 0x02
    31b8:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <_ZN10helicopter5tasks4TaskD1Ev>
    31bc:	80 e0       	ldi	r24, 0x00	; 0
    31be:	90 e0       	ldi	r25, 0x00	; 0
    31c0:	81 70       	andi	r24, 0x01	; 1
    31c2:	99 27       	eor	r25, r25
    31c4:	00 97       	sbiw	r24, 0x00	; 0
    31c6:	21 f0       	breq	.+8      	; 0x31d0 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev+0x3a>
    31c8:	89 81       	ldd	r24, Y+1	; 0x01
    31ca:	9a 81       	ldd	r25, Y+2	; 0x02
    31cc:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    31d0:	0f 90       	pop	r0
    31d2:	0f 90       	pop	r0
    31d4:	df 91       	pop	r29
    31d6:	cf 91       	pop	r28
    31d8:	08 95       	ret

000031da <_ZN10helicopter5tasks12FlashLEDTaskD0Ev>:
    31da:	cf 93       	push	r28
    31dc:	df 93       	push	r29
    31de:	1f 92       	push	r1
    31e0:	1f 92       	push	r1
    31e2:	cd b7       	in	r28, 0x3d	; 61
    31e4:	de b7       	in	r29, 0x3e	; 62
    31e6:	9a 83       	std	Y+2, r25	; 0x02
    31e8:	89 83       	std	Y+1, r24	; 0x01
    31ea:	89 81       	ldd	r24, Y+1	; 0x01
    31ec:	9a 81       	ldd	r25, Y+2	; 0x02
    31ee:	0e 94 cb 18 	call	0x3196	; 0x3196 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>
    31f2:	89 81       	ldd	r24, Y+1	; 0x01
    31f4:	9a 81       	ldd	r25, Y+2	; 0x02
    31f6:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    31fa:	0f 90       	pop	r0
    31fc:	0f 90       	pop	r0
    31fe:	df 91       	pop	r29
    3200:	cf 91       	pop	r28
    3202:	08 95       	ret

00003204 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>:

using namespace helicopter::util;
using namespace helicopter::interfaces;

void GroundControlStationInterface::calculateChecksum (byte *msgPayload, int payloadSize, byte &checksumA, byte &checksumB)
{
    3204:	0f 93       	push	r16
    3206:	1f 93       	push	r17
    3208:	cf 93       	push	r28
    320a:	df 93       	push	r29
    320c:	cd b7       	in	r28, 0x3d	; 61
    320e:	de b7       	in	r29, 0x3e	; 62
    3210:	2d 97       	sbiw	r28, 0x0d	; 13
    3212:	0f b6       	in	r0, 0x3f	; 63
    3214:	f8 94       	cli
    3216:	de bf       	out	0x3e, r29	; 62
    3218:	0f be       	out	0x3f, r0	; 63
    321a:	cd bf       	out	0x3d, r28	; 61
    321c:	9d 83       	std	Y+5, r25	; 0x05
    321e:	8c 83       	std	Y+4, r24	; 0x04
    3220:	7f 83       	std	Y+7, r23	; 0x07
    3222:	6e 83       	std	Y+6, r22	; 0x06
    3224:	59 87       	std	Y+9, r21	; 0x09
    3226:	48 87       	std	Y+8, r20	; 0x08
    3228:	3b 87       	std	Y+11, r19	; 0x0b
    322a:	2a 87       	std	Y+10, r18	; 0x0a
    322c:	1d 87       	std	Y+13, r17	; 0x0d
    322e:	0c 87       	std	Y+12, r16	; 0x0c
	for (int i = 0; i < payloadSize; i++)
    3230:	1a 82       	std	Y+2, r1	; 0x02
    3232:	19 82       	std	Y+1, r1	; 0x01
    3234:	26 c0       	rjmp	.+76     	; 0x3282 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x7e>
	{
		byte b = msgPayload[i];
    3236:	89 81       	ldd	r24, Y+1	; 0x01
    3238:	9a 81       	ldd	r25, Y+2	; 0x02
    323a:	2e 81       	ldd	r18, Y+6	; 0x06
    323c:	3f 81       	ldd	r19, Y+7	; 0x07
    323e:	82 0f       	add	r24, r18
    3240:	93 1f       	adc	r25, r19
    3242:	fc 01       	movw	r30, r24
    3244:	80 81       	ld	r24, Z
    3246:	8b 83       	std	Y+3, r24	; 0x03
		
		//These fields can overflow, but that is intentional.
		checksumA = (byte) (checksumA + b);
    3248:	8a 85       	ldd	r24, Y+10	; 0x0a
    324a:	9b 85       	ldd	r25, Y+11	; 0x0b
    324c:	fc 01       	movw	r30, r24
    324e:	90 81       	ld	r25, Z
    3250:	8b 81       	ldd	r24, Y+3	; 0x03
    3252:	29 2f       	mov	r18, r25
    3254:	28 0f       	add	r18, r24
    3256:	8a 85       	ldd	r24, Y+10	; 0x0a
    3258:	9b 85       	ldd	r25, Y+11	; 0x0b
    325a:	fc 01       	movw	r30, r24
    325c:	20 83       	st	Z, r18
		checksumB = (byte) (checksumB + checksumA);
    325e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3260:	9d 85       	ldd	r25, Y+13	; 0x0d
    3262:	fc 01       	movw	r30, r24
    3264:	20 81       	ld	r18, Z
    3266:	8a 85       	ldd	r24, Y+10	; 0x0a
    3268:	9b 85       	ldd	r25, Y+11	; 0x0b
    326a:	fc 01       	movw	r30, r24
    326c:	80 81       	ld	r24, Z
    326e:	28 0f       	add	r18, r24
    3270:	8c 85       	ldd	r24, Y+12	; 0x0c
    3272:	9d 85       	ldd	r25, Y+13	; 0x0d
    3274:	fc 01       	movw	r30, r24
    3276:	20 83       	st	Z, r18
using namespace helicopter::util;
using namespace helicopter::interfaces;

void GroundControlStationInterface::calculateChecksum (byte *msgPayload, int payloadSize, byte &checksumA, byte &checksumB)
{
	for (int i = 0; i < payloadSize; i++)
    3278:	89 81       	ldd	r24, Y+1	; 0x01
    327a:	9a 81       	ldd	r25, Y+2	; 0x02
    327c:	01 96       	adiw	r24, 0x01	; 1
    327e:	9a 83       	std	Y+2, r25	; 0x02
    3280:	89 83       	std	Y+1, r24	; 0x01
    3282:	41 e0       	ldi	r20, 0x01	; 1
    3284:	29 81       	ldd	r18, Y+1	; 0x01
    3286:	3a 81       	ldd	r19, Y+2	; 0x02
    3288:	88 85       	ldd	r24, Y+8	; 0x08
    328a:	99 85       	ldd	r25, Y+9	; 0x09
    328c:	28 17       	cp	r18, r24
    328e:	39 07       	cpc	r19, r25
    3290:	0c f0       	brlt	.+2      	; 0x3294 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x90>
    3292:	40 e0       	ldi	r20, 0x00	; 0
    3294:	44 23       	and	r20, r20
    3296:	79 f6       	brne	.-98     	; 0x3236 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x32>
		
		//These fields can overflow, but that is intentional.
		checksumA = (byte) (checksumA + b);
		checksumB = (byte) (checksumB + checksumA);
	}
}
    3298:	2d 96       	adiw	r28, 0x0d	; 13
    329a:	0f b6       	in	r0, 0x3f	; 63
    329c:	f8 94       	cli
    329e:	de bf       	out	0x3e, r29	; 62
    32a0:	0f be       	out	0x3f, r0	; 63
    32a2:	cd bf       	out	0x3d, r28	; 61
    32a4:	df 91       	pop	r29
    32a6:	cf 91       	pop	r28
    32a8:	1f 91       	pop	r17
    32aa:	0f 91       	pop	r16
    32ac:	08 95       	ret

000032ae <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>:

int GroundControlStationInterface::transmit(Message *msgToSend)
{
    32ae:	cf 92       	push	r12
    32b0:	df 92       	push	r13
    32b2:	ef 92       	push	r14
    32b4:	ff 92       	push	r15
    32b6:	0f 93       	push	r16
    32b8:	1f 93       	push	r17
    32ba:	cf 93       	push	r28
    32bc:	df 93       	push	r29
    32be:	cd b7       	in	r28, 0x3d	; 61
    32c0:	de b7       	in	r29, 0x3e	; 62
    32c2:	64 97       	sbiw	r28, 0x14	; 20
    32c4:	0f b6       	in	r0, 0x3f	; 63
    32c6:	f8 94       	cli
    32c8:	de bf       	out	0x3e, r29	; 62
    32ca:	0f be       	out	0x3f, r0	; 63
    32cc:	cd bf       	out	0x3d, r28	; 61
    32ce:	9a 8b       	std	Y+18, r25	; 0x12
    32d0:	89 8b       	std	Y+17, r24	; 0x11
    32d2:	7c 8b       	std	Y+20, r23	; 0x14
    32d4:	6b 8b       	std	Y+19, r22	; 0x13
		delete [] msgPayload;
		msgPayload = NULL;
	}
	
	return status;
}
    32d6:	ed b6       	in	r14, 0x3d	; 61
    32d8:	fe b6       	in	r15, 0x3e	; 62
	}
}

int GroundControlStationInterface::transmit(Message *msgToSend)
{
	int status = 0;
    32da:	1a 82       	std	Y+2, r1	; 0x02
    32dc:	19 82       	std	Y+1, r1	; 0x01
	
	if (msgToSend != NULL)
    32de:	8b 89       	ldd	r24, Y+19	; 0x13
    32e0:	9c 89       	ldd	r25, Y+20	; 0x14
    32e2:	00 97       	sbiw	r24, 0x00	; 0
    32e4:	09 f4       	brne	.+2      	; 0x32e8 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x3a>
    32e6:	b3 c0       	rjmp	.+358    	; 0x344e <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x1a0>
    32e8:	8d b7       	in	r24, 0x3d	; 61
    32ea:	9e b7       	in	r25, 0x3e	; 62
    32ec:	6c 01       	movw	r12, r24
	{
		byte *msgPayload = msgToSend->getBytes();
    32ee:	8b 89       	ldd	r24, Y+19	; 0x13
    32f0:	9c 89       	ldd	r25, Y+20	; 0x14
    32f2:	fc 01       	movw	r30, r24
    32f4:	80 81       	ld	r24, Z
    32f6:	91 81       	ldd	r25, Z+1	; 0x01
    32f8:	04 96       	adiw	r24, 0x04	; 4
    32fa:	fc 01       	movw	r30, r24
    32fc:	20 81       	ld	r18, Z
    32fe:	31 81       	ldd	r19, Z+1	; 0x01
    3300:	8b 89       	ldd	r24, Y+19	; 0x13
    3302:	9c 89       	ldd	r25, Y+20	; 0x14
    3304:	f9 01       	movw	r30, r18
    3306:	19 95       	eicall
    3308:	9e 83       	std	Y+6, r25	; 0x06
    330a:	8d 83       	std	Y+5, r24	; 0x05
		
		int payloadSize = msgToSend->getMessageSize();
    330c:	8b 89       	ldd	r24, Y+19	; 0x13
    330e:	9c 89       	ldd	r25, Y+20	; 0x14
    3310:	0e 94 d8 1b 	call	0x37b0	; 0x37b0 <_ZN10helicopter8messages7Message14getMessageSizeEv>
    3314:	98 87       	std	Y+8, r25	; 0x08
    3316:	8f 83       	std	Y+7, r24	; 0x07
		
		int completeMsgSize = payloadSize + MsgHeaderFooterSize;;
    3318:	8f 81       	ldd	r24, Y+7	; 0x07
    331a:	98 85       	ldd	r25, Y+8	; 0x08
    331c:	05 96       	adiw	r24, 0x05	; 5
    331e:	9a 87       	std	Y+10, r25	; 0x0a
    3320:	89 87       	std	Y+9, r24	; 0x09

		byte completeMsg[completeMsgSize];
    3322:	89 85       	ldd	r24, Y+9	; 0x09
    3324:	9a 85       	ldd	r25, Y+10	; 0x0a
    3326:	01 97       	sbiw	r24, 0x01	; 1
    3328:	9c 87       	std	Y+12, r25	; 0x0c
    332a:	8b 87       	std	Y+11, r24	; 0x0b
    332c:	01 96       	adiw	r24, 0x01	; 1
    332e:	2d b7       	in	r18, 0x3d	; 61
    3330:	3e b7       	in	r19, 0x3e	; 62
    3332:	28 1b       	sub	r18, r24
    3334:	39 0b       	sbc	r19, r25
    3336:	0f b6       	in	r0, 0x3f	; 63
    3338:	f8 94       	cli
    333a:	3e bf       	out	0x3e, r19	; 62
    333c:	0f be       	out	0x3f, r0	; 63
    333e:	2d bf       	out	0x3d, r18	; 61
    3340:	8d b7       	in	r24, 0x3d	; 61
    3342:	9e b7       	in	r25, 0x3e	; 62
    3344:	01 96       	adiw	r24, 0x01	; 1
    3346:	9e 87       	std	Y+14, r25	; 0x0e
    3348:	8d 87       	std	Y+13, r24	; 0x0d
		
		completeMsg[0] = GroundControlStationInterface::SyncByte1;
    334a:	8d 85       	ldd	r24, Y+13	; 0x0d
    334c:	9e 85       	ldd	r25, Y+14	; 0x0e
    334e:	25 eb       	ldi	r18, 0xB5	; 181
    3350:	fc 01       	movw	r30, r24
    3352:	20 83       	st	Z, r18
		completeMsg[1] = GroundControlStationInterface::SyncByte2;
    3354:	8d 85       	ldd	r24, Y+13	; 0x0d
    3356:	9e 85       	ldd	r25, Y+14	; 0x0e
    3358:	22 e6       	ldi	r18, 0x62	; 98
    335a:	fc 01       	movw	r30, r24
    335c:	21 83       	std	Z+1, r18	; 0x01
		completeMsg[2] = GroundControlStationInterface::SyncByte3;
    335e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3360:	9e 85       	ldd	r25, Y+14	; 0x0e
    3362:	27 ed       	ldi	r18, 0xD7	; 215
    3364:	fc 01       	movw	r30, r24
    3366:	22 83       	std	Z+2, r18	; 0x02
		
		memcpy(&completeMsg[3], msgPayload, payloadSize);
    3368:	4f 81       	ldd	r20, Y+7	; 0x07
    336a:	58 85       	ldd	r21, Y+8	; 0x08
    336c:	8d 85       	ldd	r24, Y+13	; 0x0d
    336e:	9e 85       	ldd	r25, Y+14	; 0x0e
    3370:	03 96       	adiw	r24, 0x03	; 3
    3372:	2d 81       	ldd	r18, Y+5	; 0x05
    3374:	3e 81       	ldd	r19, Y+6	; 0x06
    3376:	b9 01       	movw	r22, r18
    3378:	0e 94 f8 44 	call	0x89f0	; 0x89f0 <memcpy>
		
		byte checksumA = 0;
    337c:	1f 86       	std	Y+15, r1	; 0x0f
		byte checksumB = 0;
    337e:	18 8a       	std	Y+16, r1	; 0x10
		
		calculateChecksum(msgPayload, payloadSize, checksumA, checksumB);
    3380:	fe 01       	movw	r30, r28
    3382:	70 96       	adiw	r30, 0x10	; 16
    3384:	9e 01       	movw	r18, r28
    3386:	21 5f       	subi	r18, 0xF1	; 241
    3388:	3f 4f       	sbci	r19, 0xFF	; 255
    338a:	4f 81       	ldd	r20, Y+7	; 0x07
    338c:	58 85       	ldd	r21, Y+8	; 0x08
    338e:	6d 81       	ldd	r22, Y+5	; 0x05
    3390:	7e 81       	ldd	r23, Y+6	; 0x06
    3392:	89 89       	ldd	r24, Y+17	; 0x11
    3394:	9a 89       	ldd	r25, Y+18	; 0x12
    3396:	8f 01       	movw	r16, r30
    3398:	0e 94 02 19 	call	0x3204	; 0x3204 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>
		
		completeMsg[completeMsgSize - 2] = checksumA;
    339c:	89 85       	ldd	r24, Y+9	; 0x09
    339e:	9a 85       	ldd	r25, Y+10	; 0x0a
    33a0:	02 97       	sbiw	r24, 0x02	; 2
    33a2:	4f 85       	ldd	r20, Y+15	; 0x0f
    33a4:	2d 85       	ldd	r18, Y+13	; 0x0d
    33a6:	3e 85       	ldd	r19, Y+14	; 0x0e
    33a8:	82 0f       	add	r24, r18
    33aa:	93 1f       	adc	r25, r19
    33ac:	fc 01       	movw	r30, r24
    33ae:	40 83       	st	Z, r20
		completeMsg[completeMsgSize - 1] = checksumB;
    33b0:	89 85       	ldd	r24, Y+9	; 0x09
    33b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    33b4:	01 97       	sbiw	r24, 0x01	; 1
    33b6:	48 89       	ldd	r20, Y+16	; 0x10
    33b8:	2d 85       	ldd	r18, Y+13	; 0x0d
    33ba:	3e 85       	ldd	r19, Y+14	; 0x0e
    33bc:	82 0f       	add	r24, r18
    33be:	93 1f       	adc	r25, r19
    33c0:	fc 01       	movw	r30, r24
    33c2:	40 83       	st	Z, r20
		
		//iterate over the bytes and transmit them, unless there was an error.
		for (int i = 0; i < completeMsgSize && status == 0; i++)
    33c4:	1c 82       	std	Y+4, r1	; 0x04
    33c6:	1b 82       	std	Y+3, r1	; 0x03
    33c8:	23 c0       	rjmp	.+70     	; 0x3410 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x162>
		{
			status = serialDriver->transmitByte(completeMsg[i]);
    33ca:	89 89       	ldd	r24, Y+17	; 0x11
    33cc:	9a 89       	ldd	r25, Y+18	; 0x12
    33ce:	fc 01       	movw	r30, r24
    33d0:	80 81       	ld	r24, Z
    33d2:	91 81       	ldd	r25, Z+1	; 0x01
    33d4:	fc 01       	movw	r30, r24
    33d6:	80 81       	ld	r24, Z
    33d8:	91 81       	ldd	r25, Z+1	; 0x01
    33da:	06 96       	adiw	r24, 0x06	; 6
    33dc:	fc 01       	movw	r30, r24
    33de:	20 81       	ld	r18, Z
    33e0:	31 81       	ldd	r19, Z+1	; 0x01
    33e2:	4d 85       	ldd	r20, Y+13	; 0x0d
    33e4:	5e 85       	ldd	r21, Y+14	; 0x0e
    33e6:	8b 81       	ldd	r24, Y+3	; 0x03
    33e8:	9c 81       	ldd	r25, Y+4	; 0x04
    33ea:	84 0f       	add	r24, r20
    33ec:	95 1f       	adc	r25, r21
    33ee:	fc 01       	movw	r30, r24
    33f0:	40 81       	ld	r20, Z
    33f2:	89 89       	ldd	r24, Y+17	; 0x11
    33f4:	9a 89       	ldd	r25, Y+18	; 0x12
    33f6:	fc 01       	movw	r30, r24
    33f8:	80 81       	ld	r24, Z
    33fa:	91 81       	ldd	r25, Z+1	; 0x01
    33fc:	64 2f       	mov	r22, r20
    33fe:	f9 01       	movw	r30, r18
    3400:	19 95       	eicall
    3402:	9a 83       	std	Y+2, r25	; 0x02
    3404:	89 83       	std	Y+1, r24	; 0x01
		
		completeMsg[completeMsgSize - 2] = checksumA;
		completeMsg[completeMsgSize - 1] = checksumB;
		
		//iterate over the bytes and transmit them, unless there was an error.
		for (int i = 0; i < completeMsgSize && status == 0; i++)
    3406:	8b 81       	ldd	r24, Y+3	; 0x03
    3408:	9c 81       	ldd	r25, Y+4	; 0x04
    340a:	01 96       	adiw	r24, 0x01	; 1
    340c:	9c 83       	std	Y+4, r25	; 0x04
    340e:	8b 83       	std	Y+3, r24	; 0x03
    3410:	2b 81       	ldd	r18, Y+3	; 0x03
    3412:	3c 81       	ldd	r19, Y+4	; 0x04
    3414:	89 85       	ldd	r24, Y+9	; 0x09
    3416:	9a 85       	ldd	r25, Y+10	; 0x0a
    3418:	28 17       	cp	r18, r24
    341a:	39 07       	cpc	r19, r25
    341c:	34 f4       	brge	.+12     	; 0x342a <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x17c>
    341e:	89 81       	ldd	r24, Y+1	; 0x01
    3420:	9a 81       	ldd	r25, Y+2	; 0x02
    3422:	00 97       	sbiw	r24, 0x00	; 0
    3424:	11 f4       	brne	.+4      	; 0x342a <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x17c>
    3426:	81 e0       	ldi	r24, 0x01	; 1
    3428:	01 c0       	rjmp	.+2      	; 0x342c <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x17e>
    342a:	80 e0       	ldi	r24, 0x00	; 0
    342c:	88 23       	and	r24, r24
    342e:	69 f6       	brne	.-102    	; 0x33ca <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x11c>
		{
			status = serialDriver->transmitByte(completeMsg[i]);
		}
		
		delete [] msgPayload;
    3430:	8d 81       	ldd	r24, Y+5	; 0x05
    3432:	9e 81       	ldd	r25, Y+6	; 0x06
    3434:	00 97       	sbiw	r24, 0x00	; 0
    3436:	21 f0       	breq	.+8      	; 0x3440 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x192>
    3438:	8d 81       	ldd	r24, Y+5	; 0x05
    343a:	9e 81       	ldd	r25, Y+6	; 0x06
    343c:	0e 94 4a 39 	call	0x7294	; 0x7294 <_ZdaPv>
		msgPayload = NULL;
    3440:	1e 82       	std	Y+6, r1	; 0x06
    3442:	1d 82       	std	Y+5, r1	; 0x05
    3444:	0f b6       	in	r0, 0x3f	; 63
    3446:	f8 94       	cli
    3448:	de be       	out	0x3e, r13	; 62
    344a:	0f be       	out	0x3f, r0	; 63
    344c:	cd be       	out	0x3d, r12	; 61
	}
	
	return status;
    344e:	89 81       	ldd	r24, Y+1	; 0x01
    3450:	9a 81       	ldd	r25, Y+2	; 0x02
}
    3452:	0f b6       	in	r0, 0x3f	; 63
    3454:	f8 94       	cli
    3456:	fe be       	out	0x3e, r15	; 62
    3458:	0f be       	out	0x3f, r0	; 63
    345a:	ed be       	out	0x3d, r14	; 61
    345c:	64 96       	adiw	r28, 0x14	; 20
    345e:	0f b6       	in	r0, 0x3f	; 63
    3460:	f8 94       	cli
    3462:	de bf       	out	0x3e, r29	; 62
    3464:	0f be       	out	0x3f, r0	; 63
    3466:	cd bf       	out	0x3d, r28	; 61
    3468:	df 91       	pop	r29
    346a:	cf 91       	pop	r28
    346c:	1f 91       	pop	r17
    346e:	0f 91       	pop	r16
    3470:	ff 90       	pop	r15
    3472:	ef 90       	pop	r14
    3474:	df 90       	pop	r13
    3476:	cf 90       	pop	r12
    3478:	08 95       	ret

0000347a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE>:
 * a lot of data is constantly received before that timeout, and none of the data
 * is a sync byte, then this method will never stop receiving bytes and will
 * lock up the rest of the system. 
 */
int GroundControlStationInterface::receive(Message * &receivedMessage)
{
    347a:	cf 92       	push	r12
    347c:	df 92       	push	r13
    347e:	ef 92       	push	r14
    3480:	ff 92       	push	r15
    3482:	0f 93       	push	r16
    3484:	1f 93       	push	r17
    3486:	cf 93       	push	r28
    3488:	df 93       	push	r29
    348a:	cd b7       	in	r28, 0x3d	; 61
    348c:	de b7       	in	r29, 0x3e	; 62
    348e:	66 97       	sbiw	r28, 0x16	; 22
    3490:	0f b6       	in	r0, 0x3f	; 63
    3492:	f8 94       	cli
    3494:	de bf       	out	0x3e, r29	; 62
    3496:	0f be       	out	0x3f, r0	; 63
    3498:	cd bf       	out	0x3d, r28	; 61
    349a:	9c 8b       	std	Y+20, r25	; 0x14
    349c:	8b 8b       	std	Y+19, r24	; 0x13
    349e:	7e 8b       	std	Y+22, r23	; 0x16
    34a0:	6d 8b       	std	Y+21, r22	; 0x15
	{
		receivedMessage = NULL;
	}
	
	return status;
    34a2:	ed b6       	in	r14, 0x3d	; 61
    34a4:	fe b6       	in	r15, 0x3e	; 62
 * is a sync byte, then this method will never stop receiving bytes and will
 * lock up the rest of the system. 
 */
int GroundControlStationInterface::receive(Message * &receivedMessage)
{
	int status = 0;
    34a6:	1a 82       	std	Y+2, r1	; 0x02
    34a8:	19 82       	std	Y+1, r1	; 0x01
	
    byte firstSyncByte = 0;
    34aa:	1b 82       	std	Y+3, r1	; 0x03
    byte secondSyncByte = 0;
    34ac:	1c 82       	std	Y+4, r1	; 0x04
    byte thirdSyncByte = 0;
    34ae:	1d 86       	std	Y+13, r1	; 0x0d
	

	//Read until the sync bytes are received or we time out.
	//Throw away any 'garbage' bytes.
	while(!(firstSyncByte == SyncByte1 && secondSyncByte == SyncByte2 && thirdSyncByte == SyncByte3) && status == 0)
    34b0:	1d c0       	rjmp	.+58     	; 0x34ec <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x72>
	{
		firstSyncByte = secondSyncByte;
    34b2:	8c 81       	ldd	r24, Y+4	; 0x04
    34b4:	8b 83       	std	Y+3, r24	; 0x03
		secondSyncByte = thirdSyncByte;
    34b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    34b8:	8c 83       	std	Y+4, r24	; 0x04
		status = serialDriver->receiveByte(thirdSyncByte);
    34ba:	8b 89       	ldd	r24, Y+19	; 0x13
    34bc:	9c 89       	ldd	r25, Y+20	; 0x14
    34be:	fc 01       	movw	r30, r24
    34c0:	80 81       	ld	r24, Z
    34c2:	91 81       	ldd	r25, Z+1	; 0x01
    34c4:	fc 01       	movw	r30, r24
    34c6:	80 81       	ld	r24, Z
    34c8:	91 81       	ldd	r25, Z+1	; 0x01
    34ca:	08 96       	adiw	r24, 0x08	; 8
    34cc:	fc 01       	movw	r30, r24
    34ce:	20 81       	ld	r18, Z
    34d0:	31 81       	ldd	r19, Z+1	; 0x01
    34d2:	8b 89       	ldd	r24, Y+19	; 0x13
    34d4:	9c 89       	ldd	r25, Y+20	; 0x14
    34d6:	fc 01       	movw	r30, r24
    34d8:	80 81       	ld	r24, Z
    34da:	91 81       	ldd	r25, Z+1	; 0x01
    34dc:	ae 01       	movw	r20, r28
    34de:	43 5f       	subi	r20, 0xF3	; 243
    34e0:	5f 4f       	sbci	r21, 0xFF	; 255
    34e2:	ba 01       	movw	r22, r20
    34e4:	f9 01       	movw	r30, r18
    34e6:	19 95       	eicall
    34e8:	9a 83       	std	Y+2, r25	; 0x02
    34ea:	89 83       	std	Y+1, r24	; 0x01
    byte thirdSyncByte = 0;
	

	//Read until the sync bytes are received or we time out.
	//Throw away any 'garbage' bytes.
	while(!(firstSyncByte == SyncByte1 && secondSyncByte == SyncByte2 && thirdSyncByte == SyncByte3) && status == 0)
    34ec:	8b 81       	ldd	r24, Y+3	; 0x03
    34ee:	85 3b       	cpi	r24, 0xB5	; 181
    34f0:	31 f4       	brne	.+12     	; 0x34fe <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x84>
    34f2:	8c 81       	ldd	r24, Y+4	; 0x04
    34f4:	82 36       	cpi	r24, 0x62	; 98
    34f6:	19 f4       	brne	.+6      	; 0x34fe <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x84>
    34f8:	8d 85       	ldd	r24, Y+13	; 0x0d
    34fa:	87 3d       	cpi	r24, 0xD7	; 215
    34fc:	31 f0       	breq	.+12     	; 0x350a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x90>
    34fe:	89 81       	ldd	r24, Y+1	; 0x01
    3500:	9a 81       	ldd	r25, Y+2	; 0x02
    3502:	00 97       	sbiw	r24, 0x00	; 0
    3504:	11 f4       	brne	.+4      	; 0x350a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x90>
    3506:	81 e0       	ldi	r24, 0x01	; 1
    3508:	01 c0       	rjmp	.+2      	; 0x350c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x92>
    350a:	80 e0       	ldi	r24, 0x00	; 0
    350c:	88 23       	and	r24, r24
    350e:	89 f6       	brne	.-94     	; 0x34b2 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x38>
		firstSyncByte = secondSyncByte;
		secondSyncByte = thirdSyncByte;
		status = serialDriver->receiveByte(thirdSyncByte);
	}
	
	if (status == 0)
    3510:	89 81       	ldd	r24, Y+1	; 0x01
    3512:	9a 81       	ldd	r25, Y+2	; 0x02
    3514:	00 97       	sbiw	r24, 0x00	; 0
    3516:	09 f0       	breq	.+2      	; 0x351a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xa0>
    3518:	f9 c0       	rjmp	.+498    	; 0x370c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x292>
	{
		//once we have found a valid message, get the message ID
		byte msgType = 0;
    351a:	1e 86       	std	Y+14, r1	; 0x0e
		
		status = serialDriver->receiveByte(msgType);
    351c:	8b 89       	ldd	r24, Y+19	; 0x13
    351e:	9c 89       	ldd	r25, Y+20	; 0x14
    3520:	fc 01       	movw	r30, r24
    3522:	80 81       	ld	r24, Z
    3524:	91 81       	ldd	r25, Z+1	; 0x01
    3526:	fc 01       	movw	r30, r24
    3528:	80 81       	ld	r24, Z
    352a:	91 81       	ldd	r25, Z+1	; 0x01
    352c:	08 96       	adiw	r24, 0x08	; 8
    352e:	fc 01       	movw	r30, r24
    3530:	20 81       	ld	r18, Z
    3532:	31 81       	ldd	r19, Z+1	; 0x01
    3534:	8b 89       	ldd	r24, Y+19	; 0x13
    3536:	9c 89       	ldd	r25, Y+20	; 0x14
    3538:	fc 01       	movw	r30, r24
    353a:	80 81       	ld	r24, Z
    353c:	91 81       	ldd	r25, Z+1	; 0x01
    353e:	ae 01       	movw	r20, r28
    3540:	42 5f       	subi	r20, 0xF2	; 242
    3542:	5f 4f       	sbci	r21, 0xFF	; 255
    3544:	ba 01       	movw	r22, r20
    3546:	f9 01       	movw	r30, r18
    3548:	19 95       	eicall
    354a:	9a 83       	std	Y+2, r25	; 0x02
    354c:	89 83       	std	Y+1, r24	; 0x01
		
		if (status == 0)
    354e:	89 81       	ldd	r24, Y+1	; 0x01
    3550:	9a 81       	ldd	r25, Y+2	; 0x02
    3552:	00 97       	sbiw	r24, 0x00	; 0
    3554:	09 f0       	breq	.+2      	; 0x3558 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xde>
    3556:	da c0       	rjmp	.+436    	; 0x370c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x292>
		{
			int msgSize = 0;
    3558:	1e 82       	std	Y+6, r1	; 0x06
    355a:	1d 82       	std	Y+5, r1	; 0x05
			
			switch(msgType)
    355c:	8e 85       	ldd	r24, Y+14	; 0x0e
    355e:	88 2f       	mov	r24, r24
    3560:	90 e0       	ldi	r25, 0x00	; 0
    3562:	82 30       	cpi	r24, 0x02	; 2
    3564:	91 05       	cpc	r25, r1
    3566:	29 f4       	brne	.+10     	; 0x3572 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xf8>
			{
				case SystemTelemetryMessage::MessageType:
					msgSize = SystemTelemetryMessage::MessageSize;
    3568:	89 ec       	ldi	r24, 0xC9	; 201
    356a:	90 e0       	ldi	r25, 0x00	; 0
    356c:	9e 83       	std	Y+6, r25	; 0x06
    356e:	8d 83       	std	Y+5, r24	; 0x05
					break;
    3570:	05 c0       	rjmp	.+10     	; 0x357c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x102>
				default:
					//unrecognized message type.
					status = -2;
    3572:	8e ef       	ldi	r24, 0xFE	; 254
    3574:	9f ef       	ldi	r25, 0xFF	; 255
    3576:	9a 83       	std	Y+2, r25	; 0x02
    3578:	89 83       	std	Y+1, r24	; 0x01
					break;
    357a:	00 00       	nop
			}
			
			if (status == 0)
    357c:	89 81       	ldd	r24, Y+1	; 0x01
    357e:	9a 81       	ldd	r25, Y+2	; 0x02
    3580:	00 97       	sbiw	r24, 0x00	; 0
    3582:	09 f0       	breq	.+2      	; 0x3586 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x10c>
    3584:	c3 c0       	rjmp	.+390    	; 0x370c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x292>
    3586:	8d b7       	in	r24, 0x3d	; 61
    3588:	9e b7       	in	r25, 0x3e	; 62
    358a:	6c 01       	movw	r12, r24
			{
				byte messagePayload[msgSize];
    358c:	8d 81       	ldd	r24, Y+5	; 0x05
    358e:	9e 81       	ldd	r25, Y+6	; 0x06
    3590:	01 97       	sbiw	r24, 0x01	; 1
    3592:	9a 87       	std	Y+10, r25	; 0x0a
    3594:	89 87       	std	Y+9, r24	; 0x09
    3596:	01 96       	adiw	r24, 0x01	; 1
    3598:	2d b7       	in	r18, 0x3d	; 61
    359a:	3e b7       	in	r19, 0x3e	; 62
    359c:	28 1b       	sub	r18, r24
    359e:	39 0b       	sbc	r19, r25
    35a0:	0f b6       	in	r0, 0x3f	; 63
    35a2:	f8 94       	cli
    35a4:	3e bf       	out	0x3e, r19	; 62
    35a6:	0f be       	out	0x3f, r0	; 63
    35a8:	2d bf       	out	0x3d, r18	; 61
    35aa:	8d b7       	in	r24, 0x3d	; 61
    35ac:	9e b7       	in	r25, 0x3e	; 62
    35ae:	01 96       	adiw	r24, 0x01	; 1
    35b0:	9c 87       	std	Y+12, r25	; 0x0c
    35b2:	8b 87       	std	Y+11, r24	; 0x0b
							
				messagePayload[0] = msgType;
    35b4:	2e 85       	ldd	r18, Y+14	; 0x0e
    35b6:	8b 85       	ldd	r24, Y+11	; 0x0b
    35b8:	9c 85       	ldd	r25, Y+12	; 0x0c
    35ba:	fc 01       	movw	r30, r24
    35bc:	20 83       	st	Z, r18
							
				//Read the bytes in the payload of the message.
				//skip the first position since thats where the message type is located.
				for (int i = 1; i < msgSize && status == 0; i++)
    35be:	81 e0       	ldi	r24, 0x01	; 1
    35c0:	90 e0       	ldi	r25, 0x00	; 0
    35c2:	98 87       	std	Y+8, r25	; 0x08
    35c4:	8f 83       	std	Y+7, r24	; 0x07
    35c6:	21 c0       	rjmp	.+66     	; 0x360a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x190>
				{
					status = serialDriver->receiveByte(messagePayload[i]);
    35c8:	8b 89       	ldd	r24, Y+19	; 0x13
    35ca:	9c 89       	ldd	r25, Y+20	; 0x14
    35cc:	fc 01       	movw	r30, r24
    35ce:	80 81       	ld	r24, Z
    35d0:	91 81       	ldd	r25, Z+1	; 0x01
    35d2:	fc 01       	movw	r30, r24
    35d4:	80 81       	ld	r24, Z
    35d6:	91 81       	ldd	r25, Z+1	; 0x01
    35d8:	08 96       	adiw	r24, 0x08	; 8
    35da:	fc 01       	movw	r30, r24
    35dc:	20 81       	ld	r18, Z
    35de:	31 81       	ldd	r19, Z+1	; 0x01
    35e0:	4b 85       	ldd	r20, Y+11	; 0x0b
    35e2:	5c 85       	ldd	r21, Y+12	; 0x0c
    35e4:	8f 81       	ldd	r24, Y+7	; 0x07
    35e6:	98 85       	ldd	r25, Y+8	; 0x08
    35e8:	48 0f       	add	r20, r24
    35ea:	59 1f       	adc	r21, r25
    35ec:	8b 89       	ldd	r24, Y+19	; 0x13
    35ee:	9c 89       	ldd	r25, Y+20	; 0x14
    35f0:	fc 01       	movw	r30, r24
    35f2:	80 81       	ld	r24, Z
    35f4:	91 81       	ldd	r25, Z+1	; 0x01
    35f6:	ba 01       	movw	r22, r20
    35f8:	f9 01       	movw	r30, r18
    35fa:	19 95       	eicall
    35fc:	9a 83       	std	Y+2, r25	; 0x02
    35fe:	89 83       	std	Y+1, r24	; 0x01
							
				messagePayload[0] = msgType;
							
				//Read the bytes in the payload of the message.
				//skip the first position since thats where the message type is located.
				for (int i = 1; i < msgSize && status == 0; i++)
    3600:	8f 81       	ldd	r24, Y+7	; 0x07
    3602:	98 85       	ldd	r25, Y+8	; 0x08
    3604:	01 96       	adiw	r24, 0x01	; 1
    3606:	98 87       	std	Y+8, r25	; 0x08
    3608:	8f 83       	std	Y+7, r24	; 0x07
    360a:	2f 81       	ldd	r18, Y+7	; 0x07
    360c:	38 85       	ldd	r19, Y+8	; 0x08
    360e:	8d 81       	ldd	r24, Y+5	; 0x05
    3610:	9e 81       	ldd	r25, Y+6	; 0x06
    3612:	28 17       	cp	r18, r24
    3614:	39 07       	cpc	r19, r25
    3616:	34 f4       	brge	.+12     	; 0x3624 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1aa>
    3618:	89 81       	ldd	r24, Y+1	; 0x01
    361a:	9a 81       	ldd	r25, Y+2	; 0x02
    361c:	00 97       	sbiw	r24, 0x00	; 0
    361e:	11 f4       	brne	.+4      	; 0x3624 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1aa>
    3620:	81 e0       	ldi	r24, 0x01	; 1
    3622:	01 c0       	rjmp	.+2      	; 0x3626 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1ac>
    3624:	80 e0       	ldi	r24, 0x00	; 0
    3626:	88 23       	and	r24, r24
    3628:	79 f6       	brne	.-98     	; 0x35c8 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x14e>
				{
					status = serialDriver->receiveByte(messagePayload[i]);
				}
							
				if (status == 0)
    362a:	89 81       	ldd	r24, Y+1	; 0x01
    362c:	9a 81       	ldd	r25, Y+2	; 0x02
    362e:	00 97       	sbiw	r24, 0x00	; 0
    3630:	09 f0       	breq	.+2      	; 0x3634 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1ba>
    3632:	67 c0       	rjmp	.+206    	; 0x3702 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x288>
				{
					//Read the two checksum bytes
					byte messageChecksumA = 0;
    3634:	1f 86       	std	Y+15, r1	; 0x0f
					byte messageChecksumB = 0;
    3636:	18 8a       	std	Y+16, r1	; 0x10
					byte calculatedChecksumA = 0;
    3638:	19 8a       	std	Y+17, r1	; 0x11
					byte calculatedChecksumB = 0;
    363a:	1a 8a       	std	Y+18, r1	; 0x12
								
					//Note: status is getting overwritten here.
					status = serialDriver->receiveByte(messageChecksumA);
    363c:	8b 89       	ldd	r24, Y+19	; 0x13
    363e:	9c 89       	ldd	r25, Y+20	; 0x14
    3640:	fc 01       	movw	r30, r24
    3642:	80 81       	ld	r24, Z
    3644:	91 81       	ldd	r25, Z+1	; 0x01
    3646:	fc 01       	movw	r30, r24
    3648:	80 81       	ld	r24, Z
    364a:	91 81       	ldd	r25, Z+1	; 0x01
    364c:	08 96       	adiw	r24, 0x08	; 8
    364e:	fc 01       	movw	r30, r24
    3650:	20 81       	ld	r18, Z
    3652:	31 81       	ldd	r19, Z+1	; 0x01
    3654:	8b 89       	ldd	r24, Y+19	; 0x13
    3656:	9c 89       	ldd	r25, Y+20	; 0x14
    3658:	fc 01       	movw	r30, r24
    365a:	80 81       	ld	r24, Z
    365c:	91 81       	ldd	r25, Z+1	; 0x01
    365e:	ae 01       	movw	r20, r28
    3660:	41 5f       	subi	r20, 0xF1	; 241
    3662:	5f 4f       	sbci	r21, 0xFF	; 255
    3664:	ba 01       	movw	r22, r20
    3666:	f9 01       	movw	r30, r18
    3668:	19 95       	eicall
    366a:	9a 83       	std	Y+2, r25	; 0x02
    366c:	89 83       	std	Y+1, r24	; 0x01
					status = serialDriver->receiveByte(messageChecksumB);
    366e:	8b 89       	ldd	r24, Y+19	; 0x13
    3670:	9c 89       	ldd	r25, Y+20	; 0x14
    3672:	fc 01       	movw	r30, r24
    3674:	80 81       	ld	r24, Z
    3676:	91 81       	ldd	r25, Z+1	; 0x01
    3678:	fc 01       	movw	r30, r24
    367a:	80 81       	ld	r24, Z
    367c:	91 81       	ldd	r25, Z+1	; 0x01
    367e:	08 96       	adiw	r24, 0x08	; 8
    3680:	fc 01       	movw	r30, r24
    3682:	20 81       	ld	r18, Z
    3684:	31 81       	ldd	r19, Z+1	; 0x01
    3686:	8b 89       	ldd	r24, Y+19	; 0x13
    3688:	9c 89       	ldd	r25, Y+20	; 0x14
    368a:	fc 01       	movw	r30, r24
    368c:	80 81       	ld	r24, Z
    368e:	91 81       	ldd	r25, Z+1	; 0x01
    3690:	ae 01       	movw	r20, r28
    3692:	40 5f       	subi	r20, 0xF0	; 240
    3694:	5f 4f       	sbci	r21, 0xFF	; 255
    3696:	ba 01       	movw	r22, r20
    3698:	f9 01       	movw	r30, r18
    369a:	19 95       	eicall
    369c:	9a 83       	std	Y+2, r25	; 0x02
    369e:	89 83       	std	Y+1, r24	; 0x01
								
					//Generate checksum for the message			
					calculateChecksum(messagePayload, msgSize, calculatedChecksumA, calculatedChecksumB);
    36a0:	6b 85       	ldd	r22, Y+11	; 0x0b
    36a2:	7c 85       	ldd	r23, Y+12	; 0x0c
    36a4:	fe 01       	movw	r30, r28
    36a6:	72 96       	adiw	r30, 0x12	; 18
    36a8:	9e 01       	movw	r18, r28
    36aa:	2f 5e       	subi	r18, 0xEF	; 239
    36ac:	3f 4f       	sbci	r19, 0xFF	; 255
    36ae:	4d 81       	ldd	r20, Y+5	; 0x05
    36b0:	5e 81       	ldd	r21, Y+6	; 0x06
    36b2:	8b 89       	ldd	r24, Y+19	; 0x13
    36b4:	9c 89       	ldd	r25, Y+20	; 0x14
    36b6:	8f 01       	movw	r16, r30
    36b8:	0e 94 02 19 	call	0x3204	; 0x3204 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>
								
					//verify that the checksum is correct
					if (calculatedChecksumA == messageChecksumA && calculatedChecksumB == messageChecksumB)
    36bc:	99 89       	ldd	r25, Y+17	; 0x11
    36be:	8f 85       	ldd	r24, Y+15	; 0x0f
    36c0:	98 17       	cp	r25, r24
    36c2:	d9 f4       	brne	.+54     	; 0x36fa <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x280>
    36c4:	9a 89       	ldd	r25, Y+18	; 0x12
    36c6:	88 89       	ldd	r24, Y+16	; 0x10
    36c8:	98 17       	cp	r25, r24
    36ca:	b9 f4       	brne	.+46     	; 0x36fa <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x280>
					{
						//build the message
						switch(msgType)
    36cc:	8e 85       	ldd	r24, Y+14	; 0x0e
    36ce:	88 2f       	mov	r24, r24
    36d0:	90 e0       	ldi	r25, 0x00	; 0
    36d2:	82 30       	cpi	r24, 0x02	; 2
    36d4:	91 05       	cpc	r25, r1
    36d6:	59 f4       	brne	.+22     	; 0x36ee <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x274>
						{
							case SystemTelemetryMessage::MessageType:
								receivedMessage = SystemTelemetryMessage::buildMessageSt(messagePayload);
    36d8:	8b 85       	ldd	r24, Y+11	; 0x0b
    36da:	9c 85       	ldd	r25, Y+12	; 0x0c
    36dc:	0e 94 f1 27 	call	0x4fe2	; 0x4fe2 <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh>
    36e0:	9c 01       	movw	r18, r24
    36e2:	8d 89       	ldd	r24, Y+21	; 0x15
    36e4:	9e 89       	ldd	r25, Y+22	; 0x16
    36e6:	fc 01       	movw	r30, r24
    36e8:	31 83       	std	Z+1, r19	; 0x01
    36ea:	20 83       	st	Z, r18
							break;
    36ec:	05 c0       	rjmp	.+10     	; 0x36f8 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x27e>
							default:
								//unrecognized message type.
								status = -2;
    36ee:	8e ef       	ldi	r24, 0xFE	; 254
    36f0:	9f ef       	ldi	r25, 0xFF	; 255
    36f2:	9a 83       	std	Y+2, r25	; 0x02
    36f4:	89 83       	std	Y+1, r24	; 0x01
							break;
    36f6:	00 00       	nop
								
					//verify that the checksum is correct
					if (calculatedChecksumA == messageChecksumA && calculatedChecksumB == messageChecksumB)
					{
						//build the message
						switch(msgType)
    36f8:	04 c0       	rjmp	.+8      	; 0x3702 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x288>
							break;
						}
					}else
					{
						//checksum mismatch
						status = -3;
    36fa:	8d ef       	ldi	r24, 0xFD	; 253
    36fc:	9f ef       	ldi	r25, 0xFF	; 255
    36fe:	9a 83       	std	Y+2, r25	; 0x02
    3700:	89 83       	std	Y+1, r24	; 0x01
    3702:	0f b6       	in	r0, 0x3f	; 63
    3704:	f8 94       	cli
    3706:	de be       	out	0x3e, r13	; 62
    3708:	0f be       	out	0x3f, r0	; 63
    370a:	cd be       	out	0x3d, r12	; 61
				}
			}
		}
	}
	
	if (status != 0)
    370c:	89 81       	ldd	r24, Y+1	; 0x01
    370e:	9a 81       	ldd	r25, Y+2	; 0x02
    3710:	00 97       	sbiw	r24, 0x00	; 0
    3712:	29 f0       	breq	.+10     	; 0x371e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x2a4>
	{
		receivedMessage = NULL;
    3714:	8d 89       	ldd	r24, Y+21	; 0x15
    3716:	9e 89       	ldd	r25, Y+22	; 0x16
    3718:	fc 01       	movw	r30, r24
    371a:	11 82       	std	Z+1, r1	; 0x01
    371c:	10 82       	st	Z, r1
	}
	
	return status;
    371e:	89 81       	ldd	r24, Y+1	; 0x01
    3720:	9a 81       	ldd	r25, Y+2	; 0x02
    3722:	0f b6       	in	r0, 0x3f	; 63
    3724:	f8 94       	cli
    3726:	fe be       	out	0x3e, r15	; 62
    3728:	0f be       	out	0x3f, r0	; 63
    372a:	ed be       	out	0x3d, r14	; 61
    372c:	66 96       	adiw	r28, 0x16	; 22
    372e:	0f b6       	in	r0, 0x3f	; 63
    3730:	f8 94       	cli
    3732:	de bf       	out	0x3e, r29	; 62
    3734:	0f be       	out	0x3f, r0	; 63
    3736:	cd bf       	out	0x3d, r28	; 61
    3738:	df 91       	pop	r29
    373a:	cf 91       	pop	r28
    373c:	1f 91       	pop	r17
    373e:	0f 91       	pop	r16
    3740:	ff 90       	pop	r15
    3742:	ef 90       	pop	r14
    3744:	df 90       	pop	r13
    3746:	cf 90       	pop	r12
    3748:	08 95       	ret

0000374a <_ZN10helicopter8messages7MessageD1Ev>:
					msgType(msgType), msgSize(msgSize)
				{
					
				}
				
				virtual ~Message()
    374a:	cf 93       	push	r28
    374c:	df 93       	push	r29
    374e:	1f 92       	push	r1
    3750:	1f 92       	push	r1
    3752:	cd b7       	in	r28, 0x3d	; 61
    3754:	de b7       	in	r29, 0x3e	; 62
    3756:	9a 83       	std	Y+2, r25	; 0x02
    3758:	89 83       	std	Y+1, r24	; 0x01
				{
    375a:	89 81       	ldd	r24, Y+1	; 0x01
    375c:	9a 81       	ldd	r25, Y+2	; 0x02
    375e:	20 e3       	ldi	r18, 0x30	; 48
    3760:	32 e0       	ldi	r19, 0x02	; 2
    3762:	fc 01       	movw	r30, r24
    3764:	31 83       	std	Z+1, r19	; 0x01
    3766:	20 83       	st	Z, r18
					
				}
    3768:	80 e0       	ldi	r24, 0x00	; 0
    376a:	90 e0       	ldi	r25, 0x00	; 0
    376c:	81 70       	andi	r24, 0x01	; 1
    376e:	99 27       	eor	r25, r25
    3770:	00 97       	sbiw	r24, 0x00	; 0
    3772:	21 f0       	breq	.+8      	; 0x377c <_ZN10helicopter8messages7MessageD1Ev+0x32>
    3774:	89 81       	ldd	r24, Y+1	; 0x01
    3776:	9a 81       	ldd	r25, Y+2	; 0x02
    3778:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    377c:	0f 90       	pop	r0
    377e:	0f 90       	pop	r0
    3780:	df 91       	pop	r29
    3782:	cf 91       	pop	r28
    3784:	08 95       	ret

00003786 <_ZN10helicopter8messages7MessageD0Ev>:
					msgType(msgType), msgSize(msgSize)
				{
					
				}
				
				virtual ~Message()
    3786:	cf 93       	push	r28
    3788:	df 93       	push	r29
    378a:	1f 92       	push	r1
    378c:	1f 92       	push	r1
    378e:	cd b7       	in	r28, 0x3d	; 61
    3790:	de b7       	in	r29, 0x3e	; 62
    3792:	9a 83       	std	Y+2, r25	; 0x02
    3794:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    3796:	89 81       	ldd	r24, Y+1	; 0x01
    3798:	9a 81       	ldd	r25, Y+2	; 0x02
    379a:	0e 94 a5 1b 	call	0x374a	; 0x374a <_ZN10helicopter8messages7MessageD1Ev>
    379e:	89 81       	ldd	r24, Y+1	; 0x01
    37a0:	9a 81       	ldd	r25, Y+2	; 0x02
    37a2:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    37a6:	0f 90       	pop	r0
    37a8:	0f 90       	pop	r0
    37aa:	df 91       	pop	r29
    37ac:	cf 91       	pop	r28
    37ae:	08 95       	ret

000037b0 <_ZN10helicopter8messages7Message14getMessageSizeEv>:
	* Returns the number of bytes in this message. This should
	* be the payload of the message, and not underlying protocol
	* information (sync bytes and checksum bytes)
	*/
int Message::getMessageSize()
{
    37b0:	cf 93       	push	r28
    37b2:	df 93       	push	r29
    37b4:	1f 92       	push	r1
    37b6:	1f 92       	push	r1
    37b8:	cd b7       	in	r28, 0x3d	; 61
    37ba:	de b7       	in	r29, 0x3e	; 62
    37bc:	9a 83       	std	Y+2, r25	; 0x02
    37be:	89 83       	std	Y+1, r24	; 0x01
	return msgSize;
    37c0:	89 81       	ldd	r24, Y+1	; 0x01
    37c2:	9a 81       	ldd	r25, Y+2	; 0x02
    37c4:	fc 01       	movw	r30, r24
    37c6:	83 81       	ldd	r24, Z+3	; 0x03
    37c8:	94 81       	ldd	r25, Z+4	; 0x04
}
    37ca:	0f 90       	pop	r0
    37cc:	0f 90       	pop	r0
    37ce:	df 91       	pop	r29
    37d0:	cf 91       	pop	r28
    37d2:	08 95       	ret

000037d4 <_ZN10helicopter8messages7Message8getBytesEv>:
				
/**
	* Returns the data in this message in raw byte format for transmission.
	*/
byte *Message::getBytes()
{
    37d4:	cf 93       	push	r28
    37d6:	df 93       	push	r29
    37d8:	1f 92       	push	r1
    37da:	1f 92       	push	r1
    37dc:	cd b7       	in	r28, 0x3d	; 61
    37de:	de b7       	in	r29, 0x3e	; 62
    37e0:	9a 83       	std	Y+2, r25	; 0x02
    37e2:	89 83       	std	Y+1, r24	; 0x01
	return NULL;
    37e4:	80 e0       	ldi	r24, 0x00	; 0
    37e6:	90 e0       	ldi	r25, 0x00	; 0
}
    37e8:	0f 90       	pop	r0
    37ea:	0f 90       	pop	r0
    37ec:	df 91       	pop	r29
    37ee:	cf 91       	pop	r28
    37f0:	08 95       	ret

000037f2 <_ZN10helicopter8messages7Message12buildMessageEPh>:
	* for creating a message object given a stream of bytes.
	* @param message The bytes in the payload of the message which should be used
	* to construct a message object.
	*/
void Message::buildMessage(byte *message)
{
    37f2:	cf 93       	push	r28
    37f4:	df 93       	push	r29
    37f6:	00 d0       	rcall	.+0      	; 0x37f8 <_ZN10helicopter8messages7Message12buildMessageEPh+0x6>
    37f8:	1f 92       	push	r1
    37fa:	cd b7       	in	r28, 0x3d	; 61
    37fc:	de b7       	in	r29, 0x3e	; 62
    37fe:	9a 83       	std	Y+2, r25	; 0x02
    3800:	89 83       	std	Y+1, r24	; 0x01
    3802:	7c 83       	std	Y+4, r23	; 0x04
    3804:	6b 83       	std	Y+3, r22	; 0x03
	//noop. subclass should implement this.
    3806:	0f 90       	pop	r0
    3808:	0f 90       	pop	r0
    380a:	0f 90       	pop	r0
    380c:	0f 90       	pop	r0
    380e:	df 91       	pop	r29
    3810:	cf 91       	pop	r28
    3812:	08 95       	ret

00003814 <_ZN10helicopter8messages7MessageC1Ehi>:
			
				/**
				 * @param msgType The identifier of this message
				 * @param msgSize The size in bytes of this message
				 */
				Message (byte msgType, int msgSize):
    3814:	cf 93       	push	r28
    3816:	df 93       	push	r29
    3818:	00 d0       	rcall	.+0      	; 0x381a <_ZN10helicopter8messages7MessageC1Ehi+0x6>
    381a:	1f 92       	push	r1
    381c:	1f 92       	push	r1
    381e:	cd b7       	in	r28, 0x3d	; 61
    3820:	de b7       	in	r29, 0x3e	; 62
    3822:	9a 83       	std	Y+2, r25	; 0x02
    3824:	89 83       	std	Y+1, r24	; 0x01
    3826:	6b 83       	std	Y+3, r22	; 0x03
    3828:	5d 83       	std	Y+5, r21	; 0x05
    382a:	4c 83       	std	Y+4, r20	; 0x04
					msgType(msgType), msgSize(msgSize)
    382c:	89 81       	ldd	r24, Y+1	; 0x01
    382e:	9a 81       	ldd	r25, Y+2	; 0x02
    3830:	20 e3       	ldi	r18, 0x30	; 48
    3832:	32 e0       	ldi	r19, 0x02	; 2
    3834:	fc 01       	movw	r30, r24
    3836:	31 83       	std	Z+1, r19	; 0x01
    3838:	20 83       	st	Z, r18
    383a:	89 81       	ldd	r24, Y+1	; 0x01
    383c:	9a 81       	ldd	r25, Y+2	; 0x02
    383e:	2b 81       	ldd	r18, Y+3	; 0x03
    3840:	fc 01       	movw	r30, r24
    3842:	22 83       	std	Z+2, r18	; 0x02
    3844:	89 81       	ldd	r24, Y+1	; 0x01
    3846:	9a 81       	ldd	r25, Y+2	; 0x02
    3848:	2c 81       	ldd	r18, Y+4	; 0x04
    384a:	3d 81       	ldd	r19, Y+5	; 0x05
    384c:	fc 01       	movw	r30, r24
    384e:	34 83       	std	Z+4, r19	; 0x04
    3850:	23 83       	std	Z+3, r18	; 0x03
				{
					
				}
    3852:	0f 90       	pop	r0
    3854:	0f 90       	pop	r0
    3856:	0f 90       	pop	r0
    3858:	0f 90       	pop	r0
    385a:	0f 90       	pop	r0
    385c:	df 91       	pop	r29
    385e:	cf 91       	pop	r28
    3860:	08 95       	ret

00003862 <_ZN10helicopter8messages11SyncMessageC1Ev>:
				static const byte MessageType = 3;
							
				static const byte MessageSize =
					sizeof(msgType);
							
				SyncMessage(): Message(MessageType,MessageSize)
    3862:	cf 93       	push	r28
    3864:	df 93       	push	r29
    3866:	1f 92       	push	r1
    3868:	1f 92       	push	r1
    386a:	cd b7       	in	r28, 0x3d	; 61
    386c:	de b7       	in	r29, 0x3e	; 62
    386e:	9a 83       	std	Y+2, r25	; 0x02
    3870:	89 83       	std	Y+1, r24	; 0x01
    3872:	89 81       	ldd	r24, Y+1	; 0x01
    3874:	9a 81       	ldd	r25, Y+2	; 0x02
    3876:	41 e0       	ldi	r20, 0x01	; 1
    3878:	50 e0       	ldi	r21, 0x00	; 0
    387a:	63 e0       	ldi	r22, 0x03	; 3
    387c:	0e 94 0a 1c 	call	0x3814	; 0x3814 <_ZN10helicopter8messages7MessageC1Ehi>
    3880:	89 81       	ldd	r24, Y+1	; 0x01
    3882:	9a 81       	ldd	r25, Y+2	; 0x02
    3884:	2c e3       	ldi	r18, 0x3C	; 60
    3886:	32 e0       	ldi	r19, 0x02	; 2
    3888:	fc 01       	movw	r30, r24
    388a:	31 83       	std	Z+1, r19	; 0x01
    388c:	20 83       	st	Z, r18
				{
								
				}
    388e:	0f 90       	pop	r0
    3890:	0f 90       	pop	r0
    3892:	df 91       	pop	r29
    3894:	cf 91       	pop	r28
    3896:	08 95       	ret

00003898 <_ZN10helicopter8messages11SyncMessageD1Ev>:
				
				~SyncMessage()
    3898:	cf 93       	push	r28
    389a:	df 93       	push	r29
    389c:	1f 92       	push	r1
    389e:	1f 92       	push	r1
    38a0:	cd b7       	in	r28, 0x3d	; 61
    38a2:	de b7       	in	r29, 0x3e	; 62
    38a4:	9a 83       	std	Y+2, r25	; 0x02
    38a6:	89 83       	std	Y+1, r24	; 0x01
				{
    38a8:	89 81       	ldd	r24, Y+1	; 0x01
    38aa:	9a 81       	ldd	r25, Y+2	; 0x02
    38ac:	2c e3       	ldi	r18, 0x3C	; 60
    38ae:	32 e0       	ldi	r19, 0x02	; 2
    38b0:	fc 01       	movw	r30, r24
    38b2:	31 83       	std	Z+1, r19	; 0x01
    38b4:	20 83       	st	Z, r18
    38b6:	89 81       	ldd	r24, Y+1	; 0x01
    38b8:	9a 81       	ldd	r25, Y+2	; 0x02
    38ba:	0e 94 a5 1b 	call	0x374a	; 0x374a <_ZN10helicopter8messages7MessageD1Ev>
					
				}
    38be:	80 e0       	ldi	r24, 0x00	; 0
    38c0:	90 e0       	ldi	r25, 0x00	; 0
    38c2:	81 70       	andi	r24, 0x01	; 1
    38c4:	99 27       	eor	r25, r25
    38c6:	00 97       	sbiw	r24, 0x00	; 0
    38c8:	21 f0       	breq	.+8      	; 0x38d2 <_ZN10helicopter8messages11SyncMessageD1Ev+0x3a>
    38ca:	89 81       	ldd	r24, Y+1	; 0x01
    38cc:	9a 81       	ldd	r25, Y+2	; 0x02
    38ce:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    38d2:	0f 90       	pop	r0
    38d4:	0f 90       	pop	r0
    38d6:	df 91       	pop	r29
    38d8:	cf 91       	pop	r28
    38da:	08 95       	ret

000038dc <_ZN10helicopter8messages11SyncMessageD0Ev>:
				SyncMessage(): Message(MessageType,MessageSize)
				{
								
				}
				
				~SyncMessage()
    38dc:	cf 93       	push	r28
    38de:	df 93       	push	r29
    38e0:	1f 92       	push	r1
    38e2:	1f 92       	push	r1
    38e4:	cd b7       	in	r28, 0x3d	; 61
    38e6:	de b7       	in	r29, 0x3e	; 62
    38e8:	9a 83       	std	Y+2, r25	; 0x02
    38ea:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    38ec:	89 81       	ldd	r24, Y+1	; 0x01
    38ee:	9a 81       	ldd	r25, Y+2	; 0x02
    38f0:	0e 94 4c 1c 	call	0x3898	; 0x3898 <_ZN10helicopter8messages11SyncMessageD1Ev>
    38f4:	89 81       	ldd	r24, Y+1	; 0x01
    38f6:	9a 81       	ldd	r25, Y+2	; 0x02
    38f8:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    38fc:	0f 90       	pop	r0
    38fe:	0f 90       	pop	r0
    3900:	df 91       	pop	r29
    3902:	cf 91       	pop	r28
    3904:	08 95       	ret

00003906 <_ZN10helicopter8messages11SyncMessage8getBytesEv>:

using namespace helicopter::messages;


byte *SyncMessage::getBytes()
{
    3906:	cf 93       	push	r28
    3908:	df 93       	push	r29
    390a:	00 d0       	rcall	.+0      	; 0x390c <_ZN10helicopter8messages11SyncMessage8getBytesEv+0x6>
    390c:	00 d0       	rcall	.+0      	; 0x390e <_ZN10helicopter8messages11SyncMessage8getBytesEv+0x8>
    390e:	cd b7       	in	r28, 0x3d	; 61
    3910:	de b7       	in	r29, 0x3e	; 62
    3912:	9e 83       	std	Y+6, r25	; 0x06
    3914:	8d 83       	std	Y+5, r24	; 0x05
	byte *msg = new byte[MessageSize];
    3916:	81 e0       	ldi	r24, 0x01	; 1
    3918:	90 e0       	ldi	r25, 0x00	; 0
    391a:	0e 94 39 39 	call	0x7272	; 0x7272 <_Znaj>
    391e:	9a 83       	std	Y+2, r25	; 0x02
    3920:	89 83       	std	Y+1, r24	; 0x01
	byte *msgPtr = msg;
    3922:	89 81       	ldd	r24, Y+1	; 0x01
    3924:	9a 81       	ldd	r25, Y+2	; 0x02
    3926:	9c 83       	std	Y+4, r25	; 0x04
    3928:	8b 83       	std	Y+3, r24	; 0x03
	msgPtr[0] = this->msgType;
    392a:	8d 81       	ldd	r24, Y+5	; 0x05
    392c:	9e 81       	ldd	r25, Y+6	; 0x06
    392e:	fc 01       	movw	r30, r24
    3930:	22 81       	ldd	r18, Z+2	; 0x02
    3932:	8b 81       	ldd	r24, Y+3	; 0x03
    3934:	9c 81       	ldd	r25, Y+4	; 0x04
    3936:	fc 01       	movw	r30, r24
    3938:	20 83       	st	Z, r18
	
	return msg;
    393a:	89 81       	ldd	r24, Y+1	; 0x01
    393c:	9a 81       	ldd	r25, Y+2	; 0x02
}
    393e:	26 96       	adiw	r28, 0x06	; 6
    3940:	0f b6       	in	r0, 0x3f	; 63
    3942:	f8 94       	cli
    3944:	de bf       	out	0x3e, r29	; 62
    3946:	0f be       	out	0x3f, r0	; 63
    3948:	cd bf       	out	0x3d, r28	; 61
    394a:	df 91       	pop	r29
    394c:	cf 91       	pop	r28
    394e:	08 95       	ret

00003950 <_ZN10helicopter8messages11SyncMessage12buildMessageEPh>:

void SyncMessage::buildMessage(byte *message)
{
    3950:	cf 93       	push	r28
    3952:	df 93       	push	r29
    3954:	00 d0       	rcall	.+0      	; 0x3956 <_ZN10helicopter8messages11SyncMessage12buildMessageEPh+0x6>
    3956:	1f 92       	push	r1
    3958:	cd b7       	in	r28, 0x3d	; 61
    395a:	de b7       	in	r29, 0x3e	; 62
    395c:	9a 83       	std	Y+2, r25	; 0x02
    395e:	89 83       	std	Y+1, r24	; 0x01
    3960:	7c 83       	std	Y+4, r23	; 0x04
    3962:	6b 83       	std	Y+3, r22	; 0x03
	if (message != NULL)
    3964:	8b 81       	ldd	r24, Y+3	; 0x03
    3966:	9c 81       	ldd	r25, Y+4	; 0x04
    3968:	00 97       	sbiw	r24, 0x00	; 0
    396a:	41 f0       	breq	.+16     	; 0x397c <_ZN10helicopter8messages11SyncMessage12buildMessageEPh+0x2c>
	{
		msgType = message[0];
    396c:	8b 81       	ldd	r24, Y+3	; 0x03
    396e:	9c 81       	ldd	r25, Y+4	; 0x04
    3970:	fc 01       	movw	r30, r24
    3972:	20 81       	ld	r18, Z
    3974:	89 81       	ldd	r24, Y+1	; 0x01
    3976:	9a 81       	ldd	r25, Y+2	; 0x02
    3978:	fc 01       	movw	r30, r24
    397a:	22 83       	std	Z+2, r18	; 0x02
	}
}
    397c:	0f 90       	pop	r0
    397e:	0f 90       	pop	r0
    3980:	0f 90       	pop	r0
    3982:	0f 90       	pop	r0
    3984:	df 91       	pop	r29
    3986:	cf 91       	pop	r28
    3988:	08 95       	ret

0000398a <_ZN10helicopter8messages7Message6encodeERPhRl>:
				
				/**
				 * Mem copies the value into the buffer pointer then increments
				 * the pointer location by the size of the value copied.
				 */
				void encode (byte *&buffPtr, long &val)
    398a:	cf 93       	push	r28
    398c:	df 93       	push	r29
    398e:	00 d0       	rcall	.+0      	; 0x3990 <_ZN10helicopter8messages7Message6encodeERPhRl+0x6>
    3990:	00 d0       	rcall	.+0      	; 0x3992 <_ZN10helicopter8messages7Message6encodeERPhRl+0x8>
    3992:	cd b7       	in	r28, 0x3d	; 61
    3994:	de b7       	in	r29, 0x3e	; 62
    3996:	9a 83       	std	Y+2, r25	; 0x02
    3998:	89 83       	std	Y+1, r24	; 0x01
    399a:	7c 83       	std	Y+4, r23	; 0x04
    399c:	6b 83       	std	Y+3, r22	; 0x03
    399e:	5e 83       	std	Y+6, r21	; 0x06
    39a0:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(buffPtr, &val, sizeof(val));
    39a2:	8b 81       	ldd	r24, Y+3	; 0x03
    39a4:	9c 81       	ldd	r25, Y+4	; 0x04
    39a6:	fc 01       	movw	r30, r24
    39a8:	80 81       	ld	r24, Z
    39aa:	91 81       	ldd	r25, Z+1	; 0x01
    39ac:	2d 81       	ldd	r18, Y+5	; 0x05
    39ae:	3e 81       	ldd	r19, Y+6	; 0x06
    39b0:	44 e0       	ldi	r20, 0x04	; 4
    39b2:	50 e0       	ldi	r21, 0x00	; 0
    39b4:	b9 01       	movw	r22, r18
    39b6:	0e 94 f8 44 	call	0x89f0	; 0x89f0 <memcpy>
					buffPtr += sizeof(val);
    39ba:	8b 81       	ldd	r24, Y+3	; 0x03
    39bc:	9c 81       	ldd	r25, Y+4	; 0x04
    39be:	fc 01       	movw	r30, r24
    39c0:	80 81       	ld	r24, Z
    39c2:	91 81       	ldd	r25, Z+1	; 0x01
    39c4:	9c 01       	movw	r18, r24
    39c6:	2c 5f       	subi	r18, 0xFC	; 252
    39c8:	3f 4f       	sbci	r19, 0xFF	; 255
    39ca:	8b 81       	ldd	r24, Y+3	; 0x03
    39cc:	9c 81       	ldd	r25, Y+4	; 0x04
    39ce:	fc 01       	movw	r30, r24
    39d0:	31 83       	std	Z+1, r19	; 0x01
    39d2:	20 83       	st	Z, r18
				}
    39d4:	26 96       	adiw	r28, 0x06	; 6
    39d6:	0f b6       	in	r0, 0x3f	; 63
    39d8:	f8 94       	cli
    39da:	de bf       	out	0x3e, r29	; 62
    39dc:	0f be       	out	0x3f, r0	; 63
    39de:	cd bf       	out	0x3d, r28	; 61
    39e0:	df 91       	pop	r29
    39e2:	cf 91       	pop	r28
    39e4:	08 95       	ret

000039e6 <_ZN10helicopter8messages7Message6encodeERPhRm>:
				
				void encode (byte *&buffPtr, unsigned long &val)
    39e6:	cf 93       	push	r28
    39e8:	df 93       	push	r29
    39ea:	00 d0       	rcall	.+0      	; 0x39ec <_ZN10helicopter8messages7Message6encodeERPhRm+0x6>
    39ec:	00 d0       	rcall	.+0      	; 0x39ee <_ZN10helicopter8messages7Message6encodeERPhRm+0x8>
    39ee:	cd b7       	in	r28, 0x3d	; 61
    39f0:	de b7       	in	r29, 0x3e	; 62
    39f2:	9a 83       	std	Y+2, r25	; 0x02
    39f4:	89 83       	std	Y+1, r24	; 0x01
    39f6:	7c 83       	std	Y+4, r23	; 0x04
    39f8:	6b 83       	std	Y+3, r22	; 0x03
    39fa:	5e 83       	std	Y+6, r21	; 0x06
    39fc:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(buffPtr, &val, sizeof(val));
    39fe:	8b 81       	ldd	r24, Y+3	; 0x03
    3a00:	9c 81       	ldd	r25, Y+4	; 0x04
    3a02:	fc 01       	movw	r30, r24
    3a04:	80 81       	ld	r24, Z
    3a06:	91 81       	ldd	r25, Z+1	; 0x01
    3a08:	2d 81       	ldd	r18, Y+5	; 0x05
    3a0a:	3e 81       	ldd	r19, Y+6	; 0x06
    3a0c:	44 e0       	ldi	r20, 0x04	; 4
    3a0e:	50 e0       	ldi	r21, 0x00	; 0
    3a10:	b9 01       	movw	r22, r18
    3a12:	0e 94 f8 44 	call	0x89f0	; 0x89f0 <memcpy>
					buffPtr += sizeof(val);
    3a16:	8b 81       	ldd	r24, Y+3	; 0x03
    3a18:	9c 81       	ldd	r25, Y+4	; 0x04
    3a1a:	fc 01       	movw	r30, r24
    3a1c:	80 81       	ld	r24, Z
    3a1e:	91 81       	ldd	r25, Z+1	; 0x01
    3a20:	9c 01       	movw	r18, r24
    3a22:	2c 5f       	subi	r18, 0xFC	; 252
    3a24:	3f 4f       	sbci	r19, 0xFF	; 255
    3a26:	8b 81       	ldd	r24, Y+3	; 0x03
    3a28:	9c 81       	ldd	r25, Y+4	; 0x04
    3a2a:	fc 01       	movw	r30, r24
    3a2c:	31 83       	std	Z+1, r19	; 0x01
    3a2e:	20 83       	st	Z, r18
				}		
    3a30:	26 96       	adiw	r28, 0x06	; 6
    3a32:	0f b6       	in	r0, 0x3f	; 63
    3a34:	f8 94       	cli
    3a36:	de bf       	out	0x3e, r29	; 62
    3a38:	0f be       	out	0x3f, r0	; 63
    3a3a:	cd bf       	out	0x3d, r28	; 61
    3a3c:	df 91       	pop	r29
    3a3e:	cf 91       	pop	r28
    3a40:	08 95       	ret

00003a42 <_ZN10helicopter8messages7Message6encodeERPhRh>:
				
				void encode (byte *&buffPtr, byte &val)
    3a42:	cf 93       	push	r28
    3a44:	df 93       	push	r29
    3a46:	00 d0       	rcall	.+0      	; 0x3a48 <_ZN10helicopter8messages7Message6encodeERPhRh+0x6>
    3a48:	00 d0       	rcall	.+0      	; 0x3a4a <_ZN10helicopter8messages7Message6encodeERPhRh+0x8>
    3a4a:	cd b7       	in	r28, 0x3d	; 61
    3a4c:	de b7       	in	r29, 0x3e	; 62
    3a4e:	9a 83       	std	Y+2, r25	; 0x02
    3a50:	89 83       	std	Y+1, r24	; 0x01
    3a52:	7c 83       	std	Y+4, r23	; 0x04
    3a54:	6b 83       	std	Y+3, r22	; 0x03
    3a56:	5e 83       	std	Y+6, r21	; 0x06
    3a58:	4d 83       	std	Y+5, r20	; 0x05
				{
					*buffPtr = val;
    3a5a:	8b 81       	ldd	r24, Y+3	; 0x03
    3a5c:	9c 81       	ldd	r25, Y+4	; 0x04
    3a5e:	fc 01       	movw	r30, r24
    3a60:	80 81       	ld	r24, Z
    3a62:	91 81       	ldd	r25, Z+1	; 0x01
    3a64:	2d 81       	ldd	r18, Y+5	; 0x05
    3a66:	3e 81       	ldd	r19, Y+6	; 0x06
    3a68:	f9 01       	movw	r30, r18
    3a6a:	20 81       	ld	r18, Z
    3a6c:	fc 01       	movw	r30, r24
    3a6e:	20 83       	st	Z, r18
					buffPtr += sizeof(val);
    3a70:	8b 81       	ldd	r24, Y+3	; 0x03
    3a72:	9c 81       	ldd	r25, Y+4	; 0x04
    3a74:	fc 01       	movw	r30, r24
    3a76:	80 81       	ld	r24, Z
    3a78:	91 81       	ldd	r25, Z+1	; 0x01
    3a7a:	9c 01       	movw	r18, r24
    3a7c:	2f 5f       	subi	r18, 0xFF	; 255
    3a7e:	3f 4f       	sbci	r19, 0xFF	; 255
    3a80:	8b 81       	ldd	r24, Y+3	; 0x03
    3a82:	9c 81       	ldd	r25, Y+4	; 0x04
    3a84:	fc 01       	movw	r30, r24
    3a86:	31 83       	std	Z+1, r19	; 0x01
    3a88:	20 83       	st	Z, r18
				}
    3a8a:	26 96       	adiw	r28, 0x06	; 6
    3a8c:	0f b6       	in	r0, 0x3f	; 63
    3a8e:	f8 94       	cli
    3a90:	de bf       	out	0x3e, r29	; 62
    3a92:	0f be       	out	0x3f, r0	; 63
    3a94:	cd bf       	out	0x3d, r28	; 61
    3a96:	df 91       	pop	r29
    3a98:	cf 91       	pop	r28
    3a9a:	08 95       	ret

00003a9c <_ZN10helicopter8messages7Message6decodeERPhRh>:
				
				/**
				 * Copies the the value at the buff pointer location into the given val parameter and
				 * increments the buffer by the sizeof(val)
				 */
				void decode (byte *&buffPtr, byte &val)
    3a9c:	cf 93       	push	r28
    3a9e:	df 93       	push	r29
    3aa0:	00 d0       	rcall	.+0      	; 0x3aa2 <_ZN10helicopter8messages7Message6decodeERPhRh+0x6>
    3aa2:	00 d0       	rcall	.+0      	; 0x3aa4 <_ZN10helicopter8messages7Message6decodeERPhRh+0x8>
    3aa4:	cd b7       	in	r28, 0x3d	; 61
    3aa6:	de b7       	in	r29, 0x3e	; 62
    3aa8:	9a 83       	std	Y+2, r25	; 0x02
    3aaa:	89 83       	std	Y+1, r24	; 0x01
    3aac:	7c 83       	std	Y+4, r23	; 0x04
    3aae:	6b 83       	std	Y+3, r22	; 0x03
    3ab0:	5e 83       	std	Y+6, r21	; 0x06
    3ab2:	4d 83       	std	Y+5, r20	; 0x05
				{
					val = *buffPtr;
    3ab4:	8b 81       	ldd	r24, Y+3	; 0x03
    3ab6:	9c 81       	ldd	r25, Y+4	; 0x04
    3ab8:	fc 01       	movw	r30, r24
    3aba:	80 81       	ld	r24, Z
    3abc:	91 81       	ldd	r25, Z+1	; 0x01
    3abe:	fc 01       	movw	r30, r24
    3ac0:	20 81       	ld	r18, Z
    3ac2:	8d 81       	ldd	r24, Y+5	; 0x05
    3ac4:	9e 81       	ldd	r25, Y+6	; 0x06
    3ac6:	fc 01       	movw	r30, r24
    3ac8:	20 83       	st	Z, r18
					buffPtr += sizeof(val);
    3aca:	8b 81       	ldd	r24, Y+3	; 0x03
    3acc:	9c 81       	ldd	r25, Y+4	; 0x04
    3ace:	fc 01       	movw	r30, r24
    3ad0:	80 81       	ld	r24, Z
    3ad2:	91 81       	ldd	r25, Z+1	; 0x01
    3ad4:	9c 01       	movw	r18, r24
    3ad6:	2f 5f       	subi	r18, 0xFF	; 255
    3ad8:	3f 4f       	sbci	r19, 0xFF	; 255
    3ada:	8b 81       	ldd	r24, Y+3	; 0x03
    3adc:	9c 81       	ldd	r25, Y+4	; 0x04
    3ade:	fc 01       	movw	r30, r24
    3ae0:	31 83       	std	Z+1, r19	; 0x01
    3ae2:	20 83       	st	Z, r18
				}
    3ae4:	26 96       	adiw	r28, 0x06	; 6
    3ae6:	0f b6       	in	r0, 0x3f	; 63
    3ae8:	f8 94       	cli
    3aea:	de bf       	out	0x3e, r29	; 62
    3aec:	0f be       	out	0x3f, r0	; 63
    3aee:	cd bf       	out	0x3d, r28	; 61
    3af0:	df 91       	pop	r29
    3af2:	cf 91       	pop	r28
    3af4:	08 95       	ret

00003af6 <_ZN10helicopter8messages7Message6decodeERPhRl>:
				
				void decode (byte *&buffPtr, long &val)
    3af6:	cf 93       	push	r28
    3af8:	df 93       	push	r29
    3afa:	00 d0       	rcall	.+0      	; 0x3afc <_ZN10helicopter8messages7Message6decodeERPhRl+0x6>
    3afc:	00 d0       	rcall	.+0      	; 0x3afe <_ZN10helicopter8messages7Message6decodeERPhRl+0x8>
    3afe:	cd b7       	in	r28, 0x3d	; 61
    3b00:	de b7       	in	r29, 0x3e	; 62
    3b02:	9a 83       	std	Y+2, r25	; 0x02
    3b04:	89 83       	std	Y+1, r24	; 0x01
    3b06:	7c 83       	std	Y+4, r23	; 0x04
    3b08:	6b 83       	std	Y+3, r22	; 0x03
    3b0a:	5e 83       	std	Y+6, r21	; 0x06
    3b0c:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(&val, buffPtr, sizeof(val));
    3b0e:	8b 81       	ldd	r24, Y+3	; 0x03
    3b10:	9c 81       	ldd	r25, Y+4	; 0x04
    3b12:	fc 01       	movw	r30, r24
    3b14:	20 81       	ld	r18, Z
    3b16:	31 81       	ldd	r19, Z+1	; 0x01
    3b18:	8d 81       	ldd	r24, Y+5	; 0x05
    3b1a:	9e 81       	ldd	r25, Y+6	; 0x06
    3b1c:	44 e0       	ldi	r20, 0x04	; 4
    3b1e:	50 e0       	ldi	r21, 0x00	; 0
    3b20:	b9 01       	movw	r22, r18
    3b22:	0e 94 f8 44 	call	0x89f0	; 0x89f0 <memcpy>
					buffPtr += sizeof(val);
    3b26:	8b 81       	ldd	r24, Y+3	; 0x03
    3b28:	9c 81       	ldd	r25, Y+4	; 0x04
    3b2a:	fc 01       	movw	r30, r24
    3b2c:	80 81       	ld	r24, Z
    3b2e:	91 81       	ldd	r25, Z+1	; 0x01
    3b30:	9c 01       	movw	r18, r24
    3b32:	2c 5f       	subi	r18, 0xFC	; 252
    3b34:	3f 4f       	sbci	r19, 0xFF	; 255
    3b36:	8b 81       	ldd	r24, Y+3	; 0x03
    3b38:	9c 81       	ldd	r25, Y+4	; 0x04
    3b3a:	fc 01       	movw	r30, r24
    3b3c:	31 83       	std	Z+1, r19	; 0x01
    3b3e:	20 83       	st	Z, r18
				}
    3b40:	26 96       	adiw	r28, 0x06	; 6
    3b42:	0f b6       	in	r0, 0x3f	; 63
    3b44:	f8 94       	cli
    3b46:	de bf       	out	0x3e, r29	; 62
    3b48:	0f be       	out	0x3f, r0	; 63
    3b4a:	cd bf       	out	0x3d, r28	; 61
    3b4c:	df 91       	pop	r29
    3b4e:	cf 91       	pop	r28
    3b50:	08 95       	ret

00003b52 <_ZN10helicopter8messages7Message6decodeERPhRm>:
				
				void decode (byte *&buffPtr, unsigned long &val)
    3b52:	cf 93       	push	r28
    3b54:	df 93       	push	r29
    3b56:	00 d0       	rcall	.+0      	; 0x3b58 <_ZN10helicopter8messages7Message6decodeERPhRm+0x6>
    3b58:	00 d0       	rcall	.+0      	; 0x3b5a <_ZN10helicopter8messages7Message6decodeERPhRm+0x8>
    3b5a:	cd b7       	in	r28, 0x3d	; 61
    3b5c:	de b7       	in	r29, 0x3e	; 62
    3b5e:	9a 83       	std	Y+2, r25	; 0x02
    3b60:	89 83       	std	Y+1, r24	; 0x01
    3b62:	7c 83       	std	Y+4, r23	; 0x04
    3b64:	6b 83       	std	Y+3, r22	; 0x03
    3b66:	5e 83       	std	Y+6, r21	; 0x06
    3b68:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(&val, buffPtr, sizeof(val));
    3b6a:	8b 81       	ldd	r24, Y+3	; 0x03
    3b6c:	9c 81       	ldd	r25, Y+4	; 0x04
    3b6e:	fc 01       	movw	r30, r24
    3b70:	20 81       	ld	r18, Z
    3b72:	31 81       	ldd	r19, Z+1	; 0x01
    3b74:	8d 81       	ldd	r24, Y+5	; 0x05
    3b76:	9e 81       	ldd	r25, Y+6	; 0x06
    3b78:	44 e0       	ldi	r20, 0x04	; 4
    3b7a:	50 e0       	ldi	r21, 0x00	; 0
    3b7c:	b9 01       	movw	r22, r18
    3b7e:	0e 94 f8 44 	call	0x89f0	; 0x89f0 <memcpy>
					buffPtr += sizeof(val);
    3b82:	8b 81       	ldd	r24, Y+3	; 0x03
    3b84:	9c 81       	ldd	r25, Y+4	; 0x04
    3b86:	fc 01       	movw	r30, r24
    3b88:	80 81       	ld	r24, Z
    3b8a:	91 81       	ldd	r25, Z+1	; 0x01
    3b8c:	9c 01       	movw	r18, r24
    3b8e:	2c 5f       	subi	r18, 0xFC	; 252
    3b90:	3f 4f       	sbci	r19, 0xFF	; 255
    3b92:	8b 81       	ldd	r24, Y+3	; 0x03
    3b94:	9c 81       	ldd	r25, Y+4	; 0x04
    3b96:	fc 01       	movw	r30, r24
    3b98:	31 83       	std	Z+1, r19	; 0x01
    3b9a:	20 83       	st	Z, r18
				}
    3b9c:	26 96       	adiw	r28, 0x06	; 6
    3b9e:	0f b6       	in	r0, 0x3f	; 63
    3ba0:	f8 94       	cli
    3ba2:	de bf       	out	0x3e, r29	; 62
    3ba4:	0f be       	out	0x3f, r0	; 63
    3ba6:	cd bf       	out	0x3d, r28	; 61
    3ba8:	df 91       	pop	r29
    3baa:	cf 91       	pop	r28
    3bac:	08 95       	ret

00003bae <_ZN10helicopter5model11SystemModel13MagYawDegreesEd>:
			 * Z axis is pointing up out of the FC
			 */
			

			double MagYawDegrees() const { return magYawDegrees; }
			void MagYawDegrees(double val) { magYawDegrees = val; }	
    3bae:	cf 93       	push	r28
    3bb0:	df 93       	push	r29
    3bb2:	00 d0       	rcall	.+0      	; 0x3bb4 <_ZN10helicopter5model11SystemModel13MagYawDegreesEd+0x6>
    3bb4:	00 d0       	rcall	.+0      	; 0x3bb6 <_ZN10helicopter5model11SystemModel13MagYawDegreesEd+0x8>
    3bb6:	cd b7       	in	r28, 0x3d	; 61
    3bb8:	de b7       	in	r29, 0x3e	; 62
    3bba:	9a 83       	std	Y+2, r25	; 0x02
    3bbc:	89 83       	std	Y+1, r24	; 0x01
    3bbe:	4b 83       	std	Y+3, r20	; 0x03
    3bc0:	5c 83       	std	Y+4, r21	; 0x04
    3bc2:	6d 83       	std	Y+5, r22	; 0x05
    3bc4:	7e 83       	std	Y+6, r23	; 0x06
    3bc6:	29 81       	ldd	r18, Y+1	; 0x01
    3bc8:	3a 81       	ldd	r19, Y+2	; 0x02
    3bca:	8b 81       	ldd	r24, Y+3	; 0x03
    3bcc:	9c 81       	ldd	r25, Y+4	; 0x04
    3bce:	ad 81       	ldd	r26, Y+5	; 0x05
    3bd0:	be 81       	ldd	r27, Y+6	; 0x06
    3bd2:	f9 01       	movw	r30, r18
    3bd4:	80 83       	st	Z, r24
    3bd6:	91 83       	std	Z+1, r25	; 0x01
    3bd8:	a2 83       	std	Z+2, r26	; 0x02
    3bda:	b3 83       	std	Z+3, r27	; 0x03
    3bdc:	26 96       	adiw	r28, 0x06	; 6
    3bde:	0f b6       	in	r0, 0x3f	; 63
    3be0:	f8 94       	cli
    3be2:	de bf       	out	0x3e, r29	; 62
    3be4:	0f be       	out	0x3f, r0	; 63
    3be6:	cd bf       	out	0x3d, r28	; 61
    3be8:	df 91       	pop	r29
    3bea:	cf 91       	pop	r28
    3bec:	08 95       	ret

00003bee <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEd>:
				
			double YawControlBeforeServoLimitsAdjustment() const {return yawControlBeforeServoLimitsAdjustment;}
			void YawControlBeforeServoLimitsAdjustment(double val) { yawControlBeforeServoLimitsAdjustment = val;}
				
			double YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
			void YawVelocityDegreesPerSecond(double val) { yawVelocityDegreesPerSecond = val;}
    3bee:	cf 93       	push	r28
    3bf0:	df 93       	push	r29
    3bf2:	00 d0       	rcall	.+0      	; 0x3bf4 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEd+0x6>
    3bf4:	00 d0       	rcall	.+0      	; 0x3bf6 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEd+0x8>
    3bf6:	cd b7       	in	r28, 0x3d	; 61
    3bf8:	de b7       	in	r29, 0x3e	; 62
    3bfa:	9a 83       	std	Y+2, r25	; 0x02
    3bfc:	89 83       	std	Y+1, r24	; 0x01
    3bfe:	4b 83       	std	Y+3, r20	; 0x03
    3c00:	5c 83       	std	Y+4, r21	; 0x04
    3c02:	6d 83       	std	Y+5, r22	; 0x05
    3c04:	7e 83       	std	Y+6, r23	; 0x06
    3c06:	29 81       	ldd	r18, Y+1	; 0x01
    3c08:	3a 81       	ldd	r19, Y+2	; 0x02
    3c0a:	8b 81       	ldd	r24, Y+3	; 0x03
    3c0c:	9c 81       	ldd	r25, Y+4	; 0x04
    3c0e:	ad 81       	ldd	r26, Y+5	; 0x05
    3c10:	be 81       	ldd	r27, Y+6	; 0x06
    3c12:	f9 01       	movw	r30, r18
    3c14:	80 8b       	std	Z+16, r24	; 0x10
    3c16:	91 8b       	std	Z+17, r25	; 0x11
    3c18:	a2 8b       	std	Z+18, r26	; 0x12
    3c1a:	b3 8b       	std	Z+19, r27	; 0x13
    3c1c:	26 96       	adiw	r28, 0x06	; 6
    3c1e:	0f b6       	in	r0, 0x3f	; 63
    3c20:	f8 94       	cli
    3c22:	de bf       	out	0x3e, r29	; 62
    3c24:	0f be       	out	0x3f, r0	; 63
    3c26:	cd bf       	out	0x3d, r28	; 61
    3c28:	df 91       	pop	r29
    3c2a:	cf 91       	pop	r28
    3c2c:	08 95       	ret

00003c2e <_ZNK10helicopter5model11SystemModel15YawProportionalEv>:
			void ReferenceYawVelocityDegreesPerSecond(double val) { referenceYawVelocityDegreesPerSecond = val;}
				
			double YawIntegral() const {return yawIntegral;}
			void YawIntegral(double val) { yawIntegral = val;}

			double YawProportional() const {return yawProportional;}
    3c2e:	cf 93       	push	r28
    3c30:	df 93       	push	r29
    3c32:	1f 92       	push	r1
    3c34:	1f 92       	push	r1
    3c36:	cd b7       	in	r28, 0x3d	; 61
    3c38:	de b7       	in	r29, 0x3e	; 62
    3c3a:	9a 83       	std	Y+2, r25	; 0x02
    3c3c:	89 83       	std	Y+1, r24	; 0x01
    3c3e:	89 81       	ldd	r24, Y+1	; 0x01
    3c40:	9a 81       	ldd	r25, Y+2	; 0x02
    3c42:	fc 01       	movw	r30, r24
    3c44:	84 8d       	ldd	r24, Z+28	; 0x1c
    3c46:	95 8d       	ldd	r25, Z+29	; 0x1d
    3c48:	a6 8d       	ldd	r26, Z+30	; 0x1e
    3c4a:	b7 8d       	ldd	r27, Z+31	; 0x1f
    3c4c:	bc 01       	movw	r22, r24
    3c4e:	cd 01       	movw	r24, r26
    3c50:	0f 90       	pop	r0
    3c52:	0f 90       	pop	r0
    3c54:	df 91       	pop	r29
    3c56:	cf 91       	pop	r28
    3c58:	08 95       	ret

00003c5a <_ZNK10helicopter5model11SystemModel18YawDerivativeErrorEv>:
			void YawProportional(double val) { yawProportional = val;}

			double YawDerivativeError() const {return yawDerivativeError;}
    3c5a:	cf 93       	push	r28
    3c5c:	df 93       	push	r29
    3c5e:	1f 92       	push	r1
    3c60:	1f 92       	push	r1
    3c62:	cd b7       	in	r28, 0x3d	; 61
    3c64:	de b7       	in	r29, 0x3e	; 62
    3c66:	9a 83       	std	Y+2, r25	; 0x02
    3c68:	89 83       	std	Y+1, r24	; 0x01
    3c6a:	89 81       	ldd	r24, Y+1	; 0x01
    3c6c:	9a 81       	ldd	r25, Y+2	; 0x02
    3c6e:	fc 01       	movw	r30, r24
    3c70:	80 a1       	ldd	r24, Z+32	; 0x20
    3c72:	91 a1       	ldd	r25, Z+33	; 0x21
    3c74:	a2 a1       	ldd	r26, Z+34	; 0x22
    3c76:	b3 a1       	ldd	r27, Z+35	; 0x23
    3c78:	bc 01       	movw	r22, r24
    3c7a:	cd 01       	movw	r24, r26
    3c7c:	0f 90       	pop	r0
    3c7e:	0f 90       	pop	r0
    3c80:	df 91       	pop	r29
    3c82:	cf 91       	pop	r28
    3c84:	08 95       	ret

00003c86 <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEd>:

			double LongitudeControl() const {return longitudeControl;}
			void LongitudeControl(double val) { longitudeControl = val;}
				
			double XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
			void XVelocityMetersPerSecond(double val) { xVelocityMetersPerSecond = val;}
    3c86:	cf 93       	push	r28
    3c88:	df 93       	push	r29
    3c8a:	00 d0       	rcall	.+0      	; 0x3c8c <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEd+0x6>
    3c8c:	00 d0       	rcall	.+0      	; 0x3c8e <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEd+0x8>
    3c8e:	cd b7       	in	r28, 0x3d	; 61
    3c90:	de b7       	in	r29, 0x3e	; 62
    3c92:	9a 83       	std	Y+2, r25	; 0x02
    3c94:	89 83       	std	Y+1, r24	; 0x01
    3c96:	4b 83       	std	Y+3, r20	; 0x03
    3c98:	5c 83       	std	Y+4, r21	; 0x04
    3c9a:	6d 83       	std	Y+5, r22	; 0x05
    3c9c:	7e 83       	std	Y+6, r23	; 0x06
    3c9e:	29 81       	ldd	r18, Y+1	; 0x01
    3ca0:	3a 81       	ldd	r19, Y+2	; 0x02
    3ca2:	8b 81       	ldd	r24, Y+3	; 0x03
    3ca4:	9c 81       	ldd	r25, Y+4	; 0x04
    3ca6:	ad 81       	ldd	r26, Y+5	; 0x05
    3ca8:	be 81       	ldd	r27, Y+6	; 0x06
    3caa:	f9 01       	movw	r30, r18
    3cac:	84 ab       	std	Z+52, r24	; 0x34
    3cae:	95 ab       	std	Z+53, r25	; 0x35
    3cb0:	a6 ab       	std	Z+54, r26	; 0x36
    3cb2:	b7 ab       	std	Z+55, r27	; 0x37
    3cb4:	26 96       	adiw	r28, 0x06	; 6
    3cb6:	0f b6       	in	r0, 0x3f	; 63
    3cb8:	f8 94       	cli
    3cba:	de bf       	out	0x3e, r29	; 62
    3cbc:	0f be       	out	0x3f, r0	; 63
    3cbe:	cd bf       	out	0x3d, r28	; 61
    3cc0:	df 91       	pop	r29
    3cc2:	cf 91       	pop	r28
    3cc4:	08 95       	ret

00003cc6 <_ZNK10helicopter5model11SystemModel13XProportionalEv>:
			void ReferenceXVelocityMetersPerSecond(double val) { referenceXVelocityMetersPerSecond = val;}
				
			double XLongitudinalOuterLoopControl() const {return xLongitudinalOuterLoopControl;}
			void XLongitudinalOuterLoopControl(double val) { xLongitudinalOuterLoopControl = val;}
				
			double XProportional() const {return xProportional;}
    3cc6:	cf 93       	push	r28
    3cc8:	df 93       	push	r29
    3cca:	1f 92       	push	r1
    3ccc:	1f 92       	push	r1
    3cce:	cd b7       	in	r28, 0x3d	; 61
    3cd0:	de b7       	in	r29, 0x3e	; 62
    3cd2:	9a 83       	std	Y+2, r25	; 0x02
    3cd4:	89 83       	std	Y+1, r24	; 0x01
    3cd6:	89 81       	ldd	r24, Y+1	; 0x01
    3cd8:	9a 81       	ldd	r25, Y+2	; 0x02
    3cda:	80 5c       	subi	r24, 0xC0	; 192
    3cdc:	9f 4f       	sbci	r25, 0xFF	; 255
    3cde:	fc 01       	movw	r30, r24
    3ce0:	80 81       	ld	r24, Z
    3ce2:	91 81       	ldd	r25, Z+1	; 0x01
    3ce4:	a2 81       	ldd	r26, Z+2	; 0x02
    3ce6:	b3 81       	ldd	r27, Z+3	; 0x03
    3ce8:	bc 01       	movw	r22, r24
    3cea:	cd 01       	movw	r24, r26
    3cec:	0f 90       	pop	r0
    3cee:	0f 90       	pop	r0
    3cf0:	df 91       	pop	r29
    3cf2:	cf 91       	pop	r28
    3cf4:	08 95       	ret

00003cf6 <_ZNK10helicopter5model11SystemModel16XDerivativeErrorEv>:
			void XProportional(double val) { xProportional = val;}
				
			double XIntegral() const {return xIntegral;}
			void XIntegral(double val) { xIntegral = val;}
				
			double XDerivativeError() const {return xDerivativeError;}
    3cf6:	cf 93       	push	r28
    3cf8:	df 93       	push	r29
    3cfa:	1f 92       	push	r1
    3cfc:	1f 92       	push	r1
    3cfe:	cd b7       	in	r28, 0x3d	; 61
    3d00:	de b7       	in	r29, 0x3e	; 62
    3d02:	9a 83       	std	Y+2, r25	; 0x02
    3d04:	89 83       	std	Y+1, r24	; 0x01
    3d06:	89 81       	ldd	r24, Y+1	; 0x01
    3d08:	9a 81       	ldd	r25, Y+2	; 0x02
    3d0a:	88 5b       	subi	r24, 0xB8	; 184
    3d0c:	9f 4f       	sbci	r25, 0xFF	; 255
    3d0e:	fc 01       	movw	r30, r24
    3d10:	80 81       	ld	r24, Z
    3d12:	91 81       	ldd	r25, Z+1	; 0x01
    3d14:	a2 81       	ldd	r26, Z+2	; 0x02
    3d16:	b3 81       	ldd	r27, Z+3	; 0x03
    3d18:	bc 01       	movw	r22, r24
    3d1a:	cd 01       	movw	r24, r26
    3d1c:	0f 90       	pop	r0
    3d1e:	0f 90       	pop	r0
    3d20:	df 91       	pop	r29
    3d22:	cf 91       	pop	r28
    3d24:	08 95       	ret

00003d26 <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEd>:
			void XDerivativeError(double val) { xDerivativeError = val;}
				
		
			double ThetaPitchDegrees() const {return thetaPitchDegrees;}
			void ThetaPitchDegrees(double val) {thetaPitchDegrees = val;}
    3d26:	cf 93       	push	r28
    3d28:	df 93       	push	r29
    3d2a:	00 d0       	rcall	.+0      	; 0x3d2c <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEd+0x6>
    3d2c:	00 d0       	rcall	.+0      	; 0x3d2e <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEd+0x8>
    3d2e:	cd b7       	in	r28, 0x3d	; 61
    3d30:	de b7       	in	r29, 0x3e	; 62
    3d32:	9a 83       	std	Y+2, r25	; 0x02
    3d34:	89 83       	std	Y+1, r24	; 0x01
    3d36:	4b 83       	std	Y+3, r20	; 0x03
    3d38:	5c 83       	std	Y+4, r21	; 0x04
    3d3a:	6d 83       	std	Y+5, r22	; 0x05
    3d3c:	7e 83       	std	Y+6, r23	; 0x06
    3d3e:	89 81       	ldd	r24, Y+1	; 0x01
    3d40:	9a 81       	ldd	r25, Y+2	; 0x02
    3d42:	9c 01       	movw	r18, r24
    3d44:	24 5b       	subi	r18, 0xB4	; 180
    3d46:	3f 4f       	sbci	r19, 0xFF	; 255
    3d48:	8b 81       	ldd	r24, Y+3	; 0x03
    3d4a:	9c 81       	ldd	r25, Y+4	; 0x04
    3d4c:	ad 81       	ldd	r26, Y+5	; 0x05
    3d4e:	be 81       	ldd	r27, Y+6	; 0x06
    3d50:	f9 01       	movw	r30, r18
    3d52:	80 83       	st	Z, r24
    3d54:	91 83       	std	Z+1, r25	; 0x01
    3d56:	a2 83       	std	Z+2, r26	; 0x02
    3d58:	b3 83       	std	Z+3, r27	; 0x03
    3d5a:	26 96       	adiw	r28, 0x06	; 6
    3d5c:	0f b6       	in	r0, 0x3f	; 63
    3d5e:	f8 94       	cli
    3d60:	de bf       	out	0x3e, r29	; 62
    3d62:	0f be       	out	0x3f, r0	; 63
    3d64:	cd bf       	out	0x3d, r28	; 61
    3d66:	df 91       	pop	r29
    3d68:	cf 91       	pop	r28
    3d6a:	08 95       	ret

00003d6c <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEd>:

			double LateralControl() const {return lateralControl;}
			void LateralControl(double val) { lateralControl = val;}

			double YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
			void YVelocityMetersPerSecond(double val) { yVelocityMetersPerSecond = val;}
    3d6c:	cf 93       	push	r28
    3d6e:	df 93       	push	r29
    3d70:	00 d0       	rcall	.+0      	; 0x3d72 <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEd+0x6>
    3d72:	00 d0       	rcall	.+0      	; 0x3d74 <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEd+0x8>
    3d74:	cd b7       	in	r28, 0x3d	; 61
    3d76:	de b7       	in	r29, 0x3e	; 62
    3d78:	9a 83       	std	Y+2, r25	; 0x02
    3d7a:	89 83       	std	Y+1, r24	; 0x01
    3d7c:	4b 83       	std	Y+3, r20	; 0x03
    3d7e:	5c 83       	std	Y+4, r21	; 0x04
    3d80:	6d 83       	std	Y+5, r22	; 0x05
    3d82:	7e 83       	std	Y+6, r23	; 0x06
    3d84:	89 81       	ldd	r24, Y+1	; 0x01
    3d86:	9a 81       	ldd	r25, Y+2	; 0x02
    3d88:	9c 01       	movw	r18, r24
    3d8a:	20 5a       	subi	r18, 0xA0	; 160
    3d8c:	3f 4f       	sbci	r19, 0xFF	; 255
    3d8e:	8b 81       	ldd	r24, Y+3	; 0x03
    3d90:	9c 81       	ldd	r25, Y+4	; 0x04
    3d92:	ad 81       	ldd	r26, Y+5	; 0x05
    3d94:	be 81       	ldd	r27, Y+6	; 0x06
    3d96:	f9 01       	movw	r30, r18
    3d98:	80 83       	st	Z, r24
    3d9a:	91 83       	std	Z+1, r25	; 0x01
    3d9c:	a2 83       	std	Z+2, r26	; 0x02
    3d9e:	b3 83       	std	Z+3, r27	; 0x03
    3da0:	26 96       	adiw	r28, 0x06	; 6
    3da2:	0f b6       	in	r0, 0x3f	; 63
    3da4:	f8 94       	cli
    3da6:	de bf       	out	0x3e, r29	; 62
    3da8:	0f be       	out	0x3f, r0	; 63
    3daa:	cd bf       	out	0x3d, r28	; 61
    3dac:	df 91       	pop	r29
    3dae:	cf 91       	pop	r28
    3db0:	08 95       	ret

00003db2 <_ZNK10helicopter5model11SystemModel13YProportionalEv>:
			void ReferenceYVelocityMetersPerSecond(double val) { referenceYVelocityMetersPerSecond = val;}

			double YLateralOuterLoopControl() const {return yLateralOuterLoopControl;}
			void YLateralOuterLoopControl(double val) { yLateralOuterLoopControl = val;}

			double YProportional() const {return yProportional;}
    3db2:	cf 93       	push	r28
    3db4:	df 93       	push	r29
    3db6:	1f 92       	push	r1
    3db8:	1f 92       	push	r1
    3dba:	cd b7       	in	r28, 0x3d	; 61
    3dbc:	de b7       	in	r29, 0x3e	; 62
    3dbe:	9a 83       	std	Y+2, r25	; 0x02
    3dc0:	89 83       	std	Y+1, r24	; 0x01
    3dc2:	89 81       	ldd	r24, Y+1	; 0x01
    3dc4:	9a 81       	ldd	r25, Y+2	; 0x02
    3dc6:	84 59       	subi	r24, 0x94	; 148
    3dc8:	9f 4f       	sbci	r25, 0xFF	; 255
    3dca:	fc 01       	movw	r30, r24
    3dcc:	80 81       	ld	r24, Z
    3dce:	91 81       	ldd	r25, Z+1	; 0x01
    3dd0:	a2 81       	ldd	r26, Z+2	; 0x02
    3dd2:	b3 81       	ldd	r27, Z+3	; 0x03
    3dd4:	bc 01       	movw	r22, r24
    3dd6:	cd 01       	movw	r24, r26
    3dd8:	0f 90       	pop	r0
    3dda:	0f 90       	pop	r0
    3ddc:	df 91       	pop	r29
    3dde:	cf 91       	pop	r28
    3de0:	08 95       	ret

00003de2 <_ZNK10helicopter5model11SystemModel16YDerivativeErrorEv>:
			void YProportional(double val) { yProportional = val;}

			double YIntegral() const {return yIntegral;}
			void YIntegral(double val) { yIntegral = val;}

			double YDerivativeError() const {return yDerivativeError;}
    3de2:	cf 93       	push	r28
    3de4:	df 93       	push	r29
    3de6:	1f 92       	push	r1
    3de8:	1f 92       	push	r1
    3dea:	cd b7       	in	r28, 0x3d	; 61
    3dec:	de b7       	in	r29, 0x3e	; 62
    3dee:	9a 83       	std	Y+2, r25	; 0x02
    3df0:	89 83       	std	Y+1, r24	; 0x01
    3df2:	89 81       	ldd	r24, Y+1	; 0x01
    3df4:	9a 81       	ldd	r25, Y+2	; 0x02
    3df6:	8c 58       	subi	r24, 0x8C	; 140
    3df8:	9f 4f       	sbci	r25, 0xFF	; 255
    3dfa:	fc 01       	movw	r30, r24
    3dfc:	80 81       	ld	r24, Z
    3dfe:	91 81       	ldd	r25, Z+1	; 0x01
    3e00:	a2 81       	ldd	r26, Z+2	; 0x02
    3e02:	b3 81       	ldd	r27, Z+3	; 0x03
    3e04:	bc 01       	movw	r22, r24
    3e06:	cd 01       	movw	r24, r26
    3e08:	0f 90       	pop	r0
    3e0a:	0f 90       	pop	r0
    3e0c:	df 91       	pop	r29
    3e0e:	cf 91       	pop	r28
    3e10:	08 95       	ret

00003e12 <_ZN10helicopter5model11SystemModel14PhiRollDegreesEd>:
			void YDerivativeError(double val) { yDerivativeError = val;}


			double PhiRollDegrees() const {return phiRollDegrees;}
			void PhiRollDegrees(double val) {phiRollDegrees = val;}
    3e12:	cf 93       	push	r28
    3e14:	df 93       	push	r29
    3e16:	00 d0       	rcall	.+0      	; 0x3e18 <_ZN10helicopter5model11SystemModel14PhiRollDegreesEd+0x6>
    3e18:	00 d0       	rcall	.+0      	; 0x3e1a <_ZN10helicopter5model11SystemModel14PhiRollDegreesEd+0x8>
    3e1a:	cd b7       	in	r28, 0x3d	; 61
    3e1c:	de b7       	in	r29, 0x3e	; 62
    3e1e:	9a 83       	std	Y+2, r25	; 0x02
    3e20:	89 83       	std	Y+1, r24	; 0x01
    3e22:	4b 83       	std	Y+3, r20	; 0x03
    3e24:	5c 83       	std	Y+4, r21	; 0x04
    3e26:	6d 83       	std	Y+5, r22	; 0x05
    3e28:	7e 83       	std	Y+6, r23	; 0x06
    3e2a:	89 81       	ldd	r24, Y+1	; 0x01
    3e2c:	9a 81       	ldd	r25, Y+2	; 0x02
    3e2e:	9c 01       	movw	r18, r24
    3e30:	28 58       	subi	r18, 0x88	; 136
    3e32:	3f 4f       	sbci	r19, 0xFF	; 255
    3e34:	8b 81       	ldd	r24, Y+3	; 0x03
    3e36:	9c 81       	ldd	r25, Y+4	; 0x04
    3e38:	ad 81       	ldd	r26, Y+5	; 0x05
    3e3a:	be 81       	ldd	r27, Y+6	; 0x06
    3e3c:	f9 01       	movw	r30, r18
    3e3e:	80 83       	st	Z, r24
    3e40:	91 83       	std	Z+1, r25	; 0x01
    3e42:	a2 83       	std	Z+2, r26	; 0x02
    3e44:	b3 83       	std	Z+3, r27	; 0x03
    3e46:	26 96       	adiw	r28, 0x06	; 6
    3e48:	0f b6       	in	r0, 0x3f	; 63
    3e4a:	f8 94       	cli
    3e4c:	de bf       	out	0x3e, r29	; 62
    3e4e:	0f be       	out	0x3f, r0	; 63
    3e50:	cd bf       	out	0x3d, r28	; 61
    3e52:	df 91       	pop	r29
    3e54:	cf 91       	pop	r28
    3e56:	08 95       	ret

00003e58 <_ZN10helicopter5model11SystemModel12AltitudeFeetEd>:
						
						
						

			double AltitudeFeet() const { return altitudeFeet; }
			void AltitudeFeet(double val) { altitudeFeet = val; }
    3e58:	cf 93       	push	r28
    3e5a:	df 93       	push	r29
    3e5c:	00 d0       	rcall	.+0      	; 0x3e5e <_ZN10helicopter5model11SystemModel12AltitudeFeetEd+0x6>
    3e5e:	00 d0       	rcall	.+0      	; 0x3e60 <_ZN10helicopter5model11SystemModel12AltitudeFeetEd+0x8>
    3e60:	cd b7       	in	r28, 0x3d	; 61
    3e62:	de b7       	in	r29, 0x3e	; 62
    3e64:	9a 83       	std	Y+2, r25	; 0x02
    3e66:	89 83       	std	Y+1, r24	; 0x01
    3e68:	4b 83       	std	Y+3, r20	; 0x03
    3e6a:	5c 83       	std	Y+4, r21	; 0x04
    3e6c:	6d 83       	std	Y+5, r22	; 0x05
    3e6e:	7e 83       	std	Y+6, r23	; 0x06
    3e70:	89 81       	ldd	r24, Y+1	; 0x01
    3e72:	9a 81       	ldd	r25, Y+2	; 0x02
    3e74:	9c 01       	movw	r18, r24
    3e76:	24 58       	subi	r18, 0x84	; 132
    3e78:	3f 4f       	sbci	r19, 0xFF	; 255
    3e7a:	8b 81       	ldd	r24, Y+3	; 0x03
    3e7c:	9c 81       	ldd	r25, Y+4	; 0x04
    3e7e:	ad 81       	ldd	r26, Y+5	; 0x05
    3e80:	be 81       	ldd	r27, Y+6	; 0x06
    3e82:	f9 01       	movw	r30, r18
    3e84:	80 83       	st	Z, r24
    3e86:	91 83       	std	Z+1, r25	; 0x01
    3e88:	a2 83       	std	Z+2, r26	; 0x02
    3e8a:	b3 83       	std	Z+3, r27	; 0x03
    3e8c:	26 96       	adiw	r28, 0x06	; 6
    3e8e:	0f b6       	in	r0, 0x3f	; 63
    3e90:	f8 94       	cli
    3e92:	de bf       	out	0x3e, r29	; 62
    3e94:	0f be       	out	0x3f, r0	; 63
    3e96:	cd bf       	out	0x3d, r28	; 61
    3e98:	df 91       	pop	r29
    3e9a:	cf 91       	pop	r28
    3e9c:	08 95       	ret

00003e9e <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEd>:

			double MainRotorControlBeforeServoLimitsAdjustment() const {return mainRotorControlBeforeServoLimitsAdjustment;}
			void MainRotorControlBeforeServoLimitsAdjustment(double val) { mainRotorControlBeforeServoLimitsAdjustment = val;}

			double ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
			void ZVelocityFeetPerSecond(double val) { zVelocityFeetPerSecond = val;}
    3e9e:	cf 93       	push	r28
    3ea0:	df 93       	push	r29
    3ea2:	00 d0       	rcall	.+0      	; 0x3ea4 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEd+0x6>
    3ea4:	00 d0       	rcall	.+0      	; 0x3ea6 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEd+0x8>
    3ea6:	cd b7       	in	r28, 0x3d	; 61
    3ea8:	de b7       	in	r29, 0x3e	; 62
    3eaa:	9a 83       	std	Y+2, r25	; 0x02
    3eac:	89 83       	std	Y+1, r24	; 0x01
    3eae:	4b 83       	std	Y+3, r20	; 0x03
    3eb0:	5c 83       	std	Y+4, r21	; 0x04
    3eb2:	6d 83       	std	Y+5, r22	; 0x05
    3eb4:	7e 83       	std	Y+6, r23	; 0x06
    3eb6:	89 81       	ldd	r24, Y+1	; 0x01
    3eb8:	9a 81       	ldd	r25, Y+2	; 0x02
    3eba:	9c 01       	movw	r18, r24
    3ebc:	20 57       	subi	r18, 0x70	; 112
    3ebe:	3f 4f       	sbci	r19, 0xFF	; 255
    3ec0:	8b 81       	ldd	r24, Y+3	; 0x03
    3ec2:	9c 81       	ldd	r25, Y+4	; 0x04
    3ec4:	ad 81       	ldd	r26, Y+5	; 0x05
    3ec6:	be 81       	ldd	r27, Y+6	; 0x06
    3ec8:	f9 01       	movw	r30, r18
    3eca:	80 83       	st	Z, r24
    3ecc:	91 83       	std	Z+1, r25	; 0x01
    3ece:	a2 83       	std	Z+2, r26	; 0x02
    3ed0:	b3 83       	std	Z+3, r27	; 0x03
    3ed2:	26 96       	adiw	r28, 0x06	; 6
    3ed4:	0f b6       	in	r0, 0x3f	; 63
    3ed6:	f8 94       	cli
    3ed8:	de bf       	out	0x3e, r29	; 62
    3eda:	0f be       	out	0x3f, r0	; 63
    3edc:	cd bf       	out	0x3d, r28	; 61
    3ede:	df 91       	pop	r29
    3ee0:	cf 91       	pop	r28
    3ee2:	08 95       	ret

00003ee4 <_ZNK10helicopter5model11SystemModel13ZProportionalEv>:
			void ReferenceZVelocityFeetPerSecond(double val) { referenceZVelocityFeetPerSecond = val;}

			double ZIntegral() const {return zIntegral;}
			void ZIntegral(double val) { zIntegral = val;}

			double ZProportional() const {return zProportional;}
    3ee4:	cf 93       	push	r28
    3ee6:	df 93       	push	r29
    3ee8:	1f 92       	push	r1
    3eea:	1f 92       	push	r1
    3eec:	cd b7       	in	r28, 0x3d	; 61
    3eee:	de b7       	in	r29, 0x3e	; 62
    3ef0:	9a 83       	std	Y+2, r25	; 0x02
    3ef2:	89 83       	std	Y+1, r24	; 0x01
    3ef4:	89 81       	ldd	r24, Y+1	; 0x01
    3ef6:	9a 81       	ldd	r25, Y+2	; 0x02
    3ef8:	84 56       	subi	r24, 0x64	; 100
    3efa:	9f 4f       	sbci	r25, 0xFF	; 255
    3efc:	fc 01       	movw	r30, r24
    3efe:	80 81       	ld	r24, Z
    3f00:	91 81       	ldd	r25, Z+1	; 0x01
    3f02:	a2 81       	ldd	r26, Z+2	; 0x02
    3f04:	b3 81       	ldd	r27, Z+3	; 0x03
    3f06:	bc 01       	movw	r22, r24
    3f08:	cd 01       	movw	r24, r26
    3f0a:	0f 90       	pop	r0
    3f0c:	0f 90       	pop	r0
    3f0e:	df 91       	pop	r29
    3f10:	cf 91       	pop	r28
    3f12:	08 95       	ret

00003f14 <_ZNK10helicopter5model11SystemModel16ZDerivativeErrorEv>:
			void ZProportional(double val) { zProportional = val;}

			double ZDerivativeError() const {return zDerivativeError;}
    3f14:	cf 93       	push	r28
    3f16:	df 93       	push	r29
    3f18:	1f 92       	push	r1
    3f1a:	1f 92       	push	r1
    3f1c:	cd b7       	in	r28, 0x3d	; 61
    3f1e:	de b7       	in	r29, 0x3e	; 62
    3f20:	9a 83       	std	Y+2, r25	; 0x02
    3f22:	89 83       	std	Y+1, r24	; 0x01
    3f24:	89 81       	ldd	r24, Y+1	; 0x01
    3f26:	9a 81       	ldd	r25, Y+2	; 0x02
    3f28:	80 56       	subi	r24, 0x60	; 96
    3f2a:	9f 4f       	sbci	r25, 0xFF	; 255
    3f2c:	fc 01       	movw	r30, r24
    3f2e:	80 81       	ld	r24, Z
    3f30:	91 81       	ldd	r25, Z+1	; 0x01
    3f32:	a2 81       	ldd	r26, Z+2	; 0x02
    3f34:	b3 81       	ldd	r27, Z+3	; 0x03
    3f36:	bc 01       	movw	r22, r24
    3f38:	cd 01       	movw	r24, r26
    3f3a:	0f 90       	pop	r0
    3f3c:	0f 90       	pop	r0
    3f3e:	df 91       	pop	r29
    3f40:	cf 91       	pop	r28
    3f42:	08 95       	ret

00003f44 <_ZN10helicopter5model11SystemModel15LatitudeDegreesEd>:
			void ZDerivativeError(double val) { zDerivativeError = val;}						
						
						
			double LatitudeDegrees() const {return latitudeDegrees;}
			void LatitudeDegrees(double val) { latitudeDegrees = val;}						
    3f44:	cf 93       	push	r28
    3f46:	df 93       	push	r29
    3f48:	00 d0       	rcall	.+0      	; 0x3f4a <_ZN10helicopter5model11SystemModel15LatitudeDegreesEd+0x6>
    3f4a:	00 d0       	rcall	.+0      	; 0x3f4c <_ZN10helicopter5model11SystemModel15LatitudeDegreesEd+0x8>
    3f4c:	cd b7       	in	r28, 0x3d	; 61
    3f4e:	de b7       	in	r29, 0x3e	; 62
    3f50:	9a 83       	std	Y+2, r25	; 0x02
    3f52:	89 83       	std	Y+1, r24	; 0x01
    3f54:	4b 83       	std	Y+3, r20	; 0x03
    3f56:	5c 83       	std	Y+4, r21	; 0x04
    3f58:	6d 83       	std	Y+5, r22	; 0x05
    3f5a:	7e 83       	std	Y+6, r23	; 0x06
    3f5c:	89 81       	ldd	r24, Y+1	; 0x01
    3f5e:	9a 81       	ldd	r25, Y+2	; 0x02
    3f60:	9c 01       	movw	r18, r24
    3f62:	2c 55       	subi	r18, 0x5C	; 92
    3f64:	3f 4f       	sbci	r19, 0xFF	; 255
    3f66:	8b 81       	ldd	r24, Y+3	; 0x03
    3f68:	9c 81       	ldd	r25, Y+4	; 0x04
    3f6a:	ad 81       	ldd	r26, Y+5	; 0x05
    3f6c:	be 81       	ldd	r27, Y+6	; 0x06
    3f6e:	f9 01       	movw	r30, r18
    3f70:	80 83       	st	Z, r24
    3f72:	91 83       	std	Z+1, r25	; 0x01
    3f74:	a2 83       	std	Z+2, r26	; 0x02
    3f76:	b3 83       	std	Z+3, r27	; 0x03
    3f78:	26 96       	adiw	r28, 0x06	; 6
    3f7a:	0f b6       	in	r0, 0x3f	; 63
    3f7c:	f8 94       	cli
    3f7e:	de bf       	out	0x3e, r29	; 62
    3f80:	0f be       	out	0x3f, r0	; 63
    3f82:	cd bf       	out	0x3d, r28	; 61
    3f84:	df 91       	pop	r29
    3f86:	cf 91       	pop	r28
    3f88:	08 95       	ret

00003f8a <_ZN10helicopter5model11SystemModel16LongitudeDegreesEd>:

			double LongitudeDegrees() const {return longitudeDegrees;}
			void LongitudeDegrees(double val) { longitudeDegrees = val;}						
    3f8a:	cf 93       	push	r28
    3f8c:	df 93       	push	r29
    3f8e:	00 d0       	rcall	.+0      	; 0x3f90 <_ZN10helicopter5model11SystemModel16LongitudeDegreesEd+0x6>
    3f90:	00 d0       	rcall	.+0      	; 0x3f92 <_ZN10helicopter5model11SystemModel16LongitudeDegreesEd+0x8>
    3f92:	cd b7       	in	r28, 0x3d	; 61
    3f94:	de b7       	in	r29, 0x3e	; 62
    3f96:	9a 83       	std	Y+2, r25	; 0x02
    3f98:	89 83       	std	Y+1, r24	; 0x01
    3f9a:	4b 83       	std	Y+3, r20	; 0x03
    3f9c:	5c 83       	std	Y+4, r21	; 0x04
    3f9e:	6d 83       	std	Y+5, r22	; 0x05
    3fa0:	7e 83       	std	Y+6, r23	; 0x06
    3fa2:	89 81       	ldd	r24, Y+1	; 0x01
    3fa4:	9a 81       	ldd	r25, Y+2	; 0x02
    3fa6:	9c 01       	movw	r18, r24
    3fa8:	28 55       	subi	r18, 0x58	; 88
    3faa:	3f 4f       	sbci	r19, 0xFF	; 255
    3fac:	8b 81       	ldd	r24, Y+3	; 0x03
    3fae:	9c 81       	ldd	r25, Y+4	; 0x04
    3fb0:	ad 81       	ldd	r26, Y+5	; 0x05
    3fb2:	be 81       	ldd	r27, Y+6	; 0x06
    3fb4:	f9 01       	movw	r30, r18
    3fb6:	80 83       	st	Z, r24
    3fb8:	91 83       	std	Z+1, r25	; 0x01
    3fba:	a2 83       	std	Z+2, r26	; 0x02
    3fbc:	b3 83       	std	Z+3, r27	; 0x03
    3fbe:	26 96       	adiw	r28, 0x06	; 6
    3fc0:	0f b6       	in	r0, 0x3f	; 63
    3fc2:	f8 94       	cli
    3fc4:	de bf       	out	0x3e, r29	; 62
    3fc6:	0f be       	out	0x3f, r0	; 63
    3fc8:	cd bf       	out	0x3d, r28	; 61
    3fca:	df 91       	pop	r29
    3fcc:	cf 91       	pop	r28
    3fce:	08 95       	ret

00003fd0 <_ZNK10helicopter5model11SystemModel8TimeoutsEv>:
						
						
			long Timeouts() const {return timeouts; }
    3fd0:	cf 93       	push	r28
    3fd2:	df 93       	push	r29
    3fd4:	1f 92       	push	r1
    3fd6:	1f 92       	push	r1
    3fd8:	cd b7       	in	r28, 0x3d	; 61
    3fda:	de b7       	in	r29, 0x3e	; 62
    3fdc:	9a 83       	std	Y+2, r25	; 0x02
    3fde:	89 83       	std	Y+1, r24	; 0x01
    3fe0:	89 81       	ldd	r24, Y+1	; 0x01
    3fe2:	9a 81       	ldd	r25, Y+2	; 0x02
    3fe4:	84 55       	subi	r24, 0x54	; 84
    3fe6:	9f 4f       	sbci	r25, 0xFF	; 255
    3fe8:	fc 01       	movw	r30, r24
    3fea:	80 81       	ld	r24, Z
    3fec:	91 81       	ldd	r25, Z+1	; 0x01
    3fee:	a2 81       	ldd	r26, Z+2	; 0x02
    3ff0:	b3 81       	ldd	r27, Z+3	; 0x03
    3ff2:	bc 01       	movw	r22, r24
    3ff4:	cd 01       	movw	r24, r26
    3ff6:	0f 90       	pop	r0
    3ff8:	0f 90       	pop	r0
    3ffa:	df 91       	pop	r29
    3ffc:	cf 91       	pop	r28
    3ffe:	08 95       	ret

00004000 <_ZN10helicopter5model11SystemModel8TimeoutsEl>:
			void Timeouts(long val) { timeouts = val; }
    4000:	cf 93       	push	r28
    4002:	df 93       	push	r29
    4004:	00 d0       	rcall	.+0      	; 0x4006 <_ZN10helicopter5model11SystemModel8TimeoutsEl+0x6>
    4006:	00 d0       	rcall	.+0      	; 0x4008 <_ZN10helicopter5model11SystemModel8TimeoutsEl+0x8>
    4008:	cd b7       	in	r28, 0x3d	; 61
    400a:	de b7       	in	r29, 0x3e	; 62
    400c:	9a 83       	std	Y+2, r25	; 0x02
    400e:	89 83       	std	Y+1, r24	; 0x01
    4010:	4b 83       	std	Y+3, r20	; 0x03
    4012:	5c 83       	std	Y+4, r21	; 0x04
    4014:	6d 83       	std	Y+5, r22	; 0x05
    4016:	7e 83       	std	Y+6, r23	; 0x06
    4018:	89 81       	ldd	r24, Y+1	; 0x01
    401a:	9a 81       	ldd	r25, Y+2	; 0x02
    401c:	9c 01       	movw	r18, r24
    401e:	24 55       	subi	r18, 0x54	; 84
    4020:	3f 4f       	sbci	r19, 0xFF	; 255
    4022:	8b 81       	ldd	r24, Y+3	; 0x03
    4024:	9c 81       	ldd	r25, Y+4	; 0x04
    4026:	ad 81       	ldd	r26, Y+5	; 0x05
    4028:	be 81       	ldd	r27, Y+6	; 0x06
    402a:	f9 01       	movw	r30, r18
    402c:	80 83       	st	Z, r24
    402e:	91 83       	std	Z+1, r25	; 0x01
    4030:	a2 83       	std	Z+2, r26	; 0x02
    4032:	b3 83       	std	Z+3, r27	; 0x03
    4034:	26 96       	adiw	r28, 0x06	; 6
    4036:	0f b6       	in	r0, 0x3f	; 63
    4038:	f8 94       	cli
    403a:	de bf       	out	0x3e, r29	; 62
    403c:	0f be       	out	0x3f, r0	; 63
    403e:	cd bf       	out	0x3d, r28	; 61
    4040:	df 91       	pop	r29
    4042:	cf 91       	pop	r28
    4044:	08 95       	ret

00004046 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>:
			
			long UnrecognizedMsgTypes() const {return unrecognizedMsgTypes; }
    4046:	cf 93       	push	r28
    4048:	df 93       	push	r29
    404a:	1f 92       	push	r1
    404c:	1f 92       	push	r1
    404e:	cd b7       	in	r28, 0x3d	; 61
    4050:	de b7       	in	r29, 0x3e	; 62
    4052:	9a 83       	std	Y+2, r25	; 0x02
    4054:	89 83       	std	Y+1, r24	; 0x01
    4056:	89 81       	ldd	r24, Y+1	; 0x01
    4058:	9a 81       	ldd	r25, Y+2	; 0x02
    405a:	80 55       	subi	r24, 0x50	; 80
    405c:	9f 4f       	sbci	r25, 0xFF	; 255
    405e:	fc 01       	movw	r30, r24
    4060:	80 81       	ld	r24, Z
    4062:	91 81       	ldd	r25, Z+1	; 0x01
    4064:	a2 81       	ldd	r26, Z+2	; 0x02
    4066:	b3 81       	ldd	r27, Z+3	; 0x03
    4068:	bc 01       	movw	r22, r24
    406a:	cd 01       	movw	r24, r26
    406c:	0f 90       	pop	r0
    406e:	0f 90       	pop	r0
    4070:	df 91       	pop	r29
    4072:	cf 91       	pop	r28
    4074:	08 95       	ret

00004076 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl>:
			void UnrecognizedMsgTypes(long val) { unrecognizedMsgTypes = val; }
    4076:	cf 93       	push	r28
    4078:	df 93       	push	r29
    407a:	00 d0       	rcall	.+0      	; 0x407c <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl+0x6>
    407c:	00 d0       	rcall	.+0      	; 0x407e <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl+0x8>
    407e:	cd b7       	in	r28, 0x3d	; 61
    4080:	de b7       	in	r29, 0x3e	; 62
    4082:	9a 83       	std	Y+2, r25	; 0x02
    4084:	89 83       	std	Y+1, r24	; 0x01
    4086:	4b 83       	std	Y+3, r20	; 0x03
    4088:	5c 83       	std	Y+4, r21	; 0x04
    408a:	6d 83       	std	Y+5, r22	; 0x05
    408c:	7e 83       	std	Y+6, r23	; 0x06
    408e:	89 81       	ldd	r24, Y+1	; 0x01
    4090:	9a 81       	ldd	r25, Y+2	; 0x02
    4092:	9c 01       	movw	r18, r24
    4094:	20 55       	subi	r18, 0x50	; 80
    4096:	3f 4f       	sbci	r19, 0xFF	; 255
    4098:	8b 81       	ldd	r24, Y+3	; 0x03
    409a:	9c 81       	ldd	r25, Y+4	; 0x04
    409c:	ad 81       	ldd	r26, Y+5	; 0x05
    409e:	be 81       	ldd	r27, Y+6	; 0x06
    40a0:	f9 01       	movw	r30, r18
    40a2:	80 83       	st	Z, r24
    40a4:	91 83       	std	Z+1, r25	; 0x01
    40a6:	a2 83       	std	Z+2, r26	; 0x02
    40a8:	b3 83       	std	Z+3, r27	; 0x03
    40aa:	26 96       	adiw	r28, 0x06	; 6
    40ac:	0f b6       	in	r0, 0x3f	; 63
    40ae:	f8 94       	cli
    40b0:	de bf       	out	0x3e, r29	; 62
    40b2:	0f be       	out	0x3f, r0	; 63
    40b4:	cd bf       	out	0x3d, r28	; 61
    40b6:	df 91       	pop	r29
    40b8:	cf 91       	pop	r28
    40ba:	08 95       	ret

000040bc <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>:
			
			long ChecksumErrors() const {return checksumErrors; }
    40bc:	cf 93       	push	r28
    40be:	df 93       	push	r29
    40c0:	1f 92       	push	r1
    40c2:	1f 92       	push	r1
    40c4:	cd b7       	in	r28, 0x3d	; 61
    40c6:	de b7       	in	r29, 0x3e	; 62
    40c8:	9a 83       	std	Y+2, r25	; 0x02
    40ca:	89 83       	std	Y+1, r24	; 0x01
    40cc:	89 81       	ldd	r24, Y+1	; 0x01
    40ce:	9a 81       	ldd	r25, Y+2	; 0x02
    40d0:	8c 54       	subi	r24, 0x4C	; 76
    40d2:	9f 4f       	sbci	r25, 0xFF	; 255
    40d4:	fc 01       	movw	r30, r24
    40d6:	80 81       	ld	r24, Z
    40d8:	91 81       	ldd	r25, Z+1	; 0x01
    40da:	a2 81       	ldd	r26, Z+2	; 0x02
    40dc:	b3 81       	ldd	r27, Z+3	; 0x03
    40de:	bc 01       	movw	r22, r24
    40e0:	cd 01       	movw	r24, r26
    40e2:	0f 90       	pop	r0
    40e4:	0f 90       	pop	r0
    40e6:	df 91       	pop	r29
    40e8:	cf 91       	pop	r28
    40ea:	08 95       	ret

000040ec <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl>:
			void ChecksumErrors(long val) { checksumErrors = val; }
    40ec:	cf 93       	push	r28
    40ee:	df 93       	push	r29
    40f0:	00 d0       	rcall	.+0      	; 0x40f2 <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl+0x6>
    40f2:	00 d0       	rcall	.+0      	; 0x40f4 <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl+0x8>
    40f4:	cd b7       	in	r28, 0x3d	; 61
    40f6:	de b7       	in	r29, 0x3e	; 62
    40f8:	9a 83       	std	Y+2, r25	; 0x02
    40fa:	89 83       	std	Y+1, r24	; 0x01
    40fc:	4b 83       	std	Y+3, r20	; 0x03
    40fe:	5c 83       	std	Y+4, r21	; 0x04
    4100:	6d 83       	std	Y+5, r22	; 0x05
    4102:	7e 83       	std	Y+6, r23	; 0x06
    4104:	89 81       	ldd	r24, Y+1	; 0x01
    4106:	9a 81       	ldd	r25, Y+2	; 0x02
    4108:	9c 01       	movw	r18, r24
    410a:	2c 54       	subi	r18, 0x4C	; 76
    410c:	3f 4f       	sbci	r19, 0xFF	; 255
    410e:	8b 81       	ldd	r24, Y+3	; 0x03
    4110:	9c 81       	ldd	r25, Y+4	; 0x04
    4112:	ad 81       	ldd	r26, Y+5	; 0x05
    4114:	be 81       	ldd	r27, Y+6	; 0x06
    4116:	f9 01       	movw	r30, r18
    4118:	80 83       	st	Z, r24
    411a:	91 83       	std	Z+1, r25	; 0x01
    411c:	a2 83       	std	Z+2, r26	; 0x02
    411e:	b3 83       	std	Z+3, r27	; 0x03
    4120:	26 96       	adiw	r28, 0x06	; 6
    4122:	0f b6       	in	r0, 0x3f	; 63
    4124:	f8 94       	cli
    4126:	de bf       	out	0x3e, r29	; 62
    4128:	0f be       	out	0x3f, r0	; 63
    412a:	cd bf       	out	0x3d, r28	; 61
    412c:	df 91       	pop	r29
    412e:	cf 91       	pop	r28
    4130:	08 95       	ret

00004132 <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>:
				sizeof(UnrecognizedMsgTypes) + 
				sizeof(ChecksumErrors) + 
				sizeof(NumOfBlownFrames);

			
				SystemTelemetryMessage(): Message(MessageType,MessageSize),
    4132:	cf 93       	push	r28
    4134:	df 93       	push	r29
    4136:	1f 92       	push	r1
    4138:	1f 92       	push	r1
    413a:	cd b7       	in	r28, 0x3d	; 61
    413c:	de b7       	in	r29, 0x3e	; 62
    413e:	9a 83       	std	Y+2, r25	; 0x02
    4140:	89 83       	std	Y+1, r24	; 0x01
										
														
					Timeouts(0),
					UnrecognizedMsgTypes(0),
					ChecksumErrors(0),
					NumOfBlownFrames(0)
    4142:	89 81       	ldd	r24, Y+1	; 0x01
    4144:	9a 81       	ldd	r25, Y+2	; 0x02
    4146:	49 ec       	ldi	r20, 0xC9	; 201
    4148:	50 e0       	ldi	r21, 0x00	; 0
    414a:	62 e0       	ldi	r22, 0x02	; 2
    414c:	0e 94 0a 1c 	call	0x3814	; 0x3814 <_ZN10helicopter8messages7MessageC1Ehi>
    4150:	89 81       	ldd	r24, Y+1	; 0x01
    4152:	9a 81       	ldd	r25, Y+2	; 0x02
    4154:	28 e4       	ldi	r18, 0x48	; 72
    4156:	32 e0       	ldi	r19, 0x02	; 2
    4158:	fc 01       	movw	r30, r24
    415a:	31 83       	std	Z+1, r19	; 0x01
    415c:	20 83       	st	Z, r18
    415e:	89 81       	ldd	r24, Y+1	; 0x01
    4160:	9a 81       	ldd	r25, Y+2	; 0x02
    4162:	fc 01       	movw	r30, r24
    4164:	15 82       	std	Z+5, r1	; 0x05
    4166:	16 82       	std	Z+6, r1	; 0x06
    4168:	17 82       	std	Z+7, r1	; 0x07
    416a:	10 86       	std	Z+8, r1	; 0x08
    416c:	89 81       	ldd	r24, Y+1	; 0x01
    416e:	9a 81       	ldd	r25, Y+2	; 0x02
    4170:	fc 01       	movw	r30, r24
    4172:	11 86       	std	Z+9, r1	; 0x09
    4174:	12 86       	std	Z+10, r1	; 0x0a
    4176:	13 86       	std	Z+11, r1	; 0x0b
    4178:	14 86       	std	Z+12, r1	; 0x0c
    417a:	89 81       	ldd	r24, Y+1	; 0x01
    417c:	9a 81       	ldd	r25, Y+2	; 0x02
    417e:	fc 01       	movw	r30, r24
    4180:	15 86       	std	Z+13, r1	; 0x0d
    4182:	16 86       	std	Z+14, r1	; 0x0e
    4184:	17 86       	std	Z+15, r1	; 0x0f
    4186:	10 8a       	std	Z+16, r1	; 0x10
    4188:	89 81       	ldd	r24, Y+1	; 0x01
    418a:	9a 81       	ldd	r25, Y+2	; 0x02
    418c:	fc 01       	movw	r30, r24
    418e:	11 8a       	std	Z+17, r1	; 0x11
    4190:	12 8a       	std	Z+18, r1	; 0x12
    4192:	13 8a       	std	Z+19, r1	; 0x13
    4194:	14 8a       	std	Z+20, r1	; 0x14
    4196:	89 81       	ldd	r24, Y+1	; 0x01
    4198:	9a 81       	ldd	r25, Y+2	; 0x02
    419a:	fc 01       	movw	r30, r24
    419c:	15 8a       	std	Z+21, r1	; 0x15
    419e:	16 8a       	std	Z+22, r1	; 0x16
    41a0:	17 8a       	std	Z+23, r1	; 0x17
    41a2:	10 8e       	std	Z+24, r1	; 0x18
    41a4:	89 81       	ldd	r24, Y+1	; 0x01
    41a6:	9a 81       	ldd	r25, Y+2	; 0x02
    41a8:	fc 01       	movw	r30, r24
    41aa:	11 8e       	std	Z+25, r1	; 0x19
    41ac:	12 8e       	std	Z+26, r1	; 0x1a
    41ae:	13 8e       	std	Z+27, r1	; 0x1b
    41b0:	14 8e       	std	Z+28, r1	; 0x1c
    41b2:	89 81       	ldd	r24, Y+1	; 0x01
    41b4:	9a 81       	ldd	r25, Y+2	; 0x02
    41b6:	fc 01       	movw	r30, r24
    41b8:	15 8e       	std	Z+29, r1	; 0x1d
    41ba:	16 8e       	std	Z+30, r1	; 0x1e
    41bc:	17 8e       	std	Z+31, r1	; 0x1f
    41be:	10 a2       	std	Z+32, r1	; 0x20
    41c0:	89 81       	ldd	r24, Y+1	; 0x01
    41c2:	9a 81       	ldd	r25, Y+2	; 0x02
    41c4:	fc 01       	movw	r30, r24
    41c6:	11 a2       	std	Z+33, r1	; 0x21
    41c8:	12 a2       	std	Z+34, r1	; 0x22
    41ca:	13 a2       	std	Z+35, r1	; 0x23
    41cc:	14 a2       	std	Z+36, r1	; 0x24
    41ce:	89 81       	ldd	r24, Y+1	; 0x01
    41d0:	9a 81       	ldd	r25, Y+2	; 0x02
    41d2:	fc 01       	movw	r30, r24
    41d4:	15 a2       	std	Z+37, r1	; 0x25
    41d6:	16 a2       	std	Z+38, r1	; 0x26
    41d8:	17 a2       	std	Z+39, r1	; 0x27
    41da:	10 a6       	std	Z+40, r1	; 0x28
    41dc:	89 81       	ldd	r24, Y+1	; 0x01
    41de:	9a 81       	ldd	r25, Y+2	; 0x02
    41e0:	fc 01       	movw	r30, r24
    41e2:	11 a6       	std	Z+41, r1	; 0x29
    41e4:	12 a6       	std	Z+42, r1	; 0x2a
    41e6:	13 a6       	std	Z+43, r1	; 0x2b
    41e8:	14 a6       	std	Z+44, r1	; 0x2c
    41ea:	89 81       	ldd	r24, Y+1	; 0x01
    41ec:	9a 81       	ldd	r25, Y+2	; 0x02
    41ee:	fc 01       	movw	r30, r24
    41f0:	15 a6       	std	Z+45, r1	; 0x2d
    41f2:	16 a6       	std	Z+46, r1	; 0x2e
    41f4:	17 a6       	std	Z+47, r1	; 0x2f
    41f6:	10 aa       	std	Z+48, r1	; 0x30
    41f8:	89 81       	ldd	r24, Y+1	; 0x01
    41fa:	9a 81       	ldd	r25, Y+2	; 0x02
    41fc:	fc 01       	movw	r30, r24
    41fe:	11 aa       	std	Z+49, r1	; 0x31
    4200:	12 aa       	std	Z+50, r1	; 0x32
    4202:	13 aa       	std	Z+51, r1	; 0x33
    4204:	14 aa       	std	Z+52, r1	; 0x34
    4206:	89 81       	ldd	r24, Y+1	; 0x01
    4208:	9a 81       	ldd	r25, Y+2	; 0x02
    420a:	fc 01       	movw	r30, r24
    420c:	15 aa       	std	Z+53, r1	; 0x35
    420e:	16 aa       	std	Z+54, r1	; 0x36
    4210:	17 aa       	std	Z+55, r1	; 0x37
    4212:	10 ae       	std	Z+56, r1	; 0x38
    4214:	89 81       	ldd	r24, Y+1	; 0x01
    4216:	9a 81       	ldd	r25, Y+2	; 0x02
    4218:	fc 01       	movw	r30, r24
    421a:	11 ae       	std	Z+57, r1	; 0x39
    421c:	12 ae       	std	Z+58, r1	; 0x3a
    421e:	13 ae       	std	Z+59, r1	; 0x3b
    4220:	14 ae       	std	Z+60, r1	; 0x3c
    4222:	89 81       	ldd	r24, Y+1	; 0x01
    4224:	9a 81       	ldd	r25, Y+2	; 0x02
    4226:	cd 96       	adiw	r24, 0x3d	; 61
    4228:	fc 01       	movw	r30, r24
    422a:	10 82       	st	Z, r1
    422c:	11 82       	std	Z+1, r1	; 0x01
    422e:	12 82       	std	Z+2, r1	; 0x02
    4230:	13 82       	std	Z+3, r1	; 0x03
    4232:	89 81       	ldd	r24, Y+1	; 0x01
    4234:	9a 81       	ldd	r25, Y+2	; 0x02
    4236:	8f 5b       	subi	r24, 0xBF	; 191
    4238:	9f 4f       	sbci	r25, 0xFF	; 255
    423a:	fc 01       	movw	r30, r24
    423c:	10 82       	st	Z, r1
    423e:	11 82       	std	Z+1, r1	; 0x01
    4240:	12 82       	std	Z+2, r1	; 0x02
    4242:	13 82       	std	Z+3, r1	; 0x03
    4244:	89 81       	ldd	r24, Y+1	; 0x01
    4246:	9a 81       	ldd	r25, Y+2	; 0x02
    4248:	8b 5b       	subi	r24, 0xBB	; 187
    424a:	9f 4f       	sbci	r25, 0xFF	; 255
    424c:	fc 01       	movw	r30, r24
    424e:	10 82       	st	Z, r1
    4250:	11 82       	std	Z+1, r1	; 0x01
    4252:	12 82       	std	Z+2, r1	; 0x02
    4254:	13 82       	std	Z+3, r1	; 0x03
    4256:	89 81       	ldd	r24, Y+1	; 0x01
    4258:	9a 81       	ldd	r25, Y+2	; 0x02
    425a:	87 5b       	subi	r24, 0xB7	; 183
    425c:	9f 4f       	sbci	r25, 0xFF	; 255
    425e:	fc 01       	movw	r30, r24
    4260:	10 82       	st	Z, r1
    4262:	11 82       	std	Z+1, r1	; 0x01
    4264:	12 82       	std	Z+2, r1	; 0x02
    4266:	13 82       	std	Z+3, r1	; 0x03
    4268:	89 81       	ldd	r24, Y+1	; 0x01
    426a:	9a 81       	ldd	r25, Y+2	; 0x02
    426c:	83 5b       	subi	r24, 0xB3	; 179
    426e:	9f 4f       	sbci	r25, 0xFF	; 255
    4270:	fc 01       	movw	r30, r24
    4272:	10 82       	st	Z, r1
    4274:	11 82       	std	Z+1, r1	; 0x01
    4276:	12 82       	std	Z+2, r1	; 0x02
    4278:	13 82       	std	Z+3, r1	; 0x03
    427a:	89 81       	ldd	r24, Y+1	; 0x01
    427c:	9a 81       	ldd	r25, Y+2	; 0x02
    427e:	8f 5a       	subi	r24, 0xAF	; 175
    4280:	9f 4f       	sbci	r25, 0xFF	; 255
    4282:	fc 01       	movw	r30, r24
    4284:	10 82       	st	Z, r1
    4286:	11 82       	std	Z+1, r1	; 0x01
    4288:	12 82       	std	Z+2, r1	; 0x02
    428a:	13 82       	std	Z+3, r1	; 0x03
    428c:	89 81       	ldd	r24, Y+1	; 0x01
    428e:	9a 81       	ldd	r25, Y+2	; 0x02
    4290:	8b 5a       	subi	r24, 0xAB	; 171
    4292:	9f 4f       	sbci	r25, 0xFF	; 255
    4294:	fc 01       	movw	r30, r24
    4296:	10 82       	st	Z, r1
    4298:	11 82       	std	Z+1, r1	; 0x01
    429a:	12 82       	std	Z+2, r1	; 0x02
    429c:	13 82       	std	Z+3, r1	; 0x03
    429e:	89 81       	ldd	r24, Y+1	; 0x01
    42a0:	9a 81       	ldd	r25, Y+2	; 0x02
    42a2:	87 5a       	subi	r24, 0xA7	; 167
    42a4:	9f 4f       	sbci	r25, 0xFF	; 255
    42a6:	fc 01       	movw	r30, r24
    42a8:	10 82       	st	Z, r1
    42aa:	11 82       	std	Z+1, r1	; 0x01
    42ac:	12 82       	std	Z+2, r1	; 0x02
    42ae:	13 82       	std	Z+3, r1	; 0x03
    42b0:	89 81       	ldd	r24, Y+1	; 0x01
    42b2:	9a 81       	ldd	r25, Y+2	; 0x02
    42b4:	83 5a       	subi	r24, 0xA3	; 163
    42b6:	9f 4f       	sbci	r25, 0xFF	; 255
    42b8:	fc 01       	movw	r30, r24
    42ba:	10 82       	st	Z, r1
    42bc:	11 82       	std	Z+1, r1	; 0x01
    42be:	12 82       	std	Z+2, r1	; 0x02
    42c0:	13 82       	std	Z+3, r1	; 0x03
    42c2:	89 81       	ldd	r24, Y+1	; 0x01
    42c4:	9a 81       	ldd	r25, Y+2	; 0x02
    42c6:	8f 59       	subi	r24, 0x9F	; 159
    42c8:	9f 4f       	sbci	r25, 0xFF	; 255
    42ca:	fc 01       	movw	r30, r24
    42cc:	10 82       	st	Z, r1
    42ce:	11 82       	std	Z+1, r1	; 0x01
    42d0:	12 82       	std	Z+2, r1	; 0x02
    42d2:	13 82       	std	Z+3, r1	; 0x03
    42d4:	89 81       	ldd	r24, Y+1	; 0x01
    42d6:	9a 81       	ldd	r25, Y+2	; 0x02
    42d8:	8b 59       	subi	r24, 0x9B	; 155
    42da:	9f 4f       	sbci	r25, 0xFF	; 255
    42dc:	fc 01       	movw	r30, r24
    42de:	10 82       	st	Z, r1
    42e0:	11 82       	std	Z+1, r1	; 0x01
    42e2:	12 82       	std	Z+2, r1	; 0x02
    42e4:	13 82       	std	Z+3, r1	; 0x03
    42e6:	89 81       	ldd	r24, Y+1	; 0x01
    42e8:	9a 81       	ldd	r25, Y+2	; 0x02
    42ea:	87 59       	subi	r24, 0x97	; 151
    42ec:	9f 4f       	sbci	r25, 0xFF	; 255
    42ee:	fc 01       	movw	r30, r24
    42f0:	10 82       	st	Z, r1
    42f2:	11 82       	std	Z+1, r1	; 0x01
    42f4:	12 82       	std	Z+2, r1	; 0x02
    42f6:	13 82       	std	Z+3, r1	; 0x03
    42f8:	89 81       	ldd	r24, Y+1	; 0x01
    42fa:	9a 81       	ldd	r25, Y+2	; 0x02
    42fc:	83 59       	subi	r24, 0x93	; 147
    42fe:	9f 4f       	sbci	r25, 0xFF	; 255
    4300:	fc 01       	movw	r30, r24
    4302:	10 82       	st	Z, r1
    4304:	11 82       	std	Z+1, r1	; 0x01
    4306:	12 82       	std	Z+2, r1	; 0x02
    4308:	13 82       	std	Z+3, r1	; 0x03
    430a:	89 81       	ldd	r24, Y+1	; 0x01
    430c:	9a 81       	ldd	r25, Y+2	; 0x02
    430e:	8f 58       	subi	r24, 0x8F	; 143
    4310:	9f 4f       	sbci	r25, 0xFF	; 255
    4312:	fc 01       	movw	r30, r24
    4314:	10 82       	st	Z, r1
    4316:	11 82       	std	Z+1, r1	; 0x01
    4318:	12 82       	std	Z+2, r1	; 0x02
    431a:	13 82       	std	Z+3, r1	; 0x03
    431c:	89 81       	ldd	r24, Y+1	; 0x01
    431e:	9a 81       	ldd	r25, Y+2	; 0x02
    4320:	8b 58       	subi	r24, 0x8B	; 139
    4322:	9f 4f       	sbci	r25, 0xFF	; 255
    4324:	fc 01       	movw	r30, r24
    4326:	10 82       	st	Z, r1
    4328:	11 82       	std	Z+1, r1	; 0x01
    432a:	12 82       	std	Z+2, r1	; 0x02
    432c:	13 82       	std	Z+3, r1	; 0x03
    432e:	89 81       	ldd	r24, Y+1	; 0x01
    4330:	9a 81       	ldd	r25, Y+2	; 0x02
    4332:	87 58       	subi	r24, 0x87	; 135
    4334:	9f 4f       	sbci	r25, 0xFF	; 255
    4336:	fc 01       	movw	r30, r24
    4338:	10 82       	st	Z, r1
    433a:	11 82       	std	Z+1, r1	; 0x01
    433c:	12 82       	std	Z+2, r1	; 0x02
    433e:	13 82       	std	Z+3, r1	; 0x03
    4340:	89 81       	ldd	r24, Y+1	; 0x01
    4342:	9a 81       	ldd	r25, Y+2	; 0x02
    4344:	83 58       	subi	r24, 0x83	; 131
    4346:	9f 4f       	sbci	r25, 0xFF	; 255
    4348:	fc 01       	movw	r30, r24
    434a:	10 82       	st	Z, r1
    434c:	11 82       	std	Z+1, r1	; 0x01
    434e:	12 82       	std	Z+2, r1	; 0x02
    4350:	13 82       	std	Z+3, r1	; 0x03
    4352:	89 81       	ldd	r24, Y+1	; 0x01
    4354:	9a 81       	ldd	r25, Y+2	; 0x02
    4356:	8f 57       	subi	r24, 0x7F	; 127
    4358:	9f 4f       	sbci	r25, 0xFF	; 255
    435a:	fc 01       	movw	r30, r24
    435c:	10 82       	st	Z, r1
    435e:	11 82       	std	Z+1, r1	; 0x01
    4360:	12 82       	std	Z+2, r1	; 0x02
    4362:	13 82       	std	Z+3, r1	; 0x03
    4364:	89 81       	ldd	r24, Y+1	; 0x01
    4366:	9a 81       	ldd	r25, Y+2	; 0x02
    4368:	8b 57       	subi	r24, 0x7B	; 123
    436a:	9f 4f       	sbci	r25, 0xFF	; 255
    436c:	fc 01       	movw	r30, r24
    436e:	10 82       	st	Z, r1
    4370:	11 82       	std	Z+1, r1	; 0x01
    4372:	12 82       	std	Z+2, r1	; 0x02
    4374:	13 82       	std	Z+3, r1	; 0x03
    4376:	89 81       	ldd	r24, Y+1	; 0x01
    4378:	9a 81       	ldd	r25, Y+2	; 0x02
    437a:	87 57       	subi	r24, 0x77	; 119
    437c:	9f 4f       	sbci	r25, 0xFF	; 255
    437e:	fc 01       	movw	r30, r24
    4380:	10 82       	st	Z, r1
    4382:	11 82       	std	Z+1, r1	; 0x01
    4384:	12 82       	std	Z+2, r1	; 0x02
    4386:	13 82       	std	Z+3, r1	; 0x03
    4388:	89 81       	ldd	r24, Y+1	; 0x01
    438a:	9a 81       	ldd	r25, Y+2	; 0x02
    438c:	83 57       	subi	r24, 0x73	; 115
    438e:	9f 4f       	sbci	r25, 0xFF	; 255
    4390:	fc 01       	movw	r30, r24
    4392:	10 82       	st	Z, r1
    4394:	11 82       	std	Z+1, r1	; 0x01
    4396:	12 82       	std	Z+2, r1	; 0x02
    4398:	13 82       	std	Z+3, r1	; 0x03
    439a:	89 81       	ldd	r24, Y+1	; 0x01
    439c:	9a 81       	ldd	r25, Y+2	; 0x02
    439e:	8f 56       	subi	r24, 0x6F	; 111
    43a0:	9f 4f       	sbci	r25, 0xFF	; 255
    43a2:	fc 01       	movw	r30, r24
    43a4:	10 82       	st	Z, r1
    43a6:	11 82       	std	Z+1, r1	; 0x01
    43a8:	12 82       	std	Z+2, r1	; 0x02
    43aa:	13 82       	std	Z+3, r1	; 0x03
    43ac:	89 81       	ldd	r24, Y+1	; 0x01
    43ae:	9a 81       	ldd	r25, Y+2	; 0x02
    43b0:	8b 56       	subi	r24, 0x6B	; 107
    43b2:	9f 4f       	sbci	r25, 0xFF	; 255
    43b4:	fc 01       	movw	r30, r24
    43b6:	10 82       	st	Z, r1
    43b8:	11 82       	std	Z+1, r1	; 0x01
    43ba:	12 82       	std	Z+2, r1	; 0x02
    43bc:	13 82       	std	Z+3, r1	; 0x03
    43be:	89 81       	ldd	r24, Y+1	; 0x01
    43c0:	9a 81       	ldd	r25, Y+2	; 0x02
    43c2:	87 56       	subi	r24, 0x67	; 103
    43c4:	9f 4f       	sbci	r25, 0xFF	; 255
    43c6:	fc 01       	movw	r30, r24
    43c8:	10 82       	st	Z, r1
    43ca:	11 82       	std	Z+1, r1	; 0x01
    43cc:	12 82       	std	Z+2, r1	; 0x02
    43ce:	13 82       	std	Z+3, r1	; 0x03
    43d0:	89 81       	ldd	r24, Y+1	; 0x01
    43d2:	9a 81       	ldd	r25, Y+2	; 0x02
    43d4:	83 56       	subi	r24, 0x63	; 99
    43d6:	9f 4f       	sbci	r25, 0xFF	; 255
    43d8:	fc 01       	movw	r30, r24
    43da:	10 82       	st	Z, r1
    43dc:	11 82       	std	Z+1, r1	; 0x01
    43de:	12 82       	std	Z+2, r1	; 0x02
    43e0:	13 82       	std	Z+3, r1	; 0x03
    43e2:	89 81       	ldd	r24, Y+1	; 0x01
    43e4:	9a 81       	ldd	r25, Y+2	; 0x02
    43e6:	8f 55       	subi	r24, 0x5F	; 95
    43e8:	9f 4f       	sbci	r25, 0xFF	; 255
    43ea:	fc 01       	movw	r30, r24
    43ec:	10 82       	st	Z, r1
    43ee:	11 82       	std	Z+1, r1	; 0x01
    43f0:	12 82       	std	Z+2, r1	; 0x02
    43f2:	13 82       	std	Z+3, r1	; 0x03
    43f4:	89 81       	ldd	r24, Y+1	; 0x01
    43f6:	9a 81       	ldd	r25, Y+2	; 0x02
    43f8:	8b 55       	subi	r24, 0x5B	; 91
    43fa:	9f 4f       	sbci	r25, 0xFF	; 255
    43fc:	fc 01       	movw	r30, r24
    43fe:	10 82       	st	Z, r1
    4400:	11 82       	std	Z+1, r1	; 0x01
    4402:	12 82       	std	Z+2, r1	; 0x02
    4404:	13 82       	std	Z+3, r1	; 0x03
    4406:	89 81       	ldd	r24, Y+1	; 0x01
    4408:	9a 81       	ldd	r25, Y+2	; 0x02
    440a:	87 55       	subi	r24, 0x57	; 87
    440c:	9f 4f       	sbci	r25, 0xFF	; 255
    440e:	fc 01       	movw	r30, r24
    4410:	10 82       	st	Z, r1
    4412:	11 82       	std	Z+1, r1	; 0x01
    4414:	12 82       	std	Z+2, r1	; 0x02
    4416:	13 82       	std	Z+3, r1	; 0x03
    4418:	89 81       	ldd	r24, Y+1	; 0x01
    441a:	9a 81       	ldd	r25, Y+2	; 0x02
    441c:	83 55       	subi	r24, 0x53	; 83
    441e:	9f 4f       	sbci	r25, 0xFF	; 255
    4420:	fc 01       	movw	r30, r24
    4422:	10 82       	st	Z, r1
    4424:	11 82       	std	Z+1, r1	; 0x01
    4426:	12 82       	std	Z+2, r1	; 0x02
    4428:	13 82       	std	Z+3, r1	; 0x03
    442a:	89 81       	ldd	r24, Y+1	; 0x01
    442c:	9a 81       	ldd	r25, Y+2	; 0x02
    442e:	8f 54       	subi	r24, 0x4F	; 79
    4430:	9f 4f       	sbci	r25, 0xFF	; 255
    4432:	fc 01       	movw	r30, r24
    4434:	10 82       	st	Z, r1
    4436:	11 82       	std	Z+1, r1	; 0x01
    4438:	12 82       	std	Z+2, r1	; 0x02
    443a:	13 82       	std	Z+3, r1	; 0x03
    443c:	89 81       	ldd	r24, Y+1	; 0x01
    443e:	9a 81       	ldd	r25, Y+2	; 0x02
    4440:	8b 54       	subi	r24, 0x4B	; 75
    4442:	9f 4f       	sbci	r25, 0xFF	; 255
    4444:	fc 01       	movw	r30, r24
    4446:	10 82       	st	Z, r1
    4448:	11 82       	std	Z+1, r1	; 0x01
    444a:	12 82       	std	Z+2, r1	; 0x02
    444c:	13 82       	std	Z+3, r1	; 0x03
    444e:	89 81       	ldd	r24, Y+1	; 0x01
    4450:	9a 81       	ldd	r25, Y+2	; 0x02
    4452:	87 54       	subi	r24, 0x47	; 71
    4454:	9f 4f       	sbci	r25, 0xFF	; 255
    4456:	fc 01       	movw	r30, r24
    4458:	10 82       	st	Z, r1
    445a:	11 82       	std	Z+1, r1	; 0x01
    445c:	12 82       	std	Z+2, r1	; 0x02
    445e:	13 82       	std	Z+3, r1	; 0x03
    4460:	89 81       	ldd	r24, Y+1	; 0x01
    4462:	9a 81       	ldd	r25, Y+2	; 0x02
    4464:	83 54       	subi	r24, 0x43	; 67
    4466:	9f 4f       	sbci	r25, 0xFF	; 255
    4468:	fc 01       	movw	r30, r24
    446a:	10 82       	st	Z, r1
    446c:	11 82       	std	Z+1, r1	; 0x01
    446e:	12 82       	std	Z+2, r1	; 0x02
    4470:	13 82       	std	Z+3, r1	; 0x03
    4472:	89 81       	ldd	r24, Y+1	; 0x01
    4474:	9a 81       	ldd	r25, Y+2	; 0x02
    4476:	8f 53       	subi	r24, 0x3F	; 63
    4478:	9f 4f       	sbci	r25, 0xFF	; 255
    447a:	fc 01       	movw	r30, r24
    447c:	10 82       	st	Z, r1
    447e:	11 82       	std	Z+1, r1	; 0x01
    4480:	12 82       	std	Z+2, r1	; 0x02
    4482:	13 82       	std	Z+3, r1	; 0x03
    4484:	89 81       	ldd	r24, Y+1	; 0x01
    4486:	9a 81       	ldd	r25, Y+2	; 0x02
    4488:	8b 53       	subi	r24, 0x3B	; 59
    448a:	9f 4f       	sbci	r25, 0xFF	; 255
    448c:	fc 01       	movw	r30, r24
    448e:	10 82       	st	Z, r1
    4490:	11 82       	std	Z+1, r1	; 0x01
    4492:	12 82       	std	Z+2, r1	; 0x02
    4494:	13 82       	std	Z+3, r1	; 0x03
    4496:	89 81       	ldd	r24, Y+1	; 0x01
    4498:	9a 81       	ldd	r25, Y+2	; 0x02
    449a:	87 53       	subi	r24, 0x37	; 55
    449c:	9f 4f       	sbci	r25, 0xFF	; 255
    449e:	fc 01       	movw	r30, r24
    44a0:	10 82       	st	Z, r1
    44a2:	11 82       	std	Z+1, r1	; 0x01
    44a4:	12 82       	std	Z+2, r1	; 0x02
    44a6:	13 82       	std	Z+3, r1	; 0x03
				{
				
				}
    44a8:	0f 90       	pop	r0
    44aa:	0f 90       	pop	r0
    44ac:	df 91       	pop	r29
    44ae:	cf 91       	pop	r28
    44b0:	08 95       	ret

000044b2 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>:
			
				~SystemTelemetryMessage() {}
    44b2:	cf 93       	push	r28
    44b4:	df 93       	push	r29
    44b6:	1f 92       	push	r1
    44b8:	1f 92       	push	r1
    44ba:	cd b7       	in	r28, 0x3d	; 61
    44bc:	de b7       	in	r29, 0x3e	; 62
    44be:	9a 83       	std	Y+2, r25	; 0x02
    44c0:	89 83       	std	Y+1, r24	; 0x01
    44c2:	89 81       	ldd	r24, Y+1	; 0x01
    44c4:	9a 81       	ldd	r25, Y+2	; 0x02
    44c6:	28 e4       	ldi	r18, 0x48	; 72
    44c8:	32 e0       	ldi	r19, 0x02	; 2
    44ca:	fc 01       	movw	r30, r24
    44cc:	31 83       	std	Z+1, r19	; 0x01
    44ce:	20 83       	st	Z, r18
    44d0:	89 81       	ldd	r24, Y+1	; 0x01
    44d2:	9a 81       	ldd	r25, Y+2	; 0x02
    44d4:	0e 94 a5 1b 	call	0x374a	; 0x374a <_ZN10helicopter8messages7MessageD1Ev>
    44d8:	80 e0       	ldi	r24, 0x00	; 0
    44da:	90 e0       	ldi	r25, 0x00	; 0
    44dc:	81 70       	andi	r24, 0x01	; 1
    44de:	99 27       	eor	r25, r25
    44e0:	00 97       	sbiw	r24, 0x00	; 0
    44e2:	21 f0       	breq	.+8      	; 0x44ec <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev+0x3a>
    44e4:	89 81       	ldd	r24, Y+1	; 0x01
    44e6:	9a 81       	ldd	r25, Y+2	; 0x02
    44e8:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    44ec:	0f 90       	pop	r0
    44ee:	0f 90       	pop	r0
    44f0:	df 91       	pop	r29
    44f2:	cf 91       	pop	r28
    44f4:	08 95       	ret

000044f6 <_ZN10helicopter8messages22SystemTelemetryMessageD0Ev>:
    44f6:	cf 93       	push	r28
    44f8:	df 93       	push	r29
    44fa:	1f 92       	push	r1
    44fc:	1f 92       	push	r1
    44fe:	cd b7       	in	r28, 0x3d	; 61
    4500:	de b7       	in	r29, 0x3e	; 62
    4502:	9a 83       	std	Y+2, r25	; 0x02
    4504:	89 83       	std	Y+1, r24	; 0x01
    4506:	89 81       	ldd	r24, Y+1	; 0x01
    4508:	9a 81       	ldd	r25, Y+2	; 0x02
    450a:	0e 94 59 22 	call	0x44b2	; 0x44b2 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>
    450e:	89 81       	ldd	r24, Y+1	; 0x01
    4510:	9a 81       	ldd	r25, Y+2	; 0x02
    4512:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    4516:	0f 90       	pop	r0
    4518:	0f 90       	pop	r0
    451a:	df 91       	pop	r29
    451c:	cf 91       	pop	r28
    451e:	08 95       	ret

00004520 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv>:

using namespace helicopter::messages;


byte *SystemTelemetryMessage::getBytes()
{
    4520:	cf 93       	push	r28
    4522:	df 93       	push	r29
    4524:	00 d0       	rcall	.+0      	; 0x4526 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv+0x6>
    4526:	00 d0       	rcall	.+0      	; 0x4528 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv+0x8>
    4528:	cd b7       	in	r28, 0x3d	; 61
    452a:	de b7       	in	r29, 0x3e	; 62
    452c:	9e 83       	std	Y+6, r25	; 0x06
    452e:	8d 83       	std	Y+5, r24	; 0x05
	byte *msg = new byte[MessageSize];
    4530:	89 ec       	ldi	r24, 0xC9	; 201
    4532:	90 e0       	ldi	r25, 0x00	; 0
    4534:	0e 94 39 39 	call	0x7272	; 0x7272 <_Znaj>
    4538:	9a 83       	std	Y+2, r25	; 0x02
    453a:	89 83       	std	Y+1, r24	; 0x01
	byte *msgPtr = msg;
    453c:	89 81       	ldd	r24, Y+1	; 0x01
    453e:	9a 81       	ldd	r25, Y+2	; 0x02
    4540:	9c 83       	std	Y+4, r25	; 0x04
    4542:	8b 83       	std	Y+3, r24	; 0x03
	
	encode (msgPtr, msgType);
    4544:	8d 81       	ldd	r24, Y+5	; 0x05
    4546:	9e 81       	ldd	r25, Y+6	; 0x06
    4548:	ac 01       	movw	r20, r24
    454a:	4e 5f       	subi	r20, 0xFE	; 254
    454c:	5f 4f       	sbci	r21, 0xFF	; 255
    454e:	8d 81       	ldd	r24, Y+5	; 0x05
    4550:	9e 81       	ldd	r25, Y+6	; 0x06
    4552:	9e 01       	movw	r18, r28
    4554:	2d 5f       	subi	r18, 0xFD	; 253
    4556:	3f 4f       	sbci	r19, 0xFF	; 255
    4558:	b9 01       	movw	r22, r18
    455a:	0e 94 21 1d 	call	0x3a42	; 0x3a42 <_ZN10helicopter8messages7Message6encodeERPhRh>
	encode (msgPtr, MagYaw);
    455e:	8d 81       	ldd	r24, Y+5	; 0x05
    4560:	9e 81       	ldd	r25, Y+6	; 0x06
    4562:	ac 01       	movw	r20, r24
    4564:	4b 5f       	subi	r20, 0xFB	; 251
    4566:	5f 4f       	sbci	r21, 0xFF	; 255
    4568:	8d 81       	ldd	r24, Y+5	; 0x05
    456a:	9e 81       	ldd	r25, Y+6	; 0x06
    456c:	9e 01       	movw	r18, r28
    456e:	2d 5f       	subi	r18, 0xFD	; 253
    4570:	3f 4f       	sbci	r19, 0xFF	; 255
    4572:	b9 01       	movw	r22, r18
    4574:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <_ZN10helicopter8messages7Message6encodeERPhRm>
	encode (msgPtr, YawVelocityDegreesPerSecond);
    4578:	8d 81       	ldd	r24, Y+5	; 0x05
    457a:	9e 81       	ldd	r25, Y+6	; 0x06
    457c:	ac 01       	movw	r20, r24
    457e:	47 5f       	subi	r20, 0xF7	; 247
    4580:	5f 4f       	sbci	r21, 0xFF	; 255
    4582:	8d 81       	ldd	r24, Y+5	; 0x05
    4584:	9e 81       	ldd	r25, Y+6	; 0x06
    4586:	9e 01       	movw	r18, r28
    4588:	2d 5f       	subi	r18, 0xFD	; 253
    458a:	3f 4f       	sbci	r19, 0xFF	; 255
    458c:	b9 01       	movw	r22, r18
    458e:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YawIntegral);
    4592:	8d 81       	ldd	r24, Y+5	; 0x05
    4594:	9e 81       	ldd	r25, Y+6	; 0x06
    4596:	ac 01       	movw	r20, r24
    4598:	43 5f       	subi	r20, 0xF3	; 243
    459a:	5f 4f       	sbci	r21, 0xFF	; 255
    459c:	8d 81       	ldd	r24, Y+5	; 0x05
    459e:	9e 81       	ldd	r25, Y+6	; 0x06
    45a0:	9e 01       	movw	r18, r28
    45a2:	2d 5f       	subi	r18, 0xFD	; 253
    45a4:	3f 4f       	sbci	r19, 0xFF	; 255
    45a6:	b9 01       	movw	r22, r18
    45a8:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YawProportional);
    45ac:	8d 81       	ldd	r24, Y+5	; 0x05
    45ae:	9e 81       	ldd	r25, Y+6	; 0x06
    45b0:	ac 01       	movw	r20, r24
    45b2:	4f 5e       	subi	r20, 0xEF	; 239
    45b4:	5f 4f       	sbci	r21, 0xFF	; 255
    45b6:	8d 81       	ldd	r24, Y+5	; 0x05
    45b8:	9e 81       	ldd	r25, Y+6	; 0x06
    45ba:	9e 01       	movw	r18, r28
    45bc:	2d 5f       	subi	r18, 0xFD	; 253
    45be:	3f 4f       	sbci	r19, 0xFF	; 255
    45c0:	b9 01       	movw	r22, r18
    45c2:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YawDerivativeError);
    45c6:	8d 81       	ldd	r24, Y+5	; 0x05
    45c8:	9e 81       	ldd	r25, Y+6	; 0x06
    45ca:	ac 01       	movw	r20, r24
    45cc:	4b 5e       	subi	r20, 0xEB	; 235
    45ce:	5f 4f       	sbci	r21, 0xFF	; 255
    45d0:	8d 81       	ldd	r24, Y+5	; 0x05
    45d2:	9e 81       	ldd	r25, Y+6	; 0x06
    45d4:	9e 01       	movw	r18, r28
    45d6:	2d 5f       	subi	r18, 0xFD	; 253
    45d8:	3f 4f       	sbci	r19, 0xFF	; 255
    45da:	b9 01       	movw	r22, r18
    45dc:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YawControl);
    45e0:	8d 81       	ldd	r24, Y+5	; 0x05
    45e2:	9e 81       	ldd	r25, Y+6	; 0x06
    45e4:	ac 01       	movw	r20, r24
    45e6:	47 5e       	subi	r20, 0xE7	; 231
    45e8:	5f 4f       	sbci	r21, 0xFF	; 255
    45ea:	8d 81       	ldd	r24, Y+5	; 0x05
    45ec:	9e 81       	ldd	r25, Y+6	; 0x06
    45ee:	9e 01       	movw	r18, r28
    45f0:	2d 5f       	subi	r18, 0xFD	; 253
    45f2:	3f 4f       	sbci	r19, 0xFF	; 255
    45f4:	b9 01       	movw	r22, r18
    45f6:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YawIntegralGain);
    45fa:	8d 81       	ldd	r24, Y+5	; 0x05
    45fc:	9e 81       	ldd	r25, Y+6	; 0x06
    45fe:	ac 01       	movw	r20, r24
    4600:	43 5e       	subi	r20, 0xE3	; 227
    4602:	5f 4f       	sbci	r21, 0xFF	; 255
    4604:	8d 81       	ldd	r24, Y+5	; 0x05
    4606:	9e 81       	ldd	r25, Y+6	; 0x06
    4608:	9e 01       	movw	r18, r28
    460a:	2d 5f       	subi	r18, 0xFD	; 253
    460c:	3f 4f       	sbci	r19, 0xFF	; 255
    460e:	b9 01       	movw	r22, r18
    4610:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YawDerivativeGain);
    4614:	8d 81       	ldd	r24, Y+5	; 0x05
    4616:	9e 81       	ldd	r25, Y+6	; 0x06
    4618:	ac 01       	movw	r20, r24
    461a:	4f 5d       	subi	r20, 0xDF	; 223
    461c:	5f 4f       	sbci	r21, 0xFF	; 255
    461e:	8d 81       	ldd	r24, Y+5	; 0x05
    4620:	9e 81       	ldd	r25, Y+6	; 0x06
    4622:	9e 01       	movw	r18, r28
    4624:	2d 5f       	subi	r18, 0xFD	; 253
    4626:	3f 4f       	sbci	r19, 0xFF	; 255
    4628:	b9 01       	movw	r22, r18
    462a:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YawProportionalGain);
    462e:	8d 81       	ldd	r24, Y+5	; 0x05
    4630:	9e 81       	ldd	r25, Y+6	; 0x06
    4632:	ac 01       	movw	r20, r24
    4634:	4b 5d       	subi	r20, 0xDB	; 219
    4636:	5f 4f       	sbci	r21, 0xFF	; 255
    4638:	8d 81       	ldd	r24, Y+5	; 0x05
    463a:	9e 81       	ldd	r25, Y+6	; 0x06
    463c:	9e 01       	movw	r18, r28
    463e:	2d 5f       	subi	r18, 0xFD	; 253
    4640:	3f 4f       	sbci	r19, 0xFF	; 255
    4642:	b9 01       	movw	r22, r18
    4644:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YawAntiWindupGain);
    4648:	8d 81       	ldd	r24, Y+5	; 0x05
    464a:	9e 81       	ldd	r25, Y+6	; 0x06
    464c:	ac 01       	movw	r20, r24
    464e:	47 5d       	subi	r20, 0xD7	; 215
    4650:	5f 4f       	sbci	r21, 0xFF	; 255
    4652:	8d 81       	ldd	r24, Y+5	; 0x05
    4654:	9e 81       	ldd	r25, Y+6	; 0x06
    4656:	9e 01       	movw	r18, r28
    4658:	2d 5f       	subi	r18, 0xFD	; 253
    465a:	3f 4f       	sbci	r19, 0xFF	; 255
    465c:	b9 01       	movw	r22, r18
    465e:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	


	encode (msgPtr, XNEDBodyFrame);
    4662:	8d 81       	ldd	r24, Y+5	; 0x05
    4664:	9e 81       	ldd	r25, Y+6	; 0x06
    4666:	ac 01       	movw	r20, r24
    4668:	43 5d       	subi	r20, 0xD3	; 211
    466a:	5f 4f       	sbci	r21, 0xFF	; 255
    466c:	8d 81       	ldd	r24, Y+5	; 0x05
    466e:	9e 81       	ldd	r25, Y+6	; 0x06
    4670:	9e 01       	movw	r18, r28
    4672:	2d 5f       	subi	r18, 0xFD	; 253
    4674:	3f 4f       	sbci	r19, 0xFF	; 255
    4676:	b9 01       	movw	r22, r18
    4678:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, XVelocityMetersPerSecond);
    467c:	8d 81       	ldd	r24, Y+5	; 0x05
    467e:	9e 81       	ldd	r25, Y+6	; 0x06
    4680:	ac 01       	movw	r20, r24
    4682:	4f 5c       	subi	r20, 0xCF	; 207
    4684:	5f 4f       	sbci	r21, 0xFF	; 255
    4686:	8d 81       	ldd	r24, Y+5	; 0x05
    4688:	9e 81       	ldd	r25, Y+6	; 0x06
    468a:	9e 01       	movw	r18, r28
    468c:	2d 5f       	subi	r18, 0xFD	; 253
    468e:	3f 4f       	sbci	r19, 0xFF	; 255
    4690:	b9 01       	movw	r22, r18
    4692:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, ThetaPitchDegrees);	
    4696:	8d 81       	ldd	r24, Y+5	; 0x05
    4698:	9e 81       	ldd	r25, Y+6	; 0x06
    469a:	ac 01       	movw	r20, r24
    469c:	4b 5c       	subi	r20, 0xCB	; 203
    469e:	5f 4f       	sbci	r21, 0xFF	; 255
    46a0:	8d 81       	ldd	r24, Y+5	; 0x05
    46a2:	9e 81       	ldd	r25, Y+6	; 0x06
    46a4:	9e 01       	movw	r18, r28
    46a6:	2d 5f       	subi	r18, 0xFD	; 253
    46a8:	3f 4f       	sbci	r19, 0xFF	; 255
    46aa:	b9 01       	movw	r22, r18
    46ac:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, XIntegral);
    46b0:	8d 81       	ldd	r24, Y+5	; 0x05
    46b2:	9e 81       	ldd	r25, Y+6	; 0x06
    46b4:	ac 01       	movw	r20, r24
    46b6:	47 5c       	subi	r20, 0xC7	; 199
    46b8:	5f 4f       	sbci	r21, 0xFF	; 255
    46ba:	8d 81       	ldd	r24, Y+5	; 0x05
    46bc:	9e 81       	ldd	r25, Y+6	; 0x06
    46be:	9e 01       	movw	r18, r28
    46c0:	2d 5f       	subi	r18, 0xFD	; 253
    46c2:	3f 4f       	sbci	r19, 0xFF	; 255
    46c4:	b9 01       	movw	r22, r18
    46c6:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, XProportional);
    46ca:	8d 81       	ldd	r24, Y+5	; 0x05
    46cc:	9e 81       	ldd	r25, Y+6	; 0x06
    46ce:	ac 01       	movw	r20, r24
    46d0:	43 5c       	subi	r20, 0xC3	; 195
    46d2:	5f 4f       	sbci	r21, 0xFF	; 255
    46d4:	8d 81       	ldd	r24, Y+5	; 0x05
    46d6:	9e 81       	ldd	r25, Y+6	; 0x06
    46d8:	9e 01       	movw	r18, r28
    46da:	2d 5f       	subi	r18, 0xFD	; 253
    46dc:	3f 4f       	sbci	r19, 0xFF	; 255
    46de:	b9 01       	movw	r22, r18
    46e0:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, XDerivativeError);
    46e4:	8d 81       	ldd	r24, Y+5	; 0x05
    46e6:	9e 81       	ldd	r25, Y+6	; 0x06
    46e8:	ac 01       	movw	r20, r24
    46ea:	4f 5b       	subi	r20, 0xBF	; 191
    46ec:	5f 4f       	sbci	r21, 0xFF	; 255
    46ee:	8d 81       	ldd	r24, Y+5	; 0x05
    46f0:	9e 81       	ldd	r25, Y+6	; 0x06
    46f2:	9e 01       	movw	r18, r28
    46f4:	2d 5f       	subi	r18, 0xFD	; 253
    46f6:	3f 4f       	sbci	r19, 0xFF	; 255
    46f8:	b9 01       	movw	r22, r18
    46fa:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, LongitudeControl);
    46fe:	8d 81       	ldd	r24, Y+5	; 0x05
    4700:	9e 81       	ldd	r25, Y+6	; 0x06
    4702:	ac 01       	movw	r20, r24
    4704:	4b 5b       	subi	r20, 0xBB	; 187
    4706:	5f 4f       	sbci	r21, 0xFF	; 255
    4708:	8d 81       	ldd	r24, Y+5	; 0x05
    470a:	9e 81       	ldd	r25, Y+6	; 0x06
    470c:	9e 01       	movw	r18, r28
    470e:	2d 5f       	subi	r18, 0xFD	; 253
    4710:	3f 4f       	sbci	r19, 0xFF	; 255
    4712:	b9 01       	movw	r22, r18
    4714:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, XIntegralGain);
    4718:	8d 81       	ldd	r24, Y+5	; 0x05
    471a:	9e 81       	ldd	r25, Y+6	; 0x06
    471c:	ac 01       	movw	r20, r24
    471e:	47 5b       	subi	r20, 0xB7	; 183
    4720:	5f 4f       	sbci	r21, 0xFF	; 255
    4722:	8d 81       	ldd	r24, Y+5	; 0x05
    4724:	9e 81       	ldd	r25, Y+6	; 0x06
    4726:	9e 01       	movw	r18, r28
    4728:	2d 5f       	subi	r18, 0xFD	; 253
    472a:	3f 4f       	sbci	r19, 0xFF	; 255
    472c:	b9 01       	movw	r22, r18
    472e:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, XDerivativeGain);
    4732:	8d 81       	ldd	r24, Y+5	; 0x05
    4734:	9e 81       	ldd	r25, Y+6	; 0x06
    4736:	ac 01       	movw	r20, r24
    4738:	43 5b       	subi	r20, 0xB3	; 179
    473a:	5f 4f       	sbci	r21, 0xFF	; 255
    473c:	8d 81       	ldd	r24, Y+5	; 0x05
    473e:	9e 81       	ldd	r25, Y+6	; 0x06
    4740:	9e 01       	movw	r18, r28
    4742:	2d 5f       	subi	r18, 0xFD	; 253
    4744:	3f 4f       	sbci	r19, 0xFF	; 255
    4746:	b9 01       	movw	r22, r18
    4748:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, XProportionalGain);
    474c:	8d 81       	ldd	r24, Y+5	; 0x05
    474e:	9e 81       	ldd	r25, Y+6	; 0x06
    4750:	ac 01       	movw	r20, r24
    4752:	4f 5a       	subi	r20, 0xAF	; 175
    4754:	5f 4f       	sbci	r21, 0xFF	; 255
    4756:	8d 81       	ldd	r24, Y+5	; 0x05
    4758:	9e 81       	ldd	r25, Y+6	; 0x06
    475a:	9e 01       	movw	r18, r28
    475c:	2d 5f       	subi	r18, 0xFD	; 253
    475e:	3f 4f       	sbci	r19, 0xFF	; 255
    4760:	b9 01       	movw	r22, r18
    4762:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, XAntiWindupGain);	
    4766:	8d 81       	ldd	r24, Y+5	; 0x05
    4768:	9e 81       	ldd	r25, Y+6	; 0x06
    476a:	ac 01       	movw	r20, r24
    476c:	4b 5a       	subi	r20, 0xAB	; 171
    476e:	5f 4f       	sbci	r21, 0xFF	; 255
    4770:	8d 81       	ldd	r24, Y+5	; 0x05
    4772:	9e 81       	ldd	r25, Y+6	; 0x06
    4774:	9e 01       	movw	r18, r28
    4776:	2d 5f       	subi	r18, 0xFD	; 253
    4778:	3f 4f       	sbci	r19, 0xFF	; 255
    477a:	b9 01       	movw	r22, r18
    477c:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, LongitudeInnerLoopGain);	
    4780:	8d 81       	ldd	r24, Y+5	; 0x05
    4782:	9e 81       	ldd	r25, Y+6	; 0x06
    4784:	ac 01       	movw	r20, r24
    4786:	47 5a       	subi	r20, 0xA7	; 167
    4788:	5f 4f       	sbci	r21, 0xFF	; 255
    478a:	8d 81       	ldd	r24, Y+5	; 0x05
    478c:	9e 81       	ldd	r25, Y+6	; 0x06
    478e:	9e 01       	movw	r18, r28
    4790:	2d 5f       	subi	r18, 0xFD	; 253
    4792:	3f 4f       	sbci	r19, 0xFF	; 255
    4794:	b9 01       	movw	r22, r18
    4796:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	
	encode (msgPtr, YNEDBodyFrame);
    479a:	8d 81       	ldd	r24, Y+5	; 0x05
    479c:	9e 81       	ldd	r25, Y+6	; 0x06
    479e:	ac 01       	movw	r20, r24
    47a0:	43 5a       	subi	r20, 0xA3	; 163
    47a2:	5f 4f       	sbci	r21, 0xFF	; 255
    47a4:	8d 81       	ldd	r24, Y+5	; 0x05
    47a6:	9e 81       	ldd	r25, Y+6	; 0x06
    47a8:	9e 01       	movw	r18, r28
    47aa:	2d 5f       	subi	r18, 0xFD	; 253
    47ac:	3f 4f       	sbci	r19, 0xFF	; 255
    47ae:	b9 01       	movw	r22, r18
    47b0:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YVelocityMetersPerSecond);
    47b4:	8d 81       	ldd	r24, Y+5	; 0x05
    47b6:	9e 81       	ldd	r25, Y+6	; 0x06
    47b8:	ac 01       	movw	r20, r24
    47ba:	4f 59       	subi	r20, 0x9F	; 159
    47bc:	5f 4f       	sbci	r21, 0xFF	; 255
    47be:	8d 81       	ldd	r24, Y+5	; 0x05
    47c0:	9e 81       	ldd	r25, Y+6	; 0x06
    47c2:	9e 01       	movw	r18, r28
    47c4:	2d 5f       	subi	r18, 0xFD	; 253
    47c6:	3f 4f       	sbci	r19, 0xFF	; 255
    47c8:	b9 01       	movw	r22, r18
    47ca:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, PhiRollDegrees);
    47ce:	8d 81       	ldd	r24, Y+5	; 0x05
    47d0:	9e 81       	ldd	r25, Y+6	; 0x06
    47d2:	ac 01       	movw	r20, r24
    47d4:	4b 59       	subi	r20, 0x9B	; 155
    47d6:	5f 4f       	sbci	r21, 0xFF	; 255
    47d8:	8d 81       	ldd	r24, Y+5	; 0x05
    47da:	9e 81       	ldd	r25, Y+6	; 0x06
    47dc:	9e 01       	movw	r18, r28
    47de:	2d 5f       	subi	r18, 0xFD	; 253
    47e0:	3f 4f       	sbci	r19, 0xFF	; 255
    47e2:	b9 01       	movw	r22, r18
    47e4:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YIntegral);
    47e8:	8d 81       	ldd	r24, Y+5	; 0x05
    47ea:	9e 81       	ldd	r25, Y+6	; 0x06
    47ec:	ac 01       	movw	r20, r24
    47ee:	47 59       	subi	r20, 0x97	; 151
    47f0:	5f 4f       	sbci	r21, 0xFF	; 255
    47f2:	8d 81       	ldd	r24, Y+5	; 0x05
    47f4:	9e 81       	ldd	r25, Y+6	; 0x06
    47f6:	9e 01       	movw	r18, r28
    47f8:	2d 5f       	subi	r18, 0xFD	; 253
    47fa:	3f 4f       	sbci	r19, 0xFF	; 255
    47fc:	b9 01       	movw	r22, r18
    47fe:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YProportional);
    4802:	8d 81       	ldd	r24, Y+5	; 0x05
    4804:	9e 81       	ldd	r25, Y+6	; 0x06
    4806:	ac 01       	movw	r20, r24
    4808:	43 59       	subi	r20, 0x93	; 147
    480a:	5f 4f       	sbci	r21, 0xFF	; 255
    480c:	8d 81       	ldd	r24, Y+5	; 0x05
    480e:	9e 81       	ldd	r25, Y+6	; 0x06
    4810:	9e 01       	movw	r18, r28
    4812:	2d 5f       	subi	r18, 0xFD	; 253
    4814:	3f 4f       	sbci	r19, 0xFF	; 255
    4816:	b9 01       	movw	r22, r18
    4818:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YDerivativeError);
    481c:	8d 81       	ldd	r24, Y+5	; 0x05
    481e:	9e 81       	ldd	r25, Y+6	; 0x06
    4820:	ac 01       	movw	r20, r24
    4822:	4f 58       	subi	r20, 0x8F	; 143
    4824:	5f 4f       	sbci	r21, 0xFF	; 255
    4826:	8d 81       	ldd	r24, Y+5	; 0x05
    4828:	9e 81       	ldd	r25, Y+6	; 0x06
    482a:	9e 01       	movw	r18, r28
    482c:	2d 5f       	subi	r18, 0xFD	; 253
    482e:	3f 4f       	sbci	r19, 0xFF	; 255
    4830:	b9 01       	movw	r22, r18
    4832:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, LateralControl);
    4836:	8d 81       	ldd	r24, Y+5	; 0x05
    4838:	9e 81       	ldd	r25, Y+6	; 0x06
    483a:	ac 01       	movw	r20, r24
    483c:	4b 58       	subi	r20, 0x8B	; 139
    483e:	5f 4f       	sbci	r21, 0xFF	; 255
    4840:	8d 81       	ldd	r24, Y+5	; 0x05
    4842:	9e 81       	ldd	r25, Y+6	; 0x06
    4844:	9e 01       	movw	r18, r28
    4846:	2d 5f       	subi	r18, 0xFD	; 253
    4848:	3f 4f       	sbci	r19, 0xFF	; 255
    484a:	b9 01       	movw	r22, r18
    484c:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YIntegralGain);
    4850:	8d 81       	ldd	r24, Y+5	; 0x05
    4852:	9e 81       	ldd	r25, Y+6	; 0x06
    4854:	ac 01       	movw	r20, r24
    4856:	47 58       	subi	r20, 0x87	; 135
    4858:	5f 4f       	sbci	r21, 0xFF	; 255
    485a:	8d 81       	ldd	r24, Y+5	; 0x05
    485c:	9e 81       	ldd	r25, Y+6	; 0x06
    485e:	9e 01       	movw	r18, r28
    4860:	2d 5f       	subi	r18, 0xFD	; 253
    4862:	3f 4f       	sbci	r19, 0xFF	; 255
    4864:	b9 01       	movw	r22, r18
    4866:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YDerivativeGain);
    486a:	8d 81       	ldd	r24, Y+5	; 0x05
    486c:	9e 81       	ldd	r25, Y+6	; 0x06
    486e:	ac 01       	movw	r20, r24
    4870:	43 58       	subi	r20, 0x83	; 131
    4872:	5f 4f       	sbci	r21, 0xFF	; 255
    4874:	8d 81       	ldd	r24, Y+5	; 0x05
    4876:	9e 81       	ldd	r25, Y+6	; 0x06
    4878:	9e 01       	movw	r18, r28
    487a:	2d 5f       	subi	r18, 0xFD	; 253
    487c:	3f 4f       	sbci	r19, 0xFF	; 255
    487e:	b9 01       	movw	r22, r18
    4880:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YProportionalGain);
    4884:	8d 81       	ldd	r24, Y+5	; 0x05
    4886:	9e 81       	ldd	r25, Y+6	; 0x06
    4888:	ac 01       	movw	r20, r24
    488a:	4f 57       	subi	r20, 0x7F	; 127
    488c:	5f 4f       	sbci	r21, 0xFF	; 255
    488e:	8d 81       	ldd	r24, Y+5	; 0x05
    4890:	9e 81       	ldd	r25, Y+6	; 0x06
    4892:	9e 01       	movw	r18, r28
    4894:	2d 5f       	subi	r18, 0xFD	; 253
    4896:	3f 4f       	sbci	r19, 0xFF	; 255
    4898:	b9 01       	movw	r22, r18
    489a:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, YAntiWindupGain);
    489e:	8d 81       	ldd	r24, Y+5	; 0x05
    48a0:	9e 81       	ldd	r25, Y+6	; 0x06
    48a2:	ac 01       	movw	r20, r24
    48a4:	4b 57       	subi	r20, 0x7B	; 123
    48a6:	5f 4f       	sbci	r21, 0xFF	; 255
    48a8:	8d 81       	ldd	r24, Y+5	; 0x05
    48aa:	9e 81       	ldd	r25, Y+6	; 0x06
    48ac:	9e 01       	movw	r18, r28
    48ae:	2d 5f       	subi	r18, 0xFD	; 253
    48b0:	3f 4f       	sbci	r19, 0xFF	; 255
    48b2:	b9 01       	movw	r22, r18
    48b4:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, LateralInnerLoopGain);	
    48b8:	8d 81       	ldd	r24, Y+5	; 0x05
    48ba:	9e 81       	ldd	r25, Y+6	; 0x06
    48bc:	ac 01       	movw	r20, r24
    48be:	47 57       	subi	r20, 0x77	; 119
    48c0:	5f 4f       	sbci	r21, 0xFF	; 255
    48c2:	8d 81       	ldd	r24, Y+5	; 0x05
    48c4:	9e 81       	ldd	r25, Y+6	; 0x06
    48c6:	9e 01       	movw	r18, r28
    48c8:	2d 5f       	subi	r18, 0xFD	; 253
    48ca:	3f 4f       	sbci	r19, 0xFF	; 255
    48cc:	b9 01       	movw	r22, r18
    48ce:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	
	

	encode (msgPtr, AltitudeFeetAgl);
    48d2:	8d 81       	ldd	r24, Y+5	; 0x05
    48d4:	9e 81       	ldd	r25, Y+6	; 0x06
    48d6:	ac 01       	movw	r20, r24
    48d8:	43 57       	subi	r20, 0x73	; 115
    48da:	5f 4f       	sbci	r21, 0xFF	; 255
    48dc:	8d 81       	ldd	r24, Y+5	; 0x05
    48de:	9e 81       	ldd	r25, Y+6	; 0x06
    48e0:	9e 01       	movw	r18, r28
    48e2:	2d 5f       	subi	r18, 0xFD	; 253
    48e4:	3f 4f       	sbci	r19, 0xFF	; 255
    48e6:	b9 01       	movw	r22, r18
    48e8:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, ZVelocityMetersPerSecond);
    48ec:	8d 81       	ldd	r24, Y+5	; 0x05
    48ee:	9e 81       	ldd	r25, Y+6	; 0x06
    48f0:	ac 01       	movw	r20, r24
    48f2:	4f 56       	subi	r20, 0x6F	; 111
    48f4:	5f 4f       	sbci	r21, 0xFF	; 255
    48f6:	8d 81       	ldd	r24, Y+5	; 0x05
    48f8:	9e 81       	ldd	r25, Y+6	; 0x06
    48fa:	9e 01       	movw	r18, r28
    48fc:	2d 5f       	subi	r18, 0xFD	; 253
    48fe:	3f 4f       	sbci	r19, 0xFF	; 255
    4900:	b9 01       	movw	r22, r18
    4902:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, ZIntegral);
    4906:	8d 81       	ldd	r24, Y+5	; 0x05
    4908:	9e 81       	ldd	r25, Y+6	; 0x06
    490a:	ac 01       	movw	r20, r24
    490c:	4b 56       	subi	r20, 0x6B	; 107
    490e:	5f 4f       	sbci	r21, 0xFF	; 255
    4910:	8d 81       	ldd	r24, Y+5	; 0x05
    4912:	9e 81       	ldd	r25, Y+6	; 0x06
    4914:	9e 01       	movw	r18, r28
    4916:	2d 5f       	subi	r18, 0xFD	; 253
    4918:	3f 4f       	sbci	r19, 0xFF	; 255
    491a:	b9 01       	movw	r22, r18
    491c:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, ZProportional);
    4920:	8d 81       	ldd	r24, Y+5	; 0x05
    4922:	9e 81       	ldd	r25, Y+6	; 0x06
    4924:	ac 01       	movw	r20, r24
    4926:	47 56       	subi	r20, 0x67	; 103
    4928:	5f 4f       	sbci	r21, 0xFF	; 255
    492a:	8d 81       	ldd	r24, Y+5	; 0x05
    492c:	9e 81       	ldd	r25, Y+6	; 0x06
    492e:	9e 01       	movw	r18, r28
    4930:	2d 5f       	subi	r18, 0xFD	; 253
    4932:	3f 4f       	sbci	r19, 0xFF	; 255
    4934:	b9 01       	movw	r22, r18
    4936:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, ZDerivativeError);
    493a:	8d 81       	ldd	r24, Y+5	; 0x05
    493c:	9e 81       	ldd	r25, Y+6	; 0x06
    493e:	ac 01       	movw	r20, r24
    4940:	43 56       	subi	r20, 0x63	; 99
    4942:	5f 4f       	sbci	r21, 0xFF	; 255
    4944:	8d 81       	ldd	r24, Y+5	; 0x05
    4946:	9e 81       	ldd	r25, Y+6	; 0x06
    4948:	9e 01       	movw	r18, r28
    494a:	2d 5f       	subi	r18, 0xFD	; 253
    494c:	3f 4f       	sbci	r19, 0xFF	; 255
    494e:	b9 01       	movw	r22, r18
    4950:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, MainRotorCollectiveControl);
    4954:	8d 81       	ldd	r24, Y+5	; 0x05
    4956:	9e 81       	ldd	r25, Y+6	; 0x06
    4958:	ac 01       	movw	r20, r24
    495a:	4f 55       	subi	r20, 0x5F	; 95
    495c:	5f 4f       	sbci	r21, 0xFF	; 255
    495e:	8d 81       	ldd	r24, Y+5	; 0x05
    4960:	9e 81       	ldd	r25, Y+6	; 0x06
    4962:	9e 01       	movw	r18, r28
    4964:	2d 5f       	subi	r18, 0xFD	; 253
    4966:	3f 4f       	sbci	r19, 0xFF	; 255
    4968:	b9 01       	movw	r22, r18
    496a:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, ZIntegralGain);
    496e:	8d 81       	ldd	r24, Y+5	; 0x05
    4970:	9e 81       	ldd	r25, Y+6	; 0x06
    4972:	ac 01       	movw	r20, r24
    4974:	4b 55       	subi	r20, 0x5B	; 91
    4976:	5f 4f       	sbci	r21, 0xFF	; 255
    4978:	8d 81       	ldd	r24, Y+5	; 0x05
    497a:	9e 81       	ldd	r25, Y+6	; 0x06
    497c:	9e 01       	movw	r18, r28
    497e:	2d 5f       	subi	r18, 0xFD	; 253
    4980:	3f 4f       	sbci	r19, 0xFF	; 255
    4982:	b9 01       	movw	r22, r18
    4984:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, ZDerivativeGain);
    4988:	8d 81       	ldd	r24, Y+5	; 0x05
    498a:	9e 81       	ldd	r25, Y+6	; 0x06
    498c:	ac 01       	movw	r20, r24
    498e:	47 55       	subi	r20, 0x57	; 87
    4990:	5f 4f       	sbci	r21, 0xFF	; 255
    4992:	8d 81       	ldd	r24, Y+5	; 0x05
    4994:	9e 81       	ldd	r25, Y+6	; 0x06
    4996:	9e 01       	movw	r18, r28
    4998:	2d 5f       	subi	r18, 0xFD	; 253
    499a:	3f 4f       	sbci	r19, 0xFF	; 255
    499c:	b9 01       	movw	r22, r18
    499e:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, ZProportionalGain);
    49a2:	8d 81       	ldd	r24, Y+5	; 0x05
    49a4:	9e 81       	ldd	r25, Y+6	; 0x06
    49a6:	ac 01       	movw	r20, r24
    49a8:	43 55       	subi	r20, 0x53	; 83
    49aa:	5f 4f       	sbci	r21, 0xFF	; 255
    49ac:	8d 81       	ldd	r24, Y+5	; 0x05
    49ae:	9e 81       	ldd	r25, Y+6	; 0x06
    49b0:	9e 01       	movw	r18, r28
    49b2:	2d 5f       	subi	r18, 0xFD	; 253
    49b4:	3f 4f       	sbci	r19, 0xFF	; 255
    49b6:	b9 01       	movw	r22, r18
    49b8:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, ZAntiWindupGain);
    49bc:	8d 81       	ldd	r24, Y+5	; 0x05
    49be:	9e 81       	ldd	r25, Y+6	; 0x06
    49c0:	ac 01       	movw	r20, r24
    49c2:	4f 54       	subi	r20, 0x4F	; 79
    49c4:	5f 4f       	sbci	r21, 0xFF	; 255
    49c6:	8d 81       	ldd	r24, Y+5	; 0x05
    49c8:	9e 81       	ldd	r25, Y+6	; 0x06
    49ca:	9e 01       	movw	r18, r28
    49cc:	2d 5f       	subi	r18, 0xFD	; 253
    49ce:	3f 4f       	sbci	r19, 0xFF	; 255
    49d0:	b9 01       	movw	r22, r18
    49d2:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
		
	
	encode(msgPtr, LatitudeDegrees);
    49d6:	8d 81       	ldd	r24, Y+5	; 0x05
    49d8:	9e 81       	ldd	r25, Y+6	; 0x06
    49da:	ac 01       	movw	r20, r24
    49dc:	4b 54       	subi	r20, 0x4B	; 75
    49de:	5f 4f       	sbci	r21, 0xFF	; 255
    49e0:	8d 81       	ldd	r24, Y+5	; 0x05
    49e2:	9e 81       	ldd	r25, Y+6	; 0x06
    49e4:	9e 01       	movw	r18, r28
    49e6:	2d 5f       	subi	r18, 0xFD	; 253
    49e8:	3f 4f       	sbci	r19, 0xFF	; 255
    49ea:	b9 01       	movw	r22, r18
    49ec:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode(msgPtr, LongitudeDegrees);
    49f0:	8d 81       	ldd	r24, Y+5	; 0x05
    49f2:	9e 81       	ldd	r25, Y+6	; 0x06
    49f4:	ac 01       	movw	r20, r24
    49f6:	47 54       	subi	r20, 0x47	; 71
    49f8:	5f 4f       	sbci	r21, 0xFF	; 255
    49fa:	8d 81       	ldd	r24, Y+5	; 0x05
    49fc:	9e 81       	ldd	r25, Y+6	; 0x06
    49fe:	9e 01       	movw	r18, r28
    4a00:	2d 5f       	subi	r18, 0xFD	; 253
    4a02:	3f 4f       	sbci	r19, 0xFF	; 255
    4a04:	b9 01       	movw	r22, r18
    4a06:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	
	encode (msgPtr, Timeouts);
    4a0a:	8d 81       	ldd	r24, Y+5	; 0x05
    4a0c:	9e 81       	ldd	r25, Y+6	; 0x06
    4a0e:	ac 01       	movw	r20, r24
    4a10:	43 54       	subi	r20, 0x43	; 67
    4a12:	5f 4f       	sbci	r21, 0xFF	; 255
    4a14:	8d 81       	ldd	r24, Y+5	; 0x05
    4a16:	9e 81       	ldd	r25, Y+6	; 0x06
    4a18:	9e 01       	movw	r18, r28
    4a1a:	2d 5f       	subi	r18, 0xFD	; 253
    4a1c:	3f 4f       	sbci	r19, 0xFF	; 255
    4a1e:	b9 01       	movw	r22, r18
    4a20:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, UnrecognizedMsgTypes);
    4a24:	8d 81       	ldd	r24, Y+5	; 0x05
    4a26:	9e 81       	ldd	r25, Y+6	; 0x06
    4a28:	ac 01       	movw	r20, r24
    4a2a:	4f 53       	subi	r20, 0x3F	; 63
    4a2c:	5f 4f       	sbci	r21, 0xFF	; 255
    4a2e:	8d 81       	ldd	r24, Y+5	; 0x05
    4a30:	9e 81       	ldd	r25, Y+6	; 0x06
    4a32:	9e 01       	movw	r18, r28
    4a34:	2d 5f       	subi	r18, 0xFD	; 253
    4a36:	3f 4f       	sbci	r19, 0xFF	; 255
    4a38:	b9 01       	movw	r22, r18
    4a3a:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, ChecksumErrors);
    4a3e:	8d 81       	ldd	r24, Y+5	; 0x05
    4a40:	9e 81       	ldd	r25, Y+6	; 0x06
    4a42:	ac 01       	movw	r20, r24
    4a44:	4b 53       	subi	r20, 0x3B	; 59
    4a46:	5f 4f       	sbci	r21, 0xFF	; 255
    4a48:	8d 81       	ldd	r24, Y+5	; 0x05
    4a4a:	9e 81       	ldd	r25, Y+6	; 0x06
    4a4c:	9e 01       	movw	r18, r28
    4a4e:	2d 5f       	subi	r18, 0xFD	; 253
    4a50:	3f 4f       	sbci	r19, 0xFF	; 255
    4a52:	b9 01       	movw	r22, r18
    4a54:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, NumOfBlownFrames);
    4a58:	8d 81       	ldd	r24, Y+5	; 0x05
    4a5a:	9e 81       	ldd	r25, Y+6	; 0x06
    4a5c:	ac 01       	movw	r20, r24
    4a5e:	47 53       	subi	r20, 0x37	; 55
    4a60:	5f 4f       	sbci	r21, 0xFF	; 255
    4a62:	8d 81       	ldd	r24, Y+5	; 0x05
    4a64:	9e 81       	ldd	r25, Y+6	; 0x06
    4a66:	9e 01       	movw	r18, r28
    4a68:	2d 5f       	subi	r18, 0xFD	; 253
    4a6a:	3f 4f       	sbci	r19, 0xFF	; 255
    4a6c:	b9 01       	movw	r22, r18
    4a6e:	0e 94 c5 1c 	call	0x398a	; 0x398a <_ZN10helicopter8messages7Message6encodeERPhRl>
				
	return msg;
    4a72:	89 81       	ldd	r24, Y+1	; 0x01
    4a74:	9a 81       	ldd	r25, Y+2	; 0x02
}
    4a76:	26 96       	adiw	r28, 0x06	; 6
    4a78:	0f b6       	in	r0, 0x3f	; 63
    4a7a:	f8 94       	cli
    4a7c:	de bf       	out	0x3e, r29	; 62
    4a7e:	0f be       	out	0x3f, r0	; 63
    4a80:	cd bf       	out	0x3d, r28	; 61
    4a82:	df 91       	pop	r29
    4a84:	cf 91       	pop	r28
    4a86:	08 95       	ret

00004a88 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh>:

void SystemTelemetryMessage::buildMessage(byte *message)
{
    4a88:	cf 93       	push	r28
    4a8a:	df 93       	push	r29
    4a8c:	00 d0       	rcall	.+0      	; 0x4a8e <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x6>
    4a8e:	1f 92       	push	r1
    4a90:	cd b7       	in	r28, 0x3d	; 61
    4a92:	de b7       	in	r29, 0x3e	; 62
    4a94:	9a 83       	std	Y+2, r25	; 0x02
    4a96:	89 83       	std	Y+1, r24	; 0x01
    4a98:	7c 83       	std	Y+4, r23	; 0x04
    4a9a:	6b 83       	std	Y+3, r22	; 0x03
	if (message != NULL)
    4a9c:	8b 81       	ldd	r24, Y+3	; 0x03
    4a9e:	9c 81       	ldd	r25, Y+4	; 0x04
    4aa0:	00 97       	sbiw	r24, 0x00	; 0
    4aa2:	09 f4       	brne	.+2      	; 0x4aa6 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x1e>
    4aa4:	97 c2       	rjmp	.+1326   	; 0x4fd4 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x54c>
	{
		decode (message,msgType);
    4aa6:	89 81       	ldd	r24, Y+1	; 0x01
    4aa8:	9a 81       	ldd	r25, Y+2	; 0x02
    4aaa:	ac 01       	movw	r20, r24
    4aac:	4e 5f       	subi	r20, 0xFE	; 254
    4aae:	5f 4f       	sbci	r21, 0xFF	; 255
    4ab0:	89 81       	ldd	r24, Y+1	; 0x01
    4ab2:	9a 81       	ldd	r25, Y+2	; 0x02
    4ab4:	9e 01       	movw	r18, r28
    4ab6:	2d 5f       	subi	r18, 0xFD	; 253
    4ab8:	3f 4f       	sbci	r19, 0xFF	; 255
    4aba:	b9 01       	movw	r22, r18
    4abc:	0e 94 4e 1d 	call	0x3a9c	; 0x3a9c <_ZN10helicopter8messages7Message6decodeERPhRh>
		decode (message,MagYaw);
    4ac0:	89 81       	ldd	r24, Y+1	; 0x01
    4ac2:	9a 81       	ldd	r25, Y+2	; 0x02
    4ac4:	ac 01       	movw	r20, r24
    4ac6:	4b 5f       	subi	r20, 0xFB	; 251
    4ac8:	5f 4f       	sbci	r21, 0xFF	; 255
    4aca:	89 81       	ldd	r24, Y+1	; 0x01
    4acc:	9a 81       	ldd	r25, Y+2	; 0x02
    4ace:	9e 01       	movw	r18, r28
    4ad0:	2d 5f       	subi	r18, 0xFD	; 253
    4ad2:	3f 4f       	sbci	r19, 0xFF	; 255
    4ad4:	b9 01       	movw	r22, r18
    4ad6:	0e 94 a9 1d 	call	0x3b52	; 0x3b52 <_ZN10helicopter8messages7Message6decodeERPhRm>
		decode (message, YawVelocityDegreesPerSecond);
    4ada:	89 81       	ldd	r24, Y+1	; 0x01
    4adc:	9a 81       	ldd	r25, Y+2	; 0x02
    4ade:	ac 01       	movw	r20, r24
    4ae0:	47 5f       	subi	r20, 0xF7	; 247
    4ae2:	5f 4f       	sbci	r21, 0xFF	; 255
    4ae4:	89 81       	ldd	r24, Y+1	; 0x01
    4ae6:	9a 81       	ldd	r25, Y+2	; 0x02
    4ae8:	9e 01       	movw	r18, r28
    4aea:	2d 5f       	subi	r18, 0xFD	; 253
    4aec:	3f 4f       	sbci	r19, 0xFF	; 255
    4aee:	b9 01       	movw	r22, r18
    4af0:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YawIntegral);
    4af4:	89 81       	ldd	r24, Y+1	; 0x01
    4af6:	9a 81       	ldd	r25, Y+2	; 0x02
    4af8:	ac 01       	movw	r20, r24
    4afa:	43 5f       	subi	r20, 0xF3	; 243
    4afc:	5f 4f       	sbci	r21, 0xFF	; 255
    4afe:	89 81       	ldd	r24, Y+1	; 0x01
    4b00:	9a 81       	ldd	r25, Y+2	; 0x02
    4b02:	9e 01       	movw	r18, r28
    4b04:	2d 5f       	subi	r18, 0xFD	; 253
    4b06:	3f 4f       	sbci	r19, 0xFF	; 255
    4b08:	b9 01       	movw	r22, r18
    4b0a:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YawProportional);
    4b0e:	89 81       	ldd	r24, Y+1	; 0x01
    4b10:	9a 81       	ldd	r25, Y+2	; 0x02
    4b12:	ac 01       	movw	r20, r24
    4b14:	4f 5e       	subi	r20, 0xEF	; 239
    4b16:	5f 4f       	sbci	r21, 0xFF	; 255
    4b18:	89 81       	ldd	r24, Y+1	; 0x01
    4b1a:	9a 81       	ldd	r25, Y+2	; 0x02
    4b1c:	9e 01       	movw	r18, r28
    4b1e:	2d 5f       	subi	r18, 0xFD	; 253
    4b20:	3f 4f       	sbci	r19, 0xFF	; 255
    4b22:	b9 01       	movw	r22, r18
    4b24:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YawDerivativeError);	
    4b28:	89 81       	ldd	r24, Y+1	; 0x01
    4b2a:	9a 81       	ldd	r25, Y+2	; 0x02
    4b2c:	ac 01       	movw	r20, r24
    4b2e:	4b 5e       	subi	r20, 0xEB	; 235
    4b30:	5f 4f       	sbci	r21, 0xFF	; 255
    4b32:	89 81       	ldd	r24, Y+1	; 0x01
    4b34:	9a 81       	ldd	r25, Y+2	; 0x02
    4b36:	9e 01       	movw	r18, r28
    4b38:	2d 5f       	subi	r18, 0xFD	; 253
    4b3a:	3f 4f       	sbci	r19, 0xFF	; 255
    4b3c:	b9 01       	movw	r22, r18
    4b3e:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YawControl);	
    4b42:	89 81       	ldd	r24, Y+1	; 0x01
    4b44:	9a 81       	ldd	r25, Y+2	; 0x02
    4b46:	ac 01       	movw	r20, r24
    4b48:	47 5e       	subi	r20, 0xE7	; 231
    4b4a:	5f 4f       	sbci	r21, 0xFF	; 255
    4b4c:	89 81       	ldd	r24, Y+1	; 0x01
    4b4e:	9a 81       	ldd	r25, Y+2	; 0x02
    4b50:	9e 01       	movw	r18, r28
    4b52:	2d 5f       	subi	r18, 0xFD	; 253
    4b54:	3f 4f       	sbci	r19, 0xFF	; 255
    4b56:	b9 01       	movw	r22, r18
    4b58:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YawIntegralGain);
    4b5c:	89 81       	ldd	r24, Y+1	; 0x01
    4b5e:	9a 81       	ldd	r25, Y+2	; 0x02
    4b60:	ac 01       	movw	r20, r24
    4b62:	43 5e       	subi	r20, 0xE3	; 227
    4b64:	5f 4f       	sbci	r21, 0xFF	; 255
    4b66:	89 81       	ldd	r24, Y+1	; 0x01
    4b68:	9a 81       	ldd	r25, Y+2	; 0x02
    4b6a:	9e 01       	movw	r18, r28
    4b6c:	2d 5f       	subi	r18, 0xFD	; 253
    4b6e:	3f 4f       	sbci	r19, 0xFF	; 255
    4b70:	b9 01       	movw	r22, r18
    4b72:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YawDerivativeGain);
    4b76:	89 81       	ldd	r24, Y+1	; 0x01
    4b78:	9a 81       	ldd	r25, Y+2	; 0x02
    4b7a:	ac 01       	movw	r20, r24
    4b7c:	4f 5d       	subi	r20, 0xDF	; 223
    4b7e:	5f 4f       	sbci	r21, 0xFF	; 255
    4b80:	89 81       	ldd	r24, Y+1	; 0x01
    4b82:	9a 81       	ldd	r25, Y+2	; 0x02
    4b84:	9e 01       	movw	r18, r28
    4b86:	2d 5f       	subi	r18, 0xFD	; 253
    4b88:	3f 4f       	sbci	r19, 0xFF	; 255
    4b8a:	b9 01       	movw	r22, r18
    4b8c:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YawProportionalGain);
    4b90:	89 81       	ldd	r24, Y+1	; 0x01
    4b92:	9a 81       	ldd	r25, Y+2	; 0x02
    4b94:	ac 01       	movw	r20, r24
    4b96:	4b 5d       	subi	r20, 0xDB	; 219
    4b98:	5f 4f       	sbci	r21, 0xFF	; 255
    4b9a:	89 81       	ldd	r24, Y+1	; 0x01
    4b9c:	9a 81       	ldd	r25, Y+2	; 0x02
    4b9e:	9e 01       	movw	r18, r28
    4ba0:	2d 5f       	subi	r18, 0xFD	; 253
    4ba2:	3f 4f       	sbci	r19, 0xFF	; 255
    4ba4:	b9 01       	movw	r22, r18
    4ba6:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YawAntiWindupGain);
    4baa:	89 81       	ldd	r24, Y+1	; 0x01
    4bac:	9a 81       	ldd	r25, Y+2	; 0x02
    4bae:	ac 01       	movw	r20, r24
    4bb0:	47 5d       	subi	r20, 0xD7	; 215
    4bb2:	5f 4f       	sbci	r21, 0xFF	; 255
    4bb4:	89 81       	ldd	r24, Y+1	; 0x01
    4bb6:	9a 81       	ldd	r25, Y+2	; 0x02
    4bb8:	9e 01       	movw	r18, r28
    4bba:	2d 5f       	subi	r18, 0xFD	; 253
    4bbc:	3f 4f       	sbci	r19, 0xFF	; 255
    4bbe:	b9 01       	movw	r22, r18
    4bc0:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		
		
		

		decode (message, XNEDBodyFrame);
    4bc4:	89 81       	ldd	r24, Y+1	; 0x01
    4bc6:	9a 81       	ldd	r25, Y+2	; 0x02
    4bc8:	ac 01       	movw	r20, r24
    4bca:	43 5d       	subi	r20, 0xD3	; 211
    4bcc:	5f 4f       	sbci	r21, 0xFF	; 255
    4bce:	89 81       	ldd	r24, Y+1	; 0x01
    4bd0:	9a 81       	ldd	r25, Y+2	; 0x02
    4bd2:	9e 01       	movw	r18, r28
    4bd4:	2d 5f       	subi	r18, 0xFD	; 253
    4bd6:	3f 4f       	sbci	r19, 0xFF	; 255
    4bd8:	b9 01       	movw	r22, r18
    4bda:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, XVelocityMetersPerSecond);
    4bde:	89 81       	ldd	r24, Y+1	; 0x01
    4be0:	9a 81       	ldd	r25, Y+2	; 0x02
    4be2:	ac 01       	movw	r20, r24
    4be4:	4f 5c       	subi	r20, 0xCF	; 207
    4be6:	5f 4f       	sbci	r21, 0xFF	; 255
    4be8:	89 81       	ldd	r24, Y+1	; 0x01
    4bea:	9a 81       	ldd	r25, Y+2	; 0x02
    4bec:	9e 01       	movw	r18, r28
    4bee:	2d 5f       	subi	r18, 0xFD	; 253
    4bf0:	3f 4f       	sbci	r19, 0xFF	; 255
    4bf2:	b9 01       	movw	r22, r18
    4bf4:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, ThetaPitchDegrees);
    4bf8:	89 81       	ldd	r24, Y+1	; 0x01
    4bfa:	9a 81       	ldd	r25, Y+2	; 0x02
    4bfc:	ac 01       	movw	r20, r24
    4bfe:	4b 5c       	subi	r20, 0xCB	; 203
    4c00:	5f 4f       	sbci	r21, 0xFF	; 255
    4c02:	89 81       	ldd	r24, Y+1	; 0x01
    4c04:	9a 81       	ldd	r25, Y+2	; 0x02
    4c06:	9e 01       	movw	r18, r28
    4c08:	2d 5f       	subi	r18, 0xFD	; 253
    4c0a:	3f 4f       	sbci	r19, 0xFF	; 255
    4c0c:	b9 01       	movw	r22, r18
    4c0e:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, XIntegral);
    4c12:	89 81       	ldd	r24, Y+1	; 0x01
    4c14:	9a 81       	ldd	r25, Y+2	; 0x02
    4c16:	ac 01       	movw	r20, r24
    4c18:	47 5c       	subi	r20, 0xC7	; 199
    4c1a:	5f 4f       	sbci	r21, 0xFF	; 255
    4c1c:	89 81       	ldd	r24, Y+1	; 0x01
    4c1e:	9a 81       	ldd	r25, Y+2	; 0x02
    4c20:	9e 01       	movw	r18, r28
    4c22:	2d 5f       	subi	r18, 0xFD	; 253
    4c24:	3f 4f       	sbci	r19, 0xFF	; 255
    4c26:	b9 01       	movw	r22, r18
    4c28:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, XProportional);
    4c2c:	89 81       	ldd	r24, Y+1	; 0x01
    4c2e:	9a 81       	ldd	r25, Y+2	; 0x02
    4c30:	ac 01       	movw	r20, r24
    4c32:	43 5c       	subi	r20, 0xC3	; 195
    4c34:	5f 4f       	sbci	r21, 0xFF	; 255
    4c36:	89 81       	ldd	r24, Y+1	; 0x01
    4c38:	9a 81       	ldd	r25, Y+2	; 0x02
    4c3a:	9e 01       	movw	r18, r28
    4c3c:	2d 5f       	subi	r18, 0xFD	; 253
    4c3e:	3f 4f       	sbci	r19, 0xFF	; 255
    4c40:	b9 01       	movw	r22, r18
    4c42:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, XDerivativeError);
    4c46:	89 81       	ldd	r24, Y+1	; 0x01
    4c48:	9a 81       	ldd	r25, Y+2	; 0x02
    4c4a:	ac 01       	movw	r20, r24
    4c4c:	4f 5b       	subi	r20, 0xBF	; 191
    4c4e:	5f 4f       	sbci	r21, 0xFF	; 255
    4c50:	89 81       	ldd	r24, Y+1	; 0x01
    4c52:	9a 81       	ldd	r25, Y+2	; 0x02
    4c54:	9e 01       	movw	r18, r28
    4c56:	2d 5f       	subi	r18, 0xFD	; 253
    4c58:	3f 4f       	sbci	r19, 0xFF	; 255
    4c5a:	b9 01       	movw	r22, r18
    4c5c:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, LongitudeControl);
    4c60:	89 81       	ldd	r24, Y+1	; 0x01
    4c62:	9a 81       	ldd	r25, Y+2	; 0x02
    4c64:	ac 01       	movw	r20, r24
    4c66:	4b 5b       	subi	r20, 0xBB	; 187
    4c68:	5f 4f       	sbci	r21, 0xFF	; 255
    4c6a:	89 81       	ldd	r24, Y+1	; 0x01
    4c6c:	9a 81       	ldd	r25, Y+2	; 0x02
    4c6e:	9e 01       	movw	r18, r28
    4c70:	2d 5f       	subi	r18, 0xFD	; 253
    4c72:	3f 4f       	sbci	r19, 0xFF	; 255
    4c74:	b9 01       	movw	r22, r18
    4c76:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, XIntegralGain);
    4c7a:	89 81       	ldd	r24, Y+1	; 0x01
    4c7c:	9a 81       	ldd	r25, Y+2	; 0x02
    4c7e:	ac 01       	movw	r20, r24
    4c80:	47 5b       	subi	r20, 0xB7	; 183
    4c82:	5f 4f       	sbci	r21, 0xFF	; 255
    4c84:	89 81       	ldd	r24, Y+1	; 0x01
    4c86:	9a 81       	ldd	r25, Y+2	; 0x02
    4c88:	9e 01       	movw	r18, r28
    4c8a:	2d 5f       	subi	r18, 0xFD	; 253
    4c8c:	3f 4f       	sbci	r19, 0xFF	; 255
    4c8e:	b9 01       	movw	r22, r18
    4c90:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, XDerivativeGain);
    4c94:	89 81       	ldd	r24, Y+1	; 0x01
    4c96:	9a 81       	ldd	r25, Y+2	; 0x02
    4c98:	ac 01       	movw	r20, r24
    4c9a:	43 5b       	subi	r20, 0xB3	; 179
    4c9c:	5f 4f       	sbci	r21, 0xFF	; 255
    4c9e:	89 81       	ldd	r24, Y+1	; 0x01
    4ca0:	9a 81       	ldd	r25, Y+2	; 0x02
    4ca2:	9e 01       	movw	r18, r28
    4ca4:	2d 5f       	subi	r18, 0xFD	; 253
    4ca6:	3f 4f       	sbci	r19, 0xFF	; 255
    4ca8:	b9 01       	movw	r22, r18
    4caa:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, XProportionalGain);
    4cae:	89 81       	ldd	r24, Y+1	; 0x01
    4cb0:	9a 81       	ldd	r25, Y+2	; 0x02
    4cb2:	ac 01       	movw	r20, r24
    4cb4:	4f 5a       	subi	r20, 0xAF	; 175
    4cb6:	5f 4f       	sbci	r21, 0xFF	; 255
    4cb8:	89 81       	ldd	r24, Y+1	; 0x01
    4cba:	9a 81       	ldd	r25, Y+2	; 0x02
    4cbc:	9e 01       	movw	r18, r28
    4cbe:	2d 5f       	subi	r18, 0xFD	; 253
    4cc0:	3f 4f       	sbci	r19, 0xFF	; 255
    4cc2:	b9 01       	movw	r22, r18
    4cc4:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, XAntiWindupGain);
    4cc8:	89 81       	ldd	r24, Y+1	; 0x01
    4cca:	9a 81       	ldd	r25, Y+2	; 0x02
    4ccc:	ac 01       	movw	r20, r24
    4cce:	4b 5a       	subi	r20, 0xAB	; 171
    4cd0:	5f 4f       	sbci	r21, 0xFF	; 255
    4cd2:	89 81       	ldd	r24, Y+1	; 0x01
    4cd4:	9a 81       	ldd	r25, Y+2	; 0x02
    4cd6:	9e 01       	movw	r18, r28
    4cd8:	2d 5f       	subi	r18, 0xFD	; 253
    4cda:	3f 4f       	sbci	r19, 0xFF	; 255
    4cdc:	b9 01       	movw	r22, r18
    4cde:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, LongitudeInnerLoopGain);
    4ce2:	89 81       	ldd	r24, Y+1	; 0x01
    4ce4:	9a 81       	ldd	r25, Y+2	; 0x02
    4ce6:	ac 01       	movw	r20, r24
    4ce8:	47 5a       	subi	r20, 0xA7	; 167
    4cea:	5f 4f       	sbci	r21, 0xFF	; 255
    4cec:	89 81       	ldd	r24, Y+1	; 0x01
    4cee:	9a 81       	ldd	r25, Y+2	; 0x02
    4cf0:	9e 01       	movw	r18, r28
    4cf2:	2d 5f       	subi	r18, 0xFD	; 253
    4cf4:	3f 4f       	sbci	r19, 0xFF	; 255
    4cf6:	b9 01       	movw	r22, r18
    4cf8:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>

		decode (message, YNEDBodyFrame);
    4cfc:	89 81       	ldd	r24, Y+1	; 0x01
    4cfe:	9a 81       	ldd	r25, Y+2	; 0x02
    4d00:	ac 01       	movw	r20, r24
    4d02:	43 5a       	subi	r20, 0xA3	; 163
    4d04:	5f 4f       	sbci	r21, 0xFF	; 255
    4d06:	89 81       	ldd	r24, Y+1	; 0x01
    4d08:	9a 81       	ldd	r25, Y+2	; 0x02
    4d0a:	9e 01       	movw	r18, r28
    4d0c:	2d 5f       	subi	r18, 0xFD	; 253
    4d0e:	3f 4f       	sbci	r19, 0xFF	; 255
    4d10:	b9 01       	movw	r22, r18
    4d12:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YVelocityMetersPerSecond);
    4d16:	89 81       	ldd	r24, Y+1	; 0x01
    4d18:	9a 81       	ldd	r25, Y+2	; 0x02
    4d1a:	ac 01       	movw	r20, r24
    4d1c:	4f 59       	subi	r20, 0x9F	; 159
    4d1e:	5f 4f       	sbci	r21, 0xFF	; 255
    4d20:	89 81       	ldd	r24, Y+1	; 0x01
    4d22:	9a 81       	ldd	r25, Y+2	; 0x02
    4d24:	9e 01       	movw	r18, r28
    4d26:	2d 5f       	subi	r18, 0xFD	; 253
    4d28:	3f 4f       	sbci	r19, 0xFF	; 255
    4d2a:	b9 01       	movw	r22, r18
    4d2c:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, PhiRollDegrees);
    4d30:	89 81       	ldd	r24, Y+1	; 0x01
    4d32:	9a 81       	ldd	r25, Y+2	; 0x02
    4d34:	ac 01       	movw	r20, r24
    4d36:	4b 59       	subi	r20, 0x9B	; 155
    4d38:	5f 4f       	sbci	r21, 0xFF	; 255
    4d3a:	89 81       	ldd	r24, Y+1	; 0x01
    4d3c:	9a 81       	ldd	r25, Y+2	; 0x02
    4d3e:	9e 01       	movw	r18, r28
    4d40:	2d 5f       	subi	r18, 0xFD	; 253
    4d42:	3f 4f       	sbci	r19, 0xFF	; 255
    4d44:	b9 01       	movw	r22, r18
    4d46:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YIntegral);
    4d4a:	89 81       	ldd	r24, Y+1	; 0x01
    4d4c:	9a 81       	ldd	r25, Y+2	; 0x02
    4d4e:	ac 01       	movw	r20, r24
    4d50:	47 59       	subi	r20, 0x97	; 151
    4d52:	5f 4f       	sbci	r21, 0xFF	; 255
    4d54:	89 81       	ldd	r24, Y+1	; 0x01
    4d56:	9a 81       	ldd	r25, Y+2	; 0x02
    4d58:	9e 01       	movw	r18, r28
    4d5a:	2d 5f       	subi	r18, 0xFD	; 253
    4d5c:	3f 4f       	sbci	r19, 0xFF	; 255
    4d5e:	b9 01       	movw	r22, r18
    4d60:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YProportional);
    4d64:	89 81       	ldd	r24, Y+1	; 0x01
    4d66:	9a 81       	ldd	r25, Y+2	; 0x02
    4d68:	ac 01       	movw	r20, r24
    4d6a:	43 59       	subi	r20, 0x93	; 147
    4d6c:	5f 4f       	sbci	r21, 0xFF	; 255
    4d6e:	89 81       	ldd	r24, Y+1	; 0x01
    4d70:	9a 81       	ldd	r25, Y+2	; 0x02
    4d72:	9e 01       	movw	r18, r28
    4d74:	2d 5f       	subi	r18, 0xFD	; 253
    4d76:	3f 4f       	sbci	r19, 0xFF	; 255
    4d78:	b9 01       	movw	r22, r18
    4d7a:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YDerivativeError);
    4d7e:	89 81       	ldd	r24, Y+1	; 0x01
    4d80:	9a 81       	ldd	r25, Y+2	; 0x02
    4d82:	ac 01       	movw	r20, r24
    4d84:	4f 58       	subi	r20, 0x8F	; 143
    4d86:	5f 4f       	sbci	r21, 0xFF	; 255
    4d88:	89 81       	ldd	r24, Y+1	; 0x01
    4d8a:	9a 81       	ldd	r25, Y+2	; 0x02
    4d8c:	9e 01       	movw	r18, r28
    4d8e:	2d 5f       	subi	r18, 0xFD	; 253
    4d90:	3f 4f       	sbci	r19, 0xFF	; 255
    4d92:	b9 01       	movw	r22, r18
    4d94:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, LateralControl);
    4d98:	89 81       	ldd	r24, Y+1	; 0x01
    4d9a:	9a 81       	ldd	r25, Y+2	; 0x02
    4d9c:	ac 01       	movw	r20, r24
    4d9e:	4b 58       	subi	r20, 0x8B	; 139
    4da0:	5f 4f       	sbci	r21, 0xFF	; 255
    4da2:	89 81       	ldd	r24, Y+1	; 0x01
    4da4:	9a 81       	ldd	r25, Y+2	; 0x02
    4da6:	9e 01       	movw	r18, r28
    4da8:	2d 5f       	subi	r18, 0xFD	; 253
    4daa:	3f 4f       	sbci	r19, 0xFF	; 255
    4dac:	b9 01       	movw	r22, r18
    4dae:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YIntegralGain);
    4db2:	89 81       	ldd	r24, Y+1	; 0x01
    4db4:	9a 81       	ldd	r25, Y+2	; 0x02
    4db6:	ac 01       	movw	r20, r24
    4db8:	47 58       	subi	r20, 0x87	; 135
    4dba:	5f 4f       	sbci	r21, 0xFF	; 255
    4dbc:	89 81       	ldd	r24, Y+1	; 0x01
    4dbe:	9a 81       	ldd	r25, Y+2	; 0x02
    4dc0:	9e 01       	movw	r18, r28
    4dc2:	2d 5f       	subi	r18, 0xFD	; 253
    4dc4:	3f 4f       	sbci	r19, 0xFF	; 255
    4dc6:	b9 01       	movw	r22, r18
    4dc8:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YDerivativeGain);
    4dcc:	89 81       	ldd	r24, Y+1	; 0x01
    4dce:	9a 81       	ldd	r25, Y+2	; 0x02
    4dd0:	ac 01       	movw	r20, r24
    4dd2:	43 58       	subi	r20, 0x83	; 131
    4dd4:	5f 4f       	sbci	r21, 0xFF	; 255
    4dd6:	89 81       	ldd	r24, Y+1	; 0x01
    4dd8:	9a 81       	ldd	r25, Y+2	; 0x02
    4dda:	9e 01       	movw	r18, r28
    4ddc:	2d 5f       	subi	r18, 0xFD	; 253
    4dde:	3f 4f       	sbci	r19, 0xFF	; 255
    4de0:	b9 01       	movw	r22, r18
    4de2:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YProportionalGain);
    4de6:	89 81       	ldd	r24, Y+1	; 0x01
    4de8:	9a 81       	ldd	r25, Y+2	; 0x02
    4dea:	ac 01       	movw	r20, r24
    4dec:	4f 57       	subi	r20, 0x7F	; 127
    4dee:	5f 4f       	sbci	r21, 0xFF	; 255
    4df0:	89 81       	ldd	r24, Y+1	; 0x01
    4df2:	9a 81       	ldd	r25, Y+2	; 0x02
    4df4:	9e 01       	movw	r18, r28
    4df6:	2d 5f       	subi	r18, 0xFD	; 253
    4df8:	3f 4f       	sbci	r19, 0xFF	; 255
    4dfa:	b9 01       	movw	r22, r18
    4dfc:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, YAntiWindupGain);
    4e00:	89 81       	ldd	r24, Y+1	; 0x01
    4e02:	9a 81       	ldd	r25, Y+2	; 0x02
    4e04:	ac 01       	movw	r20, r24
    4e06:	4b 57       	subi	r20, 0x7B	; 123
    4e08:	5f 4f       	sbci	r21, 0xFF	; 255
    4e0a:	89 81       	ldd	r24, Y+1	; 0x01
    4e0c:	9a 81       	ldd	r25, Y+2	; 0x02
    4e0e:	9e 01       	movw	r18, r28
    4e10:	2d 5f       	subi	r18, 0xFD	; 253
    4e12:	3f 4f       	sbci	r19, 0xFF	; 255
    4e14:	b9 01       	movw	r22, r18
    4e16:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, LateralInnerLoopGain);
    4e1a:	89 81       	ldd	r24, Y+1	; 0x01
    4e1c:	9a 81       	ldd	r25, Y+2	; 0x02
    4e1e:	ac 01       	movw	r20, r24
    4e20:	47 57       	subi	r20, 0x77	; 119
    4e22:	5f 4f       	sbci	r21, 0xFF	; 255
    4e24:	89 81       	ldd	r24, Y+1	; 0x01
    4e26:	9a 81       	ldd	r25, Y+2	; 0x02
    4e28:	9e 01       	movw	r18, r28
    4e2a:	2d 5f       	subi	r18, 0xFD	; 253
    4e2c:	3f 4f       	sbci	r19, 0xFF	; 255
    4e2e:	b9 01       	movw	r22, r18
    4e30:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>

		decode (message, AltitudeFeetAgl);
    4e34:	89 81       	ldd	r24, Y+1	; 0x01
    4e36:	9a 81       	ldd	r25, Y+2	; 0x02
    4e38:	ac 01       	movw	r20, r24
    4e3a:	43 57       	subi	r20, 0x73	; 115
    4e3c:	5f 4f       	sbci	r21, 0xFF	; 255
    4e3e:	89 81       	ldd	r24, Y+1	; 0x01
    4e40:	9a 81       	ldd	r25, Y+2	; 0x02
    4e42:	9e 01       	movw	r18, r28
    4e44:	2d 5f       	subi	r18, 0xFD	; 253
    4e46:	3f 4f       	sbci	r19, 0xFF	; 255
    4e48:	b9 01       	movw	r22, r18
    4e4a:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, ZVelocityMetersPerSecond);
    4e4e:	89 81       	ldd	r24, Y+1	; 0x01
    4e50:	9a 81       	ldd	r25, Y+2	; 0x02
    4e52:	ac 01       	movw	r20, r24
    4e54:	4f 56       	subi	r20, 0x6F	; 111
    4e56:	5f 4f       	sbci	r21, 0xFF	; 255
    4e58:	89 81       	ldd	r24, Y+1	; 0x01
    4e5a:	9a 81       	ldd	r25, Y+2	; 0x02
    4e5c:	9e 01       	movw	r18, r28
    4e5e:	2d 5f       	subi	r18, 0xFD	; 253
    4e60:	3f 4f       	sbci	r19, 0xFF	; 255
    4e62:	b9 01       	movw	r22, r18
    4e64:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, ZIntegral);
    4e68:	89 81       	ldd	r24, Y+1	; 0x01
    4e6a:	9a 81       	ldd	r25, Y+2	; 0x02
    4e6c:	ac 01       	movw	r20, r24
    4e6e:	4b 56       	subi	r20, 0x6B	; 107
    4e70:	5f 4f       	sbci	r21, 0xFF	; 255
    4e72:	89 81       	ldd	r24, Y+1	; 0x01
    4e74:	9a 81       	ldd	r25, Y+2	; 0x02
    4e76:	9e 01       	movw	r18, r28
    4e78:	2d 5f       	subi	r18, 0xFD	; 253
    4e7a:	3f 4f       	sbci	r19, 0xFF	; 255
    4e7c:	b9 01       	movw	r22, r18
    4e7e:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, ZProportional);
    4e82:	89 81       	ldd	r24, Y+1	; 0x01
    4e84:	9a 81       	ldd	r25, Y+2	; 0x02
    4e86:	ac 01       	movw	r20, r24
    4e88:	47 56       	subi	r20, 0x67	; 103
    4e8a:	5f 4f       	sbci	r21, 0xFF	; 255
    4e8c:	89 81       	ldd	r24, Y+1	; 0x01
    4e8e:	9a 81       	ldd	r25, Y+2	; 0x02
    4e90:	9e 01       	movw	r18, r28
    4e92:	2d 5f       	subi	r18, 0xFD	; 253
    4e94:	3f 4f       	sbci	r19, 0xFF	; 255
    4e96:	b9 01       	movw	r22, r18
    4e98:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, ZDerivativeError);
    4e9c:	89 81       	ldd	r24, Y+1	; 0x01
    4e9e:	9a 81       	ldd	r25, Y+2	; 0x02
    4ea0:	ac 01       	movw	r20, r24
    4ea2:	43 56       	subi	r20, 0x63	; 99
    4ea4:	5f 4f       	sbci	r21, 0xFF	; 255
    4ea6:	89 81       	ldd	r24, Y+1	; 0x01
    4ea8:	9a 81       	ldd	r25, Y+2	; 0x02
    4eaa:	9e 01       	movw	r18, r28
    4eac:	2d 5f       	subi	r18, 0xFD	; 253
    4eae:	3f 4f       	sbci	r19, 0xFF	; 255
    4eb0:	b9 01       	movw	r22, r18
    4eb2:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, MainRotorCollectiveControl);
    4eb6:	89 81       	ldd	r24, Y+1	; 0x01
    4eb8:	9a 81       	ldd	r25, Y+2	; 0x02
    4eba:	ac 01       	movw	r20, r24
    4ebc:	4f 55       	subi	r20, 0x5F	; 95
    4ebe:	5f 4f       	sbci	r21, 0xFF	; 255
    4ec0:	89 81       	ldd	r24, Y+1	; 0x01
    4ec2:	9a 81       	ldd	r25, Y+2	; 0x02
    4ec4:	9e 01       	movw	r18, r28
    4ec6:	2d 5f       	subi	r18, 0xFD	; 253
    4ec8:	3f 4f       	sbci	r19, 0xFF	; 255
    4eca:	b9 01       	movw	r22, r18
    4ecc:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, ZIntegralGain);
    4ed0:	89 81       	ldd	r24, Y+1	; 0x01
    4ed2:	9a 81       	ldd	r25, Y+2	; 0x02
    4ed4:	ac 01       	movw	r20, r24
    4ed6:	4b 55       	subi	r20, 0x5B	; 91
    4ed8:	5f 4f       	sbci	r21, 0xFF	; 255
    4eda:	89 81       	ldd	r24, Y+1	; 0x01
    4edc:	9a 81       	ldd	r25, Y+2	; 0x02
    4ede:	9e 01       	movw	r18, r28
    4ee0:	2d 5f       	subi	r18, 0xFD	; 253
    4ee2:	3f 4f       	sbci	r19, 0xFF	; 255
    4ee4:	b9 01       	movw	r22, r18
    4ee6:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, ZDerivativeGain);
    4eea:	89 81       	ldd	r24, Y+1	; 0x01
    4eec:	9a 81       	ldd	r25, Y+2	; 0x02
    4eee:	ac 01       	movw	r20, r24
    4ef0:	47 55       	subi	r20, 0x57	; 87
    4ef2:	5f 4f       	sbci	r21, 0xFF	; 255
    4ef4:	89 81       	ldd	r24, Y+1	; 0x01
    4ef6:	9a 81       	ldd	r25, Y+2	; 0x02
    4ef8:	9e 01       	movw	r18, r28
    4efa:	2d 5f       	subi	r18, 0xFD	; 253
    4efc:	3f 4f       	sbci	r19, 0xFF	; 255
    4efe:	b9 01       	movw	r22, r18
    4f00:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, ZProportionalGain);
    4f04:	89 81       	ldd	r24, Y+1	; 0x01
    4f06:	9a 81       	ldd	r25, Y+2	; 0x02
    4f08:	ac 01       	movw	r20, r24
    4f0a:	43 55       	subi	r20, 0x53	; 83
    4f0c:	5f 4f       	sbci	r21, 0xFF	; 255
    4f0e:	89 81       	ldd	r24, Y+1	; 0x01
    4f10:	9a 81       	ldd	r25, Y+2	; 0x02
    4f12:	9e 01       	movw	r18, r28
    4f14:	2d 5f       	subi	r18, 0xFD	; 253
    4f16:	3f 4f       	sbci	r19, 0xFF	; 255
    4f18:	b9 01       	movw	r22, r18
    4f1a:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, ZAntiWindupGain);
    4f1e:	89 81       	ldd	r24, Y+1	; 0x01
    4f20:	9a 81       	ldd	r25, Y+2	; 0x02
    4f22:	ac 01       	movw	r20, r24
    4f24:	4f 54       	subi	r20, 0x4F	; 79
    4f26:	5f 4f       	sbci	r21, 0xFF	; 255
    4f28:	89 81       	ldd	r24, Y+1	; 0x01
    4f2a:	9a 81       	ldd	r25, Y+2	; 0x02
    4f2c:	9e 01       	movw	r18, r28
    4f2e:	2d 5f       	subi	r18, 0xFD	; 253
    4f30:	3f 4f       	sbci	r19, 0xFF	; 255
    4f32:	b9 01       	movw	r22, r18
    4f34:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		
	
		decode (message, LatitudeDegrees);
    4f38:	89 81       	ldd	r24, Y+1	; 0x01
    4f3a:	9a 81       	ldd	r25, Y+2	; 0x02
    4f3c:	ac 01       	movw	r20, r24
    4f3e:	4b 54       	subi	r20, 0x4B	; 75
    4f40:	5f 4f       	sbci	r21, 0xFF	; 255
    4f42:	89 81       	ldd	r24, Y+1	; 0x01
    4f44:	9a 81       	ldd	r25, Y+2	; 0x02
    4f46:	9e 01       	movw	r18, r28
    4f48:	2d 5f       	subi	r18, 0xFD	; 253
    4f4a:	3f 4f       	sbci	r19, 0xFF	; 255
    4f4c:	b9 01       	movw	r22, r18
    4f4e:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, LongitudeDegrees);
    4f52:	89 81       	ldd	r24, Y+1	; 0x01
    4f54:	9a 81       	ldd	r25, Y+2	; 0x02
    4f56:	ac 01       	movw	r20, r24
    4f58:	47 54       	subi	r20, 0x47	; 71
    4f5a:	5f 4f       	sbci	r21, 0xFF	; 255
    4f5c:	89 81       	ldd	r24, Y+1	; 0x01
    4f5e:	9a 81       	ldd	r25, Y+2	; 0x02
    4f60:	9e 01       	movw	r18, r28
    4f62:	2d 5f       	subi	r18, 0xFD	; 253
    4f64:	3f 4f       	sbci	r19, 0xFF	; 255
    4f66:	b9 01       	movw	r22, r18
    4f68:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
						
		decode (message,Timeouts);
    4f6c:	89 81       	ldd	r24, Y+1	; 0x01
    4f6e:	9a 81       	ldd	r25, Y+2	; 0x02
    4f70:	ac 01       	movw	r20, r24
    4f72:	43 54       	subi	r20, 0x43	; 67
    4f74:	5f 4f       	sbci	r21, 0xFF	; 255
    4f76:	89 81       	ldd	r24, Y+1	; 0x01
    4f78:	9a 81       	ldd	r25, Y+2	; 0x02
    4f7a:	9e 01       	movw	r18, r28
    4f7c:	2d 5f       	subi	r18, 0xFD	; 253
    4f7e:	3f 4f       	sbci	r19, 0xFF	; 255
    4f80:	b9 01       	movw	r22, r18
    4f82:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message,UnrecognizedMsgTypes);
    4f86:	89 81       	ldd	r24, Y+1	; 0x01
    4f88:	9a 81       	ldd	r25, Y+2	; 0x02
    4f8a:	ac 01       	movw	r20, r24
    4f8c:	4f 53       	subi	r20, 0x3F	; 63
    4f8e:	5f 4f       	sbci	r21, 0xFF	; 255
    4f90:	89 81       	ldd	r24, Y+1	; 0x01
    4f92:	9a 81       	ldd	r25, Y+2	; 0x02
    4f94:	9e 01       	movw	r18, r28
    4f96:	2d 5f       	subi	r18, 0xFD	; 253
    4f98:	3f 4f       	sbci	r19, 0xFF	; 255
    4f9a:	b9 01       	movw	r22, r18
    4f9c:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message,ChecksumErrors);
    4fa0:	89 81       	ldd	r24, Y+1	; 0x01
    4fa2:	9a 81       	ldd	r25, Y+2	; 0x02
    4fa4:	ac 01       	movw	r20, r24
    4fa6:	4b 53       	subi	r20, 0x3B	; 59
    4fa8:	5f 4f       	sbci	r21, 0xFF	; 255
    4faa:	89 81       	ldd	r24, Y+1	; 0x01
    4fac:	9a 81       	ldd	r25, Y+2	; 0x02
    4fae:	9e 01       	movw	r18, r28
    4fb0:	2d 5f       	subi	r18, 0xFD	; 253
    4fb2:	3f 4f       	sbci	r19, 0xFF	; 255
    4fb4:	b9 01       	movw	r22, r18
    4fb6:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message,NumOfBlownFrames);
    4fba:	89 81       	ldd	r24, Y+1	; 0x01
    4fbc:	9a 81       	ldd	r25, Y+2	; 0x02
    4fbe:	ac 01       	movw	r20, r24
    4fc0:	47 53       	subi	r20, 0x37	; 55
    4fc2:	5f 4f       	sbci	r21, 0xFF	; 255
    4fc4:	89 81       	ldd	r24, Y+1	; 0x01
    4fc6:	9a 81       	ldd	r25, Y+2	; 0x02
    4fc8:	9e 01       	movw	r18, r28
    4fca:	2d 5f       	subi	r18, 0xFD	; 253
    4fcc:	3f 4f       	sbci	r19, 0xFF	; 255
    4fce:	b9 01       	movw	r22, r18
    4fd0:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <_ZN10helicopter8messages7Message6decodeERPhRl>
	}
}
    4fd4:	0f 90       	pop	r0
    4fd6:	0f 90       	pop	r0
    4fd8:	0f 90       	pop	r0
    4fda:	0f 90       	pop	r0
    4fdc:	df 91       	pop	r29
    4fde:	cf 91       	pop	r28
    4fe0:	08 95       	ret

00004fe2 <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh>:

SystemTelemetryMessage* SystemTelemetryMessage::buildMessageSt(byte *message)
{
    4fe2:	0f 93       	push	r16
    4fe4:	1f 93       	push	r17
    4fe6:	cf 93       	push	r28
    4fe8:	df 93       	push	r29
    4fea:	00 d0       	rcall	.+0      	; 0x4fec <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh+0xa>
    4fec:	1f 92       	push	r1
    4fee:	cd b7       	in	r28, 0x3d	; 61
    4ff0:	de b7       	in	r29, 0x3e	; 62
    4ff2:	9c 83       	std	Y+4, r25	; 0x04
    4ff4:	8b 83       	std	Y+3, r24	; 0x03
	SystemTelemetryMessage *msg = new SystemTelemetryMessage();
    4ff6:	8d ec       	ldi	r24, 0xCD	; 205
    4ff8:	90 e0       	ldi	r25, 0x00	; 0
    4ffa:	0e 94 13 39 	call	0x7226	; 0x7226 <_Znwj>
    4ffe:	8c 01       	movw	r16, r24
    5000:	c8 01       	movw	r24, r16
    5002:	0e 94 99 20 	call	0x4132	; 0x4132 <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>
    5006:	1a 83       	std	Y+2, r17	; 0x02
    5008:	09 83       	std	Y+1, r16	; 0x01
	msg->buildMessage(message);
    500a:	89 81       	ldd	r24, Y+1	; 0x01
    500c:	9a 81       	ldd	r25, Y+2	; 0x02
    500e:	fc 01       	movw	r30, r24
    5010:	80 81       	ld	r24, Z
    5012:	91 81       	ldd	r25, Z+1	; 0x01
    5014:	06 96       	adiw	r24, 0x06	; 6
    5016:	fc 01       	movw	r30, r24
    5018:	20 81       	ld	r18, Z
    501a:	31 81       	ldd	r19, Z+1	; 0x01
    501c:	4b 81       	ldd	r20, Y+3	; 0x03
    501e:	5c 81       	ldd	r21, Y+4	; 0x04
    5020:	89 81       	ldd	r24, Y+1	; 0x01
    5022:	9a 81       	ldd	r25, Y+2	; 0x02
    5024:	ba 01       	movw	r22, r20
    5026:	f9 01       	movw	r30, r18
    5028:	19 95       	eicall
	
	return msg;
    502a:	89 81       	ldd	r24, Y+1	; 0x01
    502c:	9a 81       	ldd	r25, Y+2	; 0x02
}
    502e:	0f 90       	pop	r0
    5030:	0f 90       	pop	r0
    5032:	0f 90       	pop	r0
    5034:	0f 90       	pop	r0
    5036:	df 91       	pop	r29
    5038:	cf 91       	pop	r28
    503a:	1f 91       	pop	r17
    503c:	0f 91       	pop	r16
    503e:	08 95       	ret

00005040 <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE>:

SystemTelemetryMessage * SystemTelemetryMessage::buildMessageFromModel(SystemModel *model)
{
    5040:	0f 93       	push	r16
    5042:	1f 93       	push	r17
    5044:	cf 93       	push	r28
    5046:	df 93       	push	r29
    5048:	00 d0       	rcall	.+0      	; 0x504a <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE+0xa>
    504a:	1f 92       	push	r1
    504c:	cd b7       	in	r28, 0x3d	; 61
    504e:	de b7       	in	r29, 0x3e	; 62
    5050:	9c 83       	std	Y+4, r25	; 0x04
    5052:	8b 83       	std	Y+3, r24	; 0x03
	//throw std::exception("The method or operation is not implemented.");
	SystemTelemetryMessage *message = new SystemTelemetryMessage();
    5054:	8d ec       	ldi	r24, 0xCD	; 205
    5056:	90 e0       	ldi	r25, 0x00	; 0
    5058:	0e 94 13 39 	call	0x7226	; 0x7226 <_Znwj>
    505c:	8c 01       	movw	r16, r24
    505e:	c8 01       	movw	r24, r16
    5060:	0e 94 99 20 	call	0x4132	; 0x4132 <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>
    5064:	1a 83       	std	Y+2, r17	; 0x02
    5066:	09 83       	std	Y+1, r16	; 0x01
	
	message->MagYaw = model->MagYawDegrees() * 100;
    5068:	8b 81       	ldd	r24, Y+3	; 0x03
    506a:	9c 81       	ldd	r25, Y+4	; 0x04
    506c:	0e 94 3d 01 	call	0x27a	; 0x27a <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>
    5070:	dc 01       	movw	r26, r24
    5072:	cb 01       	movw	r24, r22
    5074:	20 e0       	ldi	r18, 0x00	; 0
    5076:	30 e0       	ldi	r19, 0x00	; 0
    5078:	48 ec       	ldi	r20, 0xC8	; 200
    507a:	52 e4       	ldi	r21, 0x42	; 66
    507c:	bc 01       	movw	r22, r24
    507e:	cd 01       	movw	r24, r26
    5080:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    5084:	dc 01       	movw	r26, r24
    5086:	cb 01       	movw	r24, r22
    5088:	bc 01       	movw	r22, r24
    508a:	cd 01       	movw	r24, r26
    508c:	0e 94 ec 3f 	call	0x7fd8	; 0x7fd8 <__fixunssfsi>
    5090:	dc 01       	movw	r26, r24
    5092:	cb 01       	movw	r24, r22
    5094:	29 81       	ldd	r18, Y+1	; 0x01
    5096:	3a 81       	ldd	r19, Y+2	; 0x02
    5098:	f9 01       	movw	r30, r18
    509a:	85 83       	std	Z+5, r24	; 0x05
    509c:	96 83       	std	Z+6, r25	; 0x06
    509e:	a7 83       	std	Z+7, r26	; 0x07
    50a0:	b0 87       	std	Z+8, r27	; 0x08
	message->YawDerivativeError = model->YawDerivativeError() * 100;
    50a2:	8b 81       	ldd	r24, Y+3	; 0x03
    50a4:	9c 81       	ldd	r25, Y+4	; 0x04
    50a6:	0e 94 2d 1e 	call	0x3c5a	; 0x3c5a <_ZNK10helicopter5model11SystemModel18YawDerivativeErrorEv>
    50aa:	dc 01       	movw	r26, r24
    50ac:	cb 01       	movw	r24, r22
    50ae:	20 e0       	ldi	r18, 0x00	; 0
    50b0:	30 e0       	ldi	r19, 0x00	; 0
    50b2:	48 ec       	ldi	r20, 0xC8	; 200
    50b4:	52 e4       	ldi	r21, 0x42	; 66
    50b6:	bc 01       	movw	r22, r24
    50b8:	cd 01       	movw	r24, r26
    50ba:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    50be:	dc 01       	movw	r26, r24
    50c0:	cb 01       	movw	r24, r22
    50c2:	bc 01       	movw	r22, r24
    50c4:	cd 01       	movw	r24, r26
    50c6:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    50ca:	dc 01       	movw	r26, r24
    50cc:	cb 01       	movw	r24, r22
    50ce:	29 81       	ldd	r18, Y+1	; 0x01
    50d0:	3a 81       	ldd	r19, Y+2	; 0x02
    50d2:	f9 01       	movw	r30, r18
    50d4:	85 8b       	std	Z+21, r24	; 0x15
    50d6:	96 8b       	std	Z+22, r25	; 0x16
    50d8:	a7 8b       	std	Z+23, r26	; 0x17
    50da:	b0 8f       	std	Z+24, r27	; 0x18
	message->YawIntegral = model->YawIntegral() * 100;
    50dc:	8b 81       	ldd	r24, Y+3	; 0x03
    50de:	9c 81       	ldd	r25, Y+4	; 0x04
    50e0:	0e 94 01 02 	call	0x402	; 0x402 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>
    50e4:	dc 01       	movw	r26, r24
    50e6:	cb 01       	movw	r24, r22
    50e8:	20 e0       	ldi	r18, 0x00	; 0
    50ea:	30 e0       	ldi	r19, 0x00	; 0
    50ec:	48 ec       	ldi	r20, 0xC8	; 200
    50ee:	52 e4       	ldi	r21, 0x42	; 66
    50f0:	bc 01       	movw	r22, r24
    50f2:	cd 01       	movw	r24, r26
    50f4:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    50f8:	dc 01       	movw	r26, r24
    50fa:	cb 01       	movw	r24, r22
    50fc:	bc 01       	movw	r22, r24
    50fe:	cd 01       	movw	r24, r26
    5100:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    5104:	dc 01       	movw	r26, r24
    5106:	cb 01       	movw	r24, r22
    5108:	29 81       	ldd	r18, Y+1	; 0x01
    510a:	3a 81       	ldd	r19, Y+2	; 0x02
    510c:	f9 01       	movw	r30, r18
    510e:	85 87       	std	Z+13, r24	; 0x0d
    5110:	96 87       	std	Z+14, r25	; 0x0e
    5112:	a7 87       	std	Z+15, r26	; 0x0f
    5114:	b0 8b       	std	Z+16, r27	; 0x10
	message->YawProportional = model->YawProportional() * 100;
    5116:	8b 81       	ldd	r24, Y+3	; 0x03
    5118:	9c 81       	ldd	r25, Y+4	; 0x04
    511a:	0e 94 17 1e 	call	0x3c2e	; 0x3c2e <_ZNK10helicopter5model11SystemModel15YawProportionalEv>
    511e:	dc 01       	movw	r26, r24
    5120:	cb 01       	movw	r24, r22
    5122:	20 e0       	ldi	r18, 0x00	; 0
    5124:	30 e0       	ldi	r19, 0x00	; 0
    5126:	48 ec       	ldi	r20, 0xC8	; 200
    5128:	52 e4       	ldi	r21, 0x42	; 66
    512a:	bc 01       	movw	r22, r24
    512c:	cd 01       	movw	r24, r26
    512e:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    5132:	dc 01       	movw	r26, r24
    5134:	cb 01       	movw	r24, r22
    5136:	bc 01       	movw	r22, r24
    5138:	cd 01       	movw	r24, r26
    513a:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    513e:	dc 01       	movw	r26, r24
    5140:	cb 01       	movw	r24, r22
    5142:	29 81       	ldd	r18, Y+1	; 0x01
    5144:	3a 81       	ldd	r19, Y+2	; 0x02
    5146:	f9 01       	movw	r30, r18
    5148:	81 8b       	std	Z+17, r24	; 0x11
    514a:	92 8b       	std	Z+18, r25	; 0x12
    514c:	a3 8b       	std	Z+19, r26	; 0x13
    514e:	b4 8b       	std	Z+20, r27	; 0x14
	message->YawVelocityDegreesPerSecond = model->YawVelocityDegreesPerSecond() * 100;
    5150:	8b 81       	ldd	r24, Y+3	; 0x03
    5152:	9c 81       	ldd	r25, Y+4	; 0x04
    5154:	0e 94 d5 01 	call	0x3aa	; 0x3aa <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>
    5158:	dc 01       	movw	r26, r24
    515a:	cb 01       	movw	r24, r22
    515c:	20 e0       	ldi	r18, 0x00	; 0
    515e:	30 e0       	ldi	r19, 0x00	; 0
    5160:	48 ec       	ldi	r20, 0xC8	; 200
    5162:	52 e4       	ldi	r21, 0x42	; 66
    5164:	bc 01       	movw	r22, r24
    5166:	cd 01       	movw	r24, r26
    5168:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    516c:	dc 01       	movw	r26, r24
    516e:	cb 01       	movw	r24, r22
    5170:	bc 01       	movw	r22, r24
    5172:	cd 01       	movw	r24, r26
    5174:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    5178:	dc 01       	movw	r26, r24
    517a:	cb 01       	movw	r24, r22
    517c:	29 81       	ldd	r18, Y+1	; 0x01
    517e:	3a 81       	ldd	r19, Y+2	; 0x02
    5180:	f9 01       	movw	r30, r18
    5182:	81 87       	std	Z+9, r24	; 0x09
    5184:	92 87       	std	Z+10, r25	; 0x0a
    5186:	a3 87       	std	Z+11, r26	; 0x0b
    5188:	b4 87       	std	Z+12, r27	; 0x0c
	message->YawControl = model->YawControl() * 100;
    518a:	8b 81       	ldd	r24, Y+3	; 0x03
    518c:	9c 81       	ldd	r25, Y+4	; 0x04
    518e:	0e 94 69 01 	call	0x2d2	; 0x2d2 <_ZNK10helicopter5model11SystemModel10YawControlEv>
    5192:	dc 01       	movw	r26, r24
    5194:	cb 01       	movw	r24, r22
    5196:	20 e0       	ldi	r18, 0x00	; 0
    5198:	30 e0       	ldi	r19, 0x00	; 0
    519a:	48 ec       	ldi	r20, 0xC8	; 200
    519c:	52 e4       	ldi	r21, 0x42	; 66
    519e:	bc 01       	movw	r22, r24
    51a0:	cd 01       	movw	r24, r26
    51a2:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    51a6:	dc 01       	movw	r26, r24
    51a8:	cb 01       	movw	r24, r22
    51aa:	bc 01       	movw	r22, r24
    51ac:	cd 01       	movw	r24, r26
    51ae:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    51b2:	dc 01       	movw	r26, r24
    51b4:	cb 01       	movw	r24, r22
    51b6:	29 81       	ldd	r18, Y+1	; 0x01
    51b8:	3a 81       	ldd	r19, Y+2	; 0x02
    51ba:	f9 01       	movw	r30, r18
    51bc:	81 8f       	std	Z+25, r24	; 0x19
    51be:	92 8f       	std	Z+26, r25	; 0x1a
    51c0:	a3 8f       	std	Z+27, r26	; 0x1b
    51c2:	b4 8f       	std	Z+28, r27	; 0x1c
	

	message->XNEDBodyFrame = model->XNEDBodyFrame() * 100;
    51c4:	8b 81       	ldd	r24, Y+3	; 0x03
    51c6:	9c 81       	ldd	r25, Y+4	; 0x04
    51c8:	0e 94 77 02 	call	0x4ee	; 0x4ee <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>
    51cc:	dc 01       	movw	r26, r24
    51ce:	cb 01       	movw	r24, r22
    51d0:	20 e0       	ldi	r18, 0x00	; 0
    51d2:	30 e0       	ldi	r19, 0x00	; 0
    51d4:	48 ec       	ldi	r20, 0xC8	; 200
    51d6:	52 e4       	ldi	r21, 0x42	; 66
    51d8:	bc 01       	movw	r22, r24
    51da:	cd 01       	movw	r24, r26
    51dc:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    51e0:	dc 01       	movw	r26, r24
    51e2:	cb 01       	movw	r24, r22
    51e4:	bc 01       	movw	r22, r24
    51e6:	cd 01       	movw	r24, r26
    51e8:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    51ec:	dc 01       	movw	r26, r24
    51ee:	cb 01       	movw	r24, r22
    51f0:	29 81       	ldd	r18, Y+1	; 0x01
    51f2:	3a 81       	ldd	r19, Y+2	; 0x02
    51f4:	f9 01       	movw	r30, r18
    51f6:	85 a7       	std	Z+45, r24	; 0x2d
    51f8:	96 a7       	std	Z+46, r25	; 0x2e
    51fa:	a7 a7       	std	Z+47, r26	; 0x2f
    51fc:	b0 ab       	std	Z+48, r27	; 0x30
	message->XDerivativeError = model->XDerivativeError() * 100;
    51fe:	8b 81       	ldd	r24, Y+3	; 0x03
    5200:	9c 81       	ldd	r25, Y+4	; 0x04
    5202:	0e 94 7b 1e 	call	0x3cf6	; 0x3cf6 <_ZNK10helicopter5model11SystemModel16XDerivativeErrorEv>
    5206:	dc 01       	movw	r26, r24
    5208:	cb 01       	movw	r24, r22
    520a:	20 e0       	ldi	r18, 0x00	; 0
    520c:	30 e0       	ldi	r19, 0x00	; 0
    520e:	48 ec       	ldi	r20, 0xC8	; 200
    5210:	52 e4       	ldi	r21, 0x42	; 66
    5212:	bc 01       	movw	r22, r24
    5214:	cd 01       	movw	r24, r26
    5216:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    521a:	dc 01       	movw	r26, r24
    521c:	cb 01       	movw	r24, r22
    521e:	bc 01       	movw	r22, r24
    5220:	cd 01       	movw	r24, r26
    5222:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    5226:	dc 01       	movw	r26, r24
    5228:	cb 01       	movw	r24, r22
    522a:	29 81       	ldd	r18, Y+1	; 0x01
    522c:	3a 81       	ldd	r19, Y+2	; 0x02
    522e:	2f 5b       	subi	r18, 0xBF	; 191
    5230:	3f 4f       	sbci	r19, 0xFF	; 255
    5232:	f9 01       	movw	r30, r18
    5234:	80 83       	st	Z, r24
    5236:	91 83       	std	Z+1, r25	; 0x01
    5238:	a2 83       	std	Z+2, r26	; 0x02
    523a:	b3 83       	std	Z+3, r27	; 0x03
	message->XIntegral = model->XIntegral() * 100;
    523c:	8b 81       	ldd	r24, Y+3	; 0x03
    523e:	9c 81       	ldd	r25, Y+4	; 0x04
    5240:	0e 94 94 03 	call	0x728	; 0x728 <_ZNK10helicopter5model11SystemModel9XIntegralEv>
    5244:	dc 01       	movw	r26, r24
    5246:	cb 01       	movw	r24, r22
    5248:	20 e0       	ldi	r18, 0x00	; 0
    524a:	30 e0       	ldi	r19, 0x00	; 0
    524c:	48 ec       	ldi	r20, 0xC8	; 200
    524e:	52 e4       	ldi	r21, 0x42	; 66
    5250:	bc 01       	movw	r22, r24
    5252:	cd 01       	movw	r24, r26
    5254:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    5258:	dc 01       	movw	r26, r24
    525a:	cb 01       	movw	r24, r22
    525c:	bc 01       	movw	r22, r24
    525e:	cd 01       	movw	r24, r26
    5260:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    5264:	dc 01       	movw	r26, r24
    5266:	cb 01       	movw	r24, r22
    5268:	29 81       	ldd	r18, Y+1	; 0x01
    526a:	3a 81       	ldd	r19, Y+2	; 0x02
    526c:	f9 01       	movw	r30, r18
    526e:	81 af       	std	Z+57, r24	; 0x39
    5270:	92 af       	std	Z+58, r25	; 0x3a
    5272:	a3 af       	std	Z+59, r26	; 0x3b
    5274:	b4 af       	std	Z+60, r27	; 0x3c
	message->XProportional = model->XProportional() * 100;
    5276:	8b 81       	ldd	r24, Y+3	; 0x03
    5278:	9c 81       	ldd	r25, Y+4	; 0x04
    527a:	0e 94 63 1e 	call	0x3cc6	; 0x3cc6 <_ZNK10helicopter5model11SystemModel13XProportionalEv>
    527e:	dc 01       	movw	r26, r24
    5280:	cb 01       	movw	r24, r22
    5282:	20 e0       	ldi	r18, 0x00	; 0
    5284:	30 e0       	ldi	r19, 0x00	; 0
    5286:	48 ec       	ldi	r20, 0xC8	; 200
    5288:	52 e4       	ldi	r21, 0x42	; 66
    528a:	bc 01       	movw	r22, r24
    528c:	cd 01       	movw	r24, r26
    528e:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    5292:	dc 01       	movw	r26, r24
    5294:	cb 01       	movw	r24, r22
    5296:	bc 01       	movw	r22, r24
    5298:	cd 01       	movw	r24, r26
    529a:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    529e:	dc 01       	movw	r26, r24
    52a0:	cb 01       	movw	r24, r22
    52a2:	29 81       	ldd	r18, Y+1	; 0x01
    52a4:	3a 81       	ldd	r19, Y+2	; 0x02
    52a6:	23 5c       	subi	r18, 0xC3	; 195
    52a8:	3f 4f       	sbci	r19, 0xFF	; 255
    52aa:	f9 01       	movw	r30, r18
    52ac:	80 83       	st	Z, r24
    52ae:	91 83       	std	Z+1, r25	; 0x01
    52b0:	a2 83       	std	Z+2, r26	; 0x02
    52b2:	b3 83       	std	Z+3, r27	; 0x03
	message->XVelocityMetersPerSecond = model->XVelocityMetersPerSecond() * 100;
    52b4:	8b 81       	ldd	r24, Y+3	; 0x03
    52b6:	9c 81       	ldd	r25, Y+4	; 0x04
    52b8:	0e 94 0f 03 	call	0x61e	; 0x61e <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>
    52bc:	dc 01       	movw	r26, r24
    52be:	cb 01       	movw	r24, r22
    52c0:	20 e0       	ldi	r18, 0x00	; 0
    52c2:	30 e0       	ldi	r19, 0x00	; 0
    52c4:	48 ec       	ldi	r20, 0xC8	; 200
    52c6:	52 e4       	ldi	r21, 0x42	; 66
    52c8:	bc 01       	movw	r22, r24
    52ca:	cd 01       	movw	r24, r26
    52cc:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    52d0:	dc 01       	movw	r26, r24
    52d2:	cb 01       	movw	r24, r22
    52d4:	bc 01       	movw	r22, r24
    52d6:	cd 01       	movw	r24, r26
    52d8:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    52dc:	dc 01       	movw	r26, r24
    52de:	cb 01       	movw	r24, r22
    52e0:	29 81       	ldd	r18, Y+1	; 0x01
    52e2:	3a 81       	ldd	r19, Y+2	; 0x02
    52e4:	f9 01       	movw	r30, r18
    52e6:	81 ab       	std	Z+49, r24	; 0x31
    52e8:	92 ab       	std	Z+50, r25	; 0x32
    52ea:	a3 ab       	std	Z+51, r26	; 0x33
    52ec:	b4 ab       	std	Z+52, r27	; 0x34
	message->LongitudeControl = model->LongitudeControl() * 100;
    52ee:	8b 81       	ldd	r24, Y+3	; 0x03
    52f0:	9c 81       	ldd	r25, Y+4	; 0x04
    52f2:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>
    52f6:	dc 01       	movw	r26, r24
    52f8:	cb 01       	movw	r24, r22
    52fa:	20 e0       	ldi	r18, 0x00	; 0
    52fc:	30 e0       	ldi	r19, 0x00	; 0
    52fe:	48 ec       	ldi	r20, 0xC8	; 200
    5300:	52 e4       	ldi	r21, 0x42	; 66
    5302:	bc 01       	movw	r22, r24
    5304:	cd 01       	movw	r24, r26
    5306:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    530a:	dc 01       	movw	r26, r24
    530c:	cb 01       	movw	r24, r22
    530e:	bc 01       	movw	r22, r24
    5310:	cd 01       	movw	r24, r26
    5312:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    5316:	dc 01       	movw	r26, r24
    5318:	cb 01       	movw	r24, r22
    531a:	29 81       	ldd	r18, Y+1	; 0x01
    531c:	3a 81       	ldd	r19, Y+2	; 0x02
    531e:	2b 5b       	subi	r18, 0xBB	; 187
    5320:	3f 4f       	sbci	r19, 0xFF	; 255
    5322:	f9 01       	movw	r30, r18
    5324:	80 83       	st	Z, r24
    5326:	91 83       	std	Z+1, r25	; 0x01
    5328:	a2 83       	std	Z+2, r26	; 0x02
    532a:	b3 83       	std	Z+3, r27	; 0x03
	
	
	message->YNEDBodyFrame = model->YNEDBodyFrame() * 100;
    532c:	8b 81       	ldd	r24, Y+3	; 0x03
    532e:	9c 81       	ldd	r25, Y+4	; 0x04
    5330:	0e 94 0a 04 	call	0x814	; 0x814 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>
    5334:	dc 01       	movw	r26, r24
    5336:	cb 01       	movw	r24, r22
    5338:	20 e0       	ldi	r18, 0x00	; 0
    533a:	30 e0       	ldi	r19, 0x00	; 0
    533c:	48 ec       	ldi	r20, 0xC8	; 200
    533e:	52 e4       	ldi	r21, 0x42	; 66
    5340:	bc 01       	movw	r22, r24
    5342:	cd 01       	movw	r24, r26
    5344:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    5348:	dc 01       	movw	r26, r24
    534a:	cb 01       	movw	r24, r22
    534c:	bc 01       	movw	r22, r24
    534e:	cd 01       	movw	r24, r26
    5350:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    5354:	dc 01       	movw	r26, r24
    5356:	cb 01       	movw	r24, r22
    5358:	29 81       	ldd	r18, Y+1	; 0x01
    535a:	3a 81       	ldd	r19, Y+2	; 0x02
    535c:	23 5a       	subi	r18, 0xA3	; 163
    535e:	3f 4f       	sbci	r19, 0xFF	; 255
    5360:	f9 01       	movw	r30, r18
    5362:	80 83       	st	Z, r24
    5364:	91 83       	std	Z+1, r25	; 0x01
    5366:	a2 83       	std	Z+2, r26	; 0x02
    5368:	b3 83       	std	Z+3, r27	; 0x03
	message->YDerivativeError = model->YDerivativeError() * 100;
    536a:	8b 81       	ldd	r24, Y+3	; 0x03
    536c:	9c 81       	ldd	r25, Y+4	; 0x04
    536e:	0e 94 f1 1e 	call	0x3de2	; 0x3de2 <_ZNK10helicopter5model11SystemModel16YDerivativeErrorEv>
    5372:	dc 01       	movw	r26, r24
    5374:	cb 01       	movw	r24, r22
    5376:	20 e0       	ldi	r18, 0x00	; 0
    5378:	30 e0       	ldi	r19, 0x00	; 0
    537a:	48 ec       	ldi	r20, 0xC8	; 200
    537c:	52 e4       	ldi	r21, 0x42	; 66
    537e:	bc 01       	movw	r22, r24
    5380:	cd 01       	movw	r24, r26
    5382:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    5386:	dc 01       	movw	r26, r24
    5388:	cb 01       	movw	r24, r22
    538a:	bc 01       	movw	r22, r24
    538c:	cd 01       	movw	r24, r26
    538e:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    5392:	dc 01       	movw	r26, r24
    5394:	cb 01       	movw	r24, r22
    5396:	29 81       	ldd	r18, Y+1	; 0x01
    5398:	3a 81       	ldd	r19, Y+2	; 0x02
    539a:	2f 58       	subi	r18, 0x8F	; 143
    539c:	3f 4f       	sbci	r19, 0xFF	; 255
    539e:	f9 01       	movw	r30, r18
    53a0:	80 83       	st	Z, r24
    53a2:	91 83       	std	Z+1, r25	; 0x01
    53a4:	a2 83       	std	Z+2, r26	; 0x02
    53a6:	b3 83       	std	Z+3, r27	; 0x03
	message->YIntegral = model->YIntegral() * 100;
    53a8:	8b 81       	ldd	r24, Y+3	; 0x03
    53aa:	9c 81       	ldd	r25, Y+4	; 0x04
    53ac:	0e 94 52 04 	call	0x8a4	; 0x8a4 <_ZNK10helicopter5model11SystemModel9YIntegralEv>
    53b0:	dc 01       	movw	r26, r24
    53b2:	cb 01       	movw	r24, r22
    53b4:	20 e0       	ldi	r18, 0x00	; 0
    53b6:	30 e0       	ldi	r19, 0x00	; 0
    53b8:	48 ec       	ldi	r20, 0xC8	; 200
    53ba:	52 e4       	ldi	r21, 0x42	; 66
    53bc:	bc 01       	movw	r22, r24
    53be:	cd 01       	movw	r24, r26
    53c0:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    53c4:	dc 01       	movw	r26, r24
    53c6:	cb 01       	movw	r24, r22
    53c8:	bc 01       	movw	r22, r24
    53ca:	cd 01       	movw	r24, r26
    53cc:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    53d0:	dc 01       	movw	r26, r24
    53d2:	cb 01       	movw	r24, r22
    53d4:	29 81       	ldd	r18, Y+1	; 0x01
    53d6:	3a 81       	ldd	r19, Y+2	; 0x02
    53d8:	27 59       	subi	r18, 0x97	; 151
    53da:	3f 4f       	sbci	r19, 0xFF	; 255
    53dc:	f9 01       	movw	r30, r18
    53de:	80 83       	st	Z, r24
    53e0:	91 83       	std	Z+1, r25	; 0x01
    53e2:	a2 83       	std	Z+2, r26	; 0x02
    53e4:	b3 83       	std	Z+3, r27	; 0x03
	message->YProportional = model->YProportional() * 100;
    53e6:	8b 81       	ldd	r24, Y+3	; 0x03
    53e8:	9c 81       	ldd	r25, Y+4	; 0x04
    53ea:	0e 94 d9 1e 	call	0x3db2	; 0x3db2 <_ZNK10helicopter5model11SystemModel13YProportionalEv>
    53ee:	dc 01       	movw	r26, r24
    53f0:	cb 01       	movw	r24, r22
    53f2:	20 e0       	ldi	r18, 0x00	; 0
    53f4:	30 e0       	ldi	r19, 0x00	; 0
    53f6:	48 ec       	ldi	r20, 0xC8	; 200
    53f8:	52 e4       	ldi	r21, 0x42	; 66
    53fa:	bc 01       	movw	r22, r24
    53fc:	cd 01       	movw	r24, r26
    53fe:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    5402:	dc 01       	movw	r26, r24
    5404:	cb 01       	movw	r24, r22
    5406:	bc 01       	movw	r22, r24
    5408:	cd 01       	movw	r24, r26
    540a:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    540e:	dc 01       	movw	r26, r24
    5410:	cb 01       	movw	r24, r22
    5412:	29 81       	ldd	r18, Y+1	; 0x01
    5414:	3a 81       	ldd	r19, Y+2	; 0x02
    5416:	23 59       	subi	r18, 0x93	; 147
    5418:	3f 4f       	sbci	r19, 0xFF	; 255
    541a:	f9 01       	movw	r30, r18
    541c:	80 83       	st	Z, r24
    541e:	91 83       	std	Z+1, r25	; 0x01
    5420:	a2 83       	std	Z+2, r26	; 0x02
    5422:	b3 83       	std	Z+3, r27	; 0x03
	message->YVelocityMetersPerSecond = model->YVelocityMetersPerSecond() * 100;
    5424:	8b 81       	ldd	r24, Y+3	; 0x03
    5426:	9c 81       	ldd	r25, Y+4	; 0x04
    5428:	0e 94 3a 04 	call	0x874	; 0x874 <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>
    542c:	dc 01       	movw	r26, r24
    542e:	cb 01       	movw	r24, r22
    5430:	20 e0       	ldi	r18, 0x00	; 0
    5432:	30 e0       	ldi	r19, 0x00	; 0
    5434:	48 ec       	ldi	r20, 0xC8	; 200
    5436:	52 e4       	ldi	r21, 0x42	; 66
    5438:	bc 01       	movw	r22, r24
    543a:	cd 01       	movw	r24, r26
    543c:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    5440:	dc 01       	movw	r26, r24
    5442:	cb 01       	movw	r24, r22
    5444:	bc 01       	movw	r22, r24
    5446:	cd 01       	movw	r24, r26
    5448:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    544c:	dc 01       	movw	r26, r24
    544e:	cb 01       	movw	r24, r22
    5450:	29 81       	ldd	r18, Y+1	; 0x01
    5452:	3a 81       	ldd	r19, Y+2	; 0x02
    5454:	2f 59       	subi	r18, 0x9F	; 159
    5456:	3f 4f       	sbci	r19, 0xFF	; 255
    5458:	f9 01       	movw	r30, r18
    545a:	80 83       	st	Z, r24
    545c:	91 83       	std	Z+1, r25	; 0x01
    545e:	a2 83       	std	Z+2, r26	; 0x02
    5460:	b3 83       	std	Z+3, r27	; 0x03
	message->LateralControl = model->LateralControl() * 100;
    5462:	8b 81       	ldd	r24, Y+3	; 0x03
    5464:	9c 81       	ldd	r25, Y+4	; 0x04
    5466:	0e 94 22 04 	call	0x844	; 0x844 <_ZNK10helicopter5model11SystemModel14LateralControlEv>
    546a:	dc 01       	movw	r26, r24
    546c:	cb 01       	movw	r24, r22
    546e:	20 e0       	ldi	r18, 0x00	; 0
    5470:	30 e0       	ldi	r19, 0x00	; 0
    5472:	48 ec       	ldi	r20, 0xC8	; 200
    5474:	52 e4       	ldi	r21, 0x42	; 66
    5476:	bc 01       	movw	r22, r24
    5478:	cd 01       	movw	r24, r26
    547a:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    547e:	dc 01       	movw	r26, r24
    5480:	cb 01       	movw	r24, r22
    5482:	bc 01       	movw	r22, r24
    5484:	cd 01       	movw	r24, r26
    5486:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    548a:	dc 01       	movw	r26, r24
    548c:	cb 01       	movw	r24, r22
    548e:	29 81       	ldd	r18, Y+1	; 0x01
    5490:	3a 81       	ldd	r19, Y+2	; 0x02
    5492:	2b 58       	subi	r18, 0x8B	; 139
    5494:	3f 4f       	sbci	r19, 0xFF	; 255
    5496:	f9 01       	movw	r30, r18
    5498:	80 83       	st	Z, r24
    549a:	91 83       	std	Z+1, r25	; 0x01
    549c:	a2 83       	std	Z+2, r26	; 0x02
    549e:	b3 83       	std	Z+3, r27	; 0x03
	
	
	
	message->AltitudeFeetAgl = model->AltitudeFeet() * 100;
    54a0:	8b 81       	ldd	r24, Y+3	; 0x03
    54a2:	9c 81       	ldd	r25, Y+4	; 0x04
    54a4:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <_ZNK10helicopter5model11SystemModel12AltitudeFeetEv>
    54a8:	dc 01       	movw	r26, r24
    54aa:	cb 01       	movw	r24, r22
    54ac:	20 e0       	ldi	r18, 0x00	; 0
    54ae:	30 e0       	ldi	r19, 0x00	; 0
    54b0:	48 ec       	ldi	r20, 0xC8	; 200
    54b2:	52 e4       	ldi	r21, 0x42	; 66
    54b4:	bc 01       	movw	r22, r24
    54b6:	cd 01       	movw	r24, r26
    54b8:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    54bc:	dc 01       	movw	r26, r24
    54be:	cb 01       	movw	r24, r22
    54c0:	bc 01       	movw	r22, r24
    54c2:	cd 01       	movw	r24, r26
    54c4:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    54c8:	dc 01       	movw	r26, r24
    54ca:	cb 01       	movw	r24, r22
    54cc:	29 81       	ldd	r18, Y+1	; 0x01
    54ce:	3a 81       	ldd	r19, Y+2	; 0x02
    54d0:	23 57       	subi	r18, 0x73	; 115
    54d2:	3f 4f       	sbci	r19, 0xFF	; 255
    54d4:	f9 01       	movw	r30, r18
    54d6:	80 83       	st	Z, r24
    54d8:	91 83       	std	Z+1, r25	; 0x01
    54da:	a2 83       	std	Z+2, r26	; 0x02
    54dc:	b3 83       	std	Z+3, r27	; 0x03
	message->ZDerivativeError = model->ZDerivativeError() * 100;
    54de:	8b 81       	ldd	r24, Y+3	; 0x03
    54e0:	9c 81       	ldd	r25, Y+4	; 0x04
    54e2:	0e 94 8a 1f 	call	0x3f14	; 0x3f14 <_ZNK10helicopter5model11SystemModel16ZDerivativeErrorEv>
    54e6:	dc 01       	movw	r26, r24
    54e8:	cb 01       	movw	r24, r22
    54ea:	20 e0       	ldi	r18, 0x00	; 0
    54ec:	30 e0       	ldi	r19, 0x00	; 0
    54ee:	48 ec       	ldi	r20, 0xC8	; 200
    54f0:	52 e4       	ldi	r21, 0x42	; 66
    54f2:	bc 01       	movw	r22, r24
    54f4:	cd 01       	movw	r24, r26
    54f6:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    54fa:	dc 01       	movw	r26, r24
    54fc:	cb 01       	movw	r24, r22
    54fe:	bc 01       	movw	r22, r24
    5500:	cd 01       	movw	r24, r26
    5502:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    5506:	dc 01       	movw	r26, r24
    5508:	cb 01       	movw	r24, r22
    550a:	29 81       	ldd	r18, Y+1	; 0x01
    550c:	3a 81       	ldd	r19, Y+2	; 0x02
    550e:	23 56       	subi	r18, 0x63	; 99
    5510:	3f 4f       	sbci	r19, 0xFF	; 255
    5512:	f9 01       	movw	r30, r18
    5514:	80 83       	st	Z, r24
    5516:	91 83       	std	Z+1, r25	; 0x01
    5518:	a2 83       	std	Z+2, r26	; 0x02
    551a:	b3 83       	std	Z+3, r27	; 0x03
	message->ZIntegral = model->ZIntegral() * 100;
    551c:	8b 81       	ldd	r24, Y+3	; 0x03
    551e:	9c 81       	ldd	r25, Y+4	; 0x04
    5520:	0e 94 b2 04 	call	0x964	; 0x964 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>
    5524:	dc 01       	movw	r26, r24
    5526:	cb 01       	movw	r24, r22
    5528:	20 e0       	ldi	r18, 0x00	; 0
    552a:	30 e0       	ldi	r19, 0x00	; 0
    552c:	48 ec       	ldi	r20, 0xC8	; 200
    552e:	52 e4       	ldi	r21, 0x42	; 66
    5530:	bc 01       	movw	r22, r24
    5532:	cd 01       	movw	r24, r26
    5534:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    5538:	dc 01       	movw	r26, r24
    553a:	cb 01       	movw	r24, r22
    553c:	bc 01       	movw	r22, r24
    553e:	cd 01       	movw	r24, r26
    5540:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    5544:	dc 01       	movw	r26, r24
    5546:	cb 01       	movw	r24, r22
    5548:	29 81       	ldd	r18, Y+1	; 0x01
    554a:	3a 81       	ldd	r19, Y+2	; 0x02
    554c:	2b 56       	subi	r18, 0x6B	; 107
    554e:	3f 4f       	sbci	r19, 0xFF	; 255
    5550:	f9 01       	movw	r30, r18
    5552:	80 83       	st	Z, r24
    5554:	91 83       	std	Z+1, r25	; 0x01
    5556:	a2 83       	std	Z+2, r26	; 0x02
    5558:	b3 83       	std	Z+3, r27	; 0x03
	message->ZProportional = model->ZProportional() * 100;
    555a:	8b 81       	ldd	r24, Y+3	; 0x03
    555c:	9c 81       	ldd	r25, Y+4	; 0x04
    555e:	0e 94 72 1f 	call	0x3ee4	; 0x3ee4 <_ZNK10helicopter5model11SystemModel13ZProportionalEv>
    5562:	dc 01       	movw	r26, r24
    5564:	cb 01       	movw	r24, r22
    5566:	20 e0       	ldi	r18, 0x00	; 0
    5568:	30 e0       	ldi	r19, 0x00	; 0
    556a:	48 ec       	ldi	r20, 0xC8	; 200
    556c:	52 e4       	ldi	r21, 0x42	; 66
    556e:	bc 01       	movw	r22, r24
    5570:	cd 01       	movw	r24, r26
    5572:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    5576:	dc 01       	movw	r26, r24
    5578:	cb 01       	movw	r24, r22
    557a:	bc 01       	movw	r22, r24
    557c:	cd 01       	movw	r24, r26
    557e:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    5582:	dc 01       	movw	r26, r24
    5584:	cb 01       	movw	r24, r22
    5586:	29 81       	ldd	r18, Y+1	; 0x01
    5588:	3a 81       	ldd	r19, Y+2	; 0x02
    558a:	27 56       	subi	r18, 0x67	; 103
    558c:	3f 4f       	sbci	r19, 0xFF	; 255
    558e:	f9 01       	movw	r30, r18
    5590:	80 83       	st	Z, r24
    5592:	91 83       	std	Z+1, r25	; 0x01
    5594:	a2 83       	std	Z+2, r26	; 0x02
    5596:	b3 83       	std	Z+3, r27	; 0x03
	message->ZVelocityMetersPerSecond = (model->ZVelocityFeetPerSecond() / 3.2804d) * 100;
    5598:	8b 81       	ldd	r24, Y+3	; 0x03
    559a:	9c 81       	ldd	r25, Y+4	; 0x04
    559c:	0e 94 9a 04 	call	0x934	; 0x934 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>
    55a0:	dc 01       	movw	r26, r24
    55a2:	cb 01       	movw	r24, r22
    55a4:	23 e1       	ldi	r18, 0x13	; 19
    55a6:	32 ef       	ldi	r19, 0xF2	; 242
    55a8:	41 e5       	ldi	r20, 0x51	; 81
    55aa:	50 e4       	ldi	r21, 0x40	; 64
    55ac:	bc 01       	movw	r22, r24
    55ae:	cd 01       	movw	r24, r26
    55b0:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    55b4:	dc 01       	movw	r26, r24
    55b6:	cb 01       	movw	r24, r22
    55b8:	20 e0       	ldi	r18, 0x00	; 0
    55ba:	30 e0       	ldi	r19, 0x00	; 0
    55bc:	48 ec       	ldi	r20, 0xC8	; 200
    55be:	52 e4       	ldi	r21, 0x42	; 66
    55c0:	bc 01       	movw	r22, r24
    55c2:	cd 01       	movw	r24, r26
    55c4:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    55c8:	dc 01       	movw	r26, r24
    55ca:	cb 01       	movw	r24, r22
    55cc:	bc 01       	movw	r22, r24
    55ce:	cd 01       	movw	r24, r26
    55d0:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    55d4:	dc 01       	movw	r26, r24
    55d6:	cb 01       	movw	r24, r22
    55d8:	29 81       	ldd	r18, Y+1	; 0x01
    55da:	3a 81       	ldd	r19, Y+2	; 0x02
    55dc:	2f 56       	subi	r18, 0x6F	; 111
    55de:	3f 4f       	sbci	r19, 0xFF	; 255
    55e0:	f9 01       	movw	r30, r18
    55e2:	80 83       	st	Z, r24
    55e4:	91 83       	std	Z+1, r25	; 0x01
    55e6:	a2 83       	std	Z+2, r26	; 0x02
    55e8:	b3 83       	std	Z+3, r27	; 0x03
	message->MainRotorCollectiveControl = model->MainRotorCollectiveControl() * 100;
    55ea:	8b 81       	ldd	r24, Y+3	; 0x03
    55ec:	9c 81       	ldd	r25, Y+4	; 0x04
    55ee:	0e 94 82 04 	call	0x904	; 0x904 <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>
    55f2:	dc 01       	movw	r26, r24
    55f4:	cb 01       	movw	r24, r22
    55f6:	20 e0       	ldi	r18, 0x00	; 0
    55f8:	30 e0       	ldi	r19, 0x00	; 0
    55fa:	48 ec       	ldi	r20, 0xC8	; 200
    55fc:	52 e4       	ldi	r21, 0x42	; 66
    55fe:	bc 01       	movw	r22, r24
    5600:	cd 01       	movw	r24, r26
    5602:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    5606:	dc 01       	movw	r26, r24
    5608:	cb 01       	movw	r24, r22
    560a:	bc 01       	movw	r22, r24
    560c:	cd 01       	movw	r24, r26
    560e:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    5612:	dc 01       	movw	r26, r24
    5614:	cb 01       	movw	r24, r22
    5616:	29 81       	ldd	r18, Y+1	; 0x01
    5618:	3a 81       	ldd	r19, Y+2	; 0x02
    561a:	2f 55       	subi	r18, 0x5F	; 95
    561c:	3f 4f       	sbci	r19, 0xFF	; 255
    561e:	f9 01       	movw	r30, r18
    5620:	80 83       	st	Z, r24
    5622:	91 83       	std	Z+1, r25	; 0x01
    5624:	a2 83       	std	Z+2, r26	; 0x02
    5626:	b3 83       	std	Z+3, r27	; 0x03
	
	
	message->ChecksumErrors = model->ChecksumErrors();
    5628:	8b 81       	ldd	r24, Y+3	; 0x03
    562a:	9c 81       	ldd	r25, Y+4	; 0x04
    562c:	0e 94 5e 20 	call	0x40bc	; 0x40bc <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>
    5630:	dc 01       	movw	r26, r24
    5632:	cb 01       	movw	r24, r22
    5634:	29 81       	ldd	r18, Y+1	; 0x01
    5636:	3a 81       	ldd	r19, Y+2	; 0x02
    5638:	2b 53       	subi	r18, 0x3B	; 59
    563a:	3f 4f       	sbci	r19, 0xFF	; 255
    563c:	f9 01       	movw	r30, r18
    563e:	80 83       	st	Z, r24
    5640:	91 83       	std	Z+1, r25	; 0x01
    5642:	a2 83       	std	Z+2, r26	; 0x02
    5644:	b3 83       	std	Z+3, r27	; 0x03
	message->Timeouts = model->Timeouts();
    5646:	8b 81       	ldd	r24, Y+3	; 0x03
    5648:	9c 81       	ldd	r25, Y+4	; 0x04
    564a:	0e 94 e8 1f 	call	0x3fd0	; 0x3fd0 <_ZNK10helicopter5model11SystemModel8TimeoutsEv>
    564e:	dc 01       	movw	r26, r24
    5650:	cb 01       	movw	r24, r22
    5652:	29 81       	ldd	r18, Y+1	; 0x01
    5654:	3a 81       	ldd	r19, Y+2	; 0x02
    5656:	23 54       	subi	r18, 0x43	; 67
    5658:	3f 4f       	sbci	r19, 0xFF	; 255
    565a:	f9 01       	movw	r30, r18
    565c:	80 83       	st	Z, r24
    565e:	91 83       	std	Z+1, r25	; 0x01
    5660:	a2 83       	std	Z+2, r26	; 0x02
    5662:	b3 83       	std	Z+3, r27	; 0x03
	message->UnrecognizedMsgTypes = model->UnrecognizedMsgTypes();
    5664:	8b 81       	ldd	r24, Y+3	; 0x03
    5666:	9c 81       	ldd	r25, Y+4	; 0x04
    5668:	0e 94 23 20 	call	0x4046	; 0x4046 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>
    566c:	dc 01       	movw	r26, r24
    566e:	cb 01       	movw	r24, r22
    5670:	29 81       	ldd	r18, Y+1	; 0x01
    5672:	3a 81       	ldd	r19, Y+2	; 0x02
    5674:	2f 53       	subi	r18, 0x3F	; 63
    5676:	3f 4f       	sbci	r19, 0xFF	; 255
    5678:	f9 01       	movw	r30, r18
    567a:	80 83       	st	Z, r24
    567c:	91 83       	std	Z+1, r25	; 0x01
    567e:	a2 83       	std	Z+2, r26	; 0x02
    5680:	b3 83       	std	Z+3, r27	; 0x03
	message->NumOfBlownFrames = model->BlownFrames();
    5682:	8b 81       	ldd	r24, Y+3	; 0x03
    5684:	9c 81       	ldd	r25, Y+4	; 0x04
    5686:	0e 94 ca 04 	call	0x994	; 0x994 <_ZNK10helicopter5model11SystemModel11BlownFramesEv>
    568a:	dc 01       	movw	r26, r24
    568c:	cb 01       	movw	r24, r22
    568e:	29 81       	ldd	r18, Y+1	; 0x01
    5690:	3a 81       	ldd	r19, Y+2	; 0x02
    5692:	27 53       	subi	r18, 0x37	; 55
    5694:	3f 4f       	sbci	r19, 0xFF	; 255
    5696:	f9 01       	movw	r30, r18
    5698:	80 83       	st	Z, r24
    569a:	91 83       	std	Z+1, r25	; 0x01
    569c:	a2 83       	std	Z+2, r26	; 0x02
    569e:	b3 83       	std	Z+3, r27	; 0x03
	
	return message;
    56a0:	89 81       	ldd	r24, Y+1	; 0x01
    56a2:	9a 81       	ldd	r25, Y+2	; 0x02
}
    56a4:	0f 90       	pop	r0
    56a6:	0f 90       	pop	r0
    56a8:	0f 90       	pop	r0
    56aa:	0f 90       	pop	r0
    56ac:	df 91       	pop	r29
    56ae:	cf 91       	pop	r28
    56b0:	1f 91       	pop	r17
    56b2:	0f 91       	pop	r16
    56b4:	08 95       	ret

000056b6 <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE>:
	model->ChecksumErrors(this->ChecksumErrors);
	model->BlownFrames(this->NumOfBlownFrames);
}

void SystemTelemetryMessage::updateModelFromMessageFromSimulator (SystemModel *model)
{
    56b6:	cf 93       	push	r28
    56b8:	df 93       	push	r29
    56ba:	00 d0       	rcall	.+0      	; 0x56bc <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE+0x6>
    56bc:	1f 92       	push	r1
    56be:	cd b7       	in	r28, 0x3d	; 61
    56c0:	de b7       	in	r29, 0x3e	; 62
    56c2:	9a 83       	std	Y+2, r25	; 0x02
    56c4:	89 83       	std	Y+1, r24	; 0x01
    56c6:	7c 83       	std	Y+4, r23	; 0x04
    56c8:	6b 83       	std	Y+3, r22	; 0x03
	//These values are sensor readings from the simulator that are used for flight
	//control calculations. The real helicopter algorithms will read these values
	//from actual sensors, but when running off of the simulator, these sensor
	//readings come from the simulator itself.
	
	model->MagYawDegrees((double) this->MagYaw / 100);
    56ca:	89 81       	ldd	r24, Y+1	; 0x01
    56cc:	9a 81       	ldd	r25, Y+2	; 0x02
    56ce:	fc 01       	movw	r30, r24
    56d0:	85 81       	ldd	r24, Z+5	; 0x05
    56d2:	96 81       	ldd	r25, Z+6	; 0x06
    56d4:	a7 81       	ldd	r26, Z+7	; 0x07
    56d6:	b0 85       	ldd	r27, Z+8	; 0x08
    56d8:	bc 01       	movw	r22, r24
    56da:	cd 01       	movw	r24, r26
    56dc:	0e 94 18 40 	call	0x8030	; 0x8030 <__floatunsisf>
    56e0:	dc 01       	movw	r26, r24
    56e2:	cb 01       	movw	r24, r22
    56e4:	20 e0       	ldi	r18, 0x00	; 0
    56e6:	30 e0       	ldi	r19, 0x00	; 0
    56e8:	48 ec       	ldi	r20, 0xC8	; 200
    56ea:	52 e4       	ldi	r21, 0x42	; 66
    56ec:	bc 01       	movw	r22, r24
    56ee:	cd 01       	movw	r24, r26
    56f0:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    56f4:	dc 01       	movw	r26, r24
    56f6:	cb 01       	movw	r24, r22
    56f8:	2b 81       	ldd	r18, Y+3	; 0x03
    56fa:	3c 81       	ldd	r19, Y+4	; 0x04
    56fc:	ac 01       	movw	r20, r24
    56fe:	bd 01       	movw	r22, r26
    5700:	c9 01       	movw	r24, r18
    5702:	0e 94 d7 1d 	call	0x3bae	; 0x3bae <_ZN10helicopter5model11SystemModel13MagYawDegreesEd>
	model->YawVelocityDegreesPerSecond((double) this->YawVelocityDegreesPerSecond / 100);
    5706:	89 81       	ldd	r24, Y+1	; 0x01
    5708:	9a 81       	ldd	r25, Y+2	; 0x02
    570a:	fc 01       	movw	r30, r24
    570c:	81 85       	ldd	r24, Z+9	; 0x09
    570e:	92 85       	ldd	r25, Z+10	; 0x0a
    5710:	a3 85       	ldd	r26, Z+11	; 0x0b
    5712:	b4 85       	ldd	r27, Z+12	; 0x0c
    5714:	bc 01       	movw	r22, r24
    5716:	cd 01       	movw	r24, r26
    5718:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    571c:	dc 01       	movw	r26, r24
    571e:	cb 01       	movw	r24, r22
    5720:	20 e0       	ldi	r18, 0x00	; 0
    5722:	30 e0       	ldi	r19, 0x00	; 0
    5724:	48 ec       	ldi	r20, 0xC8	; 200
    5726:	52 e4       	ldi	r21, 0x42	; 66
    5728:	bc 01       	movw	r22, r24
    572a:	cd 01       	movw	r24, r26
    572c:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    5730:	dc 01       	movw	r26, r24
    5732:	cb 01       	movw	r24, r22
    5734:	2b 81       	ldd	r18, Y+3	; 0x03
    5736:	3c 81       	ldd	r19, Y+4	; 0x04
    5738:	ac 01       	movw	r20, r24
    573a:	bd 01       	movw	r22, r26
    573c:	c9 01       	movw	r24, r18
    573e:	0e 94 f7 1d 	call	0x3bee	; 0x3bee <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEd>
	
	//model->XNEDBodyFrame((double) this->XNEDBodyFrame / 100);//not supposed to be here since this is a calculated value, not a sensor reading.
	model->XVelocityMetersPerSecond((double) this->XVelocityMetersPerSecond / 100);
    5742:	89 81       	ldd	r24, Y+1	; 0x01
    5744:	9a 81       	ldd	r25, Y+2	; 0x02
    5746:	fc 01       	movw	r30, r24
    5748:	81 a9       	ldd	r24, Z+49	; 0x31
    574a:	92 a9       	ldd	r25, Z+50	; 0x32
    574c:	a3 a9       	ldd	r26, Z+51	; 0x33
    574e:	b4 a9       	ldd	r27, Z+52	; 0x34
    5750:	bc 01       	movw	r22, r24
    5752:	cd 01       	movw	r24, r26
    5754:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    5758:	dc 01       	movw	r26, r24
    575a:	cb 01       	movw	r24, r22
    575c:	20 e0       	ldi	r18, 0x00	; 0
    575e:	30 e0       	ldi	r19, 0x00	; 0
    5760:	48 ec       	ldi	r20, 0xC8	; 200
    5762:	52 e4       	ldi	r21, 0x42	; 66
    5764:	bc 01       	movw	r22, r24
    5766:	cd 01       	movw	r24, r26
    5768:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    576c:	dc 01       	movw	r26, r24
    576e:	cb 01       	movw	r24, r22
    5770:	2b 81       	ldd	r18, Y+3	; 0x03
    5772:	3c 81       	ldd	r19, Y+4	; 0x04
    5774:	ac 01       	movw	r20, r24
    5776:	bd 01       	movw	r22, r26
    5778:	c9 01       	movw	r24, r18
    577a:	0e 94 43 1e 	call	0x3c86	; 0x3c86 <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEd>
	model->ThetaPitchDegrees((double) this->ThetaPitchDegrees / 100);
    577e:	89 81       	ldd	r24, Y+1	; 0x01
    5780:	9a 81       	ldd	r25, Y+2	; 0x02
    5782:	fc 01       	movw	r30, r24
    5784:	85 a9       	ldd	r24, Z+53	; 0x35
    5786:	96 a9       	ldd	r25, Z+54	; 0x36
    5788:	a7 a9       	ldd	r26, Z+55	; 0x37
    578a:	b0 ad       	ldd	r27, Z+56	; 0x38
    578c:	bc 01       	movw	r22, r24
    578e:	cd 01       	movw	r24, r26
    5790:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    5794:	dc 01       	movw	r26, r24
    5796:	cb 01       	movw	r24, r22
    5798:	20 e0       	ldi	r18, 0x00	; 0
    579a:	30 e0       	ldi	r19, 0x00	; 0
    579c:	48 ec       	ldi	r20, 0xC8	; 200
    579e:	52 e4       	ldi	r21, 0x42	; 66
    57a0:	bc 01       	movw	r22, r24
    57a2:	cd 01       	movw	r24, r26
    57a4:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    57a8:	dc 01       	movw	r26, r24
    57aa:	cb 01       	movw	r24, r22
    57ac:	2b 81       	ldd	r18, Y+3	; 0x03
    57ae:	3c 81       	ldd	r19, Y+4	; 0x04
    57b0:	ac 01       	movw	r20, r24
    57b2:	bd 01       	movw	r22, r26
    57b4:	c9 01       	movw	r24, r18
    57b6:	0e 94 93 1e 	call	0x3d26	; 0x3d26 <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEd>
	
	//model->YNEDBodyFrame((double) this->YNEDBodyFrame / 100);
	model->YVelocityMetersPerSecond((double) this->YVelocityMetersPerSecond / 100);
    57ba:	89 81       	ldd	r24, Y+1	; 0x01
    57bc:	9a 81       	ldd	r25, Y+2	; 0x02
    57be:	8f 59       	subi	r24, 0x9F	; 159
    57c0:	9f 4f       	sbci	r25, 0xFF	; 255
    57c2:	fc 01       	movw	r30, r24
    57c4:	80 81       	ld	r24, Z
    57c6:	91 81       	ldd	r25, Z+1	; 0x01
    57c8:	a2 81       	ldd	r26, Z+2	; 0x02
    57ca:	b3 81       	ldd	r27, Z+3	; 0x03
    57cc:	bc 01       	movw	r22, r24
    57ce:	cd 01       	movw	r24, r26
    57d0:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    57d4:	dc 01       	movw	r26, r24
    57d6:	cb 01       	movw	r24, r22
    57d8:	20 e0       	ldi	r18, 0x00	; 0
    57da:	30 e0       	ldi	r19, 0x00	; 0
    57dc:	48 ec       	ldi	r20, 0xC8	; 200
    57de:	52 e4       	ldi	r21, 0x42	; 66
    57e0:	bc 01       	movw	r22, r24
    57e2:	cd 01       	movw	r24, r26
    57e4:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    57e8:	dc 01       	movw	r26, r24
    57ea:	cb 01       	movw	r24, r22
    57ec:	2b 81       	ldd	r18, Y+3	; 0x03
    57ee:	3c 81       	ldd	r19, Y+4	; 0x04
    57f0:	ac 01       	movw	r20, r24
    57f2:	bd 01       	movw	r22, r26
    57f4:	c9 01       	movw	r24, r18
    57f6:	0e 94 b6 1e 	call	0x3d6c	; 0x3d6c <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEd>
	model->PhiRollDegrees((double) this->PhiRollDegrees / 100);
    57fa:	89 81       	ldd	r24, Y+1	; 0x01
    57fc:	9a 81       	ldd	r25, Y+2	; 0x02
    57fe:	8b 59       	subi	r24, 0x9B	; 155
    5800:	9f 4f       	sbci	r25, 0xFF	; 255
    5802:	fc 01       	movw	r30, r24
    5804:	80 81       	ld	r24, Z
    5806:	91 81       	ldd	r25, Z+1	; 0x01
    5808:	a2 81       	ldd	r26, Z+2	; 0x02
    580a:	b3 81       	ldd	r27, Z+3	; 0x03
    580c:	bc 01       	movw	r22, r24
    580e:	cd 01       	movw	r24, r26
    5810:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    5814:	dc 01       	movw	r26, r24
    5816:	cb 01       	movw	r24, r22
    5818:	20 e0       	ldi	r18, 0x00	; 0
    581a:	30 e0       	ldi	r19, 0x00	; 0
    581c:	48 ec       	ldi	r20, 0xC8	; 200
    581e:	52 e4       	ldi	r21, 0x42	; 66
    5820:	bc 01       	movw	r22, r24
    5822:	cd 01       	movw	r24, r26
    5824:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    5828:	dc 01       	movw	r26, r24
    582a:	cb 01       	movw	r24, r22
    582c:	2b 81       	ldd	r18, Y+3	; 0x03
    582e:	3c 81       	ldd	r19, Y+4	; 0x04
    5830:	ac 01       	movw	r20, r24
    5832:	bd 01       	movw	r22, r26
    5834:	c9 01       	movw	r24, r18
    5836:	0e 94 09 1f 	call	0x3e12	; 0x3e12 <_ZN10helicopter5model11SystemModel14PhiRollDegreesEd>
	
	model->AltitudeFeet((double) this->AltitudeFeetAgl / 100);
    583a:	89 81       	ldd	r24, Y+1	; 0x01
    583c:	9a 81       	ldd	r25, Y+2	; 0x02
    583e:	83 57       	subi	r24, 0x73	; 115
    5840:	9f 4f       	sbci	r25, 0xFF	; 255
    5842:	fc 01       	movw	r30, r24
    5844:	80 81       	ld	r24, Z
    5846:	91 81       	ldd	r25, Z+1	; 0x01
    5848:	a2 81       	ldd	r26, Z+2	; 0x02
    584a:	b3 81       	ldd	r27, Z+3	; 0x03
    584c:	bc 01       	movw	r22, r24
    584e:	cd 01       	movw	r24, r26
    5850:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    5854:	dc 01       	movw	r26, r24
    5856:	cb 01       	movw	r24, r22
    5858:	20 e0       	ldi	r18, 0x00	; 0
    585a:	30 e0       	ldi	r19, 0x00	; 0
    585c:	48 ec       	ldi	r20, 0xC8	; 200
    585e:	52 e4       	ldi	r21, 0x42	; 66
    5860:	bc 01       	movw	r22, r24
    5862:	cd 01       	movw	r24, r26
    5864:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    5868:	dc 01       	movw	r26, r24
    586a:	cb 01       	movw	r24, r22
    586c:	2b 81       	ldd	r18, Y+3	; 0x03
    586e:	3c 81       	ldd	r19, Y+4	; 0x04
    5870:	ac 01       	movw	r20, r24
    5872:	bd 01       	movw	r22, r26
    5874:	c9 01       	movw	r24, r18
    5876:	0e 94 2c 1f 	call	0x3e58	; 0x3e58 <_ZN10helicopter5model11SystemModel12AltitudeFeetEd>
	
	//Convert from meters per sec, to foot per sec.
	
	model->ZVelocityFeetPerSecond(((double) this->ZVelocityMetersPerSecond / 100) * 3.28084d); 
    587a:	89 81       	ldd	r24, Y+1	; 0x01
    587c:	9a 81       	ldd	r25, Y+2	; 0x02
    587e:	8f 56       	subi	r24, 0x6F	; 111
    5880:	9f 4f       	sbci	r25, 0xFF	; 255
    5882:	fc 01       	movw	r30, r24
    5884:	80 81       	ld	r24, Z
    5886:	91 81       	ldd	r25, Z+1	; 0x01
    5888:	a2 81       	ldd	r26, Z+2	; 0x02
    588a:	b3 81       	ldd	r27, Z+3	; 0x03
    588c:	bc 01       	movw	r22, r24
    588e:	cd 01       	movw	r24, r26
    5890:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    5894:	dc 01       	movw	r26, r24
    5896:	cb 01       	movw	r24, r22
    5898:	20 e0       	ldi	r18, 0x00	; 0
    589a:	30 e0       	ldi	r19, 0x00	; 0
    589c:	48 ec       	ldi	r20, 0xC8	; 200
    589e:	52 e4       	ldi	r21, 0x42	; 66
    58a0:	bc 01       	movw	r22, r24
    58a2:	cd 01       	movw	r24, r26
    58a4:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    58a8:	dc 01       	movw	r26, r24
    58aa:	cb 01       	movw	r24, r22
    58ac:	28 e4       	ldi	r18, 0x48	; 72
    58ae:	39 ef       	ldi	r19, 0xF9	; 249
    58b0:	41 e5       	ldi	r20, 0x51	; 81
    58b2:	50 e4       	ldi	r21, 0x40	; 64
    58b4:	bc 01       	movw	r22, r24
    58b6:	cd 01       	movw	r24, r26
    58b8:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    58bc:	dc 01       	movw	r26, r24
    58be:	cb 01       	movw	r24, r22
    58c0:	2b 81       	ldd	r18, Y+3	; 0x03
    58c2:	3c 81       	ldd	r19, Y+4	; 0x04
    58c4:	ac 01       	movw	r20, r24
    58c6:	bd 01       	movw	r22, r26
    58c8:	c9 01       	movw	r24, r18
    58ca:	0e 94 4f 1f 	call	0x3e9e	; 0x3e9e <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEd>
	
	model->LatitudeDegrees((double) this->LatitudeDegrees / 100);
    58ce:	89 81       	ldd	r24, Y+1	; 0x01
    58d0:	9a 81       	ldd	r25, Y+2	; 0x02
    58d2:	8b 54       	subi	r24, 0x4B	; 75
    58d4:	9f 4f       	sbci	r25, 0xFF	; 255
    58d6:	fc 01       	movw	r30, r24
    58d8:	80 81       	ld	r24, Z
    58da:	91 81       	ldd	r25, Z+1	; 0x01
    58dc:	a2 81       	ldd	r26, Z+2	; 0x02
    58de:	b3 81       	ldd	r27, Z+3	; 0x03
    58e0:	bc 01       	movw	r22, r24
    58e2:	cd 01       	movw	r24, r26
    58e4:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    58e8:	dc 01       	movw	r26, r24
    58ea:	cb 01       	movw	r24, r22
    58ec:	20 e0       	ldi	r18, 0x00	; 0
    58ee:	30 e0       	ldi	r19, 0x00	; 0
    58f0:	48 ec       	ldi	r20, 0xC8	; 200
    58f2:	52 e4       	ldi	r21, 0x42	; 66
    58f4:	bc 01       	movw	r22, r24
    58f6:	cd 01       	movw	r24, r26
    58f8:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    58fc:	dc 01       	movw	r26, r24
    58fe:	cb 01       	movw	r24, r22
    5900:	2b 81       	ldd	r18, Y+3	; 0x03
    5902:	3c 81       	ldd	r19, Y+4	; 0x04
    5904:	ac 01       	movw	r20, r24
    5906:	bd 01       	movw	r22, r26
    5908:	c9 01       	movw	r24, r18
    590a:	0e 94 a2 1f 	call	0x3f44	; 0x3f44 <_ZN10helicopter5model11SystemModel15LatitudeDegreesEd>
	model->LongitudeDegrees((double) this->LongitudeDegrees / 100);
    590e:	89 81       	ldd	r24, Y+1	; 0x01
    5910:	9a 81       	ldd	r25, Y+2	; 0x02
    5912:	87 54       	subi	r24, 0x47	; 71
    5914:	9f 4f       	sbci	r25, 0xFF	; 255
    5916:	fc 01       	movw	r30, r24
    5918:	80 81       	ld	r24, Z
    591a:	91 81       	ldd	r25, Z+1	; 0x01
    591c:	a2 81       	ldd	r26, Z+2	; 0x02
    591e:	b3 81       	ldd	r27, Z+3	; 0x03
    5920:	bc 01       	movw	r22, r24
    5922:	cd 01       	movw	r24, r26
    5924:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    5928:	dc 01       	movw	r26, r24
    592a:	cb 01       	movw	r24, r22
    592c:	20 e0       	ldi	r18, 0x00	; 0
    592e:	30 e0       	ldi	r19, 0x00	; 0
    5930:	48 ec       	ldi	r20, 0xC8	; 200
    5932:	52 e4       	ldi	r21, 0x42	; 66
    5934:	bc 01       	movw	r22, r24
    5936:	cd 01       	movw	r24, r26
    5938:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    593c:	dc 01       	movw	r26, r24
    593e:	cb 01       	movw	r24, r22
    5940:	2b 81       	ldd	r18, Y+3	; 0x03
    5942:	3c 81       	ldd	r19, Y+4	; 0x04
    5944:	ac 01       	movw	r20, r24
    5946:	bd 01       	movw	r22, r26
    5948:	c9 01       	movw	r24, r18
    594a:	0e 94 c5 1f 	call	0x3f8a	; 0x3f8a <_ZN10helicopter5model11SystemModel16LongitudeDegreesEd>
    594e:	0f 90       	pop	r0
    5950:	0f 90       	pop	r0
    5952:	0f 90       	pop	r0
    5954:	0f 90       	pop	r0
    5956:	df 91       	pop	r29
    5958:	cf 91       	pop	r28
    595a:	08 95       	ret

0000595c <_ZN10helicopter5tasks4Task8getDelayEv>:
				 * subclasses runTaskImpl to execute the actual task logic.
				 */
				virtual void runTask();
				
					
				int getDelay()
    595c:	cf 93       	push	r28
    595e:	df 93       	push	r29
    5960:	1f 92       	push	r1
    5962:	1f 92       	push	r1
    5964:	cd b7       	in	r28, 0x3d	; 61
    5966:	de b7       	in	r29, 0x3e	; 62
    5968:	9a 83       	std	Y+2, r25	; 0x02
    596a:	89 83       	std	Y+1, r24	; 0x01
				{
					return delay;
    596c:	89 81       	ldd	r24, Y+1	; 0x01
    596e:	9a 81       	ldd	r25, Y+2	; 0x02
    5970:	fc 01       	movw	r30, r24
    5972:	82 81       	ldd	r24, Z+2	; 0x02
    5974:	93 81       	ldd	r25, Z+3	; 0x03
				}
    5976:	0f 90       	pop	r0
    5978:	0f 90       	pop	r0
    597a:	df 91       	pop	r29
    597c:	cf 91       	pop	r28
    597e:	08 95       	ret

00005980 <_ZN10helicopter5tasks4Task9getPeriodEv>:
				
				int getPeriod()
    5980:	cf 93       	push	r28
    5982:	df 93       	push	r29
    5984:	1f 92       	push	r1
    5986:	1f 92       	push	r1
    5988:	cd b7       	in	r28, 0x3d	; 61
    598a:	de b7       	in	r29, 0x3e	; 62
    598c:	9a 83       	std	Y+2, r25	; 0x02
    598e:	89 83       	std	Y+1, r24	; 0x01
				{
					return period;
    5990:	89 81       	ldd	r24, Y+1	; 0x01
    5992:	9a 81       	ldd	r25, Y+2	; 0x02
    5994:	fc 01       	movw	r30, r24
    5996:	84 81       	ldd	r24, Z+4	; 0x04
    5998:	95 81       	ldd	r25, Z+5	; 0x05
				}
    599a:	0f 90       	pop	r0
    599c:	0f 90       	pop	r0
    599e:	df 91       	pop	r29
    59a0:	cf 91       	pop	r28
    59a2:	08 95       	ret

000059a4 <_ZN10helicopter5tasks4Task8setDelayEi>:
				
				void setDelay(int delay)
    59a4:	cf 93       	push	r28
    59a6:	df 93       	push	r29
    59a8:	00 d0       	rcall	.+0      	; 0x59aa <_ZN10helicopter5tasks4Task8setDelayEi+0x6>
    59aa:	1f 92       	push	r1
    59ac:	cd b7       	in	r28, 0x3d	; 61
    59ae:	de b7       	in	r29, 0x3e	; 62
    59b0:	9a 83       	std	Y+2, r25	; 0x02
    59b2:	89 83       	std	Y+1, r24	; 0x01
    59b4:	7c 83       	std	Y+4, r23	; 0x04
    59b6:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->delay = delay;
    59b8:	89 81       	ldd	r24, Y+1	; 0x01
    59ba:	9a 81       	ldd	r25, Y+2	; 0x02
    59bc:	2b 81       	ldd	r18, Y+3	; 0x03
    59be:	3c 81       	ldd	r19, Y+4	; 0x04
    59c0:	fc 01       	movw	r30, r24
    59c2:	33 83       	std	Z+3, r19	; 0x03
    59c4:	22 83       	std	Z+2, r18	; 0x02
				}
    59c6:	0f 90       	pop	r0
    59c8:	0f 90       	pop	r0
    59ca:	0f 90       	pop	r0
    59cc:	0f 90       	pop	r0
    59ce:	df 91       	pop	r29
    59d0:	cf 91       	pop	r28
    59d2:	08 95       	ret

000059d4 <_ZN10helicopter5tasks4Task15getIsReadyToRunEv>:
				
				bool getIsReadyToRun()
    59d4:	cf 93       	push	r28
    59d6:	df 93       	push	r29
    59d8:	1f 92       	push	r1
    59da:	1f 92       	push	r1
    59dc:	cd b7       	in	r28, 0x3d	; 61
    59de:	de b7       	in	r29, 0x3e	; 62
    59e0:	9a 83       	std	Y+2, r25	; 0x02
    59e2:	89 83       	std	Y+1, r24	; 0x01
				{
					return isReadyToRun;
    59e4:	89 81       	ldd	r24, Y+1	; 0x01
    59e6:	9a 81       	ldd	r25, Y+2	; 0x02
    59e8:	fc 01       	movw	r30, r24
    59ea:	86 81       	ldd	r24, Z+6	; 0x06
				}
    59ec:	0f 90       	pop	r0
    59ee:	0f 90       	pop	r0
    59f0:	df 91       	pop	r29
    59f2:	cf 91       	pop	r28
    59f4:	08 95       	ret

000059f6 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>:
				
				void setIsReadyToRun(bool isReadyToRun)
    59f6:	cf 93       	push	r28
    59f8:	df 93       	push	r29
    59fa:	00 d0       	rcall	.+0      	; 0x59fc <_ZN10helicopter5tasks4Task15setIsReadyToRunEb+0x6>
    59fc:	cd b7       	in	r28, 0x3d	; 61
    59fe:	de b7       	in	r29, 0x3e	; 62
    5a00:	9a 83       	std	Y+2, r25	; 0x02
    5a02:	89 83       	std	Y+1, r24	; 0x01
    5a04:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->isReadyToRun = isReadyToRun;
    5a06:	89 81       	ldd	r24, Y+1	; 0x01
    5a08:	9a 81       	ldd	r25, Y+2	; 0x02
    5a0a:	2b 81       	ldd	r18, Y+3	; 0x03
    5a0c:	fc 01       	movw	r30, r24
    5a0e:	26 83       	std	Z+6, r18	; 0x06
				}
    5a10:	0f 90       	pop	r0
    5a12:	0f 90       	pop	r0
    5a14:	0f 90       	pop	r0
    5a16:	df 91       	pop	r29
    5a18:	cf 91       	pop	r28
    5a1a:	08 95       	ret

00005a1c <_ZN10helicopter5tasks4Task11reduceDelayEv>:
				
				/**
				 * Reduces the delay by one tick.
				 */
				void reduceDelay()
    5a1c:	cf 93       	push	r28
    5a1e:	df 93       	push	r29
    5a20:	1f 92       	push	r1
    5a22:	1f 92       	push	r1
    5a24:	cd b7       	in	r28, 0x3d	; 61
    5a26:	de b7       	in	r29, 0x3e	; 62
    5a28:	9a 83       	std	Y+2, r25	; 0x02
    5a2a:	89 83       	std	Y+1, r24	; 0x01
				{
					delay--;
    5a2c:	89 81       	ldd	r24, Y+1	; 0x01
    5a2e:	9a 81       	ldd	r25, Y+2	; 0x02
    5a30:	fc 01       	movw	r30, r24
    5a32:	82 81       	ldd	r24, Z+2	; 0x02
    5a34:	93 81       	ldd	r25, Z+3	; 0x03
    5a36:	9c 01       	movw	r18, r24
    5a38:	21 50       	subi	r18, 0x01	; 1
    5a3a:	31 09       	sbc	r19, r1
    5a3c:	89 81       	ldd	r24, Y+1	; 0x01
    5a3e:	9a 81       	ldd	r25, Y+2	; 0x02
    5a40:	fc 01       	movw	r30, r24
    5a42:	33 83       	std	Z+3, r19	; 0x03
    5a44:	22 83       	std	Z+2, r18	; 0x02
				}
    5a46:	0f 90       	pop	r0
    5a48:	0f 90       	pop	r0
    5a4a:	df 91       	pop	r29
    5a4c:	cf 91       	pop	r28
    5a4e:	08 95       	ret

00005a50 <_ZN10helicopter9scheduler9Scheduler13getNumOfTasksEv>:
			    /*
				* Starts the timer for determining which tasks are ready to run.
				*/
				void start();
				
				int getNumOfTasks()
    5a50:	cf 93       	push	r28
    5a52:	df 93       	push	r29
    5a54:	1f 92       	push	r1
    5a56:	1f 92       	push	r1
    5a58:	cd b7       	in	r28, 0x3d	; 61
    5a5a:	de b7       	in	r29, 0x3e	; 62
    5a5c:	9a 83       	std	Y+2, r25	; 0x02
    5a5e:	89 83       	std	Y+1, r24	; 0x01
				{
					return numOfTasks;
    5a60:	89 81       	ldd	r24, Y+1	; 0x01
    5a62:	9a 81       	ldd	r25, Y+2	; 0x02
    5a64:	fc 01       	movw	r30, r24
    5a66:	84 89       	ldd	r24, Z+20	; 0x14
    5a68:	95 89       	ldd	r25, Z+21	; 0x15
				}
    5a6a:	0f 90       	pop	r0
    5a6c:	0f 90       	pop	r0
    5a6e:	df 91       	pop	r29
    5a70:	cf 91       	pop	r28
    5a72:	08 95       	ret

00005a74 <_ZN10helicopter9scheduler9Scheduler8getTasksEv>:
				
				Task **getTasks()
    5a74:	cf 93       	push	r28
    5a76:	df 93       	push	r29
    5a78:	1f 92       	push	r1
    5a7a:	1f 92       	push	r1
    5a7c:	cd b7       	in	r28, 0x3d	; 61
    5a7e:	de b7       	in	r29, 0x3e	; 62
    5a80:	9a 83       	std	Y+2, r25	; 0x02
    5a82:	89 83       	std	Y+1, r24	; 0x01
				{
					return tasks;
    5a84:	89 81       	ldd	r24, Y+1	; 0x01
    5a86:	9a 81       	ldd	r25, Y+2	; 0x02
				}
    5a88:	0f 90       	pop	r0
    5a8a:	0f 90       	pop	r0
    5a8c:	df 91       	pop	r29
    5a8e:	cf 91       	pop	r28
    5a90:	08 95       	ret

00005a92 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb>:
				/**
				 * Sets whether a blown frame was detected. (I.e. the dispatcher didn't finish before
				 * the scheduler timmer was triggered again)
				 * @param blownFrameDetected true if a frame was blown, false otherwise.
				 */
				void hasBlownFrame(bool blowFrameDetected)
    5a92:	cf 93       	push	r28
    5a94:	df 93       	push	r29
    5a96:	00 d0       	rcall	.+0      	; 0x5a98 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb+0x6>
    5a98:	cd b7       	in	r28, 0x3d	; 61
    5a9a:	de b7       	in	r29, 0x3e	; 62
    5a9c:	9a 83       	std	Y+2, r25	; 0x02
    5a9e:	89 83       	std	Y+1, r24	; 0x01
    5aa0:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->blowFrameDetected = blowFrameDetected;
    5aa2:	89 81       	ldd	r24, Y+1	; 0x01
    5aa4:	9a 81       	ldd	r25, Y+2	; 0x02
    5aa6:	2b 81       	ldd	r18, Y+3	; 0x03
    5aa8:	fc 01       	movw	r30, r24
    5aaa:	22 8f       	std	Z+26, r18	; 0x1a
				}
    5aac:	0f 90       	pop	r0
    5aae:	0f 90       	pop	r0
    5ab0:	0f 90       	pop	r0
    5ab2:	df 91       	pop	r29
    5ab4:	cf 91       	pop	r28
    5ab6:	08 95       	ret

00005ab8 <_ZN10helicopter9scheduler9Scheduler20hasCompletedDispatchEv>:
				/**
				 * Returns a flag indicating that the dispatch method has completed. This is for
				 * use by the scheduler to determine if the dispatcher blew a frame.
				 * @return true if the dispatch method completed, false otherwise. 
				 */
				bool hasCompletedDispatch()
    5ab8:	cf 93       	push	r28
    5aba:	df 93       	push	r29
    5abc:	1f 92       	push	r1
    5abe:	1f 92       	push	r1
    5ac0:	cd b7       	in	r28, 0x3d	; 61
    5ac2:	de b7       	in	r29, 0x3e	; 62
    5ac4:	9a 83       	std	Y+2, r25	; 0x02
    5ac6:	89 83       	std	Y+1, r24	; 0x01
				{
					return completedDispatch;
    5ac8:	89 81       	ldd	r24, Y+1	; 0x01
    5aca:	9a 81       	ldd	r25, Y+2	; 0x02
    5acc:	fc 01       	movw	r30, r24
    5ace:	83 8d       	ldd	r24, Z+27	; 0x1b
				}
    5ad0:	0f 90       	pop	r0
    5ad2:	0f 90       	pop	r0
    5ad4:	df 91       	pop	r29
    5ad6:	cf 91       	pop	r28
    5ad8:	08 95       	ret

00005ada <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>:
using namespace helicopter::scheduler;

Scheduler* Scheduler::scheduler = NULL;

Scheduler* Scheduler::getScheduler()
{
    5ada:	ef 92       	push	r14
    5adc:	ff 92       	push	r15
    5ade:	0f 93       	push	r16
    5ae0:	1f 93       	push	r17
    5ae2:	cf 93       	push	r28
    5ae4:	df 93       	push	r29
    5ae6:	cd b7       	in	r28, 0x3d	; 61
    5ae8:	de b7       	in	r29, 0x3e	; 62
	if (scheduler == NULL)
    5aea:	80 91 a4 02 	lds	r24, 0x02A4
    5aee:	90 91 a5 02 	lds	r25, 0x02A5
    5af2:	00 97       	sbiw	r24, 0x00	; 0
    5af4:	a1 f4       	brne	.+40     	; 0x5b1e <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv+0x44>
	{
		scheduler = new Scheduler(F_CPU, PRESCALE_BY_SIXTYFOUR, SCHEDULER_TICK_FREQUENCY_HZ);
    5af6:	8c e1       	ldi	r24, 0x1C	; 28
    5af8:	90 e0       	ldi	r25, 0x00	; 0
    5afa:	0e 94 13 39 	call	0x7226	; 0x7226 <_Znwj>
    5afe:	7c 01       	movw	r14, r24
    5b00:	06 e4       	ldi	r16, 0x46	; 70
    5b02:	10 e0       	ldi	r17, 0x00	; 0
    5b04:	20 e4       	ldi	r18, 0x40	; 64
    5b06:	30 e0       	ldi	r19, 0x00	; 0
    5b08:	40 e0       	ldi	r20, 0x00	; 0
    5b0a:	54 e2       	ldi	r21, 0x24	; 36
    5b0c:	64 ef       	ldi	r22, 0xF4	; 244
    5b0e:	70 e0       	ldi	r23, 0x00	; 0
    5b10:	c7 01       	movw	r24, r14
    5b12:	0e 94 9a 2d 	call	0x5b34	; 0x5b34 <_ZN10helicopter9scheduler9SchedulerC1Em9PRESCALERi>
    5b16:	f0 92 a5 02 	sts	0x02A5, r15
    5b1a:	e0 92 a4 02 	sts	0x02A4, r14
	}

	return scheduler;
    5b1e:	80 91 a4 02 	lds	r24, 0x02A4
    5b22:	90 91 a5 02 	lds	r25, 0x02A5
}
    5b26:	df 91       	pop	r29
    5b28:	cf 91       	pop	r28
    5b2a:	1f 91       	pop	r17
    5b2c:	0f 91       	pop	r16
    5b2e:	ff 90       	pop	r15
    5b30:	ef 90       	pop	r14
    5b32:	08 95       	ret

00005b34 <_ZN10helicopter9scheduler9SchedulerC1Em9PRESCALERi>:

Scheduler::Scheduler(unsigned long cpuSpeed, PRESCALER prescaler, int schedulerTickFrequencyHz)
    5b34:	0f 93       	push	r16
    5b36:	1f 93       	push	r17
    5b38:	cf 93       	push	r28
    5b3a:	df 93       	push	r29
    5b3c:	cd b7       	in	r28, 0x3d	; 61
    5b3e:	de b7       	in	r29, 0x3e	; 62
    5b40:	2a 97       	sbiw	r28, 0x0a	; 10
    5b42:	0f b6       	in	r0, 0x3f	; 63
    5b44:	f8 94       	cli
    5b46:	de bf       	out	0x3e, r29	; 62
    5b48:	0f be       	out	0x3f, r0	; 63
    5b4a:	cd bf       	out	0x3d, r28	; 61
    5b4c:	9a 83       	std	Y+2, r25	; 0x02
    5b4e:	89 83       	std	Y+1, r24	; 0x01
    5b50:	4b 83       	std	Y+3, r20	; 0x03
    5b52:	5c 83       	std	Y+4, r21	; 0x04
    5b54:	6d 83       	std	Y+5, r22	; 0x05
    5b56:	7e 83       	std	Y+6, r23	; 0x06
    5b58:	38 87       	std	Y+8, r19	; 0x08
    5b5a:	2f 83       	std	Y+7, r18	; 0x07
    5b5c:	1a 87       	std	Y+10, r17	; 0x0a
    5b5e:	09 87       	std	Y+9, r16	; 0x09
{
	targetTimerCount =  ((cpuSpeed / prescaler) / schedulerTickFrequencyHz);
    5b60:	8f 81       	ldd	r24, Y+7	; 0x07
    5b62:	98 85       	ldd	r25, Y+8	; 0x08
    5b64:	9c 01       	movw	r18, r24
    5b66:	44 27       	eor	r20, r20
    5b68:	37 fd       	sbrc	r19, 7
    5b6a:	40 95       	com	r20
    5b6c:	54 2f       	mov	r21, r20
    5b6e:	8b 81       	ldd	r24, Y+3	; 0x03
    5b70:	9c 81       	ldd	r25, Y+4	; 0x04
    5b72:	ad 81       	ldd	r26, Y+5	; 0x05
    5b74:	be 81       	ldd	r27, Y+6	; 0x06
    5b76:	bc 01       	movw	r22, r24
    5b78:	cd 01       	movw	r24, r26
    5b7a:	0e 94 88 43 	call	0x8710	; 0x8710 <__udivmodsi4>
    5b7e:	da 01       	movw	r26, r20
    5b80:	c9 01       	movw	r24, r18
    5b82:	29 85       	ldd	r18, Y+9	; 0x09
    5b84:	3a 85       	ldd	r19, Y+10	; 0x0a
    5b86:	44 27       	eor	r20, r20
    5b88:	37 fd       	sbrc	r19, 7
    5b8a:	40 95       	com	r20
    5b8c:	54 2f       	mov	r21, r20
    5b8e:	bc 01       	movw	r22, r24
    5b90:	cd 01       	movw	r24, r26
    5b92:	0e 94 88 43 	call	0x8710	; 0x8710 <__udivmodsi4>
    5b96:	da 01       	movw	r26, r20
    5b98:	c9 01       	movw	r24, r18
    5b9a:	9c 01       	movw	r18, r24
    5b9c:	89 81       	ldd	r24, Y+1	; 0x01
    5b9e:	9a 81       	ldd	r25, Y+2	; 0x02
    5ba0:	fc 01       	movw	r30, r24
    5ba2:	37 8b       	std	Z+23, r19	; 0x17
    5ba4:	26 8b       	std	Z+22, r18	; 0x16
	
	//Calculate the timer value to achieve the desired frequency. 
	this->targetTimerCount = targetTimerCount;
    5ba6:	89 81       	ldd	r24, Y+1	; 0x01
    5ba8:	9a 81       	ldd	r25, Y+2	; 0x02
    5baa:	fc 01       	movw	r30, r24
    5bac:	26 89       	ldd	r18, Z+22	; 0x16
    5bae:	37 89       	ldd	r19, Z+23	; 0x17
    5bb0:	89 81       	ldd	r24, Y+1	; 0x01
    5bb2:	9a 81       	ldd	r25, Y+2	; 0x02
    5bb4:	fc 01       	movw	r30, r24
    5bb6:	37 8b       	std	Z+23, r19	; 0x17
    5bb8:	26 8b       	std	Z+22, r18	; 0x16

	this->prescaler = prescaler;
    5bba:	89 81       	ldd	r24, Y+1	; 0x01
    5bbc:	9a 81       	ldd	r25, Y+2	; 0x02
    5bbe:	2f 81       	ldd	r18, Y+7	; 0x07
    5bc0:	38 85       	ldd	r19, Y+8	; 0x08
    5bc2:	fc 01       	movw	r30, r24
    5bc4:	31 8f       	std	Z+25, r19	; 0x19
    5bc6:	20 8f       	std	Z+24, r18	; 0x18
	
	numOfTasks = 0;
    5bc8:	89 81       	ldd	r24, Y+1	; 0x01
    5bca:	9a 81       	ldd	r25, Y+2	; 0x02
    5bcc:	fc 01       	movw	r30, r24
    5bce:	15 8a       	std	Z+21, r1	; 0x15
    5bd0:	14 8a       	std	Z+20, r1	; 0x14
	
	blowFrameDetected = false;
    5bd2:	89 81       	ldd	r24, Y+1	; 0x01
    5bd4:	9a 81       	ldd	r25, Y+2	; 0x02
    5bd6:	fc 01       	movw	r30, r24
    5bd8:	12 8e       	std	Z+26, r1	; 0x1a
	
	completedDispatch = true;
    5bda:	89 81       	ldd	r24, Y+1	; 0x01
    5bdc:	9a 81       	ldd	r25, Y+2	; 0x02
    5bde:	21 e0       	ldi	r18, 0x01	; 1
    5be0:	fc 01       	movw	r30, r24
    5be2:	23 8f       	std	Z+27, r18	; 0x1b
}
    5be4:	2a 96       	adiw	r28, 0x0a	; 10
    5be6:	0f b6       	in	r0, 0x3f	; 63
    5be8:	f8 94       	cli
    5bea:	de bf       	out	0x3e, r29	; 62
    5bec:	0f be       	out	0x3f, r0	; 63
    5bee:	cd bf       	out	0x3d, r28	; 61
    5bf0:	df 91       	pop	r29
    5bf2:	cf 91       	pop	r28
    5bf4:	1f 91       	pop	r17
    5bf6:	0f 91       	pop	r16
    5bf8:	08 95       	ret

00005bfa <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>:
	
	numOfTasks = 0;
}

int Scheduler::addTask(Task *task)
{
    5bfa:	cf 93       	push	r28
    5bfc:	df 93       	push	r29
    5bfe:	00 d0       	rcall	.+0      	; 0x5c00 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x6>
    5c00:	1f 92       	push	r1
    5c02:	cd b7       	in	r28, 0x3d	; 61
    5c04:	de b7       	in	r29, 0x3e	; 62
    5c06:	9a 83       	std	Y+2, r25	; 0x02
    5c08:	89 83       	std	Y+1, r24	; 0x01
    5c0a:	7c 83       	std	Y+4, r23	; 0x04
    5c0c:	6b 83       	std	Y+3, r22	; 0x03
	if (numOfTasks < MAXNUMOFTASKS)
    5c0e:	89 81       	ldd	r24, Y+1	; 0x01
    5c10:	9a 81       	ldd	r25, Y+2	; 0x02
    5c12:	fc 01       	movw	r30, r24
    5c14:	84 89       	ldd	r24, Z+20	; 0x14
    5c16:	95 89       	ldd	r25, Z+21	; 0x15
    5c18:	8a 30       	cpi	r24, 0x0A	; 10
    5c1a:	91 05       	cpc	r25, r1
    5c1c:	04 f5       	brge	.+64     	; 0x5c5e <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x64>
	{
		tasks[numOfTasks] = task;
    5c1e:	89 81       	ldd	r24, Y+1	; 0x01
    5c20:	9a 81       	ldd	r25, Y+2	; 0x02
    5c22:	fc 01       	movw	r30, r24
    5c24:	84 89       	ldd	r24, Z+20	; 0x14
    5c26:	95 89       	ldd	r25, Z+21	; 0x15
    5c28:	29 81       	ldd	r18, Y+1	; 0x01
    5c2a:	3a 81       	ldd	r19, Y+2	; 0x02
    5c2c:	88 0f       	add	r24, r24
    5c2e:	99 1f       	adc	r25, r25
    5c30:	82 0f       	add	r24, r18
    5c32:	93 1f       	adc	r25, r19
    5c34:	2b 81       	ldd	r18, Y+3	; 0x03
    5c36:	3c 81       	ldd	r19, Y+4	; 0x04
    5c38:	fc 01       	movw	r30, r24
    5c3a:	31 83       	std	Z+1, r19	; 0x01
    5c3c:	20 83       	st	Z, r18
		numOfTasks++;
    5c3e:	89 81       	ldd	r24, Y+1	; 0x01
    5c40:	9a 81       	ldd	r25, Y+2	; 0x02
    5c42:	fc 01       	movw	r30, r24
    5c44:	84 89       	ldd	r24, Z+20	; 0x14
    5c46:	95 89       	ldd	r25, Z+21	; 0x15
    5c48:	9c 01       	movw	r18, r24
    5c4a:	2f 5f       	subi	r18, 0xFF	; 255
    5c4c:	3f 4f       	sbci	r19, 0xFF	; 255
    5c4e:	89 81       	ldd	r24, Y+1	; 0x01
    5c50:	9a 81       	ldd	r25, Y+2	; 0x02
    5c52:	fc 01       	movw	r30, r24
    5c54:	35 8b       	std	Z+21, r19	; 0x15
    5c56:	24 8b       	std	Z+20, r18	; 0x14
		
		return 0;
    5c58:	80 e0       	ldi	r24, 0x00	; 0
    5c5a:	90 e0       	ldi	r25, 0x00	; 0
    5c5c:	02 c0       	rjmp	.+4      	; 0x5c62 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x68>
	}

	return -1;
    5c5e:	8f ef       	ldi	r24, 0xFF	; 255
    5c60:	9f ef       	ldi	r25, 0xFF	; 255
}
    5c62:	0f 90       	pop	r0
    5c64:	0f 90       	pop	r0
    5c66:	0f 90       	pop	r0
    5c68:	0f 90       	pop	r0
    5c6a:	df 91       	pop	r29
    5c6c:	cf 91       	pop	r28
    5c6e:	08 95       	ret

00005c70 <_ZN10helicopter9scheduler9Scheduler4initEv>:

void Scheduler::init()
{
    5c70:	cf 93       	push	r28
    5c72:	df 93       	push	r29
    5c74:	00 d0       	rcall	.+0      	; 0x5c76 <_ZN10helicopter9scheduler9Scheduler4initEv+0x6>
    5c76:	1f 92       	push	r1
    5c78:	cd b7       	in	r28, 0x3d	; 61
    5c7a:	de b7       	in	r29, 0x3e	; 62
    5c7c:	9c 83       	std	Y+4, r25	; 0x04
    5c7e:	8b 83       	std	Y+3, r24	; 0x03
	for (int i = 0; i < numOfTasks; i++)
    5c80:	1a 82       	std	Y+2, r1	; 0x02
    5c82:	19 82       	std	Y+1, r1	; 0x01
    5c84:	24 c0       	rjmp	.+72     	; 0x5cce <_ZN10helicopter9scheduler9Scheduler4initEv+0x5e>
	{
		tasks[i]->init();
    5c86:	2b 81       	ldd	r18, Y+3	; 0x03
    5c88:	3c 81       	ldd	r19, Y+4	; 0x04
    5c8a:	89 81       	ldd	r24, Y+1	; 0x01
    5c8c:	9a 81       	ldd	r25, Y+2	; 0x02
    5c8e:	88 0f       	add	r24, r24
    5c90:	99 1f       	adc	r25, r25
    5c92:	82 0f       	add	r24, r18
    5c94:	93 1f       	adc	r25, r19
    5c96:	fc 01       	movw	r30, r24
    5c98:	80 81       	ld	r24, Z
    5c9a:	91 81       	ldd	r25, Z+1	; 0x01
    5c9c:	fc 01       	movw	r30, r24
    5c9e:	80 81       	ld	r24, Z
    5ca0:	91 81       	ldd	r25, Z+1	; 0x01
    5ca2:	06 96       	adiw	r24, 0x06	; 6
    5ca4:	fc 01       	movw	r30, r24
    5ca6:	20 81       	ld	r18, Z
    5ca8:	31 81       	ldd	r19, Z+1	; 0x01
    5caa:	4b 81       	ldd	r20, Y+3	; 0x03
    5cac:	5c 81       	ldd	r21, Y+4	; 0x04
    5cae:	89 81       	ldd	r24, Y+1	; 0x01
    5cb0:	9a 81       	ldd	r25, Y+2	; 0x02
    5cb2:	88 0f       	add	r24, r24
    5cb4:	99 1f       	adc	r25, r25
    5cb6:	84 0f       	add	r24, r20
    5cb8:	95 1f       	adc	r25, r21
    5cba:	fc 01       	movw	r30, r24
    5cbc:	80 81       	ld	r24, Z
    5cbe:	91 81       	ldd	r25, Z+1	; 0x01
    5cc0:	f9 01       	movw	r30, r18
    5cc2:	19 95       	eicall
	return -1;
}

void Scheduler::init()
{
	for (int i = 0; i < numOfTasks; i++)
    5cc4:	89 81       	ldd	r24, Y+1	; 0x01
    5cc6:	9a 81       	ldd	r25, Y+2	; 0x02
    5cc8:	01 96       	adiw	r24, 0x01	; 1
    5cca:	9a 83       	std	Y+2, r25	; 0x02
    5ccc:	89 83       	std	Y+1, r24	; 0x01
    5cce:	8b 81       	ldd	r24, Y+3	; 0x03
    5cd0:	9c 81       	ldd	r25, Y+4	; 0x04
    5cd2:	fc 01       	movw	r30, r24
    5cd4:	24 89       	ldd	r18, Z+20	; 0x14
    5cd6:	35 89       	ldd	r19, Z+21	; 0x15
    5cd8:	41 e0       	ldi	r20, 0x01	; 1
    5cda:	89 81       	ldd	r24, Y+1	; 0x01
    5cdc:	9a 81       	ldd	r25, Y+2	; 0x02
    5cde:	82 17       	cp	r24, r18
    5ce0:	93 07       	cpc	r25, r19
    5ce2:	0c f0       	brlt	.+2      	; 0x5ce6 <_ZN10helicopter9scheduler9Scheduler4initEv+0x76>
    5ce4:	40 e0       	ldi	r20, 0x00	; 0
    5ce6:	44 23       	and	r20, r20
    5ce8:	71 f6       	brne	.-100    	; 0x5c86 <_ZN10helicopter9scheduler9Scheduler4initEv+0x16>
	{
		tasks[i]->init();
	}
	
	//setup timer
	OCR1A = targetTimerCount; //Set Clear Timer on Compare (auto reset) (CTC)
    5cea:	88 e8       	ldi	r24, 0x88	; 136
    5cec:	90 e0       	ldi	r25, 0x00	; 0
    5cee:	2b 81       	ldd	r18, Y+3	; 0x03
    5cf0:	3c 81       	ldd	r19, Y+4	; 0x04
    5cf2:	f9 01       	movw	r30, r18
    5cf4:	26 89       	ldd	r18, Z+22	; 0x16
    5cf6:	37 89       	ldd	r19, Z+23	; 0x17
    5cf8:	fc 01       	movw	r30, r24
    5cfa:	31 83       	std	Z+1, r19	; 0x01
    5cfc:	20 83       	st	Z, r18
		
	TCCR1B |= (1 << WGM12); //Configure timer 1 for ctc mode
    5cfe:	81 e8       	ldi	r24, 0x81	; 129
    5d00:	90 e0       	ldi	r25, 0x00	; 0
    5d02:	21 e8       	ldi	r18, 0x81	; 129
    5d04:	30 e0       	ldi	r19, 0x00	; 0
    5d06:	f9 01       	movw	r30, r18
    5d08:	20 81       	ld	r18, Z
    5d0a:	28 60       	ori	r18, 0x08	; 8
    5d0c:	fc 01       	movw	r30, r24
    5d0e:	20 83       	st	Z, r18
		
	TIMSK1 |= (1 << OCIE1A); //enable ctc interrupt
    5d10:	8f e6       	ldi	r24, 0x6F	; 111
    5d12:	90 e0       	ldi	r25, 0x00	; 0
    5d14:	2f e6       	ldi	r18, 0x6F	; 111
    5d16:	30 e0       	ldi	r19, 0x00	; 0
    5d18:	f9 01       	movw	r30, r18
    5d1a:	20 81       	ld	r18, Z
    5d1c:	22 60       	ori	r18, 0x02	; 2
    5d1e:	fc 01       	movw	r30, r24
    5d20:	20 83       	st	Z, r18
		
	sei(); //Enable global interrupts
    5d22:	78 94       	sei
}
    5d24:	0f 90       	pop	r0
    5d26:	0f 90       	pop	r0
    5d28:	0f 90       	pop	r0
    5d2a:	0f 90       	pop	r0
    5d2c:	df 91       	pop	r29
    5d2e:	cf 91       	pop	r28
    5d30:	08 95       	ret

00005d32 <_ZN10helicopter9scheduler9Scheduler8dispatchEv>:

void Scheduler::dispatch()
{
    5d32:	cf 93       	push	r28
    5d34:	df 93       	push	r29
    5d36:	00 d0       	rcall	.+0      	; 0x5d38 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x6>
    5d38:	00 d0       	rcall	.+0      	; 0x5d3a <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x8>
    5d3a:	cd b7       	in	r28, 0x3d	; 61
    5d3c:	de b7       	in	r29, 0x3e	; 62
    5d3e:	9e 83       	std	Y+6, r25	; 0x06
    5d40:	8d 83       	std	Y+5, r24	; 0x05
	completedDispatch = false;
    5d42:	8d 81       	ldd	r24, Y+5	; 0x05
    5d44:	9e 81       	ldd	r25, Y+6	; 0x06
    5d46:	fc 01       	movw	r30, r24
    5d48:	13 8e       	std	Z+27, r1	; 0x1b
	blowFrameDetected = false;
    5d4a:	8d 81       	ldd	r24, Y+5	; 0x05
    5d4c:	9e 81       	ldd	r25, Y+6	; 0x06
    5d4e:	fc 01       	movw	r30, r24
    5d50:	12 8e       	std	Z+26, r1	; 0x1a
	
	Task *task = NULL;
    5d52:	1c 82       	std	Y+4, r1	; 0x04
    5d54:	1b 82       	std	Y+3, r1	; 0x03
		
	for (int i = 0; i < numOfTasks; i++)
    5d56:	1a 82       	std	Y+2, r1	; 0x02
    5d58:	19 82       	std	Y+1, r1	; 0x01
    5d5a:	2a c0       	rjmp	.+84     	; 0x5db0 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x7e>
	{
		task = tasks[i];
    5d5c:	2d 81       	ldd	r18, Y+5	; 0x05
    5d5e:	3e 81       	ldd	r19, Y+6	; 0x06
    5d60:	89 81       	ldd	r24, Y+1	; 0x01
    5d62:	9a 81       	ldd	r25, Y+2	; 0x02
    5d64:	88 0f       	add	r24, r24
    5d66:	99 1f       	adc	r25, r25
    5d68:	82 0f       	add	r24, r18
    5d6a:	93 1f       	adc	r25, r19
    5d6c:	fc 01       	movw	r30, r24
    5d6e:	80 81       	ld	r24, Z
    5d70:	91 81       	ldd	r25, Z+1	; 0x01
    5d72:	9c 83       	std	Y+4, r25	; 0x04
    5d74:	8b 83       	std	Y+3, r24	; 0x03
		
		if (task->getIsReadyToRun())
    5d76:	8b 81       	ldd	r24, Y+3	; 0x03
    5d78:	9c 81       	ldd	r25, Y+4	; 0x04
    5d7a:	0e 94 ea 2c 	call	0x59d4	; 0x59d4 <_ZN10helicopter5tasks4Task15getIsReadyToRunEv>
    5d7e:	88 23       	and	r24, r24
    5d80:	91 f0       	breq	.+36     	; 0x5da6 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x74>
		{
			task->setIsReadyToRun(false);
    5d82:	8b 81       	ldd	r24, Y+3	; 0x03
    5d84:	9c 81       	ldd	r25, Y+4	; 0x04
    5d86:	60 e0       	ldi	r22, 0x00	; 0
    5d88:	0e 94 fb 2c 	call	0x59f6	; 0x59f6 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>
			task->runTask();
    5d8c:	8b 81       	ldd	r24, Y+3	; 0x03
    5d8e:	9c 81       	ldd	r25, Y+4	; 0x04
    5d90:	fc 01       	movw	r30, r24
    5d92:	80 81       	ld	r24, Z
    5d94:	91 81       	ldd	r25, Z+1	; 0x01
    5d96:	08 96       	adiw	r24, 0x08	; 8
    5d98:	fc 01       	movw	r30, r24
    5d9a:	20 81       	ld	r18, Z
    5d9c:	31 81       	ldd	r19, Z+1	; 0x01
    5d9e:	8b 81       	ldd	r24, Y+3	; 0x03
    5da0:	9c 81       	ldd	r25, Y+4	; 0x04
    5da2:	f9 01       	movw	r30, r18
    5da4:	19 95       	eicall
	completedDispatch = false;
	blowFrameDetected = false;
	
	Task *task = NULL;
		
	for (int i = 0; i < numOfTasks; i++)
    5da6:	89 81       	ldd	r24, Y+1	; 0x01
    5da8:	9a 81       	ldd	r25, Y+2	; 0x02
    5daa:	01 96       	adiw	r24, 0x01	; 1
    5dac:	9a 83       	std	Y+2, r25	; 0x02
    5dae:	89 83       	std	Y+1, r24	; 0x01
    5db0:	8d 81       	ldd	r24, Y+5	; 0x05
    5db2:	9e 81       	ldd	r25, Y+6	; 0x06
    5db4:	fc 01       	movw	r30, r24
    5db6:	24 89       	ldd	r18, Z+20	; 0x14
    5db8:	35 89       	ldd	r19, Z+21	; 0x15
    5dba:	41 e0       	ldi	r20, 0x01	; 1
    5dbc:	89 81       	ldd	r24, Y+1	; 0x01
    5dbe:	9a 81       	ldd	r25, Y+2	; 0x02
    5dc0:	82 17       	cp	r24, r18
    5dc2:	93 07       	cpc	r25, r19
    5dc4:	0c f0       	brlt	.+2      	; 0x5dc8 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x96>
    5dc6:	40 e0       	ldi	r20, 0x00	; 0
    5dc8:	44 23       	and	r20, r20
    5dca:	41 f6       	brne	.-112    	; 0x5d5c <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x2a>
	/*if ((TIFR1 & (1<<OCF1A)) != 0)
	{
		model->SystemModel->
	}*/
	
	completedDispatch = true;
    5dcc:	8d 81       	ldd	r24, Y+5	; 0x05
    5dce:	9e 81       	ldd	r25, Y+6	; 0x06
    5dd0:	21 e0       	ldi	r18, 0x01	; 1
    5dd2:	fc 01       	movw	r30, r24
    5dd4:	23 8f       	std	Z+27, r18	; 0x1b
	
	//tells the processor to goto sleep to conserve power since no more
	//tasks are scheduled to be run until after the next scheduler interrupt(tick)
	//which will then wake the processor back up.
	set_sleep_mode(SLEEP_MODE_IDLE);
    5dd6:	83 e5       	ldi	r24, 0x53	; 83
    5dd8:	90 e0       	ldi	r25, 0x00	; 0
    5dda:	23 e5       	ldi	r18, 0x53	; 83
    5ddc:	30 e0       	ldi	r19, 0x00	; 0
    5dde:	f9 01       	movw	r30, r18
    5de0:	20 81       	ld	r18, Z
    5de2:	21 7f       	andi	r18, 0xF1	; 241
    5de4:	fc 01       	movw	r30, r24
    5de6:	20 83       	st	Z, r18
	sleep_mode();
    5de8:	83 e5       	ldi	r24, 0x53	; 83
    5dea:	90 e0       	ldi	r25, 0x00	; 0
    5dec:	23 e5       	ldi	r18, 0x53	; 83
    5dee:	30 e0       	ldi	r19, 0x00	; 0
    5df0:	f9 01       	movw	r30, r18
    5df2:	20 81       	ld	r18, Z
    5df4:	21 60       	ori	r18, 0x01	; 1
    5df6:	fc 01       	movw	r30, r24
    5df8:	20 83       	st	Z, r18
    5dfa:	88 95       	sleep
    5dfc:	83 e5       	ldi	r24, 0x53	; 83
    5dfe:	90 e0       	ldi	r25, 0x00	; 0
    5e00:	23 e5       	ldi	r18, 0x53	; 83
    5e02:	30 e0       	ldi	r19, 0x00	; 0
    5e04:	f9 01       	movw	r30, r18
    5e06:	20 81       	ld	r18, Z
    5e08:	2e 7f       	andi	r18, 0xFE	; 254
    5e0a:	fc 01       	movw	r30, r24
    5e0c:	20 83       	st	Z, r18
}
    5e0e:	26 96       	adiw	r28, 0x06	; 6
    5e10:	0f b6       	in	r0, 0x3f	; 63
    5e12:	f8 94       	cli
    5e14:	de bf       	out	0x3e, r29	; 62
    5e16:	0f be       	out	0x3f, r0	; 63
    5e18:	cd bf       	out	0x3d, r28	; 61
    5e1a:	df 91       	pop	r29
    5e1c:	cf 91       	pop	r28
    5e1e:	08 95       	ret

00005e20 <_ZN10helicopter9scheduler9Scheduler5startEv>:

void Scheduler::start()
{
    5e20:	cf 93       	push	r28
    5e22:	df 93       	push	r29
    5e24:	1f 92       	push	r1
    5e26:	1f 92       	push	r1
    5e28:	cd b7       	in	r28, 0x3d	; 61
    5e2a:	de b7       	in	r29, 0x3e	; 62
    5e2c:	9a 83       	std	Y+2, r25	; 0x02
    5e2e:	89 83       	std	Y+1, r24	; 0x01
	//Setting TCCR to a prescaler will start the timer.
	switch(this->prescaler)
    5e30:	89 81       	ldd	r24, Y+1	; 0x01
    5e32:	9a 81       	ldd	r25, Y+2	; 0x02
    5e34:	fc 01       	movw	r30, r24
    5e36:	80 8d       	ldd	r24, Z+24	; 0x18
    5e38:	91 8d       	ldd	r25, Z+25	; 0x19
    5e3a:	80 34       	cpi	r24, 0x40	; 64
    5e3c:	91 05       	cpc	r25, r1
    5e3e:	39 f1       	breq	.+78     	; 0x5e8e <_ZN10helicopter9scheduler9Scheduler5startEv+0x6e>
    5e40:	81 34       	cpi	r24, 0x41	; 65
    5e42:	91 05       	cpc	r25, r1
    5e44:	3c f4       	brge	.+14     	; 0x5e54 <_ZN10helicopter9scheduler9Scheduler5startEv+0x34>
    5e46:	81 30       	cpi	r24, 0x01	; 1
    5e48:	91 05       	cpc	r25, r1
    5e4a:	69 f0       	breq	.+26     	; 0x5e66 <_ZN10helicopter9scheduler9Scheduler5startEv+0x46>
    5e4c:	88 30       	cpi	r24, 0x08	; 8
    5e4e:	91 05       	cpc	r25, r1
    5e50:	a1 f0       	breq	.+40     	; 0x5e7a <_ZN10helicopter9scheduler9Scheduler5startEv+0x5a>
    5e52:	3b c0       	rjmp	.+118    	; 0x5eca <_ZN10helicopter9scheduler9Scheduler5startEv+0xaa>
    5e54:	81 15       	cp	r24, r1
    5e56:	f1 e0       	ldi	r31, 0x01	; 1
    5e58:	9f 07       	cpc	r25, r31
    5e5a:	19 f1       	breq	.+70     	; 0x5ea2 <_ZN10helicopter9scheduler9Scheduler5startEv+0x82>
    5e5c:	81 15       	cp	r24, r1
    5e5e:	24 e0       	ldi	r18, 0x04	; 4
    5e60:	92 07       	cpc	r25, r18
    5e62:	49 f1       	breq	.+82     	; 0x5eb6 <_ZN10helicopter9scheduler9Scheduler5startEv+0x96>
    5e64:	32 c0       	rjmp	.+100    	; 0x5eca <_ZN10helicopter9scheduler9Scheduler5startEv+0xaa>
	{
		case 1:
			TCCR1B |= NoPrescaling;
    5e66:	81 e8       	ldi	r24, 0x81	; 129
    5e68:	90 e0       	ldi	r25, 0x00	; 0
    5e6a:	21 e8       	ldi	r18, 0x81	; 129
    5e6c:	30 e0       	ldi	r19, 0x00	; 0
    5e6e:	f9 01       	movw	r30, r18
    5e70:	20 81       	ld	r18, Z
    5e72:	21 60       	ori	r18, 0x01	; 1
    5e74:	fc 01       	movw	r30, r24
    5e76:	20 83       	st	Z, r18
			break;
    5e78:	31 c0       	rjmp	.+98     	; 0x5edc <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 8:
			TCCR1B |= PrescaleByEight;
    5e7a:	81 e8       	ldi	r24, 0x81	; 129
    5e7c:	90 e0       	ldi	r25, 0x00	; 0
    5e7e:	21 e8       	ldi	r18, 0x81	; 129
    5e80:	30 e0       	ldi	r19, 0x00	; 0
    5e82:	f9 01       	movw	r30, r18
    5e84:	20 81       	ld	r18, Z
    5e86:	22 60       	ori	r18, 0x02	; 2
    5e88:	fc 01       	movw	r30, r24
    5e8a:	20 83       	st	Z, r18
			break;
    5e8c:	27 c0       	rjmp	.+78     	; 0x5edc <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 64:
			TCCR1B |= PrescaleBySixtyFour;
    5e8e:	81 e8       	ldi	r24, 0x81	; 129
    5e90:	90 e0       	ldi	r25, 0x00	; 0
    5e92:	21 e8       	ldi	r18, 0x81	; 129
    5e94:	30 e0       	ldi	r19, 0x00	; 0
    5e96:	f9 01       	movw	r30, r18
    5e98:	20 81       	ld	r18, Z
    5e9a:	23 60       	ori	r18, 0x03	; 3
    5e9c:	fc 01       	movw	r30, r24
    5e9e:	20 83       	st	Z, r18
			break;
    5ea0:	1d c0       	rjmp	.+58     	; 0x5edc <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 256:
			TCCR1B |= PrescaleByTwofiftysix;
    5ea2:	81 e8       	ldi	r24, 0x81	; 129
    5ea4:	90 e0       	ldi	r25, 0x00	; 0
    5ea6:	21 e8       	ldi	r18, 0x81	; 129
    5ea8:	30 e0       	ldi	r19, 0x00	; 0
    5eaa:	f9 01       	movw	r30, r18
    5eac:	20 81       	ld	r18, Z
    5eae:	24 60       	ori	r18, 0x04	; 4
    5eb0:	fc 01       	movw	r30, r24
    5eb2:	20 83       	st	Z, r18
			break;
    5eb4:	13 c0       	rjmp	.+38     	; 0x5edc <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 1024:
			TCCR1B |= PrescaleByTentwentyfour;
    5eb6:	81 e8       	ldi	r24, 0x81	; 129
    5eb8:	90 e0       	ldi	r25, 0x00	; 0
    5eba:	21 e8       	ldi	r18, 0x81	; 129
    5ebc:	30 e0       	ldi	r19, 0x00	; 0
    5ebe:	f9 01       	movw	r30, r18
    5ec0:	20 81       	ld	r18, Z
    5ec2:	25 60       	ori	r18, 0x05	; 5
    5ec4:	fc 01       	movw	r30, r24
    5ec6:	20 83       	st	Z, r18
			break;
    5ec8:	09 c0       	rjmp	.+18     	; 0x5edc <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		default:
			TCCR1B |= NoPrescaling;	
    5eca:	81 e8       	ldi	r24, 0x81	; 129
    5ecc:	90 e0       	ldi	r25, 0x00	; 0
    5ece:	21 e8       	ldi	r18, 0x81	; 129
    5ed0:	30 e0       	ldi	r19, 0x00	; 0
    5ed2:	f9 01       	movw	r30, r18
    5ed4:	20 81       	ld	r18, Z
    5ed6:	21 60       	ori	r18, 0x01	; 1
    5ed8:	fc 01       	movw	r30, r24
    5eda:	20 83       	st	Z, r18
	}
}
    5edc:	0f 90       	pop	r0
    5ede:	0f 90       	pop	r0
    5ee0:	df 91       	pop	r29
    5ee2:	cf 91       	pop	r28
    5ee4:	08 95       	ret

00005ee6 <__vector_17>:

/**
 * Interrupt service routine for determining when tasks are ready to execute.
 */
ISR(TIMER1_COMPA_vect)
{
    5ee6:	1f 92       	push	r1
    5ee8:	0f 92       	push	r0
    5eea:	00 90 5f 00 	lds	r0, 0x005F
    5eee:	0f 92       	push	r0
    5ef0:	11 24       	eor	r1, r1
    5ef2:	00 90 5b 00 	lds	r0, 0x005B
    5ef6:	0f 92       	push	r0
    5ef8:	2f 93       	push	r18
    5efa:	3f 93       	push	r19
    5efc:	4f 93       	push	r20
    5efe:	5f 93       	push	r21
    5f00:	6f 93       	push	r22
    5f02:	7f 93       	push	r23
    5f04:	8f 93       	push	r24
    5f06:	9f 93       	push	r25
    5f08:	af 93       	push	r26
    5f0a:	bf 93       	push	r27
    5f0c:	ef 93       	push	r30
    5f0e:	ff 93       	push	r31
    5f10:	cf 93       	push	r28
    5f12:	df 93       	push	r29
    5f14:	00 d0       	rcall	.+0      	; 0x5f16 <__vector_17+0x30>
    5f16:	00 d0       	rcall	.+0      	; 0x5f18 <__vector_17+0x32>
    5f18:	cd b7       	in	r28, 0x3d	; 61
    5f1a:	de b7       	in	r29, 0x3e	; 62
	//TODO do we want to stop interrupts in this method?
	Scheduler *scheduler = Scheduler::getScheduler();
    5f1c:	0e 94 6d 2d 	call	0x5ada	; 0x5ada <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>
    5f20:	9c 83       	std	Y+4, r25	; 0x04
    5f22:	8b 83       	std	Y+3, r24	; 0x03
	
	//Detect if the scheduler blew a frame
	if (!scheduler->hasCompletedDispatch())
    5f24:	8b 81       	ldd	r24, Y+3	; 0x03
    5f26:	9c 81       	ldd	r25, Y+4	; 0x04
    5f28:	0e 94 5c 2d 	call	0x5ab8	; 0x5ab8 <_ZN10helicopter9scheduler9Scheduler20hasCompletedDispatchEv>
    5f2c:	98 2f       	mov	r25, r24
    5f2e:	81 e0       	ldi	r24, 0x01	; 1
    5f30:	89 27       	eor	r24, r25
    5f32:	88 23       	and	r24, r24
    5f34:	29 f0       	breq	.+10     	; 0x5f40 <__vector_17+0x5a>
	{
		scheduler->hasBlownFrame(true);
    5f36:	8b 81       	ldd	r24, Y+3	; 0x03
    5f38:	9c 81       	ldd	r25, Y+4	; 0x04
    5f3a:	61 e0       	ldi	r22, 0x01	; 1
    5f3c:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb>
	}
	
	Task *task = NULL;
    5f40:	1e 82       	std	Y+6, r1	; 0x06
    5f42:	1d 82       	std	Y+5, r1	; 0x05
	
	//iterate through all the tasks and decrement how many
	//'ticks' are left before the task is ready to execute.
	for (int i = 0; i < scheduler->getNumOfTasks(); i++)
    5f44:	1a 82       	std	Y+2, r1	; 0x02
    5f46:	19 82       	std	Y+1, r1	; 0x01
    5f48:	33 c0       	rjmp	.+102    	; 0x5fb0 <__vector_17+0xca>
	{
		task = scheduler->getTasks()[i];
    5f4a:	8b 81       	ldd	r24, Y+3	; 0x03
    5f4c:	9c 81       	ldd	r25, Y+4	; 0x04
    5f4e:	0e 94 3a 2d 	call	0x5a74	; 0x5a74 <_ZN10helicopter9scheduler9Scheduler8getTasksEv>
    5f52:	9c 01       	movw	r18, r24
    5f54:	89 81       	ldd	r24, Y+1	; 0x01
    5f56:	9a 81       	ldd	r25, Y+2	; 0x02
    5f58:	88 0f       	add	r24, r24
    5f5a:	99 1f       	adc	r25, r25
    5f5c:	82 0f       	add	r24, r18
    5f5e:	93 1f       	adc	r25, r19
    5f60:	fc 01       	movw	r30, r24
    5f62:	80 81       	ld	r24, Z
    5f64:	91 81       	ldd	r25, Z+1	; 0x01
    5f66:	9e 83       	std	Y+6, r25	; 0x06
    5f68:	8d 83       	std	Y+5, r24	; 0x05
		
		if (task->getDelay() == 0)
    5f6a:	8d 81       	ldd	r24, Y+5	; 0x05
    5f6c:	9e 81       	ldd	r25, Y+6	; 0x06
    5f6e:	0e 94 ae 2c 	call	0x595c	; 0x595c <_ZN10helicopter5tasks4Task8getDelayEv>
    5f72:	21 e0       	ldi	r18, 0x01	; 1
    5f74:	00 97       	sbiw	r24, 0x00	; 0
    5f76:	09 f0       	breq	.+2      	; 0x5f7a <__vector_17+0x94>
    5f78:	20 e0       	ldi	r18, 0x00	; 0
    5f7a:	22 23       	and	r18, r18
    5f7c:	81 f0       	breq	.+32     	; 0x5f9e <__vector_17+0xb8>
		{
			//Mark the task as ready to run
			task->setIsReadyToRun(true);
    5f7e:	8d 81       	ldd	r24, Y+5	; 0x05
    5f80:	9e 81       	ldd	r25, Y+6	; 0x06
    5f82:	61 e0       	ldi	r22, 0x01	; 1
    5f84:	0e 94 fb 2c 	call	0x59f6	; 0x59f6 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>
			task->setDelay(task->getPeriod());
    5f88:	8d 81       	ldd	r24, Y+5	; 0x05
    5f8a:	9e 81       	ldd	r25, Y+6	; 0x06
    5f8c:	0e 94 c0 2c 	call	0x5980	; 0x5980 <_ZN10helicopter5tasks4Task9getPeriodEv>
    5f90:	9c 01       	movw	r18, r24
    5f92:	8d 81       	ldd	r24, Y+5	; 0x05
    5f94:	9e 81       	ldd	r25, Y+6	; 0x06
    5f96:	b9 01       	movw	r22, r18
    5f98:	0e 94 d2 2c 	call	0x59a4	; 0x59a4 <_ZN10helicopter5tasks4Task8setDelayEi>
    5f9c:	04 c0       	rjmp	.+8      	; 0x5fa6 <__vector_17+0xc0>
		}else
		{
			task->reduceDelay();
    5f9e:	8d 81       	ldd	r24, Y+5	; 0x05
    5fa0:	9e 81       	ldd	r25, Y+6	; 0x06
    5fa2:	0e 94 0e 2d 	call	0x5a1c	; 0x5a1c <_ZN10helicopter5tasks4Task11reduceDelayEv>
	
	Task *task = NULL;
	
	//iterate through all the tasks and decrement how many
	//'ticks' are left before the task is ready to execute.
	for (int i = 0; i < scheduler->getNumOfTasks(); i++)
    5fa6:	89 81       	ldd	r24, Y+1	; 0x01
    5fa8:	9a 81       	ldd	r25, Y+2	; 0x02
    5faa:	01 96       	adiw	r24, 0x01	; 1
    5fac:	9a 83       	std	Y+2, r25	; 0x02
    5fae:	89 83       	std	Y+1, r24	; 0x01
    5fb0:	8b 81       	ldd	r24, Y+3	; 0x03
    5fb2:	9c 81       	ldd	r25, Y+4	; 0x04
    5fb4:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <_ZN10helicopter9scheduler9Scheduler13getNumOfTasksEv>
    5fb8:	9c 01       	movw	r18, r24
    5fba:	41 e0       	ldi	r20, 0x01	; 1
    5fbc:	89 81       	ldd	r24, Y+1	; 0x01
    5fbe:	9a 81       	ldd	r25, Y+2	; 0x02
    5fc0:	82 17       	cp	r24, r18
    5fc2:	93 07       	cpc	r25, r19
    5fc4:	0c f0       	brlt	.+2      	; 0x5fc8 <__vector_17+0xe2>
    5fc6:	40 e0       	ldi	r20, 0x00	; 0
    5fc8:	44 23       	and	r20, r20
    5fca:	09 f0       	breq	.+2      	; 0x5fce <__vector_17+0xe8>
    5fcc:	be cf       	rjmp	.-132    	; 0x5f4a <__vector_17+0x64>
		}else
		{
			task->reduceDelay();
		}
	}
}
    5fce:	26 96       	adiw	r28, 0x06	; 6
    5fd0:	0f b6       	in	r0, 0x3f	; 63
    5fd2:	f8 94       	cli
    5fd4:	de bf       	out	0x3e, r29	; 62
    5fd6:	0f be       	out	0x3f, r0	; 63
    5fd8:	cd bf       	out	0x3d, r28	; 61
    5fda:	df 91       	pop	r29
    5fdc:	cf 91       	pop	r28
    5fde:	ff 91       	pop	r31
    5fe0:	ef 91       	pop	r30
    5fe2:	bf 91       	pop	r27
    5fe4:	af 91       	pop	r26
    5fe6:	9f 91       	pop	r25
    5fe8:	8f 91       	pop	r24
    5fea:	7f 91       	pop	r23
    5fec:	6f 91       	pop	r22
    5fee:	5f 91       	pop	r21
    5ff0:	4f 91       	pop	r20
    5ff2:	3f 91       	pop	r19
    5ff4:	2f 91       	pop	r18
    5ff6:	0f 90       	pop	r0
    5ff8:	00 92 5b 00 	sts	0x005B, r0
    5ffc:	0f 90       	pop	r0
    5ffe:	00 92 5f 00 	sts	0x005F, r0
    6002:	0f 90       	pop	r0
    6004:	1f 90       	pop	r1
    6006:	18 95       	reti

00006008 <_ZN10helicopter5tasks4Task4initEv>:
				virtual ~Task(){}
				
				/**
				 * Function to initialize the task before execution.
				 */
				virtual void init(){;}
    6008:	cf 93       	push	r28
    600a:	df 93       	push	r29
    600c:	1f 92       	push	r1
    600e:	1f 92       	push	r1
    6010:	cd b7       	in	r28, 0x3d	; 61
    6012:	de b7       	in	r29, 0x3e	; 62
    6014:	9a 83       	std	Y+2, r25	; 0x02
    6016:	89 83       	std	Y+1, r24	; 0x01
    6018:	0f 90       	pop	r0
    601a:	0f 90       	pop	r0
    601c:	df 91       	pop	r29
    601e:	cf 91       	pop	r28
    6020:	08 95       	ret

00006022 <_ZN10helicopter5tasks16PIDInnerLoopTaskC1EPNS_10controller13PIDControllerEii>:
 */ 
#include "PIDInnerLoopTask.h"

using namespace helicopter::tasks;

PIDInnerLoopTask::PIDInnerLoopTask (PIDController *pidController, int delay, int period) :
    6022:	cf 93       	push	r28
    6024:	df 93       	push	r29
    6026:	cd b7       	in	r28, 0x3d	; 61
    6028:	de b7       	in	r29, 0x3e	; 62
    602a:	28 97       	sbiw	r28, 0x08	; 8
    602c:	0f b6       	in	r0, 0x3f	; 63
    602e:	f8 94       	cli
    6030:	de bf       	out	0x3e, r29	; 62
    6032:	0f be       	out	0x3f, r0	; 63
    6034:	cd bf       	out	0x3d, r28	; 61
    6036:	9a 83       	std	Y+2, r25	; 0x02
    6038:	89 83       	std	Y+1, r24	; 0x01
    603a:	7c 83       	std	Y+4, r23	; 0x04
    603c:	6b 83       	std	Y+3, r22	; 0x03
    603e:	5e 83       	std	Y+6, r21	; 0x06
    6040:	4d 83       	std	Y+5, r20	; 0x05
    6042:	38 87       	std	Y+8, r19	; 0x08
    6044:	2f 83       	std	Y+7, r18	; 0x07
Task(delay, period),
pidController(pidController)
    6046:	89 81       	ldd	r24, Y+1	; 0x01
    6048:	9a 81       	ldd	r25, Y+2	; 0x02
    604a:	4f 81       	ldd	r20, Y+7	; 0x07
    604c:	58 85       	ldd	r21, Y+8	; 0x08
    604e:	2d 81       	ldd	r18, Y+5	; 0x05
    6050:	3e 81       	ldd	r19, Y+6	; 0x06
    6052:	b9 01       	movw	r22, r18
    6054:	0e 94 21 38 	call	0x7042	; 0x7042 <_ZN10helicopter5tasks4TaskC1Eii>
    6058:	89 81       	ldd	r24, Y+1	; 0x01
    605a:	9a 81       	ldd	r25, Y+2	; 0x02
    605c:	24 e5       	ldi	r18, 0x54	; 84
    605e:	32 e0       	ldi	r19, 0x02	; 2
    6060:	fc 01       	movw	r30, r24
    6062:	31 83       	std	Z+1, r19	; 0x01
    6064:	20 83       	st	Z, r18
    6066:	89 81       	ldd	r24, Y+1	; 0x01
    6068:	9a 81       	ldd	r25, Y+2	; 0x02
    606a:	2b 81       	ldd	r18, Y+3	; 0x03
    606c:	3c 81       	ldd	r19, Y+4	; 0x04
    606e:	fc 01       	movw	r30, r24
    6070:	30 87       	std	Z+8, r19	; 0x08
    6072:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    6074:	28 96       	adiw	r28, 0x08	; 8
    6076:	0f b6       	in	r0, 0x3f	; 63
    6078:	f8 94       	cli
    607a:	de bf       	out	0x3e, r29	; 62
    607c:	0f be       	out	0x3f, r0	; 63
    607e:	cd bf       	out	0x3d, r28	; 61
    6080:	df 91       	pop	r29
    6082:	cf 91       	pop	r28
    6084:	08 95       	ret

00006086 <_ZN10helicopter5tasks16PIDInnerLoopTask11runTaskImplEv>:

void PIDInnerLoopTask::runTaskImpl()
{
    6086:	cf 93       	push	r28
    6088:	df 93       	push	r29
    608a:	1f 92       	push	r1
    608c:	1f 92       	push	r1
    608e:	cd b7       	in	r28, 0x3d	; 61
    6090:	de b7       	in	r29, 0x3e	; 62
    6092:	9a 83       	std	Y+2, r25	; 0x02
    6094:	89 83       	std	Y+1, r24	; 0x01
	//pidController->cyclicLateralInnerLoopUpdate();
	pidController->cyclicLongitudeInnerLoopUpdate();
    6096:	89 81       	ldd	r24, Y+1	; 0x01
    6098:	9a 81       	ldd	r25, Y+2	; 0x02
    609a:	fc 01       	movw	r30, r24
    609c:	87 81       	ldd	r24, Z+7	; 0x07
    609e:	90 85       	ldd	r25, Z+8	; 0x08
    60a0:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN10helicopter10controller13PIDController30cyclicLongitudeInnerLoopUpdateEv>
}
    60a4:	0f 90       	pop	r0
    60a6:	0f 90       	pop	r0
    60a8:	df 91       	pop	r29
    60aa:	cf 91       	pop	r28
    60ac:	08 95       	ret

000060ae <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class executes the outer loop of the PID controller
		 */
		class PIDInnerLoopTask : public Task
    60ae:	cf 93       	push	r28
    60b0:	df 93       	push	r29
    60b2:	1f 92       	push	r1
    60b4:	1f 92       	push	r1
    60b6:	cd b7       	in	r28, 0x3d	; 61
    60b8:	de b7       	in	r29, 0x3e	; 62
    60ba:	9a 83       	std	Y+2, r25	; 0x02
    60bc:	89 83       	std	Y+1, r24	; 0x01
    60be:	89 81       	ldd	r24, Y+1	; 0x01
    60c0:	9a 81       	ldd	r25, Y+2	; 0x02
    60c2:	24 e5       	ldi	r18, 0x54	; 84
    60c4:	32 e0       	ldi	r19, 0x02	; 2
    60c6:	fc 01       	movw	r30, r24
    60c8:	31 83       	std	Z+1, r19	; 0x01
    60ca:	20 83       	st	Z, r18
    60cc:	89 81       	ldd	r24, Y+1	; 0x01
    60ce:	9a 81       	ldd	r25, Y+2	; 0x02
    60d0:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <_ZN10helicopter5tasks4TaskD1Ev>
    60d4:	80 e0       	ldi	r24, 0x00	; 0
    60d6:	90 e0       	ldi	r25, 0x00	; 0
    60d8:	81 70       	andi	r24, 0x01	; 1
    60da:	99 27       	eor	r25, r25
    60dc:	00 97       	sbiw	r24, 0x00	; 0
    60de:	21 f0       	breq	.+8      	; 0x60e8 <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev+0x3a>
    60e0:	89 81       	ldd	r24, Y+1	; 0x01
    60e2:	9a 81       	ldd	r25, Y+2	; 0x02
    60e4:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    60e8:	0f 90       	pop	r0
    60ea:	0f 90       	pop	r0
    60ec:	df 91       	pop	r29
    60ee:	cf 91       	pop	r28
    60f0:	08 95       	ret

000060f2 <_ZN10helicopter5tasks16PIDInnerLoopTaskD0Ev>:
    60f2:	cf 93       	push	r28
    60f4:	df 93       	push	r29
    60f6:	1f 92       	push	r1
    60f8:	1f 92       	push	r1
    60fa:	cd b7       	in	r28, 0x3d	; 61
    60fc:	de b7       	in	r29, 0x3e	; 62
    60fe:	9a 83       	std	Y+2, r25	; 0x02
    6100:	89 83       	std	Y+1, r24	; 0x01
    6102:	89 81       	ldd	r24, Y+1	; 0x01
    6104:	9a 81       	ldd	r25, Y+2	; 0x02
    6106:	0e 94 57 30 	call	0x60ae	; 0x60ae <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>
    610a:	89 81       	ldd	r24, Y+1	; 0x01
    610c:	9a 81       	ldd	r25, Y+2	; 0x02
    610e:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    6112:	0f 90       	pop	r0
    6114:	0f 90       	pop	r0
    6116:	df 91       	pop	r29
    6118:	cf 91       	pop	r28
    611a:	08 95       	ret

0000611c <_ZN10helicopter5tasks16PIDOuterLoopTaskC1EPNS_10controller13PIDControllerEii>:
 */ 
#include "PIDOuterLoopTask.h"

using namespace helicopter::tasks;

PIDOuterLoopTask::PIDOuterLoopTask (PIDController *pidController, int delay, int period) :
    611c:	cf 93       	push	r28
    611e:	df 93       	push	r29
    6120:	cd b7       	in	r28, 0x3d	; 61
    6122:	de b7       	in	r29, 0x3e	; 62
    6124:	28 97       	sbiw	r28, 0x08	; 8
    6126:	0f b6       	in	r0, 0x3f	; 63
    6128:	f8 94       	cli
    612a:	de bf       	out	0x3e, r29	; 62
    612c:	0f be       	out	0x3f, r0	; 63
    612e:	cd bf       	out	0x3d, r28	; 61
    6130:	9a 83       	std	Y+2, r25	; 0x02
    6132:	89 83       	std	Y+1, r24	; 0x01
    6134:	7c 83       	std	Y+4, r23	; 0x04
    6136:	6b 83       	std	Y+3, r22	; 0x03
    6138:	5e 83       	std	Y+6, r21	; 0x06
    613a:	4d 83       	std	Y+5, r20	; 0x05
    613c:	38 87       	std	Y+8, r19	; 0x08
    613e:	2f 83       	std	Y+7, r18	; 0x07
Task(delay, period),
pidController(pidController)
    6140:	89 81       	ldd	r24, Y+1	; 0x01
    6142:	9a 81       	ldd	r25, Y+2	; 0x02
    6144:	4f 81       	ldd	r20, Y+7	; 0x07
    6146:	58 85       	ldd	r21, Y+8	; 0x08
    6148:	2d 81       	ldd	r18, Y+5	; 0x05
    614a:	3e 81       	ldd	r19, Y+6	; 0x06
    614c:	b9 01       	movw	r22, r18
    614e:	0e 94 21 38 	call	0x7042	; 0x7042 <_ZN10helicopter5tasks4TaskC1Eii>
    6152:	89 81       	ldd	r24, Y+1	; 0x01
    6154:	9a 81       	ldd	r25, Y+2	; 0x02
    6156:	22 e6       	ldi	r18, 0x62	; 98
    6158:	32 e0       	ldi	r19, 0x02	; 2
    615a:	fc 01       	movw	r30, r24
    615c:	31 83       	std	Z+1, r19	; 0x01
    615e:	20 83       	st	Z, r18
    6160:	89 81       	ldd	r24, Y+1	; 0x01
    6162:	9a 81       	ldd	r25, Y+2	; 0x02
    6164:	2b 81       	ldd	r18, Y+3	; 0x03
    6166:	3c 81       	ldd	r19, Y+4	; 0x04
    6168:	fc 01       	movw	r30, r24
    616a:	30 87       	std	Z+8, r19	; 0x08
    616c:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    616e:	28 96       	adiw	r28, 0x08	; 8
    6170:	0f b6       	in	r0, 0x3f	; 63
    6172:	f8 94       	cli
    6174:	de bf       	out	0x3e, r29	; 62
    6176:	0f be       	out	0x3f, r0	; 63
    6178:	cd bf       	out	0x3d, r28	; 61
    617a:	df 91       	pop	r29
    617c:	cf 91       	pop	r28
    617e:	08 95       	ret

00006180 <_ZN10helicopter5tasks16PIDOuterLoopTask11runTaskImplEv>:

void PIDOuterLoopTask::runTaskImpl()
{
    6180:	cf 93       	push	r28
    6182:	df 93       	push	r29
    6184:	1f 92       	push	r1
    6186:	1f 92       	push	r1
    6188:	cd b7       	in	r28, 0x3d	; 61
    618a:	de b7       	in	r29, 0x3e	; 62
    618c:	9a 83       	std	Y+2, r25	; 0x02
    618e:	89 83       	std	Y+1, r24	; 0x01
	pidController->tailRotorCollectiveOuterLoopUpdate();
    6190:	89 81       	ldd	r24, Y+1	; 0x01
    6192:	9a 81       	ldd	r25, Y+2	; 0x02
    6194:	fc 01       	movw	r30, r24
    6196:	87 81       	ldd	r24, Z+7	; 0x07
    6198:	90 85       	ldd	r25, Z+8	; 0x08
    619a:	0e 94 af 0a 	call	0x155e	; 0x155e <_ZN10helicopter10controller13PIDController34tailRotorCollectiveOuterLoopUpdateEv>
	pidController->cyclicLongitudeOuterLoopUpdate();
    619e:	89 81       	ldd	r24, Y+1	; 0x01
    61a0:	9a 81       	ldd	r25, Y+2	; 0x02
    61a2:	fc 01       	movw	r30, r24
    61a4:	87 81       	ldd	r24, Z+7	; 0x07
    61a6:	90 85       	ldd	r25, Z+8	; 0x08
    61a8:	0e 94 9e 08 	call	0x113c	; 0x113c <_ZN10helicopter10controller13PIDController30cyclicLongitudeOuterLoopUpdateEv>
}
    61ac:	0f 90       	pop	r0
    61ae:	0f 90       	pop	r0
    61b0:	df 91       	pop	r29
    61b2:	cf 91       	pop	r28
    61b4:	08 95       	ret

000061b6 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class executes the outer loop of the PID controller
		 */
		class PIDOuterLoopTask : public Task
    61b6:	cf 93       	push	r28
    61b8:	df 93       	push	r29
    61ba:	1f 92       	push	r1
    61bc:	1f 92       	push	r1
    61be:	cd b7       	in	r28, 0x3d	; 61
    61c0:	de b7       	in	r29, 0x3e	; 62
    61c2:	9a 83       	std	Y+2, r25	; 0x02
    61c4:	89 83       	std	Y+1, r24	; 0x01
    61c6:	89 81       	ldd	r24, Y+1	; 0x01
    61c8:	9a 81       	ldd	r25, Y+2	; 0x02
    61ca:	22 e6       	ldi	r18, 0x62	; 98
    61cc:	32 e0       	ldi	r19, 0x02	; 2
    61ce:	fc 01       	movw	r30, r24
    61d0:	31 83       	std	Z+1, r19	; 0x01
    61d2:	20 83       	st	Z, r18
    61d4:	89 81       	ldd	r24, Y+1	; 0x01
    61d6:	9a 81       	ldd	r25, Y+2	; 0x02
    61d8:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <_ZN10helicopter5tasks4TaskD1Ev>
    61dc:	80 e0       	ldi	r24, 0x00	; 0
    61de:	90 e0       	ldi	r25, 0x00	; 0
    61e0:	81 70       	andi	r24, 0x01	; 1
    61e2:	99 27       	eor	r25, r25
    61e4:	00 97       	sbiw	r24, 0x00	; 0
    61e6:	21 f0       	breq	.+8      	; 0x61f0 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev+0x3a>
    61e8:	89 81       	ldd	r24, Y+1	; 0x01
    61ea:	9a 81       	ldd	r25, Y+2	; 0x02
    61ec:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    61f0:	0f 90       	pop	r0
    61f2:	0f 90       	pop	r0
    61f4:	df 91       	pop	r29
    61f6:	cf 91       	pop	r28
    61f8:	08 95       	ret

000061fa <_ZN10helicopter5tasks16PIDOuterLoopTaskD0Ev>:
    61fa:	cf 93       	push	r28
    61fc:	df 93       	push	r29
    61fe:	1f 92       	push	r1
    6200:	1f 92       	push	r1
    6202:	cd b7       	in	r28, 0x3d	; 61
    6204:	de b7       	in	r29, 0x3e	; 62
    6206:	9a 83       	std	Y+2, r25	; 0x02
    6208:	89 83       	std	Y+1, r24	; 0x01
    620a:	89 81       	ldd	r24, Y+1	; 0x01
    620c:	9a 81       	ldd	r25, Y+2	; 0x02
    620e:	0e 94 db 30 	call	0x61b6	; 0x61b6 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>
    6212:	89 81       	ldd	r24, Y+1	; 0x01
    6214:	9a 81       	ldd	r25, Y+2	; 0x02
    6216:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    621a:	0f 90       	pop	r0
    621c:	0f 90       	pop	r0
    621e:	df 91       	pop	r29
    6220:	cf 91       	pop	r28
    6222:	08 95       	ret

00006224 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEd>:
																							
		
		
		
			double XNEDBodyFrame() const {return xNEDBodyFrame;}
			void XNEDBodyFrame(double val) { xNEDBodyFrame = val;}
    6224:	cf 93       	push	r28
    6226:	df 93       	push	r29
    6228:	00 d0       	rcall	.+0      	; 0x622a <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEd+0x6>
    622a:	00 d0       	rcall	.+0      	; 0x622c <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEd+0x8>
    622c:	cd b7       	in	r28, 0x3d	; 61
    622e:	de b7       	in	r29, 0x3e	; 62
    6230:	9a 83       	std	Y+2, r25	; 0x02
    6232:	89 83       	std	Y+1, r24	; 0x01
    6234:	4b 83       	std	Y+3, r20	; 0x03
    6236:	5c 83       	std	Y+4, r21	; 0x04
    6238:	6d 83       	std	Y+5, r22	; 0x05
    623a:	7e 83       	std	Y+6, r23	; 0x06
    623c:	29 81       	ldd	r18, Y+1	; 0x01
    623e:	3a 81       	ldd	r19, Y+2	; 0x02
    6240:	8b 81       	ldd	r24, Y+3	; 0x03
    6242:	9c 81       	ldd	r25, Y+4	; 0x04
    6244:	ad 81       	ldd	r26, Y+5	; 0x05
    6246:	be 81       	ldd	r27, Y+6	; 0x06
    6248:	f9 01       	movw	r30, r18
    624a:	84 a3       	std	Z+36, r24	; 0x24
    624c:	95 a3       	std	Z+37, r25	; 0x25
    624e:	a6 a3       	std	Z+38, r26	; 0x26
    6250:	b7 a3       	std	Z+39, r27	; 0x27
    6252:	26 96       	adiw	r28, 0x06	; 6
    6254:	0f b6       	in	r0, 0x3f	; 63
    6256:	f8 94       	cli
    6258:	de bf       	out	0x3e, r29	; 62
    625a:	0f be       	out	0x3f, r0	; 63
    625c:	cd bf       	out	0x3d, r28	; 61
    625e:	df 91       	pop	r29
    6260:	cf 91       	pop	r28
    6262:	08 95       	ret

00006264 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEd>:
						
						


			double YNEDBodyFrame() const {return yNEDBodyFrame;}
			void YNEDBodyFrame(double val) { yNEDBodyFrame = val;}
    6264:	cf 93       	push	r28
    6266:	df 93       	push	r29
    6268:	00 d0       	rcall	.+0      	; 0x626a <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEd+0x6>
    626a:	00 d0       	rcall	.+0      	; 0x626c <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEd+0x8>
    626c:	cd b7       	in	r28, 0x3d	; 61
    626e:	de b7       	in	r29, 0x3e	; 62
    6270:	9a 83       	std	Y+2, r25	; 0x02
    6272:	89 83       	std	Y+1, r24	; 0x01
    6274:	4b 83       	std	Y+3, r20	; 0x03
    6276:	5c 83       	std	Y+4, r21	; 0x04
    6278:	6d 83       	std	Y+5, r22	; 0x05
    627a:	7e 83       	std	Y+6, r23	; 0x06
    627c:	89 81       	ldd	r24, Y+1	; 0x01
    627e:	9a 81       	ldd	r25, Y+2	; 0x02
    6280:	9c 01       	movw	r18, r24
    6282:	20 5b       	subi	r18, 0xB0	; 176
    6284:	3f 4f       	sbci	r19, 0xFF	; 255
    6286:	8b 81       	ldd	r24, Y+3	; 0x03
    6288:	9c 81       	ldd	r25, Y+4	; 0x04
    628a:	ad 81       	ldd	r26, Y+5	; 0x05
    628c:	be 81       	ldd	r27, Y+6	; 0x06
    628e:	f9 01       	movw	r30, r18
    6290:	80 83       	st	Z, r24
    6292:	91 83       	std	Z+1, r25	; 0x01
    6294:	a2 83       	std	Z+2, r26	; 0x02
    6296:	b3 83       	std	Z+3, r27	; 0x03
    6298:	26 96       	adiw	r28, 0x06	; 6
    629a:	0f b6       	in	r0, 0x3f	; 63
    629c:	f8 94       	cli
    629e:	de bf       	out	0x3e, r29	; 62
    62a0:	0f be       	out	0x3f, r0	; 63
    62a2:	cd bf       	out	0x3d, r28	; 61
    62a4:	df 91       	pop	r29
    62a6:	cf 91       	pop	r28
    62a8:	08 95       	ret

000062aa <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEd>:

			double AltitudeFeet() const { return altitudeFeet; }
			void AltitudeFeet(double val) { altitudeFeet = val; }

			double ZNEDBodyFrame() const { return zNEDBodyFrame; }
			void ZNEDBodyFrame(double val) { zNEDBodyFrame = val; }
    62aa:	cf 93       	push	r28
    62ac:	df 93       	push	r29
    62ae:	00 d0       	rcall	.+0      	; 0x62b0 <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEd+0x6>
    62b0:	00 d0       	rcall	.+0      	; 0x62b2 <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEd+0x8>
    62b2:	cd b7       	in	r28, 0x3d	; 61
    62b4:	de b7       	in	r29, 0x3e	; 62
    62b6:	9a 83       	std	Y+2, r25	; 0x02
    62b8:	89 83       	std	Y+1, r24	; 0x01
    62ba:	4b 83       	std	Y+3, r20	; 0x03
    62bc:	5c 83       	std	Y+4, r21	; 0x04
    62be:	6d 83       	std	Y+5, r22	; 0x05
    62c0:	7e 83       	std	Y+6, r23	; 0x06
    62c2:	89 81       	ldd	r24, Y+1	; 0x01
    62c4:	9a 81       	ldd	r25, Y+2	; 0x02
    62c6:	9c 01       	movw	r18, r24
    62c8:	20 58       	subi	r18, 0x80	; 128
    62ca:	3f 4f       	sbci	r19, 0xFF	; 255
    62cc:	8b 81       	ldd	r24, Y+3	; 0x03
    62ce:	9c 81       	ldd	r25, Y+4	; 0x04
    62d0:	ad 81       	ldd	r26, Y+5	; 0x05
    62d2:	be 81       	ldd	r27, Y+6	; 0x06
    62d4:	f9 01       	movw	r30, r18
    62d6:	80 83       	st	Z, r24
    62d8:	91 83       	std	Z+1, r25	; 0x01
    62da:	a2 83       	std	Z+2, r26	; 0x02
    62dc:	b3 83       	std	Z+3, r27	; 0x03
    62de:	26 96       	adiw	r28, 0x06	; 6
    62e0:	0f b6       	in	r0, 0x3f	; 63
    62e2:	f8 94       	cli
    62e4:	de bf       	out	0x3e, r29	; 62
    62e6:	0f be       	out	0x3f, r0	; 63
    62e8:	cd bf       	out	0x3d, r28	; 61
    62ea:	df 91       	pop	r29
    62ec:	cf 91       	pop	r28
    62ee:	08 95       	ret

000062f0 <_ZNK10helicopter5model11SystemModel20InitialXPositionEcefEv>:
			void ChecksumErrors(long val) { checksumErrors = val; }
			
			long  BlownFrames() const {return numOfFramesBlown;}
			void BlownFrames( long val ) { numOfFramesBlown = val;}

			long  InitialXPositionEcef() const {return initialXPositionEcef;}
    62f0:	cf 93       	push	r28
    62f2:	df 93       	push	r29
    62f4:	1f 92       	push	r1
    62f6:	1f 92       	push	r1
    62f8:	cd b7       	in	r28, 0x3d	; 61
    62fa:	de b7       	in	r29, 0x3e	; 62
    62fc:	9a 83       	std	Y+2, r25	; 0x02
    62fe:	89 83       	std	Y+1, r24	; 0x01
    6300:	89 81       	ldd	r24, Y+1	; 0x01
    6302:	9a 81       	ldd	r25, Y+2	; 0x02
    6304:	84 54       	subi	r24, 0x44	; 68
    6306:	9f 4f       	sbci	r25, 0xFF	; 255
    6308:	fc 01       	movw	r30, r24
    630a:	80 81       	ld	r24, Z
    630c:	91 81       	ldd	r25, Z+1	; 0x01
    630e:	a2 81       	ldd	r26, Z+2	; 0x02
    6310:	b3 81       	ldd	r27, Z+3	; 0x03
    6312:	bc 01       	movw	r22, r24
    6314:	cd 01       	movw	r24, r26
    6316:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    631a:	dc 01       	movw	r26, r24
    631c:	cb 01       	movw	r24, r22
    631e:	bc 01       	movw	r22, r24
    6320:	cd 01       	movw	r24, r26
    6322:	0f 90       	pop	r0
    6324:	0f 90       	pop	r0
    6326:	df 91       	pop	r29
    6328:	cf 91       	pop	r28
    632a:	08 95       	ret

0000632c <_ZNK10helicopter5model11SystemModel20InitialYPositionEcefEv>:
			void InitialXPositionEcef( long val ) { initialXPositionEcef = val;}			

			long  InitialYPositionEcef() const {return initialYPositionEcef;}
    632c:	cf 93       	push	r28
    632e:	df 93       	push	r29
    6330:	1f 92       	push	r1
    6332:	1f 92       	push	r1
    6334:	cd b7       	in	r28, 0x3d	; 61
    6336:	de b7       	in	r29, 0x3e	; 62
    6338:	9a 83       	std	Y+2, r25	; 0x02
    633a:	89 83       	std	Y+1, r24	; 0x01
    633c:	89 81       	ldd	r24, Y+1	; 0x01
    633e:	9a 81       	ldd	r25, Y+2	; 0x02
    6340:	80 54       	subi	r24, 0x40	; 64
    6342:	9f 4f       	sbci	r25, 0xFF	; 255
    6344:	fc 01       	movw	r30, r24
    6346:	80 81       	ld	r24, Z
    6348:	91 81       	ldd	r25, Z+1	; 0x01
    634a:	a2 81       	ldd	r26, Z+2	; 0x02
    634c:	b3 81       	ldd	r27, Z+3	; 0x03
    634e:	bc 01       	movw	r22, r24
    6350:	cd 01       	movw	r24, r26
    6352:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    6356:	dc 01       	movw	r26, r24
    6358:	cb 01       	movw	r24, r22
    635a:	bc 01       	movw	r22, r24
    635c:	cd 01       	movw	r24, r26
    635e:	0f 90       	pop	r0
    6360:	0f 90       	pop	r0
    6362:	df 91       	pop	r29
    6364:	cf 91       	pop	r28
    6366:	08 95       	ret

00006368 <_ZNK10helicopter5model11SystemModel20InitialZPositionEcefEv>:
			void InitialYPositionEcef( long val ) { initialYPositionEcef = val;}

			long  InitialZPositionEcef() const {return initialZPositionEcef;}
    6368:	cf 93       	push	r28
    636a:	df 93       	push	r29
    636c:	1f 92       	push	r1
    636e:	1f 92       	push	r1
    6370:	cd b7       	in	r28, 0x3d	; 61
    6372:	de b7       	in	r29, 0x3e	; 62
    6374:	9a 83       	std	Y+2, r25	; 0x02
    6376:	89 83       	std	Y+1, r24	; 0x01
    6378:	89 81       	ldd	r24, Y+1	; 0x01
    637a:	9a 81       	ldd	r25, Y+2	; 0x02
    637c:	8c 53       	subi	r24, 0x3C	; 60
    637e:	9f 4f       	sbci	r25, 0xFF	; 255
    6380:	fc 01       	movw	r30, r24
    6382:	80 81       	ld	r24, Z
    6384:	91 81       	ldd	r25, Z+1	; 0x01
    6386:	a2 81       	ldd	r26, Z+2	; 0x02
    6388:	b3 81       	ldd	r27, Z+3	; 0x03
    638a:	bc 01       	movw	r22, r24
    638c:	cd 01       	movw	r24, r26
    638e:	0e 94 e7 3f 	call	0x7fce	; 0x7fce <__fixsfsi>
    6392:	dc 01       	movw	r26, r24
    6394:	cb 01       	movw	r24, r22
    6396:	bc 01       	movw	r22, r24
    6398:	cd 01       	movw	r24, r26
    639a:	0f 90       	pop	r0
    639c:	0f 90       	pop	r0
    639e:	df 91       	pop	r29
    63a0:	cf 91       	pop	r28
    63a2:	08 95       	ret

000063a4 <_ZN10helicopter5tasks20SensorProcessingTaskC1EPNS_5model11SystemModelEii>:
#include "CoordinateUtil.h"

using namespace helicopter::tasks;
using namespace helicopter::util;

SensorProcessingTask::SensorProcessingTask (SystemModel *model, int delay, int period) :
    63a4:	cf 93       	push	r28
    63a6:	df 93       	push	r29
    63a8:	cd b7       	in	r28, 0x3d	; 61
    63aa:	de b7       	in	r29, 0x3e	; 62
    63ac:	28 97       	sbiw	r28, 0x08	; 8
    63ae:	0f b6       	in	r0, 0x3f	; 63
    63b0:	f8 94       	cli
    63b2:	de bf       	out	0x3e, r29	; 62
    63b4:	0f be       	out	0x3f, r0	; 63
    63b6:	cd bf       	out	0x3d, r28	; 61
    63b8:	9a 83       	std	Y+2, r25	; 0x02
    63ba:	89 83       	std	Y+1, r24	; 0x01
    63bc:	7c 83       	std	Y+4, r23	; 0x04
    63be:	6b 83       	std	Y+3, r22	; 0x03
    63c0:	5e 83       	std	Y+6, r21	; 0x06
    63c2:	4d 83       	std	Y+5, r20	; 0x05
    63c4:	38 87       	std	Y+8, r19	; 0x08
    63c6:	2f 83       	std	Y+7, r18	; 0x07
	Task(delay, period),
	model(model)
    63c8:	89 81       	ldd	r24, Y+1	; 0x01
    63ca:	9a 81       	ldd	r25, Y+2	; 0x02
    63cc:	4f 81       	ldd	r20, Y+7	; 0x07
    63ce:	58 85       	ldd	r21, Y+8	; 0x08
    63d0:	2d 81       	ldd	r18, Y+5	; 0x05
    63d2:	3e 81       	ldd	r19, Y+6	; 0x06
    63d4:	b9 01       	movw	r22, r18
    63d6:	0e 94 21 38 	call	0x7042	; 0x7042 <_ZN10helicopter5tasks4TaskC1Eii>
    63da:	89 81       	ldd	r24, Y+1	; 0x01
    63dc:	9a 81       	ldd	r25, Y+2	; 0x02
    63de:	20 e7       	ldi	r18, 0x70	; 112
    63e0:	32 e0       	ldi	r19, 0x02	; 2
    63e2:	fc 01       	movw	r30, r24
    63e4:	31 83       	std	Z+1, r19	; 0x01
    63e6:	20 83       	st	Z, r18
    63e8:	89 81       	ldd	r24, Y+1	; 0x01
    63ea:	9a 81       	ldd	r25, Y+2	; 0x02
    63ec:	2b 81       	ldd	r18, Y+3	; 0x03
    63ee:	3c 81       	ldd	r19, Y+4	; 0x04
    63f0:	fc 01       	movw	r30, r24
    63f2:	30 87       	std	Z+8, r19	; 0x08
    63f4:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    63f6:	28 96       	adiw	r28, 0x08	; 8
    63f8:	0f b6       	in	r0, 0x3f	; 63
    63fa:	f8 94       	cli
    63fc:	de bf       	out	0x3e, r29	; 62
    63fe:	0f be       	out	0x3f, r0	; 63
    6400:	cd bf       	out	0x3d, r28	; 61
    6402:	df 91       	pop	r29
    6404:	cf 91       	pop	r28
    6406:	08 95       	ret

00006408 <_ZN10helicopter5tasks20SensorProcessingTask11runTaskImplEv>:

void SensorProcessingTask::runTaskImpl()
{
    6408:	4f 92       	push	r4
    640a:	5f 92       	push	r5
    640c:	6f 92       	push	r6
    640e:	7f 92       	push	r7
    6410:	8f 92       	push	r8
    6412:	9f 92       	push	r9
    6414:	af 92       	push	r10
    6416:	bf 92       	push	r11
    6418:	cf 92       	push	r12
    641a:	df 92       	push	r13
    641c:	ef 92       	push	r14
    641e:	ff 92       	push	r15
    6420:	0f 93       	push	r16
    6422:	1f 93       	push	r17
    6424:	cf 93       	push	r28
    6426:	df 93       	push	r29
    6428:	cd b7       	in	r28, 0x3d	; 61
    642a:	de b7       	in	r29, 0x3e	; 62
    642c:	66 97       	sbiw	r28, 0x16	; 22
    642e:	0f b6       	in	r0, 0x3f	; 63
    6430:	f8 94       	cli
    6432:	de bf       	out	0x3e, r29	; 62
    6434:	0f be       	out	0x3f, r0	; 63
    6436:	cd bf       	out	0x3d, r28	; 61
    6438:	9e 87       	std	Y+14, r25	; 0x0e
    643a:	8d 87       	std	Y+13, r24	; 0x0d
	double localNEDX = 0;
    643c:	19 82       	std	Y+1, r1	; 0x01
    643e:	1a 82       	std	Y+2, r1	; 0x02
    6440:	1b 82       	std	Y+3, r1	; 0x03
    6442:	1c 82       	std	Y+4, r1	; 0x04
	double localNEDY = 0;
    6444:	1d 82       	std	Y+5, r1	; 0x05
    6446:	1e 82       	std	Y+6, r1	; 0x06
    6448:	1f 82       	std	Y+7, r1	; 0x07
    644a:	18 86       	std	Y+8, r1	; 0x08
	double localNEDZ = 0;
    644c:	19 86       	std	Y+9, r1	; 0x09
    644e:	1a 86       	std	Y+10, r1	; 0x0a
    6450:	1b 86       	std	Y+11, r1	; 0x0b
    6452:	1c 86       	std	Y+12, r1	; 0x0c
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeet(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
		localNEDX,localNEDY,localNEDZ);
    6454:	8d 85       	ldd	r24, Y+13	; 0x0d
    6456:	9e 85       	ldd	r25, Y+14	; 0x0e
    6458:	fc 01       	movw	r30, r24
    645a:	87 81       	ldd	r24, Z+7	; 0x07
    645c:	90 85       	ldd	r25, Z+8	; 0x08
    645e:	8c 01       	movw	r16, r24
    6460:	08 53       	subi	r16, 0x38	; 56
    6462:	1f 4f       	sbci	r17, 0xFF	; 255
	double localNEDX = 0;
	double localNEDY = 0;
	double localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeet(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    6464:	8d 85       	ldd	r24, Y+13	; 0x0d
    6466:	9e 85       	ldd	r25, Y+14	; 0x0e
    6468:	fc 01       	movw	r30, r24
    646a:	87 81       	ldd	r24, Z+7	; 0x07
    646c:	90 85       	ldd	r25, Z+8	; 0x08
    646e:	0e 94 b4 31 	call	0x6368	; 0x6368 <_ZNK10helicopter5model11SystemModel20InitialZPositionEcefEv>
    6472:	dc 01       	movw	r26, r24
    6474:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    6476:	bc 01       	movw	r22, r24
    6478:	cd 01       	movw	r24, r26
    647a:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    647e:	4b 01       	movw	r8, r22
    6480:	5c 01       	movw	r10, r24
	double localNEDX = 0;
	double localNEDY = 0;
	double localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeet(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    6482:	8d 85       	ldd	r24, Y+13	; 0x0d
    6484:	9e 85       	ldd	r25, Y+14	; 0x0e
    6486:	fc 01       	movw	r30, r24
    6488:	87 81       	ldd	r24, Z+7	; 0x07
    648a:	90 85       	ldd	r25, Z+8	; 0x08
    648c:	0e 94 96 31 	call	0x632c	; 0x632c <_ZNK10helicopter5model11SystemModel20InitialYPositionEcefEv>
    6490:	dc 01       	movw	r26, r24
    6492:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    6494:	bc 01       	movw	r22, r24
    6496:	cd 01       	movw	r24, r26
    6498:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    649c:	6b 01       	movw	r12, r22
    649e:	7c 01       	movw	r14, r24
	double localNEDX = 0;
	double localNEDY = 0;
	double localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeet(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    64a0:	8d 85       	ldd	r24, Y+13	; 0x0d
    64a2:	9e 85       	ldd	r25, Y+14	; 0x0e
    64a4:	fc 01       	movw	r30, r24
    64a6:	87 81       	ldd	r24, Z+7	; 0x07
    64a8:	90 85       	ldd	r25, Z+8	; 0x08
    64aa:	0e 94 78 31 	call	0x62f0	; 0x62f0 <_ZNK10helicopter5model11SystemModel20InitialXPositionEcefEv>
    64ae:	dc 01       	movw	r26, r24
    64b0:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    64b2:	bc 01       	movw	r22, r24
    64b4:	cd 01       	movw	r24, r26
    64b6:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    64ba:	6f 87       	std	Y+15, r22	; 0x0f
    64bc:	78 8b       	std	Y+16, r23	; 0x10
    64be:	89 8b       	std	Y+17, r24	; 0x11
    64c0:	9a 8b       	std	Y+18, r25	; 0x12
    64c2:	8d 85       	ldd	r24, Y+13	; 0x0d
    64c4:	9e 85       	ldd	r25, Y+14	; 0x0e
    64c6:	fc 01       	movw	r30, r24
    64c8:	87 81       	ldd	r24, Z+7	; 0x07
    64ca:	90 85       	ldd	r25, Z+8	; 0x08
    64cc:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <_ZNK10helicopter5model11SystemModel12AltitudeFeetEv>
    64d0:	6b 8b       	std	Y+19, r22	; 0x13
    64d2:	7c 8b       	std	Y+20, r23	; 0x14
    64d4:	8d 8b       	std	Y+21, r24	; 0x15
    64d6:	9e 8b       	std	Y+22, r25	; 0x16
    64d8:	8d 85       	ldd	r24, Y+13	; 0x0d
    64da:	9e 85       	ldd	r25, Y+14	; 0x0e
    64dc:	fc 01       	movw	r30, r24
    64de:	87 81       	ldd	r24, Z+7	; 0x07
    64e0:	90 85       	ldd	r25, Z+8	; 0x08
    64e2:	0e 94 fb 12 	call	0x25f6	; 0x25f6 <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    64e6:	2b 01       	movw	r4, r22
    64e8:	3c 01       	movw	r6, r24
    64ea:	8d 85       	ldd	r24, Y+13	; 0x0d
    64ec:	9e 85       	ldd	r25, Y+14	; 0x0e
    64ee:	fc 01       	movw	r30, r24
    64f0:	87 81       	ldd	r24, Z+7	; 0x07
    64f2:	90 85       	ldd	r25, Z+8	; 0x08
    64f4:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    64f8:	dc 01       	movw	r26, r24
    64fa:	cb 01       	movw	r24, r22
    64fc:	9e 01       	movw	r18, r28
    64fe:	27 5f       	subi	r18, 0xF7	; 247
    6500:	3f 4f       	sbci	r19, 0xFF	; 255
    6502:	43 2f       	mov	r20, r19
    6504:	4f 93       	push	r20
    6506:	2f 93       	push	r18
    6508:	9e 01       	movw	r18, r28
    650a:	2b 5f       	subi	r18, 0xFB	; 251
    650c:	3f 4f       	sbci	r19, 0xFF	; 255
    650e:	43 2f       	mov	r20, r19
    6510:	4f 93       	push	r20
    6512:	2f 93       	push	r18
    6514:	9e 01       	movw	r18, r28
    6516:	2f 5f       	subi	r18, 0xFF	; 255
    6518:	3f 4f       	sbci	r19, 0xFF	; 255
    651a:	23 2f       	mov	r18, r19
    651c:	2f 93       	push	r18
    651e:	9e 01       	movw	r18, r28
    6520:	2f 5f       	subi	r18, 0xFF	; 255
    6522:	3f 4f       	sbci	r19, 0xFF	; 255
    6524:	2f 93       	push	r18
    6526:	21 2f       	mov	r18, r17
    6528:	2f 93       	push	r18
    652a:	20 2f       	mov	r18, r16
    652c:	2f 93       	push	r18
    652e:	2b 2d       	mov	r18, r11
    6530:	2f 93       	push	r18
    6532:	2a 2d       	mov	r18, r10
    6534:	2f 93       	push	r18
    6536:	29 2d       	mov	r18, r9
    6538:	2f 93       	push	r18
    653a:	28 2d       	mov	r18, r8
    653c:	2f 93       	push	r18
    653e:	2f 2d       	mov	r18, r15
    6540:	2f 93       	push	r18
    6542:	2e 2d       	mov	r18, r14
    6544:	2f 93       	push	r18
    6546:	2d 2d       	mov	r18, r13
    6548:	2f 93       	push	r18
    654a:	2c 2d       	mov	r18, r12
    654c:	2f 93       	push	r18
    654e:	af 84       	ldd	r10, Y+15	; 0x0f
    6550:	b8 88       	ldd	r11, Y+16	; 0x10
    6552:	c9 88       	ldd	r12, Y+17	; 0x11
    6554:	da 88       	ldd	r13, Y+18	; 0x12
    6556:	eb 88       	ldd	r14, Y+19	; 0x13
    6558:	fc 88       	ldd	r15, Y+20	; 0x14
    655a:	0d 89       	ldd	r16, Y+21	; 0x15
    655c:	1e 89       	ldd	r17, Y+22	; 0x16
    655e:	a3 01       	movw	r20, r6
    6560:	92 01       	movw	r18, r4
    6562:	bc 01       	movw	r22, r24
    6564:	cd 01       	movw	r24, r26
    6566:	0e 94 6e 3d 	call	0x7adc	; 0x7adc <_ZN10helicopter4util14CoordinateUtil29ConvertFromGeodedicToLocalNEDEddddddPA3_dRdS4_S4_>
    656a:	8d b7       	in	r24, 0x3d	; 61
    656c:	9e b7       	in	r25, 0x3e	; 62
    656e:	40 96       	adiw	r24, 0x10	; 16
    6570:	0f b6       	in	r0, 0x3f	; 63
    6572:	f8 94       	cli
    6574:	de bf       	out	0x3e, r29	; 62
    6576:	0f be       	out	0x3f, r0	; 63
    6578:	cd bf       	out	0x3d, r28	; 61
		
		
	model->XNEDBodyFrame(localNEDX);
    657a:	89 81       	ldd	r24, Y+1	; 0x01
    657c:	9a 81       	ldd	r25, Y+2	; 0x02
    657e:	ab 81       	ldd	r26, Y+3	; 0x03
    6580:	bc 81       	ldd	r27, Y+4	; 0x04
    6582:	2d 85       	ldd	r18, Y+13	; 0x0d
    6584:	3e 85       	ldd	r19, Y+14	; 0x0e
    6586:	f9 01       	movw	r30, r18
    6588:	27 81       	ldd	r18, Z+7	; 0x07
    658a:	30 85       	ldd	r19, Z+8	; 0x08
    658c:	ac 01       	movw	r20, r24
    658e:	bd 01       	movw	r22, r26
    6590:	c9 01       	movw	r24, r18
    6592:	0e 94 12 31 	call	0x6224	; 0x6224 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEd>
	model->YNEDBodyFrame(localNEDY);
    6596:	8d 81       	ldd	r24, Y+5	; 0x05
    6598:	9e 81       	ldd	r25, Y+6	; 0x06
    659a:	af 81       	ldd	r26, Y+7	; 0x07
    659c:	b8 85       	ldd	r27, Y+8	; 0x08
    659e:	2d 85       	ldd	r18, Y+13	; 0x0d
    65a0:	3e 85       	ldd	r19, Y+14	; 0x0e
    65a2:	f9 01       	movw	r30, r18
    65a4:	27 81       	ldd	r18, Z+7	; 0x07
    65a6:	30 85       	ldd	r19, Z+8	; 0x08
    65a8:	ac 01       	movw	r20, r24
    65aa:	bd 01       	movw	r22, r26
    65ac:	c9 01       	movw	r24, r18
    65ae:	0e 94 32 31 	call	0x6264	; 0x6264 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEd>
	model->ZNEDBodyFrame(localNEDZ);
    65b2:	89 85       	ldd	r24, Y+9	; 0x09
    65b4:	9a 85       	ldd	r25, Y+10	; 0x0a
    65b6:	ab 85       	ldd	r26, Y+11	; 0x0b
    65b8:	bc 85       	ldd	r27, Y+12	; 0x0c
    65ba:	2d 85       	ldd	r18, Y+13	; 0x0d
    65bc:	3e 85       	ldd	r19, Y+14	; 0x0e
    65be:	f9 01       	movw	r30, r18
    65c0:	27 81       	ldd	r18, Z+7	; 0x07
    65c2:	30 85       	ldd	r19, Z+8	; 0x08
    65c4:	ac 01       	movw	r20, r24
    65c6:	bd 01       	movw	r22, r26
    65c8:	c9 01       	movw	r24, r18
    65ca:	0e 94 55 31 	call	0x62aa	; 0x62aa <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEd>
}
    65ce:	66 96       	adiw	r28, 0x16	; 22
    65d0:	0f b6       	in	r0, 0x3f	; 63
    65d2:	f8 94       	cli
    65d4:	de bf       	out	0x3e, r29	; 62
    65d6:	0f be       	out	0x3f, r0	; 63
    65d8:	cd bf       	out	0x3d, r28	; 61
    65da:	df 91       	pop	r29
    65dc:	cf 91       	pop	r28
    65de:	1f 91       	pop	r17
    65e0:	0f 91       	pop	r16
    65e2:	ff 90       	pop	r15
    65e4:	ef 90       	pop	r14
    65e6:	df 90       	pop	r13
    65e8:	cf 90       	pop	r12
    65ea:	bf 90       	pop	r11
    65ec:	af 90       	pop	r10
    65ee:	9f 90       	pop	r9
    65f0:	8f 90       	pop	r8
    65f2:	7f 90       	pop	r7
    65f4:	6f 90       	pop	r6
    65f6:	5f 90       	pop	r5
    65f8:	4f 90       	pop	r4
    65fa:	08 95       	ret

000065fc <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>:
	{
		/**
		 * This class processes and transforms sensor data such as converting latitude/longitude into
		 * x,y,z coordinates
		 */
		class SensorProcessingTask : public Task
    65fc:	cf 93       	push	r28
    65fe:	df 93       	push	r29
    6600:	1f 92       	push	r1
    6602:	1f 92       	push	r1
    6604:	cd b7       	in	r28, 0x3d	; 61
    6606:	de b7       	in	r29, 0x3e	; 62
    6608:	9a 83       	std	Y+2, r25	; 0x02
    660a:	89 83       	std	Y+1, r24	; 0x01
    660c:	89 81       	ldd	r24, Y+1	; 0x01
    660e:	9a 81       	ldd	r25, Y+2	; 0x02
    6610:	20 e7       	ldi	r18, 0x70	; 112
    6612:	32 e0       	ldi	r19, 0x02	; 2
    6614:	fc 01       	movw	r30, r24
    6616:	31 83       	std	Z+1, r19	; 0x01
    6618:	20 83       	st	Z, r18
    661a:	89 81       	ldd	r24, Y+1	; 0x01
    661c:	9a 81       	ldd	r25, Y+2	; 0x02
    661e:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <_ZN10helicopter5tasks4TaskD1Ev>
    6622:	80 e0       	ldi	r24, 0x00	; 0
    6624:	90 e0       	ldi	r25, 0x00	; 0
    6626:	81 70       	andi	r24, 0x01	; 1
    6628:	99 27       	eor	r25, r25
    662a:	00 97       	sbiw	r24, 0x00	; 0
    662c:	21 f0       	breq	.+8      	; 0x6636 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev+0x3a>
    662e:	89 81       	ldd	r24, Y+1	; 0x01
    6630:	9a 81       	ldd	r25, Y+2	; 0x02
    6632:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    6636:	0f 90       	pop	r0
    6638:	0f 90       	pop	r0
    663a:	df 91       	pop	r29
    663c:	cf 91       	pop	r28
    663e:	08 95       	ret

00006640 <_ZN10helicopter5tasks20SensorProcessingTaskD0Ev>:
    6640:	cf 93       	push	r28
    6642:	df 93       	push	r29
    6644:	1f 92       	push	r1
    6646:	1f 92       	push	r1
    6648:	cd b7       	in	r28, 0x3d	; 61
    664a:	de b7       	in	r29, 0x3e	; 62
    664c:	9a 83       	std	Y+2, r25	; 0x02
    664e:	89 83       	std	Y+1, r24	; 0x01
    6650:	89 81       	ldd	r24, Y+1	; 0x01
    6652:	9a 81       	ldd	r25, Y+2	; 0x02
    6654:	0e 94 fe 32 	call	0x65fc	; 0x65fc <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>
    6658:	89 81       	ldd	r24, Y+1	; 0x01
    665a:	9a 81       	ldd	r25, Y+2	; 0x02
    665c:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    6660:	0f 90       	pop	r0
    6662:	0f 90       	pop	r0
    6664:	df 91       	pop	r29
    6666:	cf 91       	pop	r28
    6668:	08 95       	ret

0000666a <_ZN10helicopter10controller13PIDController16setYIntegralGainEd>:
				
				
				
				
				
				void setYIntegralGain(double val)
    666a:	cf 93       	push	r28
    666c:	df 93       	push	r29
    666e:	00 d0       	rcall	.+0      	; 0x6670 <_ZN10helicopter10controller13PIDController16setYIntegralGainEd+0x6>
    6670:	00 d0       	rcall	.+0      	; 0x6672 <_ZN10helicopter10controller13PIDController16setYIntegralGainEd+0x8>
    6672:	cd b7       	in	r28, 0x3d	; 61
    6674:	de b7       	in	r29, 0x3e	; 62
    6676:	9a 83       	std	Y+2, r25	; 0x02
    6678:	89 83       	std	Y+1, r24	; 0x01
    667a:	4b 83       	std	Y+3, r20	; 0x03
    667c:	5c 83       	std	Y+4, r21	; 0x04
    667e:	6d 83       	std	Y+5, r22	; 0x05
    6680:	7e 83       	std	Y+6, r23	; 0x06
				{
					yIntegralGain = val;
    6682:	29 81       	ldd	r18, Y+1	; 0x01
    6684:	3a 81       	ldd	r19, Y+2	; 0x02
    6686:	8b 81       	ldd	r24, Y+3	; 0x03
    6688:	9c 81       	ldd	r25, Y+4	; 0x04
    668a:	ad 81       	ldd	r26, Y+5	; 0x05
    668c:	be 81       	ldd	r27, Y+6	; 0x06
    668e:	f9 01       	movw	r30, r18
    6690:	80 a7       	std	Z+40, r24	; 0x28
    6692:	91 a7       	std	Z+41, r25	; 0x29
    6694:	a2 a7       	std	Z+42, r26	; 0x2a
    6696:	b3 a7       	std	Z+43, r27	; 0x2b
				}
    6698:	26 96       	adiw	r28, 0x06	; 6
    669a:	0f b6       	in	r0, 0x3f	; 63
    669c:	f8 94       	cli
    669e:	de bf       	out	0x3e, r29	; 62
    66a0:	0f be       	out	0x3f, r0	; 63
    66a2:	cd bf       	out	0x3d, r28	; 61
    66a4:	df 91       	pop	r29
    66a6:	cf 91       	pop	r28
    66a8:	08 95       	ret

000066aa <_ZN10helicopter10controller13PIDController18setYDerivativeGainEd>:
				
				void setYDerivativeGain(double val)
    66aa:	cf 93       	push	r28
    66ac:	df 93       	push	r29
    66ae:	00 d0       	rcall	.+0      	; 0x66b0 <_ZN10helicopter10controller13PIDController18setYDerivativeGainEd+0x6>
    66b0:	00 d0       	rcall	.+0      	; 0x66b2 <_ZN10helicopter10controller13PIDController18setYDerivativeGainEd+0x8>
    66b2:	cd b7       	in	r28, 0x3d	; 61
    66b4:	de b7       	in	r29, 0x3e	; 62
    66b6:	9a 83       	std	Y+2, r25	; 0x02
    66b8:	89 83       	std	Y+1, r24	; 0x01
    66ba:	4b 83       	std	Y+3, r20	; 0x03
    66bc:	5c 83       	std	Y+4, r21	; 0x04
    66be:	6d 83       	std	Y+5, r22	; 0x05
    66c0:	7e 83       	std	Y+6, r23	; 0x06
				{
					yDerivativeGain = val;
    66c2:	29 81       	ldd	r18, Y+1	; 0x01
    66c4:	3a 81       	ldd	r19, Y+2	; 0x02
    66c6:	8b 81       	ldd	r24, Y+3	; 0x03
    66c8:	9c 81       	ldd	r25, Y+4	; 0x04
    66ca:	ad 81       	ldd	r26, Y+5	; 0x05
    66cc:	be 81       	ldd	r27, Y+6	; 0x06
    66ce:	f9 01       	movw	r30, r18
    66d0:	84 a7       	std	Z+44, r24	; 0x2c
    66d2:	95 a7       	std	Z+45, r25	; 0x2d
    66d4:	a6 a7       	std	Z+46, r26	; 0x2e
    66d6:	b7 a7       	std	Z+47, r27	; 0x2f
				}
    66d8:	26 96       	adiw	r28, 0x06	; 6
    66da:	0f b6       	in	r0, 0x3f	; 63
    66dc:	f8 94       	cli
    66de:	de bf       	out	0x3e, r29	; 62
    66e0:	0f be       	out	0x3f, r0	; 63
    66e2:	cd bf       	out	0x3d, r28	; 61
    66e4:	df 91       	pop	r29
    66e6:	cf 91       	pop	r28
    66e8:	08 95       	ret

000066ea <_ZN10helicopter10controller13PIDController20setYProportionalGainEd>:
				
				void setYProportionalGain(double val)
    66ea:	cf 93       	push	r28
    66ec:	df 93       	push	r29
    66ee:	00 d0       	rcall	.+0      	; 0x66f0 <_ZN10helicopter10controller13PIDController20setYProportionalGainEd+0x6>
    66f0:	00 d0       	rcall	.+0      	; 0x66f2 <_ZN10helicopter10controller13PIDController20setYProportionalGainEd+0x8>
    66f2:	cd b7       	in	r28, 0x3d	; 61
    66f4:	de b7       	in	r29, 0x3e	; 62
    66f6:	9a 83       	std	Y+2, r25	; 0x02
    66f8:	89 83       	std	Y+1, r24	; 0x01
    66fa:	4b 83       	std	Y+3, r20	; 0x03
    66fc:	5c 83       	std	Y+4, r21	; 0x04
    66fe:	6d 83       	std	Y+5, r22	; 0x05
    6700:	7e 83       	std	Y+6, r23	; 0x06
				{
					yProportionalGain = val;
    6702:	29 81       	ldd	r18, Y+1	; 0x01
    6704:	3a 81       	ldd	r19, Y+2	; 0x02
    6706:	8b 81       	ldd	r24, Y+3	; 0x03
    6708:	9c 81       	ldd	r25, Y+4	; 0x04
    670a:	ad 81       	ldd	r26, Y+5	; 0x05
    670c:	be 81       	ldd	r27, Y+6	; 0x06
    670e:	f9 01       	movw	r30, r18
    6710:	80 ab       	std	Z+48, r24	; 0x30
    6712:	91 ab       	std	Z+49, r25	; 0x31
    6714:	a2 ab       	std	Z+50, r26	; 0x32
    6716:	b3 ab       	std	Z+51, r27	; 0x33
				}
    6718:	26 96       	adiw	r28, 0x06	; 6
    671a:	0f b6       	in	r0, 0x3f	; 63
    671c:	f8 94       	cli
    671e:	de bf       	out	0x3e, r29	; 62
    6720:	0f be       	out	0x3f, r0	; 63
    6722:	cd bf       	out	0x3d, r28	; 61
    6724:	df 91       	pop	r29
    6726:	cf 91       	pop	r28
    6728:	08 95       	ret

0000672a <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEd>:
				
				void setYAntiWindupGain(double val)
    672a:	cf 93       	push	r28
    672c:	df 93       	push	r29
    672e:	00 d0       	rcall	.+0      	; 0x6730 <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEd+0x6>
    6730:	00 d0       	rcall	.+0      	; 0x6732 <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEd+0x8>
    6732:	cd b7       	in	r28, 0x3d	; 61
    6734:	de b7       	in	r29, 0x3e	; 62
    6736:	9a 83       	std	Y+2, r25	; 0x02
    6738:	89 83       	std	Y+1, r24	; 0x01
    673a:	4b 83       	std	Y+3, r20	; 0x03
    673c:	5c 83       	std	Y+4, r21	; 0x04
    673e:	6d 83       	std	Y+5, r22	; 0x05
    6740:	7e 83       	std	Y+6, r23	; 0x06
				{
					yAntiWindupGain = val;
    6742:	29 81       	ldd	r18, Y+1	; 0x01
    6744:	3a 81       	ldd	r19, Y+2	; 0x02
    6746:	8b 81       	ldd	r24, Y+3	; 0x03
    6748:	9c 81       	ldd	r25, Y+4	; 0x04
    674a:	ad 81       	ldd	r26, Y+5	; 0x05
    674c:	be 81       	ldd	r27, Y+6	; 0x06
    674e:	f9 01       	movw	r30, r18
    6750:	84 ab       	std	Z+52, r24	; 0x34
    6752:	95 ab       	std	Z+53, r25	; 0x35
    6754:	a6 ab       	std	Z+54, r26	; 0x36
    6756:	b7 ab       	std	Z+55, r27	; 0x37
				}
    6758:	26 96       	adiw	r28, 0x06	; 6
    675a:	0f b6       	in	r0, 0x3f	; 63
    675c:	f8 94       	cli
    675e:	de bf       	out	0x3e, r29	; 62
    6760:	0f be       	out	0x3f, r0	; 63
    6762:	cd bf       	out	0x3d, r28	; 61
    6764:	df 91       	pop	r29
    6766:	cf 91       	pop	r28
    6768:	08 95       	ret

0000676a <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEd>:
				
				void setLateralInnerLoopGain(double val)
    676a:	cf 93       	push	r28
    676c:	df 93       	push	r29
    676e:	00 d0       	rcall	.+0      	; 0x6770 <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEd+0x6>
    6770:	00 d0       	rcall	.+0      	; 0x6772 <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEd+0x8>
    6772:	cd b7       	in	r28, 0x3d	; 61
    6774:	de b7       	in	r29, 0x3e	; 62
    6776:	9a 83       	std	Y+2, r25	; 0x02
    6778:	89 83       	std	Y+1, r24	; 0x01
    677a:	4b 83       	std	Y+3, r20	; 0x03
    677c:	5c 83       	std	Y+4, r21	; 0x04
    677e:	6d 83       	std	Y+5, r22	; 0x05
    6780:	7e 83       	std	Y+6, r23	; 0x06
				{
					lateralInnerLoopGain = val;
    6782:	29 81       	ldd	r18, Y+1	; 0x01
    6784:	3a 81       	ldd	r19, Y+2	; 0x02
    6786:	8b 81       	ldd	r24, Y+3	; 0x03
    6788:	9c 81       	ldd	r25, Y+4	; 0x04
    678a:	ad 81       	ldd	r26, Y+5	; 0x05
    678c:	be 81       	ldd	r27, Y+6	; 0x06
    678e:	f9 01       	movw	r30, r18
    6790:	80 af       	std	Z+56, r24	; 0x38
    6792:	91 af       	std	Z+57, r25	; 0x39
    6794:	a2 af       	std	Z+58, r26	; 0x3a
    6796:	b3 af       	std	Z+59, r27	; 0x3b
				}
    6798:	26 96       	adiw	r28, 0x06	; 6
    679a:	0f b6       	in	r0, 0x3f	; 63
    679c:	f8 94       	cli
    679e:	de bf       	out	0x3e, r29	; 62
    67a0:	0f be       	out	0x3f, r0	; 63
    67a2:	cd bf       	out	0x3d, r28	; 61
    67a4:	df 91       	pop	r29
    67a6:	cf 91       	pop	r28
    67a8:	08 95       	ret

000067aa <_ZN10helicopter10controller13PIDController16setZIntegralGainEd>:
				
				
				
				
				
				void setZIntegralGain(double val)
    67aa:	cf 93       	push	r28
    67ac:	df 93       	push	r29
    67ae:	00 d0       	rcall	.+0      	; 0x67b0 <_ZN10helicopter10controller13PIDController16setZIntegralGainEd+0x6>
    67b0:	00 d0       	rcall	.+0      	; 0x67b2 <_ZN10helicopter10controller13PIDController16setZIntegralGainEd+0x8>
    67b2:	cd b7       	in	r28, 0x3d	; 61
    67b4:	de b7       	in	r29, 0x3e	; 62
    67b6:	9a 83       	std	Y+2, r25	; 0x02
    67b8:	89 83       	std	Y+1, r24	; 0x01
    67ba:	4b 83       	std	Y+3, r20	; 0x03
    67bc:	5c 83       	std	Y+4, r21	; 0x04
    67be:	6d 83       	std	Y+5, r22	; 0x05
    67c0:	7e 83       	std	Y+6, r23	; 0x06
				{
					zIntegralGain = val;
    67c2:	29 81       	ldd	r18, Y+1	; 0x01
    67c4:	3a 81       	ldd	r19, Y+2	; 0x02
    67c6:	8b 81       	ldd	r24, Y+3	; 0x03
    67c8:	9c 81       	ldd	r25, Y+4	; 0x04
    67ca:	ad 81       	ldd	r26, Y+5	; 0x05
    67cc:	be 81       	ldd	r27, Y+6	; 0x06
    67ce:	f9 01       	movw	r30, r18
    67d0:	84 af       	std	Z+60, r24	; 0x3c
    67d2:	95 af       	std	Z+61, r25	; 0x3d
    67d4:	a6 af       	std	Z+62, r26	; 0x3e
    67d6:	b7 af       	std	Z+63, r27	; 0x3f
				}
    67d8:	26 96       	adiw	r28, 0x06	; 6
    67da:	0f b6       	in	r0, 0x3f	; 63
    67dc:	f8 94       	cli
    67de:	de bf       	out	0x3e, r29	; 62
    67e0:	0f be       	out	0x3f, r0	; 63
    67e2:	cd bf       	out	0x3d, r28	; 61
    67e4:	df 91       	pop	r29
    67e6:	cf 91       	pop	r28
    67e8:	08 95       	ret

000067ea <_ZN10helicopter10controller13PIDController18setZDerivativeGainEd>:
				
				void setZDerivativeGain(double val)
    67ea:	cf 93       	push	r28
    67ec:	df 93       	push	r29
    67ee:	00 d0       	rcall	.+0      	; 0x67f0 <_ZN10helicopter10controller13PIDController18setZDerivativeGainEd+0x6>
    67f0:	00 d0       	rcall	.+0      	; 0x67f2 <_ZN10helicopter10controller13PIDController18setZDerivativeGainEd+0x8>
    67f2:	cd b7       	in	r28, 0x3d	; 61
    67f4:	de b7       	in	r29, 0x3e	; 62
    67f6:	9a 83       	std	Y+2, r25	; 0x02
    67f8:	89 83       	std	Y+1, r24	; 0x01
    67fa:	4b 83       	std	Y+3, r20	; 0x03
    67fc:	5c 83       	std	Y+4, r21	; 0x04
    67fe:	6d 83       	std	Y+5, r22	; 0x05
    6800:	7e 83       	std	Y+6, r23	; 0x06
				{
					zDerivativeGain = val;
    6802:	89 81       	ldd	r24, Y+1	; 0x01
    6804:	9a 81       	ldd	r25, Y+2	; 0x02
    6806:	9c 01       	movw	r18, r24
    6808:	20 5c       	subi	r18, 0xC0	; 192
    680a:	3f 4f       	sbci	r19, 0xFF	; 255
    680c:	8b 81       	ldd	r24, Y+3	; 0x03
    680e:	9c 81       	ldd	r25, Y+4	; 0x04
    6810:	ad 81       	ldd	r26, Y+5	; 0x05
    6812:	be 81       	ldd	r27, Y+6	; 0x06
    6814:	f9 01       	movw	r30, r18
    6816:	80 83       	st	Z, r24
    6818:	91 83       	std	Z+1, r25	; 0x01
    681a:	a2 83       	std	Z+2, r26	; 0x02
    681c:	b3 83       	std	Z+3, r27	; 0x03
				}
    681e:	26 96       	adiw	r28, 0x06	; 6
    6820:	0f b6       	in	r0, 0x3f	; 63
    6822:	f8 94       	cli
    6824:	de bf       	out	0x3e, r29	; 62
    6826:	0f be       	out	0x3f, r0	; 63
    6828:	cd bf       	out	0x3d, r28	; 61
    682a:	df 91       	pop	r29
    682c:	cf 91       	pop	r28
    682e:	08 95       	ret

00006830 <_ZN10helicopter10controller13PIDController20setZProportionalGainEd>:
				
				void setZProportionalGain(double val)
    6830:	cf 93       	push	r28
    6832:	df 93       	push	r29
    6834:	00 d0       	rcall	.+0      	; 0x6836 <_ZN10helicopter10controller13PIDController20setZProportionalGainEd+0x6>
    6836:	00 d0       	rcall	.+0      	; 0x6838 <_ZN10helicopter10controller13PIDController20setZProportionalGainEd+0x8>
    6838:	cd b7       	in	r28, 0x3d	; 61
    683a:	de b7       	in	r29, 0x3e	; 62
    683c:	9a 83       	std	Y+2, r25	; 0x02
    683e:	89 83       	std	Y+1, r24	; 0x01
    6840:	4b 83       	std	Y+3, r20	; 0x03
    6842:	5c 83       	std	Y+4, r21	; 0x04
    6844:	6d 83       	std	Y+5, r22	; 0x05
    6846:	7e 83       	std	Y+6, r23	; 0x06
				{
					zProportionalGain = val;
    6848:	89 81       	ldd	r24, Y+1	; 0x01
    684a:	9a 81       	ldd	r25, Y+2	; 0x02
    684c:	9c 01       	movw	r18, r24
    684e:	2c 5b       	subi	r18, 0xBC	; 188
    6850:	3f 4f       	sbci	r19, 0xFF	; 255
    6852:	8b 81       	ldd	r24, Y+3	; 0x03
    6854:	9c 81       	ldd	r25, Y+4	; 0x04
    6856:	ad 81       	ldd	r26, Y+5	; 0x05
    6858:	be 81       	ldd	r27, Y+6	; 0x06
    685a:	f9 01       	movw	r30, r18
    685c:	80 83       	st	Z, r24
    685e:	91 83       	std	Z+1, r25	; 0x01
    6860:	a2 83       	std	Z+2, r26	; 0x02
    6862:	b3 83       	std	Z+3, r27	; 0x03
				}
    6864:	26 96       	adiw	r28, 0x06	; 6
    6866:	0f b6       	in	r0, 0x3f	; 63
    6868:	f8 94       	cli
    686a:	de bf       	out	0x3e, r29	; 62
    686c:	0f be       	out	0x3f, r0	; 63
    686e:	cd bf       	out	0x3d, r28	; 61
    6870:	df 91       	pop	r29
    6872:	cf 91       	pop	r28
    6874:	08 95       	ret

00006876 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEd>:
				
				void setZAntiWindupGain(double val)
    6876:	cf 93       	push	r28
    6878:	df 93       	push	r29
    687a:	00 d0       	rcall	.+0      	; 0x687c <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEd+0x6>
    687c:	00 d0       	rcall	.+0      	; 0x687e <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEd+0x8>
    687e:	cd b7       	in	r28, 0x3d	; 61
    6880:	de b7       	in	r29, 0x3e	; 62
    6882:	9a 83       	std	Y+2, r25	; 0x02
    6884:	89 83       	std	Y+1, r24	; 0x01
    6886:	4b 83       	std	Y+3, r20	; 0x03
    6888:	5c 83       	std	Y+4, r21	; 0x04
    688a:	6d 83       	std	Y+5, r22	; 0x05
    688c:	7e 83       	std	Y+6, r23	; 0x06
				{
					zAntiWindupGain = val;
    688e:	89 81       	ldd	r24, Y+1	; 0x01
    6890:	9a 81       	ldd	r25, Y+2	; 0x02
    6892:	9c 01       	movw	r18, r24
    6894:	28 5b       	subi	r18, 0xB8	; 184
    6896:	3f 4f       	sbci	r19, 0xFF	; 255
    6898:	8b 81       	ldd	r24, Y+3	; 0x03
    689a:	9c 81       	ldd	r25, Y+4	; 0x04
    689c:	ad 81       	ldd	r26, Y+5	; 0x05
    689e:	be 81       	ldd	r27, Y+6	; 0x06
    68a0:	f9 01       	movw	r30, r18
    68a2:	80 83       	st	Z, r24
    68a4:	91 83       	std	Z+1, r25	; 0x01
    68a6:	a2 83       	std	Z+2, r26	; 0x02
    68a8:	b3 83       	std	Z+3, r27	; 0x03
				}
    68aa:	26 96       	adiw	r28, 0x06	; 6
    68ac:	0f b6       	in	r0, 0x3f	; 63
    68ae:	f8 94       	cli
    68b0:	de bf       	out	0x3e, r29	; 62
    68b2:	0f be       	out	0x3f, r0	; 63
    68b4:	cd bf       	out	0x3d, r28	; 61
    68b6:	df 91       	pop	r29
    68b8:	cf 91       	pop	r28
    68ba:	08 95       	ret

000068bc <_ZN10helicopter5tasks16SimTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEPNS_10controller13PIDControllerEii>:
#include "SyncMessage.h"

using namespace helicopter::tasks;
using namespace helicopter::messages;

SimTelemetryTask::SimTelemetryTask(GroundControlStationInterface *radioInterface, SystemModel *model, PIDController *pidController, int delay, int period) :
    68bc:	ef 92       	push	r14
    68be:	ff 92       	push	r15
    68c0:	0f 93       	push	r16
    68c2:	1f 93       	push	r17
    68c4:	cf 93       	push	r28
    68c6:	df 93       	push	r29
    68c8:	cd b7       	in	r28, 0x3d	; 61
    68ca:	de b7       	in	r29, 0x3e	; 62
    68cc:	2c 97       	sbiw	r28, 0x0c	; 12
    68ce:	0f b6       	in	r0, 0x3f	; 63
    68d0:	f8 94       	cli
    68d2:	de bf       	out	0x3e, r29	; 62
    68d4:	0f be       	out	0x3f, r0	; 63
    68d6:	cd bf       	out	0x3d, r28	; 61
    68d8:	9a 83       	std	Y+2, r25	; 0x02
    68da:	89 83       	std	Y+1, r24	; 0x01
    68dc:	7c 83       	std	Y+4, r23	; 0x04
    68de:	6b 83       	std	Y+3, r22	; 0x03
    68e0:	5e 83       	std	Y+6, r21	; 0x06
    68e2:	4d 83       	std	Y+5, r20	; 0x05
    68e4:	38 87       	std	Y+8, r19	; 0x08
    68e6:	2f 83       	std	Y+7, r18	; 0x07
    68e8:	1a 87       	std	Y+10, r17	; 0x0a
    68ea:	09 87       	std	Y+9, r16	; 0x09
    68ec:	fc 86       	std	Y+12, r15	; 0x0c
    68ee:	eb 86       	std	Y+11, r14	; 0x0b
	Task(delay, period),
	radioInterface(radioInterface),
	model(model),
	pidController(pidController)
    68f0:	89 81       	ldd	r24, Y+1	; 0x01
    68f2:	9a 81       	ldd	r25, Y+2	; 0x02
    68f4:	4b 85       	ldd	r20, Y+11	; 0x0b
    68f6:	5c 85       	ldd	r21, Y+12	; 0x0c
    68f8:	29 85       	ldd	r18, Y+9	; 0x09
    68fa:	3a 85       	ldd	r19, Y+10	; 0x0a
    68fc:	b9 01       	movw	r22, r18
    68fe:	0e 94 21 38 	call	0x7042	; 0x7042 <_ZN10helicopter5tasks4TaskC1Eii>
    6902:	89 81       	ldd	r24, Y+1	; 0x01
    6904:	9a 81       	ldd	r25, Y+2	; 0x02
    6906:	2e e7       	ldi	r18, 0x7E	; 126
    6908:	32 e0       	ldi	r19, 0x02	; 2
    690a:	fc 01       	movw	r30, r24
    690c:	31 83       	std	Z+1, r19	; 0x01
    690e:	20 83       	st	Z, r18
    6910:	89 81       	ldd	r24, Y+1	; 0x01
    6912:	9a 81       	ldd	r25, Y+2	; 0x02
    6914:	2b 81       	ldd	r18, Y+3	; 0x03
    6916:	3c 81       	ldd	r19, Y+4	; 0x04
    6918:	fc 01       	movw	r30, r24
    691a:	30 87       	std	Z+8, r19	; 0x08
    691c:	27 83       	std	Z+7, r18	; 0x07
    691e:	89 81       	ldd	r24, Y+1	; 0x01
    6920:	9a 81       	ldd	r25, Y+2	; 0x02
    6922:	2d 81       	ldd	r18, Y+5	; 0x05
    6924:	3e 81       	ldd	r19, Y+6	; 0x06
    6926:	fc 01       	movw	r30, r24
    6928:	32 87       	std	Z+10, r19	; 0x0a
    692a:	21 87       	std	Z+9, r18	; 0x09
    692c:	89 81       	ldd	r24, Y+1	; 0x01
    692e:	9a 81       	ldd	r25, Y+2	; 0x02
    6930:	2f 81       	ldd	r18, Y+7	; 0x07
    6932:	38 85       	ldd	r19, Y+8	; 0x08
    6934:	fc 01       	movw	r30, r24
    6936:	34 87       	std	Z+12, r19	; 0x0c
    6938:	23 87       	std	Z+11, r18	; 0x0b
{
	
}
    693a:	2c 96       	adiw	r28, 0x0c	; 12
    693c:	0f b6       	in	r0, 0x3f	; 63
    693e:	f8 94       	cli
    6940:	de bf       	out	0x3e, r29	; 62
    6942:	0f be       	out	0x3f, r0	; 63
    6944:	cd bf       	out	0x3d, r28	; 61
    6946:	df 91       	pop	r29
    6948:	cf 91       	pop	r28
    694a:	1f 91       	pop	r17
    694c:	0f 91       	pop	r16
    694e:	ff 90       	pop	r15
    6950:	ef 90       	pop	r14
    6952:	08 95       	ret

00006954 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv>:

void SimTelemetryTask::runTaskImpl() 
{
    6954:	cf 93       	push	r28
    6956:	df 93       	push	r29
    6958:	cd b7       	in	r28, 0x3d	; 61
    695a:	de b7       	in	r29, 0x3e	; 62
    695c:	2d 97       	sbiw	r28, 0x0d	; 13
    695e:	0f b6       	in	r0, 0x3f	; 63
    6960:	f8 94       	cli
    6962:	de bf       	out	0x3e, r29	; 62
    6964:	0f be       	out	0x3f, r0	; 63
    6966:	cd bf       	out	0x3d, r28	; 61
    6968:	9d 87       	std	Y+13, r25	; 0x0d
    696a:	8c 87       	std	Y+12, r24	; 0x0c
	
	//Send sync message to indicate to the ground control station that we are ready to receive data.
	//Without this sync message, the GCS could send data while the FC is asleep, which would cause the data
	//to overflow the usart buffer.
	SyncMessage syncMsg;
    696c:	ce 01       	movw	r24, r28
    696e:	05 96       	adiw	r24, 0x05	; 5
    6970:	0e 94 31 1c 	call	0x3862	; 0x3862 <_ZN10helicopter8messages11SyncMessageC1Ev>
	
	int status = radioInterface->transmit(&syncMsg);
    6974:	8c 85       	ldd	r24, Y+12	; 0x0c
    6976:	9d 85       	ldd	r25, Y+13	; 0x0d
    6978:	fc 01       	movw	r30, r24
    697a:	87 81       	ldd	r24, Z+7	; 0x07
    697c:	90 85       	ldd	r25, Z+8	; 0x08
    697e:	9e 01       	movw	r18, r28
    6980:	2b 5f       	subi	r18, 0xFB	; 251
    6982:	3f 4f       	sbci	r19, 0xFF	; 255
    6984:	b9 01       	movw	r22, r18
    6986:	0e 94 57 19 	call	0x32ae	; 0x32ae <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>
    698a:	9a 83       	std	Y+2, r25	; 0x02
    698c:	89 83       	std	Y+1, r24	; 0x01
	
	if (status == 0)
    698e:	89 81       	ldd	r24, Y+1	; 0x01
    6990:	9a 81       	ldd	r25, Y+2	; 0x02
    6992:	00 97       	sbiw	r24, 0x00	; 0
    6994:	09 f0       	breq	.+2      	; 0x6998 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x44>
    6996:	a6 c2       	rjmp	.+1356   	; 0x6ee4 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x590>
	{
	
		//Use the radio interface to get the telemetry message from the simulator
		Message *message = NULL;
    6998:	1b 86       	std	Y+11, r1	; 0x0b
    699a:	1a 86       	std	Y+10, r1	; 0x0a
	
		status = radioInterface->receive(message);
    699c:	8c 85       	ldd	r24, Y+12	; 0x0c
    699e:	9d 85       	ldd	r25, Y+13	; 0x0d
    69a0:	fc 01       	movw	r30, r24
    69a2:	87 81       	ldd	r24, Z+7	; 0x07
    69a4:	90 85       	ldd	r25, Z+8	; 0x08
    69a6:	9e 01       	movw	r18, r28
    69a8:	26 5f       	subi	r18, 0xF6	; 246
    69aa:	3f 4f       	sbci	r19, 0xFF	; 255
    69ac:	b9 01       	movw	r22, r18
    69ae:	0e 94 3d 1a 	call	0x347a	; 0x347a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE>
    69b2:	9a 83       	std	Y+2, r25	; 0x02
    69b4:	89 83       	std	Y+1, r24	; 0x01
	
		if (status == 0 && message != NULL)
    69b6:	89 81       	ldd	r24, Y+1	; 0x01
    69b8:	9a 81       	ldd	r25, Y+2	; 0x02
    69ba:	00 97       	sbiw	r24, 0x00	; 0
    69bc:	09 f0       	breq	.+2      	; 0x69c0 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x6c>
    69be:	92 c2       	rjmp	.+1316   	; 0x6ee4 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x590>
    69c0:	8a 85       	ldd	r24, Y+10	; 0x0a
    69c2:	9b 85       	ldd	r25, Y+11	; 0x0b
    69c4:	00 97       	sbiw	r24, 0x00	; 0
    69c6:	09 f4       	brne	.+2      	; 0x69ca <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x76>
    69c8:	8d c2       	rjmp	.+1306   	; 0x6ee4 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x590>
		{
			SystemTelemetryMessage *telemMsg = (SystemTelemetryMessage*) message;
    69ca:	8a 85       	ldd	r24, Y+10	; 0x0a
    69cc:	9b 85       	ldd	r25, Y+11	; 0x0b
    69ce:	9c 83       	std	Y+4, r25	; 0x04
    69d0:	8b 83       	std	Y+3, r24	; 0x03
			
			//Update the model using the new data received from the simulator.
			telemMsg->updateModelFromMessageFromSimulator(model);
    69d2:	8c 85       	ldd	r24, Y+12	; 0x0c
    69d4:	9d 85       	ldd	r25, Y+13	; 0x0d
    69d6:	fc 01       	movw	r30, r24
    69d8:	21 85       	ldd	r18, Z+9	; 0x09
    69da:	32 85       	ldd	r19, Z+10	; 0x0a
    69dc:	8b 81       	ldd	r24, Y+3	; 0x03
    69de:	9c 81       	ldd	r25, Y+4	; 0x04
    69e0:	b9 01       	movw	r22, r18
    69e2:	0e 94 5b 2b 	call	0x56b6	; 0x56b6 <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE>
			
			pidController->setYawIntegralGain((double) telemMsg->YawIntegralGain / 100);
    69e6:	8b 81       	ldd	r24, Y+3	; 0x03
    69e8:	9c 81       	ldd	r25, Y+4	; 0x04
    69ea:	fc 01       	movw	r30, r24
    69ec:	85 8d       	ldd	r24, Z+29	; 0x1d
    69ee:	96 8d       	ldd	r25, Z+30	; 0x1e
    69f0:	a7 8d       	ldd	r26, Z+31	; 0x1f
    69f2:	b0 a1       	ldd	r27, Z+32	; 0x20
    69f4:	bc 01       	movw	r22, r24
    69f6:	cd 01       	movw	r24, r26
    69f8:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    69fc:	dc 01       	movw	r26, r24
    69fe:	cb 01       	movw	r24, r22
    6a00:	20 e0       	ldi	r18, 0x00	; 0
    6a02:	30 e0       	ldi	r19, 0x00	; 0
    6a04:	48 ec       	ldi	r20, 0xC8	; 200
    6a06:	52 e4       	ldi	r21, 0x42	; 66
    6a08:	bc 01       	movw	r22, r24
    6a0a:	cd 01       	movw	r24, r26
    6a0c:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6a10:	dc 01       	movw	r26, r24
    6a12:	cb 01       	movw	r24, r22
    6a14:	2c 85       	ldd	r18, Y+12	; 0x0c
    6a16:	3d 85       	ldd	r19, Y+13	; 0x0d
    6a18:	f9 01       	movw	r30, r18
    6a1a:	23 85       	ldd	r18, Z+11	; 0x0b
    6a1c:	34 85       	ldd	r19, Z+12	; 0x0c
    6a1e:	ac 01       	movw	r20, r24
    6a20:	bd 01       	movw	r22, r26
    6a22:	c9 01       	movw	r24, r18
    6a24:	0e 94 ad 14 	call	0x295a	; 0x295a <_ZN10helicopter10controller13PIDController18setYawIntegralGainEd>
			pidController->setYawDerivativeGain((double) telemMsg->YawDerivativeGain / 100);
    6a28:	8b 81       	ldd	r24, Y+3	; 0x03
    6a2a:	9c 81       	ldd	r25, Y+4	; 0x04
    6a2c:	fc 01       	movw	r30, r24
    6a2e:	81 a1       	ldd	r24, Z+33	; 0x21
    6a30:	92 a1       	ldd	r25, Z+34	; 0x22
    6a32:	a3 a1       	ldd	r26, Z+35	; 0x23
    6a34:	b4 a1       	ldd	r27, Z+36	; 0x24
    6a36:	bc 01       	movw	r22, r24
    6a38:	cd 01       	movw	r24, r26
    6a3a:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6a3e:	dc 01       	movw	r26, r24
    6a40:	cb 01       	movw	r24, r22
    6a42:	20 e0       	ldi	r18, 0x00	; 0
    6a44:	30 e0       	ldi	r19, 0x00	; 0
    6a46:	48 ec       	ldi	r20, 0xC8	; 200
    6a48:	52 e4       	ldi	r21, 0x42	; 66
    6a4a:	bc 01       	movw	r22, r24
    6a4c:	cd 01       	movw	r24, r26
    6a4e:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6a52:	dc 01       	movw	r26, r24
    6a54:	cb 01       	movw	r24, r22
    6a56:	2c 85       	ldd	r18, Y+12	; 0x0c
    6a58:	3d 85       	ldd	r19, Y+13	; 0x0d
    6a5a:	f9 01       	movw	r30, r18
    6a5c:	23 85       	ldd	r18, Z+11	; 0x0b
    6a5e:	34 85       	ldd	r19, Z+12	; 0x0c
    6a60:	ac 01       	movw	r20, r24
    6a62:	bd 01       	movw	r22, r26
    6a64:	c9 01       	movw	r24, r18
    6a66:	0e 94 cd 14 	call	0x299a	; 0x299a <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEd>
			pidController->setYawProportionalGain((double) telemMsg->YawProportionalGain / 100);
    6a6a:	8b 81       	ldd	r24, Y+3	; 0x03
    6a6c:	9c 81       	ldd	r25, Y+4	; 0x04
    6a6e:	fc 01       	movw	r30, r24
    6a70:	85 a1       	ldd	r24, Z+37	; 0x25
    6a72:	96 a1       	ldd	r25, Z+38	; 0x26
    6a74:	a7 a1       	ldd	r26, Z+39	; 0x27
    6a76:	b0 a5       	ldd	r27, Z+40	; 0x28
    6a78:	bc 01       	movw	r22, r24
    6a7a:	cd 01       	movw	r24, r26
    6a7c:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6a80:	dc 01       	movw	r26, r24
    6a82:	cb 01       	movw	r24, r22
    6a84:	20 e0       	ldi	r18, 0x00	; 0
    6a86:	30 e0       	ldi	r19, 0x00	; 0
    6a88:	48 ec       	ldi	r20, 0xC8	; 200
    6a8a:	52 e4       	ldi	r21, 0x42	; 66
    6a8c:	bc 01       	movw	r22, r24
    6a8e:	cd 01       	movw	r24, r26
    6a90:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6a94:	dc 01       	movw	r26, r24
    6a96:	cb 01       	movw	r24, r22
    6a98:	2c 85       	ldd	r18, Y+12	; 0x0c
    6a9a:	3d 85       	ldd	r19, Y+13	; 0x0d
    6a9c:	f9 01       	movw	r30, r18
    6a9e:	23 85       	ldd	r18, Z+11	; 0x0b
    6aa0:	34 85       	ldd	r19, Z+12	; 0x0c
    6aa2:	ac 01       	movw	r20, r24
    6aa4:	bd 01       	movw	r22, r26
    6aa6:	c9 01       	movw	r24, r18
    6aa8:	0e 94 8d 14 	call	0x291a	; 0x291a <_ZN10helicopter10controller13PIDController22setYawProportionalGainEd>
			pidController->setYawAntiWindupGain((double) telemMsg->YawAntiWindupGain / 100);
    6aac:	8b 81       	ldd	r24, Y+3	; 0x03
    6aae:	9c 81       	ldd	r25, Y+4	; 0x04
    6ab0:	fc 01       	movw	r30, r24
    6ab2:	81 a5       	ldd	r24, Z+41	; 0x29
    6ab4:	92 a5       	ldd	r25, Z+42	; 0x2a
    6ab6:	a3 a5       	ldd	r26, Z+43	; 0x2b
    6ab8:	b4 a5       	ldd	r27, Z+44	; 0x2c
    6aba:	bc 01       	movw	r22, r24
    6abc:	cd 01       	movw	r24, r26
    6abe:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6ac2:	dc 01       	movw	r26, r24
    6ac4:	cb 01       	movw	r24, r22
    6ac6:	20 e0       	ldi	r18, 0x00	; 0
    6ac8:	30 e0       	ldi	r19, 0x00	; 0
    6aca:	48 ec       	ldi	r20, 0xC8	; 200
    6acc:	52 e4       	ldi	r21, 0x42	; 66
    6ace:	bc 01       	movw	r22, r24
    6ad0:	cd 01       	movw	r24, r26
    6ad2:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6ad6:	dc 01       	movw	r26, r24
    6ad8:	cb 01       	movw	r24, r22
    6ada:	2c 85       	ldd	r18, Y+12	; 0x0c
    6adc:	3d 85       	ldd	r19, Y+13	; 0x0d
    6ade:	f9 01       	movw	r30, r18
    6ae0:	23 85       	ldd	r18, Z+11	; 0x0b
    6ae2:	34 85       	ldd	r19, Z+12	; 0x0c
    6ae4:	ac 01       	movw	r20, r24
    6ae6:	bd 01       	movw	r22, r26
    6ae8:	c9 01       	movw	r24, r18
    6aea:	0e 94 10 15 	call	0x2a20	; 0x2a20 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEd>
		
			pidController->setXIntegralGain((double) telemMsg->XIntegralGain / 100);
    6aee:	8b 81       	ldd	r24, Y+3	; 0x03
    6af0:	9c 81       	ldd	r25, Y+4	; 0x04
    6af2:	87 5b       	subi	r24, 0xB7	; 183
    6af4:	9f 4f       	sbci	r25, 0xFF	; 255
    6af6:	fc 01       	movw	r30, r24
    6af8:	80 81       	ld	r24, Z
    6afa:	91 81       	ldd	r25, Z+1	; 0x01
    6afc:	a2 81       	ldd	r26, Z+2	; 0x02
    6afe:	b3 81       	ldd	r27, Z+3	; 0x03
    6b00:	bc 01       	movw	r22, r24
    6b02:	cd 01       	movw	r24, r26
    6b04:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6b08:	dc 01       	movw	r26, r24
    6b0a:	cb 01       	movw	r24, r22
    6b0c:	20 e0       	ldi	r18, 0x00	; 0
    6b0e:	30 e0       	ldi	r19, 0x00	; 0
    6b10:	48 ec       	ldi	r20, 0xC8	; 200
    6b12:	52 e4       	ldi	r21, 0x42	; 66
    6b14:	bc 01       	movw	r22, r24
    6b16:	cd 01       	movw	r24, r26
    6b18:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6b1c:	dc 01       	movw	r26, r24
    6b1e:	cb 01       	movw	r24, r22
    6b20:	2c 85       	ldd	r18, Y+12	; 0x0c
    6b22:	3d 85       	ldd	r19, Y+13	; 0x0d
    6b24:	f9 01       	movw	r30, r18
    6b26:	23 85       	ldd	r18, Z+11	; 0x0b
    6b28:	34 85       	ldd	r19, Z+12	; 0x0c
    6b2a:	ac 01       	movw	r20, r24
    6b2c:	bd 01       	movw	r22, r26
    6b2e:	c9 01       	movw	r24, r18
    6b30:	0e 94 a7 13 	call	0x274e	; 0x274e <_ZN10helicopter10controller13PIDController16setXIntegralGainEd>
			pidController->setXDerivativeGain((double) telemMsg->XDerivativeGain / 100);
    6b34:	8b 81       	ldd	r24, Y+3	; 0x03
    6b36:	9c 81       	ldd	r25, Y+4	; 0x04
    6b38:	83 5b       	subi	r24, 0xB3	; 179
    6b3a:	9f 4f       	sbci	r25, 0xFF	; 255
    6b3c:	fc 01       	movw	r30, r24
    6b3e:	80 81       	ld	r24, Z
    6b40:	91 81       	ldd	r25, Z+1	; 0x01
    6b42:	a2 81       	ldd	r26, Z+2	; 0x02
    6b44:	b3 81       	ldd	r27, Z+3	; 0x03
    6b46:	bc 01       	movw	r22, r24
    6b48:	cd 01       	movw	r24, r26
    6b4a:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6b4e:	dc 01       	movw	r26, r24
    6b50:	cb 01       	movw	r24, r22
    6b52:	20 e0       	ldi	r18, 0x00	; 0
    6b54:	30 e0       	ldi	r19, 0x00	; 0
    6b56:	48 ec       	ldi	r20, 0xC8	; 200
    6b58:	52 e4       	ldi	r21, 0x42	; 66
    6b5a:	bc 01       	movw	r22, r24
    6b5c:	cd 01       	movw	r24, r26
    6b5e:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6b62:	dc 01       	movw	r26, r24
    6b64:	cb 01       	movw	r24, r22
    6b66:	2c 85       	ldd	r18, Y+12	; 0x0c
    6b68:	3d 85       	ldd	r19, Y+13	; 0x0d
    6b6a:	f9 01       	movw	r30, r18
    6b6c:	23 85       	ldd	r18, Z+11	; 0x0b
    6b6e:	34 85       	ldd	r19, Z+12	; 0x0c
    6b70:	ac 01       	movw	r20, r24
    6b72:	bd 01       	movw	r22, r26
    6b74:	c9 01       	movw	r24, r18
    6b76:	0e 94 c7 13 	call	0x278e	; 0x278e <_ZN10helicopter10controller13PIDController18setXDerivativeGainEd>
			pidController->setXProportionalGain((double) telemMsg->XProportionalGain / 100);
    6b7a:	8b 81       	ldd	r24, Y+3	; 0x03
    6b7c:	9c 81       	ldd	r25, Y+4	; 0x04
    6b7e:	8f 5a       	subi	r24, 0xAF	; 175
    6b80:	9f 4f       	sbci	r25, 0xFF	; 255
    6b82:	fc 01       	movw	r30, r24
    6b84:	80 81       	ld	r24, Z
    6b86:	91 81       	ldd	r25, Z+1	; 0x01
    6b88:	a2 81       	ldd	r26, Z+2	; 0x02
    6b8a:	b3 81       	ldd	r27, Z+3	; 0x03
    6b8c:	bc 01       	movw	r22, r24
    6b8e:	cd 01       	movw	r24, r26
    6b90:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6b94:	dc 01       	movw	r26, r24
    6b96:	cb 01       	movw	r24, r22
    6b98:	20 e0       	ldi	r18, 0x00	; 0
    6b9a:	30 e0       	ldi	r19, 0x00	; 0
    6b9c:	48 ec       	ldi	r20, 0xC8	; 200
    6b9e:	52 e4       	ldi	r21, 0x42	; 66
    6ba0:	bc 01       	movw	r22, r24
    6ba2:	cd 01       	movw	r24, r26
    6ba4:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6ba8:	dc 01       	movw	r26, r24
    6baa:	cb 01       	movw	r24, r22
    6bac:	2c 85       	ldd	r18, Y+12	; 0x0c
    6bae:	3d 85       	ldd	r19, Y+13	; 0x0d
    6bb0:	f9 01       	movw	r30, r18
    6bb2:	23 85       	ldd	r18, Z+11	; 0x0b
    6bb4:	34 85       	ldd	r19, Z+12	; 0x0c
    6bb6:	ac 01       	movw	r20, r24
    6bb8:	bd 01       	movw	r22, r26
    6bba:	c9 01       	movw	r24, r18
    6bbc:	0e 94 e7 13 	call	0x27ce	; 0x27ce <_ZN10helicopter10controller13PIDController20setXProportionalGainEd>
			pidController->setXAntiWindupGain((double) telemMsg->XAntiWindupGain / 100);
    6bc0:	8b 81       	ldd	r24, Y+3	; 0x03
    6bc2:	9c 81       	ldd	r25, Y+4	; 0x04
    6bc4:	8b 5a       	subi	r24, 0xAB	; 171
    6bc6:	9f 4f       	sbci	r25, 0xFF	; 255
    6bc8:	fc 01       	movw	r30, r24
    6bca:	80 81       	ld	r24, Z
    6bcc:	91 81       	ldd	r25, Z+1	; 0x01
    6bce:	a2 81       	ldd	r26, Z+2	; 0x02
    6bd0:	b3 81       	ldd	r27, Z+3	; 0x03
    6bd2:	bc 01       	movw	r22, r24
    6bd4:	cd 01       	movw	r24, r26
    6bd6:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6bda:	dc 01       	movw	r26, r24
    6bdc:	cb 01       	movw	r24, r22
    6bde:	20 e0       	ldi	r18, 0x00	; 0
    6be0:	30 e0       	ldi	r19, 0x00	; 0
    6be2:	48 ec       	ldi	r20, 0xC8	; 200
    6be4:	52 e4       	ldi	r21, 0x42	; 66
    6be6:	bc 01       	movw	r22, r24
    6be8:	cd 01       	movw	r24, r26
    6bea:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6bee:	dc 01       	movw	r26, r24
    6bf0:	cb 01       	movw	r24, r22
    6bf2:	2c 85       	ldd	r18, Y+12	; 0x0c
    6bf4:	3d 85       	ldd	r19, Y+13	; 0x0d
    6bf6:	f9 01       	movw	r30, r18
    6bf8:	23 85       	ldd	r18, Z+11	; 0x0b
    6bfa:	34 85       	ldd	r19, Z+12	; 0x0c
    6bfc:	ac 01       	movw	r20, r24
    6bfe:	bd 01       	movw	r22, r26
    6c00:	c9 01       	movw	r24, r18
    6c02:	0e 94 07 14 	call	0x280e	; 0x280e <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEd>
			pidController->setLongitudeInnerLoopGain((double) telemMsg->LongitudeInnerLoopGain / 100);
    6c06:	8b 81       	ldd	r24, Y+3	; 0x03
    6c08:	9c 81       	ldd	r25, Y+4	; 0x04
    6c0a:	87 5a       	subi	r24, 0xA7	; 167
    6c0c:	9f 4f       	sbci	r25, 0xFF	; 255
    6c0e:	fc 01       	movw	r30, r24
    6c10:	80 81       	ld	r24, Z
    6c12:	91 81       	ldd	r25, Z+1	; 0x01
    6c14:	a2 81       	ldd	r26, Z+2	; 0x02
    6c16:	b3 81       	ldd	r27, Z+3	; 0x03
    6c18:	bc 01       	movw	r22, r24
    6c1a:	cd 01       	movw	r24, r26
    6c1c:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6c20:	dc 01       	movw	r26, r24
    6c22:	cb 01       	movw	r24, r22
    6c24:	20 e0       	ldi	r18, 0x00	; 0
    6c26:	30 e0       	ldi	r19, 0x00	; 0
    6c28:	48 ec       	ldi	r20, 0xC8	; 200
    6c2a:	52 e4       	ldi	r21, 0x42	; 66
    6c2c:	bc 01       	movw	r22, r24
    6c2e:	cd 01       	movw	r24, r26
    6c30:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6c34:	dc 01       	movw	r26, r24
    6c36:	cb 01       	movw	r24, r22
    6c38:	2c 85       	ldd	r18, Y+12	; 0x0c
    6c3a:	3d 85       	ldd	r19, Y+13	; 0x0d
    6c3c:	f9 01       	movw	r30, r18
    6c3e:	23 85       	ldd	r18, Z+11	; 0x0b
    6c40:	34 85       	ldd	r19, Z+12	; 0x0c
    6c42:	ac 01       	movw	r20, r24
    6c44:	bd 01       	movw	r22, r26
    6c46:	c9 01       	movw	r24, r18
    6c48:	0e 94 27 14 	call	0x284e	; 0x284e <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEd>
				
			pidController->setYIntegralGain((double) telemMsg->YIntegralGain / 100);
    6c4c:	8b 81       	ldd	r24, Y+3	; 0x03
    6c4e:	9c 81       	ldd	r25, Y+4	; 0x04
    6c50:	87 58       	subi	r24, 0x87	; 135
    6c52:	9f 4f       	sbci	r25, 0xFF	; 255
    6c54:	fc 01       	movw	r30, r24
    6c56:	80 81       	ld	r24, Z
    6c58:	91 81       	ldd	r25, Z+1	; 0x01
    6c5a:	a2 81       	ldd	r26, Z+2	; 0x02
    6c5c:	b3 81       	ldd	r27, Z+3	; 0x03
    6c5e:	bc 01       	movw	r22, r24
    6c60:	cd 01       	movw	r24, r26
    6c62:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6c66:	dc 01       	movw	r26, r24
    6c68:	cb 01       	movw	r24, r22
    6c6a:	20 e0       	ldi	r18, 0x00	; 0
    6c6c:	30 e0       	ldi	r19, 0x00	; 0
    6c6e:	48 ec       	ldi	r20, 0xC8	; 200
    6c70:	52 e4       	ldi	r21, 0x42	; 66
    6c72:	bc 01       	movw	r22, r24
    6c74:	cd 01       	movw	r24, r26
    6c76:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6c7a:	dc 01       	movw	r26, r24
    6c7c:	cb 01       	movw	r24, r22
    6c7e:	2c 85       	ldd	r18, Y+12	; 0x0c
    6c80:	3d 85       	ldd	r19, Y+13	; 0x0d
    6c82:	f9 01       	movw	r30, r18
    6c84:	23 85       	ldd	r18, Z+11	; 0x0b
    6c86:	34 85       	ldd	r19, Z+12	; 0x0c
    6c88:	ac 01       	movw	r20, r24
    6c8a:	bd 01       	movw	r22, r26
    6c8c:	c9 01       	movw	r24, r18
    6c8e:	0e 94 35 33 	call	0x666a	; 0x666a <_ZN10helicopter10controller13PIDController16setYIntegralGainEd>
			pidController->setYDerivativeGain((double) telemMsg->YDerivativeGain / 100);
    6c92:	8b 81       	ldd	r24, Y+3	; 0x03
    6c94:	9c 81       	ldd	r25, Y+4	; 0x04
    6c96:	83 58       	subi	r24, 0x83	; 131
    6c98:	9f 4f       	sbci	r25, 0xFF	; 255
    6c9a:	fc 01       	movw	r30, r24
    6c9c:	80 81       	ld	r24, Z
    6c9e:	91 81       	ldd	r25, Z+1	; 0x01
    6ca0:	a2 81       	ldd	r26, Z+2	; 0x02
    6ca2:	b3 81       	ldd	r27, Z+3	; 0x03
    6ca4:	bc 01       	movw	r22, r24
    6ca6:	cd 01       	movw	r24, r26
    6ca8:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6cac:	dc 01       	movw	r26, r24
    6cae:	cb 01       	movw	r24, r22
    6cb0:	20 e0       	ldi	r18, 0x00	; 0
    6cb2:	30 e0       	ldi	r19, 0x00	; 0
    6cb4:	48 ec       	ldi	r20, 0xC8	; 200
    6cb6:	52 e4       	ldi	r21, 0x42	; 66
    6cb8:	bc 01       	movw	r22, r24
    6cba:	cd 01       	movw	r24, r26
    6cbc:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6cc0:	dc 01       	movw	r26, r24
    6cc2:	cb 01       	movw	r24, r22
    6cc4:	2c 85       	ldd	r18, Y+12	; 0x0c
    6cc6:	3d 85       	ldd	r19, Y+13	; 0x0d
    6cc8:	f9 01       	movw	r30, r18
    6cca:	23 85       	ldd	r18, Z+11	; 0x0b
    6ccc:	34 85       	ldd	r19, Z+12	; 0x0c
    6cce:	ac 01       	movw	r20, r24
    6cd0:	bd 01       	movw	r22, r26
    6cd2:	c9 01       	movw	r24, r18
    6cd4:	0e 94 55 33 	call	0x66aa	; 0x66aa <_ZN10helicopter10controller13PIDController18setYDerivativeGainEd>
			pidController->setYProportionalGain((double) telemMsg->YProportionalGain / 100);
    6cd8:	8b 81       	ldd	r24, Y+3	; 0x03
    6cda:	9c 81       	ldd	r25, Y+4	; 0x04
    6cdc:	8f 57       	subi	r24, 0x7F	; 127
    6cde:	9f 4f       	sbci	r25, 0xFF	; 255
    6ce0:	fc 01       	movw	r30, r24
    6ce2:	80 81       	ld	r24, Z
    6ce4:	91 81       	ldd	r25, Z+1	; 0x01
    6ce6:	a2 81       	ldd	r26, Z+2	; 0x02
    6ce8:	b3 81       	ldd	r27, Z+3	; 0x03
    6cea:	bc 01       	movw	r22, r24
    6cec:	cd 01       	movw	r24, r26
    6cee:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6cf2:	dc 01       	movw	r26, r24
    6cf4:	cb 01       	movw	r24, r22
    6cf6:	20 e0       	ldi	r18, 0x00	; 0
    6cf8:	30 e0       	ldi	r19, 0x00	; 0
    6cfa:	48 ec       	ldi	r20, 0xC8	; 200
    6cfc:	52 e4       	ldi	r21, 0x42	; 66
    6cfe:	bc 01       	movw	r22, r24
    6d00:	cd 01       	movw	r24, r26
    6d02:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6d06:	dc 01       	movw	r26, r24
    6d08:	cb 01       	movw	r24, r22
    6d0a:	2c 85       	ldd	r18, Y+12	; 0x0c
    6d0c:	3d 85       	ldd	r19, Y+13	; 0x0d
    6d0e:	f9 01       	movw	r30, r18
    6d10:	23 85       	ldd	r18, Z+11	; 0x0b
    6d12:	34 85       	ldd	r19, Z+12	; 0x0c
    6d14:	ac 01       	movw	r20, r24
    6d16:	bd 01       	movw	r22, r26
    6d18:	c9 01       	movw	r24, r18
    6d1a:	0e 94 75 33 	call	0x66ea	; 0x66ea <_ZN10helicopter10controller13PIDController20setYProportionalGainEd>
			pidController->setYAntiWindupGain((double) telemMsg->YAntiWindupGain / 100);
    6d1e:	8b 81       	ldd	r24, Y+3	; 0x03
    6d20:	9c 81       	ldd	r25, Y+4	; 0x04
    6d22:	8b 57       	subi	r24, 0x7B	; 123
    6d24:	9f 4f       	sbci	r25, 0xFF	; 255
    6d26:	fc 01       	movw	r30, r24
    6d28:	80 81       	ld	r24, Z
    6d2a:	91 81       	ldd	r25, Z+1	; 0x01
    6d2c:	a2 81       	ldd	r26, Z+2	; 0x02
    6d2e:	b3 81       	ldd	r27, Z+3	; 0x03
    6d30:	bc 01       	movw	r22, r24
    6d32:	cd 01       	movw	r24, r26
    6d34:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6d38:	dc 01       	movw	r26, r24
    6d3a:	cb 01       	movw	r24, r22
    6d3c:	20 e0       	ldi	r18, 0x00	; 0
    6d3e:	30 e0       	ldi	r19, 0x00	; 0
    6d40:	48 ec       	ldi	r20, 0xC8	; 200
    6d42:	52 e4       	ldi	r21, 0x42	; 66
    6d44:	bc 01       	movw	r22, r24
    6d46:	cd 01       	movw	r24, r26
    6d48:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6d4c:	dc 01       	movw	r26, r24
    6d4e:	cb 01       	movw	r24, r22
    6d50:	2c 85       	ldd	r18, Y+12	; 0x0c
    6d52:	3d 85       	ldd	r19, Y+13	; 0x0d
    6d54:	f9 01       	movw	r30, r18
    6d56:	23 85       	ldd	r18, Z+11	; 0x0b
    6d58:	34 85       	ldd	r19, Z+12	; 0x0c
    6d5a:	ac 01       	movw	r20, r24
    6d5c:	bd 01       	movw	r22, r26
    6d5e:	c9 01       	movw	r24, r18
    6d60:	0e 94 95 33 	call	0x672a	; 0x672a <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEd>
			pidController->setLateralInnerLoopGain((double) telemMsg->LateralInnerLoopGain / 100);
    6d64:	8b 81       	ldd	r24, Y+3	; 0x03
    6d66:	9c 81       	ldd	r25, Y+4	; 0x04
    6d68:	87 57       	subi	r24, 0x77	; 119
    6d6a:	9f 4f       	sbci	r25, 0xFF	; 255
    6d6c:	fc 01       	movw	r30, r24
    6d6e:	80 81       	ld	r24, Z
    6d70:	91 81       	ldd	r25, Z+1	; 0x01
    6d72:	a2 81       	ldd	r26, Z+2	; 0x02
    6d74:	b3 81       	ldd	r27, Z+3	; 0x03
    6d76:	bc 01       	movw	r22, r24
    6d78:	cd 01       	movw	r24, r26
    6d7a:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6d7e:	dc 01       	movw	r26, r24
    6d80:	cb 01       	movw	r24, r22
    6d82:	20 e0       	ldi	r18, 0x00	; 0
    6d84:	30 e0       	ldi	r19, 0x00	; 0
    6d86:	48 ec       	ldi	r20, 0xC8	; 200
    6d88:	52 e4       	ldi	r21, 0x42	; 66
    6d8a:	bc 01       	movw	r22, r24
    6d8c:	cd 01       	movw	r24, r26
    6d8e:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6d92:	dc 01       	movw	r26, r24
    6d94:	cb 01       	movw	r24, r22
    6d96:	2c 85       	ldd	r18, Y+12	; 0x0c
    6d98:	3d 85       	ldd	r19, Y+13	; 0x0d
    6d9a:	f9 01       	movw	r30, r18
    6d9c:	23 85       	ldd	r18, Z+11	; 0x0b
    6d9e:	34 85       	ldd	r19, Z+12	; 0x0c
    6da0:	ac 01       	movw	r20, r24
    6da2:	bd 01       	movw	r22, r26
    6da4:	c9 01       	movw	r24, r18
    6da6:	0e 94 b5 33 	call	0x676a	; 0x676a <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEd>
			
			pidController->setZIntegralGain((double) telemMsg->ZIntegralGain / 100);
    6daa:	8b 81       	ldd	r24, Y+3	; 0x03
    6dac:	9c 81       	ldd	r25, Y+4	; 0x04
    6dae:	8b 55       	subi	r24, 0x5B	; 91
    6db0:	9f 4f       	sbci	r25, 0xFF	; 255
    6db2:	fc 01       	movw	r30, r24
    6db4:	80 81       	ld	r24, Z
    6db6:	91 81       	ldd	r25, Z+1	; 0x01
    6db8:	a2 81       	ldd	r26, Z+2	; 0x02
    6dba:	b3 81       	ldd	r27, Z+3	; 0x03
    6dbc:	bc 01       	movw	r22, r24
    6dbe:	cd 01       	movw	r24, r26
    6dc0:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6dc4:	dc 01       	movw	r26, r24
    6dc6:	cb 01       	movw	r24, r22
    6dc8:	20 e0       	ldi	r18, 0x00	; 0
    6dca:	30 e0       	ldi	r19, 0x00	; 0
    6dcc:	48 ec       	ldi	r20, 0xC8	; 200
    6dce:	52 e4       	ldi	r21, 0x42	; 66
    6dd0:	bc 01       	movw	r22, r24
    6dd2:	cd 01       	movw	r24, r26
    6dd4:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6dd8:	dc 01       	movw	r26, r24
    6dda:	cb 01       	movw	r24, r22
    6ddc:	2c 85       	ldd	r18, Y+12	; 0x0c
    6dde:	3d 85       	ldd	r19, Y+13	; 0x0d
    6de0:	f9 01       	movw	r30, r18
    6de2:	23 85       	ldd	r18, Z+11	; 0x0b
    6de4:	34 85       	ldd	r19, Z+12	; 0x0c
    6de6:	ac 01       	movw	r20, r24
    6de8:	bd 01       	movw	r22, r26
    6dea:	c9 01       	movw	r24, r18
    6dec:	0e 94 d5 33 	call	0x67aa	; 0x67aa <_ZN10helicopter10controller13PIDController16setZIntegralGainEd>
			pidController->setZDerivativeGain((double) telemMsg->ZDerivativeGain / 100);
    6df0:	8b 81       	ldd	r24, Y+3	; 0x03
    6df2:	9c 81       	ldd	r25, Y+4	; 0x04
    6df4:	87 55       	subi	r24, 0x57	; 87
    6df6:	9f 4f       	sbci	r25, 0xFF	; 255
    6df8:	fc 01       	movw	r30, r24
    6dfa:	80 81       	ld	r24, Z
    6dfc:	91 81       	ldd	r25, Z+1	; 0x01
    6dfe:	a2 81       	ldd	r26, Z+2	; 0x02
    6e00:	b3 81       	ldd	r27, Z+3	; 0x03
    6e02:	bc 01       	movw	r22, r24
    6e04:	cd 01       	movw	r24, r26
    6e06:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6e0a:	dc 01       	movw	r26, r24
    6e0c:	cb 01       	movw	r24, r22
    6e0e:	20 e0       	ldi	r18, 0x00	; 0
    6e10:	30 e0       	ldi	r19, 0x00	; 0
    6e12:	48 ec       	ldi	r20, 0xC8	; 200
    6e14:	52 e4       	ldi	r21, 0x42	; 66
    6e16:	bc 01       	movw	r22, r24
    6e18:	cd 01       	movw	r24, r26
    6e1a:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6e1e:	dc 01       	movw	r26, r24
    6e20:	cb 01       	movw	r24, r22
    6e22:	2c 85       	ldd	r18, Y+12	; 0x0c
    6e24:	3d 85       	ldd	r19, Y+13	; 0x0d
    6e26:	f9 01       	movw	r30, r18
    6e28:	23 85       	ldd	r18, Z+11	; 0x0b
    6e2a:	34 85       	ldd	r19, Z+12	; 0x0c
    6e2c:	ac 01       	movw	r20, r24
    6e2e:	bd 01       	movw	r22, r26
    6e30:	c9 01       	movw	r24, r18
    6e32:	0e 94 f5 33 	call	0x67ea	; 0x67ea <_ZN10helicopter10controller13PIDController18setZDerivativeGainEd>
			pidController->setZProportionalGain((double) telemMsg->ZProportionalGain / 100);
    6e36:	8b 81       	ldd	r24, Y+3	; 0x03
    6e38:	9c 81       	ldd	r25, Y+4	; 0x04
    6e3a:	83 55       	subi	r24, 0x53	; 83
    6e3c:	9f 4f       	sbci	r25, 0xFF	; 255
    6e3e:	fc 01       	movw	r30, r24
    6e40:	80 81       	ld	r24, Z
    6e42:	91 81       	ldd	r25, Z+1	; 0x01
    6e44:	a2 81       	ldd	r26, Z+2	; 0x02
    6e46:	b3 81       	ldd	r27, Z+3	; 0x03
    6e48:	bc 01       	movw	r22, r24
    6e4a:	cd 01       	movw	r24, r26
    6e4c:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6e50:	dc 01       	movw	r26, r24
    6e52:	cb 01       	movw	r24, r22
    6e54:	20 e0       	ldi	r18, 0x00	; 0
    6e56:	30 e0       	ldi	r19, 0x00	; 0
    6e58:	48 ec       	ldi	r20, 0xC8	; 200
    6e5a:	52 e4       	ldi	r21, 0x42	; 66
    6e5c:	bc 01       	movw	r22, r24
    6e5e:	cd 01       	movw	r24, r26
    6e60:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6e64:	dc 01       	movw	r26, r24
    6e66:	cb 01       	movw	r24, r22
    6e68:	2c 85       	ldd	r18, Y+12	; 0x0c
    6e6a:	3d 85       	ldd	r19, Y+13	; 0x0d
    6e6c:	f9 01       	movw	r30, r18
    6e6e:	23 85       	ldd	r18, Z+11	; 0x0b
    6e70:	34 85       	ldd	r19, Z+12	; 0x0c
    6e72:	ac 01       	movw	r20, r24
    6e74:	bd 01       	movw	r22, r26
    6e76:	c9 01       	movw	r24, r18
    6e78:	0e 94 18 34 	call	0x6830	; 0x6830 <_ZN10helicopter10controller13PIDController20setZProportionalGainEd>
			pidController->setZAntiWindupGain((double) telemMsg->ZAntiWindupGain / 100);															
    6e7c:	8b 81       	ldd	r24, Y+3	; 0x03
    6e7e:	9c 81       	ldd	r25, Y+4	; 0x04
    6e80:	8f 54       	subi	r24, 0x4F	; 79
    6e82:	9f 4f       	sbci	r25, 0xFF	; 255
    6e84:	fc 01       	movw	r30, r24
    6e86:	80 81       	ld	r24, Z
    6e88:	91 81       	ldd	r25, Z+1	; 0x01
    6e8a:	a2 81       	ldd	r26, Z+2	; 0x02
    6e8c:	b3 81       	ldd	r27, Z+3	; 0x03
    6e8e:	bc 01       	movw	r22, r24
    6e90:	cd 01       	movw	r24, r26
    6e92:	0e 94 1a 40 	call	0x8034	; 0x8034 <__floatsisf>
    6e96:	dc 01       	movw	r26, r24
    6e98:	cb 01       	movw	r24, r22
    6e9a:	20 e0       	ldi	r18, 0x00	; 0
    6e9c:	30 e0       	ldi	r19, 0x00	; 0
    6e9e:	48 ec       	ldi	r20, 0xC8	; 200
    6ea0:	52 e4       	ldi	r21, 0x42	; 66
    6ea2:	bc 01       	movw	r22, r24
    6ea4:	cd 01       	movw	r24, r26
    6ea6:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    6eaa:	dc 01       	movw	r26, r24
    6eac:	cb 01       	movw	r24, r22
    6eae:	2c 85       	ldd	r18, Y+12	; 0x0c
    6eb0:	3d 85       	ldd	r19, Y+13	; 0x0d
    6eb2:	f9 01       	movw	r30, r18
    6eb4:	23 85       	ldd	r18, Z+11	; 0x0b
    6eb6:	34 85       	ldd	r19, Z+12	; 0x0c
    6eb8:	ac 01       	movw	r20, r24
    6eba:	bd 01       	movw	r22, r26
    6ebc:	c9 01       	movw	r24, r18
    6ebe:	0e 94 3b 34 	call	0x6876	; 0x6876 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEd>
		
			delete message;
    6ec2:	8a 85       	ldd	r24, Y+10	; 0x0a
    6ec4:	9b 85       	ldd	r25, Y+11	; 0x0b
    6ec6:	00 97       	sbiw	r24, 0x00	; 0
    6ec8:	69 f0       	breq	.+26     	; 0x6ee4 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x590>
    6eca:	8a 85       	ldd	r24, Y+10	; 0x0a
    6ecc:	9b 85       	ldd	r25, Y+11	; 0x0b
    6ece:	fc 01       	movw	r30, r24
    6ed0:	80 81       	ld	r24, Z
    6ed2:	91 81       	ldd	r25, Z+1	; 0x01
    6ed4:	02 96       	adiw	r24, 0x02	; 2
    6ed6:	fc 01       	movw	r30, r24
    6ed8:	20 81       	ld	r18, Z
    6eda:	31 81       	ldd	r19, Z+1	; 0x01
    6edc:	8a 85       	ldd	r24, Y+10	; 0x0a
    6ede:	9b 85       	ldd	r25, Y+11	; 0x0b
    6ee0:	f9 01       	movw	r30, r18
    6ee2:	19 95       	eicall
		}
	}
	
	//Update instrumentation fields
	switch (status)
    6ee4:	89 81       	ldd	r24, Y+1	; 0x01
    6ee6:	9a 81       	ldd	r25, Y+2	; 0x02
    6ee8:	8e 3f       	cpi	r24, 0xFE	; 254
    6eea:	ff ef       	ldi	r31, 0xFF	; 255
    6eec:	9f 07       	cpc	r25, r31
    6eee:	41 f1       	breq	.+80     	; 0x6f40 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x5ec>
    6ef0:	8f 3f       	cpi	r24, 0xFF	; 255
    6ef2:	2f ef       	ldi	r18, 0xFF	; 255
    6ef4:	92 07       	cpc	r25, r18
    6ef6:	2c f4       	brge	.+10     	; 0x6f02 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x5ae>
    6ef8:	8d 3f       	cpi	r24, 0xFD	; 253
    6efa:	ef ef       	ldi	r30, 0xFF	; 255
    6efc:	9e 07       	cpc	r25, r30
    6efe:	b9 f1       	breq	.+110    	; 0x6f6e <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x61a>
    6f00:	4d c0       	rjmp	.+154    	; 0x6f9c <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x648>
    6f02:	8f 3f       	cpi	r24, 0xFF	; 255
    6f04:	ff ef       	ldi	r31, 0xFF	; 255
    6f06:	9f 07       	cpc	r25, r31
    6f08:	21 f0       	breq	.+8      	; 0x6f12 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x5be>
    6f0a:	00 97       	sbiw	r24, 0x00	; 0
    6f0c:	09 f4       	brne	.+2      	; 0x6f10 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x5bc>
    6f0e:	47 c0       	rjmp	.+142    	; 0x6f9e <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x64a>
    6f10:	45 c0       	rjmp	.+138    	; 0x6f9c <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x648>
	{
		case 0:
			break;
		case -1:
			model->Timeouts(model->Timeouts() + 1);
    6f12:	8c 85       	ldd	r24, Y+12	; 0x0c
    6f14:	9d 85       	ldd	r25, Y+13	; 0x0d
    6f16:	fc 01       	movw	r30, r24
    6f18:	81 85       	ldd	r24, Z+9	; 0x09
    6f1a:	92 85       	ldd	r25, Z+10	; 0x0a
    6f1c:	0e 94 e8 1f 	call	0x3fd0	; 0x3fd0 <_ZNK10helicopter5model11SystemModel8TimeoutsEv>
    6f20:	dc 01       	movw	r26, r24
    6f22:	cb 01       	movw	r24, r22
    6f24:	01 96       	adiw	r24, 0x01	; 1
    6f26:	a1 1d       	adc	r26, r1
    6f28:	b1 1d       	adc	r27, r1
    6f2a:	2c 85       	ldd	r18, Y+12	; 0x0c
    6f2c:	3d 85       	ldd	r19, Y+13	; 0x0d
    6f2e:	f9 01       	movw	r30, r18
    6f30:	21 85       	ldd	r18, Z+9	; 0x09
    6f32:	32 85       	ldd	r19, Z+10	; 0x0a
    6f34:	ac 01       	movw	r20, r24
    6f36:	bd 01       	movw	r22, r26
    6f38:	c9 01       	movw	r24, r18
    6f3a:	0e 94 00 20 	call	0x4000	; 0x4000 <_ZN10helicopter5model11SystemModel8TimeoutsEl>
			break;
    6f3e:	30 c0       	rjmp	.+96     	; 0x6fa0 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x64c>
		case -2:
			model->UnrecognizedMsgTypes(model->UnrecognizedMsgTypes() + 1);
    6f40:	8c 85       	ldd	r24, Y+12	; 0x0c
    6f42:	9d 85       	ldd	r25, Y+13	; 0x0d
    6f44:	fc 01       	movw	r30, r24
    6f46:	81 85       	ldd	r24, Z+9	; 0x09
    6f48:	92 85       	ldd	r25, Z+10	; 0x0a
    6f4a:	0e 94 23 20 	call	0x4046	; 0x4046 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>
    6f4e:	dc 01       	movw	r26, r24
    6f50:	cb 01       	movw	r24, r22
    6f52:	01 96       	adiw	r24, 0x01	; 1
    6f54:	a1 1d       	adc	r26, r1
    6f56:	b1 1d       	adc	r27, r1
    6f58:	2c 85       	ldd	r18, Y+12	; 0x0c
    6f5a:	3d 85       	ldd	r19, Y+13	; 0x0d
    6f5c:	f9 01       	movw	r30, r18
    6f5e:	21 85       	ldd	r18, Z+9	; 0x09
    6f60:	32 85       	ldd	r19, Z+10	; 0x0a
    6f62:	ac 01       	movw	r20, r24
    6f64:	bd 01       	movw	r22, r26
    6f66:	c9 01       	movw	r24, r18
    6f68:	0e 94 3b 20 	call	0x4076	; 0x4076 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl>
			break;
    6f6c:	19 c0       	rjmp	.+50     	; 0x6fa0 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x64c>
		case -3:
			model->ChecksumErrors(model->ChecksumErrors() + 1);
    6f6e:	8c 85       	ldd	r24, Y+12	; 0x0c
    6f70:	9d 85       	ldd	r25, Y+13	; 0x0d
    6f72:	fc 01       	movw	r30, r24
    6f74:	81 85       	ldd	r24, Z+9	; 0x09
    6f76:	92 85       	ldd	r25, Z+10	; 0x0a
    6f78:	0e 94 5e 20 	call	0x40bc	; 0x40bc <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>
    6f7c:	dc 01       	movw	r26, r24
    6f7e:	cb 01       	movw	r24, r22
    6f80:	01 96       	adiw	r24, 0x01	; 1
    6f82:	a1 1d       	adc	r26, r1
    6f84:	b1 1d       	adc	r27, r1
    6f86:	2c 85       	ldd	r18, Y+12	; 0x0c
    6f88:	3d 85       	ldd	r19, Y+13	; 0x0d
    6f8a:	f9 01       	movw	r30, r18
    6f8c:	21 85       	ldd	r18, Z+9	; 0x09
    6f8e:	32 85       	ldd	r19, Z+10	; 0x0a
    6f90:	ac 01       	movw	r20, r24
    6f92:	bd 01       	movw	r22, r26
    6f94:	c9 01       	movw	r24, r18
    6f96:	0e 94 76 20 	call	0x40ec	; 0x40ec <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl>
		default:
			break;
    6f9a:	02 c0       	rjmp	.+4      	; 0x6fa0 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x64c>
    6f9c:	01 c0       	rjmp	.+2      	; 0x6fa0 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x64c>
	
	//Update instrumentation fields
	switch (status)
	{
		case 0:
			break;
    6f9e:	00 00       	nop
		case -3:
			model->ChecksumErrors(model->ChecksumErrors() + 1);
		default:
			break;
		
	}
    6fa0:	ce 01       	movw	r24, r28
    6fa2:	05 96       	adiw	r24, 0x05	; 5
    6fa4:	0e 94 4c 1c 	call	0x3898	; 0x3898 <_ZN10helicopter8messages11SyncMessageD1Ev>
}
    6fa8:	2d 96       	adiw	r28, 0x0d	; 13
    6faa:	0f b6       	in	r0, 0x3f	; 63
    6fac:	f8 94       	cli
    6fae:	de bf       	out	0x3e, r29	; 62
    6fb0:	0f be       	out	0x3f, r0	; 63
    6fb2:	cd bf       	out	0x3d, r28	; 61
    6fb4:	df 91       	pop	r29
    6fb6:	cf 91       	pop	r28
    6fb8:	08 95       	ret

00006fba <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>:
	namespace tasks
	{
		/**
		 * Task to receive simulator telemetry data from the ground control station.
		 */
		class SimTelemetryTask : public Task
    6fba:	cf 93       	push	r28
    6fbc:	df 93       	push	r29
    6fbe:	1f 92       	push	r1
    6fc0:	1f 92       	push	r1
    6fc2:	cd b7       	in	r28, 0x3d	; 61
    6fc4:	de b7       	in	r29, 0x3e	; 62
    6fc6:	9a 83       	std	Y+2, r25	; 0x02
    6fc8:	89 83       	std	Y+1, r24	; 0x01
    6fca:	89 81       	ldd	r24, Y+1	; 0x01
    6fcc:	9a 81       	ldd	r25, Y+2	; 0x02
    6fce:	2e e7       	ldi	r18, 0x7E	; 126
    6fd0:	32 e0       	ldi	r19, 0x02	; 2
    6fd2:	fc 01       	movw	r30, r24
    6fd4:	31 83       	std	Z+1, r19	; 0x01
    6fd6:	20 83       	st	Z, r18
    6fd8:	89 81       	ldd	r24, Y+1	; 0x01
    6fda:	9a 81       	ldd	r25, Y+2	; 0x02
    6fdc:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <_ZN10helicopter5tasks4TaskD1Ev>
    6fe0:	80 e0       	ldi	r24, 0x00	; 0
    6fe2:	90 e0       	ldi	r25, 0x00	; 0
    6fe4:	81 70       	andi	r24, 0x01	; 1
    6fe6:	99 27       	eor	r25, r25
    6fe8:	00 97       	sbiw	r24, 0x00	; 0
    6fea:	21 f0       	breq	.+8      	; 0x6ff4 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev+0x3a>
    6fec:	89 81       	ldd	r24, Y+1	; 0x01
    6fee:	9a 81       	ldd	r25, Y+2	; 0x02
    6ff0:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    6ff4:	0f 90       	pop	r0
    6ff6:	0f 90       	pop	r0
    6ff8:	df 91       	pop	r29
    6ffa:	cf 91       	pop	r28
    6ffc:	08 95       	ret

00006ffe <_ZN10helicopter5tasks16SimTelemetryTaskD0Ev>:
    6ffe:	cf 93       	push	r28
    7000:	df 93       	push	r29
    7002:	1f 92       	push	r1
    7004:	1f 92       	push	r1
    7006:	cd b7       	in	r28, 0x3d	; 61
    7008:	de b7       	in	r29, 0x3e	; 62
    700a:	9a 83       	std	Y+2, r25	; 0x02
    700c:	89 83       	std	Y+1, r24	; 0x01
    700e:	89 81       	ldd	r24, Y+1	; 0x01
    7010:	9a 81       	ldd	r25, Y+2	; 0x02
    7012:	0e 94 dd 37 	call	0x6fba	; 0x6fba <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>
    7016:	89 81       	ldd	r24, Y+1	; 0x01
    7018:	9a 81       	ldd	r25, Y+2	; 0x02
    701a:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    701e:	0f 90       	pop	r0
    7020:	0f 90       	pop	r0
    7022:	df 91       	pop	r29
    7024:	cf 91       	pop	r28
    7026:	08 95       	ret

00007028 <_ZN10helicopter5tasks4Task11runTaskImplEv>:
				
			protected:
				/**
				* Implemented by subclasses for the actual logic to execute
				*/
				virtual void runTaskImpl(){;}
    7028:	cf 93       	push	r28
    702a:	df 93       	push	r29
    702c:	1f 92       	push	r1
    702e:	1f 92       	push	r1
    7030:	cd b7       	in	r28, 0x3d	; 61
    7032:	de b7       	in	r29, 0x3e	; 62
    7034:	9a 83       	std	Y+2, r25	; 0x02
    7036:	89 83       	std	Y+1, r24	; 0x01
    7038:	0f 90       	pop	r0
    703a:	0f 90       	pop	r0
    703c:	df 91       	pop	r29
    703e:	cf 91       	pop	r28
    7040:	08 95       	ret

00007042 <_ZN10helicopter5tasks4TaskC1Eii>:
#include <avr/interrupt.h>
#include "Task.h"

using namespace helicopter::tasks;

Task::Task(int delay, int period)
    7042:	cf 93       	push	r28
    7044:	df 93       	push	r29
    7046:	00 d0       	rcall	.+0      	; 0x7048 <_ZN10helicopter5tasks4TaskC1Eii+0x6>
    7048:	00 d0       	rcall	.+0      	; 0x704a <_ZN10helicopter5tasks4TaskC1Eii+0x8>
    704a:	cd b7       	in	r28, 0x3d	; 61
    704c:	de b7       	in	r29, 0x3e	; 62
    704e:	9a 83       	std	Y+2, r25	; 0x02
    7050:	89 83       	std	Y+1, r24	; 0x01
    7052:	7c 83       	std	Y+4, r23	; 0x04
    7054:	6b 83       	std	Y+3, r22	; 0x03
    7056:	5e 83       	std	Y+6, r21	; 0x06
    7058:	4d 83       	std	Y+5, r20	; 0x05
    705a:	89 81       	ldd	r24, Y+1	; 0x01
    705c:	9a 81       	ldd	r25, Y+2	; 0x02
    705e:	2c e8       	ldi	r18, 0x8C	; 140
    7060:	32 e0       	ldi	r19, 0x02	; 2
    7062:	fc 01       	movw	r30, r24
    7064:	31 83       	std	Z+1, r19	; 0x01
    7066:	20 83       	st	Z, r18
{
	this->delay = delay;
    7068:	89 81       	ldd	r24, Y+1	; 0x01
    706a:	9a 81       	ldd	r25, Y+2	; 0x02
    706c:	2b 81       	ldd	r18, Y+3	; 0x03
    706e:	3c 81       	ldd	r19, Y+4	; 0x04
    7070:	fc 01       	movw	r30, r24
    7072:	33 83       	std	Z+3, r19	; 0x03
    7074:	22 83       	std	Z+2, r18	; 0x02
	this->period = period;
    7076:	89 81       	ldd	r24, Y+1	; 0x01
    7078:	9a 81       	ldd	r25, Y+2	; 0x02
    707a:	2d 81       	ldd	r18, Y+5	; 0x05
    707c:	3e 81       	ldd	r19, Y+6	; 0x06
    707e:	fc 01       	movw	r30, r24
    7080:	35 83       	std	Z+5, r19	; 0x05
    7082:	24 83       	std	Z+4, r18	; 0x04
	this->isReadyToRun = false;
    7084:	89 81       	ldd	r24, Y+1	; 0x01
    7086:	9a 81       	ldd	r25, Y+2	; 0x02
    7088:	fc 01       	movw	r30, r24
    708a:	16 82       	std	Z+6, r1	; 0x06
}
    708c:	26 96       	adiw	r28, 0x06	; 6
    708e:	0f b6       	in	r0, 0x3f	; 63
    7090:	f8 94       	cli
    7092:	de bf       	out	0x3e, r29	; 62
    7094:	0f be       	out	0x3f, r0	; 63
    7096:	cd bf       	out	0x3d, r28	; 61
    7098:	df 91       	pop	r29
    709a:	cf 91       	pop	r28
    709c:	08 95       	ret

0000709e <_ZN10helicopter5tasks4Task7runTaskEv>:

void Task::runTask()
{
    709e:	cf 93       	push	r28
    70a0:	df 93       	push	r29
    70a2:	1f 92       	push	r1
    70a4:	1f 92       	push	r1
    70a6:	cd b7       	in	r28, 0x3d	; 61
    70a8:	de b7       	in	r29, 0x3e	; 62
    70aa:	9a 83       	std	Y+2, r25	; 0x02
    70ac:	89 83       	std	Y+1, r24	; 0x01
	//Disable interrupts 
	cli();
    70ae:	f8 94       	cli
	
	//run task
	this->runTaskImpl();
    70b0:	89 81       	ldd	r24, Y+1	; 0x01
    70b2:	9a 81       	ldd	r25, Y+2	; 0x02
    70b4:	fc 01       	movw	r30, r24
    70b6:	80 81       	ld	r24, Z
    70b8:	91 81       	ldd	r25, Z+1	; 0x01
    70ba:	fc 01       	movw	r30, r24
    70bc:	20 81       	ld	r18, Z
    70be:	31 81       	ldd	r19, Z+1	; 0x01
    70c0:	89 81       	ldd	r24, Y+1	; 0x01
    70c2:	9a 81       	ldd	r25, Y+2	; 0x02
    70c4:	f9 01       	movw	r30, r18
    70c6:	19 95       	eicall
	
	//Re-enable interrupts
	sei();
    70c8:	78 94       	sei
    70ca:	0f 90       	pop	r0
    70cc:	0f 90       	pop	r0
    70ce:	df 91       	pop	r29
    70d0:	cf 91       	pop	r28
    70d2:	08 95       	ret

000070d4 <_ZN10helicopter5tasks21TransmitTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEii>:
#include "TransmitTelemetryTask.h"
#include "SystemTelemetryMessage.h"

using namespace helicopter::tasks;

TransmitTelemetryTask::TransmitTelemetryTask(GroundControlStationInterface *radioInterface, SystemModel *model, int delay, int period) :
    70d4:	0f 93       	push	r16
    70d6:	1f 93       	push	r17
    70d8:	cf 93       	push	r28
    70da:	df 93       	push	r29
    70dc:	cd b7       	in	r28, 0x3d	; 61
    70de:	de b7       	in	r29, 0x3e	; 62
    70e0:	2a 97       	sbiw	r28, 0x0a	; 10
    70e2:	0f b6       	in	r0, 0x3f	; 63
    70e4:	f8 94       	cli
    70e6:	de bf       	out	0x3e, r29	; 62
    70e8:	0f be       	out	0x3f, r0	; 63
    70ea:	cd bf       	out	0x3d, r28	; 61
    70ec:	9a 83       	std	Y+2, r25	; 0x02
    70ee:	89 83       	std	Y+1, r24	; 0x01
    70f0:	7c 83       	std	Y+4, r23	; 0x04
    70f2:	6b 83       	std	Y+3, r22	; 0x03
    70f4:	5e 83       	std	Y+6, r21	; 0x06
    70f6:	4d 83       	std	Y+5, r20	; 0x05
    70f8:	38 87       	std	Y+8, r19	; 0x08
    70fa:	2f 83       	std	Y+7, r18	; 0x07
    70fc:	1a 87       	std	Y+10, r17	; 0x0a
    70fe:	09 87       	std	Y+9, r16	; 0x09
	Task(delay, period),
	radioInterface(radioInterface),
	model(model)
    7100:	89 81       	ldd	r24, Y+1	; 0x01
    7102:	9a 81       	ldd	r25, Y+2	; 0x02
    7104:	49 85       	ldd	r20, Y+9	; 0x09
    7106:	5a 85       	ldd	r21, Y+10	; 0x0a
    7108:	2f 81       	ldd	r18, Y+7	; 0x07
    710a:	38 85       	ldd	r19, Y+8	; 0x08
    710c:	b9 01       	movw	r22, r18
    710e:	0e 94 21 38 	call	0x7042	; 0x7042 <_ZN10helicopter5tasks4TaskC1Eii>
    7112:	89 81       	ldd	r24, Y+1	; 0x01
    7114:	9a 81       	ldd	r25, Y+2	; 0x02
    7116:	2a e9       	ldi	r18, 0x9A	; 154
    7118:	32 e0       	ldi	r19, 0x02	; 2
    711a:	fc 01       	movw	r30, r24
    711c:	31 83       	std	Z+1, r19	; 0x01
    711e:	20 83       	st	Z, r18
    7120:	89 81       	ldd	r24, Y+1	; 0x01
    7122:	9a 81       	ldd	r25, Y+2	; 0x02
    7124:	2b 81       	ldd	r18, Y+3	; 0x03
    7126:	3c 81       	ldd	r19, Y+4	; 0x04
    7128:	fc 01       	movw	r30, r24
    712a:	30 87       	std	Z+8, r19	; 0x08
    712c:	27 83       	std	Z+7, r18	; 0x07
    712e:	89 81       	ldd	r24, Y+1	; 0x01
    7130:	9a 81       	ldd	r25, Y+2	; 0x02
    7132:	2d 81       	ldd	r18, Y+5	; 0x05
    7134:	3e 81       	ldd	r19, Y+6	; 0x06
    7136:	fc 01       	movw	r30, r24
    7138:	32 87       	std	Z+10, r19	; 0x0a
    713a:	21 87       	std	Z+9, r18	; 0x09
{
	
}
    713c:	2a 96       	adiw	r28, 0x0a	; 10
    713e:	0f b6       	in	r0, 0x3f	; 63
    7140:	f8 94       	cli
    7142:	de bf       	out	0x3e, r29	; 62
    7144:	0f be       	out	0x3f, r0	; 63
    7146:	cd bf       	out	0x3d, r28	; 61
    7148:	df 91       	pop	r29
    714a:	cf 91       	pop	r28
    714c:	1f 91       	pop	r17
    714e:	0f 91       	pop	r16
    7150:	08 95       	ret

00007152 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv>:


void TransmitTelemetryTask::runTaskImpl()
{
    7152:	cf 93       	push	r28
    7154:	df 93       	push	r29
    7156:	00 d0       	rcall	.+0      	; 0x7158 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv+0x6>
    7158:	1f 92       	push	r1
    715a:	cd b7       	in	r28, 0x3d	; 61
    715c:	de b7       	in	r29, 0x3e	; 62
    715e:	9c 83       	std	Y+4, r25	; 0x04
    7160:	8b 83       	std	Y+3, r24	; 0x03
	//SystemTelemetryMessage *message = model->CreateTelemetryMessage();
	SystemTelemetryMessage *message = SystemTelemetryMessage::buildMessageFromModel(model);
    7162:	8b 81       	ldd	r24, Y+3	; 0x03
    7164:	9c 81       	ldd	r25, Y+4	; 0x04
    7166:	fc 01       	movw	r30, r24
    7168:	81 85       	ldd	r24, Z+9	; 0x09
    716a:	92 85       	ldd	r25, Z+10	; 0x0a
    716c:	0e 94 20 28 	call	0x5040	; 0x5040 <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE>
    7170:	9a 83       	std	Y+2, r25	; 0x02
    7172:	89 83       	std	Y+1, r24	; 0x01
	
	//TODO add some error handling in here
	radioInterface->transmit(message);
    7174:	8b 81       	ldd	r24, Y+3	; 0x03
    7176:	9c 81       	ldd	r25, Y+4	; 0x04
    7178:	fc 01       	movw	r30, r24
    717a:	87 81       	ldd	r24, Z+7	; 0x07
    717c:	90 85       	ldd	r25, Z+8	; 0x08
    717e:	29 81       	ldd	r18, Y+1	; 0x01
    7180:	3a 81       	ldd	r19, Y+2	; 0x02
    7182:	b9 01       	movw	r22, r18
    7184:	0e 94 57 19 	call	0x32ae	; 0x32ae <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>
	
	delete message;
    7188:	89 81       	ldd	r24, Y+1	; 0x01
    718a:	9a 81       	ldd	r25, Y+2	; 0x02
    718c:	00 97       	sbiw	r24, 0x00	; 0
    718e:	69 f0       	breq	.+26     	; 0x71aa <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv+0x58>
    7190:	89 81       	ldd	r24, Y+1	; 0x01
    7192:	9a 81       	ldd	r25, Y+2	; 0x02
    7194:	fc 01       	movw	r30, r24
    7196:	80 81       	ld	r24, Z
    7198:	91 81       	ldd	r25, Z+1	; 0x01
    719a:	02 96       	adiw	r24, 0x02	; 2
    719c:	fc 01       	movw	r30, r24
    719e:	20 81       	ld	r18, Z
    71a0:	31 81       	ldd	r19, Z+1	; 0x01
    71a2:	89 81       	ldd	r24, Y+1	; 0x01
    71a4:	9a 81       	ldd	r25, Y+2	; 0x02
    71a6:	f9 01       	movw	r30, r18
    71a8:	19 95       	eicall
    71aa:	0f 90       	pop	r0
    71ac:	0f 90       	pop	r0
    71ae:	0f 90       	pop	r0
    71b0:	0f 90       	pop	r0
    71b2:	df 91       	pop	r29
    71b4:	cf 91       	pop	r28
    71b6:	08 95       	ret

000071b8 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class transmits flight computer telemetry information to the ground control station.
		 */
		class TransmitTelemetryTask : public Task
    71b8:	cf 93       	push	r28
    71ba:	df 93       	push	r29
    71bc:	1f 92       	push	r1
    71be:	1f 92       	push	r1
    71c0:	cd b7       	in	r28, 0x3d	; 61
    71c2:	de b7       	in	r29, 0x3e	; 62
    71c4:	9a 83       	std	Y+2, r25	; 0x02
    71c6:	89 83       	std	Y+1, r24	; 0x01
    71c8:	89 81       	ldd	r24, Y+1	; 0x01
    71ca:	9a 81       	ldd	r25, Y+2	; 0x02
    71cc:	2a e9       	ldi	r18, 0x9A	; 154
    71ce:	32 e0       	ldi	r19, 0x02	; 2
    71d0:	fc 01       	movw	r30, r24
    71d2:	31 83       	std	Z+1, r19	; 0x01
    71d4:	20 83       	st	Z, r18
    71d6:	89 81       	ldd	r24, Y+1	; 0x01
    71d8:	9a 81       	ldd	r25, Y+2	; 0x02
    71da:	0e 94 13 0f 	call	0x1e26	; 0x1e26 <_ZN10helicopter5tasks4TaskD1Ev>
    71de:	80 e0       	ldi	r24, 0x00	; 0
    71e0:	90 e0       	ldi	r25, 0x00	; 0
    71e2:	81 70       	andi	r24, 0x01	; 1
    71e4:	99 27       	eor	r25, r25
    71e6:	00 97       	sbiw	r24, 0x00	; 0
    71e8:	21 f0       	breq	.+8      	; 0x71f2 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev+0x3a>
    71ea:	89 81       	ldd	r24, Y+1	; 0x01
    71ec:	9a 81       	ldd	r25, Y+2	; 0x02
    71ee:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    71f2:	0f 90       	pop	r0
    71f4:	0f 90       	pop	r0
    71f6:	df 91       	pop	r29
    71f8:	cf 91       	pop	r28
    71fa:	08 95       	ret

000071fc <_ZN10helicopter5tasks21TransmitTelemetryTaskD0Ev>:
    71fc:	cf 93       	push	r28
    71fe:	df 93       	push	r29
    7200:	1f 92       	push	r1
    7202:	1f 92       	push	r1
    7204:	cd b7       	in	r28, 0x3d	; 61
    7206:	de b7       	in	r29, 0x3e	; 62
    7208:	9a 83       	std	Y+2, r25	; 0x02
    720a:	89 83       	std	Y+1, r24	; 0x01
    720c:	89 81       	ldd	r24, Y+1	; 0x01
    720e:	9a 81       	ldd	r25, Y+2	; 0x02
    7210:	0e 94 dc 38 	call	0x71b8	; 0x71b8 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>
    7214:	89 81       	ldd	r24, Y+1	; 0x01
    7216:	9a 81       	ldd	r25, Y+2	; 0x02
    7218:	0e 94 24 39 	call	0x7248	; 0x7248 <_ZdlPv>
    721c:	0f 90       	pop	r0
    721e:	0f 90       	pop	r0
    7220:	df 91       	pop	r29
    7222:	cf 91       	pop	r28
    7224:	08 95       	ret

00007226 <_Znwj>:
 *  Author: HP User
 */ 
#include <CommonHeader.h>

void * operator new(size_t size)
{
    7226:	cf 93       	push	r28
    7228:	df 93       	push	r29
    722a:	1f 92       	push	r1
    722c:	1f 92       	push	r1
    722e:	cd b7       	in	r28, 0x3d	; 61
    7230:	de b7       	in	r29, 0x3e	; 62
    7232:	9a 83       	std	Y+2, r25	; 0x02
    7234:	89 83       	std	Y+1, r24	; 0x01
	return malloc(size);
    7236:	89 81       	ldd	r24, Y+1	; 0x01
    7238:	9a 81       	ldd	r25, Y+2	; 0x02
    723a:	0e 94 be 43 	call	0x877c	; 0x877c <malloc>
}
    723e:	0f 90       	pop	r0
    7240:	0f 90       	pop	r0
    7242:	df 91       	pop	r29
    7244:	cf 91       	pop	r28
    7246:	08 95       	ret

00007248 <_ZdlPv>:

void operator delete(void * ptr)
{
    7248:	cf 93       	push	r28
    724a:	df 93       	push	r29
    724c:	1f 92       	push	r1
    724e:	1f 92       	push	r1
    7250:	cd b7       	in	r28, 0x3d	; 61
    7252:	de b7       	in	r29, 0x3e	; 62
    7254:	9a 83       	std	Y+2, r25	; 0x02
    7256:	89 83       	std	Y+1, r24	; 0x01
	if (ptr != NULL)
    7258:	89 81       	ldd	r24, Y+1	; 0x01
    725a:	9a 81       	ldd	r25, Y+2	; 0x02
    725c:	00 97       	sbiw	r24, 0x00	; 0
    725e:	21 f0       	breq	.+8      	; 0x7268 <_ZdlPv+0x20>
	{
		free(ptr);
    7260:	89 81       	ldd	r24, Y+1	; 0x01
    7262:	9a 81       	ldd	r25, Y+2	; 0x02
    7264:	0e 94 59 44 	call	0x88b2	; 0x88b2 <free>
	}
}
    7268:	0f 90       	pop	r0
    726a:	0f 90       	pop	r0
    726c:	df 91       	pop	r29
    726e:	cf 91       	pop	r28
    7270:	08 95       	ret

00007272 <_Znaj>:

void * operator new[](size_t size)
{
    7272:	cf 93       	push	r28
    7274:	df 93       	push	r29
    7276:	1f 92       	push	r1
    7278:	1f 92       	push	r1
    727a:	cd b7       	in	r28, 0x3d	; 61
    727c:	de b7       	in	r29, 0x3e	; 62
    727e:	9a 83       	std	Y+2, r25	; 0x02
    7280:	89 83       	std	Y+1, r24	; 0x01
	return malloc(size);
    7282:	89 81       	ldd	r24, Y+1	; 0x01
    7284:	9a 81       	ldd	r25, Y+2	; 0x02
    7286:	0e 94 be 43 	call	0x877c	; 0x877c <malloc>
}
    728a:	0f 90       	pop	r0
    728c:	0f 90       	pop	r0
    728e:	df 91       	pop	r29
    7290:	cf 91       	pop	r28
    7292:	08 95       	ret

00007294 <_ZdaPv>:

void operator delete[](void * ptr)
{
    7294:	cf 93       	push	r28
    7296:	df 93       	push	r29
    7298:	1f 92       	push	r1
    729a:	1f 92       	push	r1
    729c:	cd b7       	in	r28, 0x3d	; 61
    729e:	de b7       	in	r29, 0x3e	; 62
    72a0:	9a 83       	std	Y+2, r25	; 0x02
    72a2:	89 83       	std	Y+1, r24	; 0x01
	if(ptr != NULL)
    72a4:	89 81       	ldd	r24, Y+1	; 0x01
    72a6:	9a 81       	ldd	r25, Y+2	; 0x02
    72a8:	00 97       	sbiw	r24, 0x00	; 0
    72aa:	21 f0       	breq	.+8      	; 0x72b4 <_ZdaPv+0x20>
	{
		free(ptr);
    72ac:	89 81       	ldd	r24, Y+1	; 0x01
    72ae:	9a 81       	ldd	r25, Y+2	; 0x02
    72b0:	0e 94 59 44 	call	0x88b2	; 0x88b2 <free>
	}
	
    72b4:	0f 90       	pop	r0
    72b6:	0f 90       	pop	r0
    72b8:	df 91       	pop	r29
    72ba:	cf 91       	pop	r28
    72bc:	08 95       	ret

000072be <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEd>:


using namespace helicopter::util;

double CoordinateUtil::DegreesToRad(double valueDegrees)
{
    72be:	cf 93       	push	r28
    72c0:	df 93       	push	r29
    72c2:	00 d0       	rcall	.+0      	; 0x72c4 <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEd+0x6>
    72c4:	1f 92       	push	r1
    72c6:	cd b7       	in	r28, 0x3d	; 61
    72c8:	de b7       	in	r29, 0x3e	; 62
    72ca:	69 83       	std	Y+1, r22	; 0x01
    72cc:	7a 83       	std	Y+2, r23	; 0x02
    72ce:	8b 83       	std	Y+3, r24	; 0x03
    72d0:	9c 83       	std	Y+4, r25	; 0x04
	return valueDegrees * (M_PI / 180.0);
    72d2:	25 e3       	ldi	r18, 0x35	; 53
    72d4:	3a ef       	ldi	r19, 0xFA	; 250
    72d6:	4e e8       	ldi	r20, 0x8E	; 142
    72d8:	5c e3       	ldi	r21, 0x3C	; 60
    72da:	69 81       	ldd	r22, Y+1	; 0x01
    72dc:	7a 81       	ldd	r23, Y+2	; 0x02
    72de:	8b 81       	ldd	r24, Y+3	; 0x03
    72e0:	9c 81       	ldd	r25, Y+4	; 0x04
    72e2:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    72e6:	dc 01       	movw	r26, r24
    72e8:	cb 01       	movw	r24, r22
}
    72ea:	bc 01       	movw	r22, r24
    72ec:	cd 01       	movw	r24, r26
    72ee:	0f 90       	pop	r0
    72f0:	0f 90       	pop	r0
    72f2:	0f 90       	pop	r0
    72f4:	0f 90       	pop	r0
    72f6:	df 91       	pop	r29
    72f8:	cf 91       	pop	r28
    72fa:	08 95       	ret

000072fc <_ZN10helicopter4util14CoordinateUtil37CalculateECEFToLocalNEDRotationMatrixEddPA3_d>:

void CoordinateUtil::CalculateECEFToLocalNEDRotationMatrix(double latitudeDegrees, double longitudeDegrees, double  ecefToLocalNEDRotationMatrix[][3])
{
    72fc:	cf 92       	push	r12
    72fe:	df 92       	push	r13
    7300:	ef 92       	push	r14
    7302:	ff 92       	push	r15
    7304:	0f 93       	push	r16
    7306:	1f 93       	push	r17
    7308:	cf 93       	push	r28
    730a:	df 93       	push	r29
    730c:	cd b7       	in	r28, 0x3d	; 61
    730e:	de b7       	in	r29, 0x3e	; 62
    7310:	62 97       	sbiw	r28, 0x12	; 18
    7312:	0f b6       	in	r0, 0x3f	; 63
    7314:	f8 94       	cli
    7316:	de bf       	out	0x3e, r29	; 62
    7318:	0f be       	out	0x3f, r0	; 63
    731a:	cd bf       	out	0x3d, r28	; 61
    731c:	69 87       	std	Y+9, r22	; 0x09
    731e:	7a 87       	std	Y+10, r23	; 0x0a
    7320:	8b 87       	std	Y+11, r24	; 0x0b
    7322:	9c 87       	std	Y+12, r25	; 0x0c
    7324:	2d 87       	std	Y+13, r18	; 0x0d
    7326:	3e 87       	std	Y+14, r19	; 0x0e
    7328:	4f 87       	std	Y+15, r20	; 0x0f
    732a:	58 8b       	std	Y+16, r21	; 0x10
    732c:	1a 8b       	std	Y+18, r17	; 0x12
    732e:	09 8b       	std	Y+17, r16	; 0x11
	double radLat = DegreesToRad(latitudeDegrees);
    7330:	89 85       	ldd	r24, Y+9	; 0x09
    7332:	9a 85       	ldd	r25, Y+10	; 0x0a
    7334:	ab 85       	ldd	r26, Y+11	; 0x0b
    7336:	bc 85       	ldd	r27, Y+12	; 0x0c
    7338:	bc 01       	movw	r22, r24
    733a:	cd 01       	movw	r24, r26
    733c:	0e 94 5f 39 	call	0x72be	; 0x72be <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEd>
    7340:	dc 01       	movw	r26, r24
    7342:	cb 01       	movw	r24, r22
    7344:	89 83       	std	Y+1, r24	; 0x01
    7346:	9a 83       	std	Y+2, r25	; 0x02
    7348:	ab 83       	std	Y+3, r26	; 0x03
    734a:	bc 83       	std	Y+4, r27	; 0x04
	double radLong = DegreesToRad(longitudeDegrees);
    734c:	8d 85       	ldd	r24, Y+13	; 0x0d
    734e:	9e 85       	ldd	r25, Y+14	; 0x0e
    7350:	af 85       	ldd	r26, Y+15	; 0x0f
    7352:	b8 89       	ldd	r27, Y+16	; 0x10
    7354:	bc 01       	movw	r22, r24
    7356:	cd 01       	movw	r24, r26
    7358:	0e 94 5f 39 	call	0x72be	; 0x72be <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEd>
    735c:	dc 01       	movw	r26, r24
    735e:	cb 01       	movw	r24, r22
    7360:	8d 83       	std	Y+5, r24	; 0x05
    7362:	9e 83       	std	Y+6, r25	; 0x06
    7364:	af 83       	std	Y+7, r26	; 0x07
    7366:	b8 87       	std	Y+8, r27	; 0x08

	
	ecefToLocalNEDRotationMatrix[0][0] = -1 * sin(radLat) * cos(radLong);
    7368:	89 81       	ldd	r24, Y+1	; 0x01
    736a:	9a 81       	ldd	r25, Y+2	; 0x02
    736c:	ab 81       	ldd	r26, Y+3	; 0x03
    736e:	bc 81       	ldd	r27, Y+4	; 0x04
    7370:	bc 01       	movw	r22, r24
    7372:	cd 01       	movw	r24, r26
    7374:	0e 94 09 42 	call	0x8412	; 0x8412 <sin>
    7378:	dc 01       	movw	r26, r24
    737a:	cb 01       	movw	r24, r22
    737c:	6c 01       	movw	r12, r24
    737e:	7d 01       	movw	r14, r26
    7380:	f7 fa       	bst	r15, 7
    7382:	f0 94       	com	r15
    7384:	f7 f8       	bld	r15, 7
    7386:	f0 94       	com	r15
    7388:	8d 81       	ldd	r24, Y+5	; 0x05
    738a:	9e 81       	ldd	r25, Y+6	; 0x06
    738c:	af 81       	ldd	r26, Y+7	; 0x07
    738e:	b8 85       	ldd	r27, Y+8	; 0x08
    7390:	bc 01       	movw	r22, r24
    7392:	cd 01       	movw	r24, r26
    7394:	0e 94 7c 3f 	call	0x7ef8	; 0x7ef8 <cos>
    7398:	dc 01       	movw	r26, r24
    739a:	cb 01       	movw	r24, r22
    739c:	9c 01       	movw	r18, r24
    739e:	ad 01       	movw	r20, r26
    73a0:	c7 01       	movw	r24, r14
    73a2:	b6 01       	movw	r22, r12
    73a4:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    73a8:	dc 01       	movw	r26, r24
    73aa:	cb 01       	movw	r24, r22
    73ac:	29 89       	ldd	r18, Y+17	; 0x11
    73ae:	3a 89       	ldd	r19, Y+18	; 0x12
    73b0:	f9 01       	movw	r30, r18
    73b2:	80 83       	st	Z, r24
    73b4:	91 83       	std	Z+1, r25	; 0x01
    73b6:	a2 83       	std	Z+2, r26	; 0x02
    73b8:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[0][1] = -1 * sin(radLat) * sin(radLong);
    73ba:	89 81       	ldd	r24, Y+1	; 0x01
    73bc:	9a 81       	ldd	r25, Y+2	; 0x02
    73be:	ab 81       	ldd	r26, Y+3	; 0x03
    73c0:	bc 81       	ldd	r27, Y+4	; 0x04
    73c2:	bc 01       	movw	r22, r24
    73c4:	cd 01       	movw	r24, r26
    73c6:	0e 94 09 42 	call	0x8412	; 0x8412 <sin>
    73ca:	dc 01       	movw	r26, r24
    73cc:	cb 01       	movw	r24, r22
    73ce:	6c 01       	movw	r12, r24
    73d0:	7d 01       	movw	r14, r26
    73d2:	f7 fa       	bst	r15, 7
    73d4:	f0 94       	com	r15
    73d6:	f7 f8       	bld	r15, 7
    73d8:	f0 94       	com	r15
    73da:	8d 81       	ldd	r24, Y+5	; 0x05
    73dc:	9e 81       	ldd	r25, Y+6	; 0x06
    73de:	af 81       	ldd	r26, Y+7	; 0x07
    73e0:	b8 85       	ldd	r27, Y+8	; 0x08
    73e2:	bc 01       	movw	r22, r24
    73e4:	cd 01       	movw	r24, r26
    73e6:	0e 94 09 42 	call	0x8412	; 0x8412 <sin>
    73ea:	dc 01       	movw	r26, r24
    73ec:	cb 01       	movw	r24, r22
    73ee:	9c 01       	movw	r18, r24
    73f0:	ad 01       	movw	r20, r26
    73f2:	c7 01       	movw	r24, r14
    73f4:	b6 01       	movw	r22, r12
    73f6:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    73fa:	dc 01       	movw	r26, r24
    73fc:	cb 01       	movw	r24, r22
    73fe:	29 89       	ldd	r18, Y+17	; 0x11
    7400:	3a 89       	ldd	r19, Y+18	; 0x12
    7402:	f9 01       	movw	r30, r18
    7404:	84 83       	std	Z+4, r24	; 0x04
    7406:	95 83       	std	Z+5, r25	; 0x05
    7408:	a6 83       	std	Z+6, r26	; 0x06
    740a:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[0][2] = cos(radLat);
    740c:	89 81       	ldd	r24, Y+1	; 0x01
    740e:	9a 81       	ldd	r25, Y+2	; 0x02
    7410:	ab 81       	ldd	r26, Y+3	; 0x03
    7412:	bc 81       	ldd	r27, Y+4	; 0x04
    7414:	bc 01       	movw	r22, r24
    7416:	cd 01       	movw	r24, r26
    7418:	0e 94 7c 3f 	call	0x7ef8	; 0x7ef8 <cos>
    741c:	dc 01       	movw	r26, r24
    741e:	cb 01       	movw	r24, r22
    7420:	29 89       	ldd	r18, Y+17	; 0x11
    7422:	3a 89       	ldd	r19, Y+18	; 0x12
    7424:	f9 01       	movw	r30, r18
    7426:	80 87       	std	Z+8, r24	; 0x08
    7428:	91 87       	std	Z+9, r25	; 0x09
    742a:	a2 87       	std	Z+10, r26	; 0x0a
    742c:	b3 87       	std	Z+11, r27	; 0x0b
	ecefToLocalNEDRotationMatrix[1][0] = -1 * sin (radLong);
    742e:	89 89       	ldd	r24, Y+17	; 0x11
    7430:	9a 89       	ldd	r25, Y+18	; 0x12
    7432:	8c 01       	movw	r16, r24
    7434:	04 5f       	subi	r16, 0xF4	; 244
    7436:	1f 4f       	sbci	r17, 0xFF	; 255
    7438:	8d 81       	ldd	r24, Y+5	; 0x05
    743a:	9e 81       	ldd	r25, Y+6	; 0x06
    743c:	af 81       	ldd	r26, Y+7	; 0x07
    743e:	b8 85       	ldd	r27, Y+8	; 0x08
    7440:	bc 01       	movw	r22, r24
    7442:	cd 01       	movw	r24, r26
    7444:	0e 94 09 42 	call	0x8412	; 0x8412 <sin>
    7448:	dc 01       	movw	r26, r24
    744a:	cb 01       	movw	r24, r22
    744c:	b0 58       	subi	r27, 0x80	; 128
    744e:	f8 01       	movw	r30, r16
    7450:	80 83       	st	Z, r24
    7452:	91 83       	std	Z+1, r25	; 0x01
    7454:	a2 83       	std	Z+2, r26	; 0x02
    7456:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[1][1] = cos(radLong);
    7458:	89 89       	ldd	r24, Y+17	; 0x11
    745a:	9a 89       	ldd	r25, Y+18	; 0x12
    745c:	8c 01       	movw	r16, r24
    745e:	04 5f       	subi	r16, 0xF4	; 244
    7460:	1f 4f       	sbci	r17, 0xFF	; 255
    7462:	8d 81       	ldd	r24, Y+5	; 0x05
    7464:	9e 81       	ldd	r25, Y+6	; 0x06
    7466:	af 81       	ldd	r26, Y+7	; 0x07
    7468:	b8 85       	ldd	r27, Y+8	; 0x08
    746a:	bc 01       	movw	r22, r24
    746c:	cd 01       	movw	r24, r26
    746e:	0e 94 7c 3f 	call	0x7ef8	; 0x7ef8 <cos>
    7472:	dc 01       	movw	r26, r24
    7474:	cb 01       	movw	r24, r22
    7476:	f8 01       	movw	r30, r16
    7478:	84 83       	std	Z+4, r24	; 0x04
    747a:	95 83       	std	Z+5, r25	; 0x05
    747c:	a6 83       	std	Z+6, r26	; 0x06
    747e:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[1][2] = 0;
    7480:	89 89       	ldd	r24, Y+17	; 0x11
    7482:	9a 89       	ldd	r25, Y+18	; 0x12
    7484:	0c 96       	adiw	r24, 0x0c	; 12
    7486:	fc 01       	movw	r30, r24
    7488:	10 86       	std	Z+8, r1	; 0x08
    748a:	11 86       	std	Z+9, r1	; 0x09
    748c:	12 86       	std	Z+10, r1	; 0x0a
    748e:	13 86       	std	Z+11, r1	; 0x0b
	ecefToLocalNEDRotationMatrix[2][0] = -1 * cos(radLat) * cos(radLong);
    7490:	89 89       	ldd	r24, Y+17	; 0x11
    7492:	9a 89       	ldd	r25, Y+18	; 0x12
    7494:	8c 01       	movw	r16, r24
    7496:	08 5e       	subi	r16, 0xE8	; 232
    7498:	1f 4f       	sbci	r17, 0xFF	; 255
    749a:	89 81       	ldd	r24, Y+1	; 0x01
    749c:	9a 81       	ldd	r25, Y+2	; 0x02
    749e:	ab 81       	ldd	r26, Y+3	; 0x03
    74a0:	bc 81       	ldd	r27, Y+4	; 0x04
    74a2:	bc 01       	movw	r22, r24
    74a4:	cd 01       	movw	r24, r26
    74a6:	0e 94 7c 3f 	call	0x7ef8	; 0x7ef8 <cos>
    74aa:	dc 01       	movw	r26, r24
    74ac:	cb 01       	movw	r24, r22
    74ae:	6c 01       	movw	r12, r24
    74b0:	7d 01       	movw	r14, r26
    74b2:	f7 fa       	bst	r15, 7
    74b4:	f0 94       	com	r15
    74b6:	f7 f8       	bld	r15, 7
    74b8:	f0 94       	com	r15
    74ba:	8d 81       	ldd	r24, Y+5	; 0x05
    74bc:	9e 81       	ldd	r25, Y+6	; 0x06
    74be:	af 81       	ldd	r26, Y+7	; 0x07
    74c0:	b8 85       	ldd	r27, Y+8	; 0x08
    74c2:	bc 01       	movw	r22, r24
    74c4:	cd 01       	movw	r24, r26
    74c6:	0e 94 7c 3f 	call	0x7ef8	; 0x7ef8 <cos>
    74ca:	dc 01       	movw	r26, r24
    74cc:	cb 01       	movw	r24, r22
    74ce:	9c 01       	movw	r18, r24
    74d0:	ad 01       	movw	r20, r26
    74d2:	c7 01       	movw	r24, r14
    74d4:	b6 01       	movw	r22, r12
    74d6:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    74da:	dc 01       	movw	r26, r24
    74dc:	cb 01       	movw	r24, r22
    74de:	f8 01       	movw	r30, r16
    74e0:	80 83       	st	Z, r24
    74e2:	91 83       	std	Z+1, r25	; 0x01
    74e4:	a2 83       	std	Z+2, r26	; 0x02
    74e6:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[2][1] = -1 * cos(radLat)*sin(radLong);
    74e8:	89 89       	ldd	r24, Y+17	; 0x11
    74ea:	9a 89       	ldd	r25, Y+18	; 0x12
    74ec:	8c 01       	movw	r16, r24
    74ee:	08 5e       	subi	r16, 0xE8	; 232
    74f0:	1f 4f       	sbci	r17, 0xFF	; 255
    74f2:	89 81       	ldd	r24, Y+1	; 0x01
    74f4:	9a 81       	ldd	r25, Y+2	; 0x02
    74f6:	ab 81       	ldd	r26, Y+3	; 0x03
    74f8:	bc 81       	ldd	r27, Y+4	; 0x04
    74fa:	bc 01       	movw	r22, r24
    74fc:	cd 01       	movw	r24, r26
    74fe:	0e 94 7c 3f 	call	0x7ef8	; 0x7ef8 <cos>
    7502:	dc 01       	movw	r26, r24
    7504:	cb 01       	movw	r24, r22
    7506:	6c 01       	movw	r12, r24
    7508:	7d 01       	movw	r14, r26
    750a:	f7 fa       	bst	r15, 7
    750c:	f0 94       	com	r15
    750e:	f7 f8       	bld	r15, 7
    7510:	f0 94       	com	r15
    7512:	8d 81       	ldd	r24, Y+5	; 0x05
    7514:	9e 81       	ldd	r25, Y+6	; 0x06
    7516:	af 81       	ldd	r26, Y+7	; 0x07
    7518:	b8 85       	ldd	r27, Y+8	; 0x08
    751a:	bc 01       	movw	r22, r24
    751c:	cd 01       	movw	r24, r26
    751e:	0e 94 09 42 	call	0x8412	; 0x8412 <sin>
    7522:	dc 01       	movw	r26, r24
    7524:	cb 01       	movw	r24, r22
    7526:	9c 01       	movw	r18, r24
    7528:	ad 01       	movw	r20, r26
    752a:	c7 01       	movw	r24, r14
    752c:	b6 01       	movw	r22, r12
    752e:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    7532:	dc 01       	movw	r26, r24
    7534:	cb 01       	movw	r24, r22
    7536:	f8 01       	movw	r30, r16
    7538:	84 83       	std	Z+4, r24	; 0x04
    753a:	95 83       	std	Z+5, r25	; 0x05
    753c:	a6 83       	std	Z+6, r26	; 0x06
    753e:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[2][2] = -1 * sin(radLat);
    7540:	89 89       	ldd	r24, Y+17	; 0x11
    7542:	9a 89       	ldd	r25, Y+18	; 0x12
    7544:	8c 01       	movw	r16, r24
    7546:	08 5e       	subi	r16, 0xE8	; 232
    7548:	1f 4f       	sbci	r17, 0xFF	; 255
    754a:	89 81       	ldd	r24, Y+1	; 0x01
    754c:	9a 81       	ldd	r25, Y+2	; 0x02
    754e:	ab 81       	ldd	r26, Y+3	; 0x03
    7550:	bc 81       	ldd	r27, Y+4	; 0x04
    7552:	bc 01       	movw	r22, r24
    7554:	cd 01       	movw	r24, r26
    7556:	0e 94 09 42 	call	0x8412	; 0x8412 <sin>
    755a:	dc 01       	movw	r26, r24
    755c:	cb 01       	movw	r24, r22
    755e:	b0 58       	subi	r27, 0x80	; 128
    7560:	f8 01       	movw	r30, r16
    7562:	80 87       	std	Z+8, r24	; 0x08
    7564:	91 87       	std	Z+9, r25	; 0x09
    7566:	a2 87       	std	Z+10, r26	; 0x0a
    7568:	b3 87       	std	Z+11, r27	; 0x0b
}
    756a:	62 96       	adiw	r28, 0x12	; 18
    756c:	0f b6       	in	r0, 0x3f	; 63
    756e:	f8 94       	cli
    7570:	de bf       	out	0x3e, r29	; 62
    7572:	0f be       	out	0x3f, r0	; 63
    7574:	cd bf       	out	0x3d, r28	; 61
    7576:	df 91       	pop	r29
    7578:	cf 91       	pop	r28
    757a:	1f 91       	pop	r17
    757c:	0f 91       	pop	r16
    757e:	ff 90       	pop	r15
    7580:	ef 90       	pop	r14
    7582:	df 90       	pop	r13
    7584:	cf 90       	pop	r12
    7586:	08 95       	ret

00007588 <_ZN10helicopter4util14CoordinateUtil11calculateNeEdd>:

double CoordinateUtil::calculateNe(double E, double latitudeRads)
{
    7588:	cf 92       	push	r12
    758a:	df 92       	push	r13
    758c:	ef 92       	push	r14
    758e:	ff 92       	push	r15
    7590:	cf 93       	push	r28
    7592:	df 93       	push	r29
    7594:	cd b7       	in	r28, 0x3d	; 61
    7596:	de b7       	in	r29, 0x3e	; 62
    7598:	28 97       	sbiw	r28, 0x08	; 8
    759a:	0f b6       	in	r0, 0x3f	; 63
    759c:	f8 94       	cli
    759e:	de bf       	out	0x3e, r29	; 62
    75a0:	0f be       	out	0x3f, r0	; 63
    75a2:	cd bf       	out	0x3d, r28	; 61
    75a4:	69 83       	std	Y+1, r22	; 0x01
    75a6:	7a 83       	std	Y+2, r23	; 0x02
    75a8:	8b 83       	std	Y+3, r24	; 0x03
    75aa:	9c 83       	std	Y+4, r25	; 0x04
    75ac:	2d 83       	std	Y+5, r18	; 0x05
    75ae:	3e 83       	std	Y+6, r19	; 0x06
    75b0:	4f 83       	std	Y+7, r20	; 0x07
    75b2:	58 87       	std	Y+8, r21	; 0x08
	return Rea / sqrt(1 - pow(E, 2) * pow(sin(latitudeRads), 2));
    75b4:	89 81       	ldd	r24, Y+1	; 0x01
    75b6:	9a 81       	ldd	r25, Y+2	; 0x02
    75b8:	ab 81       	ldd	r26, Y+3	; 0x03
    75ba:	bc 81       	ldd	r27, Y+4	; 0x04
    75bc:	20 e0       	ldi	r18, 0x00	; 0
    75be:	30 e0       	ldi	r19, 0x00	; 0
    75c0:	40 e0       	ldi	r20, 0x00	; 0
    75c2:	50 e4       	ldi	r21, 0x40	; 64
    75c4:	bc 01       	movw	r22, r24
    75c6:	cd 01       	movw	r24, r26
    75c8:	0e 94 bd 41 	call	0x837a	; 0x837a <pow>
    75cc:	6b 01       	movw	r12, r22
    75ce:	7c 01       	movw	r14, r24
    75d0:	8d 81       	ldd	r24, Y+5	; 0x05
    75d2:	9e 81       	ldd	r25, Y+6	; 0x06
    75d4:	af 81       	ldd	r26, Y+7	; 0x07
    75d6:	b8 85       	ldd	r27, Y+8	; 0x08
    75d8:	bc 01       	movw	r22, r24
    75da:	cd 01       	movw	r24, r26
    75dc:	0e 94 09 42 	call	0x8412	; 0x8412 <sin>
    75e0:	dc 01       	movw	r26, r24
    75e2:	cb 01       	movw	r24, r22
    75e4:	20 e0       	ldi	r18, 0x00	; 0
    75e6:	30 e0       	ldi	r19, 0x00	; 0
    75e8:	40 e0       	ldi	r20, 0x00	; 0
    75ea:	50 e4       	ldi	r21, 0x40	; 64
    75ec:	bc 01       	movw	r22, r24
    75ee:	cd 01       	movw	r24, r26
    75f0:	0e 94 bd 41 	call	0x837a	; 0x837a <pow>
    75f4:	dc 01       	movw	r26, r24
    75f6:	cb 01       	movw	r24, r22
    75f8:	9c 01       	movw	r18, r24
    75fa:	ad 01       	movw	r20, r26
    75fc:	c7 01       	movw	r24, r14
    75fe:	b6 01       	movw	r22, r12
    7600:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    7604:	dc 01       	movw	r26, r24
    7606:	cb 01       	movw	r24, r22
    7608:	9c 01       	movw	r18, r24
    760a:	ad 01       	movw	r20, r26
    760c:	60 e0       	ldi	r22, 0x00	; 0
    760e:	70 e0       	ldi	r23, 0x00	; 0
    7610:	80 e8       	ldi	r24, 0x80	; 128
    7612:	9f e3       	ldi	r25, 0x3F	; 63
    7614:	0e 94 13 3f 	call	0x7e26	; 0x7e26 <__subsf3>
    7618:	dc 01       	movw	r26, r24
    761a:	cb 01       	movw	r24, r22
    761c:	bc 01       	movw	r22, r24
    761e:	cd 01       	movw	r24, r26
    7620:	0e 94 13 42 	call	0x8426	; 0x8426 <sqrt>
    7624:	dc 01       	movw	r26, r24
    7626:	cb 01       	movw	r24, r22
    7628:	9c 01       	movw	r18, r24
    762a:	ad 01       	movw	r20, r26
    762c:	62 e3       	ldi	r22, 0x32	; 50
    762e:	75 ea       	ldi	r23, 0xA5	; 165
    7630:	82 ec       	ldi	r24, 0xC2	; 194
    7632:	9a e4       	ldi	r25, 0x4A	; 74
    7634:	0e 94 7f 3f 	call	0x7efe	; 0x7efe <__divsf3>
    7638:	dc 01       	movw	r26, r24
    763a:	cb 01       	movw	r24, r22
}
    763c:	bc 01       	movw	r22, r24
    763e:	cd 01       	movw	r24, r26
    7640:	28 96       	adiw	r28, 0x08	; 8
    7642:	0f b6       	in	r0, 0x3f	; 63
    7644:	f8 94       	cli
    7646:	de bf       	out	0x3e, r29	; 62
    7648:	0f be       	out	0x3f, r0	; 63
    764a:	cd bf       	out	0x3d, r28	; 61
    764c:	df 91       	pop	r29
    764e:	cf 91       	pop	r28
    7650:	ff 90       	pop	r15
    7652:	ef 90       	pop	r14
    7654:	df 90       	pop	r13
    7656:	cf 90       	pop	r12
    7658:	08 95       	ret

0000765a <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEdddRdS2_S2_>:
/**
 * A description of the variables used to convert lat/long to ecef can be found on page 25 of 
 * Unmanned Rotor Craft Systems
 */
void CoordinateUtil::ConvertFromGeodeticToECEF(double latitudeDegrees, double longitudeDegrees, double altitudeFeetAgl, double &ecefX, double &ecefY, double &ecefZ)
{
    765a:	8f 92       	push	r8
    765c:	9f 92       	push	r9
    765e:	af 92       	push	r10
    7660:	bf 92       	push	r11
    7662:	cf 92       	push	r12
    7664:	df 92       	push	r13
    7666:	ef 92       	push	r14
    7668:	ff 92       	push	r15
    766a:	0f 93       	push	r16
    766c:	1f 93       	push	r17
    766e:	cf 93       	push	r28
    7670:	df 93       	push	r29
    7672:	cd b7       	in	r28, 0x3d	; 61
    7674:	de b7       	in	r29, 0x3e	; 62
    7676:	6e 97       	sbiw	r28, 0x1e	; 30
    7678:	0f b6       	in	r0, 0x3f	; 63
    767a:	f8 94       	cli
    767c:	de bf       	out	0x3e, r29	; 62
    767e:	0f be       	out	0x3f, r0	; 63
    7680:	cd bf       	out	0x3d, r28	; 61
    7682:	6d 87       	std	Y+13, r22	; 0x0d
    7684:	7e 87       	std	Y+14, r23	; 0x0e
    7686:	8f 87       	std	Y+15, r24	; 0x0f
    7688:	98 8b       	std	Y+16, r25	; 0x10
    768a:	29 8b       	std	Y+17, r18	; 0x11
    768c:	3a 8b       	std	Y+18, r19	; 0x12
    768e:	4b 8b       	std	Y+19, r20	; 0x13
    7690:	5c 8b       	std	Y+20, r21	; 0x14
    7692:	ed 8a       	std	Y+21, r14	; 0x15
    7694:	fe 8a       	std	Y+22, r15	; 0x16
    7696:	0f 8b       	std	Y+23, r16	; 0x17
    7698:	18 8f       	std	Y+24, r17	; 0x18
    769a:	da 8e       	std	Y+26, r13	; 0x1a
    769c:	c9 8e       	std	Y+25, r12	; 0x19
    769e:	bc 8e       	std	Y+28, r11	; 0x1c
    76a0:	ab 8e       	std	Y+27, r10	; 0x1b
    76a2:	9e 8e       	std	Y+30, r9	; 0x1e
    76a4:	8d 8e       	std	Y+29, r8	; 0x1d
	double radLat = DegreesToRad(latitudeDegrees);
    76a6:	8d 85       	ldd	r24, Y+13	; 0x0d
    76a8:	9e 85       	ldd	r25, Y+14	; 0x0e
    76aa:	af 85       	ldd	r26, Y+15	; 0x0f
    76ac:	b8 89       	ldd	r27, Y+16	; 0x10
    76ae:	bc 01       	movw	r22, r24
    76b0:	cd 01       	movw	r24, r26
    76b2:	0e 94 5f 39 	call	0x72be	; 0x72be <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEd>
    76b6:	dc 01       	movw	r26, r24
    76b8:	cb 01       	movw	r24, r22
    76ba:	89 83       	std	Y+1, r24	; 0x01
    76bc:	9a 83       	std	Y+2, r25	; 0x02
    76be:	ab 83       	std	Y+3, r26	; 0x03
    76c0:	bc 83       	std	Y+4, r27	; 0x04
	double radLong = DegreesToRad(longitudeDegrees);
    76c2:	89 89       	ldd	r24, Y+17	; 0x11
    76c4:	9a 89       	ldd	r25, Y+18	; 0x12
    76c6:	ab 89       	ldd	r26, Y+19	; 0x13
    76c8:	bc 89       	ldd	r27, Y+20	; 0x14
    76ca:	bc 01       	movw	r22, r24
    76cc:	cd 01       	movw	r24, r26
    76ce:	0e 94 5f 39 	call	0x72be	; 0x72be <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEd>
    76d2:	dc 01       	movw	r26, r24
    76d4:	cb 01       	movw	r24, r22
    76d6:	8d 83       	std	Y+5, r24	; 0x05
    76d8:	9e 83       	std	Y+6, r25	; 0x06
    76da:	af 83       	std	Y+7, r26	; 0x07
    76dc:	b8 87       	std	Y+8, r27	; 0x08
	

	double Ne = calculateNe(E, radLat);
    76de:	89 81       	ldd	r24, Y+1	; 0x01
    76e0:	9a 81       	ldd	r25, Y+2	; 0x02
    76e2:	ab 81       	ldd	r26, Y+3	; 0x03
    76e4:	bc 81       	ldd	r27, Y+4	; 0x04
    76e6:	9c 01       	movw	r18, r24
    76e8:	ad 01       	movw	r20, r26
    76ea:	62 ed       	ldi	r22, 0xD2	; 210
    76ec:	70 e9       	ldi	r23, 0x90	; 144
    76ee:	87 ea       	ldi	r24, 0xA7	; 167
    76f0:	9d e3       	ldi	r25, 0x3D	; 61
    76f2:	0e 94 c4 3a 	call	0x7588	; 0x7588 <_ZN10helicopter4util14CoordinateUtil11calculateNeEdd>
    76f6:	dc 01       	movw	r26, r24
    76f8:	cb 01       	movw	r24, r22
    76fa:	89 87       	std	Y+9, r24	; 0x09
    76fc:	9a 87       	std	Y+10, r25	; 0x0a
    76fe:	ab 87       	std	Y+11, r26	; 0x0b
    7700:	bc 87       	std	Y+12, r27	; 0x0c
	
	ecefX = (Ne + altitudeFeetAgl) * cos(radLat) * cos(radLong);
    7702:	2d 89       	ldd	r18, Y+21	; 0x15
    7704:	3e 89       	ldd	r19, Y+22	; 0x16
    7706:	4f 89       	ldd	r20, Y+23	; 0x17
    7708:	58 8d       	ldd	r21, Y+24	; 0x18
    770a:	69 85       	ldd	r22, Y+9	; 0x09
    770c:	7a 85       	ldd	r23, Y+10	; 0x0a
    770e:	8b 85       	ldd	r24, Y+11	; 0x0b
    7710:	9c 85       	ldd	r25, Y+12	; 0x0c
    7712:	0e 94 14 3f 	call	0x7e28	; 0x7e28 <__addsf3>
    7716:	dc 01       	movw	r26, r24
    7718:	cb 01       	movw	r24, r22
    771a:	6c 01       	movw	r12, r24
    771c:	7d 01       	movw	r14, r26
    771e:	89 81       	ldd	r24, Y+1	; 0x01
    7720:	9a 81       	ldd	r25, Y+2	; 0x02
    7722:	ab 81       	ldd	r26, Y+3	; 0x03
    7724:	bc 81       	ldd	r27, Y+4	; 0x04
    7726:	bc 01       	movw	r22, r24
    7728:	cd 01       	movw	r24, r26
    772a:	0e 94 7c 3f 	call	0x7ef8	; 0x7ef8 <cos>
    772e:	dc 01       	movw	r26, r24
    7730:	cb 01       	movw	r24, r22
    7732:	9c 01       	movw	r18, r24
    7734:	ad 01       	movw	r20, r26
    7736:	c7 01       	movw	r24, r14
    7738:	b6 01       	movw	r22, r12
    773a:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    773e:	dc 01       	movw	r26, r24
    7740:	cb 01       	movw	r24, r22
    7742:	6c 01       	movw	r12, r24
    7744:	7d 01       	movw	r14, r26
    7746:	8d 81       	ldd	r24, Y+5	; 0x05
    7748:	9e 81       	ldd	r25, Y+6	; 0x06
    774a:	af 81       	ldd	r26, Y+7	; 0x07
    774c:	b8 85       	ldd	r27, Y+8	; 0x08
    774e:	bc 01       	movw	r22, r24
    7750:	cd 01       	movw	r24, r26
    7752:	0e 94 7c 3f 	call	0x7ef8	; 0x7ef8 <cos>
    7756:	dc 01       	movw	r26, r24
    7758:	cb 01       	movw	r24, r22
    775a:	9c 01       	movw	r18, r24
    775c:	ad 01       	movw	r20, r26
    775e:	c7 01       	movw	r24, r14
    7760:	b6 01       	movw	r22, r12
    7762:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    7766:	dc 01       	movw	r26, r24
    7768:	cb 01       	movw	r24, r22
    776a:	29 8d       	ldd	r18, Y+25	; 0x19
    776c:	3a 8d       	ldd	r19, Y+26	; 0x1a
    776e:	f9 01       	movw	r30, r18
    7770:	80 83       	st	Z, r24
    7772:	91 83       	std	Z+1, r25	; 0x01
    7774:	a2 83       	std	Z+2, r26	; 0x02
    7776:	b3 83       	std	Z+3, r27	; 0x03
	ecefY = (Ne + altitudeFeetAgl) * cos(radLat) * sin(radLong);
    7778:	2d 89       	ldd	r18, Y+21	; 0x15
    777a:	3e 89       	ldd	r19, Y+22	; 0x16
    777c:	4f 89       	ldd	r20, Y+23	; 0x17
    777e:	58 8d       	ldd	r21, Y+24	; 0x18
    7780:	69 85       	ldd	r22, Y+9	; 0x09
    7782:	7a 85       	ldd	r23, Y+10	; 0x0a
    7784:	8b 85       	ldd	r24, Y+11	; 0x0b
    7786:	9c 85       	ldd	r25, Y+12	; 0x0c
    7788:	0e 94 14 3f 	call	0x7e28	; 0x7e28 <__addsf3>
    778c:	dc 01       	movw	r26, r24
    778e:	cb 01       	movw	r24, r22
    7790:	6c 01       	movw	r12, r24
    7792:	7d 01       	movw	r14, r26
    7794:	89 81       	ldd	r24, Y+1	; 0x01
    7796:	9a 81       	ldd	r25, Y+2	; 0x02
    7798:	ab 81       	ldd	r26, Y+3	; 0x03
    779a:	bc 81       	ldd	r27, Y+4	; 0x04
    779c:	bc 01       	movw	r22, r24
    779e:	cd 01       	movw	r24, r26
    77a0:	0e 94 7c 3f 	call	0x7ef8	; 0x7ef8 <cos>
    77a4:	dc 01       	movw	r26, r24
    77a6:	cb 01       	movw	r24, r22
    77a8:	9c 01       	movw	r18, r24
    77aa:	ad 01       	movw	r20, r26
    77ac:	c7 01       	movw	r24, r14
    77ae:	b6 01       	movw	r22, r12
    77b0:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    77b4:	dc 01       	movw	r26, r24
    77b6:	cb 01       	movw	r24, r22
    77b8:	6c 01       	movw	r12, r24
    77ba:	7d 01       	movw	r14, r26
    77bc:	8d 81       	ldd	r24, Y+5	; 0x05
    77be:	9e 81       	ldd	r25, Y+6	; 0x06
    77c0:	af 81       	ldd	r26, Y+7	; 0x07
    77c2:	b8 85       	ldd	r27, Y+8	; 0x08
    77c4:	bc 01       	movw	r22, r24
    77c6:	cd 01       	movw	r24, r26
    77c8:	0e 94 09 42 	call	0x8412	; 0x8412 <sin>
    77cc:	dc 01       	movw	r26, r24
    77ce:	cb 01       	movw	r24, r22
    77d0:	9c 01       	movw	r18, r24
    77d2:	ad 01       	movw	r20, r26
    77d4:	c7 01       	movw	r24, r14
    77d6:	b6 01       	movw	r22, r12
    77d8:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    77dc:	dc 01       	movw	r26, r24
    77de:	cb 01       	movw	r24, r22
    77e0:	2b 8d       	ldd	r18, Y+27	; 0x1b
    77e2:	3c 8d       	ldd	r19, Y+28	; 0x1c
    77e4:	f9 01       	movw	r30, r18
    77e6:	80 83       	st	Z, r24
    77e8:	91 83       	std	Z+1, r25	; 0x01
    77ea:	a2 83       	std	Z+2, r26	; 0x02
    77ec:	b3 83       	std	Z+3, r27	; 0x03
	ecefZ = ((Ne * (1 - pow(E, 2))) + altitudeFeetAgl) * sin(radLat);
    77ee:	27 e4       	ldi	r18, 0x47	; 71
    77f0:	39 e4       	ldi	r19, 0x49	; 73
    77f2:	4e e7       	ldi	r20, 0x7E	; 126
    77f4:	5f e3       	ldi	r21, 0x3F	; 63
    77f6:	69 85       	ldd	r22, Y+9	; 0x09
    77f8:	7a 85       	ldd	r23, Y+10	; 0x0a
    77fa:	8b 85       	ldd	r24, Y+11	; 0x0b
    77fc:	9c 85       	ldd	r25, Y+12	; 0x0c
    77fe:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    7802:	dc 01       	movw	r26, r24
    7804:	cb 01       	movw	r24, r22
    7806:	2d 89       	ldd	r18, Y+21	; 0x15
    7808:	3e 89       	ldd	r19, Y+22	; 0x16
    780a:	4f 89       	ldd	r20, Y+23	; 0x17
    780c:	58 8d       	ldd	r21, Y+24	; 0x18
    780e:	bc 01       	movw	r22, r24
    7810:	cd 01       	movw	r24, r26
    7812:	0e 94 14 3f 	call	0x7e28	; 0x7e28 <__addsf3>
    7816:	dc 01       	movw	r26, r24
    7818:	cb 01       	movw	r24, r22
    781a:	6c 01       	movw	r12, r24
    781c:	7d 01       	movw	r14, r26
    781e:	89 81       	ldd	r24, Y+1	; 0x01
    7820:	9a 81       	ldd	r25, Y+2	; 0x02
    7822:	ab 81       	ldd	r26, Y+3	; 0x03
    7824:	bc 81       	ldd	r27, Y+4	; 0x04
    7826:	bc 01       	movw	r22, r24
    7828:	cd 01       	movw	r24, r26
    782a:	0e 94 09 42 	call	0x8412	; 0x8412 <sin>
    782e:	dc 01       	movw	r26, r24
    7830:	cb 01       	movw	r24, r22
    7832:	9c 01       	movw	r18, r24
    7834:	ad 01       	movw	r20, r26
    7836:	c7 01       	movw	r24, r14
    7838:	b6 01       	movw	r22, r12
    783a:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    783e:	dc 01       	movw	r26, r24
    7840:	cb 01       	movw	r24, r22
    7842:	2d 8d       	ldd	r18, Y+29	; 0x1d
    7844:	3e 8d       	ldd	r19, Y+30	; 0x1e
    7846:	f9 01       	movw	r30, r18
    7848:	80 83       	st	Z, r24
    784a:	91 83       	std	Z+1, r25	; 0x01
    784c:	a2 83       	std	Z+2, r26	; 0x02
    784e:	b3 83       	std	Z+3, r27	; 0x03
}
    7850:	6e 96       	adiw	r28, 0x1e	; 30
    7852:	0f b6       	in	r0, 0x3f	; 63
    7854:	f8 94       	cli
    7856:	de bf       	out	0x3e, r29	; 62
    7858:	0f be       	out	0x3f, r0	; 63
    785a:	cd bf       	out	0x3d, r28	; 61
    785c:	df 91       	pop	r29
    785e:	cf 91       	pop	r28
    7860:	1f 91       	pop	r17
    7862:	0f 91       	pop	r16
    7864:	ff 90       	pop	r15
    7866:	ef 90       	pop	r14
    7868:	df 90       	pop	r13
    786a:	cf 90       	pop	r12
    786c:	bf 90       	pop	r11
    786e:	af 90       	pop	r10
    7870:	9f 90       	pop	r9
    7872:	8f 90       	pop	r8
    7874:	08 95       	ret

00007876 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEddddddPA3_dRdS4_S4_>:

void CoordinateUtil::ConvertFromECEFToLocalNED(double ecefReferenceX, double ecefReferenceY, double ecefReferenceZ,
	double ecefX, double ecefY, double ecefZ, double ecefToLocalNEDRotationMatrix[][3],
	double &localNEDX, double &localNEDY, double &localNEDZ)
{
    7876:	af 92       	push	r10
    7878:	bf 92       	push	r11
    787a:	cf 92       	push	r12
    787c:	df 92       	push	r13
    787e:	ef 92       	push	r14
    7880:	ff 92       	push	r15
    7882:	0f 93       	push	r16
    7884:	1f 93       	push	r17
    7886:	cf 93       	push	r28
    7888:	df 93       	push	r29
    788a:	cd b7       	in	r28, 0x3d	; 61
    788c:	de b7       	in	r29, 0x3e	; 62
    788e:	e8 97       	sbiw	r28, 0x38	; 56
    7890:	0f b6       	in	r0, 0x3f	; 63
    7892:	f8 94       	cli
    7894:	de bf       	out	0x3e, r29	; 62
    7896:	0f be       	out	0x3f, r0	; 63
    7898:	cd bf       	out	0x3d, r28	; 61
    789a:	69 a7       	std	Y+41, r22	; 0x29
    789c:	7a a7       	std	Y+42, r23	; 0x2a
    789e:	8b a7       	std	Y+43, r24	; 0x2b
    78a0:	9c a7       	std	Y+44, r25	; 0x2c
    78a2:	2d a7       	std	Y+45, r18	; 0x2d
    78a4:	3e a7       	std	Y+46, r19	; 0x2e
    78a6:	4f a7       	std	Y+47, r20	; 0x2f
    78a8:	58 ab       	std	Y+48, r21	; 0x30
    78aa:	e9 aa       	std	Y+49, r14	; 0x31
    78ac:	fa aa       	std	Y+50, r15	; 0x32
    78ae:	0b ab       	std	Y+51, r16	; 0x33
    78b0:	1c ab       	std	Y+52, r17	; 0x34
    78b2:	ad aa       	std	Y+53, r10	; 0x35
    78b4:	be aa       	std	Y+54, r11	; 0x36
    78b6:	cf aa       	std	Y+55, r12	; 0x37
    78b8:	d8 ae       	std	Y+56, r13	; 0x38
	//Get the current helicopters position relative to it's starting point in ecef.
	double differenceXECEF = ecefX - ecefReferenceX;
    78ba:	29 a5       	ldd	r18, Y+41	; 0x29
    78bc:	3a a5       	ldd	r19, Y+42	; 0x2a
    78be:	4b a5       	ldd	r20, Y+43	; 0x2b
    78c0:	5c a5       	ldd	r21, Y+44	; 0x2c
    78c2:	6d a9       	ldd	r22, Y+53	; 0x35
    78c4:	7e a9       	ldd	r23, Y+54	; 0x36
    78c6:	8f a9       	ldd	r24, Y+55	; 0x37
    78c8:	98 ad       	ldd	r25, Y+56	; 0x38
    78ca:	0e 94 13 3f 	call	0x7e26	; 0x7e26 <__subsf3>
    78ce:	dc 01       	movw	r26, r24
    78d0:	cb 01       	movw	r24, r22
    78d2:	8d 83       	std	Y+5, r24	; 0x05
    78d4:	9e 83       	std	Y+6, r25	; 0x06
    78d6:	af 83       	std	Y+7, r26	; 0x07
    78d8:	b8 87       	std	Y+8, r27	; 0x08
	double differenceYECEF = ecefY - ecefReferenceY;
    78da:	2d a5       	ldd	r18, Y+45	; 0x2d
    78dc:	3e a5       	ldd	r19, Y+46	; 0x2e
    78de:	4f a5       	ldd	r20, Y+47	; 0x2f
    78e0:	58 a9       	ldd	r21, Y+48	; 0x30
    78e2:	2a 96       	adiw	r28, 0x0a	; 10
    78e4:	6c ad       	ldd	r22, Y+60	; 0x3c
    78e6:	7d ad       	ldd	r23, Y+61	; 0x3d
    78e8:	8e ad       	ldd	r24, Y+62	; 0x3e
    78ea:	9f ad       	ldd	r25, Y+63	; 0x3f
    78ec:	2a 97       	sbiw	r28, 0x0a	; 10
    78ee:	0e 94 13 3f 	call	0x7e26	; 0x7e26 <__subsf3>
    78f2:	dc 01       	movw	r26, r24
    78f4:	cb 01       	movw	r24, r22
    78f6:	89 87       	std	Y+9, r24	; 0x09
    78f8:	9a 87       	std	Y+10, r25	; 0x0a
    78fa:	ab 87       	std	Y+11, r26	; 0x0b
    78fc:	bc 87       	std	Y+12, r27	; 0x0c
	double differenceZECEF = ecefZ - ecefReferenceZ;
    78fe:	29 a9       	ldd	r18, Y+49	; 0x31
    7900:	3a a9       	ldd	r19, Y+50	; 0x32
    7902:	4b a9       	ldd	r20, Y+51	; 0x33
    7904:	5c a9       	ldd	r21, Y+52	; 0x34
    7906:	2e 96       	adiw	r28, 0x0e	; 14
    7908:	6c ad       	ldd	r22, Y+60	; 0x3c
    790a:	7d ad       	ldd	r23, Y+61	; 0x3d
    790c:	8e ad       	ldd	r24, Y+62	; 0x3e
    790e:	9f ad       	ldd	r25, Y+63	; 0x3f
    7910:	2e 97       	sbiw	r28, 0x0e	; 14
    7912:	0e 94 13 3f 	call	0x7e26	; 0x7e26 <__subsf3>
    7916:	dc 01       	movw	r26, r24
    7918:	cb 01       	movw	r24, r22
    791a:	8d 87       	std	Y+13, r24	; 0x0d
    791c:	9e 87       	std	Y+14, r25	; 0x0e
    791e:	af 87       	std	Y+15, r26	; 0x0f
    7920:	b8 8b       	std	Y+16, r27	; 0x10
	
	double rotatedMatrix[3] = {};
    7922:	2c e0       	ldi	r18, 0x0C	; 12
    7924:	ce 01       	movw	r24, r28
    7926:	41 96       	adiw	r24, 0x11	; 17
    7928:	fc 01       	movw	r30, r24
    792a:	32 2f       	mov	r19, r18
    792c:	11 92       	st	Z+, r1
    792e:	3a 95       	dec	r19
    7930:	e9 f7       	brne	.-6      	; 0x792c <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEddddddPA3_dRdS4_S4_+0xb6>
	double positionMatrix[3] = {differenceXECEF, differenceYECEF, differenceZECEF};
    7932:	8d 81       	ldd	r24, Y+5	; 0x05
    7934:	9e 81       	ldd	r25, Y+6	; 0x06
    7936:	af 81       	ldd	r26, Y+7	; 0x07
    7938:	b8 85       	ldd	r27, Y+8	; 0x08
    793a:	8d 8f       	std	Y+29, r24	; 0x1d
    793c:	9e 8f       	std	Y+30, r25	; 0x1e
    793e:	af 8f       	std	Y+31, r26	; 0x1f
    7940:	b8 a3       	std	Y+32, r27	; 0x20
    7942:	89 85       	ldd	r24, Y+9	; 0x09
    7944:	9a 85       	ldd	r25, Y+10	; 0x0a
    7946:	ab 85       	ldd	r26, Y+11	; 0x0b
    7948:	bc 85       	ldd	r27, Y+12	; 0x0c
    794a:	89 a3       	std	Y+33, r24	; 0x21
    794c:	9a a3       	std	Y+34, r25	; 0x22
    794e:	ab a3       	std	Y+35, r26	; 0x23
    7950:	bc a3       	std	Y+36, r27	; 0x24
    7952:	8d 85       	ldd	r24, Y+13	; 0x0d
    7954:	9e 85       	ldd	r25, Y+14	; 0x0e
    7956:	af 85       	ldd	r26, Y+15	; 0x0f
    7958:	b8 89       	ldd	r27, Y+16	; 0x10
    795a:	8d a3       	std	Y+37, r24	; 0x25
    795c:	9e a3       	std	Y+38, r25	; 0x26
    795e:	af a3       	std	Y+39, r26	; 0x27
    7960:	b8 a7       	std	Y+40, r27	; 0x28
	
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
    7962:	1a 82       	std	Y+2, r1	; 0x02
    7964:	19 82       	std	Y+1, r1	; 0x01
    7966:	78 c0       	rjmp	.+240    	; 0x7a58 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEddddddPA3_dRdS4_S4_+0x1e2>
	{
		//iterate through the columns of the rotation matrix
		for (int j = 0; j < 3; j++)
    7968:	1c 82       	std	Y+4, r1	; 0x04
    796a:	1b 82       	std	Y+3, r1	; 0x03
    796c:	66 c0       	rjmp	.+204    	; 0x7a3a <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEddddddPA3_dRdS4_S4_+0x1c4>
		{
			rotatedMatrix[i] += ecefToLocalNEDRotationMatrix[i] [j] * positionMatrix[j];
    796e:	89 81       	ldd	r24, Y+1	; 0x01
    7970:	9a 81       	ldd	r25, Y+2	; 0x02
    7972:	88 0f       	add	r24, r24
    7974:	99 1f       	adc	r25, r25
    7976:	88 0f       	add	r24, r24
    7978:	99 1f       	adc	r25, r25
    797a:	9e 01       	movw	r18, r28
    797c:	2f 5f       	subi	r18, 0xFF	; 255
    797e:	3f 4f       	sbci	r19, 0xFF	; 255
    7980:	82 0f       	add	r24, r18
    7982:	93 1f       	adc	r25, r19
    7984:	40 96       	adiw	r24, 0x10	; 16
    7986:	fc 01       	movw	r30, r24
    7988:	c0 80       	ld	r12, Z
    798a:	d1 80       	ldd	r13, Z+1	; 0x01
    798c:	e2 80       	ldd	r14, Z+2	; 0x02
    798e:	f3 80       	ldd	r15, Z+3	; 0x03
    7990:	29 81       	ldd	r18, Y+1	; 0x01
    7992:	3a 81       	ldd	r19, Y+2	; 0x02
    7994:	c9 01       	movw	r24, r18
    7996:	88 0f       	add	r24, r24
    7998:	99 1f       	adc	r25, r25
    799a:	82 0f       	add	r24, r18
    799c:	93 1f       	adc	r25, r19
    799e:	88 0f       	add	r24, r24
    79a0:	99 1f       	adc	r25, r25
    79a2:	88 0f       	add	r24, r24
    79a4:	99 1f       	adc	r25, r25
    79a6:	60 96       	adiw	r28, 0x10	; 16
    79a8:	2e ad       	ldd	r18, Y+62	; 0x3e
    79aa:	3f ad       	ldd	r19, Y+63	; 0x3f
    79ac:	60 97       	sbiw	r28, 0x10	; 16
    79ae:	28 0f       	add	r18, r24
    79b0:	39 1f       	adc	r19, r25
    79b2:	8b 81       	ldd	r24, Y+3	; 0x03
    79b4:	9c 81       	ldd	r25, Y+4	; 0x04
    79b6:	88 0f       	add	r24, r24
    79b8:	99 1f       	adc	r25, r25
    79ba:	88 0f       	add	r24, r24
    79bc:	99 1f       	adc	r25, r25
    79be:	82 0f       	add	r24, r18
    79c0:	93 1f       	adc	r25, r19
    79c2:	fc 01       	movw	r30, r24
    79c4:	80 81       	ld	r24, Z
    79c6:	91 81       	ldd	r25, Z+1	; 0x01
    79c8:	a2 81       	ldd	r26, Z+2	; 0x02
    79ca:	b3 81       	ldd	r27, Z+3	; 0x03
    79cc:	2b 81       	ldd	r18, Y+3	; 0x03
    79ce:	3c 81       	ldd	r19, Y+4	; 0x04
    79d0:	22 0f       	add	r18, r18
    79d2:	33 1f       	adc	r19, r19
    79d4:	22 0f       	add	r18, r18
    79d6:	33 1f       	adc	r19, r19
    79d8:	ae 01       	movw	r20, r28
    79da:	4f 5f       	subi	r20, 0xFF	; 255
    79dc:	5f 4f       	sbci	r21, 0xFF	; 255
    79de:	24 0f       	add	r18, r20
    79e0:	35 1f       	adc	r19, r21
    79e2:	24 5e       	subi	r18, 0xE4	; 228
    79e4:	3f 4f       	sbci	r19, 0xFF	; 255
    79e6:	f9 01       	movw	r30, r18
    79e8:	20 81       	ld	r18, Z
    79ea:	31 81       	ldd	r19, Z+1	; 0x01
    79ec:	42 81       	ldd	r20, Z+2	; 0x02
    79ee:	53 81       	ldd	r21, Z+3	; 0x03
    79f0:	bc 01       	movw	r22, r24
    79f2:	cd 01       	movw	r24, r26
    79f4:	0e 94 5a 41 	call	0x82b4	; 0x82b4 <__mulsf3>
    79f8:	dc 01       	movw	r26, r24
    79fa:	cb 01       	movw	r24, r22
    79fc:	9c 01       	movw	r18, r24
    79fe:	ad 01       	movw	r20, r26
    7a00:	c7 01       	movw	r24, r14
    7a02:	b6 01       	movw	r22, r12
    7a04:	0e 94 14 3f 	call	0x7e28	; 0x7e28 <__addsf3>
    7a08:	dc 01       	movw	r26, r24
    7a0a:	cb 01       	movw	r24, r22
    7a0c:	29 81       	ldd	r18, Y+1	; 0x01
    7a0e:	3a 81       	ldd	r19, Y+2	; 0x02
    7a10:	22 0f       	add	r18, r18
    7a12:	33 1f       	adc	r19, r19
    7a14:	22 0f       	add	r18, r18
    7a16:	33 1f       	adc	r19, r19
    7a18:	ae 01       	movw	r20, r28
    7a1a:	4f 5f       	subi	r20, 0xFF	; 255
    7a1c:	5f 4f       	sbci	r21, 0xFF	; 255
    7a1e:	24 0f       	add	r18, r20
    7a20:	35 1f       	adc	r19, r21
    7a22:	20 5f       	subi	r18, 0xF0	; 240
    7a24:	3f 4f       	sbci	r19, 0xFF	; 255
    7a26:	f9 01       	movw	r30, r18
    7a28:	80 83       	st	Z, r24
    7a2a:	91 83       	std	Z+1, r25	; 0x01
    7a2c:	a2 83       	std	Z+2, r26	; 0x02
    7a2e:	b3 83       	std	Z+3, r27	; 0x03
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
	{
		//iterate through the columns of the rotation matrix
		for (int j = 0; j < 3; j++)
    7a30:	8b 81       	ldd	r24, Y+3	; 0x03
    7a32:	9c 81       	ldd	r25, Y+4	; 0x04
    7a34:	01 96       	adiw	r24, 0x01	; 1
    7a36:	9c 83       	std	Y+4, r25	; 0x04
    7a38:	8b 83       	std	Y+3, r24	; 0x03
    7a3a:	21 e0       	ldi	r18, 0x01	; 1
    7a3c:	8b 81       	ldd	r24, Y+3	; 0x03
    7a3e:	9c 81       	ldd	r25, Y+4	; 0x04
    7a40:	83 30       	cpi	r24, 0x03	; 3
    7a42:	91 05       	cpc	r25, r1
    7a44:	0c f0       	brlt	.+2      	; 0x7a48 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEddddddPA3_dRdS4_S4_+0x1d2>
    7a46:	20 e0       	ldi	r18, 0x00	; 0
    7a48:	22 23       	and	r18, r18
    7a4a:	09 f0       	breq	.+2      	; 0x7a4e <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEddddddPA3_dRdS4_S4_+0x1d8>
    7a4c:	90 cf       	rjmp	.-224    	; 0x796e <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEddddddPA3_dRdS4_S4_+0xf8>
	double rotatedMatrix[3] = {};
	double positionMatrix[3] = {differenceXECEF, differenceYECEF, differenceZECEF};
	
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
    7a4e:	89 81       	ldd	r24, Y+1	; 0x01
    7a50:	9a 81       	ldd	r25, Y+2	; 0x02
    7a52:	01 96       	adiw	r24, 0x01	; 1
    7a54:	9a 83       	std	Y+2, r25	; 0x02
    7a56:	89 83       	std	Y+1, r24	; 0x01
    7a58:	21 e0       	ldi	r18, 0x01	; 1
    7a5a:	89 81       	ldd	r24, Y+1	; 0x01
    7a5c:	9a 81       	ldd	r25, Y+2	; 0x02
    7a5e:	83 30       	cpi	r24, 0x03	; 3
    7a60:	91 05       	cpc	r25, r1
    7a62:	0c f0       	brlt	.+2      	; 0x7a66 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEddddddPA3_dRdS4_S4_+0x1f0>
    7a64:	20 e0       	ldi	r18, 0x00	; 0
    7a66:	22 23       	and	r18, r18
    7a68:	09 f0       	breq	.+2      	; 0x7a6c <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEddddddPA3_dRdS4_S4_+0x1f6>
    7a6a:	7e cf       	rjmp	.-260    	; 0x7968 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEddddddPA3_dRdS4_S4_+0xf2>
		{
			rotatedMatrix[i] += ecefToLocalNEDRotationMatrix[i] [j] * positionMatrix[j];
		}
	}
	
	localNEDX = rotatedMatrix[0];
    7a6c:	89 89       	ldd	r24, Y+17	; 0x11
    7a6e:	9a 89       	ldd	r25, Y+18	; 0x12
    7a70:	ab 89       	ldd	r26, Y+19	; 0x13
    7a72:	bc 89       	ldd	r27, Y+20	; 0x14
    7a74:	62 96       	adiw	r28, 0x12	; 18
    7a76:	2e ad       	ldd	r18, Y+62	; 0x3e
    7a78:	3f ad       	ldd	r19, Y+63	; 0x3f
    7a7a:	62 97       	sbiw	r28, 0x12	; 18
    7a7c:	f9 01       	movw	r30, r18
    7a7e:	80 83       	st	Z, r24
    7a80:	91 83       	std	Z+1, r25	; 0x01
    7a82:	a2 83       	std	Z+2, r26	; 0x02
    7a84:	b3 83       	std	Z+3, r27	; 0x03
	localNEDY = rotatedMatrix[1];
    7a86:	8d 89       	ldd	r24, Y+21	; 0x15
    7a88:	9e 89       	ldd	r25, Y+22	; 0x16
    7a8a:	af 89       	ldd	r26, Y+23	; 0x17
    7a8c:	b8 8d       	ldd	r27, Y+24	; 0x18
    7a8e:	64 96       	adiw	r28, 0x14	; 20
    7a90:	2e ad       	ldd	r18, Y+62	; 0x3e
    7a92:	3f ad       	ldd	r19, Y+63	; 0x3f
    7a94:	64 97       	sbiw	r28, 0x14	; 20
    7a96:	f9 01       	movw	r30, r18
    7a98:	80 83       	st	Z, r24
    7a9a:	91 83       	std	Z+1, r25	; 0x01
    7a9c:	a2 83       	std	Z+2, r26	; 0x02
    7a9e:	b3 83       	std	Z+3, r27	; 0x03
	localNEDZ = rotatedMatrix[2];
    7aa0:	89 8d       	ldd	r24, Y+25	; 0x19
    7aa2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    7aa4:	ab 8d       	ldd	r26, Y+27	; 0x1b
    7aa6:	bc 8d       	ldd	r27, Y+28	; 0x1c
    7aa8:	66 96       	adiw	r28, 0x16	; 22
    7aaa:	2e ad       	ldd	r18, Y+62	; 0x3e
    7aac:	3f ad       	ldd	r19, Y+63	; 0x3f
    7aae:	66 97       	sbiw	r28, 0x16	; 22
    7ab0:	f9 01       	movw	r30, r18
    7ab2:	80 83       	st	Z, r24
    7ab4:	91 83       	std	Z+1, r25	; 0x01
    7ab6:	a2 83       	std	Z+2, r26	; 0x02
    7ab8:	b3 83       	std	Z+3, r27	; 0x03
}
    7aba:	e8 96       	adiw	r28, 0x38	; 56
    7abc:	0f b6       	in	r0, 0x3f	; 63
    7abe:	f8 94       	cli
    7ac0:	de bf       	out	0x3e, r29	; 62
    7ac2:	0f be       	out	0x3f, r0	; 63
    7ac4:	cd bf       	out	0x3d, r28	; 61
    7ac6:	df 91       	pop	r29
    7ac8:	cf 91       	pop	r28
    7aca:	1f 91       	pop	r17
    7acc:	0f 91       	pop	r16
    7ace:	ff 90       	pop	r15
    7ad0:	ef 90       	pop	r14
    7ad2:	df 90       	pop	r13
    7ad4:	cf 90       	pop	r12
    7ad6:	bf 90       	pop	r11
    7ad8:	af 90       	pop	r10
    7ada:	08 95       	ret

00007adc <_ZN10helicopter4util14CoordinateUtil29ConvertFromGeodedicToLocalNEDEddddddPA3_dRdS4_S4_>:

void CoordinateUtil::ConvertFromGeodedicToLocalNED(
	double geodedicLatitude, double geodedicLongitude, double altitudeFeetAgl,
	double ecefReferenceX, double ecefReferenceY, double ecefReferenceZ, double ecefToLocalNEDRotationMatrix[][3],
	double &localNEDX,double &localNEDY,double &localNEDZ)
{
    7adc:	2f 92       	push	r2
    7ade:	3f 92       	push	r3
    7ae0:	4f 92       	push	r4
    7ae2:	5f 92       	push	r5
    7ae4:	6f 92       	push	r6
    7ae6:	7f 92       	push	r7
    7ae8:	8f 92       	push	r8
    7aea:	9f 92       	push	r9
    7aec:	af 92       	push	r10
    7aee:	bf 92       	push	r11
    7af0:	cf 92       	push	r12
    7af2:	df 92       	push	r13
    7af4:	ef 92       	push	r14
    7af6:	ff 92       	push	r15
    7af8:	0f 93       	push	r16
    7afa:	1f 93       	push	r17
    7afc:	cf 93       	push	r28
    7afe:	df 93       	push	r29
    7b00:	cd b7       	in	r28, 0x3d	; 61
    7b02:	de b7       	in	r29, 0x3e	; 62
    7b04:	6c 97       	sbiw	r28, 0x1c	; 28
    7b06:	0f b6       	in	r0, 0x3f	; 63
    7b08:	f8 94       	cli
    7b0a:	de bf       	out	0x3e, r29	; 62
    7b0c:	0f be       	out	0x3f, r0	; 63
    7b0e:	cd bf       	out	0x3d, r28	; 61
    7b10:	6d 87       	std	Y+13, r22	; 0x0d
    7b12:	7e 87       	std	Y+14, r23	; 0x0e
    7b14:	8f 87       	std	Y+15, r24	; 0x0f
    7b16:	98 8b       	std	Y+16, r25	; 0x10
    7b18:	29 8b       	std	Y+17, r18	; 0x11
    7b1a:	3a 8b       	std	Y+18, r19	; 0x12
    7b1c:	4b 8b       	std	Y+19, r20	; 0x13
    7b1e:	5c 8b       	std	Y+20, r21	; 0x14
    7b20:	ed 8a       	std	Y+21, r14	; 0x15
    7b22:	fe 8a       	std	Y+22, r15	; 0x16
    7b24:	0f 8b       	std	Y+23, r16	; 0x17
    7b26:	18 8f       	std	Y+24, r17	; 0x18
    7b28:	a9 8e       	std	Y+25, r10	; 0x19
    7b2a:	ba 8e       	std	Y+26, r11	; 0x1a
    7b2c:	cb 8e       	std	Y+27, r12	; 0x1b
    7b2e:	dc 8e       	std	Y+28, r13	; 0x1c
	double ecefX = 0;
    7b30:	19 82       	std	Y+1, r1	; 0x01
    7b32:	1a 82       	std	Y+2, r1	; 0x02
    7b34:	1b 82       	std	Y+3, r1	; 0x03
    7b36:	1c 82       	std	Y+4, r1	; 0x04
	double ecefY = 0;
    7b38:	1d 82       	std	Y+5, r1	; 0x05
    7b3a:	1e 82       	std	Y+6, r1	; 0x06
    7b3c:	1f 82       	std	Y+7, r1	; 0x07
    7b3e:	18 86       	std	Y+8, r1	; 0x08
	double ecefZ = 0;
    7b40:	19 86       	std	Y+9, r1	; 0x09
    7b42:	1a 86       	std	Y+10, r1	; 0x0a
    7b44:	1b 86       	std	Y+11, r1	; 0x0b
    7b46:	1c 86       	std	Y+12, r1	; 0x0c
	
	ConvertFromGeodeticToECEF(geodedicLatitude, geodedicLongitude, altitudeFeetAgl, ecefX, ecefY, ecefZ);
    7b48:	fe 01       	movw	r30, r28
    7b4a:	39 96       	adiw	r30, 0x09	; 9
    7b4c:	be 01       	movw	r22, r28
    7b4e:	6b 5f       	subi	r22, 0xFB	; 251
    7b50:	7f 4f       	sbci	r23, 0xFF	; 255
    7b52:	ed 88       	ldd	r14, Y+21	; 0x15
    7b54:	fe 88       	ldd	r15, Y+22	; 0x16
    7b56:	0f 89       	ldd	r16, Y+23	; 0x17
    7b58:	18 8d       	ldd	r17, Y+24	; 0x18
    7b5a:	29 89       	ldd	r18, Y+17	; 0x11
    7b5c:	3a 89       	ldd	r19, Y+18	; 0x12
    7b5e:	4b 89       	ldd	r20, Y+19	; 0x13
    7b60:	5c 89       	ldd	r21, Y+20	; 0x14
    7b62:	8d 85       	ldd	r24, Y+13	; 0x0d
    7b64:	9e 85       	ldd	r25, Y+14	; 0x0e
    7b66:	af 85       	ldd	r26, Y+15	; 0x0f
    7b68:	b8 89       	ldd	r27, Y+16	; 0x10
    7b6a:	4f 01       	movw	r8, r30
    7b6c:	5b 01       	movw	r10, r22
    7b6e:	be 01       	movw	r22, r28
    7b70:	6f 5f       	subi	r22, 0xFF	; 255
    7b72:	7f 4f       	sbci	r23, 0xFF	; 255
    7b74:	6b 01       	movw	r12, r22
    7b76:	bc 01       	movw	r22, r24
    7b78:	cd 01       	movw	r24, r26
    7b7a:	0e 94 2d 3b 	call	0x765a	; 0x765a <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEdddRdS2_S2_>
	
	ConvertFromECEFToLocalNED(ecefReferenceX, ecefReferenceY, ecefReferenceZ,
		ecefX, ecefY, ecefZ, ecefToLocalNEDRotationMatrix,
		localNEDX, localNEDY, localNEDZ);
    7b7e:	29 85       	ldd	r18, Y+9	; 0x09
    7b80:	3a 85       	ldd	r19, Y+10	; 0x0a
    7b82:	4b 85       	ldd	r20, Y+11	; 0x0b
    7b84:	5c 85       	ldd	r21, Y+12	; 0x0c
    7b86:	8d 81       	ldd	r24, Y+5	; 0x05
    7b88:	9e 81       	ldd	r25, Y+6	; 0x06
    7b8a:	af 81       	ldd	r26, Y+7	; 0x07
    7b8c:	b8 85       	ldd	r27, Y+8	; 0x08
    7b8e:	a9 80       	ldd	r10, Y+1	; 0x01
    7b90:	ba 80       	ldd	r11, Y+2	; 0x02
    7b92:	cb 80       	ldd	r12, Y+3	; 0x03
    7b94:	dc 80       	ldd	r13, Y+4	; 0x04
    7b96:	ee a8       	ldd	r14, Y+54	; 0x36
    7b98:	ff a8       	ldd	r15, Y+55	; 0x37
    7b9a:	08 ad       	ldd	r16, Y+56	; 0x38
    7b9c:	19 ad       	ldd	r17, Y+57	; 0x39
    7b9e:	2a a8       	ldd	r2, Y+50	; 0x32
    7ba0:	3b a8       	ldd	r3, Y+51	; 0x33
    7ba2:	4c a8       	ldd	r4, Y+52	; 0x34
    7ba4:	5d a8       	ldd	r5, Y+53	; 0x35
    7ba6:	69 8c       	ldd	r6, Y+25	; 0x19
    7ba8:	7a 8c       	ldd	r7, Y+26	; 0x1a
    7baa:	8b 8c       	ldd	r8, Y+27	; 0x1b
    7bac:	9c 8c       	ldd	r9, Y+28	; 0x1c
    7bae:	22 96       	adiw	r28, 0x02	; 2
    7bb0:	6f ad       	ldd	r22, Y+63	; 0x3f
    7bb2:	22 97       	sbiw	r28, 0x02	; 2
    7bb4:	6f 93       	push	r22
    7bb6:	21 96       	adiw	r28, 0x01	; 1
    7bb8:	6f ad       	ldd	r22, Y+63	; 0x3f
    7bba:	21 97       	sbiw	r28, 0x01	; 1
    7bbc:	6f 93       	push	r22
    7bbe:	6f ad       	ldd	r22, Y+63	; 0x3f
    7bc0:	6f 93       	push	r22
    7bc2:	6e ad       	ldd	r22, Y+62	; 0x3e
    7bc4:	6f 93       	push	r22
    7bc6:	6d ad       	ldd	r22, Y+61	; 0x3d
    7bc8:	6f 93       	push	r22
    7bca:	6c ad       	ldd	r22, Y+60	; 0x3c
    7bcc:	6f 93       	push	r22
    7bce:	6b ad       	ldd	r22, Y+59	; 0x3b
    7bd0:	6f 93       	push	r22
    7bd2:	6a ad       	ldd	r22, Y+58	; 0x3a
    7bd4:	6f 93       	push	r22
    7bd6:	65 2f       	mov	r22, r21
    7bd8:	6f 93       	push	r22
    7bda:	64 2f       	mov	r22, r20
    7bdc:	6f 93       	push	r22
    7bde:	63 2f       	mov	r22, r19
    7be0:	6f 93       	push	r22
    7be2:	2f 93       	push	r18
    7be4:	2b 2f       	mov	r18, r27
    7be6:	2f 93       	push	r18
    7be8:	2a 2f       	mov	r18, r26
    7bea:	2f 93       	push	r18
    7bec:	29 2f       	mov	r18, r25
    7bee:	2f 93       	push	r18
    7bf0:	8f 93       	push	r24
    7bf2:	a2 01       	movw	r20, r4
    7bf4:	91 01       	movw	r18, r2
    7bf6:	c4 01       	movw	r24, r8
    7bf8:	b3 01       	movw	r22, r6
    7bfa:	0e 94 3b 3c 	call	0x7876	; 0x7876 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEddddddPA3_dRdS4_S4_>
    7bfe:	8d b7       	in	r24, 0x3d	; 61
    7c00:	9e b7       	in	r25, 0x3e	; 62
    7c02:	40 96       	adiw	r24, 0x10	; 16
    7c04:	0f b6       	in	r0, 0x3f	; 63
    7c06:	f8 94       	cli
    7c08:	de bf       	out	0x3e, r29	; 62
    7c0a:	0f be       	out	0x3f, r0	; 63
    7c0c:	cd bf       	out	0x3d, r28	; 61
    7c0e:	6c 96       	adiw	r28, 0x1c	; 28
    7c10:	0f b6       	in	r0, 0x3f	; 63
    7c12:	f8 94       	cli
    7c14:	de bf       	out	0x3e, r29	; 62
    7c16:	0f be       	out	0x3f, r0	; 63
    7c18:	cd bf       	out	0x3d, r28	; 61
    7c1a:	df 91       	pop	r29
    7c1c:	cf 91       	pop	r28
    7c1e:	1f 91       	pop	r17
    7c20:	0f 91       	pop	r16
    7c22:	ff 90       	pop	r15
    7c24:	ef 90       	pop	r14
    7c26:	df 90       	pop	r13
    7c28:	cf 90       	pop	r12
    7c2a:	bf 90       	pop	r11
    7c2c:	af 90       	pop	r10
    7c2e:	9f 90       	pop	r9
    7c30:	8f 90       	pop	r8
    7c32:	7f 90       	pop	r7
    7c34:	6f 90       	pop	r6
    7c36:	5f 90       	pop	r5
    7c38:	4f 90       	pop	r4
    7c3a:	3f 90       	pop	r3
    7c3c:	2f 90       	pop	r2
    7c3e:	08 95       	ret

00007c40 <_ZN10helicopter4util5Timer10startTimerEv>:
#include "Timer.h"

using namespace helicopter::util;

void Timer::startTimer()
{
    7c40:	0f 93       	push	r16
    7c42:	1f 93       	push	r17
    7c44:	cf 93       	push	r28
    7c46:	df 93       	push	r29
    7c48:	00 d0       	rcall	.+0      	; 0x7c4a <_ZN10helicopter4util5Timer10startTimerEv+0xa>
    7c4a:	1f 92       	push	r1
    7c4c:	cd b7       	in	r28, 0x3d	; 61
    7c4e:	de b7       	in	r29, 0x3e	; 62
    7c50:	9c 83       	std	Y+4, r25	; 0x04
    7c52:	8b 83       	std	Y+3, r24	; 0x03
	//stop timer in case it was already started.
	stopTimer();
    7c54:	8b 81       	ldd	r24, Y+3	; 0x03
    7c56:	9c 81       	ldd	r25, Y+4	; 0x04
    7c58:	0e 94 f4 3e 	call	0x7de8	; 0x7de8 <_ZN10helicopter4util5Timer9stopTimerEv>
	
	int frequency = 0;
    7c5c:	1a 82       	std	Y+2, r1	; 0x02
    7c5e:	19 82       	std	Y+1, r1	; 0x01
	
	if (timeoutMilliseconds > 1000) 
    7c60:	8b 81       	ldd	r24, Y+3	; 0x03
    7c62:	9c 81       	ldd	r25, Y+4	; 0x04
    7c64:	fc 01       	movw	r30, r24
    7c66:	86 81       	ldd	r24, Z+6	; 0x06
    7c68:	97 81       	ldd	r25, Z+7	; 0x07
    7c6a:	89 3e       	cpi	r24, 0xE9	; 233
    7c6c:	f3 e0       	ldi	r31, 0x03	; 3
    7c6e:	9f 07       	cpc	r25, r31
    7c70:	2c f0       	brlt	.+10     	; 0x7c7c <_ZN10helicopter4util5Timer10startTimerEv+0x3c>
	{
		frequency = 1;
    7c72:	81 e0       	ldi	r24, 0x01	; 1
    7c74:	90 e0       	ldi	r25, 0x00	; 0
    7c76:	9a 83       	std	Y+2, r25	; 0x02
    7c78:	89 83       	std	Y+1, r24	; 0x01
    7c7a:	0d c0       	rjmp	.+26     	; 0x7c96 <_ZN10helicopter4util5Timer10startTimerEv+0x56>
	}else
	{
		frequency = 1000 / timeoutMilliseconds;
    7c7c:	8b 81       	ldd	r24, Y+3	; 0x03
    7c7e:	9c 81       	ldd	r25, Y+4	; 0x04
    7c80:	fc 01       	movw	r30, r24
    7c82:	26 81       	ldd	r18, Z+6	; 0x06
    7c84:	37 81       	ldd	r19, Z+7	; 0x07
    7c86:	88 ee       	ldi	r24, 0xE8	; 232
    7c88:	93 e0       	ldi	r25, 0x03	; 3
    7c8a:	b9 01       	movw	r22, r18
    7c8c:	0e 94 74 43 	call	0x86e8	; 0x86e8 <__divmodhi4>
    7c90:	9b 01       	movw	r18, r22
    7c92:	3a 83       	std	Y+2, r19	; 0x02
    7c94:	29 83       	std	Y+1, r18	; 0x01
	}

	//setup timer.
	//set the output compare register so that when the Timer Counter (TCNT) matches this output register
	//it indicates that the timer has timed out.
	OCR3A = ((cpuSpeed /  timerPrescaler) / frequency); 
    7c96:	08 e9       	ldi	r16, 0x98	; 152
    7c98:	10 e0       	ldi	r17, 0x00	; 0
    7c9a:	8b 81       	ldd	r24, Y+3	; 0x03
    7c9c:	9c 81       	ldd	r25, Y+4	; 0x04
    7c9e:	fc 01       	movw	r30, r24
    7ca0:	80 81       	ld	r24, Z
    7ca2:	91 81       	ldd	r25, Z+1	; 0x01
    7ca4:	a2 81       	ldd	r26, Z+2	; 0x02
    7ca6:	b3 81       	ldd	r27, Z+3	; 0x03
    7ca8:	2b 81       	ldd	r18, Y+3	; 0x03
    7caa:	3c 81       	ldd	r19, Y+4	; 0x04
    7cac:	f9 01       	movw	r30, r18
    7cae:	24 81       	ldd	r18, Z+4	; 0x04
    7cb0:	35 81       	ldd	r19, Z+5	; 0x05
    7cb2:	44 27       	eor	r20, r20
    7cb4:	37 fd       	sbrc	r19, 7
    7cb6:	40 95       	com	r20
    7cb8:	54 2f       	mov	r21, r20
    7cba:	bc 01       	movw	r22, r24
    7cbc:	cd 01       	movw	r24, r26
    7cbe:	0e 94 88 43 	call	0x8710	; 0x8710 <__udivmodsi4>
    7cc2:	da 01       	movw	r26, r20
    7cc4:	c9 01       	movw	r24, r18
    7cc6:	29 81       	ldd	r18, Y+1	; 0x01
    7cc8:	3a 81       	ldd	r19, Y+2	; 0x02
    7cca:	44 27       	eor	r20, r20
    7ccc:	37 fd       	sbrc	r19, 7
    7cce:	40 95       	com	r20
    7cd0:	54 2f       	mov	r21, r20
    7cd2:	bc 01       	movw	r22, r24
    7cd4:	cd 01       	movw	r24, r26
    7cd6:	0e 94 88 43 	call	0x8710	; 0x8710 <__udivmodsi4>
    7cda:	da 01       	movw	r26, r20
    7cdc:	c9 01       	movw	r24, r18
    7cde:	f8 01       	movw	r30, r16
    7ce0:	91 83       	std	Z+1, r25	; 0x01
    7ce2:	80 83       	st	Z, r24
		
	TCCR3B |= (1 << WGM32); //Configure timer 1 for Clear on Timer Compare (CTC) mode so that if there is a match, the TCNT goes back to 0.
    7ce4:	81 e9       	ldi	r24, 0x91	; 145
    7ce6:	90 e0       	ldi	r25, 0x00	; 0
    7ce8:	21 e9       	ldi	r18, 0x91	; 145
    7cea:	30 e0       	ldi	r19, 0x00	; 0
    7cec:	f9 01       	movw	r30, r18
    7cee:	20 81       	ld	r18, Z
    7cf0:	28 60       	ori	r18, 0x08	; 8
    7cf2:	fc 01       	movw	r30, r24
    7cf4:	20 83       	st	Z, r18
		
	//Set the Timer Counter Control Register (TCCR) with the appropriate prescaller
	//which causes the timer counter to start (i.e. the timer starts).
	switch(timerPrescaler)
    7cf6:	8b 81       	ldd	r24, Y+3	; 0x03
    7cf8:	9c 81       	ldd	r25, Y+4	; 0x04
    7cfa:	fc 01       	movw	r30, r24
    7cfc:	84 81       	ldd	r24, Z+4	; 0x04
    7cfe:	95 81       	ldd	r25, Z+5	; 0x05
    7d00:	80 34       	cpi	r24, 0x40	; 64
    7d02:	91 05       	cpc	r25, r1
    7d04:	39 f1       	breq	.+78     	; 0x7d54 <_ZN10helicopter4util5Timer10startTimerEv+0x114>
    7d06:	81 34       	cpi	r24, 0x41	; 65
    7d08:	91 05       	cpc	r25, r1
    7d0a:	3c f4       	brge	.+14     	; 0x7d1a <_ZN10helicopter4util5Timer10startTimerEv+0xda>
    7d0c:	81 30       	cpi	r24, 0x01	; 1
    7d0e:	91 05       	cpc	r25, r1
    7d10:	69 f0       	breq	.+26     	; 0x7d2c <_ZN10helicopter4util5Timer10startTimerEv+0xec>
    7d12:	88 30       	cpi	r24, 0x08	; 8
    7d14:	91 05       	cpc	r25, r1
    7d16:	a1 f0       	breq	.+40     	; 0x7d40 <_ZN10helicopter4util5Timer10startTimerEv+0x100>
    7d18:	3b c0       	rjmp	.+118    	; 0x7d90 <_ZN10helicopter4util5Timer10startTimerEv+0x150>
    7d1a:	81 15       	cp	r24, r1
    7d1c:	f1 e0       	ldi	r31, 0x01	; 1
    7d1e:	9f 07       	cpc	r25, r31
    7d20:	19 f1       	breq	.+70     	; 0x7d68 <_ZN10helicopter4util5Timer10startTimerEv+0x128>
    7d22:	81 15       	cp	r24, r1
    7d24:	24 e0       	ldi	r18, 0x04	; 4
    7d26:	92 07       	cpc	r25, r18
    7d28:	49 f1       	breq	.+82     	; 0x7d7c <_ZN10helicopter4util5Timer10startTimerEv+0x13c>
    7d2a:	32 c0       	rjmp	.+100    	; 0x7d90 <_ZN10helicopter4util5Timer10startTimerEv+0x150>
	{
		case NO_PRESCALER:
		TCCR3B |= NoPrescaling;
    7d2c:	81 e9       	ldi	r24, 0x91	; 145
    7d2e:	90 e0       	ldi	r25, 0x00	; 0
    7d30:	21 e9       	ldi	r18, 0x91	; 145
    7d32:	30 e0       	ldi	r19, 0x00	; 0
    7d34:	f9 01       	movw	r30, r18
    7d36:	20 81       	ld	r18, Z
    7d38:	21 60       	ori	r18, 0x01	; 1
    7d3a:	fc 01       	movw	r30, r24
    7d3c:	20 83       	st	Z, r18
		break;
    7d3e:	31 c0       	rjmp	.+98     	; 0x7da2 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_EIGHT:
		TCCR3B |= PrescaleByEight;
    7d40:	81 e9       	ldi	r24, 0x91	; 145
    7d42:	90 e0       	ldi	r25, 0x00	; 0
    7d44:	21 e9       	ldi	r18, 0x91	; 145
    7d46:	30 e0       	ldi	r19, 0x00	; 0
    7d48:	f9 01       	movw	r30, r18
    7d4a:	20 81       	ld	r18, Z
    7d4c:	22 60       	ori	r18, 0x02	; 2
    7d4e:	fc 01       	movw	r30, r24
    7d50:	20 83       	st	Z, r18
		break;
    7d52:	27 c0       	rjmp	.+78     	; 0x7da2 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_SIXTYFOUR:
		TCCR3B |= PrescaleBySixtyFour;
    7d54:	81 e9       	ldi	r24, 0x91	; 145
    7d56:	90 e0       	ldi	r25, 0x00	; 0
    7d58:	21 e9       	ldi	r18, 0x91	; 145
    7d5a:	30 e0       	ldi	r19, 0x00	; 0
    7d5c:	f9 01       	movw	r30, r18
    7d5e:	20 81       	ld	r18, Z
    7d60:	23 60       	ori	r18, 0x03	; 3
    7d62:	fc 01       	movw	r30, r24
    7d64:	20 83       	st	Z, r18
		break;
    7d66:	1d c0       	rjmp	.+58     	; 0x7da2 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_TWOFIFTYSIX:
		TCCR3B |= PrescaleByTwofiftysix;
    7d68:	81 e9       	ldi	r24, 0x91	; 145
    7d6a:	90 e0       	ldi	r25, 0x00	; 0
    7d6c:	21 e9       	ldi	r18, 0x91	; 145
    7d6e:	30 e0       	ldi	r19, 0x00	; 0
    7d70:	f9 01       	movw	r30, r18
    7d72:	20 81       	ld	r18, Z
    7d74:	24 60       	ori	r18, 0x04	; 4
    7d76:	fc 01       	movw	r30, r24
    7d78:	20 83       	st	Z, r18
		break;
    7d7a:	13 c0       	rjmp	.+38     	; 0x7da2 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_TENTWENTYFOUR:
		TCCR3B |= PrescaleByTentwentyfour;
    7d7c:	81 e9       	ldi	r24, 0x91	; 145
    7d7e:	90 e0       	ldi	r25, 0x00	; 0
    7d80:	21 e9       	ldi	r18, 0x91	; 145
    7d82:	30 e0       	ldi	r19, 0x00	; 0
    7d84:	f9 01       	movw	r30, r18
    7d86:	20 81       	ld	r18, Z
    7d88:	25 60       	ori	r18, 0x05	; 5
    7d8a:	fc 01       	movw	r30, r24
    7d8c:	20 83       	st	Z, r18
		break;
    7d8e:	09 c0       	rjmp	.+18     	; 0x7da2 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		default:
		TCCR3B |= NoPrescaling;
    7d90:	81 e9       	ldi	r24, 0x91	; 145
    7d92:	90 e0       	ldi	r25, 0x00	; 0
    7d94:	21 e9       	ldi	r18, 0x91	; 145
    7d96:	30 e0       	ldi	r19, 0x00	; 0
    7d98:	f9 01       	movw	r30, r18
    7d9a:	20 81       	ld	r18, Z
    7d9c:	21 60       	ori	r18, 0x01	; 1
    7d9e:	fc 01       	movw	r30, r24
    7da0:	20 83       	st	Z, r18
	}
}
    7da2:	0f 90       	pop	r0
    7da4:	0f 90       	pop	r0
    7da6:	0f 90       	pop	r0
    7da8:	0f 90       	pop	r0
    7daa:	df 91       	pop	r29
    7dac:	cf 91       	pop	r28
    7dae:	1f 91       	pop	r17
    7db0:	0f 91       	pop	r16
    7db2:	08 95       	ret

00007db4 <_ZN10helicopter4util5Timer11hasTimedoutEv>:

bool Timer::hasTimedout()
{
    7db4:	cf 93       	push	r28
    7db6:	df 93       	push	r29
    7db8:	1f 92       	push	r1
    7dba:	1f 92       	push	r1
    7dbc:	cd b7       	in	r28, 0x3d	; 61
    7dbe:	de b7       	in	r29, 0x3e	; 62
    7dc0:	9a 83       	std	Y+2, r25	; 0x02
    7dc2:	89 83       	std	Y+1, r24	; 0x01
	//Check the Timer Interrupt Flags Register (TIFR) to determine if the flag was set indicating
	//that the timer has timed out.
	return (TIFR3 & (1<<OCF3A)) != 0;
    7dc4:	88 e3       	ldi	r24, 0x38	; 56
    7dc6:	90 e0       	ldi	r25, 0x00	; 0
    7dc8:	fc 01       	movw	r30, r24
    7dca:	80 81       	ld	r24, Z
    7dcc:	88 2f       	mov	r24, r24
    7dce:	90 e0       	ldi	r25, 0x00	; 0
    7dd0:	82 70       	andi	r24, 0x02	; 2
    7dd2:	99 27       	eor	r25, r25
    7dd4:	21 e0       	ldi	r18, 0x01	; 1
    7dd6:	00 97       	sbiw	r24, 0x00	; 0
    7dd8:	09 f4       	brne	.+2      	; 0x7ddc <_ZN10helicopter4util5Timer11hasTimedoutEv+0x28>
    7dda:	20 e0       	ldi	r18, 0x00	; 0
    7ddc:	82 2f       	mov	r24, r18
}
    7dde:	0f 90       	pop	r0
    7de0:	0f 90       	pop	r0
    7de2:	df 91       	pop	r29
    7de4:	cf 91       	pop	r28
    7de6:	08 95       	ret

00007de8 <_ZN10helicopter4util5Timer9stopTimerEv>:

void Timer::stopTimer()
{
    7de8:	cf 93       	push	r28
    7dea:	df 93       	push	r29
    7dec:	1f 92       	push	r1
    7dee:	1f 92       	push	r1
    7df0:	cd b7       	in	r28, 0x3d	; 61
    7df2:	de b7       	in	r29, 0x3e	; 62
    7df4:	9a 83       	std	Y+2, r25	; 0x02
    7df6:	89 83       	std	Y+1, r24	; 0x01
	//stop the timer
	TCCR3B = 0;
    7df8:	81 e9       	ldi	r24, 0x91	; 145
    7dfa:	90 e0       	ldi	r25, 0x00	; 0
    7dfc:	fc 01       	movw	r30, r24
    7dfe:	10 82       	st	Z, r1
	
	//Then clear the timer counter (sets the count back to 0 so when the timer starts again, it starts from 0). 
	//Clear after stopping in order to avoid missing a compare match.
	TCNT3 = 0;
    7e00:	84 e9       	ldi	r24, 0x94	; 148
    7e02:	90 e0       	ldi	r25, 0x00	; 0
    7e04:	fc 01       	movw	r30, r24
    7e06:	11 82       	std	Z+1, r1	; 0x01
    7e08:	10 82       	st	Z, r1
	
	//clear the timeout flag.
	TIFR3 |= (1<<OCF3A);
    7e0a:	88 e3       	ldi	r24, 0x38	; 56
    7e0c:	90 e0       	ldi	r25, 0x00	; 0
    7e0e:	28 e3       	ldi	r18, 0x38	; 56
    7e10:	30 e0       	ldi	r19, 0x00	; 0
    7e12:	f9 01       	movw	r30, r18
    7e14:	20 81       	ld	r18, Z
    7e16:	22 60       	ori	r18, 0x02	; 2
    7e18:	fc 01       	movw	r30, r24
    7e1a:	20 83       	st	Z, r18
    7e1c:	0f 90       	pop	r0
    7e1e:	0f 90       	pop	r0
    7e20:	df 91       	pop	r29
    7e22:	cf 91       	pop	r28
    7e24:	08 95       	ret

00007e26 <__subsf3>:
    7e26:	50 58       	subi	r21, 0x80	; 128

00007e28 <__addsf3>:
    7e28:	bb 27       	eor	r27, r27
    7e2a:	aa 27       	eor	r26, r26
    7e2c:	0e d0       	rcall	.+28     	; 0x7e4a <__addsf3x>
    7e2e:	dc c1       	rjmp	.+952    	; 0x81e8 <__fp_round>
    7e30:	a5 d1       	rcall	.+842    	; 0x817c <__fp_pscA>
    7e32:	30 f0       	brcs	.+12     	; 0x7e40 <__addsf3+0x18>
    7e34:	aa d1       	rcall	.+852    	; 0x818a <__fp_pscB>
    7e36:	20 f0       	brcs	.+8      	; 0x7e40 <__addsf3+0x18>
    7e38:	31 f4       	brne	.+12     	; 0x7e46 <__addsf3+0x1e>
    7e3a:	9f 3f       	cpi	r25, 0xFF	; 255
    7e3c:	11 f4       	brne	.+4      	; 0x7e42 <__addsf3+0x1a>
    7e3e:	1e f4       	brtc	.+6      	; 0x7e46 <__addsf3+0x1e>
    7e40:	9a c1       	rjmp	.+820    	; 0x8176 <__fp_nan>
    7e42:	0e f4       	brtc	.+2      	; 0x7e46 <__addsf3+0x1e>
    7e44:	e0 95       	com	r30
    7e46:	e7 fb       	bst	r30, 7
    7e48:	67 c1       	rjmp	.+718    	; 0x8118 <__fp_inf>

00007e4a <__addsf3x>:
    7e4a:	e9 2f       	mov	r30, r25
    7e4c:	ef d1       	rcall	.+990    	; 0x822c <__fp_split3>
    7e4e:	80 f3       	brcs	.-32     	; 0x7e30 <__addsf3+0x8>
    7e50:	ba 17       	cp	r27, r26
    7e52:	62 07       	cpc	r22, r18
    7e54:	73 07       	cpc	r23, r19
    7e56:	84 07       	cpc	r24, r20
    7e58:	95 07       	cpc	r25, r21
    7e5a:	18 f0       	brcs	.+6      	; 0x7e62 <__addsf3x+0x18>
    7e5c:	71 f4       	brne	.+28     	; 0x7e7a <__addsf3x+0x30>
    7e5e:	9e f5       	brtc	.+102    	; 0x7ec6 <__addsf3x+0x7c>
    7e60:	1e c2       	rjmp	.+1084   	; 0x829e <__fp_zero>
    7e62:	0e f4       	brtc	.+2      	; 0x7e66 <__addsf3x+0x1c>
    7e64:	e0 95       	com	r30
    7e66:	0b 2e       	mov	r0, r27
    7e68:	ba 2f       	mov	r27, r26
    7e6a:	a0 2d       	mov	r26, r0
    7e6c:	0b 01       	movw	r0, r22
    7e6e:	b9 01       	movw	r22, r18
    7e70:	90 01       	movw	r18, r0
    7e72:	0c 01       	movw	r0, r24
    7e74:	ca 01       	movw	r24, r20
    7e76:	a0 01       	movw	r20, r0
    7e78:	11 24       	eor	r1, r1
    7e7a:	ff 27       	eor	r31, r31
    7e7c:	59 1b       	sub	r21, r25
    7e7e:	99 f0       	breq	.+38     	; 0x7ea6 <__addsf3x+0x5c>
    7e80:	59 3f       	cpi	r21, 0xF9	; 249
    7e82:	50 f4       	brcc	.+20     	; 0x7e98 <__addsf3x+0x4e>
    7e84:	50 3e       	cpi	r21, 0xE0	; 224
    7e86:	68 f1       	brcs	.+90     	; 0x7ee2 <__addsf3x+0x98>
    7e88:	1a 16       	cp	r1, r26
    7e8a:	f0 40       	sbci	r31, 0x00	; 0
    7e8c:	a2 2f       	mov	r26, r18
    7e8e:	23 2f       	mov	r18, r19
    7e90:	34 2f       	mov	r19, r20
    7e92:	44 27       	eor	r20, r20
    7e94:	58 5f       	subi	r21, 0xF8	; 248
    7e96:	f3 cf       	rjmp	.-26     	; 0x7e7e <__addsf3x+0x34>
    7e98:	46 95       	lsr	r20
    7e9a:	37 95       	ror	r19
    7e9c:	27 95       	ror	r18
    7e9e:	a7 95       	ror	r26
    7ea0:	f0 40       	sbci	r31, 0x00	; 0
    7ea2:	53 95       	inc	r21
    7ea4:	c9 f7       	brne	.-14     	; 0x7e98 <__addsf3x+0x4e>
    7ea6:	7e f4       	brtc	.+30     	; 0x7ec6 <__addsf3x+0x7c>
    7ea8:	1f 16       	cp	r1, r31
    7eaa:	ba 0b       	sbc	r27, r26
    7eac:	62 0b       	sbc	r22, r18
    7eae:	73 0b       	sbc	r23, r19
    7eb0:	84 0b       	sbc	r24, r20
    7eb2:	ba f0       	brmi	.+46     	; 0x7ee2 <__addsf3x+0x98>
    7eb4:	91 50       	subi	r25, 0x01	; 1
    7eb6:	a1 f0       	breq	.+40     	; 0x7ee0 <__addsf3x+0x96>
    7eb8:	ff 0f       	add	r31, r31
    7eba:	bb 1f       	adc	r27, r27
    7ebc:	66 1f       	adc	r22, r22
    7ebe:	77 1f       	adc	r23, r23
    7ec0:	88 1f       	adc	r24, r24
    7ec2:	c2 f7       	brpl	.-16     	; 0x7eb4 <__addsf3x+0x6a>
    7ec4:	0e c0       	rjmp	.+28     	; 0x7ee2 <__addsf3x+0x98>
    7ec6:	ba 0f       	add	r27, r26
    7ec8:	62 1f       	adc	r22, r18
    7eca:	73 1f       	adc	r23, r19
    7ecc:	84 1f       	adc	r24, r20
    7ece:	48 f4       	brcc	.+18     	; 0x7ee2 <__addsf3x+0x98>
    7ed0:	87 95       	ror	r24
    7ed2:	77 95       	ror	r23
    7ed4:	67 95       	ror	r22
    7ed6:	b7 95       	ror	r27
    7ed8:	f7 95       	ror	r31
    7eda:	9e 3f       	cpi	r25, 0xFE	; 254
    7edc:	08 f0       	brcs	.+2      	; 0x7ee0 <__addsf3x+0x96>
    7ede:	b3 cf       	rjmp	.-154    	; 0x7e46 <__addsf3+0x1e>
    7ee0:	93 95       	inc	r25
    7ee2:	88 0f       	add	r24, r24
    7ee4:	08 f0       	brcs	.+2      	; 0x7ee8 <__addsf3x+0x9e>
    7ee6:	99 27       	eor	r25, r25
    7ee8:	ee 0f       	add	r30, r30
    7eea:	97 95       	ror	r25
    7eec:	87 95       	ror	r24
    7eee:	08 95       	ret

00007ef0 <__cmpsf2>:
    7ef0:	ef d0       	rcall	.+478    	; 0x80d0 <__fp_cmp>
    7ef2:	08 f4       	brcc	.+2      	; 0x7ef6 <__cmpsf2+0x6>
    7ef4:	81 e0       	ldi	r24, 0x01	; 1
    7ef6:	08 95       	ret

00007ef8 <cos>:
    7ef8:	50 d1       	rcall	.+672    	; 0x819a <__fp_rempio2>
    7efa:	e3 95       	inc	r30
    7efc:	86 c1       	rjmp	.+780    	; 0x820a <__fp_sinus>

00007efe <__divsf3>:
    7efe:	0c d0       	rcall	.+24     	; 0x7f18 <__divsf3x>
    7f00:	73 c1       	rjmp	.+742    	; 0x81e8 <__fp_round>
    7f02:	43 d1       	rcall	.+646    	; 0x818a <__fp_pscB>
    7f04:	40 f0       	brcs	.+16     	; 0x7f16 <__divsf3+0x18>
    7f06:	3a d1       	rcall	.+628    	; 0x817c <__fp_pscA>
    7f08:	30 f0       	brcs	.+12     	; 0x7f16 <__divsf3+0x18>
    7f0a:	21 f4       	brne	.+8      	; 0x7f14 <__divsf3+0x16>
    7f0c:	5f 3f       	cpi	r21, 0xFF	; 255
    7f0e:	19 f0       	breq	.+6      	; 0x7f16 <__divsf3+0x18>
    7f10:	03 c1       	rjmp	.+518    	; 0x8118 <__fp_inf>
    7f12:	51 11       	cpse	r21, r1
    7f14:	c5 c1       	rjmp	.+906    	; 0x82a0 <__fp_szero>
    7f16:	2f c1       	rjmp	.+606    	; 0x8176 <__fp_nan>

00007f18 <__divsf3x>:
    7f18:	89 d1       	rcall	.+786    	; 0x822c <__fp_split3>
    7f1a:	98 f3       	brcs	.-26     	; 0x7f02 <__divsf3+0x4>

00007f1c <__divsf3_pse>:
    7f1c:	99 23       	and	r25, r25
    7f1e:	c9 f3       	breq	.-14     	; 0x7f12 <__divsf3+0x14>
    7f20:	55 23       	and	r21, r21
    7f22:	b1 f3       	breq	.-20     	; 0x7f10 <__divsf3+0x12>
    7f24:	95 1b       	sub	r25, r21
    7f26:	55 0b       	sbc	r21, r21
    7f28:	bb 27       	eor	r27, r27
    7f2a:	aa 27       	eor	r26, r26
    7f2c:	62 17       	cp	r22, r18
    7f2e:	73 07       	cpc	r23, r19
    7f30:	84 07       	cpc	r24, r20
    7f32:	38 f0       	brcs	.+14     	; 0x7f42 <__divsf3_pse+0x26>
    7f34:	9f 5f       	subi	r25, 0xFF	; 255
    7f36:	5f 4f       	sbci	r21, 0xFF	; 255
    7f38:	22 0f       	add	r18, r18
    7f3a:	33 1f       	adc	r19, r19
    7f3c:	44 1f       	adc	r20, r20
    7f3e:	aa 1f       	adc	r26, r26
    7f40:	a9 f3       	breq	.-22     	; 0x7f2c <__divsf3_pse+0x10>
    7f42:	33 d0       	rcall	.+102    	; 0x7faa <__divsf3_pse+0x8e>
    7f44:	0e 2e       	mov	r0, r30
    7f46:	3a f0       	brmi	.+14     	; 0x7f56 <__divsf3_pse+0x3a>
    7f48:	e0 e8       	ldi	r30, 0x80	; 128
    7f4a:	30 d0       	rcall	.+96     	; 0x7fac <__divsf3_pse+0x90>
    7f4c:	91 50       	subi	r25, 0x01	; 1
    7f4e:	50 40       	sbci	r21, 0x00	; 0
    7f50:	e6 95       	lsr	r30
    7f52:	00 1c       	adc	r0, r0
    7f54:	ca f7       	brpl	.-14     	; 0x7f48 <__divsf3_pse+0x2c>
    7f56:	29 d0       	rcall	.+82     	; 0x7faa <__divsf3_pse+0x8e>
    7f58:	fe 2f       	mov	r31, r30
    7f5a:	27 d0       	rcall	.+78     	; 0x7faa <__divsf3_pse+0x8e>
    7f5c:	66 0f       	add	r22, r22
    7f5e:	77 1f       	adc	r23, r23
    7f60:	88 1f       	adc	r24, r24
    7f62:	bb 1f       	adc	r27, r27
    7f64:	26 17       	cp	r18, r22
    7f66:	37 07       	cpc	r19, r23
    7f68:	48 07       	cpc	r20, r24
    7f6a:	ab 07       	cpc	r26, r27
    7f6c:	b0 e8       	ldi	r27, 0x80	; 128
    7f6e:	09 f0       	breq	.+2      	; 0x7f72 <__divsf3_pse+0x56>
    7f70:	bb 0b       	sbc	r27, r27
    7f72:	80 2d       	mov	r24, r0
    7f74:	bf 01       	movw	r22, r30
    7f76:	ff 27       	eor	r31, r31
    7f78:	93 58       	subi	r25, 0x83	; 131
    7f7a:	5f 4f       	sbci	r21, 0xFF	; 255
    7f7c:	2a f0       	brmi	.+10     	; 0x7f88 <__divsf3_pse+0x6c>
    7f7e:	9e 3f       	cpi	r25, 0xFE	; 254
    7f80:	51 05       	cpc	r21, r1
    7f82:	68 f0       	brcs	.+26     	; 0x7f9e <__divsf3_pse+0x82>
    7f84:	c9 c0       	rjmp	.+402    	; 0x8118 <__fp_inf>
    7f86:	8c c1       	rjmp	.+792    	; 0x82a0 <__fp_szero>
    7f88:	5f 3f       	cpi	r21, 0xFF	; 255
    7f8a:	ec f3       	brlt	.-6      	; 0x7f86 <__divsf3_pse+0x6a>
    7f8c:	98 3e       	cpi	r25, 0xE8	; 232
    7f8e:	dc f3       	brlt	.-10     	; 0x7f86 <__divsf3_pse+0x6a>
    7f90:	86 95       	lsr	r24
    7f92:	77 95       	ror	r23
    7f94:	67 95       	ror	r22
    7f96:	b7 95       	ror	r27
    7f98:	f7 95       	ror	r31
    7f9a:	9f 5f       	subi	r25, 0xFF	; 255
    7f9c:	c9 f7       	brne	.-14     	; 0x7f90 <__divsf3_pse+0x74>
    7f9e:	88 0f       	add	r24, r24
    7fa0:	91 1d       	adc	r25, r1
    7fa2:	96 95       	lsr	r25
    7fa4:	87 95       	ror	r24
    7fa6:	97 f9       	bld	r25, 7
    7fa8:	08 95       	ret
    7faa:	e1 e0       	ldi	r30, 0x01	; 1
    7fac:	66 0f       	add	r22, r22
    7fae:	77 1f       	adc	r23, r23
    7fb0:	88 1f       	adc	r24, r24
    7fb2:	bb 1f       	adc	r27, r27
    7fb4:	62 17       	cp	r22, r18
    7fb6:	73 07       	cpc	r23, r19
    7fb8:	84 07       	cpc	r24, r20
    7fba:	ba 07       	cpc	r27, r26
    7fbc:	20 f0       	brcs	.+8      	; 0x7fc6 <__divsf3_pse+0xaa>
    7fbe:	62 1b       	sub	r22, r18
    7fc0:	73 0b       	sbc	r23, r19
    7fc2:	84 0b       	sbc	r24, r20
    7fc4:	ba 0b       	sbc	r27, r26
    7fc6:	ee 1f       	adc	r30, r30
    7fc8:	88 f7       	brcc	.-30     	; 0x7fac <__divsf3_pse+0x90>
    7fca:	e0 95       	com	r30
    7fcc:	08 95       	ret

00007fce <__fixsfsi>:
    7fce:	04 d0       	rcall	.+8      	; 0x7fd8 <__fixunssfsi>
    7fd0:	68 94       	set
    7fd2:	b1 11       	cpse	r27, r1
    7fd4:	65 c1       	rjmp	.+714    	; 0x82a0 <__fp_szero>
    7fd6:	08 95       	ret

00007fd8 <__fixunssfsi>:
    7fd8:	31 d1       	rcall	.+610    	; 0x823c <__fp_splitA>
    7fda:	88 f0       	brcs	.+34     	; 0x7ffe <__fixunssfsi+0x26>
    7fdc:	9f 57       	subi	r25, 0x7F	; 127
    7fde:	90 f0       	brcs	.+36     	; 0x8004 <__fixunssfsi+0x2c>
    7fe0:	b9 2f       	mov	r27, r25
    7fe2:	99 27       	eor	r25, r25
    7fe4:	b7 51       	subi	r27, 0x17	; 23
    7fe6:	a0 f0       	brcs	.+40     	; 0x8010 <__fixunssfsi+0x38>
    7fe8:	d1 f0       	breq	.+52     	; 0x801e <__fixunssfsi+0x46>
    7fea:	66 0f       	add	r22, r22
    7fec:	77 1f       	adc	r23, r23
    7fee:	88 1f       	adc	r24, r24
    7ff0:	99 1f       	adc	r25, r25
    7ff2:	1a f0       	brmi	.+6      	; 0x7ffa <__fixunssfsi+0x22>
    7ff4:	ba 95       	dec	r27
    7ff6:	c9 f7       	brne	.-14     	; 0x7fea <__fixunssfsi+0x12>
    7ff8:	12 c0       	rjmp	.+36     	; 0x801e <__fixunssfsi+0x46>
    7ffa:	b1 30       	cpi	r27, 0x01	; 1
    7ffc:	81 f0       	breq	.+32     	; 0x801e <__fixunssfsi+0x46>
    7ffe:	4f d1       	rcall	.+670    	; 0x829e <__fp_zero>
    8000:	b1 e0       	ldi	r27, 0x01	; 1
    8002:	08 95       	ret
    8004:	4c c1       	rjmp	.+664    	; 0x829e <__fp_zero>
    8006:	67 2f       	mov	r22, r23
    8008:	78 2f       	mov	r23, r24
    800a:	88 27       	eor	r24, r24
    800c:	b8 5f       	subi	r27, 0xF8	; 248
    800e:	39 f0       	breq	.+14     	; 0x801e <__fixunssfsi+0x46>
    8010:	b9 3f       	cpi	r27, 0xF9	; 249
    8012:	cc f3       	brlt	.-14     	; 0x8006 <__fixunssfsi+0x2e>
    8014:	86 95       	lsr	r24
    8016:	77 95       	ror	r23
    8018:	67 95       	ror	r22
    801a:	b3 95       	inc	r27
    801c:	d9 f7       	brne	.-10     	; 0x8014 <__fixunssfsi+0x3c>
    801e:	3e f4       	brtc	.+14     	; 0x802e <__fixunssfsi+0x56>
    8020:	90 95       	com	r25
    8022:	80 95       	com	r24
    8024:	70 95       	com	r23
    8026:	61 95       	neg	r22
    8028:	7f 4f       	sbci	r23, 0xFF	; 255
    802a:	8f 4f       	sbci	r24, 0xFF	; 255
    802c:	9f 4f       	sbci	r25, 0xFF	; 255
    802e:	08 95       	ret

00008030 <__floatunsisf>:
    8030:	e8 94       	clt
    8032:	09 c0       	rjmp	.+18     	; 0x8046 <__floatsisf+0x12>

00008034 <__floatsisf>:
    8034:	97 fb       	bst	r25, 7
    8036:	3e f4       	brtc	.+14     	; 0x8046 <__floatsisf+0x12>
    8038:	90 95       	com	r25
    803a:	80 95       	com	r24
    803c:	70 95       	com	r23
    803e:	61 95       	neg	r22
    8040:	7f 4f       	sbci	r23, 0xFF	; 255
    8042:	8f 4f       	sbci	r24, 0xFF	; 255
    8044:	9f 4f       	sbci	r25, 0xFF	; 255
    8046:	99 23       	and	r25, r25
    8048:	a9 f0       	breq	.+42     	; 0x8074 <__floatsisf+0x40>
    804a:	f9 2f       	mov	r31, r25
    804c:	96 e9       	ldi	r25, 0x96	; 150
    804e:	bb 27       	eor	r27, r27
    8050:	93 95       	inc	r25
    8052:	f6 95       	lsr	r31
    8054:	87 95       	ror	r24
    8056:	77 95       	ror	r23
    8058:	67 95       	ror	r22
    805a:	b7 95       	ror	r27
    805c:	f1 11       	cpse	r31, r1
    805e:	f8 cf       	rjmp	.-16     	; 0x8050 <__floatsisf+0x1c>
    8060:	fa f4       	brpl	.+62     	; 0x80a0 <__floatsisf+0x6c>
    8062:	bb 0f       	add	r27, r27
    8064:	11 f4       	brne	.+4      	; 0x806a <__floatsisf+0x36>
    8066:	60 ff       	sbrs	r22, 0
    8068:	1b c0       	rjmp	.+54     	; 0x80a0 <__floatsisf+0x6c>
    806a:	6f 5f       	subi	r22, 0xFF	; 255
    806c:	7f 4f       	sbci	r23, 0xFF	; 255
    806e:	8f 4f       	sbci	r24, 0xFF	; 255
    8070:	9f 4f       	sbci	r25, 0xFF	; 255
    8072:	16 c0       	rjmp	.+44     	; 0x80a0 <__floatsisf+0x6c>
    8074:	88 23       	and	r24, r24
    8076:	11 f0       	breq	.+4      	; 0x807c <__floatsisf+0x48>
    8078:	96 e9       	ldi	r25, 0x96	; 150
    807a:	11 c0       	rjmp	.+34     	; 0x809e <__floatsisf+0x6a>
    807c:	77 23       	and	r23, r23
    807e:	21 f0       	breq	.+8      	; 0x8088 <__floatsisf+0x54>
    8080:	9e e8       	ldi	r25, 0x8E	; 142
    8082:	87 2f       	mov	r24, r23
    8084:	76 2f       	mov	r23, r22
    8086:	05 c0       	rjmp	.+10     	; 0x8092 <__floatsisf+0x5e>
    8088:	66 23       	and	r22, r22
    808a:	71 f0       	breq	.+28     	; 0x80a8 <__floatsisf+0x74>
    808c:	96 e8       	ldi	r25, 0x86	; 134
    808e:	86 2f       	mov	r24, r22
    8090:	70 e0       	ldi	r23, 0x00	; 0
    8092:	60 e0       	ldi	r22, 0x00	; 0
    8094:	2a f0       	brmi	.+10     	; 0x80a0 <__floatsisf+0x6c>
    8096:	9a 95       	dec	r25
    8098:	66 0f       	add	r22, r22
    809a:	77 1f       	adc	r23, r23
    809c:	88 1f       	adc	r24, r24
    809e:	da f7       	brpl	.-10     	; 0x8096 <__floatsisf+0x62>
    80a0:	88 0f       	add	r24, r24
    80a2:	96 95       	lsr	r25
    80a4:	87 95       	ror	r24
    80a6:	97 f9       	bld	r25, 7
    80a8:	08 95       	ret

000080aa <floor>:
    80aa:	e2 d0       	rcall	.+452    	; 0x8270 <__fp_trunc>
    80ac:	80 f0       	brcs	.+32     	; 0x80ce <floor+0x24>
    80ae:	9f 37       	cpi	r25, 0x7F	; 127
    80b0:	40 f4       	brcc	.+16     	; 0x80c2 <floor+0x18>
    80b2:	91 11       	cpse	r25, r1
    80b4:	0e f0       	brts	.+2      	; 0x80b8 <floor+0xe>
    80b6:	f4 c0       	rjmp	.+488    	; 0x82a0 <__fp_szero>
    80b8:	60 e0       	ldi	r22, 0x00	; 0
    80ba:	70 e0       	ldi	r23, 0x00	; 0
    80bc:	80 e8       	ldi	r24, 0x80	; 128
    80be:	9f eb       	ldi	r25, 0xBF	; 191
    80c0:	08 95       	ret
    80c2:	26 f4       	brtc	.+8      	; 0x80cc <floor+0x22>
    80c4:	1b 16       	cp	r1, r27
    80c6:	61 1d       	adc	r22, r1
    80c8:	71 1d       	adc	r23, r1
    80ca:	81 1d       	adc	r24, r1
    80cc:	2b c0       	rjmp	.+86     	; 0x8124 <__fp_mintl>
    80ce:	45 c0       	rjmp	.+138    	; 0x815a <__fp_mpack>

000080d0 <__fp_cmp>:
    80d0:	99 0f       	add	r25, r25
    80d2:	00 08       	sbc	r0, r0
    80d4:	55 0f       	add	r21, r21
    80d6:	aa 0b       	sbc	r26, r26
    80d8:	e0 e8       	ldi	r30, 0x80	; 128
    80da:	fe ef       	ldi	r31, 0xFE	; 254
    80dc:	16 16       	cp	r1, r22
    80de:	17 06       	cpc	r1, r23
    80e0:	e8 07       	cpc	r30, r24
    80e2:	f9 07       	cpc	r31, r25
    80e4:	c0 f0       	brcs	.+48     	; 0x8116 <__fp_cmp+0x46>
    80e6:	12 16       	cp	r1, r18
    80e8:	13 06       	cpc	r1, r19
    80ea:	e4 07       	cpc	r30, r20
    80ec:	f5 07       	cpc	r31, r21
    80ee:	98 f0       	brcs	.+38     	; 0x8116 <__fp_cmp+0x46>
    80f0:	62 1b       	sub	r22, r18
    80f2:	73 0b       	sbc	r23, r19
    80f4:	84 0b       	sbc	r24, r20
    80f6:	95 0b       	sbc	r25, r21
    80f8:	39 f4       	brne	.+14     	; 0x8108 <__fp_cmp+0x38>
    80fa:	0a 26       	eor	r0, r26
    80fc:	61 f0       	breq	.+24     	; 0x8116 <__fp_cmp+0x46>
    80fe:	23 2b       	or	r18, r19
    8100:	24 2b       	or	r18, r20
    8102:	25 2b       	or	r18, r21
    8104:	21 f4       	brne	.+8      	; 0x810e <__fp_cmp+0x3e>
    8106:	08 95       	ret
    8108:	0a 26       	eor	r0, r26
    810a:	09 f4       	brne	.+2      	; 0x810e <__fp_cmp+0x3e>
    810c:	a1 40       	sbci	r26, 0x01	; 1
    810e:	a6 95       	lsr	r26
    8110:	8f ef       	ldi	r24, 0xFF	; 255
    8112:	81 1d       	adc	r24, r1
    8114:	81 1d       	adc	r24, r1
    8116:	08 95       	ret

00008118 <__fp_inf>:
    8118:	97 f9       	bld	r25, 7
    811a:	9f 67       	ori	r25, 0x7F	; 127
    811c:	80 e8       	ldi	r24, 0x80	; 128
    811e:	70 e0       	ldi	r23, 0x00	; 0
    8120:	60 e0       	ldi	r22, 0x00	; 0
    8122:	08 95       	ret

00008124 <__fp_mintl>:
    8124:	88 23       	and	r24, r24
    8126:	71 f4       	brne	.+28     	; 0x8144 <__fp_mintl+0x20>
    8128:	77 23       	and	r23, r23
    812a:	21 f0       	breq	.+8      	; 0x8134 <__fp_mintl+0x10>
    812c:	98 50       	subi	r25, 0x08	; 8
    812e:	87 2b       	or	r24, r23
    8130:	76 2f       	mov	r23, r22
    8132:	07 c0       	rjmp	.+14     	; 0x8142 <__fp_mintl+0x1e>
    8134:	66 23       	and	r22, r22
    8136:	11 f4       	brne	.+4      	; 0x813c <__fp_mintl+0x18>
    8138:	99 27       	eor	r25, r25
    813a:	0d c0       	rjmp	.+26     	; 0x8156 <__fp_mintl+0x32>
    813c:	90 51       	subi	r25, 0x10	; 16
    813e:	86 2b       	or	r24, r22
    8140:	70 e0       	ldi	r23, 0x00	; 0
    8142:	60 e0       	ldi	r22, 0x00	; 0
    8144:	2a f0       	brmi	.+10     	; 0x8150 <__fp_mintl+0x2c>
    8146:	9a 95       	dec	r25
    8148:	66 0f       	add	r22, r22
    814a:	77 1f       	adc	r23, r23
    814c:	88 1f       	adc	r24, r24
    814e:	da f7       	brpl	.-10     	; 0x8146 <__fp_mintl+0x22>
    8150:	88 0f       	add	r24, r24
    8152:	96 95       	lsr	r25
    8154:	87 95       	ror	r24
    8156:	97 f9       	bld	r25, 7
    8158:	08 95       	ret

0000815a <__fp_mpack>:
    815a:	9f 3f       	cpi	r25, 0xFF	; 255
    815c:	31 f0       	breq	.+12     	; 0x816a <__fp_mpack_finite+0xc>

0000815e <__fp_mpack_finite>:
    815e:	91 50       	subi	r25, 0x01	; 1
    8160:	20 f4       	brcc	.+8      	; 0x816a <__fp_mpack_finite+0xc>
    8162:	87 95       	ror	r24
    8164:	77 95       	ror	r23
    8166:	67 95       	ror	r22
    8168:	b7 95       	ror	r27
    816a:	88 0f       	add	r24, r24
    816c:	91 1d       	adc	r25, r1
    816e:	96 95       	lsr	r25
    8170:	87 95       	ror	r24
    8172:	97 f9       	bld	r25, 7
    8174:	08 95       	ret

00008176 <__fp_nan>:
    8176:	9f ef       	ldi	r25, 0xFF	; 255
    8178:	80 ec       	ldi	r24, 0xC0	; 192
    817a:	08 95       	ret

0000817c <__fp_pscA>:
    817c:	00 24       	eor	r0, r0
    817e:	0a 94       	dec	r0
    8180:	16 16       	cp	r1, r22
    8182:	17 06       	cpc	r1, r23
    8184:	18 06       	cpc	r1, r24
    8186:	09 06       	cpc	r0, r25
    8188:	08 95       	ret

0000818a <__fp_pscB>:
    818a:	00 24       	eor	r0, r0
    818c:	0a 94       	dec	r0
    818e:	12 16       	cp	r1, r18
    8190:	13 06       	cpc	r1, r19
    8192:	14 06       	cpc	r1, r20
    8194:	05 06       	cpc	r0, r21
    8196:	08 95       	ret
    8198:	ee cf       	rjmp	.-36     	; 0x8176 <__fp_nan>

0000819a <__fp_rempio2>:
    819a:	50 d0       	rcall	.+160    	; 0x823c <__fp_splitA>
    819c:	e8 f3       	brcs	.-6      	; 0x8198 <__fp_pscB+0xe>
    819e:	e8 94       	clt
    81a0:	e0 e0       	ldi	r30, 0x00	; 0
    81a2:	bb 27       	eor	r27, r27
    81a4:	9f 57       	subi	r25, 0x7F	; 127
    81a6:	f0 f0       	brcs	.+60     	; 0x81e4 <__fp_rempio2+0x4a>
    81a8:	2a ed       	ldi	r18, 0xDA	; 218
    81aa:	3f e0       	ldi	r19, 0x0F	; 15
    81ac:	49 ec       	ldi	r20, 0xC9	; 201
    81ae:	06 c0       	rjmp	.+12     	; 0x81bc <__fp_rempio2+0x22>
    81b0:	ee 0f       	add	r30, r30
    81b2:	bb 0f       	add	r27, r27
    81b4:	66 1f       	adc	r22, r22
    81b6:	77 1f       	adc	r23, r23
    81b8:	88 1f       	adc	r24, r24
    81ba:	28 f0       	brcs	.+10     	; 0x81c6 <__fp_rempio2+0x2c>
    81bc:	b2 3a       	cpi	r27, 0xA2	; 162
    81be:	62 07       	cpc	r22, r18
    81c0:	73 07       	cpc	r23, r19
    81c2:	84 07       	cpc	r24, r20
    81c4:	28 f0       	brcs	.+10     	; 0x81d0 <__fp_rempio2+0x36>
    81c6:	b2 5a       	subi	r27, 0xA2	; 162
    81c8:	62 0b       	sbc	r22, r18
    81ca:	73 0b       	sbc	r23, r19
    81cc:	84 0b       	sbc	r24, r20
    81ce:	e3 95       	inc	r30
    81d0:	9a 95       	dec	r25
    81d2:	72 f7       	brpl	.-36     	; 0x81b0 <__fp_rempio2+0x16>
    81d4:	80 38       	cpi	r24, 0x80	; 128
    81d6:	30 f4       	brcc	.+12     	; 0x81e4 <__fp_rempio2+0x4a>
    81d8:	9a 95       	dec	r25
    81da:	bb 0f       	add	r27, r27
    81dc:	66 1f       	adc	r22, r22
    81de:	77 1f       	adc	r23, r23
    81e0:	88 1f       	adc	r24, r24
    81e2:	d2 f7       	brpl	.-12     	; 0x81d8 <__fp_rempio2+0x3e>
    81e4:	90 48       	sbci	r25, 0x80	; 128
    81e6:	bb cf       	rjmp	.-138    	; 0x815e <__fp_mpack_finite>

000081e8 <__fp_round>:
    81e8:	09 2e       	mov	r0, r25
    81ea:	03 94       	inc	r0
    81ec:	00 0c       	add	r0, r0
    81ee:	11 f4       	brne	.+4      	; 0x81f4 <__fp_round+0xc>
    81f0:	88 23       	and	r24, r24
    81f2:	52 f0       	brmi	.+20     	; 0x8208 <__fp_round+0x20>
    81f4:	bb 0f       	add	r27, r27
    81f6:	40 f4       	brcc	.+16     	; 0x8208 <__fp_round+0x20>
    81f8:	bf 2b       	or	r27, r31
    81fa:	11 f4       	brne	.+4      	; 0x8200 <__fp_round+0x18>
    81fc:	60 ff       	sbrs	r22, 0
    81fe:	04 c0       	rjmp	.+8      	; 0x8208 <__fp_round+0x20>
    8200:	6f 5f       	subi	r22, 0xFF	; 255
    8202:	7f 4f       	sbci	r23, 0xFF	; 255
    8204:	8f 4f       	sbci	r24, 0xFF	; 255
    8206:	9f 4f       	sbci	r25, 0xFF	; 255
    8208:	08 95       	ret

0000820a <__fp_sinus>:
    820a:	ef 93       	push	r30
    820c:	e0 ff       	sbrs	r30, 0
    820e:	06 c0       	rjmp	.+12     	; 0x821c <__fp_sinus+0x12>
    8210:	a2 ea       	ldi	r26, 0xA2	; 162
    8212:	2a ed       	ldi	r18, 0xDA	; 218
    8214:	3f e0       	ldi	r19, 0x0F	; 15
    8216:	49 ec       	ldi	r20, 0xC9	; 201
    8218:	5f eb       	ldi	r21, 0xBF	; 191
    821a:	17 de       	rcall	.-978    	; 0x7e4a <__addsf3x>
    821c:	e5 df       	rcall	.-54     	; 0x81e8 <__fp_round>
    821e:	0f 90       	pop	r0
    8220:	03 94       	inc	r0
    8222:	01 fc       	sbrc	r0, 1
    8224:	90 58       	subi	r25, 0x80	; 128
    8226:	e4 ee       	ldi	r30, 0xE4	; 228
    8228:	f0 e0       	ldi	r31, 0x00	; 0
    822a:	98 c1       	rjmp	.+816    	; 0x855c <__fp_powsodd>

0000822c <__fp_split3>:
    822c:	57 fd       	sbrc	r21, 7
    822e:	90 58       	subi	r25, 0x80	; 128
    8230:	44 0f       	add	r20, r20
    8232:	55 1f       	adc	r21, r21
    8234:	59 f0       	breq	.+22     	; 0x824c <__fp_splitA+0x10>
    8236:	5f 3f       	cpi	r21, 0xFF	; 255
    8238:	71 f0       	breq	.+28     	; 0x8256 <__fp_splitA+0x1a>
    823a:	47 95       	ror	r20

0000823c <__fp_splitA>:
    823c:	88 0f       	add	r24, r24
    823e:	97 fb       	bst	r25, 7
    8240:	99 1f       	adc	r25, r25
    8242:	61 f0       	breq	.+24     	; 0x825c <__fp_splitA+0x20>
    8244:	9f 3f       	cpi	r25, 0xFF	; 255
    8246:	79 f0       	breq	.+30     	; 0x8266 <__fp_splitA+0x2a>
    8248:	87 95       	ror	r24
    824a:	08 95       	ret
    824c:	12 16       	cp	r1, r18
    824e:	13 06       	cpc	r1, r19
    8250:	14 06       	cpc	r1, r20
    8252:	55 1f       	adc	r21, r21
    8254:	f2 cf       	rjmp	.-28     	; 0x823a <__fp_split3+0xe>
    8256:	46 95       	lsr	r20
    8258:	f1 df       	rcall	.-30     	; 0x823c <__fp_splitA>
    825a:	08 c0       	rjmp	.+16     	; 0x826c <__fp_splitA+0x30>
    825c:	16 16       	cp	r1, r22
    825e:	17 06       	cpc	r1, r23
    8260:	18 06       	cpc	r1, r24
    8262:	99 1f       	adc	r25, r25
    8264:	f1 cf       	rjmp	.-30     	; 0x8248 <__fp_splitA+0xc>
    8266:	86 95       	lsr	r24
    8268:	71 05       	cpc	r23, r1
    826a:	61 05       	cpc	r22, r1
    826c:	08 94       	sec
    826e:	08 95       	ret

00008270 <__fp_trunc>:
    8270:	e5 df       	rcall	.-54     	; 0x823c <__fp_splitA>
    8272:	a0 f0       	brcs	.+40     	; 0x829c <__fp_trunc+0x2c>
    8274:	be e7       	ldi	r27, 0x7E	; 126
    8276:	b9 17       	cp	r27, r25
    8278:	88 f4       	brcc	.+34     	; 0x829c <__fp_trunc+0x2c>
    827a:	bb 27       	eor	r27, r27
    827c:	9f 38       	cpi	r25, 0x8F	; 143
    827e:	60 f4       	brcc	.+24     	; 0x8298 <__fp_trunc+0x28>
    8280:	16 16       	cp	r1, r22
    8282:	b1 1d       	adc	r27, r1
    8284:	67 2f       	mov	r22, r23
    8286:	78 2f       	mov	r23, r24
    8288:	88 27       	eor	r24, r24
    828a:	98 5f       	subi	r25, 0xF8	; 248
    828c:	f7 cf       	rjmp	.-18     	; 0x827c <__fp_trunc+0xc>
    828e:	86 95       	lsr	r24
    8290:	77 95       	ror	r23
    8292:	67 95       	ror	r22
    8294:	b1 1d       	adc	r27, r1
    8296:	93 95       	inc	r25
    8298:	96 39       	cpi	r25, 0x96	; 150
    829a:	c8 f3       	brcs	.-14     	; 0x828e <__fp_trunc+0x1e>
    829c:	08 95       	ret

0000829e <__fp_zero>:
    829e:	e8 94       	clt

000082a0 <__fp_szero>:
    82a0:	bb 27       	eor	r27, r27
    82a2:	66 27       	eor	r22, r22
    82a4:	77 27       	eor	r23, r23
    82a6:	cb 01       	movw	r24, r22
    82a8:	97 f9       	bld	r25, 7
    82aa:	08 95       	ret

000082ac <__gesf2>:
    82ac:	11 df       	rcall	.-478    	; 0x80d0 <__fp_cmp>
    82ae:	08 f4       	brcc	.+2      	; 0x82b2 <__gesf2+0x6>
    82b0:	8f ef       	ldi	r24, 0xFF	; 255
    82b2:	08 95       	ret

000082b4 <__mulsf3>:
    82b4:	0b d0       	rcall	.+22     	; 0x82cc <__mulsf3x>
    82b6:	98 cf       	rjmp	.-208    	; 0x81e8 <__fp_round>
    82b8:	61 df       	rcall	.-318    	; 0x817c <__fp_pscA>
    82ba:	28 f0       	brcs	.+10     	; 0x82c6 <__mulsf3+0x12>
    82bc:	66 df       	rcall	.-308    	; 0x818a <__fp_pscB>
    82be:	18 f0       	brcs	.+6      	; 0x82c6 <__mulsf3+0x12>
    82c0:	95 23       	and	r25, r21
    82c2:	09 f0       	breq	.+2      	; 0x82c6 <__mulsf3+0x12>
    82c4:	29 cf       	rjmp	.-430    	; 0x8118 <__fp_inf>
    82c6:	57 cf       	rjmp	.-338    	; 0x8176 <__fp_nan>
    82c8:	11 24       	eor	r1, r1
    82ca:	ea cf       	rjmp	.-44     	; 0x82a0 <__fp_szero>

000082cc <__mulsf3x>:
    82cc:	af df       	rcall	.-162    	; 0x822c <__fp_split3>
    82ce:	a0 f3       	brcs	.-24     	; 0x82b8 <__mulsf3+0x4>

000082d0 <__mulsf3_pse>:
    82d0:	95 9f       	mul	r25, r21
    82d2:	d1 f3       	breq	.-12     	; 0x82c8 <__mulsf3+0x14>
    82d4:	95 0f       	add	r25, r21
    82d6:	50 e0       	ldi	r21, 0x00	; 0
    82d8:	55 1f       	adc	r21, r21
    82da:	62 9f       	mul	r22, r18
    82dc:	f0 01       	movw	r30, r0
    82de:	72 9f       	mul	r23, r18
    82e0:	bb 27       	eor	r27, r27
    82e2:	f0 0d       	add	r31, r0
    82e4:	b1 1d       	adc	r27, r1
    82e6:	63 9f       	mul	r22, r19
    82e8:	aa 27       	eor	r26, r26
    82ea:	f0 0d       	add	r31, r0
    82ec:	b1 1d       	adc	r27, r1
    82ee:	aa 1f       	adc	r26, r26
    82f0:	64 9f       	mul	r22, r20
    82f2:	66 27       	eor	r22, r22
    82f4:	b0 0d       	add	r27, r0
    82f6:	a1 1d       	adc	r26, r1
    82f8:	66 1f       	adc	r22, r22
    82fa:	82 9f       	mul	r24, r18
    82fc:	22 27       	eor	r18, r18
    82fe:	b0 0d       	add	r27, r0
    8300:	a1 1d       	adc	r26, r1
    8302:	62 1f       	adc	r22, r18
    8304:	73 9f       	mul	r23, r19
    8306:	b0 0d       	add	r27, r0
    8308:	a1 1d       	adc	r26, r1
    830a:	62 1f       	adc	r22, r18
    830c:	83 9f       	mul	r24, r19
    830e:	a0 0d       	add	r26, r0
    8310:	61 1d       	adc	r22, r1
    8312:	22 1f       	adc	r18, r18
    8314:	74 9f       	mul	r23, r20
    8316:	33 27       	eor	r19, r19
    8318:	a0 0d       	add	r26, r0
    831a:	61 1d       	adc	r22, r1
    831c:	23 1f       	adc	r18, r19
    831e:	84 9f       	mul	r24, r20
    8320:	60 0d       	add	r22, r0
    8322:	21 1d       	adc	r18, r1
    8324:	82 2f       	mov	r24, r18
    8326:	76 2f       	mov	r23, r22
    8328:	6a 2f       	mov	r22, r26
    832a:	11 24       	eor	r1, r1
    832c:	9f 57       	subi	r25, 0x7F	; 127
    832e:	50 40       	sbci	r21, 0x00	; 0
    8330:	8a f0       	brmi	.+34     	; 0x8354 <__mulsf3_pse+0x84>
    8332:	e1 f0       	breq	.+56     	; 0x836c <__mulsf3_pse+0x9c>
    8334:	88 23       	and	r24, r24
    8336:	4a f0       	brmi	.+18     	; 0x834a <__mulsf3_pse+0x7a>
    8338:	ee 0f       	add	r30, r30
    833a:	ff 1f       	adc	r31, r31
    833c:	bb 1f       	adc	r27, r27
    833e:	66 1f       	adc	r22, r22
    8340:	77 1f       	adc	r23, r23
    8342:	88 1f       	adc	r24, r24
    8344:	91 50       	subi	r25, 0x01	; 1
    8346:	50 40       	sbci	r21, 0x00	; 0
    8348:	a9 f7       	brne	.-22     	; 0x8334 <__mulsf3_pse+0x64>
    834a:	9e 3f       	cpi	r25, 0xFE	; 254
    834c:	51 05       	cpc	r21, r1
    834e:	70 f0       	brcs	.+28     	; 0x836c <__mulsf3_pse+0x9c>
    8350:	e3 ce       	rjmp	.-570    	; 0x8118 <__fp_inf>
    8352:	a6 cf       	rjmp	.-180    	; 0x82a0 <__fp_szero>
    8354:	5f 3f       	cpi	r21, 0xFF	; 255
    8356:	ec f3       	brlt	.-6      	; 0x8352 <__mulsf3_pse+0x82>
    8358:	98 3e       	cpi	r25, 0xE8	; 232
    835a:	dc f3       	brlt	.-10     	; 0x8352 <__mulsf3_pse+0x82>
    835c:	86 95       	lsr	r24
    835e:	77 95       	ror	r23
    8360:	67 95       	ror	r22
    8362:	b7 95       	ror	r27
    8364:	f7 95       	ror	r31
    8366:	e7 95       	ror	r30
    8368:	9f 5f       	subi	r25, 0xFF	; 255
    836a:	c1 f7       	brne	.-16     	; 0x835c <__mulsf3_pse+0x8c>
    836c:	fe 2b       	or	r31, r30
    836e:	88 0f       	add	r24, r24
    8370:	91 1d       	adc	r25, r1
    8372:	96 95       	lsr	r25
    8374:	87 95       	ror	r24
    8376:	97 f9       	bld	r25, 7
    8378:	08 95       	ret

0000837a <pow>:
    837a:	fa 01       	movw	r30, r20
    837c:	ee 0f       	add	r30, r30
    837e:	ff 1f       	adc	r31, r31
    8380:	30 96       	adiw	r30, 0x00	; 0
    8382:	21 05       	cpc	r18, r1
    8384:	31 05       	cpc	r19, r1
    8386:	99 f1       	breq	.+102    	; 0x83ee <pow+0x74>
    8388:	61 15       	cp	r22, r1
    838a:	71 05       	cpc	r23, r1
    838c:	61 f4       	brne	.+24     	; 0x83a6 <pow+0x2c>
    838e:	80 38       	cpi	r24, 0x80	; 128
    8390:	bf e3       	ldi	r27, 0x3F	; 63
    8392:	9b 07       	cpc	r25, r27
    8394:	49 f1       	breq	.+82     	; 0x83e8 <pow+0x6e>
    8396:	68 94       	set
    8398:	90 38       	cpi	r25, 0x80	; 128
    839a:	81 05       	cpc	r24, r1
    839c:	61 f0       	breq	.+24     	; 0x83b6 <pow+0x3c>
    839e:	80 38       	cpi	r24, 0x80	; 128
    83a0:	bf ef       	ldi	r27, 0xFF	; 255
    83a2:	9b 07       	cpc	r25, r27
    83a4:	41 f0       	breq	.+16     	; 0x83b6 <pow+0x3c>
    83a6:	99 23       	and	r25, r25
    83a8:	42 f5       	brpl	.+80     	; 0x83fa <pow+0x80>
    83aa:	ff 3f       	cpi	r31, 0xFF	; 255
    83ac:	e1 05       	cpc	r30, r1
    83ae:	31 05       	cpc	r19, r1
    83b0:	21 05       	cpc	r18, r1
    83b2:	11 f1       	breq	.+68     	; 0x83f8 <pow+0x7e>
    83b4:	e8 94       	clt
    83b6:	08 94       	sec
    83b8:	e7 95       	ror	r30
    83ba:	d9 01       	movw	r26, r18
    83bc:	aa 23       	and	r26, r26
    83be:	29 f4       	brne	.+10     	; 0x83ca <pow+0x50>
    83c0:	ab 2f       	mov	r26, r27
    83c2:	be 2f       	mov	r27, r30
    83c4:	f8 5f       	subi	r31, 0xF8	; 248
    83c6:	d0 f3       	brcs	.-12     	; 0x83bc <pow+0x42>
    83c8:	10 c0       	rjmp	.+32     	; 0x83ea <pow+0x70>
    83ca:	ff 5f       	subi	r31, 0xFF	; 255
    83cc:	70 f4       	brcc	.+28     	; 0x83ea <pow+0x70>
    83ce:	a6 95       	lsr	r26
    83d0:	e0 f7       	brcc	.-8      	; 0x83ca <pow+0x50>
    83d2:	f7 39       	cpi	r31, 0x97	; 151
    83d4:	50 f0       	brcs	.+20     	; 0x83ea <pow+0x70>
    83d6:	19 f0       	breq	.+6      	; 0x83de <pow+0x64>
    83d8:	ff 3a       	cpi	r31, 0xAF	; 175
    83da:	38 f4       	brcc	.+14     	; 0x83ea <pow+0x70>
    83dc:	9f 77       	andi	r25, 0x7F	; 127
    83de:	9f 93       	push	r25
    83e0:	0c d0       	rcall	.+24     	; 0x83fa <pow+0x80>
    83e2:	0f 90       	pop	r0
    83e4:	07 fc       	sbrc	r0, 7
    83e6:	90 58       	subi	r25, 0x80	; 128
    83e8:	08 95       	ret
    83ea:	3e f0       	brts	.+14     	; 0x83fa <pow+0x80>
    83ec:	c4 ce       	rjmp	.-632    	; 0x8176 <__fp_nan>
    83ee:	60 e0       	ldi	r22, 0x00	; 0
    83f0:	70 e0       	ldi	r23, 0x00	; 0
    83f2:	80 e8       	ldi	r24, 0x80	; 128
    83f4:	9f e3       	ldi	r25, 0x3F	; 63
    83f6:	08 95       	ret
    83f8:	4f e7       	ldi	r20, 0x7F	; 127
    83fa:	9f 77       	andi	r25, 0x7F	; 127
    83fc:	5f 93       	push	r21
    83fe:	4f 93       	push	r20
    8400:	3f 93       	push	r19
    8402:	2f 93       	push	r18
    8404:	fe d0       	rcall	.+508    	; 0x8602 <log>
    8406:	2f 91       	pop	r18
    8408:	3f 91       	pop	r19
    840a:	4f 91       	pop	r20
    840c:	5f 91       	pop	r21
    840e:	52 df       	rcall	.-348    	; 0x82b4 <__mulsf3>
    8410:	4d c0       	rjmp	.+154    	; 0x84ac <exp>

00008412 <sin>:
    8412:	9f 93       	push	r25
    8414:	c2 de       	rcall	.-636    	; 0x819a <__fp_rempio2>
    8416:	0f 90       	pop	r0
    8418:	07 fc       	sbrc	r0, 7
    841a:	ee 5f       	subi	r30, 0xFE	; 254
    841c:	f6 ce       	rjmp	.-532    	; 0x820a <__fp_sinus>
    841e:	11 f4       	brne	.+4      	; 0x8424 <sin+0x12>
    8420:	0e f4       	brtc	.+2      	; 0x8424 <sin+0x12>
    8422:	a9 ce       	rjmp	.-686    	; 0x8176 <__fp_nan>
    8424:	9a ce       	rjmp	.-716    	; 0x815a <__fp_mpack>

00008426 <sqrt>:
    8426:	0a df       	rcall	.-492    	; 0x823c <__fp_splitA>
    8428:	d0 f3       	brcs	.-12     	; 0x841e <sin+0xc>
    842a:	99 23       	and	r25, r25
    842c:	d9 f3       	breq	.-10     	; 0x8424 <sin+0x12>
    842e:	ce f3       	brts	.-14     	; 0x8422 <sin+0x10>
    8430:	9f 57       	subi	r25, 0x7F	; 127
    8432:	55 0b       	sbc	r21, r21
    8434:	87 ff       	sbrs	r24, 7
    8436:	66 d0       	rcall	.+204    	; 0x8504 <__fp_norm2>
    8438:	00 24       	eor	r0, r0
    843a:	a0 e6       	ldi	r26, 0x60	; 96
    843c:	40 ea       	ldi	r20, 0xA0	; 160
    843e:	90 01       	movw	r18, r0
    8440:	80 58       	subi	r24, 0x80	; 128
    8442:	56 95       	lsr	r21
    8444:	97 95       	ror	r25
    8446:	28 f4       	brcc	.+10     	; 0x8452 <sqrt+0x2c>
    8448:	80 5c       	subi	r24, 0xC0	; 192
    844a:	66 0f       	add	r22, r22
    844c:	77 1f       	adc	r23, r23
    844e:	88 1f       	adc	r24, r24
    8450:	20 f0       	brcs	.+8      	; 0x845a <sqrt+0x34>
    8452:	26 17       	cp	r18, r22
    8454:	37 07       	cpc	r19, r23
    8456:	48 07       	cpc	r20, r24
    8458:	30 f4       	brcc	.+12     	; 0x8466 <sqrt+0x40>
    845a:	62 1b       	sub	r22, r18
    845c:	73 0b       	sbc	r23, r19
    845e:	84 0b       	sbc	r24, r20
    8460:	20 29       	or	r18, r0
    8462:	31 29       	or	r19, r1
    8464:	4a 2b       	or	r20, r26
    8466:	a6 95       	lsr	r26
    8468:	17 94       	ror	r1
    846a:	07 94       	ror	r0
    846c:	20 25       	eor	r18, r0
    846e:	31 25       	eor	r19, r1
    8470:	4a 27       	eor	r20, r26
    8472:	58 f7       	brcc	.-42     	; 0x844a <sqrt+0x24>
    8474:	66 0f       	add	r22, r22
    8476:	77 1f       	adc	r23, r23
    8478:	88 1f       	adc	r24, r24
    847a:	20 f0       	brcs	.+8      	; 0x8484 <sqrt+0x5e>
    847c:	26 17       	cp	r18, r22
    847e:	37 07       	cpc	r19, r23
    8480:	48 07       	cpc	r20, r24
    8482:	30 f4       	brcc	.+12     	; 0x8490 <sqrt+0x6a>
    8484:	62 0b       	sbc	r22, r18
    8486:	73 0b       	sbc	r23, r19
    8488:	84 0b       	sbc	r24, r20
    848a:	20 0d       	add	r18, r0
    848c:	31 1d       	adc	r19, r1
    848e:	41 1d       	adc	r20, r1
    8490:	a0 95       	com	r26
    8492:	81 f7       	brne	.-32     	; 0x8474 <sqrt+0x4e>
    8494:	b9 01       	movw	r22, r18
    8496:	84 2f       	mov	r24, r20
    8498:	91 58       	subi	r25, 0x81	; 129
    849a:	88 0f       	add	r24, r24
    849c:	96 95       	lsr	r25
    849e:	87 95       	ror	r24
    84a0:	08 95       	ret
    84a2:	19 f4       	brne	.+6      	; 0x84aa <sqrt+0x84>
    84a4:	0e f0       	brts	.+2      	; 0x84a8 <sqrt+0x82>
    84a6:	38 ce       	rjmp	.-912    	; 0x8118 <__fp_inf>
    84a8:	fa ce       	rjmp	.-524    	; 0x829e <__fp_zero>
    84aa:	65 ce       	rjmp	.-822    	; 0x8176 <__fp_nan>

000084ac <exp>:
    84ac:	c7 de       	rcall	.-626    	; 0x823c <__fp_splitA>
    84ae:	c8 f3       	brcs	.-14     	; 0x84a2 <sqrt+0x7c>
    84b0:	96 38       	cpi	r25, 0x86	; 134
    84b2:	c0 f7       	brcc	.-16     	; 0x84a4 <sqrt+0x7e>
    84b4:	07 f8       	bld	r0, 7
    84b6:	0f 92       	push	r0
    84b8:	e8 94       	clt
    84ba:	2b e3       	ldi	r18, 0x3B	; 59
    84bc:	3a ea       	ldi	r19, 0xAA	; 170
    84be:	48 eb       	ldi	r20, 0xB8	; 184
    84c0:	5f e7       	ldi	r21, 0x7F	; 127
    84c2:	06 df       	rcall	.-500    	; 0x82d0 <__mulsf3_pse>
    84c4:	0f 92       	push	r0
    84c6:	0f 92       	push	r0
    84c8:	0f 92       	push	r0
    84ca:	4d b7       	in	r20, 0x3d	; 61
    84cc:	5e b7       	in	r21, 0x3e	; 62
    84ce:	0f 92       	push	r0
    84d0:	d8 d0       	rcall	.+432    	; 0x8682 <modf>
    84d2:	e2 e0       	ldi	r30, 0x02	; 2
    84d4:	f1 e0       	ldi	r31, 0x01	; 1
    84d6:	1d d0       	rcall	.+58     	; 0x8512 <__fp_powser>
    84d8:	4f 91       	pop	r20
    84da:	5f 91       	pop	r21
    84dc:	ef 91       	pop	r30
    84de:	ff 91       	pop	r31
    84e0:	e5 95       	asr	r30
    84e2:	ee 1f       	adc	r30, r30
    84e4:	ff 1f       	adc	r31, r31
    84e6:	49 f0       	breq	.+18     	; 0x84fa <exp+0x4e>
    84e8:	fe 57       	subi	r31, 0x7E	; 126
    84ea:	e0 68       	ori	r30, 0x80	; 128
    84ec:	44 27       	eor	r20, r20
    84ee:	ee 0f       	add	r30, r30
    84f0:	44 1f       	adc	r20, r20
    84f2:	fa 95       	dec	r31
    84f4:	e1 f7       	brne	.-8      	; 0x84ee <exp+0x42>
    84f6:	41 95       	neg	r20
    84f8:	55 0b       	sbc	r21, r21
    84fa:	4a d0       	rcall	.+148    	; 0x8590 <ldexp>
    84fc:	0f 90       	pop	r0
    84fe:	07 fe       	sbrs	r0, 7
    8500:	3e c0       	rjmp	.+124    	; 0x857e <inverse>
    8502:	08 95       	ret

00008504 <__fp_norm2>:
    8504:	91 50       	subi	r25, 0x01	; 1
    8506:	50 40       	sbci	r21, 0x00	; 0
    8508:	66 0f       	add	r22, r22
    850a:	77 1f       	adc	r23, r23
    850c:	88 1f       	adc	r24, r24
    850e:	d2 f7       	brpl	.-12     	; 0x8504 <__fp_norm2>
    8510:	08 95       	ret

00008512 <__fp_powser>:
    8512:	df 93       	push	r29
    8514:	cf 93       	push	r28
    8516:	1f 93       	push	r17
    8518:	0f 93       	push	r16
    851a:	ff 92       	push	r15
    851c:	ef 92       	push	r14
    851e:	df 92       	push	r13
    8520:	7b 01       	movw	r14, r22
    8522:	8c 01       	movw	r16, r24
    8524:	68 94       	set
    8526:	05 c0       	rjmp	.+10     	; 0x8532 <__fp_powser+0x20>
    8528:	da 2e       	mov	r13, r26
    852a:	ef 01       	movw	r28, r30
    852c:	cf de       	rcall	.-610    	; 0x82cc <__mulsf3x>
    852e:	fe 01       	movw	r30, r28
    8530:	e8 94       	clt
    8532:	a5 91       	lpm	r26, Z+
    8534:	25 91       	lpm	r18, Z+
    8536:	35 91       	lpm	r19, Z+
    8538:	45 91       	lpm	r20, Z+
    853a:	55 91       	lpm	r21, Z+
    853c:	ae f3       	brts	.-22     	; 0x8528 <__fp_powser+0x16>
    853e:	ef 01       	movw	r28, r30
    8540:	84 dc       	rcall	.-1784   	; 0x7e4a <__addsf3x>
    8542:	fe 01       	movw	r30, r28
    8544:	97 01       	movw	r18, r14
    8546:	a8 01       	movw	r20, r16
    8548:	da 94       	dec	r13
    854a:	79 f7       	brne	.-34     	; 0x852a <__fp_powser+0x18>
    854c:	df 90       	pop	r13
    854e:	ef 90       	pop	r14
    8550:	ff 90       	pop	r15
    8552:	0f 91       	pop	r16
    8554:	1f 91       	pop	r17
    8556:	cf 91       	pop	r28
    8558:	df 91       	pop	r29
    855a:	08 95       	ret

0000855c <__fp_powsodd>:
    855c:	9f 93       	push	r25
    855e:	8f 93       	push	r24
    8560:	7f 93       	push	r23
    8562:	6f 93       	push	r22
    8564:	ff 93       	push	r31
    8566:	ef 93       	push	r30
    8568:	9b 01       	movw	r18, r22
    856a:	ac 01       	movw	r20, r24
    856c:	a3 de       	rcall	.-698    	; 0x82b4 <__mulsf3>
    856e:	ef 91       	pop	r30
    8570:	ff 91       	pop	r31
    8572:	cf df       	rcall	.-98     	; 0x8512 <__fp_powser>
    8574:	2f 91       	pop	r18
    8576:	3f 91       	pop	r19
    8578:	4f 91       	pop	r20
    857a:	5f 91       	pop	r21
    857c:	9b ce       	rjmp	.-714    	; 0x82b4 <__mulsf3>

0000857e <inverse>:
    857e:	9b 01       	movw	r18, r22
    8580:	ac 01       	movw	r20, r24
    8582:	60 e0       	ldi	r22, 0x00	; 0
    8584:	70 e0       	ldi	r23, 0x00	; 0
    8586:	80 e8       	ldi	r24, 0x80	; 128
    8588:	9f e3       	ldi	r25, 0x3F	; 63
    858a:	b9 cc       	rjmp	.-1678   	; 0x7efe <__divsf3>
    858c:	c5 cd       	rjmp	.-1142   	; 0x8118 <__fp_inf>
    858e:	e5 cd       	rjmp	.-1078   	; 0x815a <__fp_mpack>

00008590 <ldexp>:
    8590:	55 de       	rcall	.-854    	; 0x823c <__fp_splitA>
    8592:	e8 f3       	brcs	.-6      	; 0x858e <inverse+0x10>
    8594:	99 23       	and	r25, r25
    8596:	d9 f3       	breq	.-10     	; 0x858e <inverse+0x10>
    8598:	94 0f       	add	r25, r20
    859a:	51 1d       	adc	r21, r1
    859c:	bb f3       	brvs	.-18     	; 0x858c <inverse+0xe>
    859e:	91 50       	subi	r25, 0x01	; 1
    85a0:	50 40       	sbci	r21, 0x00	; 0
    85a2:	94 f0       	brlt	.+36     	; 0x85c8 <ldexp+0x38>
    85a4:	59 f0       	breq	.+22     	; 0x85bc <ldexp+0x2c>
    85a6:	88 23       	and	r24, r24
    85a8:	32 f0       	brmi	.+12     	; 0x85b6 <ldexp+0x26>
    85aa:	66 0f       	add	r22, r22
    85ac:	77 1f       	adc	r23, r23
    85ae:	88 1f       	adc	r24, r24
    85b0:	91 50       	subi	r25, 0x01	; 1
    85b2:	50 40       	sbci	r21, 0x00	; 0
    85b4:	c1 f7       	brne	.-16     	; 0x85a6 <ldexp+0x16>
    85b6:	9e 3f       	cpi	r25, 0xFE	; 254
    85b8:	51 05       	cpc	r21, r1
    85ba:	44 f7       	brge	.-48     	; 0x858c <inverse+0xe>
    85bc:	88 0f       	add	r24, r24
    85be:	91 1d       	adc	r25, r1
    85c0:	96 95       	lsr	r25
    85c2:	87 95       	ror	r24
    85c4:	97 f9       	bld	r25, 7
    85c6:	08 95       	ret
    85c8:	5f 3f       	cpi	r21, 0xFF	; 255
    85ca:	ac f0       	brlt	.+42     	; 0x85f6 <ldexp+0x66>
    85cc:	98 3e       	cpi	r25, 0xE8	; 232
    85ce:	9c f0       	brlt	.+38     	; 0x85f6 <ldexp+0x66>
    85d0:	bb 27       	eor	r27, r27
    85d2:	86 95       	lsr	r24
    85d4:	77 95       	ror	r23
    85d6:	67 95       	ror	r22
    85d8:	b7 95       	ror	r27
    85da:	08 f4       	brcc	.+2      	; 0x85de <ldexp+0x4e>
    85dc:	b1 60       	ori	r27, 0x01	; 1
    85de:	93 95       	inc	r25
    85e0:	c1 f7       	brne	.-16     	; 0x85d2 <ldexp+0x42>
    85e2:	bb 0f       	add	r27, r27
    85e4:	58 f7       	brcc	.-42     	; 0x85bc <ldexp+0x2c>
    85e6:	11 f4       	brne	.+4      	; 0x85ec <ldexp+0x5c>
    85e8:	60 ff       	sbrs	r22, 0
    85ea:	e8 cf       	rjmp	.-48     	; 0x85bc <ldexp+0x2c>
    85ec:	6f 5f       	subi	r22, 0xFF	; 255
    85ee:	7f 4f       	sbci	r23, 0xFF	; 255
    85f0:	8f 4f       	sbci	r24, 0xFF	; 255
    85f2:	9f 4f       	sbci	r25, 0xFF	; 255
    85f4:	e3 cf       	rjmp	.-58     	; 0x85bc <ldexp+0x2c>
    85f6:	54 ce       	rjmp	.-856    	; 0x82a0 <__fp_szero>
    85f8:	0e f0       	brts	.+2      	; 0x85fc <ldexp+0x6c>
    85fa:	af cd       	rjmp	.-1186   	; 0x815a <__fp_mpack>
    85fc:	bc cd       	rjmp	.-1160   	; 0x8176 <__fp_nan>
    85fe:	68 94       	set
    8600:	8b cd       	rjmp	.-1258   	; 0x8118 <__fp_inf>

00008602 <log>:
    8602:	1c de       	rcall	.-968    	; 0x823c <__fp_splitA>
    8604:	c8 f3       	brcs	.-14     	; 0x85f8 <ldexp+0x68>
    8606:	99 23       	and	r25, r25
    8608:	d1 f3       	breq	.-12     	; 0x85fe <ldexp+0x6e>
    860a:	c6 f3       	brts	.-16     	; 0x85fc <ldexp+0x6c>
    860c:	df 93       	push	r29
    860e:	cf 93       	push	r28
    8610:	1f 93       	push	r17
    8612:	0f 93       	push	r16
    8614:	ff 92       	push	r15
    8616:	c9 2f       	mov	r28, r25
    8618:	dd 27       	eor	r29, r29
    861a:	88 23       	and	r24, r24
    861c:	2a f0       	brmi	.+10     	; 0x8628 <log+0x26>
    861e:	21 97       	sbiw	r28, 0x01	; 1
    8620:	66 0f       	add	r22, r22
    8622:	77 1f       	adc	r23, r23
    8624:	88 1f       	adc	r24, r24
    8626:	da f7       	brpl	.-10     	; 0x861e <log+0x1c>
    8628:	20 e0       	ldi	r18, 0x00	; 0
    862a:	30 e0       	ldi	r19, 0x00	; 0
    862c:	40 e8       	ldi	r20, 0x80	; 128
    862e:	5f eb       	ldi	r21, 0xBF	; 191
    8630:	9f e3       	ldi	r25, 0x3F	; 63
    8632:	88 39       	cpi	r24, 0x98	; 152
    8634:	20 f0       	brcs	.+8      	; 0x863e <log+0x3c>
    8636:	80 3e       	cpi	r24, 0xE0	; 224
    8638:	30 f0       	brcs	.+12     	; 0x8646 <log+0x44>
    863a:	21 96       	adiw	r28, 0x01	; 1
    863c:	8f 77       	andi	r24, 0x7F	; 127
    863e:	f4 db       	rcall	.-2072   	; 0x7e28 <__addsf3>
    8640:	ea e2       	ldi	r30, 0x2A	; 42
    8642:	f1 e0       	ldi	r31, 0x01	; 1
    8644:	03 c0       	rjmp	.+6      	; 0x864c <log+0x4a>
    8646:	f0 db       	rcall	.-2080   	; 0x7e28 <__addsf3>
    8648:	e7 e5       	ldi	r30, 0x57	; 87
    864a:	f1 e0       	ldi	r31, 0x01	; 1
    864c:	62 df       	rcall	.-316    	; 0x8512 <__fp_powser>
    864e:	8b 01       	movw	r16, r22
    8650:	be 01       	movw	r22, r28
    8652:	ec 01       	movw	r28, r24
    8654:	fb 2e       	mov	r15, r27
    8656:	6f 57       	subi	r22, 0x7F	; 127
    8658:	71 09       	sbc	r23, r1
    865a:	75 95       	asr	r23
    865c:	77 1f       	adc	r23, r23
    865e:	88 0b       	sbc	r24, r24
    8660:	99 0b       	sbc	r25, r25
    8662:	e8 dc       	rcall	.-1584   	; 0x8034 <__floatsisf>
    8664:	28 e1       	ldi	r18, 0x18	; 24
    8666:	32 e7       	ldi	r19, 0x72	; 114
    8668:	41 e3       	ldi	r20, 0x31	; 49
    866a:	5f e3       	ldi	r21, 0x3F	; 63
    866c:	2f de       	rcall	.-930    	; 0x82cc <__mulsf3x>
    866e:	af 2d       	mov	r26, r15
    8670:	98 01       	movw	r18, r16
    8672:	ae 01       	movw	r20, r28
    8674:	ff 90       	pop	r15
    8676:	0f 91       	pop	r16
    8678:	1f 91       	pop	r17
    867a:	cf 91       	pop	r28
    867c:	df 91       	pop	r29
    867e:	e5 db       	rcall	.-2102   	; 0x7e4a <__addsf3x>
    8680:	b3 cd       	rjmp	.-1178   	; 0x81e8 <__fp_round>

00008682 <modf>:
    8682:	fa 01       	movw	r30, r20
    8684:	dc 01       	movw	r26, r24
    8686:	aa 0f       	add	r26, r26
    8688:	bb 1f       	adc	r27, r27
    868a:	9b 01       	movw	r18, r22
    868c:	ac 01       	movw	r20, r24
    868e:	bf 57       	subi	r27, 0x7F	; 127
    8690:	28 f4       	brcc	.+10     	; 0x869c <modf+0x1a>
    8692:	22 27       	eor	r18, r18
    8694:	33 27       	eor	r19, r19
    8696:	44 27       	eor	r20, r20
    8698:	50 78       	andi	r21, 0x80	; 128
    869a:	1f c0       	rjmp	.+62     	; 0x86da <modf+0x58>
    869c:	b7 51       	subi	r27, 0x17	; 23
    869e:	88 f4       	brcc	.+34     	; 0x86c2 <modf+0x40>
    86a0:	ab 2f       	mov	r26, r27
    86a2:	00 24       	eor	r0, r0
    86a4:	46 95       	lsr	r20
    86a6:	37 95       	ror	r19
    86a8:	27 95       	ror	r18
    86aa:	01 1c       	adc	r0, r1
    86ac:	a3 95       	inc	r26
    86ae:	d2 f3       	brmi	.-12     	; 0x86a4 <modf+0x22>
    86b0:	00 20       	and	r0, r0
    86b2:	69 f0       	breq	.+26     	; 0x86ce <modf+0x4c>
    86b4:	22 0f       	add	r18, r18
    86b6:	33 1f       	adc	r19, r19
    86b8:	44 1f       	adc	r20, r20
    86ba:	b3 95       	inc	r27
    86bc:	da f3       	brmi	.-10     	; 0x86b4 <modf+0x32>
    86be:	0d d0       	rcall	.+26     	; 0x86da <modf+0x58>
    86c0:	b2 cb       	rjmp	.-2204   	; 0x7e26 <__subsf3>
    86c2:	61 30       	cpi	r22, 0x01	; 1
    86c4:	71 05       	cpc	r23, r1
    86c6:	a0 e8       	ldi	r26, 0x80	; 128
    86c8:	8a 07       	cpc	r24, r26
    86ca:	b9 46       	sbci	r27, 0x69	; 105
    86cc:	30 f4       	brcc	.+12     	; 0x86da <modf+0x58>
    86ce:	9b 01       	movw	r18, r22
    86d0:	ac 01       	movw	r20, r24
    86d2:	66 27       	eor	r22, r22
    86d4:	77 27       	eor	r23, r23
    86d6:	88 27       	eor	r24, r24
    86d8:	90 78       	andi	r25, 0x80	; 128
    86da:	30 96       	adiw	r30, 0x00	; 0
    86dc:	21 f0       	breq	.+8      	; 0x86e6 <modf+0x64>
    86de:	20 83       	st	Z, r18
    86e0:	31 83       	std	Z+1, r19	; 0x01
    86e2:	42 83       	std	Z+2, r20	; 0x02
    86e4:	53 83       	std	Z+3, r21	; 0x03
    86e6:	08 95       	ret

000086e8 <__divmodhi4>:
    86e8:	97 fb       	bst	r25, 7
    86ea:	07 2e       	mov	r0, r23
    86ec:	16 f4       	brtc	.+4      	; 0x86f2 <__divmodhi4+0xa>
    86ee:	00 94       	com	r0
    86f0:	07 d0       	rcall	.+14     	; 0x8700 <__divmodhi4_neg1>
    86f2:	77 fd       	sbrc	r23, 7
    86f4:	09 d0       	rcall	.+18     	; 0x8708 <__divmodhi4_neg2>
    86f6:	0e 94 aa 43 	call	0x8754	; 0x8754 <__udivmodhi4>
    86fa:	07 fc       	sbrc	r0, 7
    86fc:	05 d0       	rcall	.+10     	; 0x8708 <__divmodhi4_neg2>
    86fe:	3e f4       	brtc	.+14     	; 0x870e <__divmodhi4_exit>

00008700 <__divmodhi4_neg1>:
    8700:	90 95       	com	r25
    8702:	81 95       	neg	r24
    8704:	9f 4f       	sbci	r25, 0xFF	; 255
    8706:	08 95       	ret

00008708 <__divmodhi4_neg2>:
    8708:	70 95       	com	r23
    870a:	61 95       	neg	r22
    870c:	7f 4f       	sbci	r23, 0xFF	; 255

0000870e <__divmodhi4_exit>:
    870e:	08 95       	ret

00008710 <__udivmodsi4>:
    8710:	a1 e2       	ldi	r26, 0x21	; 33
    8712:	1a 2e       	mov	r1, r26
    8714:	aa 1b       	sub	r26, r26
    8716:	bb 1b       	sub	r27, r27
    8718:	fd 01       	movw	r30, r26
    871a:	0d c0       	rjmp	.+26     	; 0x8736 <__udivmodsi4_ep>

0000871c <__udivmodsi4_loop>:
    871c:	aa 1f       	adc	r26, r26
    871e:	bb 1f       	adc	r27, r27
    8720:	ee 1f       	adc	r30, r30
    8722:	ff 1f       	adc	r31, r31
    8724:	a2 17       	cp	r26, r18
    8726:	b3 07       	cpc	r27, r19
    8728:	e4 07       	cpc	r30, r20
    872a:	f5 07       	cpc	r31, r21
    872c:	20 f0       	brcs	.+8      	; 0x8736 <__udivmodsi4_ep>
    872e:	a2 1b       	sub	r26, r18
    8730:	b3 0b       	sbc	r27, r19
    8732:	e4 0b       	sbc	r30, r20
    8734:	f5 0b       	sbc	r31, r21

00008736 <__udivmodsi4_ep>:
    8736:	66 1f       	adc	r22, r22
    8738:	77 1f       	adc	r23, r23
    873a:	88 1f       	adc	r24, r24
    873c:	99 1f       	adc	r25, r25
    873e:	1a 94       	dec	r1
    8740:	69 f7       	brne	.-38     	; 0x871c <__udivmodsi4_loop>
    8742:	60 95       	com	r22
    8744:	70 95       	com	r23
    8746:	80 95       	com	r24
    8748:	90 95       	com	r25
    874a:	9b 01       	movw	r18, r22
    874c:	ac 01       	movw	r20, r24
    874e:	bd 01       	movw	r22, r26
    8750:	cf 01       	movw	r24, r30
    8752:	08 95       	ret

00008754 <__udivmodhi4>:
    8754:	aa 1b       	sub	r26, r26
    8756:	bb 1b       	sub	r27, r27
    8758:	51 e1       	ldi	r21, 0x11	; 17
    875a:	07 c0       	rjmp	.+14     	; 0x876a <__udivmodhi4_ep>

0000875c <__udivmodhi4_loop>:
    875c:	aa 1f       	adc	r26, r26
    875e:	bb 1f       	adc	r27, r27
    8760:	a6 17       	cp	r26, r22
    8762:	b7 07       	cpc	r27, r23
    8764:	10 f0       	brcs	.+4      	; 0x876a <__udivmodhi4_ep>
    8766:	a6 1b       	sub	r26, r22
    8768:	b7 0b       	sbc	r27, r23

0000876a <__udivmodhi4_ep>:
    876a:	88 1f       	adc	r24, r24
    876c:	99 1f       	adc	r25, r25
    876e:	5a 95       	dec	r21
    8770:	a9 f7       	brne	.-22     	; 0x875c <__udivmodhi4_loop>
    8772:	80 95       	com	r24
    8774:	90 95       	com	r25
    8776:	bc 01       	movw	r22, r24
    8778:	cd 01       	movw	r24, r26
    877a:	08 95       	ret

0000877c <malloc>:
    877c:	0f 93       	push	r16
    877e:	1f 93       	push	r17
    8780:	cf 93       	push	r28
    8782:	df 93       	push	r29
    8784:	82 30       	cpi	r24, 0x02	; 2
    8786:	91 05       	cpc	r25, r1
    8788:	10 f4       	brcc	.+4      	; 0x878e <malloc+0x12>
    878a:	82 e0       	ldi	r24, 0x02	; 2
    878c:	90 e0       	ldi	r25, 0x00	; 0
    878e:	e0 91 a8 02 	lds	r30, 0x02A8
    8792:	f0 91 a9 02 	lds	r31, 0x02A9
    8796:	20 e0       	ldi	r18, 0x00	; 0
    8798:	30 e0       	ldi	r19, 0x00	; 0
    879a:	c0 e0       	ldi	r28, 0x00	; 0
    879c:	d0 e0       	ldi	r29, 0x00	; 0
    879e:	23 c0       	rjmp	.+70     	; 0x87e6 <malloc+0x6a>
    87a0:	40 81       	ld	r20, Z
    87a2:	51 81       	ldd	r21, Z+1	; 0x01
    87a4:	48 17       	cp	r20, r24
    87a6:	59 07       	cpc	r21, r25
    87a8:	a8 f0       	brcs	.+42     	; 0x87d4 <malloc+0x58>
    87aa:	48 17       	cp	r20, r24
    87ac:	59 07       	cpc	r21, r25
    87ae:	61 f4       	brne	.+24     	; 0x87c8 <malloc+0x4c>
    87b0:	82 81       	ldd	r24, Z+2	; 0x02
    87b2:	93 81       	ldd	r25, Z+3	; 0x03
    87b4:	20 97       	sbiw	r28, 0x00	; 0
    87b6:	19 f0       	breq	.+6      	; 0x87be <malloc+0x42>
    87b8:	9b 83       	std	Y+3, r25	; 0x03
    87ba:	8a 83       	std	Y+2, r24	; 0x02
    87bc:	2e c0       	rjmp	.+92     	; 0x881a <malloc+0x9e>
    87be:	90 93 a9 02 	sts	0x02A9, r25
    87c2:	80 93 a8 02 	sts	0x02A8, r24
    87c6:	29 c0       	rjmp	.+82     	; 0x881a <malloc+0x9e>
    87c8:	21 15       	cp	r18, r1
    87ca:	31 05       	cpc	r19, r1
    87cc:	29 f0       	breq	.+10     	; 0x87d8 <malloc+0x5c>
    87ce:	42 17       	cp	r20, r18
    87d0:	53 07       	cpc	r21, r19
    87d2:	10 f0       	brcs	.+4      	; 0x87d8 <malloc+0x5c>
    87d4:	a9 01       	movw	r20, r18
    87d6:	02 c0       	rjmp	.+4      	; 0x87dc <malloc+0x60>
    87d8:	be 01       	movw	r22, r28
    87da:	df 01       	movw	r26, r30
    87dc:	02 81       	ldd	r16, Z+2	; 0x02
    87de:	13 81       	ldd	r17, Z+3	; 0x03
    87e0:	ef 01       	movw	r28, r30
    87e2:	9a 01       	movw	r18, r20
    87e4:	f8 01       	movw	r30, r16
    87e6:	30 97       	sbiw	r30, 0x00	; 0
    87e8:	d9 f6       	brne	.-74     	; 0x87a0 <malloc+0x24>
    87ea:	21 15       	cp	r18, r1
    87ec:	31 05       	cpc	r19, r1
    87ee:	09 f1       	breq	.+66     	; 0x8832 <malloc+0xb6>
    87f0:	28 1b       	sub	r18, r24
    87f2:	39 0b       	sbc	r19, r25
    87f4:	24 30       	cpi	r18, 0x04	; 4
    87f6:	31 05       	cpc	r19, r1
    87f8:	90 f4       	brcc	.+36     	; 0x881e <malloc+0xa2>
    87fa:	12 96       	adiw	r26, 0x02	; 2
    87fc:	8d 91       	ld	r24, X+
    87fe:	9c 91       	ld	r25, X
    8800:	13 97       	sbiw	r26, 0x03	; 3
    8802:	61 15       	cp	r22, r1
    8804:	71 05       	cpc	r23, r1
    8806:	21 f0       	breq	.+8      	; 0x8810 <malloc+0x94>
    8808:	fb 01       	movw	r30, r22
    880a:	93 83       	std	Z+3, r25	; 0x03
    880c:	82 83       	std	Z+2, r24	; 0x02
    880e:	04 c0       	rjmp	.+8      	; 0x8818 <malloc+0x9c>
    8810:	90 93 a9 02 	sts	0x02A9, r25
    8814:	80 93 a8 02 	sts	0x02A8, r24
    8818:	fd 01       	movw	r30, r26
    881a:	32 96       	adiw	r30, 0x02	; 2
    881c:	44 c0       	rjmp	.+136    	; 0x88a6 <malloc+0x12a>
    881e:	fd 01       	movw	r30, r26
    8820:	e2 0f       	add	r30, r18
    8822:	f3 1f       	adc	r31, r19
    8824:	81 93       	st	Z+, r24
    8826:	91 93       	st	Z+, r25
    8828:	22 50       	subi	r18, 0x02	; 2
    882a:	31 09       	sbc	r19, r1
    882c:	2d 93       	st	X+, r18
    882e:	3c 93       	st	X, r19
    8830:	3a c0       	rjmp	.+116    	; 0x88a6 <malloc+0x12a>
    8832:	20 91 a6 02 	lds	r18, 0x02A6
    8836:	30 91 a7 02 	lds	r19, 0x02A7
    883a:	23 2b       	or	r18, r19
    883c:	41 f4       	brne	.+16     	; 0x884e <malloc+0xd2>
    883e:	20 91 02 02 	lds	r18, 0x0202
    8842:	30 91 03 02 	lds	r19, 0x0203
    8846:	30 93 a7 02 	sts	0x02A7, r19
    884a:	20 93 a6 02 	sts	0x02A6, r18
    884e:	20 91 00 02 	lds	r18, 0x0200
    8852:	30 91 01 02 	lds	r19, 0x0201
    8856:	21 15       	cp	r18, r1
    8858:	31 05       	cpc	r19, r1
    885a:	41 f4       	brne	.+16     	; 0x886c <malloc+0xf0>
    885c:	2d b7       	in	r18, 0x3d	; 61
    885e:	3e b7       	in	r19, 0x3e	; 62
    8860:	40 91 04 02 	lds	r20, 0x0204
    8864:	50 91 05 02 	lds	r21, 0x0205
    8868:	24 1b       	sub	r18, r20
    886a:	35 0b       	sbc	r19, r21
    886c:	e0 91 a6 02 	lds	r30, 0x02A6
    8870:	f0 91 a7 02 	lds	r31, 0x02A7
    8874:	e2 17       	cp	r30, r18
    8876:	f3 07       	cpc	r31, r19
    8878:	a0 f4       	brcc	.+40     	; 0x88a2 <malloc+0x126>
    887a:	2e 1b       	sub	r18, r30
    887c:	3f 0b       	sbc	r19, r31
    887e:	28 17       	cp	r18, r24
    8880:	39 07       	cpc	r19, r25
    8882:	78 f0       	brcs	.+30     	; 0x88a2 <malloc+0x126>
    8884:	ac 01       	movw	r20, r24
    8886:	4e 5f       	subi	r20, 0xFE	; 254
    8888:	5f 4f       	sbci	r21, 0xFF	; 255
    888a:	24 17       	cp	r18, r20
    888c:	35 07       	cpc	r19, r21
    888e:	48 f0       	brcs	.+18     	; 0x88a2 <malloc+0x126>
    8890:	4e 0f       	add	r20, r30
    8892:	5f 1f       	adc	r21, r31
    8894:	50 93 a7 02 	sts	0x02A7, r21
    8898:	40 93 a6 02 	sts	0x02A6, r20
    889c:	81 93       	st	Z+, r24
    889e:	91 93       	st	Z+, r25
    88a0:	02 c0       	rjmp	.+4      	; 0x88a6 <malloc+0x12a>
    88a2:	e0 e0       	ldi	r30, 0x00	; 0
    88a4:	f0 e0       	ldi	r31, 0x00	; 0
    88a6:	cf 01       	movw	r24, r30
    88a8:	df 91       	pop	r29
    88aa:	cf 91       	pop	r28
    88ac:	1f 91       	pop	r17
    88ae:	0f 91       	pop	r16
    88b0:	08 95       	ret

000088b2 <free>:
    88b2:	ef 92       	push	r14
    88b4:	ff 92       	push	r15
    88b6:	0f 93       	push	r16
    88b8:	1f 93       	push	r17
    88ba:	cf 93       	push	r28
    88bc:	df 93       	push	r29
    88be:	00 97       	sbiw	r24, 0x00	; 0
    88c0:	09 f4       	brne	.+2      	; 0x88c4 <free+0x12>
    88c2:	8f c0       	rjmp	.+286    	; 0x89e2 <free+0x130>
    88c4:	dc 01       	movw	r26, r24
    88c6:	12 97       	sbiw	r26, 0x02	; 2
    88c8:	13 96       	adiw	r26, 0x03	; 3
    88ca:	1c 92       	st	X, r1
    88cc:	1e 92       	st	-X, r1
    88ce:	12 97       	sbiw	r26, 0x02	; 2
    88d0:	e0 90 a8 02 	lds	r14, 0x02A8
    88d4:	f0 90 a9 02 	lds	r15, 0x02A9
    88d8:	e1 14       	cp	r14, r1
    88da:	f1 04       	cpc	r15, r1
    88dc:	89 f4       	brne	.+34     	; 0x8900 <free+0x4e>
    88de:	2d 91       	ld	r18, X+
    88e0:	3c 91       	ld	r19, X
    88e2:	11 97       	sbiw	r26, 0x01	; 1
    88e4:	28 0f       	add	r18, r24
    88e6:	39 1f       	adc	r19, r25
    88e8:	80 91 a6 02 	lds	r24, 0x02A6
    88ec:	90 91 a7 02 	lds	r25, 0x02A7
    88f0:	82 17       	cp	r24, r18
    88f2:	93 07       	cpc	r25, r19
    88f4:	89 f5       	brne	.+98     	; 0x8958 <free+0xa6>
    88f6:	b0 93 a7 02 	sts	0x02A7, r27
    88fa:	a0 93 a6 02 	sts	0x02A6, r26
    88fe:	71 c0       	rjmp	.+226    	; 0x89e2 <free+0x130>
    8900:	e7 01       	movw	r28, r14
    8902:	20 e0       	ldi	r18, 0x00	; 0
    8904:	30 e0       	ldi	r19, 0x00	; 0
    8906:	01 c0       	rjmp	.+2      	; 0x890a <free+0x58>
    8908:	ea 01       	movw	r28, r20
    890a:	ca 17       	cp	r28, r26
    890c:	db 07       	cpc	r29, r27
    890e:	38 f4       	brcc	.+14     	; 0x891e <free+0x6c>
    8910:	4a 81       	ldd	r20, Y+2	; 0x02
    8912:	5b 81       	ldd	r21, Y+3	; 0x03
    8914:	9e 01       	movw	r18, r28
    8916:	41 15       	cp	r20, r1
    8918:	51 05       	cpc	r21, r1
    891a:	b1 f7       	brne	.-20     	; 0x8908 <free+0x56>
    891c:	22 c0       	rjmp	.+68     	; 0x8962 <free+0xb0>
    891e:	bc 01       	movw	r22, r24
    8920:	62 50       	subi	r22, 0x02	; 2
    8922:	71 09       	sbc	r23, r1
    8924:	fb 01       	movw	r30, r22
    8926:	d3 83       	std	Z+3, r29	; 0x03
    8928:	c2 83       	std	Z+2, r28	; 0x02
    892a:	00 81       	ld	r16, Z
    892c:	11 81       	ldd	r17, Z+1	; 0x01
    892e:	ac 01       	movw	r20, r24
    8930:	40 0f       	add	r20, r16
    8932:	51 1f       	adc	r21, r17
    8934:	4c 17       	cp	r20, r28
    8936:	5d 07       	cpc	r21, r29
    8938:	61 f4       	brne	.+24     	; 0x8952 <free+0xa0>
    893a:	48 81       	ld	r20, Y
    893c:	59 81       	ldd	r21, Y+1	; 0x01
    893e:	40 0f       	add	r20, r16
    8940:	51 1f       	adc	r21, r17
    8942:	4e 5f       	subi	r20, 0xFE	; 254
    8944:	5f 4f       	sbci	r21, 0xFF	; 255
    8946:	51 83       	std	Z+1, r21	; 0x01
    8948:	40 83       	st	Z, r20
    894a:	4a 81       	ldd	r20, Y+2	; 0x02
    894c:	5b 81       	ldd	r21, Y+3	; 0x03
    894e:	53 83       	std	Z+3, r21	; 0x03
    8950:	42 83       	std	Z+2, r20	; 0x02
    8952:	21 15       	cp	r18, r1
    8954:	31 05       	cpc	r19, r1
    8956:	29 f4       	brne	.+10     	; 0x8962 <free+0xb0>
    8958:	b0 93 a9 02 	sts	0x02A9, r27
    895c:	a0 93 a8 02 	sts	0x02A8, r26
    8960:	40 c0       	rjmp	.+128    	; 0x89e2 <free+0x130>
    8962:	f9 01       	movw	r30, r18
    8964:	b3 83       	std	Z+3, r27	; 0x03
    8966:	a2 83       	std	Z+2, r26	; 0x02
    8968:	e9 01       	movw	r28, r18
    896a:	69 91       	ld	r22, Y+
    896c:	79 91       	ld	r23, Y+
    896e:	c6 0f       	add	r28, r22
    8970:	d7 1f       	adc	r29, r23
    8972:	ac 17       	cp	r26, r28
    8974:	bd 07       	cpc	r27, r29
    8976:	79 f4       	brne	.+30     	; 0x8996 <free+0xe4>
    8978:	dc 01       	movw	r26, r24
    897a:	5e 91       	ld	r21, -X
    897c:	4e 91       	ld	r20, -X
    897e:	46 0f       	add	r20, r22
    8980:	57 1f       	adc	r21, r23
    8982:	4e 5f       	subi	r20, 0xFE	; 254
    8984:	5f 4f       	sbci	r21, 0xFF	; 255
    8986:	51 83       	std	Z+1, r21	; 0x01
    8988:	40 83       	st	Z, r20
    898a:	12 96       	adiw	r26, 0x02	; 2
    898c:	8d 91       	ld	r24, X+
    898e:	9c 91       	ld	r25, X
    8990:	13 97       	sbiw	r26, 0x03	; 3
    8992:	93 83       	std	Z+3, r25	; 0x03
    8994:	82 83       	std	Z+2, r24	; 0x02
    8996:	a0 e0       	ldi	r26, 0x00	; 0
    8998:	b0 e0       	ldi	r27, 0x00	; 0
    899a:	02 c0       	rjmp	.+4      	; 0x89a0 <free+0xee>
    899c:	d7 01       	movw	r26, r14
    899e:	7c 01       	movw	r14, r24
    89a0:	f7 01       	movw	r30, r14
    89a2:	82 81       	ldd	r24, Z+2	; 0x02
    89a4:	93 81       	ldd	r25, Z+3	; 0x03
    89a6:	00 97       	sbiw	r24, 0x00	; 0
    89a8:	c9 f7       	brne	.-14     	; 0x899c <free+0xea>
    89aa:	c7 01       	movw	r24, r14
    89ac:	02 96       	adiw	r24, 0x02	; 2
    89ae:	20 81       	ld	r18, Z
    89b0:	31 81       	ldd	r19, Z+1	; 0x01
    89b2:	82 0f       	add	r24, r18
    89b4:	93 1f       	adc	r25, r19
    89b6:	20 91 a6 02 	lds	r18, 0x02A6
    89ba:	30 91 a7 02 	lds	r19, 0x02A7
    89be:	28 17       	cp	r18, r24
    89c0:	39 07       	cpc	r19, r25
    89c2:	79 f4       	brne	.+30     	; 0x89e2 <free+0x130>
    89c4:	10 97       	sbiw	r26, 0x00	; 0
    89c6:	29 f4       	brne	.+10     	; 0x89d2 <free+0x120>
    89c8:	10 92 a9 02 	sts	0x02A9, r1
    89cc:	10 92 a8 02 	sts	0x02A8, r1
    89d0:	04 c0       	rjmp	.+8      	; 0x89da <free+0x128>
    89d2:	13 96       	adiw	r26, 0x03	; 3
    89d4:	1c 92       	st	X, r1
    89d6:	1e 92       	st	-X, r1
    89d8:	12 97       	sbiw	r26, 0x02	; 2
    89da:	f0 92 a7 02 	sts	0x02A7, r15
    89de:	e0 92 a6 02 	sts	0x02A6, r14
    89e2:	df 91       	pop	r29
    89e4:	cf 91       	pop	r28
    89e6:	1f 91       	pop	r17
    89e8:	0f 91       	pop	r16
    89ea:	ff 90       	pop	r15
    89ec:	ef 90       	pop	r14
    89ee:	08 95       	ret

000089f0 <memcpy>:
    89f0:	fb 01       	movw	r30, r22
    89f2:	dc 01       	movw	r26, r24
    89f4:	02 c0       	rjmp	.+4      	; 0x89fa <memcpy+0xa>
    89f6:	01 90       	ld	r0, Z+
    89f8:	0d 92       	st	X+, r0
    89fa:	41 50       	subi	r20, 0x01	; 1
    89fc:	50 40       	sbci	r21, 0x00	; 0
    89fe:	d8 f7       	brcc	.-10     	; 0x89f6 <memcpy+0x6>
    8a00:	08 95       	ret

00008a02 <_exit>:
    8a02:	f8 94       	cli

00008a04 <__stop_program>:
    8a04:	ff cf       	rjmp	.-2      	; 0x8a04 <__stop_program>
