
Helicopter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009a  00800200  000091f0  00009284  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000091f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080029a  0080029a  0000931e  2**0
                  ALLOC
  3 .stab         000043e0  00000000  00000000  00009320  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000011bd  00000000  00000000  0000d700  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000e8bd  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000d28  00000000  00000000  0000e8ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00013fa6  00000000  00000000  0000f614  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000312d  00000000  00000000  000235ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000030fe  00000000  00000000  000266e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000331c  00000000  00000000  000297e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00006130  00000000  00000000  0002cb04  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00007488  00000000  00000000  00032c34  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000bb0  00000000  00000000  0003a0bc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
	//TODO should this be delete[]?
	delete this->records;
}

void Buffer::enqueue(Record *record)
{
       0:	0c 94 14 01 	jmp	0x228	; 0x228 <__ctors_end>
       4:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
       8:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
       c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      10:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
	if (record != NULL)
      14:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      18:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      1c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
	{
		//Copy the record
		//TODO danger not deep copy. 
		Record *newRecord = record->Copy();
      20:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      24:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      28:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
		
		//Add the record to the linked list.
		if (this->records == NULL)
      2c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      30:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      34:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
		{
			records = newRecord;
      38:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      3c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      40:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      44:	0c 94 13 35 	jmp	0x6a26	; 0x6a26 <__vector_17>
			firstRecord = newRecord;
      48:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      4c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      50:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
			lastRecord = newRecord;
      54:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      58:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      5c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      60:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
		}else
		{
			lastRecord->setNextRecord(newRecord);
      64:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      68:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      6c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      70:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      74:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
			newRecord->setPreviousRecord(lastRecord);
      78:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      7c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      80:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      84:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      88:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
			lastRecord = newRecord;
      8c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      90:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      94:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      98:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
		}
		
		bufferSize++;
      9c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      a0:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      a4:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      a8:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      ac:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      b0:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
	}
}
      b4:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      b8:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      bc:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      c0:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      c4:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
 * This method uses Euler angle rotations.
 */
double MagnetometerSensor::getFRDY()
{
	return (rawMagX * (cos(theta)*sin(sai))) + (rawMagY * (sin(phi)*sin(theta)*sin(sai) + cos(phi)*cos(sai))) + (rawMagZ * (cos(phi)*sin(theta)*sin(sai) - sin(phi)*cos(sai)));
}
      c8:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      cc:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      d0:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      d4:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      d8:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      dc:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      e0:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      e4:	05 a8       	ldd	r0, Z+53	; 0x35
      e6:	4c cd       	rjmp	.-1384   	; 0xfffffb80 <__eeprom_end+0xff7efb80>
      e8:	b2 d4       	rcall	.+2404   	; 0xa4e <_ZN10helicopter5model11SystemModel13YProportionalEf+0x24>
      ea:	4e b9       	out	0x0e, r20	; 14
      ec:	38 36       	cpi	r19, 0x68	; 104
      ee:	a9 02       	muls	r26, r25
      f0:	0c 50       	subi	r16, 0x0C	; 12
      f2:	b9 91       	ld	r27, Y+
      f4:	86 88       	ldd	r8, Z+22	; 0x16
      f6:	08 3c       	cpi	r16, 0xC8	; 200
      f8:	a6 aa       	std	Z+54, r10	; 0x36
      fa:	aa 2a       	or	r10, r26
      fc:	be 00       	.word	0x00be	; ????
      fe:	00 00       	nop
     100:	80 3f       	cpi	r24, 0xF0	; 240
     102:	07 63       	ori	r16, 0x37	; 55
     104:	42 36       	cpi	r20, 0x62	; 98
     106:	b7 9b       	sbis	0x16, 7	; 22
     108:	d8 a7       	std	Y+40, r29	; 0x28
     10a:	1a 39       	cpi	r17, 0x9A	; 154
     10c:	68 56       	subi	r22, 0x68	; 104
     10e:	18 ae       	std	Y+56, r1	; 0x38
     110:	ba ab       	std	Y+50, r27	; 0x32
     112:	55 8c       	ldd	r5, Z+29	; 0x1d
     114:	1d 3c       	cpi	r17, 0xCD	; 205
     116:	b7 cc       	rjmp	.-1682   	; 0xfffffa86 <__eeprom_end+0xff7efa86>
     118:	57 63       	ori	r21, 0x37	; 55
     11a:	bd 6d       	ori	r27, 0xDD	; 221
     11c:	ed fd       	.word	0xfded	; ????
     11e:	75 3e       	cpi	r23, 0xE5	; 229
     120:	f6 17       	cp	r31, r22
     122:	72 31       	cpi	r23, 0x12	; 18
     124:	bf 00       	.word	0x00bf	; ????
     126:	00 00       	nop
     128:	80 3f       	cpi	r24, 0xF0	; 240
     12a:	08 00       	.word	0x0008	; ????
     12c:	00 00       	nop
     12e:	be 92       	st	-X, r11
     130:	24 49       	sbci	r18, 0x94	; 148
     132:	12 3e       	cpi	r17, 0xE2	; 226
     134:	ab aa       	std	Y+51, r10	; 0x33
     136:	aa 2a       	or	r10, r26
     138:	be cd       	rjmp	.-1156   	; 0xfffffcb6 <__eeprom_end+0xff7efcb6>
     13a:	cc cc       	rjmp	.-1640   	; 0xfffffad4 <__eeprom_end+0xff7efad4>
     13c:	4c 3e       	cpi	r20, 0xEC	; 236
     13e:	00 00       	nop
     140:	00 80       	ld	r0, Z
     142:	be ab       	std	Y+54, r27	; 0x36
     144:	aa aa       	std	Y+50, r10	; 0x32
     146:	aa 3e       	cpi	r26, 0xEA	; 234
     148:	00 00       	nop
     14a:	00 00       	nop
     14c:	bf 00       	.word	0x00bf	; ????
     14e:	00 00       	nop
     150:	80 3f       	cpi	r24, 0xF0	; 240
     152:	00 00       	nop
     154:	00 00       	nop
     156:	00 08       	sbc	r0, r0
     158:	41 78       	andi	r20, 0x81	; 129
     15a:	d3 bb       	out	0x13, r29	; 19
     15c:	43 87       	std	Z+11, r20	; 0x0b
     15e:	d1 13       	cpse	r29, r17
     160:	3d 19       	sub	r19, r13
     162:	0e 3c       	cpi	r16, 0xCE	; 206
     164:	c3 bd       	out	0x23, r28	; 35
     166:	42 82       	std	Z+2, r4	; 0x02
     168:	ad 2b       	or	r26, r29
     16a:	3e 68       	ori	r19, 0x8E	; 142
     16c:	ec 82       	std	Y+4, r14	; 0x04
     16e:	76 be       	out	0x36, r7	; 54
     170:	d9 8f       	std	Y+25, r29	; 0x19
     172:	e1 a9       	ldd	r30, Z+49	; 0x31
     174:	3e 4c       	sbci	r19, 0xCE	; 206
     176:	80 ef       	ldi	r24, 0xF0	; 240
     178:	ff be       	out	0x3f, r15	; 63
     17a:	01 c4       	rjmp	.+2050   	; 0x97e <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv+0x2a>
     17c:	ff 7f       	andi	r31, 0xFF	; 255
     17e:	3f 00       	.word	0x003f	; ????
     180:	00 00       	nop
	...

00000184 <__trampolines_start>:
     184:	0c 94 b9 29 	jmp	0x5372	; 0x5372 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv>
     188:	0c 94 ed 13 	jmp	0x27da	; 0x27da <_ZN10helicopter5tasks4TaskD0Ev>
     18c:	0c 94 28 12 	jmp	0x2450	; 0x2450 <_ZN10helicopter7drivers12SerialDriverD1Ev>
     190:	0c 94 94 2c 	jmp	0x5928	; 0x5928 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh>
     194:	0c 94 d1 22 	jmp	0x45a2	; 0x45a2 <_ZN10helicopter8messages7MessageD0Ev>
     198:	0c 94 b3 22 	jmp	0x4566	; 0x4566 <_ZN10helicopter8messages7MessageD1Ev>
     19c:	0c 94 44 3c 	jmp	0x7888	; 0x7888 <_ZN10helicopter5tasks4Task7runTaskEv>
     1a0:	0c 94 f8 22 	jmp	0x45f0	; 0x45f0 <_ZN10helicopter8messages7Message8getBytesEv>
     1a4:	0c 94 11 13 	jmp	0x2622	; 0x2622 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh>
     1a8:	0c 94 a4 35 	jmp	0x6b48	; 0x6b48 <_ZN10helicopter5tasks4Task4initEv>
     1ac:	0c 94 5b 12 	jmp	0x24b6	; 0x24b6 <_ZN10helicopter7drivers12SerialDriver10initializeEv>
     1b0:	0c 94 90 36 	jmp	0x6d20	; 0x6d20 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>
     1b4:	0c 94 67 36 	jmp	0x6cce	; 0x6cce <_ZN10helicopter5tasks16PIDOuterLoopTask11runTaskImplEv>
     1b8:	0c 94 6a 13 	jmp	0x26d4	; 0x26d4 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh>
     1bc:	0c 94 fe 35 	jmp	0x6bfc	; 0x6bfc <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>
     1c0:	0c 94 bf 39 	jmp	0x737e	; 0x737e <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv>
     1c4:	0c 94 d1 3c 	jmp	0x79a2	; 0x79a2 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>
     1c8:	0c 94 5a 23 	jmp	0x46b4	; 0x46b4 <_ZN10helicopter8messages11SyncMessageD1Ev>
     1cc:	0c 94 91 23 	jmp	0x4722	; 0x4722 <_ZN10helicopter8messages11SyncMessage8getBytesEv>
     1d0:	0c 94 b2 36 	jmp	0x6d64	; 0x6d64 <_ZN10helicopter5tasks16PIDOuterLoopTaskD0Ev>
     1d4:	0c 94 b9 37 	jmp	0x6f72	; 0x6f72 <_ZN10helicopter5tasks20SensorProcessingTask11runTaskImplEv>
     1d8:	0c 94 e3 35 	jmp	0x6bc6	; 0x6bc6 <_ZN10helicopter5tasks16PIDInnerLoopTask11runTaskImplEv>
     1dc:	0c 94 5c 14 	jmp	0x28b8	; 0x28b8 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv>
     1e0:	0c 94 b3 38 	jmp	0x7166	; 0x7166 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>
     1e4:	0c 94 cf 13 	jmp	0x279e	; 0x279e <_ZN10helicopter5tasks4TaskD1Ev>
     1e8:	0c 94 07 23 	jmp	0x460e	; 0x460e <_ZN10helicopter8messages7Message12buildMessageEPh>
     1ec:	0c 94 f3 3c 	jmp	0x79e6	; 0x79e6 <_ZN10helicopter5tasks21TransmitTelemetryTaskD0Ev>
     1f0:	0c 94 a4 29 	jmp	0x5348	; 0x5348 <_ZN10helicopter8messages22SystemTelemetryMessageD0Ev>
     1f4:	0c 94 38 14 	jmp	0x2870	; 0x2870 <_ZN10helicopter5tasks12FlashLEDTask4initEv>
     1f8:	0c 94 20 36 	jmp	0x6c40	; 0x6c40 <_ZN10helicopter5tasks16PIDInnerLoopTaskD0Ev>
     1fc:	0c 94 09 3c 	jmp	0x7812	; 0x7812 <_ZN10helicopter5tasks4Task11runTaskImplEv>
     200:	0c 94 82 29 	jmp	0x5304	; 0x5304 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>
     204:	0c 94 f4 3b 	jmp	0x77e8	; 0x77e8 <_ZN10helicopter5tasks16SimTelemetryTaskD0Ev>
     208:	0c 94 9e 3c 	jmp	0x793c	; 0x793c <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv>
     20c:	0c 94 fb 1f 	jmp	0x3ff6	; 0x3ff6 <_ZN10helicopter5tasks12FlashLEDTaskD0Ev>
     210:	0c 94 b6 23 	jmp	0x476c	; 0x476c <_ZN10helicopter8messages11SyncMessage12buildMessageEPh>
     214:	0c 94 d9 1f 	jmp	0x3fb2	; 0x3fb2 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>
     218:	0c 94 46 12 	jmp	0x248c	; 0x248c <_ZN10helicopter7drivers12SerialDriverD0Ev>
     21c:	0c 94 d2 3b 	jmp	0x77a4	; 0x77a4 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>
     220:	0c 94 d5 38 	jmp	0x71aa	; 0x71aa <_ZN10helicopter5tasks20SensorProcessingTaskD0Ev>
     224:	0c 94 7c 23 	jmp	0x46f8	; 0x46f8 <_ZN10helicopter8messages11SyncMessageD0Ev>

00000228 <__ctors_end>:
     228:	11 24       	eor	r1, r1
     22a:	1f be       	out	0x3f, r1	; 63
     22c:	cf ef       	ldi	r28, 0xFF	; 255
     22e:	d1 e2       	ldi	r29, 0x21	; 33
     230:	de bf       	out	0x3e, r29	; 62
     232:	cd bf       	out	0x3d, r28	; 61
     234:	00 e0       	ldi	r16, 0x00	; 0
     236:	0c bf       	out	0x3c, r16	; 60

00000238 <__do_copy_data>:
     238:	12 e0       	ldi	r17, 0x02	; 2
     23a:	a0 e0       	ldi	r26, 0x00	; 0
     23c:	b2 e0       	ldi	r27, 0x02	; 2
     23e:	e0 ef       	ldi	r30, 0xF0	; 240
     240:	f1 e9       	ldi	r31, 0x91	; 145
     242:	00 e0       	ldi	r16, 0x00	; 0
     244:	0b bf       	out	0x3b, r16	; 59
     246:	02 c0       	rjmp	.+4      	; 0x24c <__do_copy_data+0x14>
     248:	07 90       	elpm	r0, Z+
     24a:	0d 92       	st	X+, r0
     24c:	aa 39       	cpi	r26, 0x9A	; 154
     24e:	b1 07       	cpc	r27, r17
     250:	d9 f7       	brne	.-10     	; 0x248 <__do_copy_data+0x10>

00000252 <__do_clear_bss>:
     252:	22 e0       	ldi	r18, 0x02	; 2
     254:	aa e9       	ldi	r26, 0x9A	; 154
     256:	b2 e0       	ldi	r27, 0x02	; 2
     258:	01 c0       	rjmp	.+2      	; 0x25c <.do_clear_bss_start>

0000025a <.do_clear_bss_loop>:
     25a:	1d 92       	st	X+, r1

0000025c <.do_clear_bss_start>:
     25c:	a0 3a       	cpi	r26, 0xA0	; 160
     25e:	b2 07       	cpc	r27, r18
     260:	e1 f7       	brne	.-8      	; 0x25a <.do_clear_bss_loop>
     262:	0e 94 74 1d 	call	0x3ae8	; 0x3ae8 <main>
     266:	0c 94 f6 48 	jmp	0x91ec	; 0x91ec <_exit>

0000026a <__bad_interrupt>:
     26a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000026e <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>:
			 * Y axis is pointing behind the FC
			 * Z axis is pointing up out of the FC
			 */
			

			float MagYawDegrees() const { return magYawDegrees; }
     26e:	cf 93       	push	r28
     270:	df 93       	push	r29
     272:	1f 92       	push	r1
     274:	1f 92       	push	r1
     276:	cd b7       	in	r28, 0x3d	; 61
     278:	de b7       	in	r29, 0x3e	; 62
     27a:	9a 83       	std	Y+2, r25	; 0x02
     27c:	89 83       	std	Y+1, r24	; 0x01
     27e:	89 81       	ldd	r24, Y+1	; 0x01
     280:	9a 81       	ldd	r25, Y+2	; 0x02
     282:	fc 01       	movw	r30, r24
     284:	80 81       	ld	r24, Z
     286:	91 81       	ldd	r25, Z+1	; 0x01
     288:	a2 81       	ldd	r26, Z+2	; 0x02
     28a:	b3 81       	ldd	r27, Z+3	; 0x03
     28c:	bc 01       	movw	r22, r24
     28e:	cd 01       	movw	r24, r26
     290:	0f 90       	pop	r0
     292:	0f 90       	pop	r0
     294:	df 91       	pop	r29
     296:	cf 91       	pop	r28
     298:	08 95       	ret

0000029a <_ZNK10helicopter5model11SystemModel22ReferenceMagYawDegreesEv>:
			void MagYawDegrees(float val) { magYawDegrees = val; }	
				
				
				
			float ReferenceMagYawDegrees() const {return referenceMagYawDegrees;}
     29a:	cf 93       	push	r28
     29c:	df 93       	push	r29
     29e:	1f 92       	push	r1
     2a0:	1f 92       	push	r1
     2a2:	cd b7       	in	r28, 0x3d	; 61
     2a4:	de b7       	in	r29, 0x3e	; 62
     2a6:	9a 83       	std	Y+2, r25	; 0x02
     2a8:	89 83       	std	Y+1, r24	; 0x01
     2aa:	89 81       	ldd	r24, Y+1	; 0x01
     2ac:	9a 81       	ldd	r25, Y+2	; 0x02
     2ae:	fc 01       	movw	r30, r24
     2b0:	84 81       	ldd	r24, Z+4	; 0x04
     2b2:	95 81       	ldd	r25, Z+5	; 0x05
     2b4:	a6 81       	ldd	r26, Z+6	; 0x06
     2b6:	b7 81       	ldd	r27, Z+7	; 0x07
     2b8:	bc 01       	movw	r22, r24
     2ba:	cd 01       	movw	r24, r26
     2bc:	0f 90       	pop	r0
     2be:	0f 90       	pop	r0
     2c0:	df 91       	pop	r29
     2c2:	cf 91       	pop	r28
     2c4:	08 95       	ret

000002c6 <_ZNK10helicopter5model11SystemModel10YawControlEv>:
			void ReferenceMagYawDegrees(float val) { referenceMagYawDegrees = val;}
				
				
			float YawControl() const {return yawControl;}
     2c6:	cf 93       	push	r28
     2c8:	df 93       	push	r29
     2ca:	1f 92       	push	r1
     2cc:	1f 92       	push	r1
     2ce:	cd b7       	in	r28, 0x3d	; 61
     2d0:	de b7       	in	r29, 0x3e	; 62
     2d2:	9a 83       	std	Y+2, r25	; 0x02
     2d4:	89 83       	std	Y+1, r24	; 0x01
     2d6:	89 81       	ldd	r24, Y+1	; 0x01
     2d8:	9a 81       	ldd	r25, Y+2	; 0x02
     2da:	fc 01       	movw	r30, r24
     2dc:	80 85       	ldd	r24, Z+8	; 0x08
     2de:	91 85       	ldd	r25, Z+9	; 0x09
     2e0:	a2 85       	ldd	r26, Z+10	; 0x0a
     2e2:	b3 85       	ldd	r27, Z+11	; 0x0b
     2e4:	bc 01       	movw	r22, r24
     2e6:	cd 01       	movw	r24, r26
     2e8:	0f 90       	pop	r0
     2ea:	0f 90       	pop	r0
     2ec:	df 91       	pop	r29
     2ee:	cf 91       	pop	r28
     2f0:	08 95       	ret

000002f2 <_ZN10helicopter5model11SystemModel10YawControlEf>:
			void YawControl(float val) { yawControl = val;}
     2f2:	cf 93       	push	r28
     2f4:	df 93       	push	r29
     2f6:	00 d0       	rcall	.+0      	; 0x2f8 <_ZN10helicopter5model11SystemModel10YawControlEf+0x6>
     2f8:	00 d0       	rcall	.+0      	; 0x2fa <_ZN10helicopter5model11SystemModel10YawControlEf+0x8>
     2fa:	cd b7       	in	r28, 0x3d	; 61
     2fc:	de b7       	in	r29, 0x3e	; 62
     2fe:	9a 83       	std	Y+2, r25	; 0x02
     300:	89 83       	std	Y+1, r24	; 0x01
     302:	4b 83       	std	Y+3, r20	; 0x03
     304:	5c 83       	std	Y+4, r21	; 0x04
     306:	6d 83       	std	Y+5, r22	; 0x05
     308:	7e 83       	std	Y+6, r23	; 0x06
     30a:	29 81       	ldd	r18, Y+1	; 0x01
     30c:	3a 81       	ldd	r19, Y+2	; 0x02
     30e:	8b 81       	ldd	r24, Y+3	; 0x03
     310:	9c 81       	ldd	r25, Y+4	; 0x04
     312:	ad 81       	ldd	r26, Y+5	; 0x05
     314:	be 81       	ldd	r27, Y+6	; 0x06
     316:	f9 01       	movw	r30, r18
     318:	80 87       	std	Z+8, r24	; 0x08
     31a:	91 87       	std	Z+9, r25	; 0x09
     31c:	a2 87       	std	Z+10, r26	; 0x0a
     31e:	b3 87       	std	Z+11, r27	; 0x0b
     320:	26 96       	adiw	r28, 0x06	; 6
     322:	0f b6       	in	r0, 0x3f	; 63
     324:	f8 94       	cli
     326:	de bf       	out	0x3e, r29	; 62
     328:	0f be       	out	0x3f, r0	; 63
     32a:	cd bf       	out	0x3d, r28	; 61
     32c:	df 91       	pop	r29
     32e:	cf 91       	pop	r28
     330:	08 95       	ret

00000332 <_ZNK10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEv>:
				
			float YawControlBeforeServoLimitsAdjustment() const {return yawControlBeforeServoLimitsAdjustment;}
     332:	cf 93       	push	r28
     334:	df 93       	push	r29
     336:	1f 92       	push	r1
     338:	1f 92       	push	r1
     33a:	cd b7       	in	r28, 0x3d	; 61
     33c:	de b7       	in	r29, 0x3e	; 62
     33e:	9a 83       	std	Y+2, r25	; 0x02
     340:	89 83       	std	Y+1, r24	; 0x01
     342:	89 81       	ldd	r24, Y+1	; 0x01
     344:	9a 81       	ldd	r25, Y+2	; 0x02
     346:	fc 01       	movw	r30, r24
     348:	84 85       	ldd	r24, Z+12	; 0x0c
     34a:	95 85       	ldd	r25, Z+13	; 0x0d
     34c:	a6 85       	ldd	r26, Z+14	; 0x0e
     34e:	b7 85       	ldd	r27, Z+15	; 0x0f
     350:	bc 01       	movw	r22, r24
     352:	cd 01       	movw	r24, r26
     354:	0f 90       	pop	r0
     356:	0f 90       	pop	r0
     358:	df 91       	pop	r29
     35a:	cf 91       	pop	r28
     35c:	08 95       	ret

0000035e <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf>:
			void YawControlBeforeServoLimitsAdjustment(float val) { yawControlBeforeServoLimitsAdjustment = val;}
     35e:	cf 93       	push	r28
     360:	df 93       	push	r29
     362:	00 d0       	rcall	.+0      	; 0x364 <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf+0x6>
     364:	00 d0       	rcall	.+0      	; 0x366 <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf+0x8>
     366:	cd b7       	in	r28, 0x3d	; 61
     368:	de b7       	in	r29, 0x3e	; 62
     36a:	9a 83       	std	Y+2, r25	; 0x02
     36c:	89 83       	std	Y+1, r24	; 0x01
     36e:	4b 83       	std	Y+3, r20	; 0x03
     370:	5c 83       	std	Y+4, r21	; 0x04
     372:	6d 83       	std	Y+5, r22	; 0x05
     374:	7e 83       	std	Y+6, r23	; 0x06
     376:	29 81       	ldd	r18, Y+1	; 0x01
     378:	3a 81       	ldd	r19, Y+2	; 0x02
     37a:	8b 81       	ldd	r24, Y+3	; 0x03
     37c:	9c 81       	ldd	r25, Y+4	; 0x04
     37e:	ad 81       	ldd	r26, Y+5	; 0x05
     380:	be 81       	ldd	r27, Y+6	; 0x06
     382:	f9 01       	movw	r30, r18
     384:	84 87       	std	Z+12, r24	; 0x0c
     386:	95 87       	std	Z+13, r25	; 0x0d
     388:	a6 87       	std	Z+14, r26	; 0x0e
     38a:	b7 87       	std	Z+15, r27	; 0x0f
     38c:	26 96       	adiw	r28, 0x06	; 6
     38e:	0f b6       	in	r0, 0x3f	; 63
     390:	f8 94       	cli
     392:	de bf       	out	0x3e, r29	; 62
     394:	0f be       	out	0x3f, r0	; 63
     396:	cd bf       	out	0x3d, r28	; 61
     398:	df 91       	pop	r29
     39a:	cf 91       	pop	r28
     39c:	08 95       	ret

0000039e <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>:
				
			float YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
     39e:	cf 93       	push	r28
     3a0:	df 93       	push	r29
     3a2:	1f 92       	push	r1
     3a4:	1f 92       	push	r1
     3a6:	cd b7       	in	r28, 0x3d	; 61
     3a8:	de b7       	in	r29, 0x3e	; 62
     3aa:	9a 83       	std	Y+2, r25	; 0x02
     3ac:	89 83       	std	Y+1, r24	; 0x01
     3ae:	89 81       	ldd	r24, Y+1	; 0x01
     3b0:	9a 81       	ldd	r25, Y+2	; 0x02
     3b2:	fc 01       	movw	r30, r24
     3b4:	80 89       	ldd	r24, Z+16	; 0x10
     3b6:	91 89       	ldd	r25, Z+17	; 0x11
     3b8:	a2 89       	ldd	r26, Z+18	; 0x12
     3ba:	b3 89       	ldd	r27, Z+19	; 0x13
     3bc:	bc 01       	movw	r22, r24
     3be:	cd 01       	movw	r24, r26
     3c0:	0f 90       	pop	r0
     3c2:	0f 90       	pop	r0
     3c4:	df 91       	pop	r29
     3c6:	cf 91       	pop	r28
     3c8:	08 95       	ret

000003ca <_ZNK10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEv>:
			void YawVelocityDegreesPerSecond(float val) { yawVelocityDegreesPerSecond = val;}
				
			float ReferenceYawVelocityDegreesPerSecond() const {return referenceYawVelocityDegreesPerSecond;}
     3ca:	cf 93       	push	r28
     3cc:	df 93       	push	r29
     3ce:	1f 92       	push	r1
     3d0:	1f 92       	push	r1
     3d2:	cd b7       	in	r28, 0x3d	; 61
     3d4:	de b7       	in	r29, 0x3e	; 62
     3d6:	9a 83       	std	Y+2, r25	; 0x02
     3d8:	89 83       	std	Y+1, r24	; 0x01
     3da:	89 81       	ldd	r24, Y+1	; 0x01
     3dc:	9a 81       	ldd	r25, Y+2	; 0x02
     3de:	fc 01       	movw	r30, r24
     3e0:	84 89       	ldd	r24, Z+20	; 0x14
     3e2:	95 89       	ldd	r25, Z+21	; 0x15
     3e4:	a6 89       	ldd	r26, Z+22	; 0x16
     3e6:	b7 89       	ldd	r27, Z+23	; 0x17
     3e8:	bc 01       	movw	r22, r24
     3ea:	cd 01       	movw	r24, r26
     3ec:	0f 90       	pop	r0
     3ee:	0f 90       	pop	r0
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	08 95       	ret

000003f6 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>:
			void ReferenceYawVelocityDegreesPerSecond(float val) { referenceYawVelocityDegreesPerSecond = val;}
				
			float YawIntegral() const {return yawIntegral;}
     3f6:	cf 93       	push	r28
     3f8:	df 93       	push	r29
     3fa:	1f 92       	push	r1
     3fc:	1f 92       	push	r1
     3fe:	cd b7       	in	r28, 0x3d	; 61
     400:	de b7       	in	r29, 0x3e	; 62
     402:	9a 83       	std	Y+2, r25	; 0x02
     404:	89 83       	std	Y+1, r24	; 0x01
     406:	89 81       	ldd	r24, Y+1	; 0x01
     408:	9a 81       	ldd	r25, Y+2	; 0x02
     40a:	fc 01       	movw	r30, r24
     40c:	80 8d       	ldd	r24, Z+24	; 0x18
     40e:	91 8d       	ldd	r25, Z+25	; 0x19
     410:	a2 8d       	ldd	r26, Z+26	; 0x1a
     412:	b3 8d       	ldd	r27, Z+27	; 0x1b
     414:	bc 01       	movw	r22, r24
     416:	cd 01       	movw	r24, r26
     418:	0f 90       	pop	r0
     41a:	0f 90       	pop	r0
     41c:	df 91       	pop	r29
     41e:	cf 91       	pop	r28
     420:	08 95       	ret

00000422 <_ZN10helicopter5model11SystemModel11YawIntegralEf>:
			void YawIntegral(float val) { yawIntegral = val;}
     422:	cf 93       	push	r28
     424:	df 93       	push	r29
     426:	00 d0       	rcall	.+0      	; 0x428 <_ZN10helicopter5model11SystemModel11YawIntegralEf+0x6>
     428:	00 d0       	rcall	.+0      	; 0x42a <_ZN10helicopter5model11SystemModel11YawIntegralEf+0x8>
     42a:	cd b7       	in	r28, 0x3d	; 61
     42c:	de b7       	in	r29, 0x3e	; 62
     42e:	9a 83       	std	Y+2, r25	; 0x02
     430:	89 83       	std	Y+1, r24	; 0x01
     432:	4b 83       	std	Y+3, r20	; 0x03
     434:	5c 83       	std	Y+4, r21	; 0x04
     436:	6d 83       	std	Y+5, r22	; 0x05
     438:	7e 83       	std	Y+6, r23	; 0x06
     43a:	29 81       	ldd	r18, Y+1	; 0x01
     43c:	3a 81       	ldd	r19, Y+2	; 0x02
     43e:	8b 81       	ldd	r24, Y+3	; 0x03
     440:	9c 81       	ldd	r25, Y+4	; 0x04
     442:	ad 81       	ldd	r26, Y+5	; 0x05
     444:	be 81       	ldd	r27, Y+6	; 0x06
     446:	f9 01       	movw	r30, r18
     448:	80 8f       	std	Z+24, r24	; 0x18
     44a:	91 8f       	std	Z+25, r25	; 0x19
     44c:	a2 8f       	std	Z+26, r26	; 0x1a
     44e:	b3 8f       	std	Z+27, r27	; 0x1b
     450:	26 96       	adiw	r28, 0x06	; 6
     452:	0f b6       	in	r0, 0x3f	; 63
     454:	f8 94       	cli
     456:	de bf       	out	0x3e, r29	; 62
     458:	0f be       	out	0x3f, r0	; 63
     45a:	cd bf       	out	0x3d, r28	; 61
     45c:	df 91       	pop	r29
     45e:	cf 91       	pop	r28
     460:	08 95       	ret

00000462 <_ZN10helicopter5model11SystemModel15YawProportionalEf>:

			float YawProportional() const {return yawProportional;}
			void YawProportional(float val) { yawProportional = val;}
     462:	cf 93       	push	r28
     464:	df 93       	push	r29
     466:	00 d0       	rcall	.+0      	; 0x468 <_ZN10helicopter5model11SystemModel15YawProportionalEf+0x6>
     468:	00 d0       	rcall	.+0      	; 0x46a <_ZN10helicopter5model11SystemModel15YawProportionalEf+0x8>
     46a:	cd b7       	in	r28, 0x3d	; 61
     46c:	de b7       	in	r29, 0x3e	; 62
     46e:	9a 83       	std	Y+2, r25	; 0x02
     470:	89 83       	std	Y+1, r24	; 0x01
     472:	4b 83       	std	Y+3, r20	; 0x03
     474:	5c 83       	std	Y+4, r21	; 0x04
     476:	6d 83       	std	Y+5, r22	; 0x05
     478:	7e 83       	std	Y+6, r23	; 0x06
     47a:	29 81       	ldd	r18, Y+1	; 0x01
     47c:	3a 81       	ldd	r19, Y+2	; 0x02
     47e:	8b 81       	ldd	r24, Y+3	; 0x03
     480:	9c 81       	ldd	r25, Y+4	; 0x04
     482:	ad 81       	ldd	r26, Y+5	; 0x05
     484:	be 81       	ldd	r27, Y+6	; 0x06
     486:	f9 01       	movw	r30, r18
     488:	84 8f       	std	Z+28, r24	; 0x1c
     48a:	95 8f       	std	Z+29, r25	; 0x1d
     48c:	a6 8f       	std	Z+30, r26	; 0x1e
     48e:	b7 8f       	std	Z+31, r27	; 0x1f
     490:	26 96       	adiw	r28, 0x06	; 6
     492:	0f b6       	in	r0, 0x3f	; 63
     494:	f8 94       	cli
     496:	de bf       	out	0x3e, r29	; 62
     498:	0f be       	out	0x3f, r0	; 63
     49a:	cd bf       	out	0x3d, r28	; 61
     49c:	df 91       	pop	r29
     49e:	cf 91       	pop	r28
     4a0:	08 95       	ret

000004a2 <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf>:

			float YawDerivativeError() const {return yawDerivativeError;}
			void YawDerivativeError(float val) { yawDerivativeError = val;}								
     4a2:	cf 93       	push	r28
     4a4:	df 93       	push	r29
     4a6:	00 d0       	rcall	.+0      	; 0x4a8 <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf+0x6>
     4a8:	00 d0       	rcall	.+0      	; 0x4aa <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf+0x8>
     4aa:	cd b7       	in	r28, 0x3d	; 61
     4ac:	de b7       	in	r29, 0x3e	; 62
     4ae:	9a 83       	std	Y+2, r25	; 0x02
     4b0:	89 83       	std	Y+1, r24	; 0x01
     4b2:	4b 83       	std	Y+3, r20	; 0x03
     4b4:	5c 83       	std	Y+4, r21	; 0x04
     4b6:	6d 83       	std	Y+5, r22	; 0x05
     4b8:	7e 83       	std	Y+6, r23	; 0x06
     4ba:	29 81       	ldd	r18, Y+1	; 0x01
     4bc:	3a 81       	ldd	r19, Y+2	; 0x02
     4be:	8b 81       	ldd	r24, Y+3	; 0x03
     4c0:	9c 81       	ldd	r25, Y+4	; 0x04
     4c2:	ad 81       	ldd	r26, Y+5	; 0x05
     4c4:	be 81       	ldd	r27, Y+6	; 0x06
     4c6:	f9 01       	movw	r30, r18
     4c8:	80 a3       	std	Z+32, r24	; 0x20
     4ca:	91 a3       	std	Z+33, r25	; 0x21
     4cc:	a2 a3       	std	Z+34, r26	; 0x22
     4ce:	b3 a3       	std	Z+35, r27	; 0x23
     4d0:	26 96       	adiw	r28, 0x06	; 6
     4d2:	0f b6       	in	r0, 0x3f	; 63
     4d4:	f8 94       	cli
     4d6:	de bf       	out	0x3e, r29	; 62
     4d8:	0f be       	out	0x3f, r0	; 63
     4da:	cd bf       	out	0x3d, r28	; 61
     4dc:	df 91       	pop	r29
     4de:	cf 91       	pop	r28
     4e0:	08 95       	ret

000004e2 <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>:
																							
		
		
		
			float XNEDBodyFrame() const {return xNEDBodyFrame;}
     4e2:	cf 93       	push	r28
     4e4:	df 93       	push	r29
     4e6:	1f 92       	push	r1
     4e8:	1f 92       	push	r1
     4ea:	cd b7       	in	r28, 0x3d	; 61
     4ec:	de b7       	in	r29, 0x3e	; 62
     4ee:	9a 83       	std	Y+2, r25	; 0x02
     4f0:	89 83       	std	Y+1, r24	; 0x01
     4f2:	89 81       	ldd	r24, Y+1	; 0x01
     4f4:	9a 81       	ldd	r25, Y+2	; 0x02
     4f6:	fc 01       	movw	r30, r24
     4f8:	84 a1       	ldd	r24, Z+36	; 0x24
     4fa:	95 a1       	ldd	r25, Z+37	; 0x25
     4fc:	a6 a1       	ldd	r26, Z+38	; 0x26
     4fe:	b7 a1       	ldd	r27, Z+39	; 0x27
     500:	bc 01       	movw	r22, r24
     502:	cd 01       	movw	r24, r26
     504:	0f 90       	pop	r0
     506:	0f 90       	pop	r0
     508:	df 91       	pop	r29
     50a:	cf 91       	pop	r28
     50c:	08 95       	ret

0000050e <_ZNK10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEv>:
			void XNEDBodyFrame(float val) { xNEDBodyFrame = val;}
						
			float ReferenceXNEDBodyFrame() const {return referenceXNEDBodyFrame;}
     50e:	cf 93       	push	r28
     510:	df 93       	push	r29
     512:	1f 92       	push	r1
     514:	1f 92       	push	r1
     516:	cd b7       	in	r28, 0x3d	; 61
     518:	de b7       	in	r29, 0x3e	; 62
     51a:	9a 83       	std	Y+2, r25	; 0x02
     51c:	89 83       	std	Y+1, r24	; 0x01
     51e:	89 81       	ldd	r24, Y+1	; 0x01
     520:	9a 81       	ldd	r25, Y+2	; 0x02
     522:	fc 01       	movw	r30, r24
     524:	80 a5       	ldd	r24, Z+40	; 0x28
     526:	91 a5       	ldd	r25, Z+41	; 0x29
     528:	a2 a5       	ldd	r26, Z+42	; 0x2a
     52a:	b3 a5       	ldd	r27, Z+43	; 0x2b
     52c:	bc 01       	movw	r22, r24
     52e:	cd 01       	movw	r24, r26
     530:	0f 90       	pop	r0
     532:	0f 90       	pop	r0
     534:	df 91       	pop	r29
     536:	cf 91       	pop	r28
     538:	08 95       	ret

0000053a <_ZNK10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEv>:
			void ReferenceXNEDBodyFrame(float val) { referenceXNEDBodyFrame = val;}

			float LongitudeControlBeforeServoLimitsAdjustment() const {return longitudeControlBeforeServoLimitsAdjustment;}
     53a:	cf 93       	push	r28
     53c:	df 93       	push	r29
     53e:	1f 92       	push	r1
     540:	1f 92       	push	r1
     542:	cd b7       	in	r28, 0x3d	; 61
     544:	de b7       	in	r29, 0x3e	; 62
     546:	9a 83       	std	Y+2, r25	; 0x02
     548:	89 83       	std	Y+1, r24	; 0x01
     54a:	89 81       	ldd	r24, Y+1	; 0x01
     54c:	9a 81       	ldd	r25, Y+2	; 0x02
     54e:	fc 01       	movw	r30, r24
     550:	84 a5       	ldd	r24, Z+44	; 0x2c
     552:	95 a5       	ldd	r25, Z+45	; 0x2d
     554:	a6 a5       	ldd	r26, Z+46	; 0x2e
     556:	b7 a5       	ldd	r27, Z+47	; 0x2f
     558:	bc 01       	movw	r22, r24
     55a:	cd 01       	movw	r24, r26
     55c:	0f 90       	pop	r0
     55e:	0f 90       	pop	r0
     560:	df 91       	pop	r29
     562:	cf 91       	pop	r28
     564:	08 95       	ret

00000566 <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf>:
			void LongitudeControlBeforeServoLimitsAdjustment(float val) { longitudeControlBeforeServoLimitsAdjustment = val;}
     566:	cf 93       	push	r28
     568:	df 93       	push	r29
     56a:	00 d0       	rcall	.+0      	; 0x56c <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf+0x6>
     56c:	00 d0       	rcall	.+0      	; 0x56e <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf+0x8>
     56e:	cd b7       	in	r28, 0x3d	; 61
     570:	de b7       	in	r29, 0x3e	; 62
     572:	9a 83       	std	Y+2, r25	; 0x02
     574:	89 83       	std	Y+1, r24	; 0x01
     576:	4b 83       	std	Y+3, r20	; 0x03
     578:	5c 83       	std	Y+4, r21	; 0x04
     57a:	6d 83       	std	Y+5, r22	; 0x05
     57c:	7e 83       	std	Y+6, r23	; 0x06
     57e:	29 81       	ldd	r18, Y+1	; 0x01
     580:	3a 81       	ldd	r19, Y+2	; 0x02
     582:	8b 81       	ldd	r24, Y+3	; 0x03
     584:	9c 81       	ldd	r25, Y+4	; 0x04
     586:	ad 81       	ldd	r26, Y+5	; 0x05
     588:	be 81       	ldd	r27, Y+6	; 0x06
     58a:	f9 01       	movw	r30, r18
     58c:	84 a7       	std	Z+44, r24	; 0x2c
     58e:	95 a7       	std	Z+45, r25	; 0x2d
     590:	a6 a7       	std	Z+46, r26	; 0x2e
     592:	b7 a7       	std	Z+47, r27	; 0x2f
     594:	26 96       	adiw	r28, 0x06	; 6
     596:	0f b6       	in	r0, 0x3f	; 63
     598:	f8 94       	cli
     59a:	de bf       	out	0x3e, r29	; 62
     59c:	0f be       	out	0x3f, r0	; 63
     59e:	cd bf       	out	0x3d, r28	; 61
     5a0:	df 91       	pop	r29
     5a2:	cf 91       	pop	r28
     5a4:	08 95       	ret

000005a6 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>:

			float LongitudeControl() const {return longitudeControl;}
     5a6:	cf 93       	push	r28
     5a8:	df 93       	push	r29
     5aa:	1f 92       	push	r1
     5ac:	1f 92       	push	r1
     5ae:	cd b7       	in	r28, 0x3d	; 61
     5b0:	de b7       	in	r29, 0x3e	; 62
     5b2:	9a 83       	std	Y+2, r25	; 0x02
     5b4:	89 83       	std	Y+1, r24	; 0x01
     5b6:	89 81       	ldd	r24, Y+1	; 0x01
     5b8:	9a 81       	ldd	r25, Y+2	; 0x02
     5ba:	fc 01       	movw	r30, r24
     5bc:	80 a9       	ldd	r24, Z+48	; 0x30
     5be:	91 a9       	ldd	r25, Z+49	; 0x31
     5c0:	a2 a9       	ldd	r26, Z+50	; 0x32
     5c2:	b3 a9       	ldd	r27, Z+51	; 0x33
     5c4:	bc 01       	movw	r22, r24
     5c6:	cd 01       	movw	r24, r26
     5c8:	0f 90       	pop	r0
     5ca:	0f 90       	pop	r0
     5cc:	df 91       	pop	r29
     5ce:	cf 91       	pop	r28
     5d0:	08 95       	ret

000005d2 <_ZN10helicopter5model11SystemModel16LongitudeControlEf>:
			void LongitudeControl(float val) { longitudeControl = val;}
     5d2:	cf 93       	push	r28
     5d4:	df 93       	push	r29
     5d6:	00 d0       	rcall	.+0      	; 0x5d8 <_ZN10helicopter5model11SystemModel16LongitudeControlEf+0x6>
     5d8:	00 d0       	rcall	.+0      	; 0x5da <_ZN10helicopter5model11SystemModel16LongitudeControlEf+0x8>
     5da:	cd b7       	in	r28, 0x3d	; 61
     5dc:	de b7       	in	r29, 0x3e	; 62
     5de:	9a 83       	std	Y+2, r25	; 0x02
     5e0:	89 83       	std	Y+1, r24	; 0x01
     5e2:	4b 83       	std	Y+3, r20	; 0x03
     5e4:	5c 83       	std	Y+4, r21	; 0x04
     5e6:	6d 83       	std	Y+5, r22	; 0x05
     5e8:	7e 83       	std	Y+6, r23	; 0x06
     5ea:	29 81       	ldd	r18, Y+1	; 0x01
     5ec:	3a 81       	ldd	r19, Y+2	; 0x02
     5ee:	8b 81       	ldd	r24, Y+3	; 0x03
     5f0:	9c 81       	ldd	r25, Y+4	; 0x04
     5f2:	ad 81       	ldd	r26, Y+5	; 0x05
     5f4:	be 81       	ldd	r27, Y+6	; 0x06
     5f6:	f9 01       	movw	r30, r18
     5f8:	80 ab       	std	Z+48, r24	; 0x30
     5fa:	91 ab       	std	Z+49, r25	; 0x31
     5fc:	a2 ab       	std	Z+50, r26	; 0x32
     5fe:	b3 ab       	std	Z+51, r27	; 0x33
     600:	26 96       	adiw	r28, 0x06	; 6
     602:	0f b6       	in	r0, 0x3f	; 63
     604:	f8 94       	cli
     606:	de bf       	out	0x3e, r29	; 62
     608:	0f be       	out	0x3f, r0	; 63
     60a:	cd bf       	out	0x3d, r28	; 61
     60c:	df 91       	pop	r29
     60e:	cf 91       	pop	r28
     610:	08 95       	ret

00000612 <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>:
				
			float XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
     612:	cf 93       	push	r28
     614:	df 93       	push	r29
     616:	1f 92       	push	r1
     618:	1f 92       	push	r1
     61a:	cd b7       	in	r28, 0x3d	; 61
     61c:	de b7       	in	r29, 0x3e	; 62
     61e:	9a 83       	std	Y+2, r25	; 0x02
     620:	89 83       	std	Y+1, r24	; 0x01
     622:	89 81       	ldd	r24, Y+1	; 0x01
     624:	9a 81       	ldd	r25, Y+2	; 0x02
     626:	fc 01       	movw	r30, r24
     628:	84 a9       	ldd	r24, Z+52	; 0x34
     62a:	95 a9       	ldd	r25, Z+53	; 0x35
     62c:	a6 a9       	ldd	r26, Z+54	; 0x36
     62e:	b7 a9       	ldd	r27, Z+55	; 0x37
     630:	bc 01       	movw	r22, r24
     632:	cd 01       	movw	r24, r26
     634:	0f 90       	pop	r0
     636:	0f 90       	pop	r0
     638:	df 91       	pop	r29
     63a:	cf 91       	pop	r28
     63c:	08 95       	ret

0000063e <_ZNK10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEv>:
			void XVelocityMetersPerSecond(float val) { xVelocityMetersPerSecond = val;}
				
			float ReferenceXVelocityMetersPerSecond() const {return referenceXVelocityMetersPerSecond;}
     63e:	cf 93       	push	r28
     640:	df 93       	push	r29
     642:	1f 92       	push	r1
     644:	1f 92       	push	r1
     646:	cd b7       	in	r28, 0x3d	; 61
     648:	de b7       	in	r29, 0x3e	; 62
     64a:	9a 83       	std	Y+2, r25	; 0x02
     64c:	89 83       	std	Y+1, r24	; 0x01
     64e:	89 81       	ldd	r24, Y+1	; 0x01
     650:	9a 81       	ldd	r25, Y+2	; 0x02
     652:	fc 01       	movw	r30, r24
     654:	80 ad       	ldd	r24, Z+56	; 0x38
     656:	91 ad       	ldd	r25, Z+57	; 0x39
     658:	a2 ad       	ldd	r26, Z+58	; 0x3a
     65a:	b3 ad       	ldd	r27, Z+59	; 0x3b
     65c:	bc 01       	movw	r22, r24
     65e:	cd 01       	movw	r24, r26
     660:	0f 90       	pop	r0
     662:	0f 90       	pop	r0
     664:	df 91       	pop	r29
     666:	cf 91       	pop	r28
     668:	08 95       	ret

0000066a <_ZNK10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEv>:
			void ReferenceXVelocityMetersPerSecond(float val) { referenceXVelocityMetersPerSecond = val;}
				
			float XLongitudeOuterLoopSetpoint() const {return xLongitudeOuterLoopSetpoint;}
     66a:	cf 93       	push	r28
     66c:	df 93       	push	r29
     66e:	1f 92       	push	r1
     670:	1f 92       	push	r1
     672:	cd b7       	in	r28, 0x3d	; 61
     674:	de b7       	in	r29, 0x3e	; 62
     676:	9a 83       	std	Y+2, r25	; 0x02
     678:	89 83       	std	Y+1, r24	; 0x01
     67a:	89 81       	ldd	r24, Y+1	; 0x01
     67c:	9a 81       	ldd	r25, Y+2	; 0x02
     67e:	fc 01       	movw	r30, r24
     680:	84 ad       	ldd	r24, Z+60	; 0x3c
     682:	95 ad       	ldd	r25, Z+61	; 0x3d
     684:	a6 ad       	ldd	r26, Z+62	; 0x3e
     686:	b7 ad       	ldd	r27, Z+63	; 0x3f
     688:	bc 01       	movw	r22, r24
     68a:	cd 01       	movw	r24, r26
     68c:	0f 90       	pop	r0
     68e:	0f 90       	pop	r0
     690:	df 91       	pop	r29
     692:	cf 91       	pop	r28
     694:	08 95       	ret

00000696 <_ZN10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEf>:
			void XLongitudeOuterLoopSetpoint(float val) { xLongitudeOuterLoopSetpoint = val;}
     696:	cf 93       	push	r28
     698:	df 93       	push	r29
     69a:	00 d0       	rcall	.+0      	; 0x69c <_ZN10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEf+0x6>
     69c:	00 d0       	rcall	.+0      	; 0x69e <_ZN10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEf+0x8>
     69e:	cd b7       	in	r28, 0x3d	; 61
     6a0:	de b7       	in	r29, 0x3e	; 62
     6a2:	9a 83       	std	Y+2, r25	; 0x02
     6a4:	89 83       	std	Y+1, r24	; 0x01
     6a6:	4b 83       	std	Y+3, r20	; 0x03
     6a8:	5c 83       	std	Y+4, r21	; 0x04
     6aa:	6d 83       	std	Y+5, r22	; 0x05
     6ac:	7e 83       	std	Y+6, r23	; 0x06
     6ae:	29 81       	ldd	r18, Y+1	; 0x01
     6b0:	3a 81       	ldd	r19, Y+2	; 0x02
     6b2:	8b 81       	ldd	r24, Y+3	; 0x03
     6b4:	9c 81       	ldd	r25, Y+4	; 0x04
     6b6:	ad 81       	ldd	r26, Y+5	; 0x05
     6b8:	be 81       	ldd	r27, Y+6	; 0x06
     6ba:	f9 01       	movw	r30, r18
     6bc:	84 af       	std	Z+60, r24	; 0x3c
     6be:	95 af       	std	Z+61, r25	; 0x3d
     6c0:	a6 af       	std	Z+62, r26	; 0x3e
     6c2:	b7 af       	std	Z+63, r27	; 0x3f
     6c4:	26 96       	adiw	r28, 0x06	; 6
     6c6:	0f b6       	in	r0, 0x3f	; 63
     6c8:	f8 94       	cli
     6ca:	de bf       	out	0x3e, r29	; 62
     6cc:	0f be       	out	0x3f, r0	; 63
     6ce:	cd bf       	out	0x3d, r28	; 61
     6d0:	df 91       	pop	r29
     6d2:	cf 91       	pop	r28
     6d4:	08 95       	ret

000006d6 <_ZN10helicopter5model11SystemModel13XProportionalEf>:
				
			float XProportional() const {return xProportional;}
			void XProportional(float val) { xProportional = val;}
     6d6:	cf 93       	push	r28
     6d8:	df 93       	push	r29
     6da:	00 d0       	rcall	.+0      	; 0x6dc <_ZN10helicopter5model11SystemModel13XProportionalEf+0x6>
     6dc:	00 d0       	rcall	.+0      	; 0x6de <_ZN10helicopter5model11SystemModel13XProportionalEf+0x8>
     6de:	cd b7       	in	r28, 0x3d	; 61
     6e0:	de b7       	in	r29, 0x3e	; 62
     6e2:	9a 83       	std	Y+2, r25	; 0x02
     6e4:	89 83       	std	Y+1, r24	; 0x01
     6e6:	4b 83       	std	Y+3, r20	; 0x03
     6e8:	5c 83       	std	Y+4, r21	; 0x04
     6ea:	6d 83       	std	Y+5, r22	; 0x05
     6ec:	7e 83       	std	Y+6, r23	; 0x06
     6ee:	89 81       	ldd	r24, Y+1	; 0x01
     6f0:	9a 81       	ldd	r25, Y+2	; 0x02
     6f2:	9c 01       	movw	r18, r24
     6f4:	20 5c       	subi	r18, 0xC0	; 192
     6f6:	3f 4f       	sbci	r19, 0xFF	; 255
     6f8:	8b 81       	ldd	r24, Y+3	; 0x03
     6fa:	9c 81       	ldd	r25, Y+4	; 0x04
     6fc:	ad 81       	ldd	r26, Y+5	; 0x05
     6fe:	be 81       	ldd	r27, Y+6	; 0x06
     700:	f9 01       	movw	r30, r18
     702:	80 83       	st	Z, r24
     704:	91 83       	std	Z+1, r25	; 0x01
     706:	a2 83       	std	Z+2, r26	; 0x02
     708:	b3 83       	std	Z+3, r27	; 0x03
     70a:	26 96       	adiw	r28, 0x06	; 6
     70c:	0f b6       	in	r0, 0x3f	; 63
     70e:	f8 94       	cli
     710:	de bf       	out	0x3e, r29	; 62
     712:	0f be       	out	0x3f, r0	; 63
     714:	cd bf       	out	0x3d, r28	; 61
     716:	df 91       	pop	r29
     718:	cf 91       	pop	r28
     71a:	08 95       	ret

0000071c <_ZNK10helicopter5model11SystemModel9XIntegralEv>:
				
			float XIntegral() const {return xIntegral;}
     71c:	cf 93       	push	r28
     71e:	df 93       	push	r29
     720:	1f 92       	push	r1
     722:	1f 92       	push	r1
     724:	cd b7       	in	r28, 0x3d	; 61
     726:	de b7       	in	r29, 0x3e	; 62
     728:	9a 83       	std	Y+2, r25	; 0x02
     72a:	89 83       	std	Y+1, r24	; 0x01
     72c:	89 81       	ldd	r24, Y+1	; 0x01
     72e:	9a 81       	ldd	r25, Y+2	; 0x02
     730:	8c 5b       	subi	r24, 0xBC	; 188
     732:	9f 4f       	sbci	r25, 0xFF	; 255
     734:	fc 01       	movw	r30, r24
     736:	80 81       	ld	r24, Z
     738:	91 81       	ldd	r25, Z+1	; 0x01
     73a:	a2 81       	ldd	r26, Z+2	; 0x02
     73c:	b3 81       	ldd	r27, Z+3	; 0x03
     73e:	bc 01       	movw	r22, r24
     740:	cd 01       	movw	r24, r26
     742:	0f 90       	pop	r0
     744:	0f 90       	pop	r0
     746:	df 91       	pop	r29
     748:	cf 91       	pop	r28
     74a:	08 95       	ret

0000074c <_ZN10helicopter5model11SystemModel9XIntegralEf>:
			void XIntegral(float val) { xIntegral = val;}
     74c:	cf 93       	push	r28
     74e:	df 93       	push	r29
     750:	00 d0       	rcall	.+0      	; 0x752 <_ZN10helicopter5model11SystemModel9XIntegralEf+0x6>
     752:	00 d0       	rcall	.+0      	; 0x754 <_ZN10helicopter5model11SystemModel9XIntegralEf+0x8>
     754:	cd b7       	in	r28, 0x3d	; 61
     756:	de b7       	in	r29, 0x3e	; 62
     758:	9a 83       	std	Y+2, r25	; 0x02
     75a:	89 83       	std	Y+1, r24	; 0x01
     75c:	4b 83       	std	Y+3, r20	; 0x03
     75e:	5c 83       	std	Y+4, r21	; 0x04
     760:	6d 83       	std	Y+5, r22	; 0x05
     762:	7e 83       	std	Y+6, r23	; 0x06
     764:	89 81       	ldd	r24, Y+1	; 0x01
     766:	9a 81       	ldd	r25, Y+2	; 0x02
     768:	9c 01       	movw	r18, r24
     76a:	2c 5b       	subi	r18, 0xBC	; 188
     76c:	3f 4f       	sbci	r19, 0xFF	; 255
     76e:	8b 81       	ldd	r24, Y+3	; 0x03
     770:	9c 81       	ldd	r25, Y+4	; 0x04
     772:	ad 81       	ldd	r26, Y+5	; 0x05
     774:	be 81       	ldd	r27, Y+6	; 0x06
     776:	f9 01       	movw	r30, r18
     778:	80 83       	st	Z, r24
     77a:	91 83       	std	Z+1, r25	; 0x01
     77c:	a2 83       	std	Z+2, r26	; 0x02
     77e:	b3 83       	std	Z+3, r27	; 0x03
     780:	26 96       	adiw	r28, 0x06	; 6
     782:	0f b6       	in	r0, 0x3f	; 63
     784:	f8 94       	cli
     786:	de bf       	out	0x3e, r29	; 62
     788:	0f be       	out	0x3f, r0	; 63
     78a:	cd bf       	out	0x3d, r28	; 61
     78c:	df 91       	pop	r29
     78e:	cf 91       	pop	r28
     790:	08 95       	ret

00000792 <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf>:
				
			float XDerivativeError() const {return xDerivativeError;}
			void XDerivativeError(float val) { xDerivativeError = val;}
     792:	cf 93       	push	r28
     794:	df 93       	push	r29
     796:	00 d0       	rcall	.+0      	; 0x798 <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf+0x6>
     798:	00 d0       	rcall	.+0      	; 0x79a <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf+0x8>
     79a:	cd b7       	in	r28, 0x3d	; 61
     79c:	de b7       	in	r29, 0x3e	; 62
     79e:	9a 83       	std	Y+2, r25	; 0x02
     7a0:	89 83       	std	Y+1, r24	; 0x01
     7a2:	4b 83       	std	Y+3, r20	; 0x03
     7a4:	5c 83       	std	Y+4, r21	; 0x04
     7a6:	6d 83       	std	Y+5, r22	; 0x05
     7a8:	7e 83       	std	Y+6, r23	; 0x06
     7aa:	89 81       	ldd	r24, Y+1	; 0x01
     7ac:	9a 81       	ldd	r25, Y+2	; 0x02
     7ae:	9c 01       	movw	r18, r24
     7b0:	28 5b       	subi	r18, 0xB8	; 184
     7b2:	3f 4f       	sbci	r19, 0xFF	; 255
     7b4:	8b 81       	ldd	r24, Y+3	; 0x03
     7b6:	9c 81       	ldd	r25, Y+4	; 0x04
     7b8:	ad 81       	ldd	r26, Y+5	; 0x05
     7ba:	be 81       	ldd	r27, Y+6	; 0x06
     7bc:	f9 01       	movw	r30, r18
     7be:	80 83       	st	Z, r24
     7c0:	91 83       	std	Z+1, r25	; 0x01
     7c2:	a2 83       	std	Z+2, r26	; 0x02
     7c4:	b3 83       	std	Z+3, r27	; 0x03
     7c6:	26 96       	adiw	r28, 0x06	; 6
     7c8:	0f b6       	in	r0, 0x3f	; 63
     7ca:	f8 94       	cli
     7cc:	de bf       	out	0x3e, r29	; 62
     7ce:	0f be       	out	0x3f, r0	; 63
     7d0:	cd bf       	out	0x3d, r28	; 61
     7d2:	df 91       	pop	r29
     7d4:	cf 91       	pop	r28
     7d6:	08 95       	ret

000007d8 <_ZNK10helicopter5model11SystemModel17ThetaPitchDegreesEv>:
				
		
			float ThetaPitchDegrees() const {return thetaPitchDegrees;}
     7d8:	cf 93       	push	r28
     7da:	df 93       	push	r29
     7dc:	1f 92       	push	r1
     7de:	1f 92       	push	r1
     7e0:	cd b7       	in	r28, 0x3d	; 61
     7e2:	de b7       	in	r29, 0x3e	; 62
     7e4:	9a 83       	std	Y+2, r25	; 0x02
     7e6:	89 83       	std	Y+1, r24	; 0x01
     7e8:	89 81       	ldd	r24, Y+1	; 0x01
     7ea:	9a 81       	ldd	r25, Y+2	; 0x02
     7ec:	84 5b       	subi	r24, 0xB4	; 180
     7ee:	9f 4f       	sbci	r25, 0xFF	; 255
     7f0:	fc 01       	movw	r30, r24
     7f2:	80 81       	ld	r24, Z
     7f4:	91 81       	ldd	r25, Z+1	; 0x01
     7f6:	a2 81       	ldd	r26, Z+2	; 0x02
     7f8:	b3 81       	ldd	r27, Z+3	; 0x03
     7fa:	bc 01       	movw	r22, r24
     7fc:	cd 01       	movw	r24, r26
     7fe:	0f 90       	pop	r0
     800:	0f 90       	pop	r0
     802:	df 91       	pop	r29
     804:	cf 91       	pop	r28
     806:	08 95       	ret

00000808 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>:
						
						
						


			float YNEDBodyFrame() const {return yNEDBodyFrame;}
     808:	cf 93       	push	r28
     80a:	df 93       	push	r29
     80c:	1f 92       	push	r1
     80e:	1f 92       	push	r1
     810:	cd b7       	in	r28, 0x3d	; 61
     812:	de b7       	in	r29, 0x3e	; 62
     814:	9a 83       	std	Y+2, r25	; 0x02
     816:	89 83       	std	Y+1, r24	; 0x01
     818:	89 81       	ldd	r24, Y+1	; 0x01
     81a:	9a 81       	ldd	r25, Y+2	; 0x02
     81c:	80 5b       	subi	r24, 0xB0	; 176
     81e:	9f 4f       	sbci	r25, 0xFF	; 255
     820:	fc 01       	movw	r30, r24
     822:	80 81       	ld	r24, Z
     824:	91 81       	ldd	r25, Z+1	; 0x01
     826:	a2 81       	ldd	r26, Z+2	; 0x02
     828:	b3 81       	ldd	r27, Z+3	; 0x03
     82a:	bc 01       	movw	r22, r24
     82c:	cd 01       	movw	r24, r26
     82e:	0f 90       	pop	r0
     830:	0f 90       	pop	r0
     832:	df 91       	pop	r29
     834:	cf 91       	pop	r28
     836:	08 95       	ret

00000838 <_ZNK10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEv>:
			void YNEDBodyFrame(float val) { yNEDBodyFrame = val;}

			float ReferenceYNEDBodyFrame() const {return referenceYNEDBodyFrame;}
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	1f 92       	push	r1
     83e:	1f 92       	push	r1
     840:	cd b7       	in	r28, 0x3d	; 61
     842:	de b7       	in	r29, 0x3e	; 62
     844:	9a 83       	std	Y+2, r25	; 0x02
     846:	89 83       	std	Y+1, r24	; 0x01
     848:	89 81       	ldd	r24, Y+1	; 0x01
     84a:	9a 81       	ldd	r25, Y+2	; 0x02
     84c:	8c 5a       	subi	r24, 0xAC	; 172
     84e:	9f 4f       	sbci	r25, 0xFF	; 255
     850:	fc 01       	movw	r30, r24
     852:	80 81       	ld	r24, Z
     854:	91 81       	ldd	r25, Z+1	; 0x01
     856:	a2 81       	ldd	r26, Z+2	; 0x02
     858:	b3 81       	ldd	r27, Z+3	; 0x03
     85a:	bc 01       	movw	r22, r24
     85c:	cd 01       	movw	r24, r26
     85e:	0f 90       	pop	r0
     860:	0f 90       	pop	r0
     862:	df 91       	pop	r29
     864:	cf 91       	pop	r28
     866:	08 95       	ret

00000868 <_ZNK10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEv>:
			void ReferenceYNEDBodyFrame(float val) { referenceYNEDBodyFrame = val;}

			float LateralControlBeforeServoLimitsAdjustment() const {return lateralControlBeforeServoLimitsAdjustment;}
     868:	cf 93       	push	r28
     86a:	df 93       	push	r29
     86c:	1f 92       	push	r1
     86e:	1f 92       	push	r1
     870:	cd b7       	in	r28, 0x3d	; 61
     872:	de b7       	in	r29, 0x3e	; 62
     874:	9a 83       	std	Y+2, r25	; 0x02
     876:	89 83       	std	Y+1, r24	; 0x01
     878:	89 81       	ldd	r24, Y+1	; 0x01
     87a:	9a 81       	ldd	r25, Y+2	; 0x02
     87c:	88 5a       	subi	r24, 0xA8	; 168
     87e:	9f 4f       	sbci	r25, 0xFF	; 255
     880:	fc 01       	movw	r30, r24
     882:	80 81       	ld	r24, Z
     884:	91 81       	ldd	r25, Z+1	; 0x01
     886:	a2 81       	ldd	r26, Z+2	; 0x02
     888:	b3 81       	ldd	r27, Z+3	; 0x03
     88a:	bc 01       	movw	r22, r24
     88c:	cd 01       	movw	r24, r26
     88e:	0f 90       	pop	r0
     890:	0f 90       	pop	r0
     892:	df 91       	pop	r29
     894:	cf 91       	pop	r28
     896:	08 95       	ret

00000898 <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf>:
			void LateralControlBeforeServoLimitsAdjustment(float val) { lateralControlBeforeServoLimitsAdjustment = val;}
     898:	cf 93       	push	r28
     89a:	df 93       	push	r29
     89c:	00 d0       	rcall	.+0      	; 0x89e <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf+0x6>
     89e:	00 d0       	rcall	.+0      	; 0x8a0 <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf+0x8>
     8a0:	cd b7       	in	r28, 0x3d	; 61
     8a2:	de b7       	in	r29, 0x3e	; 62
     8a4:	9a 83       	std	Y+2, r25	; 0x02
     8a6:	89 83       	std	Y+1, r24	; 0x01
     8a8:	4b 83       	std	Y+3, r20	; 0x03
     8aa:	5c 83       	std	Y+4, r21	; 0x04
     8ac:	6d 83       	std	Y+5, r22	; 0x05
     8ae:	7e 83       	std	Y+6, r23	; 0x06
     8b0:	89 81       	ldd	r24, Y+1	; 0x01
     8b2:	9a 81       	ldd	r25, Y+2	; 0x02
     8b4:	9c 01       	movw	r18, r24
     8b6:	28 5a       	subi	r18, 0xA8	; 168
     8b8:	3f 4f       	sbci	r19, 0xFF	; 255
     8ba:	8b 81       	ldd	r24, Y+3	; 0x03
     8bc:	9c 81       	ldd	r25, Y+4	; 0x04
     8be:	ad 81       	ldd	r26, Y+5	; 0x05
     8c0:	be 81       	ldd	r27, Y+6	; 0x06
     8c2:	f9 01       	movw	r30, r18
     8c4:	80 83       	st	Z, r24
     8c6:	91 83       	std	Z+1, r25	; 0x01
     8c8:	a2 83       	std	Z+2, r26	; 0x02
     8ca:	b3 83       	std	Z+3, r27	; 0x03
     8cc:	26 96       	adiw	r28, 0x06	; 6
     8ce:	0f b6       	in	r0, 0x3f	; 63
     8d0:	f8 94       	cli
     8d2:	de bf       	out	0x3e, r29	; 62
     8d4:	0f be       	out	0x3f, r0	; 63
     8d6:	cd bf       	out	0x3d, r28	; 61
     8d8:	df 91       	pop	r29
     8da:	cf 91       	pop	r28
     8dc:	08 95       	ret

000008de <_ZNK10helicopter5model11SystemModel14LateralControlEv>:

			float LateralControl() const {return lateralControl;}
     8de:	cf 93       	push	r28
     8e0:	df 93       	push	r29
     8e2:	1f 92       	push	r1
     8e4:	1f 92       	push	r1
     8e6:	cd b7       	in	r28, 0x3d	; 61
     8e8:	de b7       	in	r29, 0x3e	; 62
     8ea:	9a 83       	std	Y+2, r25	; 0x02
     8ec:	89 83       	std	Y+1, r24	; 0x01
     8ee:	89 81       	ldd	r24, Y+1	; 0x01
     8f0:	9a 81       	ldd	r25, Y+2	; 0x02
     8f2:	84 5a       	subi	r24, 0xA4	; 164
     8f4:	9f 4f       	sbci	r25, 0xFF	; 255
     8f6:	fc 01       	movw	r30, r24
     8f8:	80 81       	ld	r24, Z
     8fa:	91 81       	ldd	r25, Z+1	; 0x01
     8fc:	a2 81       	ldd	r26, Z+2	; 0x02
     8fe:	b3 81       	ldd	r27, Z+3	; 0x03
     900:	bc 01       	movw	r22, r24
     902:	cd 01       	movw	r24, r26
     904:	0f 90       	pop	r0
     906:	0f 90       	pop	r0
     908:	df 91       	pop	r29
     90a:	cf 91       	pop	r28
     90c:	08 95       	ret

0000090e <_ZN10helicopter5model11SystemModel14LateralControlEf>:
			void LateralControl(float val) { lateralControl = val;}
     90e:	cf 93       	push	r28
     910:	df 93       	push	r29
     912:	00 d0       	rcall	.+0      	; 0x914 <_ZN10helicopter5model11SystemModel14LateralControlEf+0x6>
     914:	00 d0       	rcall	.+0      	; 0x916 <_ZN10helicopter5model11SystemModel14LateralControlEf+0x8>
     916:	cd b7       	in	r28, 0x3d	; 61
     918:	de b7       	in	r29, 0x3e	; 62
     91a:	9a 83       	std	Y+2, r25	; 0x02
     91c:	89 83       	std	Y+1, r24	; 0x01
     91e:	4b 83       	std	Y+3, r20	; 0x03
     920:	5c 83       	std	Y+4, r21	; 0x04
     922:	6d 83       	std	Y+5, r22	; 0x05
     924:	7e 83       	std	Y+6, r23	; 0x06
     926:	89 81       	ldd	r24, Y+1	; 0x01
     928:	9a 81       	ldd	r25, Y+2	; 0x02
     92a:	9c 01       	movw	r18, r24
     92c:	24 5a       	subi	r18, 0xA4	; 164
     92e:	3f 4f       	sbci	r19, 0xFF	; 255
     930:	8b 81       	ldd	r24, Y+3	; 0x03
     932:	9c 81       	ldd	r25, Y+4	; 0x04
     934:	ad 81       	ldd	r26, Y+5	; 0x05
     936:	be 81       	ldd	r27, Y+6	; 0x06
     938:	f9 01       	movw	r30, r18
     93a:	80 83       	st	Z, r24
     93c:	91 83       	std	Z+1, r25	; 0x01
     93e:	a2 83       	std	Z+2, r26	; 0x02
     940:	b3 83       	std	Z+3, r27	; 0x03
     942:	26 96       	adiw	r28, 0x06	; 6
     944:	0f b6       	in	r0, 0x3f	; 63
     946:	f8 94       	cli
     948:	de bf       	out	0x3e, r29	; 62
     94a:	0f be       	out	0x3f, r0	; 63
     94c:	cd bf       	out	0x3d, r28	; 61
     94e:	df 91       	pop	r29
     950:	cf 91       	pop	r28
     952:	08 95       	ret

00000954 <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>:

			float YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
     954:	cf 93       	push	r28
     956:	df 93       	push	r29
     958:	1f 92       	push	r1
     95a:	1f 92       	push	r1
     95c:	cd b7       	in	r28, 0x3d	; 61
     95e:	de b7       	in	r29, 0x3e	; 62
     960:	9a 83       	std	Y+2, r25	; 0x02
     962:	89 83       	std	Y+1, r24	; 0x01
     964:	89 81       	ldd	r24, Y+1	; 0x01
     966:	9a 81       	ldd	r25, Y+2	; 0x02
     968:	80 5a       	subi	r24, 0xA0	; 160
     96a:	9f 4f       	sbci	r25, 0xFF	; 255
     96c:	fc 01       	movw	r30, r24
     96e:	80 81       	ld	r24, Z
     970:	91 81       	ldd	r25, Z+1	; 0x01
     972:	a2 81       	ldd	r26, Z+2	; 0x02
     974:	b3 81       	ldd	r27, Z+3	; 0x03
     976:	bc 01       	movw	r22, r24
     978:	cd 01       	movw	r24, r26
     97a:	0f 90       	pop	r0
     97c:	0f 90       	pop	r0
     97e:	df 91       	pop	r29
     980:	cf 91       	pop	r28
     982:	08 95       	ret

00000984 <_ZNK10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEv>:
			void YVelocityMetersPerSecond(float val) { yVelocityMetersPerSecond = val;}

			float ReferenceYVelocityMetersPerSecond() const {return referenceYVelocityMetersPerSecond;}
     984:	cf 93       	push	r28
     986:	df 93       	push	r29
     988:	1f 92       	push	r1
     98a:	1f 92       	push	r1
     98c:	cd b7       	in	r28, 0x3d	; 61
     98e:	de b7       	in	r29, 0x3e	; 62
     990:	9a 83       	std	Y+2, r25	; 0x02
     992:	89 83       	std	Y+1, r24	; 0x01
     994:	89 81       	ldd	r24, Y+1	; 0x01
     996:	9a 81       	ldd	r25, Y+2	; 0x02
     998:	8c 59       	subi	r24, 0x9C	; 156
     99a:	9f 4f       	sbci	r25, 0xFF	; 255
     99c:	fc 01       	movw	r30, r24
     99e:	80 81       	ld	r24, Z
     9a0:	91 81       	ldd	r25, Z+1	; 0x01
     9a2:	a2 81       	ldd	r26, Z+2	; 0x02
     9a4:	b3 81       	ldd	r27, Z+3	; 0x03
     9a6:	bc 01       	movw	r22, r24
     9a8:	cd 01       	movw	r24, r26
     9aa:	0f 90       	pop	r0
     9ac:	0f 90       	pop	r0
     9ae:	df 91       	pop	r29
     9b0:	cf 91       	pop	r28
     9b2:	08 95       	ret

000009b4 <_ZNK10helicopter5model11SystemModel25YLateralOuterLoopSetpointEv>:
			void ReferenceYVelocityMetersPerSecond(float val) { referenceYVelocityMetersPerSecond = val;}

			float YLateralOuterLoopSetpoint() const {return yLateralOuterLoopSetpoint;}
     9b4:	cf 93       	push	r28
     9b6:	df 93       	push	r29
     9b8:	1f 92       	push	r1
     9ba:	1f 92       	push	r1
     9bc:	cd b7       	in	r28, 0x3d	; 61
     9be:	de b7       	in	r29, 0x3e	; 62
     9c0:	9a 83       	std	Y+2, r25	; 0x02
     9c2:	89 83       	std	Y+1, r24	; 0x01
     9c4:	89 81       	ldd	r24, Y+1	; 0x01
     9c6:	9a 81       	ldd	r25, Y+2	; 0x02
     9c8:	88 59       	subi	r24, 0x98	; 152
     9ca:	9f 4f       	sbci	r25, 0xFF	; 255
     9cc:	fc 01       	movw	r30, r24
     9ce:	80 81       	ld	r24, Z
     9d0:	91 81       	ldd	r25, Z+1	; 0x01
     9d2:	a2 81       	ldd	r26, Z+2	; 0x02
     9d4:	b3 81       	ldd	r27, Z+3	; 0x03
     9d6:	bc 01       	movw	r22, r24
     9d8:	cd 01       	movw	r24, r26
     9da:	0f 90       	pop	r0
     9dc:	0f 90       	pop	r0
     9de:	df 91       	pop	r29
     9e0:	cf 91       	pop	r28
     9e2:	08 95       	ret

000009e4 <_ZN10helicopter5model11SystemModel25YLateralOuterLoopSetpointEf>:
			void YLateralOuterLoopSetpoint(float val) { yLateralOuterLoopSetpoint = val;}
     9e4:	cf 93       	push	r28
     9e6:	df 93       	push	r29
     9e8:	00 d0       	rcall	.+0      	; 0x9ea <_ZN10helicopter5model11SystemModel25YLateralOuterLoopSetpointEf+0x6>
     9ea:	00 d0       	rcall	.+0      	; 0x9ec <_ZN10helicopter5model11SystemModel25YLateralOuterLoopSetpointEf+0x8>
     9ec:	cd b7       	in	r28, 0x3d	; 61
     9ee:	de b7       	in	r29, 0x3e	; 62
     9f0:	9a 83       	std	Y+2, r25	; 0x02
     9f2:	89 83       	std	Y+1, r24	; 0x01
     9f4:	4b 83       	std	Y+3, r20	; 0x03
     9f6:	5c 83       	std	Y+4, r21	; 0x04
     9f8:	6d 83       	std	Y+5, r22	; 0x05
     9fa:	7e 83       	std	Y+6, r23	; 0x06
     9fc:	89 81       	ldd	r24, Y+1	; 0x01
     9fe:	9a 81       	ldd	r25, Y+2	; 0x02
     a00:	9c 01       	movw	r18, r24
     a02:	28 59       	subi	r18, 0x98	; 152
     a04:	3f 4f       	sbci	r19, 0xFF	; 255
     a06:	8b 81       	ldd	r24, Y+3	; 0x03
     a08:	9c 81       	ldd	r25, Y+4	; 0x04
     a0a:	ad 81       	ldd	r26, Y+5	; 0x05
     a0c:	be 81       	ldd	r27, Y+6	; 0x06
     a0e:	f9 01       	movw	r30, r18
     a10:	80 83       	st	Z, r24
     a12:	91 83       	std	Z+1, r25	; 0x01
     a14:	a2 83       	std	Z+2, r26	; 0x02
     a16:	b3 83       	std	Z+3, r27	; 0x03
     a18:	26 96       	adiw	r28, 0x06	; 6
     a1a:	0f b6       	in	r0, 0x3f	; 63
     a1c:	f8 94       	cli
     a1e:	de bf       	out	0x3e, r29	; 62
     a20:	0f be       	out	0x3f, r0	; 63
     a22:	cd bf       	out	0x3d, r28	; 61
     a24:	df 91       	pop	r29
     a26:	cf 91       	pop	r28
     a28:	08 95       	ret

00000a2a <_ZN10helicopter5model11SystemModel13YProportionalEf>:

			float YProportional() const {return yProportional;}
			void YProportional(float val) { yProportional = val;}
     a2a:	cf 93       	push	r28
     a2c:	df 93       	push	r29
     a2e:	00 d0       	rcall	.+0      	; 0xa30 <_ZN10helicopter5model11SystemModel13YProportionalEf+0x6>
     a30:	00 d0       	rcall	.+0      	; 0xa32 <_ZN10helicopter5model11SystemModel13YProportionalEf+0x8>
     a32:	cd b7       	in	r28, 0x3d	; 61
     a34:	de b7       	in	r29, 0x3e	; 62
     a36:	9a 83       	std	Y+2, r25	; 0x02
     a38:	89 83       	std	Y+1, r24	; 0x01
     a3a:	4b 83       	std	Y+3, r20	; 0x03
     a3c:	5c 83       	std	Y+4, r21	; 0x04
     a3e:	6d 83       	std	Y+5, r22	; 0x05
     a40:	7e 83       	std	Y+6, r23	; 0x06
     a42:	89 81       	ldd	r24, Y+1	; 0x01
     a44:	9a 81       	ldd	r25, Y+2	; 0x02
     a46:	9c 01       	movw	r18, r24
     a48:	24 59       	subi	r18, 0x94	; 148
     a4a:	3f 4f       	sbci	r19, 0xFF	; 255
     a4c:	8b 81       	ldd	r24, Y+3	; 0x03
     a4e:	9c 81       	ldd	r25, Y+4	; 0x04
     a50:	ad 81       	ldd	r26, Y+5	; 0x05
     a52:	be 81       	ldd	r27, Y+6	; 0x06
     a54:	f9 01       	movw	r30, r18
     a56:	80 83       	st	Z, r24
     a58:	91 83       	std	Z+1, r25	; 0x01
     a5a:	a2 83       	std	Z+2, r26	; 0x02
     a5c:	b3 83       	std	Z+3, r27	; 0x03
     a5e:	26 96       	adiw	r28, 0x06	; 6
     a60:	0f b6       	in	r0, 0x3f	; 63
     a62:	f8 94       	cli
     a64:	de bf       	out	0x3e, r29	; 62
     a66:	0f be       	out	0x3f, r0	; 63
     a68:	cd bf       	out	0x3d, r28	; 61
     a6a:	df 91       	pop	r29
     a6c:	cf 91       	pop	r28
     a6e:	08 95       	ret

00000a70 <_ZNK10helicopter5model11SystemModel9YIntegralEv>:

			float YIntegral() const {return yIntegral;}
     a70:	cf 93       	push	r28
     a72:	df 93       	push	r29
     a74:	1f 92       	push	r1
     a76:	1f 92       	push	r1
     a78:	cd b7       	in	r28, 0x3d	; 61
     a7a:	de b7       	in	r29, 0x3e	; 62
     a7c:	9a 83       	std	Y+2, r25	; 0x02
     a7e:	89 83       	std	Y+1, r24	; 0x01
     a80:	89 81       	ldd	r24, Y+1	; 0x01
     a82:	9a 81       	ldd	r25, Y+2	; 0x02
     a84:	80 59       	subi	r24, 0x90	; 144
     a86:	9f 4f       	sbci	r25, 0xFF	; 255
     a88:	fc 01       	movw	r30, r24
     a8a:	80 81       	ld	r24, Z
     a8c:	91 81       	ldd	r25, Z+1	; 0x01
     a8e:	a2 81       	ldd	r26, Z+2	; 0x02
     a90:	b3 81       	ldd	r27, Z+3	; 0x03
     a92:	bc 01       	movw	r22, r24
     a94:	cd 01       	movw	r24, r26
     a96:	0f 90       	pop	r0
     a98:	0f 90       	pop	r0
     a9a:	df 91       	pop	r29
     a9c:	cf 91       	pop	r28
     a9e:	08 95       	ret

00000aa0 <_ZN10helicopter5model11SystemModel9YIntegralEf>:
			void YIntegral(float val) { yIntegral = val;}
     aa0:	cf 93       	push	r28
     aa2:	df 93       	push	r29
     aa4:	00 d0       	rcall	.+0      	; 0xaa6 <_ZN10helicopter5model11SystemModel9YIntegralEf+0x6>
     aa6:	00 d0       	rcall	.+0      	; 0xaa8 <_ZN10helicopter5model11SystemModel9YIntegralEf+0x8>
     aa8:	cd b7       	in	r28, 0x3d	; 61
     aaa:	de b7       	in	r29, 0x3e	; 62
     aac:	9a 83       	std	Y+2, r25	; 0x02
     aae:	89 83       	std	Y+1, r24	; 0x01
     ab0:	4b 83       	std	Y+3, r20	; 0x03
     ab2:	5c 83       	std	Y+4, r21	; 0x04
     ab4:	6d 83       	std	Y+5, r22	; 0x05
     ab6:	7e 83       	std	Y+6, r23	; 0x06
     ab8:	89 81       	ldd	r24, Y+1	; 0x01
     aba:	9a 81       	ldd	r25, Y+2	; 0x02
     abc:	9c 01       	movw	r18, r24
     abe:	20 59       	subi	r18, 0x90	; 144
     ac0:	3f 4f       	sbci	r19, 0xFF	; 255
     ac2:	8b 81       	ldd	r24, Y+3	; 0x03
     ac4:	9c 81       	ldd	r25, Y+4	; 0x04
     ac6:	ad 81       	ldd	r26, Y+5	; 0x05
     ac8:	be 81       	ldd	r27, Y+6	; 0x06
     aca:	f9 01       	movw	r30, r18
     acc:	80 83       	st	Z, r24
     ace:	91 83       	std	Z+1, r25	; 0x01
     ad0:	a2 83       	std	Z+2, r26	; 0x02
     ad2:	b3 83       	std	Z+3, r27	; 0x03
     ad4:	26 96       	adiw	r28, 0x06	; 6
     ad6:	0f b6       	in	r0, 0x3f	; 63
     ad8:	f8 94       	cli
     ada:	de bf       	out	0x3e, r29	; 62
     adc:	0f be       	out	0x3f, r0	; 63
     ade:	cd bf       	out	0x3d, r28	; 61
     ae0:	df 91       	pop	r29
     ae2:	cf 91       	pop	r28
     ae4:	08 95       	ret

00000ae6 <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf>:

			float YDerivativeError() const {return yDerivativeError;}
			void YDerivativeError(float val) { yDerivativeError = val;}
     ae6:	cf 93       	push	r28
     ae8:	df 93       	push	r29
     aea:	00 d0       	rcall	.+0      	; 0xaec <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf+0x6>
     aec:	00 d0       	rcall	.+0      	; 0xaee <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf+0x8>
     aee:	cd b7       	in	r28, 0x3d	; 61
     af0:	de b7       	in	r29, 0x3e	; 62
     af2:	9a 83       	std	Y+2, r25	; 0x02
     af4:	89 83       	std	Y+1, r24	; 0x01
     af6:	4b 83       	std	Y+3, r20	; 0x03
     af8:	5c 83       	std	Y+4, r21	; 0x04
     afa:	6d 83       	std	Y+5, r22	; 0x05
     afc:	7e 83       	std	Y+6, r23	; 0x06
     afe:	89 81       	ldd	r24, Y+1	; 0x01
     b00:	9a 81       	ldd	r25, Y+2	; 0x02
     b02:	9c 01       	movw	r18, r24
     b04:	2c 58       	subi	r18, 0x8C	; 140
     b06:	3f 4f       	sbci	r19, 0xFF	; 255
     b08:	8b 81       	ldd	r24, Y+3	; 0x03
     b0a:	9c 81       	ldd	r25, Y+4	; 0x04
     b0c:	ad 81       	ldd	r26, Y+5	; 0x05
     b0e:	be 81       	ldd	r27, Y+6	; 0x06
     b10:	f9 01       	movw	r30, r18
     b12:	80 83       	st	Z, r24
     b14:	91 83       	std	Z+1, r25	; 0x01
     b16:	a2 83       	std	Z+2, r26	; 0x02
     b18:	b3 83       	std	Z+3, r27	; 0x03
     b1a:	26 96       	adiw	r28, 0x06	; 6
     b1c:	0f b6       	in	r0, 0x3f	; 63
     b1e:	f8 94       	cli
     b20:	de bf       	out	0x3e, r29	; 62
     b22:	0f be       	out	0x3f, r0	; 63
     b24:	cd bf       	out	0x3d, r28	; 61
     b26:	df 91       	pop	r29
     b28:	cf 91       	pop	r28
     b2a:	08 95       	ret

00000b2c <_ZNK10helicopter5model11SystemModel14PhiRollDegreesEv>:


			float PhiRollDegrees() const {return phiRollDegrees;}
     b2c:	cf 93       	push	r28
     b2e:	df 93       	push	r29
     b30:	1f 92       	push	r1
     b32:	1f 92       	push	r1
     b34:	cd b7       	in	r28, 0x3d	; 61
     b36:	de b7       	in	r29, 0x3e	; 62
     b38:	9a 83       	std	Y+2, r25	; 0x02
     b3a:	89 83       	std	Y+1, r24	; 0x01
     b3c:	89 81       	ldd	r24, Y+1	; 0x01
     b3e:	9a 81       	ldd	r25, Y+2	; 0x02
     b40:	88 58       	subi	r24, 0x88	; 136
     b42:	9f 4f       	sbci	r25, 0xFF	; 255
     b44:	fc 01       	movw	r30, r24
     b46:	80 81       	ld	r24, Z
     b48:	91 81       	ldd	r25, Z+1	; 0x01
     b4a:	a2 81       	ldd	r26, Z+2	; 0x02
     b4c:	b3 81       	ldd	r27, Z+3	; 0x03
     b4e:	bc 01       	movw	r22, r24
     b50:	cd 01       	movw	r24, r26
     b52:	0f 90       	pop	r0
     b54:	0f 90       	pop	r0
     b56:	df 91       	pop	r29
     b58:	cf 91       	pop	r28
     b5a:	08 95       	ret

00000b5c <_ZNK10helicopter5model11SystemModel13ZNEDBodyFrameEv>:
						

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
			void AltitudeFeetAgl(float val) { altitudeFeetAgl = val; }

			float ZNEDBodyFrame() const { return zNEDBodyFrame; }
     b5c:	cf 93       	push	r28
     b5e:	df 93       	push	r29
     b60:	1f 92       	push	r1
     b62:	1f 92       	push	r1
     b64:	cd b7       	in	r28, 0x3d	; 61
     b66:	de b7       	in	r29, 0x3e	; 62
     b68:	9a 83       	std	Y+2, r25	; 0x02
     b6a:	89 83       	std	Y+1, r24	; 0x01
     b6c:	89 81       	ldd	r24, Y+1	; 0x01
     b6e:	9a 81       	ldd	r25, Y+2	; 0x02
     b70:	80 58       	subi	r24, 0x80	; 128
     b72:	9f 4f       	sbci	r25, 0xFF	; 255
     b74:	fc 01       	movw	r30, r24
     b76:	80 81       	ld	r24, Z
     b78:	91 81       	ldd	r25, Z+1	; 0x01
     b7a:	a2 81       	ldd	r26, Z+2	; 0x02
     b7c:	b3 81       	ldd	r27, Z+3	; 0x03
     b7e:	bc 01       	movw	r22, r24
     b80:	cd 01       	movw	r24, r26
     b82:	0f 90       	pop	r0
     b84:	0f 90       	pop	r0
     b86:	df 91       	pop	r29
     b88:	cf 91       	pop	r28
     b8a:	08 95       	ret

00000b8c <_ZNK10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEv>:
			void ZNEDBodyFrame(float val) { zNEDBodyFrame = val; }


			float ReferenceZNEDBodyFrameFeet() const {return referenceAltitudeFeet;}
     b8c:	cf 93       	push	r28
     b8e:	df 93       	push	r29
     b90:	1f 92       	push	r1
     b92:	1f 92       	push	r1
     b94:	cd b7       	in	r28, 0x3d	; 61
     b96:	de b7       	in	r29, 0x3e	; 62
     b98:	9a 83       	std	Y+2, r25	; 0x02
     b9a:	89 83       	std	Y+1, r24	; 0x01
     b9c:	89 81       	ldd	r24, Y+1	; 0x01
     b9e:	9a 81       	ldd	r25, Y+2	; 0x02
     ba0:	8c 57       	subi	r24, 0x7C	; 124
     ba2:	9f 4f       	sbci	r25, 0xFF	; 255
     ba4:	fc 01       	movw	r30, r24
     ba6:	80 81       	ld	r24, Z
     ba8:	91 81       	ldd	r25, Z+1	; 0x01
     baa:	a2 81       	ldd	r26, Z+2	; 0x02
     bac:	b3 81       	ldd	r27, Z+3	; 0x03
     bae:	bc 01       	movw	r22, r24
     bb0:	cd 01       	movw	r24, r26
     bb2:	0f 90       	pop	r0
     bb4:	0f 90       	pop	r0
     bb6:	df 91       	pop	r29
     bb8:	cf 91       	pop	r28
     bba:	08 95       	ret

00000bbc <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>:
			void ReferenceZNEDBodyFrameFeet(float val) { referenceAltitudeFeet = val;}


			float MainRotorCollectiveControl() const {return mainRotorControl;}
     bbc:	cf 93       	push	r28
     bbe:	df 93       	push	r29
     bc0:	1f 92       	push	r1
     bc2:	1f 92       	push	r1
     bc4:	cd b7       	in	r28, 0x3d	; 61
     bc6:	de b7       	in	r29, 0x3e	; 62
     bc8:	9a 83       	std	Y+2, r25	; 0x02
     bca:	89 83       	std	Y+1, r24	; 0x01
     bcc:	89 81       	ldd	r24, Y+1	; 0x01
     bce:	9a 81       	ldd	r25, Y+2	; 0x02
     bd0:	88 57       	subi	r24, 0x78	; 120
     bd2:	9f 4f       	sbci	r25, 0xFF	; 255
     bd4:	fc 01       	movw	r30, r24
     bd6:	80 81       	ld	r24, Z
     bd8:	91 81       	ldd	r25, Z+1	; 0x01
     bda:	a2 81       	ldd	r26, Z+2	; 0x02
     bdc:	b3 81       	ldd	r27, Z+3	; 0x03
     bde:	bc 01       	movw	r22, r24
     be0:	cd 01       	movw	r24, r26
     be2:	0f 90       	pop	r0
     be4:	0f 90       	pop	r0
     be6:	df 91       	pop	r29
     be8:	cf 91       	pop	r28
     bea:	08 95       	ret

00000bec <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf>:
			void MainRotorCollectiveControl(float val) { mainRotorControl = val;}
     bec:	cf 93       	push	r28
     bee:	df 93       	push	r29
     bf0:	00 d0       	rcall	.+0      	; 0xbf2 <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf+0x6>
     bf2:	00 d0       	rcall	.+0      	; 0xbf4 <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf+0x8>
     bf4:	cd b7       	in	r28, 0x3d	; 61
     bf6:	de b7       	in	r29, 0x3e	; 62
     bf8:	9a 83       	std	Y+2, r25	; 0x02
     bfa:	89 83       	std	Y+1, r24	; 0x01
     bfc:	4b 83       	std	Y+3, r20	; 0x03
     bfe:	5c 83       	std	Y+4, r21	; 0x04
     c00:	6d 83       	std	Y+5, r22	; 0x05
     c02:	7e 83       	std	Y+6, r23	; 0x06
     c04:	89 81       	ldd	r24, Y+1	; 0x01
     c06:	9a 81       	ldd	r25, Y+2	; 0x02
     c08:	9c 01       	movw	r18, r24
     c0a:	28 57       	subi	r18, 0x78	; 120
     c0c:	3f 4f       	sbci	r19, 0xFF	; 255
     c0e:	8b 81       	ldd	r24, Y+3	; 0x03
     c10:	9c 81       	ldd	r25, Y+4	; 0x04
     c12:	ad 81       	ldd	r26, Y+5	; 0x05
     c14:	be 81       	ldd	r27, Y+6	; 0x06
     c16:	f9 01       	movw	r30, r18
     c18:	80 83       	st	Z, r24
     c1a:	91 83       	std	Z+1, r25	; 0x01
     c1c:	a2 83       	std	Z+2, r26	; 0x02
     c1e:	b3 83       	std	Z+3, r27	; 0x03
     c20:	26 96       	adiw	r28, 0x06	; 6
     c22:	0f b6       	in	r0, 0x3f	; 63
     c24:	f8 94       	cli
     c26:	de bf       	out	0x3e, r29	; 62
     c28:	0f be       	out	0x3f, r0	; 63
     c2a:	cd bf       	out	0x3d, r28	; 61
     c2c:	df 91       	pop	r29
     c2e:	cf 91       	pop	r28
     c30:	08 95       	ret

00000c32 <_ZNK10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEv>:

			float MainRotorControlBeforeServoLimitsAdjustment() const {return mainRotorControlBeforeServoLimitsAdjustment;}
     c32:	cf 93       	push	r28
     c34:	df 93       	push	r29
     c36:	1f 92       	push	r1
     c38:	1f 92       	push	r1
     c3a:	cd b7       	in	r28, 0x3d	; 61
     c3c:	de b7       	in	r29, 0x3e	; 62
     c3e:	9a 83       	std	Y+2, r25	; 0x02
     c40:	89 83       	std	Y+1, r24	; 0x01
     c42:	89 81       	ldd	r24, Y+1	; 0x01
     c44:	9a 81       	ldd	r25, Y+2	; 0x02
     c46:	84 57       	subi	r24, 0x74	; 116
     c48:	9f 4f       	sbci	r25, 0xFF	; 255
     c4a:	fc 01       	movw	r30, r24
     c4c:	80 81       	ld	r24, Z
     c4e:	91 81       	ldd	r25, Z+1	; 0x01
     c50:	a2 81       	ldd	r26, Z+2	; 0x02
     c52:	b3 81       	ldd	r27, Z+3	; 0x03
     c54:	bc 01       	movw	r22, r24
     c56:	cd 01       	movw	r24, r26
     c58:	0f 90       	pop	r0
     c5a:	0f 90       	pop	r0
     c5c:	df 91       	pop	r29
     c5e:	cf 91       	pop	r28
     c60:	08 95       	ret

00000c62 <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf>:
			void MainRotorControlBeforeServoLimitsAdjustment(float val) { mainRotorControlBeforeServoLimitsAdjustment = val;}
     c62:	cf 93       	push	r28
     c64:	df 93       	push	r29
     c66:	00 d0       	rcall	.+0      	; 0xc68 <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf+0x6>
     c68:	00 d0       	rcall	.+0      	; 0xc6a <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf+0x8>
     c6a:	cd b7       	in	r28, 0x3d	; 61
     c6c:	de b7       	in	r29, 0x3e	; 62
     c6e:	9a 83       	std	Y+2, r25	; 0x02
     c70:	89 83       	std	Y+1, r24	; 0x01
     c72:	4b 83       	std	Y+3, r20	; 0x03
     c74:	5c 83       	std	Y+4, r21	; 0x04
     c76:	6d 83       	std	Y+5, r22	; 0x05
     c78:	7e 83       	std	Y+6, r23	; 0x06
     c7a:	89 81       	ldd	r24, Y+1	; 0x01
     c7c:	9a 81       	ldd	r25, Y+2	; 0x02
     c7e:	9c 01       	movw	r18, r24
     c80:	24 57       	subi	r18, 0x74	; 116
     c82:	3f 4f       	sbci	r19, 0xFF	; 255
     c84:	8b 81       	ldd	r24, Y+3	; 0x03
     c86:	9c 81       	ldd	r25, Y+4	; 0x04
     c88:	ad 81       	ldd	r26, Y+5	; 0x05
     c8a:	be 81       	ldd	r27, Y+6	; 0x06
     c8c:	f9 01       	movw	r30, r18
     c8e:	80 83       	st	Z, r24
     c90:	91 83       	std	Z+1, r25	; 0x01
     c92:	a2 83       	std	Z+2, r26	; 0x02
     c94:	b3 83       	std	Z+3, r27	; 0x03
     c96:	26 96       	adiw	r28, 0x06	; 6
     c98:	0f b6       	in	r0, 0x3f	; 63
     c9a:	f8 94       	cli
     c9c:	de bf       	out	0x3e, r29	; 62
     c9e:	0f be       	out	0x3f, r0	; 63
     ca0:	cd bf       	out	0x3d, r28	; 61
     ca2:	df 91       	pop	r29
     ca4:	cf 91       	pop	r28
     ca6:	08 95       	ret

00000ca8 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>:

			float ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
     ca8:	cf 93       	push	r28
     caa:	df 93       	push	r29
     cac:	1f 92       	push	r1
     cae:	1f 92       	push	r1
     cb0:	cd b7       	in	r28, 0x3d	; 61
     cb2:	de b7       	in	r29, 0x3e	; 62
     cb4:	9a 83       	std	Y+2, r25	; 0x02
     cb6:	89 83       	std	Y+1, r24	; 0x01
     cb8:	89 81       	ldd	r24, Y+1	; 0x01
     cba:	9a 81       	ldd	r25, Y+2	; 0x02
     cbc:	80 57       	subi	r24, 0x70	; 112
     cbe:	9f 4f       	sbci	r25, 0xFF	; 255
     cc0:	fc 01       	movw	r30, r24
     cc2:	80 81       	ld	r24, Z
     cc4:	91 81       	ldd	r25, Z+1	; 0x01
     cc6:	a2 81       	ldd	r26, Z+2	; 0x02
     cc8:	b3 81       	ldd	r27, Z+3	; 0x03
     cca:	bc 01       	movw	r22, r24
     ccc:	cd 01       	movw	r24, r26
     cce:	0f 90       	pop	r0
     cd0:	0f 90       	pop	r0
     cd2:	df 91       	pop	r29
     cd4:	cf 91       	pop	r28
     cd6:	08 95       	ret

00000cd8 <_ZNK10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEv>:
			void ZVelocityFeetPerSecond(float val) { zVelocityFeetPerSecond = val;}

			float ReferenceZVelocityFeetPerSecond() const {return referenceZVelocityFeetPerSecond;}
     cd8:	cf 93       	push	r28
     cda:	df 93       	push	r29
     cdc:	1f 92       	push	r1
     cde:	1f 92       	push	r1
     ce0:	cd b7       	in	r28, 0x3d	; 61
     ce2:	de b7       	in	r29, 0x3e	; 62
     ce4:	9a 83       	std	Y+2, r25	; 0x02
     ce6:	89 83       	std	Y+1, r24	; 0x01
     ce8:	89 81       	ldd	r24, Y+1	; 0x01
     cea:	9a 81       	ldd	r25, Y+2	; 0x02
     cec:	8c 56       	subi	r24, 0x6C	; 108
     cee:	9f 4f       	sbci	r25, 0xFF	; 255
     cf0:	fc 01       	movw	r30, r24
     cf2:	80 81       	ld	r24, Z
     cf4:	91 81       	ldd	r25, Z+1	; 0x01
     cf6:	a2 81       	ldd	r26, Z+2	; 0x02
     cf8:	b3 81       	ldd	r27, Z+3	; 0x03
     cfa:	bc 01       	movw	r22, r24
     cfc:	cd 01       	movw	r24, r26
     cfe:	0f 90       	pop	r0
     d00:	0f 90       	pop	r0
     d02:	df 91       	pop	r29
     d04:	cf 91       	pop	r28
     d06:	08 95       	ret

00000d08 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>:
			void ReferenceZVelocityFeetPerSecond(float val) { referenceZVelocityFeetPerSecond = val;}

			float ZIntegral() const {return zIntegral;}
     d08:	cf 93       	push	r28
     d0a:	df 93       	push	r29
     d0c:	1f 92       	push	r1
     d0e:	1f 92       	push	r1
     d10:	cd b7       	in	r28, 0x3d	; 61
     d12:	de b7       	in	r29, 0x3e	; 62
     d14:	9a 83       	std	Y+2, r25	; 0x02
     d16:	89 83       	std	Y+1, r24	; 0x01
     d18:	89 81       	ldd	r24, Y+1	; 0x01
     d1a:	9a 81       	ldd	r25, Y+2	; 0x02
     d1c:	88 56       	subi	r24, 0x68	; 104
     d1e:	9f 4f       	sbci	r25, 0xFF	; 255
     d20:	fc 01       	movw	r30, r24
     d22:	80 81       	ld	r24, Z
     d24:	91 81       	ldd	r25, Z+1	; 0x01
     d26:	a2 81       	ldd	r26, Z+2	; 0x02
     d28:	b3 81       	ldd	r27, Z+3	; 0x03
     d2a:	bc 01       	movw	r22, r24
     d2c:	cd 01       	movw	r24, r26
     d2e:	0f 90       	pop	r0
     d30:	0f 90       	pop	r0
     d32:	df 91       	pop	r29
     d34:	cf 91       	pop	r28
     d36:	08 95       	ret

00000d38 <_ZN10helicopter5model11SystemModel9ZIntegralEf>:
			void ZIntegral(float val) { zIntegral = val;}
     d38:	cf 93       	push	r28
     d3a:	df 93       	push	r29
     d3c:	00 d0       	rcall	.+0      	; 0xd3e <_ZN10helicopter5model11SystemModel9ZIntegralEf+0x6>
     d3e:	00 d0       	rcall	.+0      	; 0xd40 <_ZN10helicopter5model11SystemModel9ZIntegralEf+0x8>
     d40:	cd b7       	in	r28, 0x3d	; 61
     d42:	de b7       	in	r29, 0x3e	; 62
     d44:	9a 83       	std	Y+2, r25	; 0x02
     d46:	89 83       	std	Y+1, r24	; 0x01
     d48:	4b 83       	std	Y+3, r20	; 0x03
     d4a:	5c 83       	std	Y+4, r21	; 0x04
     d4c:	6d 83       	std	Y+5, r22	; 0x05
     d4e:	7e 83       	std	Y+6, r23	; 0x06
     d50:	89 81       	ldd	r24, Y+1	; 0x01
     d52:	9a 81       	ldd	r25, Y+2	; 0x02
     d54:	9c 01       	movw	r18, r24
     d56:	28 56       	subi	r18, 0x68	; 104
     d58:	3f 4f       	sbci	r19, 0xFF	; 255
     d5a:	8b 81       	ldd	r24, Y+3	; 0x03
     d5c:	9c 81       	ldd	r25, Y+4	; 0x04
     d5e:	ad 81       	ldd	r26, Y+5	; 0x05
     d60:	be 81       	ldd	r27, Y+6	; 0x06
     d62:	f9 01       	movw	r30, r18
     d64:	80 83       	st	Z, r24
     d66:	91 83       	std	Z+1, r25	; 0x01
     d68:	a2 83       	std	Z+2, r26	; 0x02
     d6a:	b3 83       	std	Z+3, r27	; 0x03
     d6c:	26 96       	adiw	r28, 0x06	; 6
     d6e:	0f b6       	in	r0, 0x3f	; 63
     d70:	f8 94       	cli
     d72:	de bf       	out	0x3e, r29	; 62
     d74:	0f be       	out	0x3f, r0	; 63
     d76:	cd bf       	out	0x3d, r28	; 61
     d78:	df 91       	pop	r29
     d7a:	cf 91       	pop	r28
     d7c:	08 95       	ret

00000d7e <_ZN10helicopter5model11SystemModel13ZProportionalEf>:

			float ZProportional() const {return zProportional;}
			void ZProportional(float val) { zProportional = val;}
     d7e:	cf 93       	push	r28
     d80:	df 93       	push	r29
     d82:	00 d0       	rcall	.+0      	; 0xd84 <_ZN10helicopter5model11SystemModel13ZProportionalEf+0x6>
     d84:	00 d0       	rcall	.+0      	; 0xd86 <_ZN10helicopter5model11SystemModel13ZProportionalEf+0x8>
     d86:	cd b7       	in	r28, 0x3d	; 61
     d88:	de b7       	in	r29, 0x3e	; 62
     d8a:	9a 83       	std	Y+2, r25	; 0x02
     d8c:	89 83       	std	Y+1, r24	; 0x01
     d8e:	4b 83       	std	Y+3, r20	; 0x03
     d90:	5c 83       	std	Y+4, r21	; 0x04
     d92:	6d 83       	std	Y+5, r22	; 0x05
     d94:	7e 83       	std	Y+6, r23	; 0x06
     d96:	89 81       	ldd	r24, Y+1	; 0x01
     d98:	9a 81       	ldd	r25, Y+2	; 0x02
     d9a:	9c 01       	movw	r18, r24
     d9c:	24 56       	subi	r18, 0x64	; 100
     d9e:	3f 4f       	sbci	r19, 0xFF	; 255
     da0:	8b 81       	ldd	r24, Y+3	; 0x03
     da2:	9c 81       	ldd	r25, Y+4	; 0x04
     da4:	ad 81       	ldd	r26, Y+5	; 0x05
     da6:	be 81       	ldd	r27, Y+6	; 0x06
     da8:	f9 01       	movw	r30, r18
     daa:	80 83       	st	Z, r24
     dac:	91 83       	std	Z+1, r25	; 0x01
     dae:	a2 83       	std	Z+2, r26	; 0x02
     db0:	b3 83       	std	Z+3, r27	; 0x03
     db2:	26 96       	adiw	r28, 0x06	; 6
     db4:	0f b6       	in	r0, 0x3f	; 63
     db6:	f8 94       	cli
     db8:	de bf       	out	0x3e, r29	; 62
     dba:	0f be       	out	0x3f, r0	; 63
     dbc:	cd bf       	out	0x3d, r28	; 61
     dbe:	df 91       	pop	r29
     dc0:	cf 91       	pop	r28
     dc2:	08 95       	ret

00000dc4 <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf>:

			float ZDerivativeError() const {return zDerivativeError;}
			void ZDerivativeError(float val) { zDerivativeError = val;}						
     dc4:	cf 93       	push	r28
     dc6:	df 93       	push	r29
     dc8:	00 d0       	rcall	.+0      	; 0xdca <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf+0x6>
     dca:	00 d0       	rcall	.+0      	; 0xdcc <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf+0x8>
     dcc:	cd b7       	in	r28, 0x3d	; 61
     dce:	de b7       	in	r29, 0x3e	; 62
     dd0:	9a 83       	std	Y+2, r25	; 0x02
     dd2:	89 83       	std	Y+1, r24	; 0x01
     dd4:	4b 83       	std	Y+3, r20	; 0x03
     dd6:	5c 83       	std	Y+4, r21	; 0x04
     dd8:	6d 83       	std	Y+5, r22	; 0x05
     dda:	7e 83       	std	Y+6, r23	; 0x06
     ddc:	89 81       	ldd	r24, Y+1	; 0x01
     dde:	9a 81       	ldd	r25, Y+2	; 0x02
     de0:	9c 01       	movw	r18, r24
     de2:	20 56       	subi	r18, 0x60	; 96
     de4:	3f 4f       	sbci	r19, 0xFF	; 255
     de6:	8b 81       	ldd	r24, Y+3	; 0x03
     de8:	9c 81       	ldd	r25, Y+4	; 0x04
     dea:	ad 81       	ldd	r26, Y+5	; 0x05
     dec:	be 81       	ldd	r27, Y+6	; 0x06
     dee:	f9 01       	movw	r30, r18
     df0:	80 83       	st	Z, r24
     df2:	91 83       	std	Z+1, r25	; 0x01
     df4:	a2 83       	std	Z+2, r26	; 0x02
     df6:	b3 83       	std	Z+3, r27	; 0x03
     df8:	26 96       	adiw	r28, 0x06	; 6
     dfa:	0f b6       	in	r0, 0x3f	; 63
     dfc:	f8 94       	cli
     dfe:	de bf       	out	0x3e, r29	; 62
     e00:	0f be       	out	0x3f, r0	; 63
     e02:	cd bf       	out	0x3d, r28	; 61
     e04:	df 91       	pop	r29
     e06:	cf 91       	pop	r28
     e08:	08 95       	ret

00000e0a <_ZNK10helicopter5model11SystemModel11BlownFramesEv>:
			void UnrecognizedMsgTypes(long val) { unrecognizedMsgTypes = val; }
			
			long ChecksumErrors() const {return checksumErrors; }
			void ChecksumErrors(long val) { checksumErrors = val; }
			
			long  BlownFrames() const {return numOfFramesBlown;}
     e0a:	cf 93       	push	r28
     e0c:	df 93       	push	r29
     e0e:	1f 92       	push	r1
     e10:	1f 92       	push	r1
     e12:	cd b7       	in	r28, 0x3d	; 61
     e14:	de b7       	in	r29, 0x3e	; 62
     e16:	9a 83       	std	Y+2, r25	; 0x02
     e18:	89 83       	std	Y+1, r24	; 0x01
     e1a:	89 81       	ldd	r24, Y+1	; 0x01
     e1c:	9a 81       	ldd	r25, Y+2	; 0x02
     e1e:	88 54       	subi	r24, 0x48	; 72
     e20:	9f 4f       	sbci	r25, 0xFF	; 255
     e22:	fc 01       	movw	r30, r24
     e24:	80 81       	ld	r24, Z
     e26:	91 81       	ldd	r25, Z+1	; 0x01
     e28:	a2 81       	ldd	r26, Z+2	; 0x02
     e2a:	b3 81       	ldd	r27, Z+3	; 0x03
     e2c:	bc 01       	movw	r22, r24
     e2e:	cd 01       	movw	r24, r26
     e30:	0f 90       	pop	r0
     e32:	0f 90       	pop	r0
     e34:	df 91       	pop	r29
     e36:	cf 91       	pop	r28
     e38:	08 95       	ret

00000e3a <_ZN10helicopter5model11SystemModel11BlownFramesEl>:
			void BlownFrames( long val ) { numOfFramesBlown = val;}
     e3a:	cf 93       	push	r28
     e3c:	df 93       	push	r29
     e3e:	00 d0       	rcall	.+0      	; 0xe40 <_ZN10helicopter5model11SystemModel11BlownFramesEl+0x6>
     e40:	00 d0       	rcall	.+0      	; 0xe42 <_ZN10helicopter5model11SystemModel11BlownFramesEl+0x8>
     e42:	cd b7       	in	r28, 0x3d	; 61
     e44:	de b7       	in	r29, 0x3e	; 62
     e46:	9a 83       	std	Y+2, r25	; 0x02
     e48:	89 83       	std	Y+1, r24	; 0x01
     e4a:	4b 83       	std	Y+3, r20	; 0x03
     e4c:	5c 83       	std	Y+4, r21	; 0x04
     e4e:	6d 83       	std	Y+5, r22	; 0x05
     e50:	7e 83       	std	Y+6, r23	; 0x06
     e52:	89 81       	ldd	r24, Y+1	; 0x01
     e54:	9a 81       	ldd	r25, Y+2	; 0x02
     e56:	9c 01       	movw	r18, r24
     e58:	28 54       	subi	r18, 0x48	; 72
     e5a:	3f 4f       	sbci	r19, 0xFF	; 255
     e5c:	8b 81       	ldd	r24, Y+3	; 0x03
     e5e:	9c 81       	ldd	r25, Y+4	; 0x04
     e60:	ad 81       	ldd	r26, Y+5	; 0x05
     e62:	be 81       	ldd	r27, Y+6	; 0x06
     e64:	f9 01       	movw	r30, r18
     e66:	80 83       	st	Z, r24
     e68:	91 83       	std	Z+1, r25	; 0x01
     e6a:	a2 83       	std	Z+2, r26	; 0x02
     e6c:	b3 83       	std	Z+3, r27	; 0x03
     e6e:	26 96       	adiw	r28, 0x06	; 6
     e70:	0f b6       	in	r0, 0x3f	; 63
     e72:	f8 94       	cli
     e74:	de bf       	out	0x3e, r29	; 62
     e76:	0f be       	out	0x3f, r0	; 63
     e78:	cd bf       	out	0x3d, r28	; 61
     e7a:	df 91       	pop	r29
     e7c:	cf 91       	pop	r28
     e7e:	08 95       	ret

00000e80 <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelE>:

#include "PIDController.h"

using namespace helicopter::controller;

PIDController::PIDController(SystemModel *model): 
     e80:	cf 93       	push	r28
     e82:	df 93       	push	r29
     e84:	00 d0       	rcall	.+0      	; 0xe86 <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelE+0x6>
     e86:	1f 92       	push	r1
     e88:	cd b7       	in	r28, 0x3d	; 61
     e8a:	de b7       	in	r29, 0x3e	; 62
     e8c:	9a 83       	std	Y+2, r25	; 0x02
     e8e:	89 83       	std	Y+1, r24	; 0x01
     e90:	7c 83       	std	Y+4, r23	; 0x04
     e92:	6b 83       	std	Y+3, r22	; 0x03
minMainRotorServoControlValue(0),
maxMainRotorServoControlValue(0),

intervalPeriodSecs(0),
controlMaxValue(0),
controlMinValue(0)
     e94:	89 81       	ldd	r24, Y+1	; 0x01
     e96:	9a 81       	ldd	r25, Y+2	; 0x02
     e98:	2b 81       	ldd	r18, Y+3	; 0x03
     e9a:	3c 81       	ldd	r19, Y+4	; 0x04
     e9c:	fc 01       	movw	r30, r24
     e9e:	31 83       	std	Z+1, r19	; 0x01
     ea0:	20 83       	st	Z, r18
     ea2:	89 81       	ldd	r24, Y+1	; 0x01
     ea4:	9a 81       	ldd	r25, Y+2	; 0x02
     ea6:	fc 01       	movw	r30, r24
     ea8:	12 82       	std	Z+2, r1	; 0x02
     eaa:	13 82       	std	Z+3, r1	; 0x03
     eac:	14 82       	std	Z+4, r1	; 0x04
     eae:	15 82       	std	Z+5, r1	; 0x05
     eb0:	89 81       	ldd	r24, Y+1	; 0x01
     eb2:	9a 81       	ldd	r25, Y+2	; 0x02
     eb4:	fc 01       	movw	r30, r24
     eb6:	16 82       	std	Z+6, r1	; 0x06
     eb8:	17 82       	std	Z+7, r1	; 0x07
     eba:	10 86       	std	Z+8, r1	; 0x08
     ebc:	11 86       	std	Z+9, r1	; 0x09
     ebe:	89 81       	ldd	r24, Y+1	; 0x01
     ec0:	9a 81       	ldd	r25, Y+2	; 0x02
     ec2:	fc 01       	movw	r30, r24
     ec4:	12 86       	std	Z+10, r1	; 0x0a
     ec6:	13 86       	std	Z+11, r1	; 0x0b
     ec8:	14 86       	std	Z+12, r1	; 0x0c
     eca:	15 86       	std	Z+13, r1	; 0x0d
     ecc:	89 81       	ldd	r24, Y+1	; 0x01
     ece:	9a 81       	ldd	r25, Y+2	; 0x02
     ed0:	fc 01       	movw	r30, r24
     ed2:	16 86       	std	Z+14, r1	; 0x0e
     ed4:	17 86       	std	Z+15, r1	; 0x0f
     ed6:	10 8a       	std	Z+16, r1	; 0x10
     ed8:	11 8a       	std	Z+17, r1	; 0x11
     eda:	89 81       	ldd	r24, Y+1	; 0x01
     edc:	9a 81       	ldd	r25, Y+2	; 0x02
     ede:	fc 01       	movw	r30, r24
     ee0:	12 8a       	std	Z+18, r1	; 0x12
     ee2:	13 8a       	std	Z+19, r1	; 0x13
     ee4:	14 8a       	std	Z+20, r1	; 0x14
     ee6:	15 8a       	std	Z+21, r1	; 0x15
     ee8:	89 81       	ldd	r24, Y+1	; 0x01
     eea:	9a 81       	ldd	r25, Y+2	; 0x02
     eec:	fc 01       	movw	r30, r24
     eee:	16 8a       	std	Z+22, r1	; 0x16
     ef0:	17 8a       	std	Z+23, r1	; 0x17
     ef2:	10 8e       	std	Z+24, r1	; 0x18
     ef4:	11 8e       	std	Z+25, r1	; 0x19
     ef6:	89 81       	ldd	r24, Y+1	; 0x01
     ef8:	9a 81       	ldd	r25, Y+2	; 0x02
     efa:	fc 01       	movw	r30, r24
     efc:	12 8e       	std	Z+26, r1	; 0x1a
     efe:	13 8e       	std	Z+27, r1	; 0x1b
     f00:	14 8e       	std	Z+28, r1	; 0x1c
     f02:	15 8e       	std	Z+29, r1	; 0x1d
     f04:	89 81       	ldd	r24, Y+1	; 0x01
     f06:	9a 81       	ldd	r25, Y+2	; 0x02
     f08:	fc 01       	movw	r30, r24
     f0a:	16 8e       	std	Z+30, r1	; 0x1e
     f0c:	17 8e       	std	Z+31, r1	; 0x1f
     f0e:	10 a2       	std	Z+32, r1	; 0x20
     f10:	11 a2       	std	Z+33, r1	; 0x21
     f12:	89 81       	ldd	r24, Y+1	; 0x01
     f14:	9a 81       	ldd	r25, Y+2	; 0x02
     f16:	fc 01       	movw	r30, r24
     f18:	12 a2       	std	Z+34, r1	; 0x22
     f1a:	13 a2       	std	Z+35, r1	; 0x23
     f1c:	14 a2       	std	Z+36, r1	; 0x24
     f1e:	15 a2       	std	Z+37, r1	; 0x25
     f20:	89 81       	ldd	r24, Y+1	; 0x01
     f22:	9a 81       	ldd	r25, Y+2	; 0x02
     f24:	fc 01       	movw	r30, r24
     f26:	16 a2       	std	Z+38, r1	; 0x26
     f28:	17 a2       	std	Z+39, r1	; 0x27
     f2a:	10 a6       	std	Z+40, r1	; 0x28
     f2c:	11 a6       	std	Z+41, r1	; 0x29
     f2e:	89 81       	ldd	r24, Y+1	; 0x01
     f30:	9a 81       	ldd	r25, Y+2	; 0x02
     f32:	fc 01       	movw	r30, r24
     f34:	12 a6       	std	Z+42, r1	; 0x2a
     f36:	13 a6       	std	Z+43, r1	; 0x2b
     f38:	14 a6       	std	Z+44, r1	; 0x2c
     f3a:	15 a6       	std	Z+45, r1	; 0x2d
     f3c:	89 81       	ldd	r24, Y+1	; 0x01
     f3e:	9a 81       	ldd	r25, Y+2	; 0x02
     f40:	fc 01       	movw	r30, r24
     f42:	16 a6       	std	Z+46, r1	; 0x2e
     f44:	17 a6       	std	Z+47, r1	; 0x2f
     f46:	10 aa       	std	Z+48, r1	; 0x30
     f48:	11 aa       	std	Z+49, r1	; 0x31
     f4a:	89 81       	ldd	r24, Y+1	; 0x01
     f4c:	9a 81       	ldd	r25, Y+2	; 0x02
     f4e:	fc 01       	movw	r30, r24
     f50:	12 aa       	std	Z+50, r1	; 0x32
     f52:	13 aa       	std	Z+51, r1	; 0x33
     f54:	14 aa       	std	Z+52, r1	; 0x34
     f56:	15 aa       	std	Z+53, r1	; 0x35
     f58:	89 81       	ldd	r24, Y+1	; 0x01
     f5a:	9a 81       	ldd	r25, Y+2	; 0x02
     f5c:	fc 01       	movw	r30, r24
     f5e:	16 aa       	std	Z+54, r1	; 0x36
     f60:	17 aa       	std	Z+55, r1	; 0x37
     f62:	10 ae       	std	Z+56, r1	; 0x38
     f64:	11 ae       	std	Z+57, r1	; 0x39
     f66:	89 81       	ldd	r24, Y+1	; 0x01
     f68:	9a 81       	ldd	r25, Y+2	; 0x02
     f6a:	fc 01       	movw	r30, r24
     f6c:	12 ae       	std	Z+58, r1	; 0x3a
     f6e:	13 ae       	std	Z+59, r1	; 0x3b
     f70:	14 ae       	std	Z+60, r1	; 0x3c
     f72:	15 ae       	std	Z+61, r1	; 0x3d
     f74:	89 81       	ldd	r24, Y+1	; 0x01
     f76:	9a 81       	ldd	r25, Y+2	; 0x02
     f78:	ce 96       	adiw	r24, 0x3e	; 62
     f7a:	fc 01       	movw	r30, r24
     f7c:	10 82       	st	Z, r1
     f7e:	11 82       	std	Z+1, r1	; 0x01
     f80:	12 82       	std	Z+2, r1	; 0x02
     f82:	13 82       	std	Z+3, r1	; 0x03
     f84:	89 81       	ldd	r24, Y+1	; 0x01
     f86:	9a 81       	ldd	r25, Y+2	; 0x02
     f88:	8e 5b       	subi	r24, 0xBE	; 190
     f8a:	9f 4f       	sbci	r25, 0xFF	; 255
     f8c:	fc 01       	movw	r30, r24
     f8e:	10 82       	st	Z, r1
     f90:	11 82       	std	Z+1, r1	; 0x01
     f92:	12 82       	std	Z+2, r1	; 0x02
     f94:	13 82       	std	Z+3, r1	; 0x03
     f96:	89 81       	ldd	r24, Y+1	; 0x01
     f98:	9a 81       	ldd	r25, Y+2	; 0x02
     f9a:	8a 5b       	subi	r24, 0xBA	; 186
     f9c:	9f 4f       	sbci	r25, 0xFF	; 255
     f9e:	fc 01       	movw	r30, r24
     fa0:	10 82       	st	Z, r1
     fa2:	11 82       	std	Z+1, r1	; 0x01
     fa4:	12 82       	std	Z+2, r1	; 0x02
     fa6:	13 82       	std	Z+3, r1	; 0x03
     fa8:	89 81       	ldd	r24, Y+1	; 0x01
     faa:	9a 81       	ldd	r25, Y+2	; 0x02
     fac:	86 5b       	subi	r24, 0xB6	; 182
     fae:	9f 4f       	sbci	r25, 0xFF	; 255
     fb0:	fc 01       	movw	r30, r24
     fb2:	10 82       	st	Z, r1
     fb4:	11 82       	std	Z+1, r1	; 0x01
     fb6:	12 82       	std	Z+2, r1	; 0x02
     fb8:	13 82       	std	Z+3, r1	; 0x03
     fba:	89 81       	ldd	r24, Y+1	; 0x01
     fbc:	9a 81       	ldd	r25, Y+2	; 0x02
     fbe:	82 5b       	subi	r24, 0xB2	; 178
     fc0:	9f 4f       	sbci	r25, 0xFF	; 255
     fc2:	fc 01       	movw	r30, r24
     fc4:	10 82       	st	Z, r1
     fc6:	11 82       	std	Z+1, r1	; 0x01
     fc8:	12 82       	std	Z+2, r1	; 0x02
     fca:	13 82       	std	Z+3, r1	; 0x03
     fcc:	89 81       	ldd	r24, Y+1	; 0x01
     fce:	9a 81       	ldd	r25, Y+2	; 0x02
     fd0:	8e 5a       	subi	r24, 0xAE	; 174
     fd2:	9f 4f       	sbci	r25, 0xFF	; 255
     fd4:	fc 01       	movw	r30, r24
     fd6:	10 82       	st	Z, r1
     fd8:	11 82       	std	Z+1, r1	; 0x01
     fda:	12 82       	std	Z+2, r1	; 0x02
     fdc:	13 82       	std	Z+3, r1	; 0x03
     fde:	89 81       	ldd	r24, Y+1	; 0x01
     fe0:	9a 81       	ldd	r25, Y+2	; 0x02
     fe2:	8a 5a       	subi	r24, 0xAA	; 170
     fe4:	9f 4f       	sbci	r25, 0xFF	; 255
     fe6:	fc 01       	movw	r30, r24
     fe8:	10 82       	st	Z, r1
     fea:	11 82       	std	Z+1, r1	; 0x01
     fec:	12 82       	std	Z+2, r1	; 0x02
     fee:	13 82       	std	Z+3, r1	; 0x03
     ff0:	89 81       	ldd	r24, Y+1	; 0x01
     ff2:	9a 81       	ldd	r25, Y+2	; 0x02
     ff4:	86 5a       	subi	r24, 0xA6	; 166
     ff6:	9f 4f       	sbci	r25, 0xFF	; 255
     ff8:	fc 01       	movw	r30, r24
     ffa:	10 82       	st	Z, r1
     ffc:	11 82       	std	Z+1, r1	; 0x01
     ffe:	12 82       	std	Z+2, r1	; 0x02
    1000:	13 82       	std	Z+3, r1	; 0x03
    1002:	89 81       	ldd	r24, Y+1	; 0x01
    1004:	9a 81       	ldd	r25, Y+2	; 0x02
    1006:	82 5a       	subi	r24, 0xA2	; 162
    1008:	9f 4f       	sbci	r25, 0xFF	; 255
    100a:	fc 01       	movw	r30, r24
    100c:	10 82       	st	Z, r1
    100e:	11 82       	std	Z+1, r1	; 0x01
    1010:	12 82       	std	Z+2, r1	; 0x02
    1012:	13 82       	std	Z+3, r1	; 0x03
    1014:	89 81       	ldd	r24, Y+1	; 0x01
    1016:	9a 81       	ldd	r25, Y+2	; 0x02
    1018:	8e 59       	subi	r24, 0x9E	; 158
    101a:	9f 4f       	sbci	r25, 0xFF	; 255
    101c:	fc 01       	movw	r30, r24
    101e:	10 82       	st	Z, r1
    1020:	11 82       	std	Z+1, r1	; 0x01
    1022:	12 82       	std	Z+2, r1	; 0x02
    1024:	13 82       	std	Z+3, r1	; 0x03
    1026:	89 81       	ldd	r24, Y+1	; 0x01
    1028:	9a 81       	ldd	r25, Y+2	; 0x02
    102a:	8a 59       	subi	r24, 0x9A	; 154
    102c:	9f 4f       	sbci	r25, 0xFF	; 255
    102e:	fc 01       	movw	r30, r24
    1030:	10 82       	st	Z, r1
    1032:	11 82       	std	Z+1, r1	; 0x01
    1034:	12 82       	std	Z+2, r1	; 0x02
    1036:	13 82       	std	Z+3, r1	; 0x03
    1038:	89 81       	ldd	r24, Y+1	; 0x01
    103a:	9a 81       	ldd	r25, Y+2	; 0x02
    103c:	86 59       	subi	r24, 0x96	; 150
    103e:	9f 4f       	sbci	r25, 0xFF	; 255
    1040:	fc 01       	movw	r30, r24
    1042:	10 82       	st	Z, r1
    1044:	11 82       	std	Z+1, r1	; 0x01
    1046:	12 82       	std	Z+2, r1	; 0x02
    1048:	13 82       	std	Z+3, r1	; 0x03
    104a:	89 81       	ldd	r24, Y+1	; 0x01
    104c:	9a 81       	ldd	r25, Y+2	; 0x02
    104e:	82 59       	subi	r24, 0x92	; 146
    1050:	9f 4f       	sbci	r25, 0xFF	; 255
    1052:	fc 01       	movw	r30, r24
    1054:	10 82       	st	Z, r1
    1056:	11 82       	std	Z+1, r1	; 0x01
    1058:	12 82       	std	Z+2, r1	; 0x02
    105a:	13 82       	std	Z+3, r1	; 0x03
    105c:	89 81       	ldd	r24, Y+1	; 0x01
    105e:	9a 81       	ldd	r25, Y+2	; 0x02
    1060:	8e 58       	subi	r24, 0x8E	; 142
    1062:	9f 4f       	sbci	r25, 0xFF	; 255
    1064:	fc 01       	movw	r30, r24
    1066:	10 82       	st	Z, r1
    1068:	11 82       	std	Z+1, r1	; 0x01
    106a:	12 82       	std	Z+2, r1	; 0x02
    106c:	13 82       	std	Z+3, r1	; 0x03
{
	
}
    106e:	0f 90       	pop	r0
    1070:	0f 90       	pop	r0
    1072:	0f 90       	pop	r0
    1074:	0f 90       	pop	r0
    1076:	df 91       	pop	r29
    1078:	cf 91       	pop	r28
    107a:	08 95       	ret

0000107c <_ZN10helicopter10controller13PIDController21calculateProportionalEff>:
{
	delete model;
}

float PIDController::calculateProportional(float currentValue, float referenceValue)
{
    107c:	0f 93       	push	r16
    107e:	1f 93       	push	r17
    1080:	cf 93       	push	r28
    1082:	df 93       	push	r29
    1084:	cd b7       	in	r28, 0x3d	; 61
    1086:	de b7       	in	r29, 0x3e	; 62
    1088:	2a 97       	sbiw	r28, 0x0a	; 10
    108a:	0f b6       	in	r0, 0x3f	; 63
    108c:	f8 94       	cli
    108e:	de bf       	out	0x3e, r29	; 62
    1090:	0f be       	out	0x3f, r0	; 63
    1092:	cd bf       	out	0x3d, r28	; 61
    1094:	9a 83       	std	Y+2, r25	; 0x02
    1096:	89 83       	std	Y+1, r24	; 0x01
    1098:	4b 83       	std	Y+3, r20	; 0x03
    109a:	5c 83       	std	Y+4, r21	; 0x04
    109c:	6d 83       	std	Y+5, r22	; 0x05
    109e:	7e 83       	std	Y+6, r23	; 0x06
    10a0:	0f 83       	std	Y+7, r16	; 0x07
    10a2:	18 87       	std	Y+8, r17	; 0x08
    10a4:	29 87       	std	Y+9, r18	; 0x09
    10a6:	3a 87       	std	Y+10, r19	; 0x0a
	return currentValue - referenceValue;
    10a8:	2f 81       	ldd	r18, Y+7	; 0x07
    10aa:	38 85       	ldd	r19, Y+8	; 0x08
    10ac:	49 85       	ldd	r20, Y+9	; 0x09
    10ae:	5a 85       	ldd	r21, Y+10	; 0x0a
    10b0:	6b 81       	ldd	r22, Y+3	; 0x03
    10b2:	7c 81       	ldd	r23, Y+4	; 0x04
    10b4:	8d 81       	ldd	r24, Y+5	; 0x05
    10b6:	9e 81       	ldd	r25, Y+6	; 0x06
    10b8:	0e 94 08 43 	call	0x8610	; 0x8610 <__subsf3>
    10bc:	dc 01       	movw	r26, r24
    10be:	cb 01       	movw	r24, r22
}
    10c0:	bc 01       	movw	r22, r24
    10c2:	cd 01       	movw	r24, r26
    10c4:	2a 96       	adiw	r28, 0x0a	; 10
    10c6:	0f b6       	in	r0, 0x3f	; 63
    10c8:	f8 94       	cli
    10ca:	de bf       	out	0x3e, r29	; 62
    10cc:	0f be       	out	0x3f, r0	; 63
    10ce:	cd bf       	out	0x3d, r28	; 61
    10d0:	df 91       	pop	r29
    10d2:	cf 91       	pop	r28
    10d4:	1f 91       	pop	r17
    10d6:	0f 91       	pop	r16
    10d8:	08 95       	ret

000010da <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>:


//TODO refactor to make this common for all PID calculations. I'll want to include the specific
//variables max values as parameters so I can 'generalize' it.
float PIDController::calculateIntegralAntiWindup(float oldControlPreServoAdj, float oldControl, float antiWindupGain)
{
    10da:	cf 92       	push	r12
    10dc:	df 92       	push	r13
    10de:	ef 92       	push	r14
    10e0:	ff 92       	push	r15
    10e2:	0f 93       	push	r16
    10e4:	1f 93       	push	r17
    10e6:	cf 93       	push	r28
    10e8:	df 93       	push	r29
    10ea:	cd b7       	in	r28, 0x3d	; 61
    10ec:	de b7       	in	r29, 0x3e	; 62
    10ee:	62 97       	sbiw	r28, 0x12	; 18
    10f0:	0f b6       	in	r0, 0x3f	; 63
    10f2:	f8 94       	cli
    10f4:	de bf       	out	0x3e, r29	; 62
    10f6:	0f be       	out	0x3f, r0	; 63
    10f8:	cd bf       	out	0x3d, r28	; 61
    10fa:	9e 83       	std	Y+6, r25	; 0x06
    10fc:	8d 83       	std	Y+5, r24	; 0x05
    10fe:	4f 83       	std	Y+7, r20	; 0x07
    1100:	58 87       	std	Y+8, r21	; 0x08
    1102:	69 87       	std	Y+9, r22	; 0x09
    1104:	7a 87       	std	Y+10, r23	; 0x0a
    1106:	0b 87       	std	Y+11, r16	; 0x0b
    1108:	1c 87       	std	Y+12, r17	; 0x0c
    110a:	2d 87       	std	Y+13, r18	; 0x0d
    110c:	3e 87       	std	Y+14, r19	; 0x0e
    110e:	cf 86       	std	Y+15, r12	; 0x0f
    1110:	d8 8a       	std	Y+16, r13	; 0x10
    1112:	e9 8a       	std	Y+17, r14	; 0x11
    1114:	fa 8a       	std	Y+18, r15	; 0x12
	float antiWindup = 0;
    1116:	19 82       	std	Y+1, r1	; 0x01
    1118:	1a 82       	std	Y+2, r1	; 0x02
    111a:	1b 82       	std	Y+3, r1	; 0x03
    111c:	1c 82       	std	Y+4, r1	; 0x04
	
	antiWindup = antiWindupGain * (oldControlPreServoAdj - oldControl);
    111e:	2b 85       	ldd	r18, Y+11	; 0x0b
    1120:	3c 85       	ldd	r19, Y+12	; 0x0c
    1122:	4d 85       	ldd	r20, Y+13	; 0x0d
    1124:	5e 85       	ldd	r21, Y+14	; 0x0e
    1126:	6f 81       	ldd	r22, Y+7	; 0x07
    1128:	78 85       	ldd	r23, Y+8	; 0x08
    112a:	89 85       	ldd	r24, Y+9	; 0x09
    112c:	9a 85       	ldd	r25, Y+10	; 0x0a
    112e:	0e 94 08 43 	call	0x8610	; 0x8610 <__subsf3>
    1132:	dc 01       	movw	r26, r24
    1134:	cb 01       	movw	r24, r22
    1136:	2f 85       	ldd	r18, Y+15	; 0x0f
    1138:	38 89       	ldd	r19, Y+16	; 0x10
    113a:	49 89       	ldd	r20, Y+17	; 0x11
    113c:	5a 89       	ldd	r21, Y+18	; 0x12
    113e:	bc 01       	movw	r22, r24
    1140:	cd 01       	movw	r24, r26
    1142:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    1146:	dc 01       	movw	r26, r24
    1148:	cb 01       	movw	r24, r22
    114a:	89 83       	std	Y+1, r24	; 0x01
    114c:	9a 83       	std	Y+2, r25	; 0x02
    114e:	ab 83       	std	Y+3, r26	; 0x03
    1150:	bc 83       	std	Y+4, r27	; 0x04
	{
		antiWindup = yawAntiWindupGain * (oldYawControlValue - minYawServoControlValue);
	}
	*/
	
	return antiWindup;
    1152:	89 81       	ldd	r24, Y+1	; 0x01
    1154:	9a 81       	ldd	r25, Y+2	; 0x02
    1156:	ab 81       	ldd	r26, Y+3	; 0x03
    1158:	bc 81       	ldd	r27, Y+4	; 0x04
}
    115a:	bc 01       	movw	r22, r24
    115c:	cd 01       	movw	r24, r26
    115e:	62 96       	adiw	r28, 0x12	; 18
    1160:	0f b6       	in	r0, 0x3f	; 63
    1162:	f8 94       	cli
    1164:	de bf       	out	0x3e, r29	; 62
    1166:	0f be       	out	0x3f, r0	; 63
    1168:	cd bf       	out	0x3d, r28	; 61
    116a:	df 91       	pop	r29
    116c:	cf 91       	pop	r28
    116e:	1f 91       	pop	r17
    1170:	0f 91       	pop	r16
    1172:	ff 90       	pop	r15
    1174:	ef 90       	pop	r14
    1176:	df 90       	pop	r13
    1178:	cf 90       	pop	r12
    117a:	08 95       	ret

0000117c <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>:

/**
 * Anti-windup algorithm provided by Control Systems Design by Karl Johan Astrom 2002. chapter 6
 */
float PIDController::calculateIntegral(float proportional, float oldIntegral, float antiWindup, float integralGain)
{
    117c:	8f 92       	push	r8
    117e:	9f 92       	push	r9
    1180:	af 92       	push	r10
    1182:	bf 92       	push	r11
    1184:	cf 92       	push	r12
    1186:	df 92       	push	r13
    1188:	ef 92       	push	r14
    118a:	ff 92       	push	r15
    118c:	0f 93       	push	r16
    118e:	1f 93       	push	r17
    1190:	cf 93       	push	r28
    1192:	df 93       	push	r29
    1194:	cd b7       	in	r28, 0x3d	; 61
    1196:	de b7       	in	r29, 0x3e	; 62
    1198:	66 97       	sbiw	r28, 0x16	; 22
    119a:	0f b6       	in	r0, 0x3f	; 63
    119c:	f8 94       	cli
    119e:	de bf       	out	0x3e, r29	; 62
    11a0:	0f be       	out	0x3f, r0	; 63
    11a2:	cd bf       	out	0x3d, r28	; 61
    11a4:	9e 83       	std	Y+6, r25	; 0x06
    11a6:	8d 83       	std	Y+5, r24	; 0x05
    11a8:	4f 83       	std	Y+7, r20	; 0x07
    11aa:	58 87       	std	Y+8, r21	; 0x08
    11ac:	69 87       	std	Y+9, r22	; 0x09
    11ae:	7a 87       	std	Y+10, r23	; 0x0a
    11b0:	0b 87       	std	Y+11, r16	; 0x0b
    11b2:	1c 87       	std	Y+12, r17	; 0x0c
    11b4:	2d 87       	std	Y+13, r18	; 0x0d
    11b6:	3e 87       	std	Y+14, r19	; 0x0e
    11b8:	cf 86       	std	Y+15, r12	; 0x0f
    11ba:	d8 8a       	std	Y+16, r13	; 0x10
    11bc:	e9 8a       	std	Y+17, r14	; 0x11
    11be:	fa 8a       	std	Y+18, r15	; 0x12
    11c0:	8b 8a       	std	Y+19, r8	; 0x13
    11c2:	9c 8a       	std	Y+20, r9	; 0x14
    11c4:	ad 8a       	std	Y+21, r10	; 0x15
    11c6:	be 8a       	std	Y+22, r11	; 0x16
	
	float workingIntegral = 0;
    11c8:	19 82       	std	Y+1, r1	; 0x01
    11ca:	1a 82       	std	Y+2, r1	; 0x02
    11cc:	1b 82       	std	Y+3, r1	; 0x03
    11ce:	1c 82       	std	Y+4, r1	; 0x04
	
	workingIntegral = proportional * intervalPeriodSecs * integralGain;
    11d0:	8d 81       	ldd	r24, Y+5	; 0x05
    11d2:	9e 81       	ldd	r25, Y+6	; 0x06
    11d4:	86 59       	subi	r24, 0x96	; 150
    11d6:	9f 4f       	sbci	r25, 0xFF	; 255
    11d8:	fc 01       	movw	r30, r24
    11da:	80 81       	ld	r24, Z
    11dc:	91 81       	ldd	r25, Z+1	; 0x01
    11de:	a2 81       	ldd	r26, Z+2	; 0x02
    11e0:	b3 81       	ldd	r27, Z+3	; 0x03
    11e2:	2f 81       	ldd	r18, Y+7	; 0x07
    11e4:	38 85       	ldd	r19, Y+8	; 0x08
    11e6:	49 85       	ldd	r20, Y+9	; 0x09
    11e8:	5a 85       	ldd	r21, Y+10	; 0x0a
    11ea:	bc 01       	movw	r22, r24
    11ec:	cd 01       	movw	r24, r26
    11ee:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    11f2:	dc 01       	movw	r26, r24
    11f4:	cb 01       	movw	r24, r22
    11f6:	2b 89       	ldd	r18, Y+19	; 0x13
    11f8:	3c 89       	ldd	r19, Y+20	; 0x14
    11fa:	4d 89       	ldd	r20, Y+21	; 0x15
    11fc:	5e 89       	ldd	r21, Y+22	; 0x16
    11fe:	bc 01       	movw	r22, r24
    1200:	cd 01       	movw	r24, r26
    1202:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    1206:	dc 01       	movw	r26, r24
    1208:	cb 01       	movw	r24, r22
    120a:	89 83       	std	Y+1, r24	; 0x01
    120c:	9a 83       	std	Y+2, r25	; 0x02
    120e:	ab 83       	std	Y+3, r26	; 0x03
    1210:	bc 83       	std	Y+4, r27	; 0x04
	//Integrate (i.e. sum this working value with the current integral value).
	//Note: i'm going out of order from what is defined in the book referenced above.
	//I am summing before subtracting the antiwindup value to make it easier.
	//I also find it odd that the integral 'gain' is being applied before 
	//accounting for the anti-windup. But this could be to compensate for large errors.
	workingIntegral = workingIntegral + oldIntegral;
    1212:	2b 85       	ldd	r18, Y+11	; 0x0b
    1214:	3c 85       	ldd	r19, Y+12	; 0x0c
    1216:	4d 85       	ldd	r20, Y+13	; 0x0d
    1218:	5e 85       	ldd	r21, Y+14	; 0x0e
    121a:	69 81       	ldd	r22, Y+1	; 0x01
    121c:	7a 81       	ldd	r23, Y+2	; 0x02
    121e:	8b 81       	ldd	r24, Y+3	; 0x03
    1220:	9c 81       	ldd	r25, Y+4	; 0x04
    1222:	0e 94 09 43 	call	0x8612	; 0x8612 <__addsf3>
    1226:	dc 01       	movw	r26, r24
    1228:	cb 01       	movw	r24, r22
    122a:	89 83       	std	Y+1, r24	; 0x01
    122c:	9a 83       	std	Y+2, r25	; 0x02
    122e:	ab 83       	std	Y+3, r26	; 0x03
    1230:	bc 83       	std	Y+4, r27	; 0x04
	
	if (antiWindup != 0)
    1232:	20 e0       	ldi	r18, 0x00	; 0
    1234:	30 e0       	ldi	r19, 0x00	; 0
    1236:	a9 01       	movw	r20, r18
    1238:	6f 85       	ldd	r22, Y+15	; 0x0f
    123a:	78 89       	ldd	r23, Y+16	; 0x10
    123c:	89 89       	ldd	r24, Y+17	; 0x11
    123e:	9a 89       	ldd	r25, Y+18	; 0x12
    1240:	0e 94 6d 43 	call	0x86da	; 0x86da <__cmpsf2>
    1244:	88 23       	and	r24, r24
    1246:	09 f4       	brne	.+2      	; 0x124a <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0xce>
    1248:	52 c0       	rjmp	.+164    	; 0x12ee <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x172>
	{
		//We want to know if the integral is greater than 0 or less than 0 so that when we subtract
		//the antiwindup value, we get closer to 0, and don't exceed 0.
		if (workingIntegral > 0 && antiWindup > workingIntegral)
    124a:	20 e0       	ldi	r18, 0x00	; 0
    124c:	30 e0       	ldi	r19, 0x00	; 0
    124e:	a9 01       	movw	r20, r18
    1250:	69 81       	ldd	r22, Y+1	; 0x01
    1252:	7a 81       	ldd	r23, Y+2	; 0x02
    1254:	8b 81       	ldd	r24, Y+3	; 0x03
    1256:	9c 81       	ldd	r25, Y+4	; 0x04
    1258:	0e 94 4b 45 	call	0x8a96	; 0x8a96 <__gesf2>
    125c:	18 16       	cp	r1, r24
    125e:	8c f4       	brge	.+34     	; 0x1282 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x106>
    1260:	29 81       	ldd	r18, Y+1	; 0x01
    1262:	3a 81       	ldd	r19, Y+2	; 0x02
    1264:	4b 81       	ldd	r20, Y+3	; 0x03
    1266:	5c 81       	ldd	r21, Y+4	; 0x04
    1268:	6f 85       	ldd	r22, Y+15	; 0x0f
    126a:	78 89       	ldd	r23, Y+16	; 0x10
    126c:	89 89       	ldd	r24, Y+17	; 0x11
    126e:	9a 89       	ldd	r25, Y+18	; 0x12
    1270:	0e 94 4b 45 	call	0x8a96	; 0x8a96 <__gesf2>
    1274:	18 16       	cp	r1, r24
    1276:	2c f4       	brge	.+10     	; 0x1282 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x106>
		{
			workingIntegral = 0;
    1278:	19 82       	std	Y+1, r1	; 0x01
    127a:	1a 82       	std	Y+2, r1	; 0x02
    127c:	1b 82       	std	Y+3, r1	; 0x03
    127e:	1c 82       	std	Y+4, r1	; 0x04
    1280:	1b c0       	rjmp	.+54     	; 0x12b8 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x13c>
		}else if (workingIntegral < 0 && antiWindup < workingIntegral)
    1282:	20 e0       	ldi	r18, 0x00	; 0
    1284:	30 e0       	ldi	r19, 0x00	; 0
    1286:	a9 01       	movw	r20, r18
    1288:	69 81       	ldd	r22, Y+1	; 0x01
    128a:	7a 81       	ldd	r23, Y+2	; 0x02
    128c:	8b 81       	ldd	r24, Y+3	; 0x03
    128e:	9c 81       	ldd	r25, Y+4	; 0x04
    1290:	0e 94 6d 43 	call	0x86da	; 0x86da <__cmpsf2>
    1294:	88 23       	and	r24, r24
    1296:	84 f4       	brge	.+32     	; 0x12b8 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x13c>
    1298:	29 81       	ldd	r18, Y+1	; 0x01
    129a:	3a 81       	ldd	r19, Y+2	; 0x02
    129c:	4b 81       	ldd	r20, Y+3	; 0x03
    129e:	5c 81       	ldd	r21, Y+4	; 0x04
    12a0:	6f 85       	ldd	r22, Y+15	; 0x0f
    12a2:	78 89       	ldd	r23, Y+16	; 0x10
    12a4:	89 89       	ldd	r24, Y+17	; 0x11
    12a6:	9a 89       	ldd	r25, Y+18	; 0x12
    12a8:	0e 94 6d 43 	call	0x86da	; 0x86da <__cmpsf2>
    12ac:	88 23       	and	r24, r24
    12ae:	24 f4       	brge	.+8      	; 0x12b8 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x13c>
		{
			workingIntegral = 0;
    12b0:	19 82       	std	Y+1, r1	; 0x01
    12b2:	1a 82       	std	Y+2, r1	; 0x02
    12b4:	1b 82       	std	Y+3, r1	; 0x03
    12b6:	1c 82       	std	Y+4, r1	; 0x04
		}
		
		if (workingIntegral != 0)
    12b8:	20 e0       	ldi	r18, 0x00	; 0
    12ba:	30 e0       	ldi	r19, 0x00	; 0
    12bc:	a9 01       	movw	r20, r18
    12be:	69 81       	ldd	r22, Y+1	; 0x01
    12c0:	7a 81       	ldd	r23, Y+2	; 0x02
    12c2:	8b 81       	ldd	r24, Y+3	; 0x03
    12c4:	9c 81       	ldd	r25, Y+4	; 0x04
    12c6:	0e 94 6d 43 	call	0x86da	; 0x86da <__cmpsf2>
    12ca:	88 23       	and	r24, r24
    12cc:	81 f0       	breq	.+32     	; 0x12ee <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x172>
		{
				//Subtract the anti-windup value from the working integral. 
			workingIntegral = workingIntegral - antiWindup;
    12ce:	2f 85       	ldd	r18, Y+15	; 0x0f
    12d0:	38 89       	ldd	r19, Y+16	; 0x10
    12d2:	49 89       	ldd	r20, Y+17	; 0x11
    12d4:	5a 89       	ldd	r21, Y+18	; 0x12
    12d6:	69 81       	ldd	r22, Y+1	; 0x01
    12d8:	7a 81       	ldd	r23, Y+2	; 0x02
    12da:	8b 81       	ldd	r24, Y+3	; 0x03
    12dc:	9c 81       	ldd	r25, Y+4	; 0x04
    12de:	0e 94 08 43 	call	0x8610	; 0x8610 <__subsf3>
    12e2:	dc 01       	movw	r26, r24
    12e4:	cb 01       	movw	r24, r22
    12e6:	89 83       	std	Y+1, r24	; 0x01
    12e8:	9a 83       	std	Y+2, r25	; 0x02
    12ea:	ab 83       	std	Y+3, r26	; 0x03
    12ec:	bc 83       	std	Y+4, r27	; 0x04
		}
	}
	
	return workingIntegral;
    12ee:	89 81       	ldd	r24, Y+1	; 0x01
    12f0:	9a 81       	ldd	r25, Y+2	; 0x02
    12f2:	ab 81       	ldd	r26, Y+3	; 0x03
    12f4:	bc 81       	ldd	r27, Y+4	; 0x04
}
    12f6:	bc 01       	movw	r22, r24
    12f8:	cd 01       	movw	r24, r26
    12fa:	66 96       	adiw	r28, 0x16	; 22
    12fc:	0f b6       	in	r0, 0x3f	; 63
    12fe:	f8 94       	cli
    1300:	de bf       	out	0x3e, r29	; 62
    1302:	0f be       	out	0x3f, r0	; 63
    1304:	cd bf       	out	0x3d, r28	; 61
    1306:	df 91       	pop	r29
    1308:	cf 91       	pop	r28
    130a:	1f 91       	pop	r17
    130c:	0f 91       	pop	r16
    130e:	ff 90       	pop	r15
    1310:	ef 90       	pop	r14
    1312:	df 90       	pop	r13
    1314:	cf 90       	pop	r12
    1316:	bf 90       	pop	r11
    1318:	af 90       	pop	r10
    131a:	9f 90       	pop	r9
    131c:	8f 90       	pop	r8
    131e:	08 95       	ret

00001320 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>:
	//return integral;
//}


float PIDController::calculateVelocityError(float currentVelocity, float referenceVelocity)
{
    1320:	0f 93       	push	r16
    1322:	1f 93       	push	r17
    1324:	cf 93       	push	r28
    1326:	df 93       	push	r29
    1328:	cd b7       	in	r28, 0x3d	; 61
    132a:	de b7       	in	r29, 0x3e	; 62
    132c:	2a 97       	sbiw	r28, 0x0a	; 10
    132e:	0f b6       	in	r0, 0x3f	; 63
    1330:	f8 94       	cli
    1332:	de bf       	out	0x3e, r29	; 62
    1334:	0f be       	out	0x3f, r0	; 63
    1336:	cd bf       	out	0x3d, r28	; 61
    1338:	9a 83       	std	Y+2, r25	; 0x02
    133a:	89 83       	std	Y+1, r24	; 0x01
    133c:	4b 83       	std	Y+3, r20	; 0x03
    133e:	5c 83       	std	Y+4, r21	; 0x04
    1340:	6d 83       	std	Y+5, r22	; 0x05
    1342:	7e 83       	std	Y+6, r23	; 0x06
    1344:	0f 83       	std	Y+7, r16	; 0x07
    1346:	18 87       	std	Y+8, r17	; 0x08
    1348:	29 87       	std	Y+9, r18	; 0x09
    134a:	3a 87       	std	Y+10, r19	; 0x0a
	return currentVelocity - referenceVelocity;
    134c:	2f 81       	ldd	r18, Y+7	; 0x07
    134e:	38 85       	ldd	r19, Y+8	; 0x08
    1350:	49 85       	ldd	r20, Y+9	; 0x09
    1352:	5a 85       	ldd	r21, Y+10	; 0x0a
    1354:	6b 81       	ldd	r22, Y+3	; 0x03
    1356:	7c 81       	ldd	r23, Y+4	; 0x04
    1358:	8d 81       	ldd	r24, Y+5	; 0x05
    135a:	9e 81       	ldd	r25, Y+6	; 0x06
    135c:	0e 94 08 43 	call	0x8610	; 0x8610 <__subsf3>
    1360:	dc 01       	movw	r26, r24
    1362:	cb 01       	movw	r24, r22
}
    1364:	bc 01       	movw	r22, r24
    1366:	cd 01       	movw	r24, r26
    1368:	2a 96       	adiw	r28, 0x0a	; 10
    136a:	0f b6       	in	r0, 0x3f	; 63
    136c:	f8 94       	cli
    136e:	de bf       	out	0x3e, r29	; 62
    1370:	0f be       	out	0x3f, r0	; 63
    1372:	cd bf       	out	0x3d, r28	; 61
    1374:	df 91       	pop	r29
    1376:	cf 91       	pop	r28
    1378:	1f 91       	pop	r17
    137a:	0f 91       	pop	r16
    137c:	08 95       	ret

0000137e <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>:

float PIDController::calculateOuterLoopControlValue(float proportionalError, float velocityError, float integral, float proportionalGain, float derivativeGain)
{
    137e:	8f 92       	push	r8
    1380:	9f 92       	push	r9
    1382:	af 92       	push	r10
    1384:	bf 92       	push	r11
    1386:	cf 92       	push	r12
    1388:	df 92       	push	r13
    138a:	ef 92       	push	r14
    138c:	ff 92       	push	r15
    138e:	0f 93       	push	r16
    1390:	1f 93       	push	r17
    1392:	cf 93       	push	r28
    1394:	df 93       	push	r29
    1396:	cd b7       	in	r28, 0x3d	; 61
    1398:	de b7       	in	r29, 0x3e	; 62
    139a:	66 97       	sbiw	r28, 0x16	; 22
    139c:	0f b6       	in	r0, 0x3f	; 63
    139e:	f8 94       	cli
    13a0:	de bf       	out	0x3e, r29	; 62
    13a2:	0f be       	out	0x3f, r0	; 63
    13a4:	cd bf       	out	0x3d, r28	; 61
    13a6:	9e 83       	std	Y+6, r25	; 0x06
    13a8:	8d 83       	std	Y+5, r24	; 0x05
    13aa:	4f 83       	std	Y+7, r20	; 0x07
    13ac:	58 87       	std	Y+8, r21	; 0x08
    13ae:	69 87       	std	Y+9, r22	; 0x09
    13b0:	7a 87       	std	Y+10, r23	; 0x0a
    13b2:	0b 87       	std	Y+11, r16	; 0x0b
    13b4:	1c 87       	std	Y+12, r17	; 0x0c
    13b6:	2d 87       	std	Y+13, r18	; 0x0d
    13b8:	3e 87       	std	Y+14, r19	; 0x0e
    13ba:	cf 86       	std	Y+15, r12	; 0x0f
    13bc:	d8 8a       	std	Y+16, r13	; 0x10
    13be:	e9 8a       	std	Y+17, r14	; 0x11
    13c0:	fa 8a       	std	Y+18, r15	; 0x12
    13c2:	8b 8a       	std	Y+19, r8	; 0x13
    13c4:	9c 8a       	std	Y+20, r9	; 0x14
    13c6:	ad 8a       	std	Y+21, r10	; 0x15
    13c8:	be 8a       	std	Y+22, r11	; 0x16
	float controlValue = 0;
    13ca:	19 82       	std	Y+1, r1	; 0x01
    13cc:	1a 82       	std	Y+2, r1	; 0x02
    13ce:	1b 82       	std	Y+3, r1	; 0x03
    13d0:	1c 82       	std	Y+4, r1	; 0x04
	
	controlValue = integral  + proportionalError * proportionalGain + velocityError * derivativeGain;
    13d2:	2b 89       	ldd	r18, Y+19	; 0x13
    13d4:	3c 89       	ldd	r19, Y+20	; 0x14
    13d6:	4d 89       	ldd	r20, Y+21	; 0x15
    13d8:	5e 89       	ldd	r21, Y+22	; 0x16
    13da:	6f 81       	ldd	r22, Y+7	; 0x07
    13dc:	78 85       	ldd	r23, Y+8	; 0x08
    13de:	89 85       	ldd	r24, Y+9	; 0x09
    13e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    13e2:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    13e6:	dc 01       	movw	r26, r24
    13e8:	cb 01       	movw	r24, r22
    13ea:	2f 85       	ldd	r18, Y+15	; 0x0f
    13ec:	38 89       	ldd	r19, Y+16	; 0x10
    13ee:	49 89       	ldd	r20, Y+17	; 0x11
    13f0:	5a 89       	ldd	r21, Y+18	; 0x12
    13f2:	bc 01       	movw	r22, r24
    13f4:	cd 01       	movw	r24, r26
    13f6:	0e 94 09 43 	call	0x8612	; 0x8612 <__addsf3>
    13fa:	dc 01       	movw	r26, r24
    13fc:	cb 01       	movw	r24, r22
    13fe:	6c 01       	movw	r12, r24
    1400:	7d 01       	movw	r14, r26
    1402:	2e a1       	ldd	r18, Y+38	; 0x26
    1404:	3f a1       	ldd	r19, Y+39	; 0x27
    1406:	48 a5       	ldd	r20, Y+40	; 0x28
    1408:	59 a5       	ldd	r21, Y+41	; 0x29
    140a:	6b 85       	ldd	r22, Y+11	; 0x0b
    140c:	7c 85       	ldd	r23, Y+12	; 0x0c
    140e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1410:	9e 85       	ldd	r25, Y+14	; 0x0e
    1412:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    1416:	dc 01       	movw	r26, r24
    1418:	cb 01       	movw	r24, r22
    141a:	9c 01       	movw	r18, r24
    141c:	ad 01       	movw	r20, r26
    141e:	c7 01       	movw	r24, r14
    1420:	b6 01       	movw	r22, r12
    1422:	0e 94 09 43 	call	0x8612	; 0x8612 <__addsf3>
    1426:	dc 01       	movw	r26, r24
    1428:	cb 01       	movw	r24, r22
    142a:	89 83       	std	Y+1, r24	; 0x01
    142c:	9a 83       	std	Y+2, r25	; 0x02
    142e:	ab 83       	std	Y+3, r26	; 0x03
    1430:	bc 83       	std	Y+4, r27	; 0x04
	{
		controlValue = controlMinValue;
	}
	*/
	
	return controlValue;
    1432:	89 81       	ldd	r24, Y+1	; 0x01
    1434:	9a 81       	ldd	r25, Y+2	; 0x02
    1436:	ab 81       	ldd	r26, Y+3	; 0x03
    1438:	bc 81       	ldd	r27, Y+4	; 0x04
}
    143a:	bc 01       	movw	r22, r24
    143c:	cd 01       	movw	r24, r26
    143e:	66 96       	adiw	r28, 0x16	; 22
    1440:	0f b6       	in	r0, 0x3f	; 63
    1442:	f8 94       	cli
    1444:	de bf       	out	0x3e, r29	; 62
    1446:	0f be       	out	0x3f, r0	; 63
    1448:	cd bf       	out	0x3d, r28	; 61
    144a:	df 91       	pop	r29
    144c:	cf 91       	pop	r28
    144e:	1f 91       	pop	r17
    1450:	0f 91       	pop	r16
    1452:	ff 90       	pop	r15
    1454:	ef 90       	pop	r14
    1456:	df 90       	pop	r13
    1458:	cf 90       	pop	r12
    145a:	bf 90       	pop	r11
    145c:	af 90       	pop	r10
    145e:	9f 90       	pop	r9
    1460:	8f 90       	pop	r8
    1462:	08 95       	ret

00001464 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>:


float PIDController::adjustControlForServoLimits( float controlValueToAdjust, float minServoControlValue, float maxServoControlValue )
{
    1464:	cf 92       	push	r12
    1466:	df 92       	push	r13
    1468:	ef 92       	push	r14
    146a:	ff 92       	push	r15
    146c:	0f 93       	push	r16
    146e:	1f 93       	push	r17
    1470:	cf 93       	push	r28
    1472:	df 93       	push	r29
    1474:	cd b7       	in	r28, 0x3d	; 61
    1476:	de b7       	in	r29, 0x3e	; 62
    1478:	2e 97       	sbiw	r28, 0x0e	; 14
    147a:	0f b6       	in	r0, 0x3f	; 63
    147c:	f8 94       	cli
    147e:	de bf       	out	0x3e, r29	; 62
    1480:	0f be       	out	0x3f, r0	; 63
    1482:	cd bf       	out	0x3d, r28	; 61
    1484:	9a 83       	std	Y+2, r25	; 0x02
    1486:	89 83       	std	Y+1, r24	; 0x01
    1488:	4b 83       	std	Y+3, r20	; 0x03
    148a:	5c 83       	std	Y+4, r21	; 0x04
    148c:	6d 83       	std	Y+5, r22	; 0x05
    148e:	7e 83       	std	Y+6, r23	; 0x06
    1490:	0f 83       	std	Y+7, r16	; 0x07
    1492:	18 87       	std	Y+8, r17	; 0x08
    1494:	29 87       	std	Y+9, r18	; 0x09
    1496:	3a 87       	std	Y+10, r19	; 0x0a
    1498:	cb 86       	std	Y+11, r12	; 0x0b
    149a:	dc 86       	std	Y+12, r13	; 0x0c
    149c:	ed 86       	std	Y+13, r14	; 0x0d
    149e:	fe 86       	std	Y+14, r15	; 0x0e

	//TODO: when generalizing ensure to change this value. 
	//Todo revisit including trim.
	//controlValue += yawServoTrim;
	
	if (controlValueToAdjust > maxServoControlValue)
    14a0:	2b 85       	ldd	r18, Y+11	; 0x0b
    14a2:	3c 85       	ldd	r19, Y+12	; 0x0c
    14a4:	4d 85       	ldd	r20, Y+13	; 0x0d
    14a6:	5e 85       	ldd	r21, Y+14	; 0x0e
    14a8:	6b 81       	ldd	r22, Y+3	; 0x03
    14aa:	7c 81       	ldd	r23, Y+4	; 0x04
    14ac:	8d 81       	ldd	r24, Y+5	; 0x05
    14ae:	9e 81       	ldd	r25, Y+6	; 0x06
    14b0:	0e 94 4b 45 	call	0x8a96	; 0x8a96 <__gesf2>
    14b4:	18 16       	cp	r1, r24
    14b6:	4c f4       	brge	.+18     	; 0x14ca <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff+0x66>
	{
		controlValueToAdjust = maxServoControlValue;
    14b8:	8b 85       	ldd	r24, Y+11	; 0x0b
    14ba:	9c 85       	ldd	r25, Y+12	; 0x0c
    14bc:	ad 85       	ldd	r26, Y+13	; 0x0d
    14be:	be 85       	ldd	r27, Y+14	; 0x0e
    14c0:	8b 83       	std	Y+3, r24	; 0x03
    14c2:	9c 83       	std	Y+4, r25	; 0x04
    14c4:	ad 83       	std	Y+5, r26	; 0x05
    14c6:	be 83       	std	Y+6, r27	; 0x06
    14c8:	14 c0       	rjmp	.+40     	; 0x14f2 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff+0x8e>
	}else if (controlValueToAdjust < minServoControlValue)
    14ca:	2f 81       	ldd	r18, Y+7	; 0x07
    14cc:	38 85       	ldd	r19, Y+8	; 0x08
    14ce:	49 85       	ldd	r20, Y+9	; 0x09
    14d0:	5a 85       	ldd	r21, Y+10	; 0x0a
    14d2:	6b 81       	ldd	r22, Y+3	; 0x03
    14d4:	7c 81       	ldd	r23, Y+4	; 0x04
    14d6:	8d 81       	ldd	r24, Y+5	; 0x05
    14d8:	9e 81       	ldd	r25, Y+6	; 0x06
    14da:	0e 94 6d 43 	call	0x86da	; 0x86da <__cmpsf2>
    14de:	88 23       	and	r24, r24
    14e0:	44 f4       	brge	.+16     	; 0x14f2 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff+0x8e>
	{
		controlValueToAdjust = minServoControlValue;
    14e2:	8f 81       	ldd	r24, Y+7	; 0x07
    14e4:	98 85       	ldd	r25, Y+8	; 0x08
    14e6:	a9 85       	ldd	r26, Y+9	; 0x09
    14e8:	ba 85       	ldd	r27, Y+10	; 0x0a
    14ea:	8b 83       	std	Y+3, r24	; 0x03
    14ec:	9c 83       	std	Y+4, r25	; 0x04
    14ee:	ad 83       	std	Y+5, r26	; 0x05
    14f0:	be 83       	std	Y+6, r27	; 0x06
	}
	
	return controlValueToAdjust;
    14f2:	8b 81       	ldd	r24, Y+3	; 0x03
    14f4:	9c 81       	ldd	r25, Y+4	; 0x04
    14f6:	ad 81       	ldd	r26, Y+5	; 0x05
    14f8:	be 81       	ldd	r27, Y+6	; 0x06
}
    14fa:	bc 01       	movw	r22, r24
    14fc:	cd 01       	movw	r24, r26
    14fe:	2e 96       	adiw	r28, 0x0e	; 14
    1500:	0f b6       	in	r0, 0x3f	; 63
    1502:	f8 94       	cli
    1504:	de bf       	out	0x3e, r29	; 62
    1506:	0f be       	out	0x3f, r0	; 63
    1508:	cd bf       	out	0x3d, r28	; 61
    150a:	df 91       	pop	r29
    150c:	cf 91       	pop	r28
    150e:	1f 91       	pop	r17
    1510:	0f 91       	pop	r16
    1512:	ff 90       	pop	r15
    1514:	ef 90       	pop	r14
    1516:	df 90       	pop	r13
    1518:	cf 90       	pop	r12
    151a:	08 95       	ret

0000151c <_Z30calculateInnerLoopControlValuefff>:


float calculateInnerLoopControlValue( float outerLoopSetpoint, float measuredValue, float gain )
{
    151c:	ef 92       	push	r14
    151e:	ff 92       	push	r15
    1520:	0f 93       	push	r16
    1522:	1f 93       	push	r17
    1524:	cf 93       	push	r28
    1526:	df 93       	push	r29
    1528:	cd b7       	in	r28, 0x3d	; 61
    152a:	de b7       	in	r29, 0x3e	; 62
    152c:	2c 97       	sbiw	r28, 0x0c	; 12
    152e:	0f b6       	in	r0, 0x3f	; 63
    1530:	f8 94       	cli
    1532:	de bf       	out	0x3e, r29	; 62
    1534:	0f be       	out	0x3f, r0	; 63
    1536:	cd bf       	out	0x3d, r28	; 61
    1538:	69 83       	std	Y+1, r22	; 0x01
    153a:	7a 83       	std	Y+2, r23	; 0x02
    153c:	8b 83       	std	Y+3, r24	; 0x03
    153e:	9c 83       	std	Y+4, r25	; 0x04
    1540:	2d 83       	std	Y+5, r18	; 0x05
    1542:	3e 83       	std	Y+6, r19	; 0x06
    1544:	4f 83       	std	Y+7, r20	; 0x07
    1546:	58 87       	std	Y+8, r21	; 0x08
    1548:	e9 86       	std	Y+9, r14	; 0x09
    154a:	fa 86       	std	Y+10, r15	; 0x0a
    154c:	0b 87       	std	Y+11, r16	; 0x0b
    154e:	1c 87       	std	Y+12, r17	; 0x0c
	//NOTE: IN MY OTHER IMPLEMENTATION I SUBTRACT THE VELOCITY (YES VELOCITY) OF THE ANGULAR MOTION.
	//return gain * (measuredValue - outerLoopSetpoint);
	
	///************* I JUST CHANGED THIS
	return gain * (outerLoopSetpoint - measuredValue);
    1550:	2d 81       	ldd	r18, Y+5	; 0x05
    1552:	3e 81       	ldd	r19, Y+6	; 0x06
    1554:	4f 81       	ldd	r20, Y+7	; 0x07
    1556:	58 85       	ldd	r21, Y+8	; 0x08
    1558:	69 81       	ldd	r22, Y+1	; 0x01
    155a:	7a 81       	ldd	r23, Y+2	; 0x02
    155c:	8b 81       	ldd	r24, Y+3	; 0x03
    155e:	9c 81       	ldd	r25, Y+4	; 0x04
    1560:	0e 94 08 43 	call	0x8610	; 0x8610 <__subsf3>
    1564:	dc 01       	movw	r26, r24
    1566:	cb 01       	movw	r24, r22
    1568:	29 85       	ldd	r18, Y+9	; 0x09
    156a:	3a 85       	ldd	r19, Y+10	; 0x0a
    156c:	4b 85       	ldd	r20, Y+11	; 0x0b
    156e:	5c 85       	ldd	r21, Y+12	; 0x0c
    1570:	bc 01       	movw	r22, r24
    1572:	cd 01       	movw	r24, r26
    1574:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    1578:	dc 01       	movw	r26, r24
    157a:	cb 01       	movw	r24, r22
}
    157c:	bc 01       	movw	r22, r24
    157e:	cd 01       	movw	r24, r26
    1580:	2c 96       	adiw	r28, 0x0c	; 12
    1582:	0f b6       	in	r0, 0x3f	; 63
    1584:	f8 94       	cli
    1586:	de bf       	out	0x3e, r29	; 62
    1588:	0f be       	out	0x3f, r0	; 63
    158a:	cd bf       	out	0x3d, r28	; 61
    158c:	df 91       	pop	r29
    158e:	cf 91       	pop	r28
    1590:	1f 91       	pop	r17
    1592:	0f 91       	pop	r16
    1594:	ff 90       	pop	r15
    1596:	ef 90       	pop	r14
    1598:	08 95       	ret

0000159a <_ZN10helicopter10controller13PIDController34tailRotorCollectiveOuterLoopUpdateEv>:


void PIDController::tailRotorCollectiveOuterLoopUpdate()
{
    159a:	7f 92       	push	r7
    159c:	8f 92       	push	r8
    159e:	9f 92       	push	r9
    15a0:	af 92       	push	r10
    15a2:	bf 92       	push	r11
    15a4:	cf 92       	push	r12
    15a6:	df 92       	push	r13
    15a8:	ef 92       	push	r14
    15aa:	ff 92       	push	r15
    15ac:	0f 93       	push	r16
    15ae:	1f 93       	push	r17
    15b0:	cf 93       	push	r28
    15b2:	df 93       	push	r29
    15b4:	cd b7       	in	r28, 0x3d	; 61
    15b6:	de b7       	in	r29, 0x3e	; 62
    15b8:	6a 97       	sbiw	r28, 0x1a	; 26
    15ba:	0f b6       	in	r0, 0x3f	; 63
    15bc:	f8 94       	cli
    15be:	de bf       	out	0x3e, r29	; 62
    15c0:	0f be       	out	0x3f, r0	; 63
    15c2:	cd bf       	out	0x3d, r28	; 61
    15c4:	9a 8f       	std	Y+26, r25	; 0x1a
    15c6:	89 8f       	std	Y+25, r24	; 0x19
	float yawProportional = calculateProportional(model->MagYawDegrees(), model->ReferenceMagYawDegrees());
    15c8:	89 8d       	ldd	r24, Y+25	; 0x19
    15ca:	9a 8d       	ldd	r25, Y+26	; 0x1a
    15cc:	fc 01       	movw	r30, r24
    15ce:	80 81       	ld	r24, Z
    15d0:	91 81       	ldd	r25, Z+1	; 0x01
    15d2:	0e 94 4d 01 	call	0x29a	; 0x29a <_ZNK10helicopter5model11SystemModel22ReferenceMagYawDegreesEv>
    15d6:	6b 01       	movw	r12, r22
    15d8:	7c 01       	movw	r14, r24
    15da:	89 8d       	ldd	r24, Y+25	; 0x19
    15dc:	9a 8d       	ldd	r25, Y+26	; 0x1a
    15de:	fc 01       	movw	r30, r24
    15e0:	80 81       	ld	r24, Z
    15e2:	91 81       	ldd	r25, Z+1	; 0x01
    15e4:	0e 94 37 01 	call	0x26e	; 0x26e <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>
    15e8:	dc 01       	movw	r26, r24
    15ea:	cb 01       	movw	r24, r22
    15ec:	e9 8d       	ldd	r30, Y+25	; 0x19
    15ee:	fa 8d       	ldd	r31, Y+26	; 0x1a
    15f0:	97 01       	movw	r18, r14
    15f2:	86 01       	movw	r16, r12
    15f4:	ac 01       	movw	r20, r24
    15f6:	bd 01       	movw	r22, r26
    15f8:	cf 01       	movw	r24, r30
    15fa:	0e 94 3e 08 	call	0x107c	; 0x107c <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    15fe:	dc 01       	movw	r26, r24
    1600:	cb 01       	movw	r24, r22
    1602:	89 83       	std	Y+1, r24	; 0x01
    1604:	9a 83       	std	Y+2, r25	; 0x02
    1606:	ab 83       	std	Y+3, r26	; 0x03
    1608:	bc 83       	std	Y+4, r27	; 0x04
	
	yawProportional = convertYawErrorFrom360to180(yawProportional);
    160a:	89 81       	ldd	r24, Y+1	; 0x01
    160c:	9a 81       	ldd	r25, Y+2	; 0x02
    160e:	ab 81       	ldd	r26, Y+3	; 0x03
    1610:	bc 81       	ldd	r27, Y+4	; 0x04
    1612:	29 8d       	ldd	r18, Y+25	; 0x19
    1614:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1616:	ac 01       	movw	r20, r24
    1618:	bd 01       	movw	r22, r26
    161a:	c9 01       	movw	r24, r18
    161c:	0e 94 78 11 	call	0x22f0	; 0x22f0 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef>
    1620:	dc 01       	movw	r26, r24
    1622:	cb 01       	movw	r24, r22
    1624:	89 83       	std	Y+1, r24	; 0x01
    1626:	9a 83       	std	Y+2, r25	; 0x02
    1628:	ab 83       	std	Y+3, r26	; 0x03
    162a:	bc 83       	std	Y+4, r27	; 0x04
	
	float yawIntegralAntiWindup = calculateIntegralAntiWindup(model->YawControlBeforeServoLimitsAdjustment(), model->YawControl(), yawAntiWindupGain);
    162c:	89 8d       	ldd	r24, Y+25	; 0x19
    162e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1630:	fc 01       	movw	r30, r24
    1632:	c6 84       	ldd	r12, Z+14	; 0x0e
    1634:	d7 84       	ldd	r13, Z+15	; 0x0f
    1636:	e0 88       	ldd	r14, Z+16	; 0x10
    1638:	f1 88       	ldd	r15, Z+17	; 0x11
    163a:	89 8d       	ldd	r24, Y+25	; 0x19
    163c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    163e:	fc 01       	movw	r30, r24
    1640:	80 81       	ld	r24, Z
    1642:	91 81       	ldd	r25, Z+1	; 0x01
    1644:	0e 94 63 01 	call	0x2c6	; 0x2c6 <_ZNK10helicopter5model11SystemModel10YawControlEv>
    1648:	4b 01       	movw	r8, r22
    164a:	5c 01       	movw	r10, r24
    164c:	89 8d       	ldd	r24, Y+25	; 0x19
    164e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1650:	fc 01       	movw	r30, r24
    1652:	80 81       	ld	r24, Z
    1654:	91 81       	ldd	r25, Z+1	; 0x01
    1656:	0e 94 99 01 	call	0x332	; 0x332 <_ZNK10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEv>
    165a:	dc 01       	movw	r26, r24
    165c:	cb 01       	movw	r24, r22
    165e:	e9 8d       	ldd	r30, Y+25	; 0x19
    1660:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1662:	95 01       	movw	r18, r10
    1664:	84 01       	movw	r16, r8
    1666:	ac 01       	movw	r20, r24
    1668:	bd 01       	movw	r22, r26
    166a:	cf 01       	movw	r24, r30
    166c:	0e 94 6d 08 	call	0x10da	; 0x10da <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    1670:	dc 01       	movw	r26, r24
    1672:	cb 01       	movw	r24, r22
    1674:	8d 83       	std	Y+5, r24	; 0x05
    1676:	9e 83       	std	Y+6, r25	; 0x06
    1678:	af 83       	std	Y+7, r26	; 0x07
    167a:	b8 87       	std	Y+8, r27	; 0x08
	float weightedYawIntegral = calculateIntegral(yawProportional, model->YawIntegral(), yawIntegralAntiWindup, yawIntegralGain);
    167c:	89 8d       	ldd	r24, Y+25	; 0x19
    167e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1680:	fc 01       	movw	r30, r24
    1682:	a2 80       	ldd	r10, Z+2	; 0x02
    1684:	b3 80       	ldd	r11, Z+3	; 0x03
    1686:	c4 80       	ldd	r12, Z+4	; 0x04
    1688:	d5 80       	ldd	r13, Z+5	; 0x05
    168a:	89 8d       	ldd	r24, Y+25	; 0x19
    168c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    168e:	fc 01       	movw	r30, r24
    1690:	80 81       	ld	r24, Z
    1692:	91 81       	ldd	r25, Z+1	; 0x01
    1694:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>
    1698:	9b 01       	movw	r18, r22
    169a:	ac 01       	movw	r20, r24
    169c:	ed 80       	ldd	r14, Y+5	; 0x05
    169e:	fe 80       	ldd	r15, Y+6	; 0x06
    16a0:	0f 81       	ldd	r16, Y+7	; 0x07
    16a2:	18 85       	ldd	r17, Y+8	; 0x08
    16a4:	89 81       	ldd	r24, Y+1	; 0x01
    16a6:	9a 81       	ldd	r25, Y+2	; 0x02
    16a8:	ab 81       	ldd	r26, Y+3	; 0x03
    16aa:	bc 81       	ldd	r27, Y+4	; 0x04
    16ac:	e9 8d       	ldd	r30, Y+25	; 0x19
    16ae:	fa 8d       	ldd	r31, Y+26	; 0x1a
    16b0:	45 01       	movw	r8, r10
    16b2:	56 01       	movw	r10, r12
    16b4:	67 01       	movw	r12, r14
    16b6:	78 01       	movw	r14, r16
    16b8:	89 01       	movw	r16, r18
    16ba:	9a 01       	movw	r18, r20
    16bc:	ac 01       	movw	r20, r24
    16be:	bd 01       	movw	r22, r26
    16c0:	cf 01       	movw	r24, r30
    16c2:	0e 94 be 08 	call	0x117c	; 0x117c <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    16c6:	dc 01       	movw	r26, r24
    16c8:	cb 01       	movw	r24, r22
    16ca:	89 87       	std	Y+9, r24	; 0x09
    16cc:	9a 87       	std	Y+10, r25	; 0x0a
    16ce:	ab 87       	std	Y+11, r26	; 0x0b
    16d0:	bc 87       	std	Y+12, r27	; 0x0c
	float yawDerivativeError = calculateVelocityError(model->YawVelocityDegreesPerSecond(), model->ReferenceYawVelocityDegreesPerSecond());
    16d2:	89 8d       	ldd	r24, Y+25	; 0x19
    16d4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    16d6:	fc 01       	movw	r30, r24
    16d8:	80 81       	ld	r24, Z
    16da:	91 81       	ldd	r25, Z+1	; 0x01
    16dc:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_ZNK10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEv>
    16e0:	6b 01       	movw	r12, r22
    16e2:	7c 01       	movw	r14, r24
    16e4:	89 8d       	ldd	r24, Y+25	; 0x19
    16e6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    16e8:	fc 01       	movw	r30, r24
    16ea:	80 81       	ld	r24, Z
    16ec:	91 81       	ldd	r25, Z+1	; 0x01
    16ee:	0e 94 cf 01 	call	0x39e	; 0x39e <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>
    16f2:	dc 01       	movw	r26, r24
    16f4:	cb 01       	movw	r24, r22
    16f6:	e9 8d       	ldd	r30, Y+25	; 0x19
    16f8:	fa 8d       	ldd	r31, Y+26	; 0x1a
    16fa:	97 01       	movw	r18, r14
    16fc:	86 01       	movw	r16, r12
    16fe:	ac 01       	movw	r20, r24
    1700:	bd 01       	movw	r22, r26
    1702:	cf 01       	movw	r24, r30
    1704:	0e 94 90 09 	call	0x1320	; 0x1320 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    1708:	dc 01       	movw	r26, r24
    170a:	cb 01       	movw	r24, r22
    170c:	8d 87       	std	Y+13, r24	; 0x0d
    170e:	9e 87       	std	Y+14, r25	; 0x0e
    1710:	af 87       	std	Y+15, r26	; 0x0f
    1712:	b8 8b       	std	Y+16, r27	; 0x10
	float yawControlBeforeServoLimitsAdjustment = calculateOuterLoopControlValue(yawProportional, yawDerivativeError, weightedYawIntegral, yawProportionalGain, yawDerivativeGain);
    1714:	89 8d       	ldd	r24, Y+25	; 0x19
    1716:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1718:	fc 01       	movw	r30, r24
    171a:	86 81       	ldd	r24, Z+6	; 0x06
    171c:	97 81       	ldd	r25, Z+7	; 0x07
    171e:	a0 85       	ldd	r26, Z+8	; 0x08
    1720:	b1 85       	ldd	r27, Z+9	; 0x09
    1722:	29 8d       	ldd	r18, Y+25	; 0x19
    1724:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1726:	f9 01       	movw	r30, r18
    1728:	82 84       	ldd	r8, Z+10	; 0x0a
    172a:	93 84       	ldd	r9, Z+11	; 0x0b
    172c:	a4 84       	ldd	r10, Z+12	; 0x0c
    172e:	b5 84       	ldd	r11, Z+13	; 0x0d
    1730:	c9 84       	ldd	r12, Y+9	; 0x09
    1732:	da 84       	ldd	r13, Y+10	; 0x0a
    1734:	eb 84       	ldd	r14, Y+11	; 0x0b
    1736:	fc 84       	ldd	r15, Y+12	; 0x0c
    1738:	0d 85       	ldd	r16, Y+13	; 0x0d
    173a:	1e 85       	ldd	r17, Y+14	; 0x0e
    173c:	2f 85       	ldd	r18, Y+15	; 0x0f
    173e:	38 89       	ldd	r19, Y+16	; 0x10
    1740:	49 81       	ldd	r20, Y+1	; 0x01
    1742:	5a 81       	ldd	r21, Y+2	; 0x02
    1744:	6b 81       	ldd	r22, Y+3	; 0x03
    1746:	7c 81       	ldd	r23, Y+4	; 0x04
    1748:	e9 8d       	ldd	r30, Y+25	; 0x19
    174a:	fa 8d       	ldd	r31, Y+26	; 0x1a
    174c:	7b 2e       	mov	r7, r27
    174e:	7f 92       	push	r7
    1750:	7a 2e       	mov	r7, r26
    1752:	7f 92       	push	r7
    1754:	79 2e       	mov	r7, r25
    1756:	7f 92       	push	r7
    1758:	8f 93       	push	r24
    175a:	cf 01       	movw	r24, r30
    175c:	0e 94 bf 09 	call	0x137e	; 0x137e <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>
    1760:	0f 90       	pop	r0
    1762:	0f 90       	pop	r0
    1764:	0f 90       	pop	r0
    1766:	0f 90       	pop	r0
    1768:	dc 01       	movw	r26, r24
    176a:	cb 01       	movw	r24, r22
    176c:	89 8b       	std	Y+17, r24	; 0x11
    176e:	9a 8b       	std	Y+18, r25	; 0x12
    1770:	ab 8b       	std	Y+19, r26	; 0x13
    1772:	bc 8b       	std	Y+20, r27	; 0x14
	float yawControl = adjustControlForServoLimits(yawControlBeforeServoLimitsAdjustment, minYawServoControlValue, maxYawServoControlValue);
    1774:	89 8d       	ldd	r24, Y+25	; 0x19
    1776:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1778:	82 5b       	subi	r24, 0xB2	; 178
    177a:	9f 4f       	sbci	r25, 0xFF	; 255
    177c:	fc 01       	movw	r30, r24
    177e:	e0 80       	ld	r14, Z
    1780:	f1 80       	ldd	r15, Z+1	; 0x01
    1782:	02 81       	ldd	r16, Z+2	; 0x02
    1784:	13 81       	ldd	r17, Z+3	; 0x03
    1786:	89 8d       	ldd	r24, Y+25	; 0x19
    1788:	9a 8d       	ldd	r25, Y+26	; 0x1a
    178a:	86 5b       	subi	r24, 0xB6	; 182
    178c:	9f 4f       	sbci	r25, 0xFF	; 255
    178e:	fc 01       	movw	r30, r24
    1790:	20 81       	ld	r18, Z
    1792:	31 81       	ldd	r19, Z+1	; 0x01
    1794:	42 81       	ldd	r20, Z+2	; 0x02
    1796:	53 81       	ldd	r21, Z+3	; 0x03
    1798:	89 89       	ldd	r24, Y+17	; 0x11
    179a:	9a 89       	ldd	r25, Y+18	; 0x12
    179c:	ab 89       	ldd	r26, Y+19	; 0x13
    179e:	bc 89       	ldd	r27, Y+20	; 0x14
    17a0:	e9 8d       	ldd	r30, Y+25	; 0x19
    17a2:	fa 8d       	ldd	r31, Y+26	; 0x1a
    17a4:	67 01       	movw	r12, r14
    17a6:	78 01       	movw	r14, r16
    17a8:	89 01       	movw	r16, r18
    17aa:	9a 01       	movw	r18, r20
    17ac:	ac 01       	movw	r20, r24
    17ae:	bd 01       	movw	r22, r26
    17b0:	cf 01       	movw	r24, r30
    17b2:	0e 94 32 0a 	call	0x1464	; 0x1464 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    17b6:	dc 01       	movw	r26, r24
    17b8:	cb 01       	movw	r24, r22
    17ba:	8d 8b       	std	Y+21, r24	; 0x15
    17bc:	9e 8b       	std	Y+22, r25	; 0x16
    17be:	af 8b       	std	Y+23, r26	; 0x17
    17c0:	b8 8f       	std	Y+24, r27	; 0x18
	
	model->YawControl(yawControl);
    17c2:	89 8d       	ldd	r24, Y+25	; 0x19
    17c4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    17c6:	fc 01       	movw	r30, r24
    17c8:	20 81       	ld	r18, Z
    17ca:	31 81       	ldd	r19, Z+1	; 0x01
    17cc:	8d 89       	ldd	r24, Y+21	; 0x15
    17ce:	9e 89       	ldd	r25, Y+22	; 0x16
    17d0:	af 89       	ldd	r26, Y+23	; 0x17
    17d2:	b8 8d       	ldd	r27, Y+24	; 0x18
    17d4:	ac 01       	movw	r20, r24
    17d6:	bd 01       	movw	r22, r26
    17d8:	c9 01       	movw	r24, r18
    17da:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_ZN10helicopter5model11SystemModel10YawControlEf>
	model->YawControlBeforeServoLimitsAdjustment(yawControlBeforeServoLimitsAdjustment);
    17de:	89 8d       	ldd	r24, Y+25	; 0x19
    17e0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    17e2:	fc 01       	movw	r30, r24
    17e4:	20 81       	ld	r18, Z
    17e6:	31 81       	ldd	r19, Z+1	; 0x01
    17e8:	89 89       	ldd	r24, Y+17	; 0x11
    17ea:	9a 89       	ldd	r25, Y+18	; 0x12
    17ec:	ab 89       	ldd	r26, Y+19	; 0x13
    17ee:	bc 89       	ldd	r27, Y+20	; 0x14
    17f0:	ac 01       	movw	r20, r24
    17f2:	bd 01       	movw	r22, r26
    17f4:	c9 01       	movw	r24, r18
    17f6:	0e 94 af 01 	call	0x35e	; 0x35e <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf>
	model->YawIntegral(weightedYawIntegral);
    17fa:	89 8d       	ldd	r24, Y+25	; 0x19
    17fc:	9a 8d       	ldd	r25, Y+26	; 0x1a
    17fe:	fc 01       	movw	r30, r24
    1800:	20 81       	ld	r18, Z
    1802:	31 81       	ldd	r19, Z+1	; 0x01
    1804:	89 85       	ldd	r24, Y+9	; 0x09
    1806:	9a 85       	ldd	r25, Y+10	; 0x0a
    1808:	ab 85       	ldd	r26, Y+11	; 0x0b
    180a:	bc 85       	ldd	r27, Y+12	; 0x0c
    180c:	ac 01       	movw	r20, r24
    180e:	bd 01       	movw	r22, r26
    1810:	c9 01       	movw	r24, r18
    1812:	0e 94 11 02 	call	0x422	; 0x422 <_ZN10helicopter5model11SystemModel11YawIntegralEf>
	model->YawProportional(yawProportional);
    1816:	89 8d       	ldd	r24, Y+25	; 0x19
    1818:	9a 8d       	ldd	r25, Y+26	; 0x1a
    181a:	fc 01       	movw	r30, r24
    181c:	20 81       	ld	r18, Z
    181e:	31 81       	ldd	r19, Z+1	; 0x01
    1820:	89 81       	ldd	r24, Y+1	; 0x01
    1822:	9a 81       	ldd	r25, Y+2	; 0x02
    1824:	ab 81       	ldd	r26, Y+3	; 0x03
    1826:	bc 81       	ldd	r27, Y+4	; 0x04
    1828:	ac 01       	movw	r20, r24
    182a:	bd 01       	movw	r22, r26
    182c:	c9 01       	movw	r24, r18
    182e:	0e 94 31 02 	call	0x462	; 0x462 <_ZN10helicopter5model11SystemModel15YawProportionalEf>
	model->YawDerivativeError(yawDerivativeError);
    1832:	89 8d       	ldd	r24, Y+25	; 0x19
    1834:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1836:	fc 01       	movw	r30, r24
    1838:	20 81       	ld	r18, Z
    183a:	31 81       	ldd	r19, Z+1	; 0x01
    183c:	8d 85       	ldd	r24, Y+13	; 0x0d
    183e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1840:	af 85       	ldd	r26, Y+15	; 0x0f
    1842:	b8 89       	ldd	r27, Y+16	; 0x10
    1844:	ac 01       	movw	r20, r24
    1846:	bd 01       	movw	r22, r26
    1848:	c9 01       	movw	r24, r18
    184a:	0e 94 51 02 	call	0x4a2	; 0x4a2 <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf>
}
    184e:	6a 96       	adiw	r28, 0x1a	; 26
    1850:	0f b6       	in	r0, 0x3f	; 63
    1852:	f8 94       	cli
    1854:	de bf       	out	0x3e, r29	; 62
    1856:	0f be       	out	0x3f, r0	; 63
    1858:	cd bf       	out	0x3d, r28	; 61
    185a:	df 91       	pop	r29
    185c:	cf 91       	pop	r28
    185e:	1f 91       	pop	r17
    1860:	0f 91       	pop	r16
    1862:	ff 90       	pop	r15
    1864:	ef 90       	pop	r14
    1866:	df 90       	pop	r13
    1868:	cf 90       	pop	r12
    186a:	bf 90       	pop	r11
    186c:	af 90       	pop	r10
    186e:	9f 90       	pop	r9
    1870:	8f 90       	pop	r8
    1872:	7f 90       	pop	r7
    1874:	08 95       	ret

00001876 <_ZN10helicopter10controller13PIDController34mainRotorCollectiveOuterLoopUpdateEv>:

void PIDController::mainRotorCollectiveOuterLoopUpdate()
{
    1876:	7f 92       	push	r7
    1878:	8f 92       	push	r8
    187a:	9f 92       	push	r9
    187c:	af 92       	push	r10
    187e:	bf 92       	push	r11
    1880:	cf 92       	push	r12
    1882:	df 92       	push	r13
    1884:	ef 92       	push	r14
    1886:	ff 92       	push	r15
    1888:	0f 93       	push	r16
    188a:	1f 93       	push	r17
    188c:	cf 93       	push	r28
    188e:	df 93       	push	r29
    1890:	cd b7       	in	r28, 0x3d	; 61
    1892:	de b7       	in	r29, 0x3e	; 62
    1894:	6a 97       	sbiw	r28, 0x1a	; 26
    1896:	0f b6       	in	r0, 0x3f	; 63
    1898:	f8 94       	cli
    189a:	de bf       	out	0x3e, r29	; 62
    189c:	0f be       	out	0x3f, r0	; 63
    189e:	cd bf       	out	0x3d, r28	; 61
    18a0:	9a 8f       	std	Y+26, r25	; 0x1a
    18a2:	89 8f       	std	Y+25, r24	; 0x19
	//float zProportional = calculateProportional(model->AltitudeFeetAgl(), model->ReferenceAltitudeFeet());
	float zProportional = calculateProportional(model->ZNEDBodyFrame(), model->ReferenceZNEDBodyFrameFeet());
    18a4:	89 8d       	ldd	r24, Y+25	; 0x19
    18a6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    18a8:	fc 01       	movw	r30, r24
    18aa:	80 81       	ld	r24, Z
    18ac:	91 81       	ldd	r25, Z+1	; 0x01
    18ae:	0e 94 c6 05 	call	0xb8c	; 0xb8c <_ZNK10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEv>
    18b2:	6b 01       	movw	r12, r22
    18b4:	7c 01       	movw	r14, r24
    18b6:	89 8d       	ldd	r24, Y+25	; 0x19
    18b8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    18ba:	fc 01       	movw	r30, r24
    18bc:	80 81       	ld	r24, Z
    18be:	91 81       	ldd	r25, Z+1	; 0x01
    18c0:	0e 94 ae 05 	call	0xb5c	; 0xb5c <_ZNK10helicopter5model11SystemModel13ZNEDBodyFrameEv>
    18c4:	dc 01       	movw	r26, r24
    18c6:	cb 01       	movw	r24, r22
    18c8:	e9 8d       	ldd	r30, Y+25	; 0x19
    18ca:	fa 8d       	ldd	r31, Y+26	; 0x1a
    18cc:	97 01       	movw	r18, r14
    18ce:	86 01       	movw	r16, r12
    18d0:	ac 01       	movw	r20, r24
    18d2:	bd 01       	movw	r22, r26
    18d4:	cf 01       	movw	r24, r30
    18d6:	0e 94 3e 08 	call	0x107c	; 0x107c <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    18da:	dc 01       	movw	r26, r24
    18dc:	cb 01       	movw	r24, r22
    18de:	89 83       	std	Y+1, r24	; 0x01
    18e0:	9a 83       	std	Y+2, r25	; 0x02
    18e2:	ab 83       	std	Y+3, r26	; 0x03
    18e4:	bc 83       	std	Y+4, r27	; 0x04
	
	float zIntegralAntiWindup = calculateIntegralAntiWindup(model->MainRotorControlBeforeServoLimitsAdjustment(), model->MainRotorCollectiveControl(), zAntiWindupGain);
    18e6:	89 8d       	ldd	r24, Y+25	; 0x19
    18e8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    18ea:	8a 5b       	subi	r24, 0xBA	; 186
    18ec:	9f 4f       	sbci	r25, 0xFF	; 255
    18ee:	fc 01       	movw	r30, r24
    18f0:	c0 80       	ld	r12, Z
    18f2:	d1 80       	ldd	r13, Z+1	; 0x01
    18f4:	e2 80       	ldd	r14, Z+2	; 0x02
    18f6:	f3 80       	ldd	r15, Z+3	; 0x03
    18f8:	89 8d       	ldd	r24, Y+25	; 0x19
    18fa:	9a 8d       	ldd	r25, Y+26	; 0x1a
    18fc:	fc 01       	movw	r30, r24
    18fe:	80 81       	ld	r24, Z
    1900:	91 81       	ldd	r25, Z+1	; 0x01
    1902:	0e 94 de 05 	call	0xbbc	; 0xbbc <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>
    1906:	4b 01       	movw	r8, r22
    1908:	5c 01       	movw	r10, r24
    190a:	89 8d       	ldd	r24, Y+25	; 0x19
    190c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    190e:	fc 01       	movw	r30, r24
    1910:	80 81       	ld	r24, Z
    1912:	91 81       	ldd	r25, Z+1	; 0x01
    1914:	0e 94 19 06 	call	0xc32	; 0xc32 <_ZNK10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEv>
    1918:	dc 01       	movw	r26, r24
    191a:	cb 01       	movw	r24, r22
    191c:	e9 8d       	ldd	r30, Y+25	; 0x19
    191e:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1920:	95 01       	movw	r18, r10
    1922:	84 01       	movw	r16, r8
    1924:	ac 01       	movw	r20, r24
    1926:	bd 01       	movw	r22, r26
    1928:	cf 01       	movw	r24, r30
    192a:	0e 94 6d 08 	call	0x10da	; 0x10da <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    192e:	dc 01       	movw	r26, r24
    1930:	cb 01       	movw	r24, r22
    1932:	8d 83       	std	Y+5, r24	; 0x05
    1934:	9e 83       	std	Y+6, r25	; 0x06
    1936:	af 83       	std	Y+7, r26	; 0x07
    1938:	b8 87       	std	Y+8, r27	; 0x08
	float weightedZIntegral = calculateIntegral(zProportional, model->ZIntegral(), zIntegralAntiWindup, zIntegralGain);
    193a:	89 8d       	ldd	r24, Y+25	; 0x19
    193c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    193e:	fc 01       	movw	r30, r24
    1940:	a2 ac       	ldd	r10, Z+58	; 0x3a
    1942:	b3 ac       	ldd	r11, Z+59	; 0x3b
    1944:	c4 ac       	ldd	r12, Z+60	; 0x3c
    1946:	d5 ac       	ldd	r13, Z+61	; 0x3d
    1948:	89 8d       	ldd	r24, Y+25	; 0x19
    194a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    194c:	fc 01       	movw	r30, r24
    194e:	80 81       	ld	r24, Z
    1950:	91 81       	ldd	r25, Z+1	; 0x01
    1952:	0e 94 84 06 	call	0xd08	; 0xd08 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>
    1956:	9b 01       	movw	r18, r22
    1958:	ac 01       	movw	r20, r24
    195a:	ed 80       	ldd	r14, Y+5	; 0x05
    195c:	fe 80       	ldd	r15, Y+6	; 0x06
    195e:	0f 81       	ldd	r16, Y+7	; 0x07
    1960:	18 85       	ldd	r17, Y+8	; 0x08
    1962:	89 81       	ldd	r24, Y+1	; 0x01
    1964:	9a 81       	ldd	r25, Y+2	; 0x02
    1966:	ab 81       	ldd	r26, Y+3	; 0x03
    1968:	bc 81       	ldd	r27, Y+4	; 0x04
    196a:	e9 8d       	ldd	r30, Y+25	; 0x19
    196c:	fa 8d       	ldd	r31, Y+26	; 0x1a
    196e:	45 01       	movw	r8, r10
    1970:	56 01       	movw	r10, r12
    1972:	67 01       	movw	r12, r14
    1974:	78 01       	movw	r14, r16
    1976:	89 01       	movw	r16, r18
    1978:	9a 01       	movw	r18, r20
    197a:	ac 01       	movw	r20, r24
    197c:	bd 01       	movw	r22, r26
    197e:	cf 01       	movw	r24, r30
    1980:	0e 94 be 08 	call	0x117c	; 0x117c <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    1984:	dc 01       	movw	r26, r24
    1986:	cb 01       	movw	r24, r22
    1988:	89 87       	std	Y+9, r24	; 0x09
    198a:	9a 87       	std	Y+10, r25	; 0x0a
    198c:	ab 87       	std	Y+11, r26	; 0x0b
    198e:	bc 87       	std	Y+12, r27	; 0x0c
	float zDerivativeError = calculateVelocityError(model->ZVelocityFeetPerSecond(), model->ReferenceZVelocityFeetPerSecond());
    1990:	89 8d       	ldd	r24, Y+25	; 0x19
    1992:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1994:	fc 01       	movw	r30, r24
    1996:	80 81       	ld	r24, Z
    1998:	91 81       	ldd	r25, Z+1	; 0x01
    199a:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <_ZNK10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEv>
    199e:	6b 01       	movw	r12, r22
    19a0:	7c 01       	movw	r14, r24
    19a2:	89 8d       	ldd	r24, Y+25	; 0x19
    19a4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    19a6:	fc 01       	movw	r30, r24
    19a8:	80 81       	ld	r24, Z
    19aa:	91 81       	ldd	r25, Z+1	; 0x01
    19ac:	0e 94 54 06 	call	0xca8	; 0xca8 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>
    19b0:	dc 01       	movw	r26, r24
    19b2:	cb 01       	movw	r24, r22
    19b4:	e9 8d       	ldd	r30, Y+25	; 0x19
    19b6:	fa 8d       	ldd	r31, Y+26	; 0x1a
    19b8:	97 01       	movw	r18, r14
    19ba:	86 01       	movw	r16, r12
    19bc:	ac 01       	movw	r20, r24
    19be:	bd 01       	movw	r22, r26
    19c0:	cf 01       	movw	r24, r30
    19c2:	0e 94 90 09 	call	0x1320	; 0x1320 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    19c6:	dc 01       	movw	r26, r24
    19c8:	cb 01       	movw	r24, r22
    19ca:	8d 87       	std	Y+13, r24	; 0x0d
    19cc:	9e 87       	std	Y+14, r25	; 0x0e
    19ce:	af 87       	std	Y+15, r26	; 0x0f
    19d0:	b8 8b       	std	Y+16, r27	; 0x10
	float mainRotorControlBeforeServoLimitsAdjustment = calculateOuterLoopControlValue(zProportional, zDerivativeError, weightedZIntegral, zProportionalGain, zDerivativeGain);
    19d2:	89 8d       	ldd	r24, Y+25	; 0x19
    19d4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    19d6:	ce 96       	adiw	r24, 0x3e	; 62
    19d8:	fc 01       	movw	r30, r24
    19da:	80 81       	ld	r24, Z
    19dc:	91 81       	ldd	r25, Z+1	; 0x01
    19de:	a2 81       	ldd	r26, Z+2	; 0x02
    19e0:	b3 81       	ldd	r27, Z+3	; 0x03
    19e2:	29 8d       	ldd	r18, Y+25	; 0x19
    19e4:	3a 8d       	ldd	r19, Y+26	; 0x1a
    19e6:	2e 5b       	subi	r18, 0xBE	; 190
    19e8:	3f 4f       	sbci	r19, 0xFF	; 255
    19ea:	f9 01       	movw	r30, r18
    19ec:	80 80       	ld	r8, Z
    19ee:	91 80       	ldd	r9, Z+1	; 0x01
    19f0:	a2 80       	ldd	r10, Z+2	; 0x02
    19f2:	b3 80       	ldd	r11, Z+3	; 0x03
    19f4:	c9 84       	ldd	r12, Y+9	; 0x09
    19f6:	da 84       	ldd	r13, Y+10	; 0x0a
    19f8:	eb 84       	ldd	r14, Y+11	; 0x0b
    19fa:	fc 84       	ldd	r15, Y+12	; 0x0c
    19fc:	0d 85       	ldd	r16, Y+13	; 0x0d
    19fe:	1e 85       	ldd	r17, Y+14	; 0x0e
    1a00:	2f 85       	ldd	r18, Y+15	; 0x0f
    1a02:	38 89       	ldd	r19, Y+16	; 0x10
    1a04:	49 81       	ldd	r20, Y+1	; 0x01
    1a06:	5a 81       	ldd	r21, Y+2	; 0x02
    1a08:	6b 81       	ldd	r22, Y+3	; 0x03
    1a0a:	7c 81       	ldd	r23, Y+4	; 0x04
    1a0c:	e9 8d       	ldd	r30, Y+25	; 0x19
    1a0e:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1a10:	7b 2e       	mov	r7, r27
    1a12:	7f 92       	push	r7
    1a14:	7a 2e       	mov	r7, r26
    1a16:	7f 92       	push	r7
    1a18:	79 2e       	mov	r7, r25
    1a1a:	7f 92       	push	r7
    1a1c:	8f 93       	push	r24
    1a1e:	cf 01       	movw	r24, r30
    1a20:	0e 94 bf 09 	call	0x137e	; 0x137e <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>
    1a24:	0f 90       	pop	r0
    1a26:	0f 90       	pop	r0
    1a28:	0f 90       	pop	r0
    1a2a:	0f 90       	pop	r0
    1a2c:	dc 01       	movw	r26, r24
    1a2e:	cb 01       	movw	r24, r22
    1a30:	89 8b       	std	Y+17, r24	; 0x11
    1a32:	9a 8b       	std	Y+18, r25	; 0x12
    1a34:	ab 8b       	std	Y+19, r26	; 0x13
    1a36:	bc 8b       	std	Y+20, r27	; 0x14
	float mainRotorControl = adjustControlForServoLimits(mainRotorControlBeforeServoLimitsAdjustment, minMainRotorServoControlValue, maxMainRotorServoControlValue);
    1a38:	89 8d       	ldd	r24, Y+25	; 0x19
    1a3a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a3c:	8a 59       	subi	r24, 0x9A	; 154
    1a3e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a40:	fc 01       	movw	r30, r24
    1a42:	e0 80       	ld	r14, Z
    1a44:	f1 80       	ldd	r15, Z+1	; 0x01
    1a46:	02 81       	ldd	r16, Z+2	; 0x02
    1a48:	13 81       	ldd	r17, Z+3	; 0x03
    1a4a:	89 8d       	ldd	r24, Y+25	; 0x19
    1a4c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a4e:	8e 59       	subi	r24, 0x9E	; 158
    1a50:	9f 4f       	sbci	r25, 0xFF	; 255
    1a52:	fc 01       	movw	r30, r24
    1a54:	20 81       	ld	r18, Z
    1a56:	31 81       	ldd	r19, Z+1	; 0x01
    1a58:	42 81       	ldd	r20, Z+2	; 0x02
    1a5a:	53 81       	ldd	r21, Z+3	; 0x03
    1a5c:	89 89       	ldd	r24, Y+17	; 0x11
    1a5e:	9a 89       	ldd	r25, Y+18	; 0x12
    1a60:	ab 89       	ldd	r26, Y+19	; 0x13
    1a62:	bc 89       	ldd	r27, Y+20	; 0x14
    1a64:	e9 8d       	ldd	r30, Y+25	; 0x19
    1a66:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1a68:	67 01       	movw	r12, r14
    1a6a:	78 01       	movw	r14, r16
    1a6c:	89 01       	movw	r16, r18
    1a6e:	9a 01       	movw	r18, r20
    1a70:	ac 01       	movw	r20, r24
    1a72:	bd 01       	movw	r22, r26
    1a74:	cf 01       	movw	r24, r30
    1a76:	0e 94 32 0a 	call	0x1464	; 0x1464 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    1a7a:	dc 01       	movw	r26, r24
    1a7c:	cb 01       	movw	r24, r22
    1a7e:	8d 8b       	std	Y+21, r24	; 0x15
    1a80:	9e 8b       	std	Y+22, r25	; 0x16
    1a82:	af 8b       	std	Y+23, r26	; 0x17
    1a84:	b8 8f       	std	Y+24, r27	; 0x18
	
	model->MainRotorCollectiveControl(mainRotorControl);
    1a86:	89 8d       	ldd	r24, Y+25	; 0x19
    1a88:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a8a:	fc 01       	movw	r30, r24
    1a8c:	20 81       	ld	r18, Z
    1a8e:	31 81       	ldd	r19, Z+1	; 0x01
    1a90:	8d 89       	ldd	r24, Y+21	; 0x15
    1a92:	9e 89       	ldd	r25, Y+22	; 0x16
    1a94:	af 89       	ldd	r26, Y+23	; 0x17
    1a96:	b8 8d       	ldd	r27, Y+24	; 0x18
    1a98:	ac 01       	movw	r20, r24
    1a9a:	bd 01       	movw	r22, r26
    1a9c:	c9 01       	movw	r24, r18
    1a9e:	0e 94 f6 05 	call	0xbec	; 0xbec <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf>
	model->MainRotorControlBeforeServoLimitsAdjustment(mainRotorControlBeforeServoLimitsAdjustment);
    1aa2:	89 8d       	ldd	r24, Y+25	; 0x19
    1aa4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1aa6:	fc 01       	movw	r30, r24
    1aa8:	20 81       	ld	r18, Z
    1aaa:	31 81       	ldd	r19, Z+1	; 0x01
    1aac:	89 89       	ldd	r24, Y+17	; 0x11
    1aae:	9a 89       	ldd	r25, Y+18	; 0x12
    1ab0:	ab 89       	ldd	r26, Y+19	; 0x13
    1ab2:	bc 89       	ldd	r27, Y+20	; 0x14
    1ab4:	ac 01       	movw	r20, r24
    1ab6:	bd 01       	movw	r22, r26
    1ab8:	c9 01       	movw	r24, r18
    1aba:	0e 94 31 06 	call	0xc62	; 0xc62 <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf>
	model->ZIntegral(weightedZIntegral);
    1abe:	89 8d       	ldd	r24, Y+25	; 0x19
    1ac0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1ac2:	fc 01       	movw	r30, r24
    1ac4:	20 81       	ld	r18, Z
    1ac6:	31 81       	ldd	r19, Z+1	; 0x01
    1ac8:	89 85       	ldd	r24, Y+9	; 0x09
    1aca:	9a 85       	ldd	r25, Y+10	; 0x0a
    1acc:	ab 85       	ldd	r26, Y+11	; 0x0b
    1ace:	bc 85       	ldd	r27, Y+12	; 0x0c
    1ad0:	ac 01       	movw	r20, r24
    1ad2:	bd 01       	movw	r22, r26
    1ad4:	c9 01       	movw	r24, r18
    1ad6:	0e 94 9c 06 	call	0xd38	; 0xd38 <_ZN10helicopter5model11SystemModel9ZIntegralEf>
	model->ZProportional(zProportional);
    1ada:	89 8d       	ldd	r24, Y+25	; 0x19
    1adc:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1ade:	fc 01       	movw	r30, r24
    1ae0:	20 81       	ld	r18, Z
    1ae2:	31 81       	ldd	r19, Z+1	; 0x01
    1ae4:	89 81       	ldd	r24, Y+1	; 0x01
    1ae6:	9a 81       	ldd	r25, Y+2	; 0x02
    1ae8:	ab 81       	ldd	r26, Y+3	; 0x03
    1aea:	bc 81       	ldd	r27, Y+4	; 0x04
    1aec:	ac 01       	movw	r20, r24
    1aee:	bd 01       	movw	r22, r26
    1af0:	c9 01       	movw	r24, r18
    1af2:	0e 94 bf 06 	call	0xd7e	; 0xd7e <_ZN10helicopter5model11SystemModel13ZProportionalEf>
	model->ZDerivativeError(zDerivativeError);
    1af6:	89 8d       	ldd	r24, Y+25	; 0x19
    1af8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1afa:	fc 01       	movw	r30, r24
    1afc:	20 81       	ld	r18, Z
    1afe:	31 81       	ldd	r19, Z+1	; 0x01
    1b00:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b02:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b04:	af 85       	ldd	r26, Y+15	; 0x0f
    1b06:	b8 89       	ldd	r27, Y+16	; 0x10
    1b08:	ac 01       	movw	r20, r24
    1b0a:	bd 01       	movw	r22, r26
    1b0c:	c9 01       	movw	r24, r18
    1b0e:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf>
}
    1b12:	6a 96       	adiw	r28, 0x1a	; 26
    1b14:	0f b6       	in	r0, 0x3f	; 63
    1b16:	f8 94       	cli
    1b18:	de bf       	out	0x3e, r29	; 62
    1b1a:	0f be       	out	0x3f, r0	; 63
    1b1c:	cd bf       	out	0x3d, r28	; 61
    1b1e:	df 91       	pop	r29
    1b20:	cf 91       	pop	r28
    1b22:	1f 91       	pop	r17
    1b24:	0f 91       	pop	r16
    1b26:	ff 90       	pop	r15
    1b28:	ef 90       	pop	r14
    1b2a:	df 90       	pop	r13
    1b2c:	cf 90       	pop	r12
    1b2e:	bf 90       	pop	r11
    1b30:	af 90       	pop	r10
    1b32:	9f 90       	pop	r9
    1b34:	8f 90       	pop	r8
    1b36:	7f 90       	pop	r7
    1b38:	08 95       	ret

00001b3a <_ZN10helicopter10controller13PIDController30cyclicLongitudeOuterLoopUpdateEv>:

void PIDController::cyclicLongitudeOuterLoopUpdate()
{
    1b3a:	7f 92       	push	r7
    1b3c:	8f 92       	push	r8
    1b3e:	9f 92       	push	r9
    1b40:	af 92       	push	r10
    1b42:	bf 92       	push	r11
    1b44:	cf 92       	push	r12
    1b46:	df 92       	push	r13
    1b48:	ef 92       	push	r14
    1b4a:	ff 92       	push	r15
    1b4c:	0f 93       	push	r16
    1b4e:	1f 93       	push	r17
    1b50:	cf 93       	push	r28
    1b52:	df 93       	push	r29
    1b54:	cd b7       	in	r28, 0x3d	; 61
    1b56:	de b7       	in	r29, 0x3e	; 62
    1b58:	66 97       	sbiw	r28, 0x16	; 22
    1b5a:	0f b6       	in	r0, 0x3f	; 63
    1b5c:	f8 94       	cli
    1b5e:	de bf       	out	0x3e, r29	; 62
    1b60:	0f be       	out	0x3f, r0	; 63
    1b62:	cd bf       	out	0x3d, r28	; 61
    1b64:	9e 8b       	std	Y+22, r25	; 0x16
    1b66:	8d 8b       	std	Y+21, r24	; 0x15
	float xProportional = calculateProportional(model->XNEDBodyFrame(), model->ReferenceXNEDBodyFrame());
    1b68:	8d 89       	ldd	r24, Y+21	; 0x15
    1b6a:	9e 89       	ldd	r25, Y+22	; 0x16
    1b6c:	fc 01       	movw	r30, r24
    1b6e:	80 81       	ld	r24, Z
    1b70:	91 81       	ldd	r25, Z+1	; 0x01
    1b72:	0e 94 87 02 	call	0x50e	; 0x50e <_ZNK10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEv>
    1b76:	6b 01       	movw	r12, r22
    1b78:	7c 01       	movw	r14, r24
    1b7a:	8d 89       	ldd	r24, Y+21	; 0x15
    1b7c:	9e 89       	ldd	r25, Y+22	; 0x16
    1b7e:	fc 01       	movw	r30, r24
    1b80:	80 81       	ld	r24, Z
    1b82:	91 81       	ldd	r25, Z+1	; 0x01
    1b84:	0e 94 71 02 	call	0x4e2	; 0x4e2 <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>
    1b88:	dc 01       	movw	r26, r24
    1b8a:	cb 01       	movw	r24, r22
    1b8c:	ed 89       	ldd	r30, Y+21	; 0x15
    1b8e:	fe 89       	ldd	r31, Y+22	; 0x16
    1b90:	97 01       	movw	r18, r14
    1b92:	86 01       	movw	r16, r12
    1b94:	ac 01       	movw	r20, r24
    1b96:	bd 01       	movw	r22, r26
    1b98:	cf 01       	movw	r24, r30
    1b9a:	0e 94 3e 08 	call	0x107c	; 0x107c <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    1b9e:	dc 01       	movw	r26, r24
    1ba0:	cb 01       	movw	r24, r22
    1ba2:	89 83       	std	Y+1, r24	; 0x01
    1ba4:	9a 83       	std	Y+2, r25	; 0x02
    1ba6:	ab 83       	std	Y+3, r26	; 0x03
    1ba8:	bc 83       	std	Y+4, r27	; 0x04
	float xIntegralAntiWindup = calculateIntegralAntiWindup(model->LongitudeControlBeforeServoLimitsAdjustment(), model->LongitudeControl(), xAntiWindupGain);
    1baa:	8d 89       	ldd	r24, Y+21	; 0x15
    1bac:	9e 89       	ldd	r25, Y+22	; 0x16
    1bae:	fc 01       	movw	r30, r24
    1bb0:	c6 8c       	ldd	r12, Z+30	; 0x1e
    1bb2:	d7 8c       	ldd	r13, Z+31	; 0x1f
    1bb4:	e0 a0       	ldd	r14, Z+32	; 0x20
    1bb6:	f1 a0       	ldd	r15, Z+33	; 0x21
    1bb8:	8d 89       	ldd	r24, Y+21	; 0x15
    1bba:	9e 89       	ldd	r25, Y+22	; 0x16
    1bbc:	fc 01       	movw	r30, r24
    1bbe:	80 81       	ld	r24, Z
    1bc0:	91 81       	ldd	r25, Z+1	; 0x01
    1bc2:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>
    1bc6:	4b 01       	movw	r8, r22
    1bc8:	5c 01       	movw	r10, r24
    1bca:	8d 89       	ldd	r24, Y+21	; 0x15
    1bcc:	9e 89       	ldd	r25, Y+22	; 0x16
    1bce:	fc 01       	movw	r30, r24
    1bd0:	80 81       	ld	r24, Z
    1bd2:	91 81       	ldd	r25, Z+1	; 0x01
    1bd4:	0e 94 9d 02 	call	0x53a	; 0x53a <_ZNK10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEv>
    1bd8:	dc 01       	movw	r26, r24
    1bda:	cb 01       	movw	r24, r22
    1bdc:	ed 89       	ldd	r30, Y+21	; 0x15
    1bde:	fe 89       	ldd	r31, Y+22	; 0x16
    1be0:	95 01       	movw	r18, r10
    1be2:	84 01       	movw	r16, r8
    1be4:	ac 01       	movw	r20, r24
    1be6:	bd 01       	movw	r22, r26
    1be8:	cf 01       	movw	r24, r30
    1bea:	0e 94 6d 08 	call	0x10da	; 0x10da <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    1bee:	dc 01       	movw	r26, r24
    1bf0:	cb 01       	movw	r24, r22
    1bf2:	8d 83       	std	Y+5, r24	; 0x05
    1bf4:	9e 83       	std	Y+6, r25	; 0x06
    1bf6:	af 83       	std	Y+7, r26	; 0x07
    1bf8:	b8 87       	std	Y+8, r27	; 0x08
	float weightedXIntegral = calculateIntegral(xProportional, model->XIntegral(), xIntegralAntiWindup, xIntegralGain);
    1bfa:	8d 89       	ldd	r24, Y+21	; 0x15
    1bfc:	9e 89       	ldd	r25, Y+22	; 0x16
    1bfe:	fc 01       	movw	r30, r24
    1c00:	a2 88       	ldd	r10, Z+18	; 0x12
    1c02:	b3 88       	ldd	r11, Z+19	; 0x13
    1c04:	c4 88       	ldd	r12, Z+20	; 0x14
    1c06:	d5 88       	ldd	r13, Z+21	; 0x15
    1c08:	8d 89       	ldd	r24, Y+21	; 0x15
    1c0a:	9e 89       	ldd	r25, Y+22	; 0x16
    1c0c:	fc 01       	movw	r30, r24
    1c0e:	80 81       	ld	r24, Z
    1c10:	91 81       	ldd	r25, Z+1	; 0x01
    1c12:	0e 94 8e 03 	call	0x71c	; 0x71c <_ZNK10helicopter5model11SystemModel9XIntegralEv>
    1c16:	9b 01       	movw	r18, r22
    1c18:	ac 01       	movw	r20, r24
    1c1a:	ed 80       	ldd	r14, Y+5	; 0x05
    1c1c:	fe 80       	ldd	r15, Y+6	; 0x06
    1c1e:	0f 81       	ldd	r16, Y+7	; 0x07
    1c20:	18 85       	ldd	r17, Y+8	; 0x08
    1c22:	89 81       	ldd	r24, Y+1	; 0x01
    1c24:	9a 81       	ldd	r25, Y+2	; 0x02
    1c26:	ab 81       	ldd	r26, Y+3	; 0x03
    1c28:	bc 81       	ldd	r27, Y+4	; 0x04
    1c2a:	ed 89       	ldd	r30, Y+21	; 0x15
    1c2c:	fe 89       	ldd	r31, Y+22	; 0x16
    1c2e:	45 01       	movw	r8, r10
    1c30:	56 01       	movw	r10, r12
    1c32:	67 01       	movw	r12, r14
    1c34:	78 01       	movw	r14, r16
    1c36:	89 01       	movw	r16, r18
    1c38:	9a 01       	movw	r18, r20
    1c3a:	ac 01       	movw	r20, r24
    1c3c:	bd 01       	movw	r22, r26
    1c3e:	cf 01       	movw	r24, r30
    1c40:	0e 94 be 08 	call	0x117c	; 0x117c <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    1c44:	dc 01       	movw	r26, r24
    1c46:	cb 01       	movw	r24, r22
    1c48:	89 87       	std	Y+9, r24	; 0x09
    1c4a:	9a 87       	std	Y+10, r25	; 0x0a
    1c4c:	ab 87       	std	Y+11, r26	; 0x0b
    1c4e:	bc 87       	std	Y+12, r27	; 0x0c
	float xDerivativeError = calculateVelocityError(model->XVelocityMetersPerSecond(), model->ReferenceXVelocityMetersPerSecond());
    1c50:	8d 89       	ldd	r24, Y+21	; 0x15
    1c52:	9e 89       	ldd	r25, Y+22	; 0x16
    1c54:	fc 01       	movw	r30, r24
    1c56:	80 81       	ld	r24, Z
    1c58:	91 81       	ldd	r25, Z+1	; 0x01
    1c5a:	0e 94 1f 03 	call	0x63e	; 0x63e <_ZNK10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEv>
    1c5e:	6b 01       	movw	r12, r22
    1c60:	7c 01       	movw	r14, r24
    1c62:	8d 89       	ldd	r24, Y+21	; 0x15
    1c64:	9e 89       	ldd	r25, Y+22	; 0x16
    1c66:	fc 01       	movw	r30, r24
    1c68:	80 81       	ld	r24, Z
    1c6a:	91 81       	ldd	r25, Z+1	; 0x01
    1c6c:	0e 94 09 03 	call	0x612	; 0x612 <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>
    1c70:	dc 01       	movw	r26, r24
    1c72:	cb 01       	movw	r24, r22
    1c74:	ed 89       	ldd	r30, Y+21	; 0x15
    1c76:	fe 89       	ldd	r31, Y+22	; 0x16
    1c78:	97 01       	movw	r18, r14
    1c7a:	86 01       	movw	r16, r12
    1c7c:	ac 01       	movw	r20, r24
    1c7e:	bd 01       	movw	r22, r26
    1c80:	cf 01       	movw	r24, r30
    1c82:	0e 94 90 09 	call	0x1320	; 0x1320 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    1c86:	dc 01       	movw	r26, r24
    1c88:	cb 01       	movw	r24, r22
    1c8a:	8d 87       	std	Y+13, r24	; 0x0d
    1c8c:	9e 87       	std	Y+14, r25	; 0x0e
    1c8e:	af 87       	std	Y+15, r26	; 0x0f
    1c90:	b8 8b       	std	Y+16, r27	; 0x10
	float xLongitudinalOuterLoopSetpoint = calculateOuterLoopControlValue(xProportional, xDerivativeError, weightedXIntegral, xProportionalGain, xDerivativeGain);
    1c92:	8d 89       	ldd	r24, Y+21	; 0x15
    1c94:	9e 89       	ldd	r25, Y+22	; 0x16
    1c96:	fc 01       	movw	r30, r24
    1c98:	86 89       	ldd	r24, Z+22	; 0x16
    1c9a:	97 89       	ldd	r25, Z+23	; 0x17
    1c9c:	a0 8d       	ldd	r26, Z+24	; 0x18
    1c9e:	b1 8d       	ldd	r27, Z+25	; 0x19
    1ca0:	2d 89       	ldd	r18, Y+21	; 0x15
    1ca2:	3e 89       	ldd	r19, Y+22	; 0x16
    1ca4:	f9 01       	movw	r30, r18
    1ca6:	82 8c       	ldd	r8, Z+26	; 0x1a
    1ca8:	93 8c       	ldd	r9, Z+27	; 0x1b
    1caa:	a4 8c       	ldd	r10, Z+28	; 0x1c
    1cac:	b5 8c       	ldd	r11, Z+29	; 0x1d
    1cae:	c9 84       	ldd	r12, Y+9	; 0x09
    1cb0:	da 84       	ldd	r13, Y+10	; 0x0a
    1cb2:	eb 84       	ldd	r14, Y+11	; 0x0b
    1cb4:	fc 84       	ldd	r15, Y+12	; 0x0c
    1cb6:	0d 85       	ldd	r16, Y+13	; 0x0d
    1cb8:	1e 85       	ldd	r17, Y+14	; 0x0e
    1cba:	2f 85       	ldd	r18, Y+15	; 0x0f
    1cbc:	38 89       	ldd	r19, Y+16	; 0x10
    1cbe:	49 81       	ldd	r20, Y+1	; 0x01
    1cc0:	5a 81       	ldd	r21, Y+2	; 0x02
    1cc2:	6b 81       	ldd	r22, Y+3	; 0x03
    1cc4:	7c 81       	ldd	r23, Y+4	; 0x04
    1cc6:	ed 89       	ldd	r30, Y+21	; 0x15
    1cc8:	fe 89       	ldd	r31, Y+22	; 0x16
    1cca:	7b 2e       	mov	r7, r27
    1ccc:	7f 92       	push	r7
    1cce:	7a 2e       	mov	r7, r26
    1cd0:	7f 92       	push	r7
    1cd2:	79 2e       	mov	r7, r25
    1cd4:	7f 92       	push	r7
    1cd6:	8f 93       	push	r24
    1cd8:	cf 01       	movw	r24, r30
    1cda:	0e 94 bf 09 	call	0x137e	; 0x137e <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>
    1cde:	0f 90       	pop	r0
    1ce0:	0f 90       	pop	r0
    1ce2:	0f 90       	pop	r0
    1ce4:	0f 90       	pop	r0
    1ce6:	dc 01       	movw	r26, r24
    1ce8:	cb 01       	movw	r24, r22
    1cea:	89 8b       	std	Y+17, r24	; 0x11
    1cec:	9a 8b       	std	Y+18, r25	; 0x12
    1cee:	ab 8b       	std	Y+19, r26	; 0x13
    1cf0:	bc 8b       	std	Y+20, r27	; 0x14
	
	xLongitudinalOuterLoopSetpoint = adjustForSetpointLimits(xLongitudinalOuterLoopSetpoint, MIN_PITCH_SETPOINT_DEGREES, MAX_PITCH_SETPOINT_DEGREES);
    1cf2:	89 89       	ldd	r24, Y+17	; 0x11
    1cf4:	9a 89       	ldd	r25, Y+18	; 0x12
    1cf6:	ab 89       	ldd	r26, Y+19	; 0x13
    1cf8:	bc 89       	ldd	r27, Y+20	; 0x14
    1cfa:	ed 89       	ldd	r30, Y+21	; 0x15
    1cfc:	fe 89       	ldd	r31, Y+22	; 0x16
    1cfe:	0f 2e       	mov	r0, r31
    1d00:	c1 2c       	mov	r12, r1
    1d02:	d1 2c       	mov	r13, r1
    1d04:	f0 e2       	ldi	r31, 0x20	; 32
    1d06:	ef 2e       	mov	r14, r31
    1d08:	f1 e4       	ldi	r31, 0x41	; 65
    1d0a:	ff 2e       	mov	r15, r31
    1d0c:	f0 2d       	mov	r31, r0
    1d0e:	00 e0       	ldi	r16, 0x00	; 0
    1d10:	10 e0       	ldi	r17, 0x00	; 0
    1d12:	20 e2       	ldi	r18, 0x20	; 32
    1d14:	31 ec       	ldi	r19, 0xC1	; 193
    1d16:	ac 01       	movw	r20, r24
    1d18:	bd 01       	movw	r22, r26
    1d1a:	cf 01       	movw	r24, r30
    1d1c:	0e 94 cc 11 	call	0x2398	; 0x2398 <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff>
    1d20:	dc 01       	movw	r26, r24
    1d22:	cb 01       	movw	r24, r22
    1d24:	89 8b       	std	Y+17, r24	; 0x11
    1d26:	9a 8b       	std	Y+18, r25	; 0x12
    1d28:	ab 8b       	std	Y+19, r26	; 0x13
    1d2a:	bc 8b       	std	Y+20, r27	; 0x14

	model->XLongitudeOuterLoopSetpoint(xLongitudinalOuterLoopSetpoint);
    1d2c:	8d 89       	ldd	r24, Y+21	; 0x15
    1d2e:	9e 89       	ldd	r25, Y+22	; 0x16
    1d30:	fc 01       	movw	r30, r24
    1d32:	20 81       	ld	r18, Z
    1d34:	31 81       	ldd	r19, Z+1	; 0x01
    1d36:	89 89       	ldd	r24, Y+17	; 0x11
    1d38:	9a 89       	ldd	r25, Y+18	; 0x12
    1d3a:	ab 89       	ldd	r26, Y+19	; 0x13
    1d3c:	bc 89       	ldd	r27, Y+20	; 0x14
    1d3e:	ac 01       	movw	r20, r24
    1d40:	bd 01       	movw	r22, r26
    1d42:	c9 01       	movw	r24, r18
    1d44:	0e 94 4b 03 	call	0x696	; 0x696 <_ZN10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEf>
	model->XIntegral(weightedXIntegral);
    1d48:	8d 89       	ldd	r24, Y+21	; 0x15
    1d4a:	9e 89       	ldd	r25, Y+22	; 0x16
    1d4c:	fc 01       	movw	r30, r24
    1d4e:	20 81       	ld	r18, Z
    1d50:	31 81       	ldd	r19, Z+1	; 0x01
    1d52:	89 85       	ldd	r24, Y+9	; 0x09
    1d54:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d56:	ab 85       	ldd	r26, Y+11	; 0x0b
    1d58:	bc 85       	ldd	r27, Y+12	; 0x0c
    1d5a:	ac 01       	movw	r20, r24
    1d5c:	bd 01       	movw	r22, r26
    1d5e:	c9 01       	movw	r24, r18
    1d60:	0e 94 a6 03 	call	0x74c	; 0x74c <_ZN10helicopter5model11SystemModel9XIntegralEf>
	model->XProportional(xProportional);
    1d64:	8d 89       	ldd	r24, Y+21	; 0x15
    1d66:	9e 89       	ldd	r25, Y+22	; 0x16
    1d68:	fc 01       	movw	r30, r24
    1d6a:	20 81       	ld	r18, Z
    1d6c:	31 81       	ldd	r19, Z+1	; 0x01
    1d6e:	89 81       	ldd	r24, Y+1	; 0x01
    1d70:	9a 81       	ldd	r25, Y+2	; 0x02
    1d72:	ab 81       	ldd	r26, Y+3	; 0x03
    1d74:	bc 81       	ldd	r27, Y+4	; 0x04
    1d76:	ac 01       	movw	r20, r24
    1d78:	bd 01       	movw	r22, r26
    1d7a:	c9 01       	movw	r24, r18
    1d7c:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <_ZN10helicopter5model11SystemModel13XProportionalEf>
	model->XDerivativeError(xDerivativeError);
    1d80:	8d 89       	ldd	r24, Y+21	; 0x15
    1d82:	9e 89       	ldd	r25, Y+22	; 0x16
    1d84:	fc 01       	movw	r30, r24
    1d86:	20 81       	ld	r18, Z
    1d88:	31 81       	ldd	r19, Z+1	; 0x01
    1d8a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d8c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d8e:	af 85       	ldd	r26, Y+15	; 0x0f
    1d90:	b8 89       	ldd	r27, Y+16	; 0x10
    1d92:	ac 01       	movw	r20, r24
    1d94:	bd 01       	movw	r22, r26
    1d96:	c9 01       	movw	r24, r18
    1d98:	0e 94 c9 03 	call	0x792	; 0x792 <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf>
}
    1d9c:	66 96       	adiw	r28, 0x16	; 22
    1d9e:	0f b6       	in	r0, 0x3f	; 63
    1da0:	f8 94       	cli
    1da2:	de bf       	out	0x3e, r29	; 62
    1da4:	0f be       	out	0x3f, r0	; 63
    1da6:	cd bf       	out	0x3d, r28	; 61
    1da8:	df 91       	pop	r29
    1daa:	cf 91       	pop	r28
    1dac:	1f 91       	pop	r17
    1dae:	0f 91       	pop	r16
    1db0:	ff 90       	pop	r15
    1db2:	ef 90       	pop	r14
    1db4:	df 90       	pop	r13
    1db6:	cf 90       	pop	r12
    1db8:	bf 90       	pop	r11
    1dba:	af 90       	pop	r10
    1dbc:	9f 90       	pop	r9
    1dbe:	8f 90       	pop	r8
    1dc0:	7f 90       	pop	r7
    1dc2:	08 95       	ret

00001dc4 <_ZN10helicopter10controller13PIDController28cyclicLateralOuterLoopUpdateEv>:

void PIDController::cyclicLateralOuterLoopUpdate()
{
    1dc4:	7f 92       	push	r7
    1dc6:	8f 92       	push	r8
    1dc8:	9f 92       	push	r9
    1dca:	af 92       	push	r10
    1dcc:	bf 92       	push	r11
    1dce:	cf 92       	push	r12
    1dd0:	df 92       	push	r13
    1dd2:	ef 92       	push	r14
    1dd4:	ff 92       	push	r15
    1dd6:	0f 93       	push	r16
    1dd8:	1f 93       	push	r17
    1dda:	cf 93       	push	r28
    1ddc:	df 93       	push	r29
    1dde:	cd b7       	in	r28, 0x3d	; 61
    1de0:	de b7       	in	r29, 0x3e	; 62
    1de2:	66 97       	sbiw	r28, 0x16	; 22
    1de4:	0f b6       	in	r0, 0x3f	; 63
    1de6:	f8 94       	cli
    1de8:	de bf       	out	0x3e, r29	; 62
    1dea:	0f be       	out	0x3f, r0	; 63
    1dec:	cd bf       	out	0x3d, r28	; 61
    1dee:	9e 8b       	std	Y+22, r25	; 0x16
    1df0:	8d 8b       	std	Y+21, r24	; 0x15
	float yProportional = calculateProportional(model->YNEDBodyFrame(), model->ReferenceYNEDBodyFrame());
    1df2:	8d 89       	ldd	r24, Y+21	; 0x15
    1df4:	9e 89       	ldd	r25, Y+22	; 0x16
    1df6:	fc 01       	movw	r30, r24
    1df8:	80 81       	ld	r24, Z
    1dfa:	91 81       	ldd	r25, Z+1	; 0x01
    1dfc:	0e 94 1c 04 	call	0x838	; 0x838 <_ZNK10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEv>
    1e00:	6b 01       	movw	r12, r22
    1e02:	7c 01       	movw	r14, r24
    1e04:	8d 89       	ldd	r24, Y+21	; 0x15
    1e06:	9e 89       	ldd	r25, Y+22	; 0x16
    1e08:	fc 01       	movw	r30, r24
    1e0a:	80 81       	ld	r24, Z
    1e0c:	91 81       	ldd	r25, Z+1	; 0x01
    1e0e:	0e 94 04 04 	call	0x808	; 0x808 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>
    1e12:	dc 01       	movw	r26, r24
    1e14:	cb 01       	movw	r24, r22
    1e16:	ed 89       	ldd	r30, Y+21	; 0x15
    1e18:	fe 89       	ldd	r31, Y+22	; 0x16
    1e1a:	97 01       	movw	r18, r14
    1e1c:	86 01       	movw	r16, r12
    1e1e:	ac 01       	movw	r20, r24
    1e20:	bd 01       	movw	r22, r26
    1e22:	cf 01       	movw	r24, r30
    1e24:	0e 94 3e 08 	call	0x107c	; 0x107c <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    1e28:	dc 01       	movw	r26, r24
    1e2a:	cb 01       	movw	r24, r22
    1e2c:	89 83       	std	Y+1, r24	; 0x01
    1e2e:	9a 83       	std	Y+2, r25	; 0x02
    1e30:	ab 83       	std	Y+3, r26	; 0x03
    1e32:	bc 83       	std	Y+4, r27	; 0x04
	float yIntegralAntiWindup = calculateIntegralAntiWindup(model->LateralControlBeforeServoLimitsAdjustment(), model->LateralControl(), yAntiWindupGain);
    1e34:	8d 89       	ldd	r24, Y+21	; 0x15
    1e36:	9e 89       	ldd	r25, Y+22	; 0x16
    1e38:	fc 01       	movw	r30, r24
    1e3a:	c2 a8       	ldd	r12, Z+50	; 0x32
    1e3c:	d3 a8       	ldd	r13, Z+51	; 0x33
    1e3e:	e4 a8       	ldd	r14, Z+52	; 0x34
    1e40:	f5 a8       	ldd	r15, Z+53	; 0x35
    1e42:	8d 89       	ldd	r24, Y+21	; 0x15
    1e44:	9e 89       	ldd	r25, Y+22	; 0x16
    1e46:	fc 01       	movw	r30, r24
    1e48:	80 81       	ld	r24, Z
    1e4a:	91 81       	ldd	r25, Z+1	; 0x01
    1e4c:	0e 94 6f 04 	call	0x8de	; 0x8de <_ZNK10helicopter5model11SystemModel14LateralControlEv>
    1e50:	4b 01       	movw	r8, r22
    1e52:	5c 01       	movw	r10, r24
    1e54:	8d 89       	ldd	r24, Y+21	; 0x15
    1e56:	9e 89       	ldd	r25, Y+22	; 0x16
    1e58:	fc 01       	movw	r30, r24
    1e5a:	80 81       	ld	r24, Z
    1e5c:	91 81       	ldd	r25, Z+1	; 0x01
    1e5e:	0e 94 34 04 	call	0x868	; 0x868 <_ZNK10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEv>
    1e62:	dc 01       	movw	r26, r24
    1e64:	cb 01       	movw	r24, r22
    1e66:	ed 89       	ldd	r30, Y+21	; 0x15
    1e68:	fe 89       	ldd	r31, Y+22	; 0x16
    1e6a:	95 01       	movw	r18, r10
    1e6c:	84 01       	movw	r16, r8
    1e6e:	ac 01       	movw	r20, r24
    1e70:	bd 01       	movw	r22, r26
    1e72:	cf 01       	movw	r24, r30
    1e74:	0e 94 6d 08 	call	0x10da	; 0x10da <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    1e78:	dc 01       	movw	r26, r24
    1e7a:	cb 01       	movw	r24, r22
    1e7c:	8d 83       	std	Y+5, r24	; 0x05
    1e7e:	9e 83       	std	Y+6, r25	; 0x06
    1e80:	af 83       	std	Y+7, r26	; 0x07
    1e82:	b8 87       	std	Y+8, r27	; 0x08
	float weightedYIntegral = calculateIntegral(yProportional, model->YIntegral(), yIntegralAntiWindup, yIntegralGain);
    1e84:	8d 89       	ldd	r24, Y+21	; 0x15
    1e86:	9e 89       	ldd	r25, Y+22	; 0x16
    1e88:	fc 01       	movw	r30, r24
    1e8a:	a6 a0       	ldd	r10, Z+38	; 0x26
    1e8c:	b7 a0       	ldd	r11, Z+39	; 0x27
    1e8e:	c0 a4       	ldd	r12, Z+40	; 0x28
    1e90:	d1 a4       	ldd	r13, Z+41	; 0x29
    1e92:	8d 89       	ldd	r24, Y+21	; 0x15
    1e94:	9e 89       	ldd	r25, Y+22	; 0x16
    1e96:	fc 01       	movw	r30, r24
    1e98:	80 81       	ld	r24, Z
    1e9a:	91 81       	ldd	r25, Z+1	; 0x01
    1e9c:	0e 94 38 05 	call	0xa70	; 0xa70 <_ZNK10helicopter5model11SystemModel9YIntegralEv>
    1ea0:	9b 01       	movw	r18, r22
    1ea2:	ac 01       	movw	r20, r24
    1ea4:	ed 80       	ldd	r14, Y+5	; 0x05
    1ea6:	fe 80       	ldd	r15, Y+6	; 0x06
    1ea8:	0f 81       	ldd	r16, Y+7	; 0x07
    1eaa:	18 85       	ldd	r17, Y+8	; 0x08
    1eac:	89 81       	ldd	r24, Y+1	; 0x01
    1eae:	9a 81       	ldd	r25, Y+2	; 0x02
    1eb0:	ab 81       	ldd	r26, Y+3	; 0x03
    1eb2:	bc 81       	ldd	r27, Y+4	; 0x04
    1eb4:	ed 89       	ldd	r30, Y+21	; 0x15
    1eb6:	fe 89       	ldd	r31, Y+22	; 0x16
    1eb8:	45 01       	movw	r8, r10
    1eba:	56 01       	movw	r10, r12
    1ebc:	67 01       	movw	r12, r14
    1ebe:	78 01       	movw	r14, r16
    1ec0:	89 01       	movw	r16, r18
    1ec2:	9a 01       	movw	r18, r20
    1ec4:	ac 01       	movw	r20, r24
    1ec6:	bd 01       	movw	r22, r26
    1ec8:	cf 01       	movw	r24, r30
    1eca:	0e 94 be 08 	call	0x117c	; 0x117c <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    1ece:	dc 01       	movw	r26, r24
    1ed0:	cb 01       	movw	r24, r22
    1ed2:	89 87       	std	Y+9, r24	; 0x09
    1ed4:	9a 87       	std	Y+10, r25	; 0x0a
    1ed6:	ab 87       	std	Y+11, r26	; 0x0b
    1ed8:	bc 87       	std	Y+12, r27	; 0x0c
	float yDerivativeError = calculateVelocityError(model->YVelocityMetersPerSecond(), model->ReferenceYVelocityMetersPerSecond());
    1eda:	8d 89       	ldd	r24, Y+21	; 0x15
    1edc:	9e 89       	ldd	r25, Y+22	; 0x16
    1ede:	fc 01       	movw	r30, r24
    1ee0:	80 81       	ld	r24, Z
    1ee2:	91 81       	ldd	r25, Z+1	; 0x01
    1ee4:	0e 94 c2 04 	call	0x984	; 0x984 <_ZNK10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEv>
    1ee8:	6b 01       	movw	r12, r22
    1eea:	7c 01       	movw	r14, r24
    1eec:	8d 89       	ldd	r24, Y+21	; 0x15
    1eee:	9e 89       	ldd	r25, Y+22	; 0x16
    1ef0:	fc 01       	movw	r30, r24
    1ef2:	80 81       	ld	r24, Z
    1ef4:	91 81       	ldd	r25, Z+1	; 0x01
    1ef6:	0e 94 aa 04 	call	0x954	; 0x954 <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>
    1efa:	dc 01       	movw	r26, r24
    1efc:	cb 01       	movw	r24, r22
    1efe:	ed 89       	ldd	r30, Y+21	; 0x15
    1f00:	fe 89       	ldd	r31, Y+22	; 0x16
    1f02:	97 01       	movw	r18, r14
    1f04:	86 01       	movw	r16, r12
    1f06:	ac 01       	movw	r20, r24
    1f08:	bd 01       	movw	r22, r26
    1f0a:	cf 01       	movw	r24, r30
    1f0c:	0e 94 90 09 	call	0x1320	; 0x1320 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    1f10:	dc 01       	movw	r26, r24
    1f12:	cb 01       	movw	r24, r22
    1f14:	8d 87       	std	Y+13, r24	; 0x0d
    1f16:	9e 87       	std	Y+14, r25	; 0x0e
    1f18:	af 87       	std	Y+15, r26	; 0x0f
    1f1a:	b8 8b       	std	Y+16, r27	; 0x10
	float yLateralOuterLoopSetpoint = calculateOuterLoopControlValue(yProportional, yDerivativeError, weightedYIntegral, yProportionalGain, yDerivativeGain);
    1f1c:	8d 89       	ldd	r24, Y+21	; 0x15
    1f1e:	9e 89       	ldd	r25, Y+22	; 0x16
    1f20:	fc 01       	movw	r30, r24
    1f22:	82 a5       	ldd	r24, Z+42	; 0x2a
    1f24:	93 a5       	ldd	r25, Z+43	; 0x2b
    1f26:	a4 a5       	ldd	r26, Z+44	; 0x2c
    1f28:	b5 a5       	ldd	r27, Z+45	; 0x2d
    1f2a:	2d 89       	ldd	r18, Y+21	; 0x15
    1f2c:	3e 89       	ldd	r19, Y+22	; 0x16
    1f2e:	f9 01       	movw	r30, r18
    1f30:	86 a4       	ldd	r8, Z+46	; 0x2e
    1f32:	97 a4       	ldd	r9, Z+47	; 0x2f
    1f34:	a0 a8       	ldd	r10, Z+48	; 0x30
    1f36:	b1 a8       	ldd	r11, Z+49	; 0x31
    1f38:	c9 84       	ldd	r12, Y+9	; 0x09
    1f3a:	da 84       	ldd	r13, Y+10	; 0x0a
    1f3c:	eb 84       	ldd	r14, Y+11	; 0x0b
    1f3e:	fc 84       	ldd	r15, Y+12	; 0x0c
    1f40:	0d 85       	ldd	r16, Y+13	; 0x0d
    1f42:	1e 85       	ldd	r17, Y+14	; 0x0e
    1f44:	2f 85       	ldd	r18, Y+15	; 0x0f
    1f46:	38 89       	ldd	r19, Y+16	; 0x10
    1f48:	49 81       	ldd	r20, Y+1	; 0x01
    1f4a:	5a 81       	ldd	r21, Y+2	; 0x02
    1f4c:	6b 81       	ldd	r22, Y+3	; 0x03
    1f4e:	7c 81       	ldd	r23, Y+4	; 0x04
    1f50:	ed 89       	ldd	r30, Y+21	; 0x15
    1f52:	fe 89       	ldd	r31, Y+22	; 0x16
    1f54:	7b 2e       	mov	r7, r27
    1f56:	7f 92       	push	r7
    1f58:	7a 2e       	mov	r7, r26
    1f5a:	7f 92       	push	r7
    1f5c:	79 2e       	mov	r7, r25
    1f5e:	7f 92       	push	r7
    1f60:	8f 93       	push	r24
    1f62:	cf 01       	movw	r24, r30
    1f64:	0e 94 bf 09 	call	0x137e	; 0x137e <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffff>
    1f68:	0f 90       	pop	r0
    1f6a:	0f 90       	pop	r0
    1f6c:	0f 90       	pop	r0
    1f6e:	0f 90       	pop	r0
    1f70:	dc 01       	movw	r26, r24
    1f72:	cb 01       	movw	r24, r22
    1f74:	89 8b       	std	Y+17, r24	; 0x11
    1f76:	9a 8b       	std	Y+18, r25	; 0x12
    1f78:	ab 8b       	std	Y+19, r26	; 0x13
    1f7a:	bc 8b       	std	Y+20, r27	; 0x14

	yLateralOuterLoopSetpoint = adjustForSetpointLimits(yLateralOuterLoopSetpoint, MIN_ROLL_SETPOINT_DEGREES, MAX_ROLL_SETPOINT_DEGREES);
    1f7c:	89 89       	ldd	r24, Y+17	; 0x11
    1f7e:	9a 89       	ldd	r25, Y+18	; 0x12
    1f80:	ab 89       	ldd	r26, Y+19	; 0x13
    1f82:	bc 89       	ldd	r27, Y+20	; 0x14
    1f84:	ed 89       	ldd	r30, Y+21	; 0x15
    1f86:	fe 89       	ldd	r31, Y+22	; 0x16
    1f88:	0f 2e       	mov	r0, r31
    1f8a:	c1 2c       	mov	r12, r1
    1f8c:	d1 2c       	mov	r13, r1
    1f8e:	f0 e2       	ldi	r31, 0x20	; 32
    1f90:	ef 2e       	mov	r14, r31
    1f92:	f1 e4       	ldi	r31, 0x41	; 65
    1f94:	ff 2e       	mov	r15, r31
    1f96:	f0 2d       	mov	r31, r0
    1f98:	00 e0       	ldi	r16, 0x00	; 0
    1f9a:	10 e0       	ldi	r17, 0x00	; 0
    1f9c:	20 e2       	ldi	r18, 0x20	; 32
    1f9e:	31 ec       	ldi	r19, 0xC1	; 193
    1fa0:	ac 01       	movw	r20, r24
    1fa2:	bd 01       	movw	r22, r26
    1fa4:	cf 01       	movw	r24, r30
    1fa6:	0e 94 cc 11 	call	0x2398	; 0x2398 <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff>
    1faa:	dc 01       	movw	r26, r24
    1fac:	cb 01       	movw	r24, r22
    1fae:	89 8b       	std	Y+17, r24	; 0x11
    1fb0:	9a 8b       	std	Y+18, r25	; 0x12
    1fb2:	ab 8b       	std	Y+19, r26	; 0x13
    1fb4:	bc 8b       	std	Y+20, r27	; 0x14
	
	model->YLateralOuterLoopSetpoint(yLateralOuterLoopSetpoint);
    1fb6:	8d 89       	ldd	r24, Y+21	; 0x15
    1fb8:	9e 89       	ldd	r25, Y+22	; 0x16
    1fba:	fc 01       	movw	r30, r24
    1fbc:	20 81       	ld	r18, Z
    1fbe:	31 81       	ldd	r19, Z+1	; 0x01
    1fc0:	89 89       	ldd	r24, Y+17	; 0x11
    1fc2:	9a 89       	ldd	r25, Y+18	; 0x12
    1fc4:	ab 89       	ldd	r26, Y+19	; 0x13
    1fc6:	bc 89       	ldd	r27, Y+20	; 0x14
    1fc8:	ac 01       	movw	r20, r24
    1fca:	bd 01       	movw	r22, r26
    1fcc:	c9 01       	movw	r24, r18
    1fce:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <_ZN10helicopter5model11SystemModel25YLateralOuterLoopSetpointEf>
	model->YIntegral(weightedYIntegral);
    1fd2:	8d 89       	ldd	r24, Y+21	; 0x15
    1fd4:	9e 89       	ldd	r25, Y+22	; 0x16
    1fd6:	fc 01       	movw	r30, r24
    1fd8:	20 81       	ld	r18, Z
    1fda:	31 81       	ldd	r19, Z+1	; 0x01
    1fdc:	89 85       	ldd	r24, Y+9	; 0x09
    1fde:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fe0:	ab 85       	ldd	r26, Y+11	; 0x0b
    1fe2:	bc 85       	ldd	r27, Y+12	; 0x0c
    1fe4:	ac 01       	movw	r20, r24
    1fe6:	bd 01       	movw	r22, r26
    1fe8:	c9 01       	movw	r24, r18
    1fea:	0e 94 50 05 	call	0xaa0	; 0xaa0 <_ZN10helicopter5model11SystemModel9YIntegralEf>
	model->YProportional(yProportional);
    1fee:	8d 89       	ldd	r24, Y+21	; 0x15
    1ff0:	9e 89       	ldd	r25, Y+22	; 0x16
    1ff2:	fc 01       	movw	r30, r24
    1ff4:	20 81       	ld	r18, Z
    1ff6:	31 81       	ldd	r19, Z+1	; 0x01
    1ff8:	89 81       	ldd	r24, Y+1	; 0x01
    1ffa:	9a 81       	ldd	r25, Y+2	; 0x02
    1ffc:	ab 81       	ldd	r26, Y+3	; 0x03
    1ffe:	bc 81       	ldd	r27, Y+4	; 0x04
    2000:	ac 01       	movw	r20, r24
    2002:	bd 01       	movw	r22, r26
    2004:	c9 01       	movw	r24, r18
    2006:	0e 94 15 05 	call	0xa2a	; 0xa2a <_ZN10helicopter5model11SystemModel13YProportionalEf>
	model->YDerivativeError(yDerivativeError);
    200a:	8d 89       	ldd	r24, Y+21	; 0x15
    200c:	9e 89       	ldd	r25, Y+22	; 0x16
    200e:	fc 01       	movw	r30, r24
    2010:	20 81       	ld	r18, Z
    2012:	31 81       	ldd	r19, Z+1	; 0x01
    2014:	8d 85       	ldd	r24, Y+13	; 0x0d
    2016:	9e 85       	ldd	r25, Y+14	; 0x0e
    2018:	af 85       	ldd	r26, Y+15	; 0x0f
    201a:	b8 89       	ldd	r27, Y+16	; 0x10
    201c:	ac 01       	movw	r20, r24
    201e:	bd 01       	movw	r22, r26
    2020:	c9 01       	movw	r24, r18
    2022:	0e 94 73 05 	call	0xae6	; 0xae6 <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf>
}
    2026:	66 96       	adiw	r28, 0x16	; 22
    2028:	0f b6       	in	r0, 0x3f	; 63
    202a:	f8 94       	cli
    202c:	de bf       	out	0x3e, r29	; 62
    202e:	0f be       	out	0x3f, r0	; 63
    2030:	cd bf       	out	0x3d, r28	; 61
    2032:	df 91       	pop	r29
    2034:	cf 91       	pop	r28
    2036:	1f 91       	pop	r17
    2038:	0f 91       	pop	r16
    203a:	ff 90       	pop	r15
    203c:	ef 90       	pop	r14
    203e:	df 90       	pop	r13
    2040:	cf 90       	pop	r12
    2042:	bf 90       	pop	r11
    2044:	af 90       	pop	r10
    2046:	9f 90       	pop	r9
    2048:	8f 90       	pop	r8
    204a:	7f 90       	pop	r7
    204c:	08 95       	ret

0000204e <_ZN10helicopter10controller13PIDController30cyclicLongitudeInnerLoopUpdateEv>:

void PIDController::cyclicLongitudeInnerLoopUpdate()
{
    204e:	6f 92       	push	r6
    2050:	7f 92       	push	r7
    2052:	8f 92       	push	r8
    2054:	9f 92       	push	r9
    2056:	af 92       	push	r10
    2058:	bf 92       	push	r11
    205a:	cf 92       	push	r12
    205c:	df 92       	push	r13
    205e:	ef 92       	push	r14
    2060:	ff 92       	push	r15
    2062:	0f 93       	push	r16
    2064:	1f 93       	push	r17
    2066:	cf 93       	push	r28
    2068:	df 93       	push	r29
    206a:	cd b7       	in	r28, 0x3d	; 61
    206c:	de b7       	in	r29, 0x3e	; 62
    206e:	2a 97       	sbiw	r28, 0x0a	; 10
    2070:	0f b6       	in	r0, 0x3f	; 63
    2072:	f8 94       	cli
    2074:	de bf       	out	0x3e, r29	; 62
    2076:	0f be       	out	0x3f, r0	; 63
    2078:	cd bf       	out	0x3d, r28	; 61
    207a:	9a 87       	std	Y+10, r25	; 0x0a
    207c:	89 87       	std	Y+9, r24	; 0x09
	float xLongitudinalInnerLoopControlBeforeServoLimits = calculateInnerLoopControlValue(model->XLongitudeOuterLoopSetpoint(), model->ThetaPitchDegrees(), longitudeInnerLoopGain);
    207e:	89 85       	ldd	r24, Y+9	; 0x09
    2080:	9a 85       	ldd	r25, Y+10	; 0x0a
    2082:	fc 01       	movw	r30, r24
    2084:	62 a0       	ldd	r6, Z+34	; 0x22
    2086:	73 a0       	ldd	r7, Z+35	; 0x23
    2088:	84 a0       	ldd	r8, Z+36	; 0x24
    208a:	95 a0       	ldd	r9, Z+37	; 0x25
    208c:	89 85       	ldd	r24, Y+9	; 0x09
    208e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2090:	fc 01       	movw	r30, r24
    2092:	80 81       	ld	r24, Z
    2094:	91 81       	ldd	r25, Z+1	; 0x01
    2096:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <_ZNK10helicopter5model11SystemModel17ThetaPitchDegreesEv>
    209a:	5b 01       	movw	r10, r22
    209c:	6c 01       	movw	r12, r24
    209e:	89 85       	ldd	r24, Y+9	; 0x09
    20a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    20a2:	fc 01       	movw	r30, r24
    20a4:	80 81       	ld	r24, Z
    20a6:	91 81       	ldd	r25, Z+1	; 0x01
    20a8:	0e 94 35 03 	call	0x66a	; 0x66a <_ZNK10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEv>
    20ac:	dc 01       	movw	r26, r24
    20ae:	cb 01       	movw	r24, r22
    20b0:	84 01       	movw	r16, r8
    20b2:	73 01       	movw	r14, r6
    20b4:	a6 01       	movw	r20, r12
    20b6:	95 01       	movw	r18, r10
    20b8:	bc 01       	movw	r22, r24
    20ba:	cd 01       	movw	r24, r26
    20bc:	0e 94 8e 0a 	call	0x151c	; 0x151c <_Z30calculateInnerLoopControlValuefff>
    20c0:	dc 01       	movw	r26, r24
    20c2:	cb 01       	movw	r24, r22
    20c4:	89 83       	std	Y+1, r24	; 0x01
    20c6:	9a 83       	std	Y+2, r25	; 0x02
    20c8:	ab 83       	std	Y+3, r26	; 0x03
    20ca:	bc 83       	std	Y+4, r27	; 0x04
	
	float xLongitudinalInnerLoopControl = adjustControlForServoLimits(xLongitudinalInnerLoopControlBeforeServoLimits, minLongitudeServoControlValue, maxLongitudeServoControlValue);
    20cc:	89 85       	ldd	r24, Y+9	; 0x09
    20ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    20d0:	8a 5a       	subi	r24, 0xAA	; 170
    20d2:	9f 4f       	sbci	r25, 0xFF	; 255
    20d4:	fc 01       	movw	r30, r24
    20d6:	e0 80       	ld	r14, Z
    20d8:	f1 80       	ldd	r15, Z+1	; 0x01
    20da:	02 81       	ldd	r16, Z+2	; 0x02
    20dc:	13 81       	ldd	r17, Z+3	; 0x03
    20de:	89 85       	ldd	r24, Y+9	; 0x09
    20e0:	9a 85       	ldd	r25, Y+10	; 0x0a
    20e2:	8e 5a       	subi	r24, 0xAE	; 174
    20e4:	9f 4f       	sbci	r25, 0xFF	; 255
    20e6:	fc 01       	movw	r30, r24
    20e8:	20 81       	ld	r18, Z
    20ea:	31 81       	ldd	r19, Z+1	; 0x01
    20ec:	42 81       	ldd	r20, Z+2	; 0x02
    20ee:	53 81       	ldd	r21, Z+3	; 0x03
    20f0:	89 81       	ldd	r24, Y+1	; 0x01
    20f2:	9a 81       	ldd	r25, Y+2	; 0x02
    20f4:	ab 81       	ldd	r26, Y+3	; 0x03
    20f6:	bc 81       	ldd	r27, Y+4	; 0x04
    20f8:	e9 85       	ldd	r30, Y+9	; 0x09
    20fa:	fa 85       	ldd	r31, Y+10	; 0x0a
    20fc:	67 01       	movw	r12, r14
    20fe:	78 01       	movw	r14, r16
    2100:	89 01       	movw	r16, r18
    2102:	9a 01       	movw	r18, r20
    2104:	ac 01       	movw	r20, r24
    2106:	bd 01       	movw	r22, r26
    2108:	cf 01       	movw	r24, r30
    210a:	0e 94 32 0a 	call	0x1464	; 0x1464 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    210e:	dc 01       	movw	r26, r24
    2110:	cb 01       	movw	r24, r22
    2112:	8d 83       	std	Y+5, r24	; 0x05
    2114:	9e 83       	std	Y+6, r25	; 0x06
    2116:	af 83       	std	Y+7, r26	; 0x07
    2118:	b8 87       	std	Y+8, r27	; 0x08
	
	model->LongitudeControlBeforeServoLimitsAdjustment(xLongitudinalInnerLoopControlBeforeServoLimits);
    211a:	89 85       	ldd	r24, Y+9	; 0x09
    211c:	9a 85       	ldd	r25, Y+10	; 0x0a
    211e:	fc 01       	movw	r30, r24
    2120:	20 81       	ld	r18, Z
    2122:	31 81       	ldd	r19, Z+1	; 0x01
    2124:	89 81       	ldd	r24, Y+1	; 0x01
    2126:	9a 81       	ldd	r25, Y+2	; 0x02
    2128:	ab 81       	ldd	r26, Y+3	; 0x03
    212a:	bc 81       	ldd	r27, Y+4	; 0x04
    212c:	ac 01       	movw	r20, r24
    212e:	bd 01       	movw	r22, r26
    2130:	c9 01       	movw	r24, r18
    2132:	0e 94 b3 02 	call	0x566	; 0x566 <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf>
	
	model->LongitudeControl(xLongitudinalInnerLoopControl);
    2136:	89 85       	ldd	r24, Y+9	; 0x09
    2138:	9a 85       	ldd	r25, Y+10	; 0x0a
    213a:	fc 01       	movw	r30, r24
    213c:	20 81       	ld	r18, Z
    213e:	31 81       	ldd	r19, Z+1	; 0x01
    2140:	8d 81       	ldd	r24, Y+5	; 0x05
    2142:	9e 81       	ldd	r25, Y+6	; 0x06
    2144:	af 81       	ldd	r26, Y+7	; 0x07
    2146:	b8 85       	ldd	r27, Y+8	; 0x08
    2148:	ac 01       	movw	r20, r24
    214a:	bd 01       	movw	r22, r26
    214c:	c9 01       	movw	r24, r18
    214e:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <_ZN10helicopter5model11SystemModel16LongitudeControlEf>
}
    2152:	2a 96       	adiw	r28, 0x0a	; 10
    2154:	0f b6       	in	r0, 0x3f	; 63
    2156:	f8 94       	cli
    2158:	de bf       	out	0x3e, r29	; 62
    215a:	0f be       	out	0x3f, r0	; 63
    215c:	cd bf       	out	0x3d, r28	; 61
    215e:	df 91       	pop	r29
    2160:	cf 91       	pop	r28
    2162:	1f 91       	pop	r17
    2164:	0f 91       	pop	r16
    2166:	ff 90       	pop	r15
    2168:	ef 90       	pop	r14
    216a:	df 90       	pop	r13
    216c:	cf 90       	pop	r12
    216e:	bf 90       	pop	r11
    2170:	af 90       	pop	r10
    2172:	9f 90       	pop	r9
    2174:	8f 90       	pop	r8
    2176:	7f 90       	pop	r7
    2178:	6f 90       	pop	r6
    217a:	08 95       	ret

0000217c <_ZN10helicopter10controller13PIDController28cyclicLateralInnerLoopUpdateEv>:

void PIDController::cyclicLateralInnerLoopUpdate()
{
    217c:	6f 92       	push	r6
    217e:	7f 92       	push	r7
    2180:	8f 92       	push	r8
    2182:	9f 92       	push	r9
    2184:	af 92       	push	r10
    2186:	bf 92       	push	r11
    2188:	cf 92       	push	r12
    218a:	df 92       	push	r13
    218c:	ef 92       	push	r14
    218e:	ff 92       	push	r15
    2190:	0f 93       	push	r16
    2192:	1f 93       	push	r17
    2194:	cf 93       	push	r28
    2196:	df 93       	push	r29
    2198:	cd b7       	in	r28, 0x3d	; 61
    219a:	de b7       	in	r29, 0x3e	; 62
    219c:	2a 97       	sbiw	r28, 0x0a	; 10
    219e:	0f b6       	in	r0, 0x3f	; 63
    21a0:	f8 94       	cli
    21a2:	de bf       	out	0x3e, r29	; 62
    21a4:	0f be       	out	0x3f, r0	; 63
    21a6:	cd bf       	out	0x3d, r28	; 61
    21a8:	9a 87       	std	Y+10, r25	; 0x0a
    21aa:	89 87       	std	Y+9, r24	; 0x09
	float yLateralInnerLoopControlBeforeServoLimits = calculateInnerLoopControlValue(model->YLateralOuterLoopSetpoint(), model->PhiRollDegrees(), lateralInnerLoopGain);
    21ac:	89 85       	ldd	r24, Y+9	; 0x09
    21ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    21b0:	fc 01       	movw	r30, r24
    21b2:	66 a8       	ldd	r6, Z+54	; 0x36
    21b4:	77 a8       	ldd	r7, Z+55	; 0x37
    21b6:	80 ac       	ldd	r8, Z+56	; 0x38
    21b8:	91 ac       	ldd	r9, Z+57	; 0x39
    21ba:	89 85       	ldd	r24, Y+9	; 0x09
    21bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    21be:	fc 01       	movw	r30, r24
    21c0:	80 81       	ld	r24, Z
    21c2:	91 81       	ldd	r25, Z+1	; 0x01
    21c4:	0e 94 96 05 	call	0xb2c	; 0xb2c <_ZNK10helicopter5model11SystemModel14PhiRollDegreesEv>
    21c8:	5b 01       	movw	r10, r22
    21ca:	6c 01       	movw	r12, r24
    21cc:	89 85       	ldd	r24, Y+9	; 0x09
    21ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    21d0:	fc 01       	movw	r30, r24
    21d2:	80 81       	ld	r24, Z
    21d4:	91 81       	ldd	r25, Z+1	; 0x01
    21d6:	0e 94 da 04 	call	0x9b4	; 0x9b4 <_ZNK10helicopter5model11SystemModel25YLateralOuterLoopSetpointEv>
    21da:	dc 01       	movw	r26, r24
    21dc:	cb 01       	movw	r24, r22
    21de:	84 01       	movw	r16, r8
    21e0:	73 01       	movw	r14, r6
    21e2:	a6 01       	movw	r20, r12
    21e4:	95 01       	movw	r18, r10
    21e6:	bc 01       	movw	r22, r24
    21e8:	cd 01       	movw	r24, r26
    21ea:	0e 94 8e 0a 	call	0x151c	; 0x151c <_Z30calculateInnerLoopControlValuefff>
    21ee:	dc 01       	movw	r26, r24
    21f0:	cb 01       	movw	r24, r22
    21f2:	89 83       	std	Y+1, r24	; 0x01
    21f4:	9a 83       	std	Y+2, r25	; 0x02
    21f6:	ab 83       	std	Y+3, r26	; 0x03
    21f8:	bc 83       	std	Y+4, r27	; 0x04
	
	float yLateralInnerLoopControl = adjustControlForServoLimits(yLateralInnerLoopControlBeforeServoLimits, minLateralServoControlValue, maxLateralServoControlValue);
    21fa:	89 85       	ldd	r24, Y+9	; 0x09
    21fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    21fe:	82 5a       	subi	r24, 0xA2	; 162
    2200:	9f 4f       	sbci	r25, 0xFF	; 255
    2202:	fc 01       	movw	r30, r24
    2204:	e0 80       	ld	r14, Z
    2206:	f1 80       	ldd	r15, Z+1	; 0x01
    2208:	02 81       	ldd	r16, Z+2	; 0x02
    220a:	13 81       	ldd	r17, Z+3	; 0x03
    220c:	89 85       	ldd	r24, Y+9	; 0x09
    220e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2210:	86 5a       	subi	r24, 0xA6	; 166
    2212:	9f 4f       	sbci	r25, 0xFF	; 255
    2214:	fc 01       	movw	r30, r24
    2216:	20 81       	ld	r18, Z
    2218:	31 81       	ldd	r19, Z+1	; 0x01
    221a:	42 81       	ldd	r20, Z+2	; 0x02
    221c:	53 81       	ldd	r21, Z+3	; 0x03
    221e:	89 81       	ldd	r24, Y+1	; 0x01
    2220:	9a 81       	ldd	r25, Y+2	; 0x02
    2222:	ab 81       	ldd	r26, Y+3	; 0x03
    2224:	bc 81       	ldd	r27, Y+4	; 0x04
    2226:	e9 85       	ldd	r30, Y+9	; 0x09
    2228:	fa 85       	ldd	r31, Y+10	; 0x0a
    222a:	67 01       	movw	r12, r14
    222c:	78 01       	movw	r14, r16
    222e:	89 01       	movw	r16, r18
    2230:	9a 01       	movw	r18, r20
    2232:	ac 01       	movw	r20, r24
    2234:	bd 01       	movw	r22, r26
    2236:	cf 01       	movw	r24, r30
    2238:	0e 94 32 0a 	call	0x1464	; 0x1464 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    223c:	dc 01       	movw	r26, r24
    223e:	cb 01       	movw	r24, r22
    2240:	8d 83       	std	Y+5, r24	; 0x05
    2242:	9e 83       	std	Y+6, r25	; 0x06
    2244:	af 83       	std	Y+7, r26	; 0x07
    2246:	b8 87       	std	Y+8, r27	; 0x08
	
	model->LateralControlBeforeServoLimitsAdjustment(yLateralInnerLoopControlBeforeServoLimits);
    2248:	89 85       	ldd	r24, Y+9	; 0x09
    224a:	9a 85       	ldd	r25, Y+10	; 0x0a
    224c:	fc 01       	movw	r30, r24
    224e:	20 81       	ld	r18, Z
    2250:	31 81       	ldd	r19, Z+1	; 0x01
    2252:	89 81       	ldd	r24, Y+1	; 0x01
    2254:	9a 81       	ldd	r25, Y+2	; 0x02
    2256:	ab 81       	ldd	r26, Y+3	; 0x03
    2258:	bc 81       	ldd	r27, Y+4	; 0x04
    225a:	ac 01       	movw	r20, r24
    225c:	bd 01       	movw	r22, r26
    225e:	c9 01       	movw	r24, r18
    2260:	0e 94 4c 04 	call	0x898	; 0x898 <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf>
	
	model->LateralControl(yLateralInnerLoopControl);
    2264:	89 85       	ldd	r24, Y+9	; 0x09
    2266:	9a 85       	ldd	r25, Y+10	; 0x0a
    2268:	fc 01       	movw	r30, r24
    226a:	20 81       	ld	r18, Z
    226c:	31 81       	ldd	r19, Z+1	; 0x01
    226e:	8d 81       	ldd	r24, Y+5	; 0x05
    2270:	9e 81       	ldd	r25, Y+6	; 0x06
    2272:	af 81       	ldd	r26, Y+7	; 0x07
    2274:	b8 85       	ldd	r27, Y+8	; 0x08
    2276:	ac 01       	movw	r20, r24
    2278:	bd 01       	movw	r22, r26
    227a:	c9 01       	movw	r24, r18
    227c:	0e 94 87 04 	call	0x90e	; 0x90e <_ZN10helicopter5model11SystemModel14LateralControlEf>
}
    2280:	2a 96       	adiw	r28, 0x0a	; 10
    2282:	0f b6       	in	r0, 0x3f	; 63
    2284:	f8 94       	cli
    2286:	de bf       	out	0x3e, r29	; 62
    2288:	0f be       	out	0x3f, r0	; 63
    228a:	cd bf       	out	0x3d, r28	; 61
    228c:	df 91       	pop	r29
    228e:	cf 91       	pop	r28
    2290:	1f 91       	pop	r17
    2292:	0f 91       	pop	r16
    2294:	ff 90       	pop	r15
    2296:	ef 90       	pop	r14
    2298:	df 90       	pop	r13
    229a:	cf 90       	pop	r12
    229c:	bf 90       	pop	r11
    229e:	af 90       	pop	r10
    22a0:	9f 90       	pop	r9
    22a2:	8f 90       	pop	r8
    22a4:	7f 90       	pop	r7
    22a6:	6f 90       	pop	r6
    22a8:	08 95       	ret

000022aa <_ZN10helicopter10controller13PIDController13addBlownFrameEv>:



//TODO WTF IS THIS DOING HERE?? THIS IS THE WRONG CONTROLLER!!
void PIDController::addBlownFrame()
{
    22aa:	cf 93       	push	r28
    22ac:	df 93       	push	r29
    22ae:	1f 92       	push	r1
    22b0:	1f 92       	push	r1
    22b2:	cd b7       	in	r28, 0x3d	; 61
    22b4:	de b7       	in	r29, 0x3e	; 62
    22b6:	9a 83       	std	Y+2, r25	; 0x02
    22b8:	89 83       	std	Y+1, r24	; 0x01
	model->BlownFrames(model->BlownFrames() + 1);
    22ba:	89 81       	ldd	r24, Y+1	; 0x01
    22bc:	9a 81       	ldd	r25, Y+2	; 0x02
    22be:	fc 01       	movw	r30, r24
    22c0:	80 81       	ld	r24, Z
    22c2:	91 81       	ldd	r25, Z+1	; 0x01
    22c4:	0e 94 05 07 	call	0xe0a	; 0xe0a <_ZNK10helicopter5model11SystemModel11BlownFramesEv>
    22c8:	dc 01       	movw	r26, r24
    22ca:	cb 01       	movw	r24, r22
    22cc:	01 96       	adiw	r24, 0x01	; 1
    22ce:	a1 1d       	adc	r26, r1
    22d0:	b1 1d       	adc	r27, r1
    22d2:	29 81       	ldd	r18, Y+1	; 0x01
    22d4:	3a 81       	ldd	r19, Y+2	; 0x02
    22d6:	f9 01       	movw	r30, r18
    22d8:	20 81       	ld	r18, Z
    22da:	31 81       	ldd	r19, Z+1	; 0x01
    22dc:	ac 01       	movw	r20, r24
    22de:	bd 01       	movw	r22, r26
    22e0:	c9 01       	movw	r24, r18
    22e2:	0e 94 1d 07 	call	0xe3a	; 0xe3a <_ZN10helicopter5model11SystemModel11BlownFramesEl>
}
    22e6:	0f 90       	pop	r0
    22e8:	0f 90       	pop	r0
    22ea:	df 91       	pop	r29
    22ec:	cf 91       	pop	r28
    22ee:	08 95       	ret

000022f0 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef>:

float PIDController::convertYawErrorFrom360to180( float yawError ) 
{
    22f0:	cf 93       	push	r28
    22f2:	df 93       	push	r29
    22f4:	00 d0       	rcall	.+0      	; 0x22f6 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x6>
    22f6:	00 d0       	rcall	.+0      	; 0x22f8 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x8>
    22f8:	cd b7       	in	r28, 0x3d	; 61
    22fa:	de b7       	in	r29, 0x3e	; 62
    22fc:	9a 83       	std	Y+2, r25	; 0x02
    22fe:	89 83       	std	Y+1, r24	; 0x01
    2300:	4b 83       	std	Y+3, r20	; 0x03
    2302:	5c 83       	std	Y+4, r21	; 0x04
    2304:	6d 83       	std	Y+5, r22	; 0x05
    2306:	7e 83       	std	Y+6, r23	; 0x06
	if (yawError >= 180)
    2308:	20 e0       	ldi	r18, 0x00	; 0
    230a:	30 e0       	ldi	r19, 0x00	; 0
    230c:	44 e3       	ldi	r20, 0x34	; 52
    230e:	53 e4       	ldi	r21, 0x43	; 67
    2310:	6b 81       	ldd	r22, Y+3	; 0x03
    2312:	7c 81       	ldd	r23, Y+4	; 0x04
    2314:	8d 81       	ldd	r24, Y+5	; 0x05
    2316:	9e 81       	ldd	r25, Y+6	; 0x06
    2318:	0e 94 4b 45 	call	0x8a96	; 0x8a96 <__gesf2>
    231c:	88 23       	and	r24, r24
    231e:	8c f0       	brlt	.+34     	; 0x2342 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x52>
	{
		yawError = yawError - 360;
    2320:	20 e0       	ldi	r18, 0x00	; 0
    2322:	30 e0       	ldi	r19, 0x00	; 0
    2324:	44 eb       	ldi	r20, 0xB4	; 180
    2326:	53 e4       	ldi	r21, 0x43	; 67
    2328:	6b 81       	ldd	r22, Y+3	; 0x03
    232a:	7c 81       	ldd	r23, Y+4	; 0x04
    232c:	8d 81       	ldd	r24, Y+5	; 0x05
    232e:	9e 81       	ldd	r25, Y+6	; 0x06
    2330:	0e 94 08 43 	call	0x8610	; 0x8610 <__subsf3>
    2334:	dc 01       	movw	r26, r24
    2336:	cb 01       	movw	r24, r22
    2338:	8b 83       	std	Y+3, r24	; 0x03
    233a:	9c 83       	std	Y+4, r25	; 0x04
    233c:	ad 83       	std	Y+5, r26	; 0x05
    233e:	be 83       	std	Y+6, r27	; 0x06
    2340:	1c c0       	rjmp	.+56     	; 0x237a <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x8a>
	}
	else if (yawError < -180)
    2342:	20 e0       	ldi	r18, 0x00	; 0
    2344:	30 e0       	ldi	r19, 0x00	; 0
    2346:	44 e3       	ldi	r20, 0x34	; 52
    2348:	53 ec       	ldi	r21, 0xC3	; 195
    234a:	6b 81       	ldd	r22, Y+3	; 0x03
    234c:	7c 81       	ldd	r23, Y+4	; 0x04
    234e:	8d 81       	ldd	r24, Y+5	; 0x05
    2350:	9e 81       	ldd	r25, Y+6	; 0x06
    2352:	0e 94 6d 43 	call	0x86da	; 0x86da <__cmpsf2>
    2356:	88 23       	and	r24, r24
    2358:	84 f4       	brge	.+32     	; 0x237a <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x8a>
	{
		yawError = yawError + 360;
    235a:	20 e0       	ldi	r18, 0x00	; 0
    235c:	30 e0       	ldi	r19, 0x00	; 0
    235e:	44 eb       	ldi	r20, 0xB4	; 180
    2360:	53 e4       	ldi	r21, 0x43	; 67
    2362:	6b 81       	ldd	r22, Y+3	; 0x03
    2364:	7c 81       	ldd	r23, Y+4	; 0x04
    2366:	8d 81       	ldd	r24, Y+5	; 0x05
    2368:	9e 81       	ldd	r25, Y+6	; 0x06
    236a:	0e 94 09 43 	call	0x8612	; 0x8612 <__addsf3>
    236e:	dc 01       	movw	r26, r24
    2370:	cb 01       	movw	r24, r22
    2372:	8b 83       	std	Y+3, r24	; 0x03
    2374:	9c 83       	std	Y+4, r25	; 0x04
    2376:	ad 83       	std	Y+5, r26	; 0x05
    2378:	be 83       	std	Y+6, r27	; 0x06
	}	
	
	return yawError;
    237a:	8b 81       	ldd	r24, Y+3	; 0x03
    237c:	9c 81       	ldd	r25, Y+4	; 0x04
    237e:	ad 81       	ldd	r26, Y+5	; 0x05
    2380:	be 81       	ldd	r27, Y+6	; 0x06
}
    2382:	bc 01       	movw	r22, r24
    2384:	cd 01       	movw	r24, r26
    2386:	26 96       	adiw	r28, 0x06	; 6
    2388:	0f b6       	in	r0, 0x3f	; 63
    238a:	f8 94       	cli
    238c:	de bf       	out	0x3e, r29	; 62
    238e:	0f be       	out	0x3f, r0	; 63
    2390:	cd bf       	out	0x3d, r28	; 61
    2392:	df 91       	pop	r29
    2394:	cf 91       	pop	r28
    2396:	08 95       	ret

00002398 <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff>:

float PIDController::adjustForSetpointLimits( float outerLoopControlSetpoint, float minSetpointLimitDegrees, float maxSetpointLimitDegrees ) 
{
    2398:	cf 92       	push	r12
    239a:	df 92       	push	r13
    239c:	ef 92       	push	r14
    239e:	ff 92       	push	r15
    23a0:	0f 93       	push	r16
    23a2:	1f 93       	push	r17
    23a4:	cf 93       	push	r28
    23a6:	df 93       	push	r29
    23a8:	cd b7       	in	r28, 0x3d	; 61
    23aa:	de b7       	in	r29, 0x3e	; 62
    23ac:	2e 97       	sbiw	r28, 0x0e	; 14
    23ae:	0f b6       	in	r0, 0x3f	; 63
    23b0:	f8 94       	cli
    23b2:	de bf       	out	0x3e, r29	; 62
    23b4:	0f be       	out	0x3f, r0	; 63
    23b6:	cd bf       	out	0x3d, r28	; 61
    23b8:	9a 83       	std	Y+2, r25	; 0x02
    23ba:	89 83       	std	Y+1, r24	; 0x01
    23bc:	4b 83       	std	Y+3, r20	; 0x03
    23be:	5c 83       	std	Y+4, r21	; 0x04
    23c0:	6d 83       	std	Y+5, r22	; 0x05
    23c2:	7e 83       	std	Y+6, r23	; 0x06
    23c4:	0f 83       	std	Y+7, r16	; 0x07
    23c6:	18 87       	std	Y+8, r17	; 0x08
    23c8:	29 87       	std	Y+9, r18	; 0x09
    23ca:	3a 87       	std	Y+10, r19	; 0x0a
    23cc:	cb 86       	std	Y+11, r12	; 0x0b
    23ce:	dc 86       	std	Y+12, r13	; 0x0c
    23d0:	ed 86       	std	Y+13, r14	; 0x0d
    23d2:	fe 86       	std	Y+14, r15	; 0x0e
	if (outerLoopControlSetpoint < minSetpointLimitDegrees)
    23d4:	2f 81       	ldd	r18, Y+7	; 0x07
    23d6:	38 85       	ldd	r19, Y+8	; 0x08
    23d8:	49 85       	ldd	r20, Y+9	; 0x09
    23da:	5a 85       	ldd	r21, Y+10	; 0x0a
    23dc:	6b 81       	ldd	r22, Y+3	; 0x03
    23de:	7c 81       	ldd	r23, Y+4	; 0x04
    23e0:	8d 81       	ldd	r24, Y+5	; 0x05
    23e2:	9e 81       	ldd	r25, Y+6	; 0x06
    23e4:	0e 94 6d 43 	call	0x86da	; 0x86da <__cmpsf2>
    23e8:	88 23       	and	r24, r24
    23ea:	4c f4       	brge	.+18     	; 0x23fe <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff+0x66>
	{
		outerLoopControlSetpoint = minSetpointLimitDegrees;
    23ec:	8f 81       	ldd	r24, Y+7	; 0x07
    23ee:	98 85       	ldd	r25, Y+8	; 0x08
    23f0:	a9 85       	ldd	r26, Y+9	; 0x09
    23f2:	ba 85       	ldd	r27, Y+10	; 0x0a
    23f4:	8b 83       	std	Y+3, r24	; 0x03
    23f6:	9c 83       	std	Y+4, r25	; 0x04
    23f8:	ad 83       	std	Y+5, r26	; 0x05
    23fa:	be 83       	std	Y+6, r27	; 0x06
    23fc:	14 c0       	rjmp	.+40     	; 0x2426 <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff+0x8e>
	}else if (outerLoopControlSetpoint > maxSetpointLimitDegrees)
    23fe:	2b 85       	ldd	r18, Y+11	; 0x0b
    2400:	3c 85       	ldd	r19, Y+12	; 0x0c
    2402:	4d 85       	ldd	r20, Y+13	; 0x0d
    2404:	5e 85       	ldd	r21, Y+14	; 0x0e
    2406:	6b 81       	ldd	r22, Y+3	; 0x03
    2408:	7c 81       	ldd	r23, Y+4	; 0x04
    240a:	8d 81       	ldd	r24, Y+5	; 0x05
    240c:	9e 81       	ldd	r25, Y+6	; 0x06
    240e:	0e 94 4b 45 	call	0x8a96	; 0x8a96 <__gesf2>
    2412:	18 16       	cp	r1, r24
    2414:	44 f4       	brge	.+16     	; 0x2426 <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff+0x8e>
	{
		outerLoopControlSetpoint = maxSetpointLimitDegrees;
    2416:	8b 85       	ldd	r24, Y+11	; 0x0b
    2418:	9c 85       	ldd	r25, Y+12	; 0x0c
    241a:	ad 85       	ldd	r26, Y+13	; 0x0d
    241c:	be 85       	ldd	r27, Y+14	; 0x0e
    241e:	8b 83       	std	Y+3, r24	; 0x03
    2420:	9c 83       	std	Y+4, r25	; 0x04
    2422:	ad 83       	std	Y+5, r26	; 0x05
    2424:	be 83       	std	Y+6, r27	; 0x06
	}
	
	return outerLoopControlSetpoint;
    2426:	8b 81       	ldd	r24, Y+3	; 0x03
    2428:	9c 81       	ldd	r25, Y+4	; 0x04
    242a:	ad 81       	ldd	r26, Y+5	; 0x05
    242c:	be 81       	ldd	r27, Y+6	; 0x06
}
    242e:	bc 01       	movw	r22, r24
    2430:	cd 01       	movw	r24, r26
    2432:	2e 96       	adiw	r28, 0x0e	; 14
    2434:	0f b6       	in	r0, 0x3f	; 63
    2436:	f8 94       	cli
    2438:	de bf       	out	0x3e, r29	; 62
    243a:	0f be       	out	0x3f, r0	; 63
    243c:	cd bf       	out	0x3d, r28	; 61
    243e:	df 91       	pop	r29
    2440:	cf 91       	pop	r28
    2442:	1f 91       	pop	r17
    2444:	0f 91       	pop	r16
    2446:	ff 90       	pop	r15
    2448:	ef 90       	pop	r14
    244a:	df 90       	pop	r13
    244c:	cf 90       	pop	r12
    244e:	08 95       	ret

00002450 <_ZN10helicopter7drivers12SerialDriverD1Ev>:
				useDoubleSpeedMode(useDoubleSpeedMode)
				{
					
				}
						
				virtual ~SerialDriver()
    2450:	cf 93       	push	r28
    2452:	df 93       	push	r29
    2454:	1f 92       	push	r1
    2456:	1f 92       	push	r1
    2458:	cd b7       	in	r28, 0x3d	; 61
    245a:	de b7       	in	r29, 0x3e	; 62
    245c:	9a 83       	std	Y+2, r25	; 0x02
    245e:	89 83       	std	Y+1, r24	; 0x01
				{
    2460:	89 81       	ldd	r24, Y+1	; 0x01
    2462:	9a 81       	ldd	r25, Y+2	; 0x02
    2464:	2a e0       	ldi	r18, 0x0A	; 10
    2466:	32 e0       	ldi	r19, 0x02	; 2
    2468:	fc 01       	movw	r30, r24
    246a:	31 83       	std	Z+1, r19	; 0x01
    246c:	20 83       	st	Z, r18
					
				}
    246e:	80 e0       	ldi	r24, 0x00	; 0
    2470:	90 e0       	ldi	r25, 0x00	; 0
    2472:	81 70       	andi	r24, 0x01	; 1
    2474:	99 27       	eor	r25, r25
    2476:	00 97       	sbiw	r24, 0x00	; 0
    2478:	21 f0       	breq	.+8      	; 0x2482 <_ZN10helicopter7drivers12SerialDriverD1Ev+0x32>
    247a:	89 81       	ldd	r24, Y+1	; 0x01
    247c:	9a 81       	ldd	r25, Y+2	; 0x02
    247e:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    2482:	0f 90       	pop	r0
    2484:	0f 90       	pop	r0
    2486:	df 91       	pop	r29
    2488:	cf 91       	pop	r28
    248a:	08 95       	ret

0000248c <_ZN10helicopter7drivers12SerialDriverD0Ev>:
				useDoubleSpeedMode(useDoubleSpeedMode)
				{
					
				}
						
				virtual ~SerialDriver()
    248c:	cf 93       	push	r28
    248e:	df 93       	push	r29
    2490:	1f 92       	push	r1
    2492:	1f 92       	push	r1
    2494:	cd b7       	in	r28, 0x3d	; 61
    2496:	de b7       	in	r29, 0x3e	; 62
    2498:	9a 83       	std	Y+2, r25	; 0x02
    249a:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    249c:	89 81       	ldd	r24, Y+1	; 0x01
    249e:	9a 81       	ldd	r25, Y+2	; 0x02
    24a0:	0e 94 28 12 	call	0x2450	; 0x2450 <_ZN10helicopter7drivers12SerialDriverD1Ev>
    24a4:	89 81       	ldd	r24, Y+1	; 0x01
    24a6:	9a 81       	ldd	r25, Y+2	; 0x02
    24a8:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    24ac:	0f 90       	pop	r0
    24ae:	0f 90       	pop	r0
    24b0:	df 91       	pop	r29
    24b2:	cf 91       	pop	r28
    24b4:	08 95       	ret

000024b6 <_ZN10helicopter7drivers12SerialDriver10initializeEv>:
#include "CommonHeader.h"

using namespace helicopter::drivers;

void SerialDriver::initialize()
{
    24b6:	cf 93       	push	r28
    24b8:	df 93       	push	r29
    24ba:	00 d0       	rcall	.+0      	; 0x24bc <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x6>
    24bc:	1f 92       	push	r1
    24be:	cd b7       	in	r28, 0x3d	; 61
    24c0:	de b7       	in	r29, 0x3e	; 62
    24c2:	9c 83       	std	Y+4, r25	; 0x04
    24c4:	8b 83       	std	Y+3, r24	; 0x03
	unsigned int baudPrescaller = 0;
    24c6:	1a 82       	std	Y+2, r1	; 0x02
    24c8:	19 82       	std	Y+1, r1	; 0x01
	
	if (useDoubleSpeedMode)
    24ca:	8b 81       	ldd	r24, Y+3	; 0x03
    24cc:	9c 81       	ldd	r25, Y+4	; 0x04
    24ce:	fc 01       	movw	r30, r24
    24d0:	82 85       	ldd	r24, Z+10	; 0x0a
    24d2:	88 23       	and	r24, r24
    24d4:	b9 f1       	breq	.+110    	; 0x2544 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x8e>
	{
		baudPrescaller = floor((((F_CPU / (baudRate * 8UL))) - 1UL));
    24d6:	8b 81       	ldd	r24, Y+3	; 0x03
    24d8:	9c 81       	ldd	r25, Y+4	; 0x04
    24da:	fc 01       	movw	r30, r24
    24dc:	82 81       	ldd	r24, Z+2	; 0x02
    24de:	93 81       	ldd	r25, Z+3	; 0x03
    24e0:	a4 81       	ldd	r26, Z+4	; 0x04
    24e2:	b5 81       	ldd	r27, Z+5	; 0x05
    24e4:	88 0f       	add	r24, r24
    24e6:	99 1f       	adc	r25, r25
    24e8:	aa 1f       	adc	r26, r26
    24ea:	bb 1f       	adc	r27, r27
    24ec:	88 0f       	add	r24, r24
    24ee:	99 1f       	adc	r25, r25
    24f0:	aa 1f       	adc	r26, r26
    24f2:	bb 1f       	adc	r27, r27
    24f4:	88 0f       	add	r24, r24
    24f6:	99 1f       	adc	r25, r25
    24f8:	aa 1f       	adc	r26, r26
    24fa:	bb 1f       	adc	r27, r27
    24fc:	9c 01       	movw	r18, r24
    24fe:	ad 01       	movw	r20, r26
    2500:	80 e0       	ldi	r24, 0x00	; 0
    2502:	94 e2       	ldi	r25, 0x24	; 36
    2504:	a4 ef       	ldi	r26, 0xF4	; 244
    2506:	b0 e0       	ldi	r27, 0x00	; 0
    2508:	bc 01       	movw	r22, r24
    250a:	cd 01       	movw	r24, r26
    250c:	0e 94 7d 47 	call	0x8efa	; 0x8efa <__udivmodsi4>
    2510:	da 01       	movw	r26, r20
    2512:	c9 01       	movw	r24, r18
    2514:	01 97       	sbiw	r24, 0x01	; 1
    2516:	a1 09       	sbc	r26, r1
    2518:	b1 09       	sbc	r27, r1
    251a:	bc 01       	movw	r22, r24
    251c:	cd 01       	movw	r24, r26
    251e:	0e 94 0d 44 	call	0x881a	; 0x881a <__floatunsisf>
    2522:	dc 01       	movw	r26, r24
    2524:	cb 01       	movw	r24, r22
    2526:	bc 01       	movw	r22, r24
    2528:	cd 01       	movw	r24, r26
    252a:	0e 94 4a 44 	call	0x8894	; 0x8894 <floor>
    252e:	dc 01       	movw	r26, r24
    2530:	cb 01       	movw	r24, r22
    2532:	bc 01       	movw	r22, r24
    2534:	cd 01       	movw	r24, r26
    2536:	0e 94 e1 43 	call	0x87c2	; 0x87c2 <__fixunssfsi>
    253a:	dc 01       	movw	r26, r24
    253c:	cb 01       	movw	r24, r22
    253e:	9a 83       	std	Y+2, r25	; 0x02
    2540:	89 83       	std	Y+1, r24	; 0x01
    2542:	3a c0       	rjmp	.+116    	; 0x25b8 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x102>
	}else
	{
		//Calculation for the baud prescaller 
		baudPrescaller = floor((((F_CPU / (baudRate * 16UL))) - 1UL));
    2544:	8b 81       	ldd	r24, Y+3	; 0x03
    2546:	9c 81       	ldd	r25, Y+4	; 0x04
    2548:	fc 01       	movw	r30, r24
    254a:	82 81       	ldd	r24, Z+2	; 0x02
    254c:	93 81       	ldd	r25, Z+3	; 0x03
    254e:	a4 81       	ldd	r26, Z+4	; 0x04
    2550:	b5 81       	ldd	r27, Z+5	; 0x05
    2552:	88 0f       	add	r24, r24
    2554:	99 1f       	adc	r25, r25
    2556:	aa 1f       	adc	r26, r26
    2558:	bb 1f       	adc	r27, r27
    255a:	88 0f       	add	r24, r24
    255c:	99 1f       	adc	r25, r25
    255e:	aa 1f       	adc	r26, r26
    2560:	bb 1f       	adc	r27, r27
    2562:	88 0f       	add	r24, r24
    2564:	99 1f       	adc	r25, r25
    2566:	aa 1f       	adc	r26, r26
    2568:	bb 1f       	adc	r27, r27
    256a:	88 0f       	add	r24, r24
    256c:	99 1f       	adc	r25, r25
    256e:	aa 1f       	adc	r26, r26
    2570:	bb 1f       	adc	r27, r27
    2572:	9c 01       	movw	r18, r24
    2574:	ad 01       	movw	r20, r26
    2576:	80 e0       	ldi	r24, 0x00	; 0
    2578:	94 e2       	ldi	r25, 0x24	; 36
    257a:	a4 ef       	ldi	r26, 0xF4	; 244
    257c:	b0 e0       	ldi	r27, 0x00	; 0
    257e:	bc 01       	movw	r22, r24
    2580:	cd 01       	movw	r24, r26
    2582:	0e 94 7d 47 	call	0x8efa	; 0x8efa <__udivmodsi4>
    2586:	da 01       	movw	r26, r20
    2588:	c9 01       	movw	r24, r18
    258a:	01 97       	sbiw	r24, 0x01	; 1
    258c:	a1 09       	sbc	r26, r1
    258e:	b1 09       	sbc	r27, r1
    2590:	bc 01       	movw	r22, r24
    2592:	cd 01       	movw	r24, r26
    2594:	0e 94 0d 44 	call	0x881a	; 0x881a <__floatunsisf>
    2598:	dc 01       	movw	r26, r24
    259a:	cb 01       	movw	r24, r22
    259c:	bc 01       	movw	r22, r24
    259e:	cd 01       	movw	r24, r26
    25a0:	0e 94 4a 44 	call	0x8894	; 0x8894 <floor>
    25a4:	dc 01       	movw	r26, r24
    25a6:	cb 01       	movw	r24, r22
    25a8:	bc 01       	movw	r22, r24
    25aa:	cd 01       	movw	r24, r26
    25ac:	0e 94 e1 43 	call	0x87c2	; 0x87c2 <__fixunssfsi>
    25b0:	dc 01       	movw	r26, r24
    25b2:	cb 01       	movw	r24, r22
    25b4:	9a 83       	std	Y+2, r25	; 0x02
    25b6:	89 83       	std	Y+1, r24	; 0x01
	}
	
	
	if (uartPort == Zero)
    25b8:	8b 81       	ldd	r24, Y+3	; 0x03
    25ba:	9c 81       	ldd	r25, Y+4	; 0x04
    25bc:	fc 01       	movw	r30, r24
    25be:	86 81       	ldd	r24, Z+6	; 0x06
    25c0:	88 23       	and	r24, r24
    25c2:	41 f5       	brne	.+80     	; 0x2614 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x15e>
	{
		/* Set baud rate */
		UBRR0 = baudPrescaller;
    25c4:	84 ec       	ldi	r24, 0xC4	; 196
    25c6:	90 e0       	ldi	r25, 0x00	; 0
    25c8:	29 81       	ldd	r18, Y+1	; 0x01
    25ca:	3a 81       	ldd	r19, Y+2	; 0x02
    25cc:	fc 01       	movw	r30, r24
    25ce:	31 83       	std	Z+1, r19	; 0x01
    25d0:	20 83       	st	Z, r18
		
		/* Set frame format: asynchronous usart, no parity 1stop bit, 8 bits of data, */
		UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);
    25d2:	82 ec       	ldi	r24, 0xC2	; 194
    25d4:	90 e0       	ldi	r25, 0x00	; 0
    25d6:	22 ec       	ldi	r18, 0xC2	; 194
    25d8:	30 e0       	ldi	r19, 0x00	; 0
    25da:	f9 01       	movw	r30, r18
    25dc:	20 81       	ld	r18, Z
    25de:	26 60       	ori	r18, 0x06	; 6
    25e0:	fc 01       	movw	r30, r24
    25e2:	20 83       	st	Z, r18
		
		//If double speed mode flag was set, set the U2X0 flag to enable double speed mode.
		if (useDoubleSpeedMode)
    25e4:	8b 81       	ldd	r24, Y+3	; 0x03
    25e6:	9c 81       	ldd	r25, Y+4	; 0x04
    25e8:	fc 01       	movw	r30, r24
    25ea:	82 85       	ldd	r24, Z+10	; 0x0a
    25ec:	88 23       	and	r24, r24
    25ee:	49 f0       	breq	.+18     	; 0x2602 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x14c>
		{
			UCSR0A |= (1<<U2X0);
    25f0:	80 ec       	ldi	r24, 0xC0	; 192
    25f2:	90 e0       	ldi	r25, 0x00	; 0
    25f4:	20 ec       	ldi	r18, 0xC0	; 192
    25f6:	30 e0       	ldi	r19, 0x00	; 0
    25f8:	f9 01       	movw	r30, r18
    25fa:	20 81       	ld	r18, Z
    25fc:	22 60       	ori	r18, 0x02	; 2
    25fe:	fc 01       	movw	r30, r24
    2600:	20 83       	st	Z, r18
		}
		
			
			
		/* Enable receiver and transmitter */
		UCSR0B |= (1<<RXEN0) | (1<<TXEN0);
    2602:	81 ec       	ldi	r24, 0xC1	; 193
    2604:	90 e0       	ldi	r25, 0x00	; 0
    2606:	21 ec       	ldi	r18, 0xC1	; 193
    2608:	30 e0       	ldi	r19, 0x00	; 0
    260a:	f9 01       	movw	r30, r18
    260c:	20 81       	ld	r18, Z
    260e:	28 61       	ori	r18, 0x18	; 24
    2610:	fc 01       	movw	r30, r24
    2612:	20 83       	st	Z, r18
	}
}
    2614:	0f 90       	pop	r0
    2616:	0f 90       	pop	r0
    2618:	0f 90       	pop	r0
    261a:	0f 90       	pop	r0
    261c:	df 91       	pop	r29
    261e:	cf 91       	pop	r28
    2620:	08 95       	ret

00002622 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh>:

int SerialDriver::transmitByte(byte byteToSend)
{
    2622:	cf 93       	push	r28
    2624:	df 93       	push	r29
    2626:	00 d0       	rcall	.+0      	; 0x2628 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6>
    2628:	cd b7       	in	r28, 0x3d	; 61
    262a:	de b7       	in	r29, 0x3e	; 62
    262c:	9a 83       	std	Y+2, r25	; 0x02
    262e:	89 83       	std	Y+1, r24	; 0x01
    2630:	6b 83       	std	Y+3, r22	; 0x03
	if (uartPort == Zero)
    2632:	89 81       	ldd	r24, Y+1	; 0x01
    2634:	9a 81       	ldd	r25, Y+2	; 0x02
    2636:	fc 01       	movw	r30, r24
    2638:	86 81       	ldd	r24, Z+6	; 0x06
    263a:	88 23       	and	r24, r24
    263c:	09 f0       	breq	.+2      	; 0x2640 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x1e>
    263e:	42 c0       	rjmp	.+132    	; 0x26c4 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0xa2>
	{
		if (isTimeoutEnabled)
    2640:	89 81       	ldd	r24, Y+1	; 0x01
    2642:	9a 81       	ldd	r25, Y+2	; 0x02
    2644:	fc 01       	movw	r30, r24
    2646:	81 85       	ldd	r24, Z+9	; 0x09
    2648:	88 23       	and	r24, r24
    264a:	09 f1       	breq	.+66     	; 0x268e <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6c>
		{
			timer->startTimer();
    264c:	89 81       	ldd	r24, Y+1	; 0x01
    264e:	9a 81       	ldd	r25, Y+2	; 0x02
    2650:	fc 01       	movw	r30, r24
    2652:	87 81       	ldd	r24, Z+7	; 0x07
    2654:	90 85       	ldd	r25, Z+8	; 0x08
    2656:	0e 94 15 42 	call	0x842a	; 0x842a <_ZN10helicopter4util5Timer10startTimerEv>
		}
		
		/* Wait for empty transmit buffer */
		while ( !( UCSR0A & (1<<UDRE0)) )
    265a:	19 c0       	rjmp	.+50     	; 0x268e <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6c>
		{
			//Check for timeout
			if (isTimeoutEnabled)
    265c:	89 81       	ldd	r24, Y+1	; 0x01
    265e:	9a 81       	ldd	r25, Y+2	; 0x02
    2660:	fc 01       	movw	r30, r24
    2662:	81 85       	ldd	r24, Z+9	; 0x09
    2664:	88 23       	and	r24, r24
    2666:	a1 f0       	breq	.+40     	; 0x2690 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6e>
			{
				if (timer->hasTimedout())
    2668:	89 81       	ldd	r24, Y+1	; 0x01
    266a:	9a 81       	ldd	r25, Y+2	; 0x02
    266c:	fc 01       	movw	r30, r24
    266e:	87 81       	ldd	r24, Z+7	; 0x07
    2670:	90 85       	ldd	r25, Z+8	; 0x08
    2672:	0e 94 cf 42 	call	0x859e	; 0x859e <_ZN10helicopter4util5Timer11hasTimedoutEv>
    2676:	88 23       	and	r24, r24
    2678:	59 f0       	breq	.+22     	; 0x2690 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x6e>
				{
					timer->stopTimer();
    267a:	89 81       	ldd	r24, Y+1	; 0x01
    267c:	9a 81       	ldd	r25, Y+2	; 0x02
    267e:	fc 01       	movw	r30, r24
    2680:	87 81       	ldd	r24, Z+7	; 0x07
    2682:	90 85       	ldd	r25, Z+8	; 0x08
    2684:	0e 94 e9 42 	call	0x85d2	; 0x85d2 <_ZN10helicopter4util5Timer9stopTimerEv>
					return -1;
    2688:	8f ef       	ldi	r24, 0xFF	; 255
    268a:	9f ef       	ldi	r25, 0xFF	; 255
    268c:	1d c0       	rjmp	.+58     	; 0x26c8 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0xa6>
		{
			timer->startTimer();
		}
		
		/* Wait for empty transmit buffer */
		while ( !( UCSR0A & (1<<UDRE0)) )
    268e:	00 00       	nop
    2690:	80 ec       	ldi	r24, 0xC0	; 192
    2692:	90 e0       	ldi	r25, 0x00	; 0
    2694:	fc 01       	movw	r30, r24
    2696:	80 81       	ld	r24, Z
    2698:	88 2f       	mov	r24, r24
    269a:	90 e0       	ldi	r25, 0x00	; 0
    269c:	80 72       	andi	r24, 0x20	; 32
    269e:	99 27       	eor	r25, r25
    26a0:	21 e0       	ldi	r18, 0x01	; 1
    26a2:	00 97       	sbiw	r24, 0x00	; 0
    26a4:	09 f0       	breq	.+2      	; 0x26a8 <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x86>
    26a6:	20 e0       	ldi	r18, 0x00	; 0
    26a8:	22 23       	and	r18, r18
    26aa:	c1 f6       	brne	.-80     	; 0x265c <_ZN10helicopter7drivers12SerialDriver12transmitByteEh+0x3a>
			}
		}
				
				
		/* Put data into buffer, sends the data */
		UDR0 = byteToSend;
    26ac:	86 ec       	ldi	r24, 0xC6	; 198
    26ae:	90 e0       	ldi	r25, 0x00	; 0
    26b0:	2b 81       	ldd	r18, Y+3	; 0x03
    26b2:	fc 01       	movw	r30, r24
    26b4:	20 83       	st	Z, r18
		
		timer->stopTimer();
    26b6:	89 81       	ldd	r24, Y+1	; 0x01
    26b8:	9a 81       	ldd	r25, Y+2	; 0x02
    26ba:	fc 01       	movw	r30, r24
    26bc:	87 81       	ldd	r24, Z+7	; 0x07
    26be:	90 85       	ldd	r25, Z+8	; 0x08
    26c0:	0e 94 e9 42 	call	0x85d2	; 0x85d2 <_ZN10helicopter4util5Timer9stopTimerEv>
	}
	
	return 0;
    26c4:	80 e0       	ldi	r24, 0x00	; 0
    26c6:	90 e0       	ldi	r25, 0x00	; 0
}
    26c8:	0f 90       	pop	r0
    26ca:	0f 90       	pop	r0
    26cc:	0f 90       	pop	r0
    26ce:	df 91       	pop	r29
    26d0:	cf 91       	pop	r28
    26d2:	08 95       	ret

000026d4 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh>:

int SerialDriver::receiveByte(byte &receivedByte)
{
    26d4:	cf 93       	push	r28
    26d6:	df 93       	push	r29
    26d8:	00 d0       	rcall	.+0      	; 0x26da <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x6>
    26da:	1f 92       	push	r1
    26dc:	1f 92       	push	r1
    26de:	cd b7       	in	r28, 0x3d	; 61
    26e0:	de b7       	in	r29, 0x3e	; 62
    26e2:	9b 83       	std	Y+3, r25	; 0x03
    26e4:	8a 83       	std	Y+2, r24	; 0x02
    26e6:	7d 83       	std	Y+5, r23	; 0x05
    26e8:	6c 83       	std	Y+4, r22	; 0x04
	bool hasDataOverrun = false;
    26ea:	19 82       	std	Y+1, r1	; 0x01
	
	if (uartPort == Zero)
    26ec:	8a 81       	ldd	r24, Y+2	; 0x02
    26ee:	9b 81       	ldd	r25, Y+3	; 0x03
    26f0:	fc 01       	movw	r30, r24
    26f2:	86 81       	ldd	r24, Z+6	; 0x06
    26f4:	88 23       	and	r24, r24
    26f6:	09 f0       	breq	.+2      	; 0x26fa <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x26>
    26f8:	41 c0       	rjmp	.+130    	; 0x277c <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0xa8>
	{
		
		if (isTimeoutEnabled)
    26fa:	8a 81       	ldd	r24, Y+2	; 0x02
    26fc:	9b 81       	ldd	r25, Y+3	; 0x03
    26fe:	fc 01       	movw	r30, r24
    2700:	81 85       	ldd	r24, Z+9	; 0x09
    2702:	88 23       	and	r24, r24
    2704:	d9 f0       	breq	.+54     	; 0x273c <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x68>
		{
			timer->startTimer();
    2706:	8a 81       	ldd	r24, Y+2	; 0x02
    2708:	9b 81       	ldd	r25, Y+3	; 0x03
    270a:	fc 01       	movw	r30, r24
    270c:	87 81       	ldd	r24, Z+7	; 0x07
    270e:	90 85       	ldd	r25, Z+8	; 0x08
    2710:	0e 94 15 42 	call	0x842a	; 0x842a <_ZN10helicopter4util5Timer10startTimerEv>
		}
		//int counter = 0;
		
		/* Wait for data on the receive buffer */
		while ( !(UCSR0A & (1<<RXC0)) )
    2714:	13 c0       	rjmp	.+38     	; 0x273c <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x68>
		{
			if (timer->hasTimedout())
    2716:	8a 81       	ldd	r24, Y+2	; 0x02
    2718:	9b 81       	ldd	r25, Y+3	; 0x03
    271a:	fc 01       	movw	r30, r24
    271c:	87 81       	ldd	r24, Z+7	; 0x07
    271e:	90 85       	ldd	r25, Z+8	; 0x08
    2720:	0e 94 cf 42 	call	0x859e	; 0x859e <_ZN10helicopter4util5Timer11hasTimedoutEv>
    2724:	88 23       	and	r24, r24
    2726:	59 f0       	breq	.+22     	; 0x273e <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x6a>
			{
				timer->stopTimer();
    2728:	8a 81       	ldd	r24, Y+2	; 0x02
    272a:	9b 81       	ldd	r25, Y+3	; 0x03
    272c:	fc 01       	movw	r30, r24
    272e:	87 81       	ldd	r24, Z+7	; 0x07
    2730:	90 85       	ldd	r25, Z+8	; 0x08
    2732:	0e 94 e9 42 	call	0x85d2	; 0x85d2 <_ZN10helicopter4util5Timer9stopTimerEv>
				return -1;
    2736:	8f ef       	ldi	r24, 0xFF	; 255
    2738:	9f ef       	ldi	r25, 0xFF	; 255
    273a:	29 c0       	rjmp	.+82     	; 0x278e <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0xba>
			timer->startTimer();
		}
		//int counter = 0;
		
		/* Wait for data on the receive buffer */
		while ( !(UCSR0A & (1<<RXC0)) )
    273c:	00 00       	nop
    273e:	80 ec       	ldi	r24, 0xC0	; 192
    2740:	90 e0       	ldi	r25, 0x00	; 0
    2742:	fc 01       	movw	r30, r24
    2744:	80 81       	ld	r24, Z
    2746:	80 95       	com	r24
    2748:	88 1f       	adc	r24, r24
    274a:	88 27       	eor	r24, r24
    274c:	88 1f       	adc	r24, r24
    274e:	88 23       	and	r24, r24
    2750:	11 f7       	brne	.-60     	; 0x2716 <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x42>
			}*/
		}
		
		//determine if there has been a data overrun.
		//Swallow the overrun because nothing can be done.
		hasDataOverrun = (UCSR0A & (1 << DOR0)) != 0;
    2752:	80 ec       	ldi	r24, 0xC0	; 192
    2754:	90 e0       	ldi	r25, 0x00	; 0
    2756:	fc 01       	movw	r30, r24
    2758:	80 81       	ld	r24, Z
    275a:	88 2f       	mov	r24, r24
    275c:	90 e0       	ldi	r25, 0x00	; 0
    275e:	88 70       	andi	r24, 0x08	; 8
    2760:	99 27       	eor	r25, r25
    2762:	21 e0       	ldi	r18, 0x01	; 1
    2764:	00 97       	sbiw	r24, 0x00	; 0
    2766:	09 f4       	brne	.+2      	; 0x276a <_ZN10helicopter7drivers12SerialDriver11receiveByteERh+0x96>
    2768:	20 e0       	ldi	r18, 0x00	; 0
    276a:	29 83       	std	Y+1, r18	; 0x01
		
		/* Read the data from the serial port buffer */
		receivedByte = UDR0;
    276c:	86 ec       	ldi	r24, 0xC6	; 198
    276e:	90 e0       	ldi	r25, 0x00	; 0
    2770:	fc 01       	movw	r30, r24
    2772:	20 81       	ld	r18, Z
    2774:	8c 81       	ldd	r24, Y+4	; 0x04
    2776:	9d 81       	ldd	r25, Y+5	; 0x05
    2778:	fc 01       	movw	r30, r24
    277a:	20 83       	st	Z, r18
	}
	
	timer->stopTimer();
    277c:	8a 81       	ldd	r24, Y+2	; 0x02
    277e:	9b 81       	ldd	r25, Y+3	; 0x03
    2780:	fc 01       	movw	r30, r24
    2782:	87 81       	ldd	r24, Z+7	; 0x07
    2784:	90 85       	ldd	r25, Z+8	; 0x08
    2786:	0e 94 e9 42 	call	0x85d2	; 0x85d2 <_ZN10helicopter4util5Timer9stopTimerEv>
	
	return 0;
    278a:	80 e0       	ldi	r24, 0x00	; 0
    278c:	90 e0       	ldi	r25, 0x00	; 0
    278e:	0f 90       	pop	r0
    2790:	0f 90       	pop	r0
    2792:	0f 90       	pop	r0
    2794:	0f 90       	pop	r0
    2796:	0f 90       	pop	r0
    2798:	df 91       	pop	r29
    279a:	cf 91       	pop	r28
    279c:	08 95       	ret

0000279e <_ZN10helicopter5tasks4TaskD1Ev>:
				 * @param period The number of scheduler 'ticks' to be executed before
				 * this task is ready to run.
				 */
				Task (int delay, int period);
				
				virtual ~Task(){}
    279e:	cf 93       	push	r28
    27a0:	df 93       	push	r29
    27a2:	1f 92       	push	r1
    27a4:	1f 92       	push	r1
    27a6:	cd b7       	in	r28, 0x3d	; 61
    27a8:	de b7       	in	r29, 0x3e	; 62
    27aa:	9a 83       	std	Y+2, r25	; 0x02
    27ac:	89 83       	std	Y+1, r24	; 0x01
    27ae:	89 81       	ldd	r24, Y+1	; 0x01
    27b0:	9a 81       	ldd	r25, Y+2	; 0x02
    27b2:	22 e8       	ldi	r18, 0x82	; 130
    27b4:	32 e0       	ldi	r19, 0x02	; 2
    27b6:	fc 01       	movw	r30, r24
    27b8:	31 83       	std	Z+1, r19	; 0x01
    27ba:	20 83       	st	Z, r18
    27bc:	80 e0       	ldi	r24, 0x00	; 0
    27be:	90 e0       	ldi	r25, 0x00	; 0
    27c0:	81 70       	andi	r24, 0x01	; 1
    27c2:	99 27       	eor	r25, r25
    27c4:	00 97       	sbiw	r24, 0x00	; 0
    27c6:	21 f0       	breq	.+8      	; 0x27d0 <_ZN10helicopter5tasks4TaskD1Ev+0x32>
    27c8:	89 81       	ldd	r24, Y+1	; 0x01
    27ca:	9a 81       	ldd	r25, Y+2	; 0x02
    27cc:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    27d0:	0f 90       	pop	r0
    27d2:	0f 90       	pop	r0
    27d4:	df 91       	pop	r29
    27d6:	cf 91       	pop	r28
    27d8:	08 95       	ret

000027da <_ZN10helicopter5tasks4TaskD0Ev>:
    27da:	cf 93       	push	r28
    27dc:	df 93       	push	r29
    27de:	1f 92       	push	r1
    27e0:	1f 92       	push	r1
    27e2:	cd b7       	in	r28, 0x3d	; 61
    27e4:	de b7       	in	r29, 0x3e	; 62
    27e6:	9a 83       	std	Y+2, r25	; 0x02
    27e8:	89 83       	std	Y+1, r24	; 0x01
    27ea:	89 81       	ldd	r24, Y+1	; 0x01
    27ec:	9a 81       	ldd	r25, Y+2	; 0x02
    27ee:	0e 94 cf 13 	call	0x279e	; 0x279e <_ZN10helicopter5tasks4TaskD1Ev>
    27f2:	89 81       	ldd	r24, Y+1	; 0x01
    27f4:	9a 81       	ldd	r25, Y+2	; 0x02
    27f6:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    27fa:	0f 90       	pop	r0
    27fc:	0f 90       	pop	r0
    27fe:	df 91       	pop	r29
    2800:	cf 91       	pop	r28
    2802:	08 95       	ret

00002804 <_ZN10helicopter5tasks12FlashLEDTaskC1Eiii>:
					
				int ledToBlink;
				
			public:

			FlashLEDTask (int delay, int period, int ledToBlink = BLUELED) : 
    2804:	cf 93       	push	r28
    2806:	df 93       	push	r29
    2808:	cd b7       	in	r28, 0x3d	; 61
    280a:	de b7       	in	r29, 0x3e	; 62
    280c:	28 97       	sbiw	r28, 0x08	; 8
    280e:	0f b6       	in	r0, 0x3f	; 63
    2810:	f8 94       	cli
    2812:	de bf       	out	0x3e, r29	; 62
    2814:	0f be       	out	0x3f, r0	; 63
    2816:	cd bf       	out	0x3d, r28	; 61
    2818:	9a 83       	std	Y+2, r25	; 0x02
    281a:	89 83       	std	Y+1, r24	; 0x01
    281c:	7c 83       	std	Y+4, r23	; 0x04
    281e:	6b 83       	std	Y+3, r22	; 0x03
    2820:	5e 83       	std	Y+6, r21	; 0x06
    2822:	4d 83       	std	Y+5, r20	; 0x05
    2824:	38 87       	std	Y+8, r19	; 0x08
    2826:	2f 83       	std	Y+7, r18	; 0x07
				Task(delay, period),
				isOff(false),
				ledToBlink(ledToBlink)
    2828:	89 81       	ldd	r24, Y+1	; 0x01
    282a:	9a 81       	ldd	r25, Y+2	; 0x02
    282c:	4d 81       	ldd	r20, Y+5	; 0x05
    282e:	5e 81       	ldd	r21, Y+6	; 0x06
    2830:	2b 81       	ldd	r18, Y+3	; 0x03
    2832:	3c 81       	ldd	r19, Y+4	; 0x04
    2834:	b9 01       	movw	r22, r18
    2836:	0e 94 16 3c 	call	0x782c	; 0x782c <_ZN10helicopter5tasks4TaskC1Eii>
    283a:	89 81       	ldd	r24, Y+1	; 0x01
    283c:	9a 81       	ldd	r25, Y+2	; 0x02
    283e:	28 e1       	ldi	r18, 0x18	; 24
    2840:	32 e0       	ldi	r19, 0x02	; 2
    2842:	fc 01       	movw	r30, r24
    2844:	31 83       	std	Z+1, r19	; 0x01
    2846:	20 83       	st	Z, r18
    2848:	89 81       	ldd	r24, Y+1	; 0x01
    284a:	9a 81       	ldd	r25, Y+2	; 0x02
    284c:	fc 01       	movw	r30, r24
    284e:	17 82       	std	Z+7, r1	; 0x07
    2850:	89 81       	ldd	r24, Y+1	; 0x01
    2852:	9a 81       	ldd	r25, Y+2	; 0x02
    2854:	2f 81       	ldd	r18, Y+7	; 0x07
    2856:	38 85       	ldd	r19, Y+8	; 0x08
    2858:	fc 01       	movw	r30, r24
    285a:	31 87       	std	Z+9, r19	; 0x09
    285c:	20 87       	std	Z+8, r18	; 0x08
			{
					
			}
    285e:	28 96       	adiw	r28, 0x08	; 8
    2860:	0f b6       	in	r0, 0x3f	; 63
    2862:	f8 94       	cli
    2864:	de bf       	out	0x3e, r29	; 62
    2866:	0f be       	out	0x3f, r0	; 63
    2868:	cd bf       	out	0x3d, r28	; 61
    286a:	df 91       	pop	r29
    286c:	cf 91       	pop	r28
    286e:	08 95       	ret

00002870 <_ZN10helicopter5tasks12FlashLEDTask4initEv>:
	
			void init()
    2870:	cf 93       	push	r28
    2872:	df 93       	push	r29
    2874:	1f 92       	push	r1
    2876:	1f 92       	push	r1
    2878:	cd b7       	in	r28, 0x3d	; 61
    287a:	de b7       	in	r29, 0x3e	; 62
    287c:	9a 83       	std	Y+2, r25	; 0x02
    287e:	89 83       	std	Y+1, r24	; 0x01
			{
				DDRA |= (1<<ledToBlink);
    2880:	81 e2       	ldi	r24, 0x21	; 33
    2882:	90 e0       	ldi	r25, 0x00	; 0
    2884:	21 e2       	ldi	r18, 0x21	; 33
    2886:	30 e0       	ldi	r19, 0x00	; 0
    2888:	f9 01       	movw	r30, r18
    288a:	20 81       	ld	r18, Z
    288c:	62 2f       	mov	r22, r18
    288e:	29 81       	ldd	r18, Y+1	; 0x01
    2890:	3a 81       	ldd	r19, Y+2	; 0x02
    2892:	f9 01       	movw	r30, r18
    2894:	40 85       	ldd	r20, Z+8	; 0x08
    2896:	51 85       	ldd	r21, Z+9	; 0x09
    2898:	21 e0       	ldi	r18, 0x01	; 1
    289a:	30 e0       	ldi	r19, 0x00	; 0
    289c:	04 2e       	mov	r0, r20
    289e:	02 c0       	rjmp	.+4      	; 0x28a4 <_ZN10helicopter5tasks12FlashLEDTask4initEv+0x34>
    28a0:	22 0f       	add	r18, r18
    28a2:	33 1f       	adc	r19, r19
    28a4:	0a 94       	dec	r0
    28a6:	e2 f7       	brpl	.-8      	; 0x28a0 <_ZN10helicopter5tasks12FlashLEDTask4initEv+0x30>
    28a8:	26 2b       	or	r18, r22
    28aa:	fc 01       	movw	r30, r24
    28ac:	20 83       	st	Z, r18
			}
    28ae:	0f 90       	pop	r0
    28b0:	0f 90       	pop	r0
    28b2:	df 91       	pop	r29
    28b4:	cf 91       	pop	r28
    28b6:	08 95       	ret

000028b8 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv>:
	
			/**
				* Flashes the LED
				*/
			void runTaskImpl() {
    28b8:	cf 93       	push	r28
    28ba:	df 93       	push	r29
    28bc:	1f 92       	push	r1
    28be:	1f 92       	push	r1
    28c0:	cd b7       	in	r28, 0x3d	; 61
    28c2:	de b7       	in	r29, 0x3e	; 62
    28c4:	9a 83       	std	Y+2, r25	; 0x02
    28c6:	89 83       	std	Y+1, r24	; 0x01
				if (isOff)
    28c8:	89 81       	ldd	r24, Y+1	; 0x01
    28ca:	9a 81       	ldd	r25, Y+2	; 0x02
    28cc:	fc 01       	movw	r30, r24
    28ce:	87 81       	ldd	r24, Z+7	; 0x07
    28d0:	88 23       	and	r24, r24
    28d2:	e9 f0       	breq	.+58     	; 0x290e <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x56>
				{
					//Turn On the LED
					PORTA &= ~(1<<ledToBlink);
    28d4:	82 e2       	ldi	r24, 0x22	; 34
    28d6:	90 e0       	ldi	r25, 0x00	; 0
    28d8:	22 e2       	ldi	r18, 0x22	; 34
    28da:	30 e0       	ldi	r19, 0x00	; 0
    28dc:	f9 01       	movw	r30, r18
    28de:	20 81       	ld	r18, Z
    28e0:	62 2f       	mov	r22, r18
    28e2:	29 81       	ldd	r18, Y+1	; 0x01
    28e4:	3a 81       	ldd	r19, Y+2	; 0x02
    28e6:	f9 01       	movw	r30, r18
    28e8:	40 85       	ldd	r20, Z+8	; 0x08
    28ea:	51 85       	ldd	r21, Z+9	; 0x09
    28ec:	21 e0       	ldi	r18, 0x01	; 1
    28ee:	30 e0       	ldi	r19, 0x00	; 0
    28f0:	04 2e       	mov	r0, r20
    28f2:	02 c0       	rjmp	.+4      	; 0x28f8 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x40>
    28f4:	22 0f       	add	r18, r18
    28f6:	33 1f       	adc	r19, r19
    28f8:	0a 94       	dec	r0
    28fa:	e2 f7       	brpl	.-8      	; 0x28f4 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x3c>
    28fc:	20 95       	com	r18
    28fe:	26 23       	and	r18, r22
    2900:	fc 01       	movw	r30, r24
    2902:	20 83       	st	Z, r18
					isOff = false;
    2904:	89 81       	ldd	r24, Y+1	; 0x01
    2906:	9a 81       	ldd	r25, Y+2	; 0x02
    2908:	fc 01       	movw	r30, r24
    290a:	17 82       	std	Z+7, r1	; 0x07
    290c:	1c c0       	rjmp	.+56     	; 0x2946 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x8e>
				}else
				{
					//Turn Off the LED
					PORTA |= (1<<ledToBlink);
    290e:	82 e2       	ldi	r24, 0x22	; 34
    2910:	90 e0       	ldi	r25, 0x00	; 0
    2912:	22 e2       	ldi	r18, 0x22	; 34
    2914:	30 e0       	ldi	r19, 0x00	; 0
    2916:	f9 01       	movw	r30, r18
    2918:	20 81       	ld	r18, Z
    291a:	62 2f       	mov	r22, r18
    291c:	29 81       	ldd	r18, Y+1	; 0x01
    291e:	3a 81       	ldd	r19, Y+2	; 0x02
    2920:	f9 01       	movw	r30, r18
    2922:	40 85       	ldd	r20, Z+8	; 0x08
    2924:	51 85       	ldd	r21, Z+9	; 0x09
    2926:	21 e0       	ldi	r18, 0x01	; 1
    2928:	30 e0       	ldi	r19, 0x00	; 0
    292a:	04 2e       	mov	r0, r20
    292c:	02 c0       	rjmp	.+4      	; 0x2932 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x7a>
    292e:	22 0f       	add	r18, r18
    2930:	33 1f       	adc	r19, r19
    2932:	0a 94       	dec	r0
    2934:	e2 f7       	brpl	.-8      	; 0x292e <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x76>
    2936:	26 2b       	or	r18, r22
    2938:	fc 01       	movw	r30, r24
    293a:	20 83       	st	Z, r18
					isOff = true;
    293c:	89 81       	ldd	r24, Y+1	; 0x01
    293e:	9a 81       	ldd	r25, Y+2	; 0x02
    2940:	21 e0       	ldi	r18, 0x01	; 1
    2942:	fc 01       	movw	r30, r24
    2944:	27 83       	std	Z+7, r18	; 0x07
				}
			}
    2946:	0f 90       	pop	r0
    2948:	0f 90       	pop	r0
    294a:	df 91       	pop	r29
    294c:	cf 91       	pop	r28
    294e:	08 95       	ret

00002950 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEv>:
				 * Detects if the processing was completed before the next scheduler triggered.
				 * @return True if the scheduler timer triggered again before the tasks were fully processes,
				 * False if all the tasks were finished processing (i.e. the dispatch method finished) before
				 * the timer triggered again.
				 */
				bool hasBlownFrame()
    2950:	cf 93       	push	r28
    2952:	df 93       	push	r29
    2954:	1f 92       	push	r1
    2956:	1f 92       	push	r1
    2958:	cd b7       	in	r28, 0x3d	; 61
    295a:	de b7       	in	r29, 0x3e	; 62
    295c:	9a 83       	std	Y+2, r25	; 0x02
    295e:	89 83       	std	Y+1, r24	; 0x01
				{
					return blowFrameDetected;
    2960:	89 81       	ldd	r24, Y+1	; 0x01
    2962:	9a 81       	ldd	r25, Y+2	; 0x02
    2964:	fc 01       	movw	r30, r24
    2966:	82 8d       	ldd	r24, Z+26	; 0x1a
				}
    2968:	0f 90       	pop	r0
    296a:	0f 90       	pop	r0
    296c:	df 91       	pop	r29
    296e:	cf 91       	pop	r28
    2970:	08 95       	ret

00002972 <_ZN10helicopter4util5TimerC1Em9PRESCALERm>:
				 * @timeoutMilliseconds the milliseconds that should go by before the
				 * timer times out. This value must be under 1000.
				 * These variables will have to adhere to this equation:
				 * OCR = ((cpuSpeed /  timerPrescaler) / frequency)
				 */
				Timer (unsigned long cpuSpeed, PRESCALER timerPrescaler, unsigned long timeoutMilliseconds):
    2972:	ef 92       	push	r14
    2974:	ff 92       	push	r15
    2976:	0f 93       	push	r16
    2978:	1f 93       	push	r17
    297a:	cf 93       	push	r28
    297c:	df 93       	push	r29
    297e:	cd b7       	in	r28, 0x3d	; 61
    2980:	de b7       	in	r29, 0x3e	; 62
    2982:	2c 97       	sbiw	r28, 0x0c	; 12
    2984:	0f b6       	in	r0, 0x3f	; 63
    2986:	f8 94       	cli
    2988:	de bf       	out	0x3e, r29	; 62
    298a:	0f be       	out	0x3f, r0	; 63
    298c:	cd bf       	out	0x3d, r28	; 61
    298e:	9a 83       	std	Y+2, r25	; 0x02
    2990:	89 83       	std	Y+1, r24	; 0x01
    2992:	4b 83       	std	Y+3, r20	; 0x03
    2994:	5c 83       	std	Y+4, r21	; 0x04
    2996:	6d 83       	std	Y+5, r22	; 0x05
    2998:	7e 83       	std	Y+6, r23	; 0x06
    299a:	38 87       	std	Y+8, r19	; 0x08
    299c:	2f 83       	std	Y+7, r18	; 0x07
    299e:	e9 86       	std	Y+9, r14	; 0x09
    29a0:	fa 86       	std	Y+10, r15	; 0x0a
    29a2:	0b 87       	std	Y+11, r16	; 0x0b
    29a4:	1c 87       	std	Y+12, r17	; 0x0c
					cpuSpeed(cpuSpeed), timerPrescaler(timerPrescaler), timeoutMilliseconds(timeoutMilliseconds)
    29a6:	29 81       	ldd	r18, Y+1	; 0x01
    29a8:	3a 81       	ldd	r19, Y+2	; 0x02
    29aa:	8b 81       	ldd	r24, Y+3	; 0x03
    29ac:	9c 81       	ldd	r25, Y+4	; 0x04
    29ae:	ad 81       	ldd	r26, Y+5	; 0x05
    29b0:	be 81       	ldd	r27, Y+6	; 0x06
    29b2:	f9 01       	movw	r30, r18
    29b4:	80 83       	st	Z, r24
    29b6:	91 83       	std	Z+1, r25	; 0x01
    29b8:	a2 83       	std	Z+2, r26	; 0x02
    29ba:	b3 83       	std	Z+3, r27	; 0x03
    29bc:	89 81       	ldd	r24, Y+1	; 0x01
    29be:	9a 81       	ldd	r25, Y+2	; 0x02
    29c0:	2f 81       	ldd	r18, Y+7	; 0x07
    29c2:	38 85       	ldd	r19, Y+8	; 0x08
    29c4:	fc 01       	movw	r30, r24
    29c6:	35 83       	std	Z+5, r19	; 0x05
    29c8:	24 83       	std	Z+4, r18	; 0x04
    29ca:	29 85       	ldd	r18, Y+9	; 0x09
    29cc:	3a 85       	ldd	r19, Y+10	; 0x0a
    29ce:	89 81       	ldd	r24, Y+1	; 0x01
    29d0:	9a 81       	ldd	r25, Y+2	; 0x02
    29d2:	fc 01       	movw	r30, r24
    29d4:	37 83       	std	Z+7, r19	; 0x07
    29d6:	26 83       	std	Z+6, r18	; 0x06
					{
						
					}
    29d8:	2c 96       	adiw	r28, 0x0c	; 12
    29da:	0f b6       	in	r0, 0x3f	; 63
    29dc:	f8 94       	cli
    29de:	de bf       	out	0x3e, r29	; 62
    29e0:	0f be       	out	0x3f, r0	; 63
    29e2:	cd bf       	out	0x3d, r28	; 61
    29e4:	df 91       	pop	r29
    29e6:	cf 91       	pop	r28
    29e8:	1f 91       	pop	r17
    29ea:	0f 91       	pop	r16
    29ec:	ff 90       	pop	r15
    29ee:	ef 90       	pop	r14
    29f0:	08 95       	ret

000029f2 <_ZN10helicopter7drivers12SerialDriverC1EmNS1_8UartPortEPNS_4util5TimerEbb>:
				 * only used when enableTimeout = true.
				 * @param enableTimeout Bool indicating if the system should timeout
				 * while waiting to send or receive data. True by default so that the
				 * driver will timeout if it can't send or receive data after a short timeout period.
				 */		
				SerialDriver(
    29f2:	cf 92       	push	r12
    29f4:	ef 92       	push	r14
    29f6:	0f 93       	push	r16
    29f8:	1f 93       	push	r17
    29fa:	cf 93       	push	r28
    29fc:	df 93       	push	r29
    29fe:	cd b7       	in	r28, 0x3d	; 61
    2a00:	de b7       	in	r29, 0x3e	; 62
    2a02:	2b 97       	sbiw	r28, 0x0b	; 11
    2a04:	0f b6       	in	r0, 0x3f	; 63
    2a06:	f8 94       	cli
    2a08:	de bf       	out	0x3e, r29	; 62
    2a0a:	0f be       	out	0x3f, r0	; 63
    2a0c:	cd bf       	out	0x3d, r28	; 61
    2a0e:	9a 83       	std	Y+2, r25	; 0x02
    2a10:	89 83       	std	Y+1, r24	; 0x01
    2a12:	4b 83       	std	Y+3, r20	; 0x03
    2a14:	5c 83       	std	Y+4, r21	; 0x04
    2a16:	6d 83       	std	Y+5, r22	; 0x05
    2a18:	7e 83       	std	Y+6, r23	; 0x06
    2a1a:	2f 83       	std	Y+7, r18	; 0x07
    2a1c:	19 87       	std	Y+9, r17	; 0x09
    2a1e:	08 87       	std	Y+8, r16	; 0x08
    2a20:	ea 86       	std	Y+10, r14	; 0x0a
    2a22:	cb 86       	std	Y+11, r12	; 0x0b
					bool useDoubleSpeedMode = false) :
				baudRate(baudRate),
				uartPort(uartPort),
				timer(timer),
				isTimeoutEnabled(enableTimeout),
				useDoubleSpeedMode(useDoubleSpeedMode)
    2a24:	89 81       	ldd	r24, Y+1	; 0x01
    2a26:	9a 81       	ldd	r25, Y+2	; 0x02
    2a28:	2a e0       	ldi	r18, 0x0A	; 10
    2a2a:	32 e0       	ldi	r19, 0x02	; 2
    2a2c:	fc 01       	movw	r30, r24
    2a2e:	31 83       	std	Z+1, r19	; 0x01
    2a30:	20 83       	st	Z, r18
    2a32:	29 81       	ldd	r18, Y+1	; 0x01
    2a34:	3a 81       	ldd	r19, Y+2	; 0x02
    2a36:	8b 81       	ldd	r24, Y+3	; 0x03
    2a38:	9c 81       	ldd	r25, Y+4	; 0x04
    2a3a:	ad 81       	ldd	r26, Y+5	; 0x05
    2a3c:	be 81       	ldd	r27, Y+6	; 0x06
    2a3e:	f9 01       	movw	r30, r18
    2a40:	82 83       	std	Z+2, r24	; 0x02
    2a42:	93 83       	std	Z+3, r25	; 0x03
    2a44:	a4 83       	std	Z+4, r26	; 0x04
    2a46:	b5 83       	std	Z+5, r27	; 0x05
    2a48:	89 81       	ldd	r24, Y+1	; 0x01
    2a4a:	9a 81       	ldd	r25, Y+2	; 0x02
    2a4c:	2f 81       	ldd	r18, Y+7	; 0x07
    2a4e:	fc 01       	movw	r30, r24
    2a50:	26 83       	std	Z+6, r18	; 0x06
    2a52:	89 81       	ldd	r24, Y+1	; 0x01
    2a54:	9a 81       	ldd	r25, Y+2	; 0x02
    2a56:	28 85       	ldd	r18, Y+8	; 0x08
    2a58:	39 85       	ldd	r19, Y+9	; 0x09
    2a5a:	fc 01       	movw	r30, r24
    2a5c:	30 87       	std	Z+8, r19	; 0x08
    2a5e:	27 83       	std	Z+7, r18	; 0x07
    2a60:	89 81       	ldd	r24, Y+1	; 0x01
    2a62:	9a 81       	ldd	r25, Y+2	; 0x02
    2a64:	2a 85       	ldd	r18, Y+10	; 0x0a
    2a66:	fc 01       	movw	r30, r24
    2a68:	21 87       	std	Z+9, r18	; 0x09
    2a6a:	89 81       	ldd	r24, Y+1	; 0x01
    2a6c:	9a 81       	ldd	r25, Y+2	; 0x02
    2a6e:	2b 85       	ldd	r18, Y+11	; 0x0b
    2a70:	fc 01       	movw	r30, r24
    2a72:	22 87       	std	Z+10, r18	; 0x0a
				{
					
				}
    2a74:	2b 96       	adiw	r28, 0x0b	; 11
    2a76:	0f b6       	in	r0, 0x3f	; 63
    2a78:	f8 94       	cli
    2a7a:	de bf       	out	0x3e, r29	; 62
    2a7c:	0f be       	out	0x3f, r0	; 63
    2a7e:	cd bf       	out	0x3d, r28	; 61
    2a80:	df 91       	pop	r29
    2a82:	cf 91       	pop	r28
    2a84:	1f 91       	pop	r17
    2a86:	0f 91       	pop	r16
    2a88:	ef 90       	pop	r14
    2a8a:	cf 90       	pop	r12
    2a8c:	08 95       	ret

00002a8e <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverE>:
				 * at the same time interval (i.e. 20 milliseconds) for both transmitting a byte as well
				 * as receiving a byte.
				 * @param serialDriver the driver used to communicate with the serial port
				 * which is used to communicate with the Ground Control Station.
				 */
				GroundControlStationInterface(SerialDriver *serialDriver):
    2a8e:	cf 93       	push	r28
    2a90:	df 93       	push	r29
    2a92:	00 d0       	rcall	.+0      	; 0x2a94 <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverE+0x6>
    2a94:	1f 92       	push	r1
    2a96:	cd b7       	in	r28, 0x3d	; 61
    2a98:	de b7       	in	r29, 0x3e	; 62
    2a9a:	9a 83       	std	Y+2, r25	; 0x02
    2a9c:	89 83       	std	Y+1, r24	; 0x01
    2a9e:	7c 83       	std	Y+4, r23	; 0x04
    2aa0:	6b 83       	std	Y+3, r22	; 0x03
					serialDriver(serialDriver)
    2aa2:	89 81       	ldd	r24, Y+1	; 0x01
    2aa4:	9a 81       	ldd	r25, Y+2	; 0x02
    2aa6:	2b 81       	ldd	r18, Y+3	; 0x03
    2aa8:	3c 81       	ldd	r19, Y+4	; 0x04
    2aaa:	fc 01       	movw	r30, r24
    2aac:	31 83       	std	Z+1, r19	; 0x01
    2aae:	20 83       	st	Z, r18
					{}
    2ab0:	0f 90       	pop	r0
    2ab2:	0f 90       	pop	r0
    2ab4:	0f 90       	pop	r0
    2ab6:	0f 90       	pop	r0
    2ab8:	df 91       	pop	r29
    2aba:	cf 91       	pop	r28
    2abc:	08 95       	ret

00002abe <_ZN10helicopter5model11SystemModelC1Ev>:
			
			public:
			
			float EcefToLocalNEDRotationMatrix[3][3];
			
			SystemModel():
    2abe:	cf 93       	push	r28
    2ac0:	df 93       	push	r29
    2ac2:	1f 92       	push	r1
    2ac4:	1f 92       	push	r1
    2ac6:	cd b7       	in	r28, 0x3d	; 61
    2ac8:	de b7       	in	r29, 0x3e	; 62
    2aca:	9a 83       	std	Y+2, r25	; 0x02
    2acc:	89 83       	std	Y+1, r24	; 0x01
				checksumErrors(0),
				numOfFramesBlown(0),
				
				initialXPositionEcef(0),
				initialYPositionEcef(0),
				initialZPositionEcef(0)
    2ace:	89 81       	ldd	r24, Y+1	; 0x01
    2ad0:	9a 81       	ldd	r25, Y+2	; 0x02
    2ad2:	fc 01       	movw	r30, r24
    2ad4:	10 82       	st	Z, r1
    2ad6:	11 82       	std	Z+1, r1	; 0x01
    2ad8:	12 82       	std	Z+2, r1	; 0x02
    2ada:	13 82       	std	Z+3, r1	; 0x03
    2adc:	89 81       	ldd	r24, Y+1	; 0x01
    2ade:	9a 81       	ldd	r25, Y+2	; 0x02
    2ae0:	fc 01       	movw	r30, r24
    2ae2:	14 82       	std	Z+4, r1	; 0x04
    2ae4:	15 82       	std	Z+5, r1	; 0x05
    2ae6:	16 82       	std	Z+6, r1	; 0x06
    2ae8:	17 82       	std	Z+7, r1	; 0x07
    2aea:	89 81       	ldd	r24, Y+1	; 0x01
    2aec:	9a 81       	ldd	r25, Y+2	; 0x02
    2aee:	fc 01       	movw	r30, r24
    2af0:	10 86       	std	Z+8, r1	; 0x08
    2af2:	11 86       	std	Z+9, r1	; 0x09
    2af4:	12 86       	std	Z+10, r1	; 0x0a
    2af6:	13 86       	std	Z+11, r1	; 0x0b
    2af8:	89 81       	ldd	r24, Y+1	; 0x01
    2afa:	9a 81       	ldd	r25, Y+2	; 0x02
    2afc:	fc 01       	movw	r30, r24
    2afe:	14 86       	std	Z+12, r1	; 0x0c
    2b00:	15 86       	std	Z+13, r1	; 0x0d
    2b02:	16 86       	std	Z+14, r1	; 0x0e
    2b04:	17 86       	std	Z+15, r1	; 0x0f
    2b06:	89 81       	ldd	r24, Y+1	; 0x01
    2b08:	9a 81       	ldd	r25, Y+2	; 0x02
    2b0a:	fc 01       	movw	r30, r24
    2b0c:	10 8a       	std	Z+16, r1	; 0x10
    2b0e:	11 8a       	std	Z+17, r1	; 0x11
    2b10:	12 8a       	std	Z+18, r1	; 0x12
    2b12:	13 8a       	std	Z+19, r1	; 0x13
    2b14:	89 81       	ldd	r24, Y+1	; 0x01
    2b16:	9a 81       	ldd	r25, Y+2	; 0x02
    2b18:	fc 01       	movw	r30, r24
    2b1a:	14 8a       	std	Z+20, r1	; 0x14
    2b1c:	15 8a       	std	Z+21, r1	; 0x15
    2b1e:	16 8a       	std	Z+22, r1	; 0x16
    2b20:	17 8a       	std	Z+23, r1	; 0x17
    2b22:	89 81       	ldd	r24, Y+1	; 0x01
    2b24:	9a 81       	ldd	r25, Y+2	; 0x02
    2b26:	fc 01       	movw	r30, r24
    2b28:	10 8e       	std	Z+24, r1	; 0x18
    2b2a:	11 8e       	std	Z+25, r1	; 0x19
    2b2c:	12 8e       	std	Z+26, r1	; 0x1a
    2b2e:	13 8e       	std	Z+27, r1	; 0x1b
    2b30:	89 81       	ldd	r24, Y+1	; 0x01
    2b32:	9a 81       	ldd	r25, Y+2	; 0x02
    2b34:	fc 01       	movw	r30, r24
    2b36:	14 8e       	std	Z+28, r1	; 0x1c
    2b38:	15 8e       	std	Z+29, r1	; 0x1d
    2b3a:	16 8e       	std	Z+30, r1	; 0x1e
    2b3c:	17 8e       	std	Z+31, r1	; 0x1f
    2b3e:	89 81       	ldd	r24, Y+1	; 0x01
    2b40:	9a 81       	ldd	r25, Y+2	; 0x02
    2b42:	fc 01       	movw	r30, r24
    2b44:	10 a2       	std	Z+32, r1	; 0x20
    2b46:	11 a2       	std	Z+33, r1	; 0x21
    2b48:	12 a2       	std	Z+34, r1	; 0x22
    2b4a:	13 a2       	std	Z+35, r1	; 0x23
    2b4c:	89 81       	ldd	r24, Y+1	; 0x01
    2b4e:	9a 81       	ldd	r25, Y+2	; 0x02
    2b50:	fc 01       	movw	r30, r24
    2b52:	14 a2       	std	Z+36, r1	; 0x24
    2b54:	15 a2       	std	Z+37, r1	; 0x25
    2b56:	16 a2       	std	Z+38, r1	; 0x26
    2b58:	17 a2       	std	Z+39, r1	; 0x27
    2b5a:	89 81       	ldd	r24, Y+1	; 0x01
    2b5c:	9a 81       	ldd	r25, Y+2	; 0x02
    2b5e:	fc 01       	movw	r30, r24
    2b60:	10 a6       	std	Z+40, r1	; 0x28
    2b62:	11 a6       	std	Z+41, r1	; 0x29
    2b64:	12 a6       	std	Z+42, r1	; 0x2a
    2b66:	13 a6       	std	Z+43, r1	; 0x2b
    2b68:	89 81       	ldd	r24, Y+1	; 0x01
    2b6a:	9a 81       	ldd	r25, Y+2	; 0x02
    2b6c:	fc 01       	movw	r30, r24
    2b6e:	14 a6       	std	Z+44, r1	; 0x2c
    2b70:	15 a6       	std	Z+45, r1	; 0x2d
    2b72:	16 a6       	std	Z+46, r1	; 0x2e
    2b74:	17 a6       	std	Z+47, r1	; 0x2f
    2b76:	89 81       	ldd	r24, Y+1	; 0x01
    2b78:	9a 81       	ldd	r25, Y+2	; 0x02
    2b7a:	fc 01       	movw	r30, r24
    2b7c:	10 aa       	std	Z+48, r1	; 0x30
    2b7e:	11 aa       	std	Z+49, r1	; 0x31
    2b80:	12 aa       	std	Z+50, r1	; 0x32
    2b82:	13 aa       	std	Z+51, r1	; 0x33
    2b84:	89 81       	ldd	r24, Y+1	; 0x01
    2b86:	9a 81       	ldd	r25, Y+2	; 0x02
    2b88:	fc 01       	movw	r30, r24
    2b8a:	14 aa       	std	Z+52, r1	; 0x34
    2b8c:	15 aa       	std	Z+53, r1	; 0x35
    2b8e:	16 aa       	std	Z+54, r1	; 0x36
    2b90:	17 aa       	std	Z+55, r1	; 0x37
    2b92:	89 81       	ldd	r24, Y+1	; 0x01
    2b94:	9a 81       	ldd	r25, Y+2	; 0x02
    2b96:	fc 01       	movw	r30, r24
    2b98:	10 ae       	std	Z+56, r1	; 0x38
    2b9a:	11 ae       	std	Z+57, r1	; 0x39
    2b9c:	12 ae       	std	Z+58, r1	; 0x3a
    2b9e:	13 ae       	std	Z+59, r1	; 0x3b
    2ba0:	89 81       	ldd	r24, Y+1	; 0x01
    2ba2:	9a 81       	ldd	r25, Y+2	; 0x02
    2ba4:	fc 01       	movw	r30, r24
    2ba6:	14 ae       	std	Z+60, r1	; 0x3c
    2ba8:	15 ae       	std	Z+61, r1	; 0x3d
    2baa:	16 ae       	std	Z+62, r1	; 0x3e
    2bac:	17 ae       	std	Z+63, r1	; 0x3f
    2bae:	89 81       	ldd	r24, Y+1	; 0x01
    2bb0:	9a 81       	ldd	r25, Y+2	; 0x02
    2bb2:	80 5c       	subi	r24, 0xC0	; 192
    2bb4:	9f 4f       	sbci	r25, 0xFF	; 255
    2bb6:	fc 01       	movw	r30, r24
    2bb8:	10 82       	st	Z, r1
    2bba:	11 82       	std	Z+1, r1	; 0x01
    2bbc:	12 82       	std	Z+2, r1	; 0x02
    2bbe:	13 82       	std	Z+3, r1	; 0x03
    2bc0:	89 81       	ldd	r24, Y+1	; 0x01
    2bc2:	9a 81       	ldd	r25, Y+2	; 0x02
    2bc4:	8c 5b       	subi	r24, 0xBC	; 188
    2bc6:	9f 4f       	sbci	r25, 0xFF	; 255
    2bc8:	fc 01       	movw	r30, r24
    2bca:	10 82       	st	Z, r1
    2bcc:	11 82       	std	Z+1, r1	; 0x01
    2bce:	12 82       	std	Z+2, r1	; 0x02
    2bd0:	13 82       	std	Z+3, r1	; 0x03
    2bd2:	89 81       	ldd	r24, Y+1	; 0x01
    2bd4:	9a 81       	ldd	r25, Y+2	; 0x02
    2bd6:	88 5b       	subi	r24, 0xB8	; 184
    2bd8:	9f 4f       	sbci	r25, 0xFF	; 255
    2bda:	fc 01       	movw	r30, r24
    2bdc:	10 82       	st	Z, r1
    2bde:	11 82       	std	Z+1, r1	; 0x01
    2be0:	12 82       	std	Z+2, r1	; 0x02
    2be2:	13 82       	std	Z+3, r1	; 0x03
    2be4:	89 81       	ldd	r24, Y+1	; 0x01
    2be6:	9a 81       	ldd	r25, Y+2	; 0x02
    2be8:	84 5b       	subi	r24, 0xB4	; 180
    2bea:	9f 4f       	sbci	r25, 0xFF	; 255
    2bec:	fc 01       	movw	r30, r24
    2bee:	10 82       	st	Z, r1
    2bf0:	11 82       	std	Z+1, r1	; 0x01
    2bf2:	12 82       	std	Z+2, r1	; 0x02
    2bf4:	13 82       	std	Z+3, r1	; 0x03
    2bf6:	89 81       	ldd	r24, Y+1	; 0x01
    2bf8:	9a 81       	ldd	r25, Y+2	; 0x02
    2bfa:	80 5b       	subi	r24, 0xB0	; 176
    2bfc:	9f 4f       	sbci	r25, 0xFF	; 255
    2bfe:	fc 01       	movw	r30, r24
    2c00:	10 82       	st	Z, r1
    2c02:	11 82       	std	Z+1, r1	; 0x01
    2c04:	12 82       	std	Z+2, r1	; 0x02
    2c06:	13 82       	std	Z+3, r1	; 0x03
    2c08:	89 81       	ldd	r24, Y+1	; 0x01
    2c0a:	9a 81       	ldd	r25, Y+2	; 0x02
    2c0c:	8c 5a       	subi	r24, 0xAC	; 172
    2c0e:	9f 4f       	sbci	r25, 0xFF	; 255
    2c10:	fc 01       	movw	r30, r24
    2c12:	10 82       	st	Z, r1
    2c14:	11 82       	std	Z+1, r1	; 0x01
    2c16:	12 82       	std	Z+2, r1	; 0x02
    2c18:	13 82       	std	Z+3, r1	; 0x03
    2c1a:	89 81       	ldd	r24, Y+1	; 0x01
    2c1c:	9a 81       	ldd	r25, Y+2	; 0x02
    2c1e:	88 5a       	subi	r24, 0xA8	; 168
    2c20:	9f 4f       	sbci	r25, 0xFF	; 255
    2c22:	fc 01       	movw	r30, r24
    2c24:	10 82       	st	Z, r1
    2c26:	11 82       	std	Z+1, r1	; 0x01
    2c28:	12 82       	std	Z+2, r1	; 0x02
    2c2a:	13 82       	std	Z+3, r1	; 0x03
    2c2c:	89 81       	ldd	r24, Y+1	; 0x01
    2c2e:	9a 81       	ldd	r25, Y+2	; 0x02
    2c30:	84 5a       	subi	r24, 0xA4	; 164
    2c32:	9f 4f       	sbci	r25, 0xFF	; 255
    2c34:	fc 01       	movw	r30, r24
    2c36:	10 82       	st	Z, r1
    2c38:	11 82       	std	Z+1, r1	; 0x01
    2c3a:	12 82       	std	Z+2, r1	; 0x02
    2c3c:	13 82       	std	Z+3, r1	; 0x03
    2c3e:	89 81       	ldd	r24, Y+1	; 0x01
    2c40:	9a 81       	ldd	r25, Y+2	; 0x02
    2c42:	80 5a       	subi	r24, 0xA0	; 160
    2c44:	9f 4f       	sbci	r25, 0xFF	; 255
    2c46:	fc 01       	movw	r30, r24
    2c48:	10 82       	st	Z, r1
    2c4a:	11 82       	std	Z+1, r1	; 0x01
    2c4c:	12 82       	std	Z+2, r1	; 0x02
    2c4e:	13 82       	std	Z+3, r1	; 0x03
    2c50:	89 81       	ldd	r24, Y+1	; 0x01
    2c52:	9a 81       	ldd	r25, Y+2	; 0x02
    2c54:	8c 59       	subi	r24, 0x9C	; 156
    2c56:	9f 4f       	sbci	r25, 0xFF	; 255
    2c58:	fc 01       	movw	r30, r24
    2c5a:	10 82       	st	Z, r1
    2c5c:	11 82       	std	Z+1, r1	; 0x01
    2c5e:	12 82       	std	Z+2, r1	; 0x02
    2c60:	13 82       	std	Z+3, r1	; 0x03
    2c62:	89 81       	ldd	r24, Y+1	; 0x01
    2c64:	9a 81       	ldd	r25, Y+2	; 0x02
    2c66:	88 59       	subi	r24, 0x98	; 152
    2c68:	9f 4f       	sbci	r25, 0xFF	; 255
    2c6a:	fc 01       	movw	r30, r24
    2c6c:	10 82       	st	Z, r1
    2c6e:	11 82       	std	Z+1, r1	; 0x01
    2c70:	12 82       	std	Z+2, r1	; 0x02
    2c72:	13 82       	std	Z+3, r1	; 0x03
    2c74:	89 81       	ldd	r24, Y+1	; 0x01
    2c76:	9a 81       	ldd	r25, Y+2	; 0x02
    2c78:	84 59       	subi	r24, 0x94	; 148
    2c7a:	9f 4f       	sbci	r25, 0xFF	; 255
    2c7c:	fc 01       	movw	r30, r24
    2c7e:	10 82       	st	Z, r1
    2c80:	11 82       	std	Z+1, r1	; 0x01
    2c82:	12 82       	std	Z+2, r1	; 0x02
    2c84:	13 82       	std	Z+3, r1	; 0x03
    2c86:	89 81       	ldd	r24, Y+1	; 0x01
    2c88:	9a 81       	ldd	r25, Y+2	; 0x02
    2c8a:	80 59       	subi	r24, 0x90	; 144
    2c8c:	9f 4f       	sbci	r25, 0xFF	; 255
    2c8e:	fc 01       	movw	r30, r24
    2c90:	10 82       	st	Z, r1
    2c92:	11 82       	std	Z+1, r1	; 0x01
    2c94:	12 82       	std	Z+2, r1	; 0x02
    2c96:	13 82       	std	Z+3, r1	; 0x03
    2c98:	89 81       	ldd	r24, Y+1	; 0x01
    2c9a:	9a 81       	ldd	r25, Y+2	; 0x02
    2c9c:	8c 58       	subi	r24, 0x8C	; 140
    2c9e:	9f 4f       	sbci	r25, 0xFF	; 255
    2ca0:	fc 01       	movw	r30, r24
    2ca2:	10 82       	st	Z, r1
    2ca4:	11 82       	std	Z+1, r1	; 0x01
    2ca6:	12 82       	std	Z+2, r1	; 0x02
    2ca8:	13 82       	std	Z+3, r1	; 0x03
    2caa:	89 81       	ldd	r24, Y+1	; 0x01
    2cac:	9a 81       	ldd	r25, Y+2	; 0x02
    2cae:	88 58       	subi	r24, 0x88	; 136
    2cb0:	9f 4f       	sbci	r25, 0xFF	; 255
    2cb2:	fc 01       	movw	r30, r24
    2cb4:	10 82       	st	Z, r1
    2cb6:	11 82       	std	Z+1, r1	; 0x01
    2cb8:	12 82       	std	Z+2, r1	; 0x02
    2cba:	13 82       	std	Z+3, r1	; 0x03
    2cbc:	89 81       	ldd	r24, Y+1	; 0x01
    2cbe:	9a 81       	ldd	r25, Y+2	; 0x02
    2cc0:	84 58       	subi	r24, 0x84	; 132
    2cc2:	9f 4f       	sbci	r25, 0xFF	; 255
    2cc4:	fc 01       	movw	r30, r24
    2cc6:	10 82       	st	Z, r1
    2cc8:	11 82       	std	Z+1, r1	; 0x01
    2cca:	12 82       	std	Z+2, r1	; 0x02
    2ccc:	13 82       	std	Z+3, r1	; 0x03
    2cce:	89 81       	ldd	r24, Y+1	; 0x01
    2cd0:	9a 81       	ldd	r25, Y+2	; 0x02
    2cd2:	80 58       	subi	r24, 0x80	; 128
    2cd4:	9f 4f       	sbci	r25, 0xFF	; 255
    2cd6:	fc 01       	movw	r30, r24
    2cd8:	10 82       	st	Z, r1
    2cda:	11 82       	std	Z+1, r1	; 0x01
    2cdc:	12 82       	std	Z+2, r1	; 0x02
    2cde:	13 82       	std	Z+3, r1	; 0x03
    2ce0:	89 81       	ldd	r24, Y+1	; 0x01
    2ce2:	9a 81       	ldd	r25, Y+2	; 0x02
    2ce4:	8c 57       	subi	r24, 0x7C	; 124
    2ce6:	9f 4f       	sbci	r25, 0xFF	; 255
    2ce8:	fc 01       	movw	r30, r24
    2cea:	10 82       	st	Z, r1
    2cec:	11 82       	std	Z+1, r1	; 0x01
    2cee:	12 82       	std	Z+2, r1	; 0x02
    2cf0:	13 82       	std	Z+3, r1	; 0x03
    2cf2:	89 81       	ldd	r24, Y+1	; 0x01
    2cf4:	9a 81       	ldd	r25, Y+2	; 0x02
    2cf6:	88 57       	subi	r24, 0x78	; 120
    2cf8:	9f 4f       	sbci	r25, 0xFF	; 255
    2cfa:	fc 01       	movw	r30, r24
    2cfc:	10 82       	st	Z, r1
    2cfe:	11 82       	std	Z+1, r1	; 0x01
    2d00:	12 82       	std	Z+2, r1	; 0x02
    2d02:	13 82       	std	Z+3, r1	; 0x03
    2d04:	89 81       	ldd	r24, Y+1	; 0x01
    2d06:	9a 81       	ldd	r25, Y+2	; 0x02
    2d08:	84 57       	subi	r24, 0x74	; 116
    2d0a:	9f 4f       	sbci	r25, 0xFF	; 255
    2d0c:	fc 01       	movw	r30, r24
    2d0e:	10 82       	st	Z, r1
    2d10:	11 82       	std	Z+1, r1	; 0x01
    2d12:	12 82       	std	Z+2, r1	; 0x02
    2d14:	13 82       	std	Z+3, r1	; 0x03
    2d16:	89 81       	ldd	r24, Y+1	; 0x01
    2d18:	9a 81       	ldd	r25, Y+2	; 0x02
    2d1a:	80 57       	subi	r24, 0x70	; 112
    2d1c:	9f 4f       	sbci	r25, 0xFF	; 255
    2d1e:	fc 01       	movw	r30, r24
    2d20:	10 82       	st	Z, r1
    2d22:	11 82       	std	Z+1, r1	; 0x01
    2d24:	12 82       	std	Z+2, r1	; 0x02
    2d26:	13 82       	std	Z+3, r1	; 0x03
    2d28:	89 81       	ldd	r24, Y+1	; 0x01
    2d2a:	9a 81       	ldd	r25, Y+2	; 0x02
    2d2c:	8c 56       	subi	r24, 0x6C	; 108
    2d2e:	9f 4f       	sbci	r25, 0xFF	; 255
    2d30:	fc 01       	movw	r30, r24
    2d32:	10 82       	st	Z, r1
    2d34:	11 82       	std	Z+1, r1	; 0x01
    2d36:	12 82       	std	Z+2, r1	; 0x02
    2d38:	13 82       	std	Z+3, r1	; 0x03
    2d3a:	89 81       	ldd	r24, Y+1	; 0x01
    2d3c:	9a 81       	ldd	r25, Y+2	; 0x02
    2d3e:	88 56       	subi	r24, 0x68	; 104
    2d40:	9f 4f       	sbci	r25, 0xFF	; 255
    2d42:	fc 01       	movw	r30, r24
    2d44:	10 82       	st	Z, r1
    2d46:	11 82       	std	Z+1, r1	; 0x01
    2d48:	12 82       	std	Z+2, r1	; 0x02
    2d4a:	13 82       	std	Z+3, r1	; 0x03
    2d4c:	89 81       	ldd	r24, Y+1	; 0x01
    2d4e:	9a 81       	ldd	r25, Y+2	; 0x02
    2d50:	84 56       	subi	r24, 0x64	; 100
    2d52:	9f 4f       	sbci	r25, 0xFF	; 255
    2d54:	fc 01       	movw	r30, r24
    2d56:	10 82       	st	Z, r1
    2d58:	11 82       	std	Z+1, r1	; 0x01
    2d5a:	12 82       	std	Z+2, r1	; 0x02
    2d5c:	13 82       	std	Z+3, r1	; 0x03
    2d5e:	89 81       	ldd	r24, Y+1	; 0x01
    2d60:	9a 81       	ldd	r25, Y+2	; 0x02
    2d62:	80 56       	subi	r24, 0x60	; 96
    2d64:	9f 4f       	sbci	r25, 0xFF	; 255
    2d66:	fc 01       	movw	r30, r24
    2d68:	10 82       	st	Z, r1
    2d6a:	11 82       	std	Z+1, r1	; 0x01
    2d6c:	12 82       	std	Z+2, r1	; 0x02
    2d6e:	13 82       	std	Z+3, r1	; 0x03
    2d70:	89 81       	ldd	r24, Y+1	; 0x01
    2d72:	9a 81       	ldd	r25, Y+2	; 0x02
    2d74:	8c 55       	subi	r24, 0x5C	; 92
    2d76:	9f 4f       	sbci	r25, 0xFF	; 255
    2d78:	fc 01       	movw	r30, r24
    2d7a:	10 82       	st	Z, r1
    2d7c:	11 82       	std	Z+1, r1	; 0x01
    2d7e:	12 82       	std	Z+2, r1	; 0x02
    2d80:	13 82       	std	Z+3, r1	; 0x03
    2d82:	89 81       	ldd	r24, Y+1	; 0x01
    2d84:	9a 81       	ldd	r25, Y+2	; 0x02
    2d86:	88 55       	subi	r24, 0x58	; 88
    2d88:	9f 4f       	sbci	r25, 0xFF	; 255
    2d8a:	fc 01       	movw	r30, r24
    2d8c:	10 82       	st	Z, r1
    2d8e:	11 82       	std	Z+1, r1	; 0x01
    2d90:	12 82       	std	Z+2, r1	; 0x02
    2d92:	13 82       	std	Z+3, r1	; 0x03
    2d94:	89 81       	ldd	r24, Y+1	; 0x01
    2d96:	9a 81       	ldd	r25, Y+2	; 0x02
    2d98:	84 55       	subi	r24, 0x54	; 84
    2d9a:	9f 4f       	sbci	r25, 0xFF	; 255
    2d9c:	fc 01       	movw	r30, r24
    2d9e:	10 82       	st	Z, r1
    2da0:	11 82       	std	Z+1, r1	; 0x01
    2da2:	12 82       	std	Z+2, r1	; 0x02
    2da4:	13 82       	std	Z+3, r1	; 0x03
    2da6:	89 81       	ldd	r24, Y+1	; 0x01
    2da8:	9a 81       	ldd	r25, Y+2	; 0x02
    2daa:	80 55       	subi	r24, 0x50	; 80
    2dac:	9f 4f       	sbci	r25, 0xFF	; 255
    2dae:	fc 01       	movw	r30, r24
    2db0:	10 82       	st	Z, r1
    2db2:	11 82       	std	Z+1, r1	; 0x01
    2db4:	12 82       	std	Z+2, r1	; 0x02
    2db6:	13 82       	std	Z+3, r1	; 0x03
    2db8:	89 81       	ldd	r24, Y+1	; 0x01
    2dba:	9a 81       	ldd	r25, Y+2	; 0x02
    2dbc:	8c 54       	subi	r24, 0x4C	; 76
    2dbe:	9f 4f       	sbci	r25, 0xFF	; 255
    2dc0:	fc 01       	movw	r30, r24
    2dc2:	10 82       	st	Z, r1
    2dc4:	11 82       	std	Z+1, r1	; 0x01
    2dc6:	12 82       	std	Z+2, r1	; 0x02
    2dc8:	13 82       	std	Z+3, r1	; 0x03
    2dca:	89 81       	ldd	r24, Y+1	; 0x01
    2dcc:	9a 81       	ldd	r25, Y+2	; 0x02
    2dce:	88 54       	subi	r24, 0x48	; 72
    2dd0:	9f 4f       	sbci	r25, 0xFF	; 255
    2dd2:	fc 01       	movw	r30, r24
    2dd4:	10 82       	st	Z, r1
    2dd6:	11 82       	std	Z+1, r1	; 0x01
    2dd8:	12 82       	std	Z+2, r1	; 0x02
    2dda:	13 82       	std	Z+3, r1	; 0x03
    2ddc:	89 81       	ldd	r24, Y+1	; 0x01
    2dde:	9a 81       	ldd	r25, Y+2	; 0x02
    2de0:	84 54       	subi	r24, 0x44	; 68
    2de2:	9f 4f       	sbci	r25, 0xFF	; 255
    2de4:	fc 01       	movw	r30, r24
    2de6:	10 82       	st	Z, r1
    2de8:	11 82       	std	Z+1, r1	; 0x01
    2dea:	12 82       	std	Z+2, r1	; 0x02
    2dec:	13 82       	std	Z+3, r1	; 0x03
    2dee:	89 81       	ldd	r24, Y+1	; 0x01
    2df0:	9a 81       	ldd	r25, Y+2	; 0x02
    2df2:	80 54       	subi	r24, 0x40	; 64
    2df4:	9f 4f       	sbci	r25, 0xFF	; 255
    2df6:	fc 01       	movw	r30, r24
    2df8:	10 82       	st	Z, r1
    2dfa:	11 82       	std	Z+1, r1	; 0x01
    2dfc:	12 82       	std	Z+2, r1	; 0x02
    2dfe:	13 82       	std	Z+3, r1	; 0x03
    2e00:	89 81       	ldd	r24, Y+1	; 0x01
    2e02:	9a 81       	ldd	r25, Y+2	; 0x02
    2e04:	8c 53       	subi	r24, 0x3C	; 60
    2e06:	9f 4f       	sbci	r25, 0xFF	; 255
    2e08:	fc 01       	movw	r30, r24
    2e0a:	10 82       	st	Z, r1
    2e0c:	11 82       	std	Z+1, r1	; 0x01
    2e0e:	12 82       	std	Z+2, r1	; 0x02
    2e10:	13 82       	std	Z+3, r1	; 0x03
			{
				EcefToLocalNEDRotationMatrix[0][0] = 0;
    2e12:	89 81       	ldd	r24, Y+1	; 0x01
    2e14:	9a 81       	ldd	r25, Y+2	; 0x02
    2e16:	88 53       	subi	r24, 0x38	; 56
    2e18:	9f 4f       	sbci	r25, 0xFF	; 255
    2e1a:	fc 01       	movw	r30, r24
    2e1c:	10 82       	st	Z, r1
    2e1e:	11 82       	std	Z+1, r1	; 0x01
    2e20:	12 82       	std	Z+2, r1	; 0x02
    2e22:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[0][1] = 0;
    2e24:	89 81       	ldd	r24, Y+1	; 0x01
    2e26:	9a 81       	ldd	r25, Y+2	; 0x02
    2e28:	84 53       	subi	r24, 0x34	; 52
    2e2a:	9f 4f       	sbci	r25, 0xFF	; 255
    2e2c:	fc 01       	movw	r30, r24
    2e2e:	10 82       	st	Z, r1
    2e30:	11 82       	std	Z+1, r1	; 0x01
    2e32:	12 82       	std	Z+2, r1	; 0x02
    2e34:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[0][2] = 0;
    2e36:	89 81       	ldd	r24, Y+1	; 0x01
    2e38:	9a 81       	ldd	r25, Y+2	; 0x02
    2e3a:	80 53       	subi	r24, 0x30	; 48
    2e3c:	9f 4f       	sbci	r25, 0xFF	; 255
    2e3e:	fc 01       	movw	r30, r24
    2e40:	10 82       	st	Z, r1
    2e42:	11 82       	std	Z+1, r1	; 0x01
    2e44:	12 82       	std	Z+2, r1	; 0x02
    2e46:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][0] = 0;
    2e48:	89 81       	ldd	r24, Y+1	; 0x01
    2e4a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e4c:	8c 52       	subi	r24, 0x2C	; 44
    2e4e:	9f 4f       	sbci	r25, 0xFF	; 255
    2e50:	fc 01       	movw	r30, r24
    2e52:	10 82       	st	Z, r1
    2e54:	11 82       	std	Z+1, r1	; 0x01
    2e56:	12 82       	std	Z+2, r1	; 0x02
    2e58:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][1] = 0;
    2e5a:	89 81       	ldd	r24, Y+1	; 0x01
    2e5c:	9a 81       	ldd	r25, Y+2	; 0x02
    2e5e:	88 52       	subi	r24, 0x28	; 40
    2e60:	9f 4f       	sbci	r25, 0xFF	; 255
    2e62:	fc 01       	movw	r30, r24
    2e64:	10 82       	st	Z, r1
    2e66:	11 82       	std	Z+1, r1	; 0x01
    2e68:	12 82       	std	Z+2, r1	; 0x02
    2e6a:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][2] = 0;
    2e6c:	89 81       	ldd	r24, Y+1	; 0x01
    2e6e:	9a 81       	ldd	r25, Y+2	; 0x02
    2e70:	84 52       	subi	r24, 0x24	; 36
    2e72:	9f 4f       	sbci	r25, 0xFF	; 255
    2e74:	fc 01       	movw	r30, r24
    2e76:	10 82       	st	Z, r1
    2e78:	11 82       	std	Z+1, r1	; 0x01
    2e7a:	12 82       	std	Z+2, r1	; 0x02
    2e7c:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][0] = 0;
    2e7e:	89 81       	ldd	r24, Y+1	; 0x01
    2e80:	9a 81       	ldd	r25, Y+2	; 0x02
    2e82:	80 52       	subi	r24, 0x20	; 32
    2e84:	9f 4f       	sbci	r25, 0xFF	; 255
    2e86:	fc 01       	movw	r30, r24
    2e88:	10 82       	st	Z, r1
    2e8a:	11 82       	std	Z+1, r1	; 0x01
    2e8c:	12 82       	std	Z+2, r1	; 0x02
    2e8e:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][1] = 0;
    2e90:	89 81       	ldd	r24, Y+1	; 0x01
    2e92:	9a 81       	ldd	r25, Y+2	; 0x02
    2e94:	8c 51       	subi	r24, 0x1C	; 28
    2e96:	9f 4f       	sbci	r25, 0xFF	; 255
    2e98:	fc 01       	movw	r30, r24
    2e9a:	10 82       	st	Z, r1
    2e9c:	11 82       	std	Z+1, r1	; 0x01
    2e9e:	12 82       	std	Z+2, r1	; 0x02
    2ea0:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][2] = 0;								
    2ea2:	89 81       	ldd	r24, Y+1	; 0x01
    2ea4:	9a 81       	ldd	r25, Y+2	; 0x02
    2ea6:	88 51       	subi	r24, 0x18	; 24
    2ea8:	9f 4f       	sbci	r25, 0xFF	; 255
    2eaa:	fc 01       	movw	r30, r24
    2eac:	10 82       	st	Z, r1
    2eae:	11 82       	std	Z+1, r1	; 0x01
    2eb0:	12 82       	std	Z+2, r1	; 0x02
    2eb2:	13 82       	std	Z+3, r1	; 0x03
			}
    2eb4:	0f 90       	pop	r0
    2eb6:	0f 90       	pop	r0
    2eb8:	df 91       	pop	r29
    2eba:	cf 91       	pop	r28
    2ebc:	08 95       	ret

00002ebe <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf>:
			void MagYawDegrees(float val) { magYawDegrees = val; }	
				
				
				
			float ReferenceMagYawDegrees() const {return referenceMagYawDegrees;}
			void ReferenceMagYawDegrees(float val) { referenceMagYawDegrees = val;}
    2ebe:	cf 93       	push	r28
    2ec0:	df 93       	push	r29
    2ec2:	00 d0       	rcall	.+0      	; 0x2ec4 <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf+0x6>
    2ec4:	00 d0       	rcall	.+0      	; 0x2ec6 <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf+0x8>
    2ec6:	cd b7       	in	r28, 0x3d	; 61
    2ec8:	de b7       	in	r29, 0x3e	; 62
    2eca:	9a 83       	std	Y+2, r25	; 0x02
    2ecc:	89 83       	std	Y+1, r24	; 0x01
    2ece:	4b 83       	std	Y+3, r20	; 0x03
    2ed0:	5c 83       	std	Y+4, r21	; 0x04
    2ed2:	6d 83       	std	Y+5, r22	; 0x05
    2ed4:	7e 83       	std	Y+6, r23	; 0x06
    2ed6:	29 81       	ldd	r18, Y+1	; 0x01
    2ed8:	3a 81       	ldd	r19, Y+2	; 0x02
    2eda:	8b 81       	ldd	r24, Y+3	; 0x03
    2edc:	9c 81       	ldd	r25, Y+4	; 0x04
    2ede:	ad 81       	ldd	r26, Y+5	; 0x05
    2ee0:	be 81       	ldd	r27, Y+6	; 0x06
    2ee2:	f9 01       	movw	r30, r18
    2ee4:	84 83       	std	Z+4, r24	; 0x04
    2ee6:	95 83       	std	Z+5, r25	; 0x05
    2ee8:	a6 83       	std	Z+6, r26	; 0x06
    2eea:	b7 83       	std	Z+7, r27	; 0x07
    2eec:	26 96       	adiw	r28, 0x06	; 6
    2eee:	0f b6       	in	r0, 0x3f	; 63
    2ef0:	f8 94       	cli
    2ef2:	de bf       	out	0x3e, r29	; 62
    2ef4:	0f be       	out	0x3f, r0	; 63
    2ef6:	cd bf       	out	0x3d, r28	; 61
    2ef8:	df 91       	pop	r29
    2efa:	cf 91       	pop	r28
    2efc:	08 95       	ret

00002efe <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf>:
				
			float YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
			void YawVelocityDegreesPerSecond(float val) { yawVelocityDegreesPerSecond = val;}
				
			float ReferenceYawVelocityDegreesPerSecond() const {return referenceYawVelocityDegreesPerSecond;}
			void ReferenceYawVelocityDegreesPerSecond(float val) { referenceYawVelocityDegreesPerSecond = val;}
    2efe:	cf 93       	push	r28
    2f00:	df 93       	push	r29
    2f02:	00 d0       	rcall	.+0      	; 0x2f04 <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf+0x6>
    2f04:	00 d0       	rcall	.+0      	; 0x2f06 <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf+0x8>
    2f06:	cd b7       	in	r28, 0x3d	; 61
    2f08:	de b7       	in	r29, 0x3e	; 62
    2f0a:	9a 83       	std	Y+2, r25	; 0x02
    2f0c:	89 83       	std	Y+1, r24	; 0x01
    2f0e:	4b 83       	std	Y+3, r20	; 0x03
    2f10:	5c 83       	std	Y+4, r21	; 0x04
    2f12:	6d 83       	std	Y+5, r22	; 0x05
    2f14:	7e 83       	std	Y+6, r23	; 0x06
    2f16:	29 81       	ldd	r18, Y+1	; 0x01
    2f18:	3a 81       	ldd	r19, Y+2	; 0x02
    2f1a:	8b 81       	ldd	r24, Y+3	; 0x03
    2f1c:	9c 81       	ldd	r25, Y+4	; 0x04
    2f1e:	ad 81       	ldd	r26, Y+5	; 0x05
    2f20:	be 81       	ldd	r27, Y+6	; 0x06
    2f22:	f9 01       	movw	r30, r18
    2f24:	84 8b       	std	Z+20, r24	; 0x14
    2f26:	95 8b       	std	Z+21, r25	; 0x15
    2f28:	a6 8b       	std	Z+22, r26	; 0x16
    2f2a:	b7 8b       	std	Z+23, r27	; 0x17
    2f2c:	26 96       	adiw	r28, 0x06	; 6
    2f2e:	0f b6       	in	r0, 0x3f	; 63
    2f30:	f8 94       	cli
    2f32:	de bf       	out	0x3e, r29	; 62
    2f34:	0f be       	out	0x3f, r0	; 63
    2f36:	cd bf       	out	0x3d, r28	; 61
    2f38:	df 91       	pop	r29
    2f3a:	cf 91       	pop	r28
    2f3c:	08 95       	ret

00002f3e <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf>:
		
			float XNEDBodyFrame() const {return xNEDBodyFrame;}
			void XNEDBodyFrame(float val) { xNEDBodyFrame = val;}
						
			float ReferenceXNEDBodyFrame() const {return referenceXNEDBodyFrame;}
			void ReferenceXNEDBodyFrame(float val) { referenceXNEDBodyFrame = val;}
    2f3e:	cf 93       	push	r28
    2f40:	df 93       	push	r29
    2f42:	00 d0       	rcall	.+0      	; 0x2f44 <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf+0x6>
    2f44:	00 d0       	rcall	.+0      	; 0x2f46 <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf+0x8>
    2f46:	cd b7       	in	r28, 0x3d	; 61
    2f48:	de b7       	in	r29, 0x3e	; 62
    2f4a:	9a 83       	std	Y+2, r25	; 0x02
    2f4c:	89 83       	std	Y+1, r24	; 0x01
    2f4e:	4b 83       	std	Y+3, r20	; 0x03
    2f50:	5c 83       	std	Y+4, r21	; 0x04
    2f52:	6d 83       	std	Y+5, r22	; 0x05
    2f54:	7e 83       	std	Y+6, r23	; 0x06
    2f56:	29 81       	ldd	r18, Y+1	; 0x01
    2f58:	3a 81       	ldd	r19, Y+2	; 0x02
    2f5a:	8b 81       	ldd	r24, Y+3	; 0x03
    2f5c:	9c 81       	ldd	r25, Y+4	; 0x04
    2f5e:	ad 81       	ldd	r26, Y+5	; 0x05
    2f60:	be 81       	ldd	r27, Y+6	; 0x06
    2f62:	f9 01       	movw	r30, r18
    2f64:	80 a7       	std	Z+40, r24	; 0x28
    2f66:	91 a7       	std	Z+41, r25	; 0x29
    2f68:	a2 a7       	std	Z+42, r26	; 0x2a
    2f6a:	b3 a7       	std	Z+43, r27	; 0x2b
    2f6c:	26 96       	adiw	r28, 0x06	; 6
    2f6e:	0f b6       	in	r0, 0x3f	; 63
    2f70:	f8 94       	cli
    2f72:	de bf       	out	0x3e, r29	; 62
    2f74:	0f be       	out	0x3f, r0	; 63
    2f76:	cd bf       	out	0x3d, r28	; 61
    2f78:	df 91       	pop	r29
    2f7a:	cf 91       	pop	r28
    2f7c:	08 95       	ret

00002f7e <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf>:
				
			float XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
			void XVelocityMetersPerSecond(float val) { xVelocityMetersPerSecond = val;}
				
			float ReferenceXVelocityMetersPerSecond() const {return referenceXVelocityMetersPerSecond;}
			void ReferenceXVelocityMetersPerSecond(float val) { referenceXVelocityMetersPerSecond = val;}
    2f7e:	cf 93       	push	r28
    2f80:	df 93       	push	r29
    2f82:	00 d0       	rcall	.+0      	; 0x2f84 <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf+0x6>
    2f84:	00 d0       	rcall	.+0      	; 0x2f86 <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf+0x8>
    2f86:	cd b7       	in	r28, 0x3d	; 61
    2f88:	de b7       	in	r29, 0x3e	; 62
    2f8a:	9a 83       	std	Y+2, r25	; 0x02
    2f8c:	89 83       	std	Y+1, r24	; 0x01
    2f8e:	4b 83       	std	Y+3, r20	; 0x03
    2f90:	5c 83       	std	Y+4, r21	; 0x04
    2f92:	6d 83       	std	Y+5, r22	; 0x05
    2f94:	7e 83       	std	Y+6, r23	; 0x06
    2f96:	29 81       	ldd	r18, Y+1	; 0x01
    2f98:	3a 81       	ldd	r19, Y+2	; 0x02
    2f9a:	8b 81       	ldd	r24, Y+3	; 0x03
    2f9c:	9c 81       	ldd	r25, Y+4	; 0x04
    2f9e:	ad 81       	ldd	r26, Y+5	; 0x05
    2fa0:	be 81       	ldd	r27, Y+6	; 0x06
    2fa2:	f9 01       	movw	r30, r18
    2fa4:	80 af       	std	Z+56, r24	; 0x38
    2fa6:	91 af       	std	Z+57, r25	; 0x39
    2fa8:	a2 af       	std	Z+58, r26	; 0x3a
    2faa:	b3 af       	std	Z+59, r27	; 0x3b
    2fac:	26 96       	adiw	r28, 0x06	; 6
    2fae:	0f b6       	in	r0, 0x3f	; 63
    2fb0:	f8 94       	cli
    2fb2:	de bf       	out	0x3e, r29	; 62
    2fb4:	0f be       	out	0x3f, r0	; 63
    2fb6:	cd bf       	out	0x3d, r28	; 61
    2fb8:	df 91       	pop	r29
    2fba:	cf 91       	pop	r28
    2fbc:	08 95       	ret

00002fbe <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf>:

			float YNEDBodyFrame() const {return yNEDBodyFrame;}
			void YNEDBodyFrame(float val) { yNEDBodyFrame = val;}

			float ReferenceYNEDBodyFrame() const {return referenceYNEDBodyFrame;}
			void ReferenceYNEDBodyFrame(float val) { referenceYNEDBodyFrame = val;}
    2fbe:	cf 93       	push	r28
    2fc0:	df 93       	push	r29
    2fc2:	00 d0       	rcall	.+0      	; 0x2fc4 <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf+0x6>
    2fc4:	00 d0       	rcall	.+0      	; 0x2fc6 <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf+0x8>
    2fc6:	cd b7       	in	r28, 0x3d	; 61
    2fc8:	de b7       	in	r29, 0x3e	; 62
    2fca:	9a 83       	std	Y+2, r25	; 0x02
    2fcc:	89 83       	std	Y+1, r24	; 0x01
    2fce:	4b 83       	std	Y+3, r20	; 0x03
    2fd0:	5c 83       	std	Y+4, r21	; 0x04
    2fd2:	6d 83       	std	Y+5, r22	; 0x05
    2fd4:	7e 83       	std	Y+6, r23	; 0x06
    2fd6:	89 81       	ldd	r24, Y+1	; 0x01
    2fd8:	9a 81       	ldd	r25, Y+2	; 0x02
    2fda:	9c 01       	movw	r18, r24
    2fdc:	2c 5a       	subi	r18, 0xAC	; 172
    2fde:	3f 4f       	sbci	r19, 0xFF	; 255
    2fe0:	8b 81       	ldd	r24, Y+3	; 0x03
    2fe2:	9c 81       	ldd	r25, Y+4	; 0x04
    2fe4:	ad 81       	ldd	r26, Y+5	; 0x05
    2fe6:	be 81       	ldd	r27, Y+6	; 0x06
    2fe8:	f9 01       	movw	r30, r18
    2fea:	80 83       	st	Z, r24
    2fec:	91 83       	std	Z+1, r25	; 0x01
    2fee:	a2 83       	std	Z+2, r26	; 0x02
    2ff0:	b3 83       	std	Z+3, r27	; 0x03
    2ff2:	26 96       	adiw	r28, 0x06	; 6
    2ff4:	0f b6       	in	r0, 0x3f	; 63
    2ff6:	f8 94       	cli
    2ff8:	de bf       	out	0x3e, r29	; 62
    2ffa:	0f be       	out	0x3f, r0	; 63
    2ffc:	cd bf       	out	0x3d, r28	; 61
    2ffe:	df 91       	pop	r29
    3000:	cf 91       	pop	r28
    3002:	08 95       	ret

00003004 <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf>:

			float YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
			void YVelocityMetersPerSecond(float val) { yVelocityMetersPerSecond = val;}

			float ReferenceYVelocityMetersPerSecond() const {return referenceYVelocityMetersPerSecond;}
			void ReferenceYVelocityMetersPerSecond(float val) { referenceYVelocityMetersPerSecond = val;}
    3004:	cf 93       	push	r28
    3006:	df 93       	push	r29
    3008:	00 d0       	rcall	.+0      	; 0x300a <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf+0x6>
    300a:	00 d0       	rcall	.+0      	; 0x300c <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf+0x8>
    300c:	cd b7       	in	r28, 0x3d	; 61
    300e:	de b7       	in	r29, 0x3e	; 62
    3010:	9a 83       	std	Y+2, r25	; 0x02
    3012:	89 83       	std	Y+1, r24	; 0x01
    3014:	4b 83       	std	Y+3, r20	; 0x03
    3016:	5c 83       	std	Y+4, r21	; 0x04
    3018:	6d 83       	std	Y+5, r22	; 0x05
    301a:	7e 83       	std	Y+6, r23	; 0x06
    301c:	89 81       	ldd	r24, Y+1	; 0x01
    301e:	9a 81       	ldd	r25, Y+2	; 0x02
    3020:	9c 01       	movw	r18, r24
    3022:	2c 59       	subi	r18, 0x9C	; 156
    3024:	3f 4f       	sbci	r19, 0xFF	; 255
    3026:	8b 81       	ldd	r24, Y+3	; 0x03
    3028:	9c 81       	ldd	r25, Y+4	; 0x04
    302a:	ad 81       	ldd	r26, Y+5	; 0x05
    302c:	be 81       	ldd	r27, Y+6	; 0x06
    302e:	f9 01       	movw	r30, r18
    3030:	80 83       	st	Z, r24
    3032:	91 83       	std	Z+1, r25	; 0x01
    3034:	a2 83       	std	Z+2, r26	; 0x02
    3036:	b3 83       	std	Z+3, r27	; 0x03
    3038:	26 96       	adiw	r28, 0x06	; 6
    303a:	0f b6       	in	r0, 0x3f	; 63
    303c:	f8 94       	cli
    303e:	de bf       	out	0x3e, r29	; 62
    3040:	0f be       	out	0x3f, r0	; 63
    3042:	cd bf       	out	0x3d, r28	; 61
    3044:	df 91       	pop	r29
    3046:	cf 91       	pop	r28
    3048:	08 95       	ret

0000304a <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>:
						
						
						
						

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
    304a:	cf 93       	push	r28
    304c:	df 93       	push	r29
    304e:	1f 92       	push	r1
    3050:	1f 92       	push	r1
    3052:	cd b7       	in	r28, 0x3d	; 61
    3054:	de b7       	in	r29, 0x3e	; 62
    3056:	9a 83       	std	Y+2, r25	; 0x02
    3058:	89 83       	std	Y+1, r24	; 0x01
    305a:	89 81       	ldd	r24, Y+1	; 0x01
    305c:	9a 81       	ldd	r25, Y+2	; 0x02
    305e:	84 58       	subi	r24, 0x84	; 132
    3060:	9f 4f       	sbci	r25, 0xFF	; 255
    3062:	fc 01       	movw	r30, r24
    3064:	80 81       	ld	r24, Z
    3066:	91 81       	ldd	r25, Z+1	; 0x01
    3068:	a2 81       	ldd	r26, Z+2	; 0x02
    306a:	b3 81       	ldd	r27, Z+3	; 0x03
    306c:	bc 01       	movw	r22, r24
    306e:	cd 01       	movw	r24, r26
    3070:	0f 90       	pop	r0
    3072:	0f 90       	pop	r0
    3074:	df 91       	pop	r29
    3076:	cf 91       	pop	r28
    3078:	08 95       	ret

0000307a <_ZN10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEf>:
			float ZNEDBodyFrame() const { return zNEDBodyFrame; }
			void ZNEDBodyFrame(float val) { zNEDBodyFrame = val; }


			float ReferenceZNEDBodyFrameFeet() const {return referenceAltitudeFeet;}
			void ReferenceZNEDBodyFrameFeet(float val) { referenceAltitudeFeet = val;}
    307a:	cf 93       	push	r28
    307c:	df 93       	push	r29
    307e:	00 d0       	rcall	.+0      	; 0x3080 <_ZN10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEf+0x6>
    3080:	00 d0       	rcall	.+0      	; 0x3082 <_ZN10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEf+0x8>
    3082:	cd b7       	in	r28, 0x3d	; 61
    3084:	de b7       	in	r29, 0x3e	; 62
    3086:	9a 83       	std	Y+2, r25	; 0x02
    3088:	89 83       	std	Y+1, r24	; 0x01
    308a:	4b 83       	std	Y+3, r20	; 0x03
    308c:	5c 83       	std	Y+4, r21	; 0x04
    308e:	6d 83       	std	Y+5, r22	; 0x05
    3090:	7e 83       	std	Y+6, r23	; 0x06
    3092:	89 81       	ldd	r24, Y+1	; 0x01
    3094:	9a 81       	ldd	r25, Y+2	; 0x02
    3096:	9c 01       	movw	r18, r24
    3098:	2c 57       	subi	r18, 0x7C	; 124
    309a:	3f 4f       	sbci	r19, 0xFF	; 255
    309c:	8b 81       	ldd	r24, Y+3	; 0x03
    309e:	9c 81       	ldd	r25, Y+4	; 0x04
    30a0:	ad 81       	ldd	r26, Y+5	; 0x05
    30a2:	be 81       	ldd	r27, Y+6	; 0x06
    30a4:	f9 01       	movw	r30, r18
    30a6:	80 83       	st	Z, r24
    30a8:	91 83       	std	Z+1, r25	; 0x01
    30aa:	a2 83       	std	Z+2, r26	; 0x02
    30ac:	b3 83       	std	Z+3, r27	; 0x03
    30ae:	26 96       	adiw	r28, 0x06	; 6
    30b0:	0f b6       	in	r0, 0x3f	; 63
    30b2:	f8 94       	cli
    30b4:	de bf       	out	0x3e, r29	; 62
    30b6:	0f be       	out	0x3f, r0	; 63
    30b8:	cd bf       	out	0x3d, r28	; 61
    30ba:	df 91       	pop	r29
    30bc:	cf 91       	pop	r28
    30be:	08 95       	ret

000030c0 <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf>:

			float ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
			void ZVelocityFeetPerSecond(float val) { zVelocityFeetPerSecond = val;}

			float ReferenceZVelocityFeetPerSecond() const {return referenceZVelocityFeetPerSecond;}
			void ReferenceZVelocityFeetPerSecond(float val) { referenceZVelocityFeetPerSecond = val;}
    30c0:	cf 93       	push	r28
    30c2:	df 93       	push	r29
    30c4:	00 d0       	rcall	.+0      	; 0x30c6 <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf+0x6>
    30c6:	00 d0       	rcall	.+0      	; 0x30c8 <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf+0x8>
    30c8:	cd b7       	in	r28, 0x3d	; 61
    30ca:	de b7       	in	r29, 0x3e	; 62
    30cc:	9a 83       	std	Y+2, r25	; 0x02
    30ce:	89 83       	std	Y+1, r24	; 0x01
    30d0:	4b 83       	std	Y+3, r20	; 0x03
    30d2:	5c 83       	std	Y+4, r21	; 0x04
    30d4:	6d 83       	std	Y+5, r22	; 0x05
    30d6:	7e 83       	std	Y+6, r23	; 0x06
    30d8:	89 81       	ldd	r24, Y+1	; 0x01
    30da:	9a 81       	ldd	r25, Y+2	; 0x02
    30dc:	9c 01       	movw	r18, r24
    30de:	2c 56       	subi	r18, 0x6C	; 108
    30e0:	3f 4f       	sbci	r19, 0xFF	; 255
    30e2:	8b 81       	ldd	r24, Y+3	; 0x03
    30e4:	9c 81       	ldd	r25, Y+4	; 0x04
    30e6:	ad 81       	ldd	r26, Y+5	; 0x05
    30e8:	be 81       	ldd	r27, Y+6	; 0x06
    30ea:	f9 01       	movw	r30, r18
    30ec:	80 83       	st	Z, r24
    30ee:	91 83       	std	Z+1, r25	; 0x01
    30f0:	a2 83       	std	Z+2, r26	; 0x02
    30f2:	b3 83       	std	Z+3, r27	; 0x03
    30f4:	26 96       	adiw	r28, 0x06	; 6
    30f6:	0f b6       	in	r0, 0x3f	; 63
    30f8:	f8 94       	cli
    30fa:	de bf       	out	0x3e, r29	; 62
    30fc:	0f be       	out	0x3f, r0	; 63
    30fe:	cd bf       	out	0x3d, r28	; 61
    3100:	df 91       	pop	r29
    3102:	cf 91       	pop	r28
    3104:	08 95       	ret

00003106 <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>:

			float ZDerivativeError() const {return zDerivativeError;}
			void ZDerivativeError(float val) { zDerivativeError = val;}						
						
						
			float LatitudeDegrees() const {return latitudeDegrees;}
    3106:	cf 93       	push	r28
    3108:	df 93       	push	r29
    310a:	1f 92       	push	r1
    310c:	1f 92       	push	r1
    310e:	cd b7       	in	r28, 0x3d	; 61
    3110:	de b7       	in	r29, 0x3e	; 62
    3112:	9a 83       	std	Y+2, r25	; 0x02
    3114:	89 83       	std	Y+1, r24	; 0x01
    3116:	89 81       	ldd	r24, Y+1	; 0x01
    3118:	9a 81       	ldd	r25, Y+2	; 0x02
    311a:	8c 55       	subi	r24, 0x5C	; 92
    311c:	9f 4f       	sbci	r25, 0xFF	; 255
    311e:	fc 01       	movw	r30, r24
    3120:	80 81       	ld	r24, Z
    3122:	91 81       	ldd	r25, Z+1	; 0x01
    3124:	a2 81       	ldd	r26, Z+2	; 0x02
    3126:	b3 81       	ldd	r27, Z+3	; 0x03
    3128:	bc 01       	movw	r22, r24
    312a:	cd 01       	movw	r24, r26
    312c:	0f 90       	pop	r0
    312e:	0f 90       	pop	r0
    3130:	df 91       	pop	r29
    3132:	cf 91       	pop	r28
    3134:	08 95       	ret

00003136 <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>:
			void LatitudeDegrees(float val) { latitudeDegrees = val;}						

			float LongitudeDegrees() const {return longitudeDegrees;}
    3136:	cf 93       	push	r28
    3138:	df 93       	push	r29
    313a:	1f 92       	push	r1
    313c:	1f 92       	push	r1
    313e:	cd b7       	in	r28, 0x3d	; 61
    3140:	de b7       	in	r29, 0x3e	; 62
    3142:	9a 83       	std	Y+2, r25	; 0x02
    3144:	89 83       	std	Y+1, r24	; 0x01
    3146:	89 81       	ldd	r24, Y+1	; 0x01
    3148:	9a 81       	ldd	r25, Y+2	; 0x02
    314a:	88 55       	subi	r24, 0x58	; 88
    314c:	9f 4f       	sbci	r25, 0xFF	; 255
    314e:	fc 01       	movw	r30, r24
    3150:	80 81       	ld	r24, Z
    3152:	91 81       	ldd	r25, Z+1	; 0x01
    3154:	a2 81       	ldd	r26, Z+2	; 0x02
    3156:	b3 81       	ldd	r27, Z+3	; 0x03
    3158:	bc 01       	movw	r22, r24
    315a:	cd 01       	movw	r24, r26
    315c:	0f 90       	pop	r0
    315e:	0f 90       	pop	r0
    3160:	df 91       	pop	r29
    3162:	cf 91       	pop	r28
    3164:	08 95       	ret

00003166 <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl>:
			
			long  BlownFrames() const {return numOfFramesBlown;}
			void BlownFrames( long val ) { numOfFramesBlown = val;}

			long  InitialXPositionEcef() const {return initialXPositionEcef;}
			void InitialXPositionEcef( long val ) { initialXPositionEcef = val;}			
    3166:	cf 93       	push	r28
    3168:	df 93       	push	r29
    316a:	00 d0       	rcall	.+0      	; 0x316c <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl+0x6>
    316c:	00 d0       	rcall	.+0      	; 0x316e <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl+0x8>
    316e:	cd b7       	in	r28, 0x3d	; 61
    3170:	de b7       	in	r29, 0x3e	; 62
    3172:	9a 83       	std	Y+2, r25	; 0x02
    3174:	89 83       	std	Y+1, r24	; 0x01
    3176:	4b 83       	std	Y+3, r20	; 0x03
    3178:	5c 83       	std	Y+4, r21	; 0x04
    317a:	6d 83       	std	Y+5, r22	; 0x05
    317c:	7e 83       	std	Y+6, r23	; 0x06
    317e:	6b 81       	ldd	r22, Y+3	; 0x03
    3180:	7c 81       	ldd	r23, Y+4	; 0x04
    3182:	8d 81       	ldd	r24, Y+5	; 0x05
    3184:	9e 81       	ldd	r25, Y+6	; 0x06
    3186:	0e 94 0f 44 	call	0x881e	; 0x881e <__floatsisf>
    318a:	dc 01       	movw	r26, r24
    318c:	cb 01       	movw	r24, r22
    318e:	29 81       	ldd	r18, Y+1	; 0x01
    3190:	3a 81       	ldd	r19, Y+2	; 0x02
    3192:	24 54       	subi	r18, 0x44	; 68
    3194:	3f 4f       	sbci	r19, 0xFF	; 255
    3196:	f9 01       	movw	r30, r18
    3198:	80 83       	st	Z, r24
    319a:	91 83       	std	Z+1, r25	; 0x01
    319c:	a2 83       	std	Z+2, r26	; 0x02
    319e:	b3 83       	std	Z+3, r27	; 0x03
    31a0:	26 96       	adiw	r28, 0x06	; 6
    31a2:	0f b6       	in	r0, 0x3f	; 63
    31a4:	f8 94       	cli
    31a6:	de bf       	out	0x3e, r29	; 62
    31a8:	0f be       	out	0x3f, r0	; 63
    31aa:	cd bf       	out	0x3d, r28	; 61
    31ac:	df 91       	pop	r29
    31ae:	cf 91       	pop	r28
    31b0:	08 95       	ret

000031b2 <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl>:

			long  InitialYPositionEcef() const {return initialYPositionEcef;}
			void InitialYPositionEcef( long val ) { initialYPositionEcef = val;}
    31b2:	cf 93       	push	r28
    31b4:	df 93       	push	r29
    31b6:	00 d0       	rcall	.+0      	; 0x31b8 <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl+0x6>
    31b8:	00 d0       	rcall	.+0      	; 0x31ba <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl+0x8>
    31ba:	cd b7       	in	r28, 0x3d	; 61
    31bc:	de b7       	in	r29, 0x3e	; 62
    31be:	9a 83       	std	Y+2, r25	; 0x02
    31c0:	89 83       	std	Y+1, r24	; 0x01
    31c2:	4b 83       	std	Y+3, r20	; 0x03
    31c4:	5c 83       	std	Y+4, r21	; 0x04
    31c6:	6d 83       	std	Y+5, r22	; 0x05
    31c8:	7e 83       	std	Y+6, r23	; 0x06
    31ca:	6b 81       	ldd	r22, Y+3	; 0x03
    31cc:	7c 81       	ldd	r23, Y+4	; 0x04
    31ce:	8d 81       	ldd	r24, Y+5	; 0x05
    31d0:	9e 81       	ldd	r25, Y+6	; 0x06
    31d2:	0e 94 0f 44 	call	0x881e	; 0x881e <__floatsisf>
    31d6:	dc 01       	movw	r26, r24
    31d8:	cb 01       	movw	r24, r22
    31da:	29 81       	ldd	r18, Y+1	; 0x01
    31dc:	3a 81       	ldd	r19, Y+2	; 0x02
    31de:	20 54       	subi	r18, 0x40	; 64
    31e0:	3f 4f       	sbci	r19, 0xFF	; 255
    31e2:	f9 01       	movw	r30, r18
    31e4:	80 83       	st	Z, r24
    31e6:	91 83       	std	Z+1, r25	; 0x01
    31e8:	a2 83       	std	Z+2, r26	; 0x02
    31ea:	b3 83       	std	Z+3, r27	; 0x03
    31ec:	26 96       	adiw	r28, 0x06	; 6
    31ee:	0f b6       	in	r0, 0x3f	; 63
    31f0:	f8 94       	cli
    31f2:	de bf       	out	0x3e, r29	; 62
    31f4:	0f be       	out	0x3f, r0	; 63
    31f6:	cd bf       	out	0x3d, r28	; 61
    31f8:	df 91       	pop	r29
    31fa:	cf 91       	pop	r28
    31fc:	08 95       	ret

000031fe <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl>:

			long  InitialZPositionEcef() const {return initialZPositionEcef;}
			void InitialZPositionEcef( long val ) { initialZPositionEcef = val;}							
    31fe:	cf 93       	push	r28
    3200:	df 93       	push	r29
    3202:	00 d0       	rcall	.+0      	; 0x3204 <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl+0x6>
    3204:	00 d0       	rcall	.+0      	; 0x3206 <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl+0x8>
    3206:	cd b7       	in	r28, 0x3d	; 61
    3208:	de b7       	in	r29, 0x3e	; 62
    320a:	9a 83       	std	Y+2, r25	; 0x02
    320c:	89 83       	std	Y+1, r24	; 0x01
    320e:	4b 83       	std	Y+3, r20	; 0x03
    3210:	5c 83       	std	Y+4, r21	; 0x04
    3212:	6d 83       	std	Y+5, r22	; 0x05
    3214:	7e 83       	std	Y+6, r23	; 0x06
    3216:	6b 81       	ldd	r22, Y+3	; 0x03
    3218:	7c 81       	ldd	r23, Y+4	; 0x04
    321a:	8d 81       	ldd	r24, Y+5	; 0x05
    321c:	9e 81       	ldd	r25, Y+6	; 0x06
    321e:	0e 94 0f 44 	call	0x881e	; 0x881e <__floatsisf>
    3222:	dc 01       	movw	r26, r24
    3224:	cb 01       	movw	r24, r22
    3226:	29 81       	ldd	r18, Y+1	; 0x01
    3228:	3a 81       	ldd	r19, Y+2	; 0x02
    322a:	2c 53       	subi	r18, 0x3C	; 60
    322c:	3f 4f       	sbci	r19, 0xFF	; 255
    322e:	f9 01       	movw	r30, r18
    3230:	80 83       	st	Z, r24
    3232:	91 83       	std	Z+1, r25	; 0x01
    3234:	a2 83       	std	Z+2, r26	; 0x02
    3236:	b3 83       	std	Z+3, r27	; 0x03
    3238:	26 96       	adiw	r28, 0x06	; 6
    323a:	0f b6       	in	r0, 0x3f	; 63
    323c:	f8 94       	cli
    323e:	de bf       	out	0x3e, r29	; 62
    3240:	0f be       	out	0x3f, r0	; 63
    3242:	cd bf       	out	0x3d, r28	; 61
    3244:	df 91       	pop	r29
    3246:	cf 91       	pop	r28
    3248:	08 95       	ret

0000324a <_ZN10helicopter10controller13PIDController16setXIntegralGainEf>:
			public:
				PIDController (SystemModel *model);
					
				~PIDController();
				
				void setXIntegralGain(float val)
    324a:	cf 93       	push	r28
    324c:	df 93       	push	r29
    324e:	00 d0       	rcall	.+0      	; 0x3250 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf+0x6>
    3250:	00 d0       	rcall	.+0      	; 0x3252 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf+0x8>
    3252:	cd b7       	in	r28, 0x3d	; 61
    3254:	de b7       	in	r29, 0x3e	; 62
    3256:	9a 83       	std	Y+2, r25	; 0x02
    3258:	89 83       	std	Y+1, r24	; 0x01
    325a:	4b 83       	std	Y+3, r20	; 0x03
    325c:	5c 83       	std	Y+4, r21	; 0x04
    325e:	6d 83       	std	Y+5, r22	; 0x05
    3260:	7e 83       	std	Y+6, r23	; 0x06
				{
					xIntegralGain = val;
    3262:	29 81       	ldd	r18, Y+1	; 0x01
    3264:	3a 81       	ldd	r19, Y+2	; 0x02
    3266:	8b 81       	ldd	r24, Y+3	; 0x03
    3268:	9c 81       	ldd	r25, Y+4	; 0x04
    326a:	ad 81       	ldd	r26, Y+5	; 0x05
    326c:	be 81       	ldd	r27, Y+6	; 0x06
    326e:	f9 01       	movw	r30, r18
    3270:	82 8b       	std	Z+18, r24	; 0x12
    3272:	93 8b       	std	Z+19, r25	; 0x13
    3274:	a4 8b       	std	Z+20, r26	; 0x14
    3276:	b5 8b       	std	Z+21, r27	; 0x15
				}
    3278:	26 96       	adiw	r28, 0x06	; 6
    327a:	0f b6       	in	r0, 0x3f	; 63
    327c:	f8 94       	cli
    327e:	de bf       	out	0x3e, r29	; 62
    3280:	0f be       	out	0x3f, r0	; 63
    3282:	cd bf       	out	0x3d, r28	; 61
    3284:	df 91       	pop	r29
    3286:	cf 91       	pop	r28
    3288:	08 95       	ret

0000328a <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf>:
				
				void setXDerivativeGain(float val)
    328a:	cf 93       	push	r28
    328c:	df 93       	push	r29
    328e:	00 d0       	rcall	.+0      	; 0x3290 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf+0x6>
    3290:	00 d0       	rcall	.+0      	; 0x3292 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf+0x8>
    3292:	cd b7       	in	r28, 0x3d	; 61
    3294:	de b7       	in	r29, 0x3e	; 62
    3296:	9a 83       	std	Y+2, r25	; 0x02
    3298:	89 83       	std	Y+1, r24	; 0x01
    329a:	4b 83       	std	Y+3, r20	; 0x03
    329c:	5c 83       	std	Y+4, r21	; 0x04
    329e:	6d 83       	std	Y+5, r22	; 0x05
    32a0:	7e 83       	std	Y+6, r23	; 0x06
				{
					xDerivativeGain = val;
    32a2:	29 81       	ldd	r18, Y+1	; 0x01
    32a4:	3a 81       	ldd	r19, Y+2	; 0x02
    32a6:	8b 81       	ldd	r24, Y+3	; 0x03
    32a8:	9c 81       	ldd	r25, Y+4	; 0x04
    32aa:	ad 81       	ldd	r26, Y+5	; 0x05
    32ac:	be 81       	ldd	r27, Y+6	; 0x06
    32ae:	f9 01       	movw	r30, r18
    32b0:	86 8b       	std	Z+22, r24	; 0x16
    32b2:	97 8b       	std	Z+23, r25	; 0x17
    32b4:	a0 8f       	std	Z+24, r26	; 0x18
    32b6:	b1 8f       	std	Z+25, r27	; 0x19
				}
    32b8:	26 96       	adiw	r28, 0x06	; 6
    32ba:	0f b6       	in	r0, 0x3f	; 63
    32bc:	f8 94       	cli
    32be:	de bf       	out	0x3e, r29	; 62
    32c0:	0f be       	out	0x3f, r0	; 63
    32c2:	cd bf       	out	0x3d, r28	; 61
    32c4:	df 91       	pop	r29
    32c6:	cf 91       	pop	r28
    32c8:	08 95       	ret

000032ca <_ZN10helicopter10controller13PIDController20setXProportionalGainEf>:
				
				void setXProportionalGain(float val)
    32ca:	cf 93       	push	r28
    32cc:	df 93       	push	r29
    32ce:	00 d0       	rcall	.+0      	; 0x32d0 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf+0x6>
    32d0:	00 d0       	rcall	.+0      	; 0x32d2 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf+0x8>
    32d2:	cd b7       	in	r28, 0x3d	; 61
    32d4:	de b7       	in	r29, 0x3e	; 62
    32d6:	9a 83       	std	Y+2, r25	; 0x02
    32d8:	89 83       	std	Y+1, r24	; 0x01
    32da:	4b 83       	std	Y+3, r20	; 0x03
    32dc:	5c 83       	std	Y+4, r21	; 0x04
    32de:	6d 83       	std	Y+5, r22	; 0x05
    32e0:	7e 83       	std	Y+6, r23	; 0x06
				{
					xProportionalGain = val;
    32e2:	29 81       	ldd	r18, Y+1	; 0x01
    32e4:	3a 81       	ldd	r19, Y+2	; 0x02
    32e6:	8b 81       	ldd	r24, Y+3	; 0x03
    32e8:	9c 81       	ldd	r25, Y+4	; 0x04
    32ea:	ad 81       	ldd	r26, Y+5	; 0x05
    32ec:	be 81       	ldd	r27, Y+6	; 0x06
    32ee:	f9 01       	movw	r30, r18
    32f0:	82 8f       	std	Z+26, r24	; 0x1a
    32f2:	93 8f       	std	Z+27, r25	; 0x1b
    32f4:	a4 8f       	std	Z+28, r26	; 0x1c
    32f6:	b5 8f       	std	Z+29, r27	; 0x1d
				}
    32f8:	26 96       	adiw	r28, 0x06	; 6
    32fa:	0f b6       	in	r0, 0x3f	; 63
    32fc:	f8 94       	cli
    32fe:	de bf       	out	0x3e, r29	; 62
    3300:	0f be       	out	0x3f, r0	; 63
    3302:	cd bf       	out	0x3d, r28	; 61
    3304:	df 91       	pop	r29
    3306:	cf 91       	pop	r28
    3308:	08 95       	ret

0000330a <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf>:
				
				void setXAntiWindupGain(float val)
    330a:	cf 93       	push	r28
    330c:	df 93       	push	r29
    330e:	00 d0       	rcall	.+0      	; 0x3310 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf+0x6>
    3310:	00 d0       	rcall	.+0      	; 0x3312 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf+0x8>
    3312:	cd b7       	in	r28, 0x3d	; 61
    3314:	de b7       	in	r29, 0x3e	; 62
    3316:	9a 83       	std	Y+2, r25	; 0x02
    3318:	89 83       	std	Y+1, r24	; 0x01
    331a:	4b 83       	std	Y+3, r20	; 0x03
    331c:	5c 83       	std	Y+4, r21	; 0x04
    331e:	6d 83       	std	Y+5, r22	; 0x05
    3320:	7e 83       	std	Y+6, r23	; 0x06
				{
					xAntiWindupGain = val;
    3322:	29 81       	ldd	r18, Y+1	; 0x01
    3324:	3a 81       	ldd	r19, Y+2	; 0x02
    3326:	8b 81       	ldd	r24, Y+3	; 0x03
    3328:	9c 81       	ldd	r25, Y+4	; 0x04
    332a:	ad 81       	ldd	r26, Y+5	; 0x05
    332c:	be 81       	ldd	r27, Y+6	; 0x06
    332e:	f9 01       	movw	r30, r18
    3330:	86 8f       	std	Z+30, r24	; 0x1e
    3332:	97 8f       	std	Z+31, r25	; 0x1f
    3334:	a0 a3       	std	Z+32, r26	; 0x20
    3336:	b1 a3       	std	Z+33, r27	; 0x21
				}
    3338:	26 96       	adiw	r28, 0x06	; 6
    333a:	0f b6       	in	r0, 0x3f	; 63
    333c:	f8 94       	cli
    333e:	de bf       	out	0x3e, r29	; 62
    3340:	0f be       	out	0x3f, r0	; 63
    3342:	cd bf       	out	0x3d, r28	; 61
    3344:	df 91       	pop	r29
    3346:	cf 91       	pop	r28
    3348:	08 95       	ret

0000334a <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf>:
				
				void setLongitudeInnerLoopGain(float val)
    334a:	cf 93       	push	r28
    334c:	df 93       	push	r29
    334e:	00 d0       	rcall	.+0      	; 0x3350 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf+0x6>
    3350:	00 d0       	rcall	.+0      	; 0x3352 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf+0x8>
    3352:	cd b7       	in	r28, 0x3d	; 61
    3354:	de b7       	in	r29, 0x3e	; 62
    3356:	9a 83       	std	Y+2, r25	; 0x02
    3358:	89 83       	std	Y+1, r24	; 0x01
    335a:	4b 83       	std	Y+3, r20	; 0x03
    335c:	5c 83       	std	Y+4, r21	; 0x04
    335e:	6d 83       	std	Y+5, r22	; 0x05
    3360:	7e 83       	std	Y+6, r23	; 0x06
				{
					longitudeInnerLoopGain = val;
    3362:	29 81       	ldd	r18, Y+1	; 0x01
    3364:	3a 81       	ldd	r19, Y+2	; 0x02
    3366:	8b 81       	ldd	r24, Y+3	; 0x03
    3368:	9c 81       	ldd	r25, Y+4	; 0x04
    336a:	ad 81       	ldd	r26, Y+5	; 0x05
    336c:	be 81       	ldd	r27, Y+6	; 0x06
    336e:	f9 01       	movw	r30, r18
    3370:	82 a3       	std	Z+34, r24	; 0x22
    3372:	93 a3       	std	Z+35, r25	; 0x23
    3374:	a4 a3       	std	Z+36, r26	; 0x24
    3376:	b5 a3       	std	Z+37, r27	; 0x25
				}
    3378:	26 96       	adiw	r28, 0x06	; 6
    337a:	0f b6       	in	r0, 0x3f	; 63
    337c:	f8 94       	cli
    337e:	de bf       	out	0x3e, r29	; 62
    3380:	0f be       	out	0x3f, r0	; 63
    3382:	cd bf       	out	0x3d, r28	; 61
    3384:	df 91       	pop	r29
    3386:	cf 91       	pop	r28
    3388:	08 95       	ret

0000338a <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf>:
				
				void setMinLongitudeServoControlValue(float val)
    338a:	cf 93       	push	r28
    338c:	df 93       	push	r29
    338e:	00 d0       	rcall	.+0      	; 0x3390 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf+0x6>
    3390:	00 d0       	rcall	.+0      	; 0x3392 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf+0x8>
    3392:	cd b7       	in	r28, 0x3d	; 61
    3394:	de b7       	in	r29, 0x3e	; 62
    3396:	9a 83       	std	Y+2, r25	; 0x02
    3398:	89 83       	std	Y+1, r24	; 0x01
    339a:	4b 83       	std	Y+3, r20	; 0x03
    339c:	5c 83       	std	Y+4, r21	; 0x04
    339e:	6d 83       	std	Y+5, r22	; 0x05
    33a0:	7e 83       	std	Y+6, r23	; 0x06
				{
					minLongitudeServoControlValue = val;
    33a2:	89 81       	ldd	r24, Y+1	; 0x01
    33a4:	9a 81       	ldd	r25, Y+2	; 0x02
    33a6:	9c 01       	movw	r18, r24
    33a8:	2e 5a       	subi	r18, 0xAE	; 174
    33aa:	3f 4f       	sbci	r19, 0xFF	; 255
    33ac:	8b 81       	ldd	r24, Y+3	; 0x03
    33ae:	9c 81       	ldd	r25, Y+4	; 0x04
    33b0:	ad 81       	ldd	r26, Y+5	; 0x05
    33b2:	be 81       	ldd	r27, Y+6	; 0x06
    33b4:	f9 01       	movw	r30, r18
    33b6:	80 83       	st	Z, r24
    33b8:	91 83       	std	Z+1, r25	; 0x01
    33ba:	a2 83       	std	Z+2, r26	; 0x02
    33bc:	b3 83       	std	Z+3, r27	; 0x03
				}
    33be:	26 96       	adiw	r28, 0x06	; 6
    33c0:	0f b6       	in	r0, 0x3f	; 63
    33c2:	f8 94       	cli
    33c4:	de bf       	out	0x3e, r29	; 62
    33c6:	0f be       	out	0x3f, r0	; 63
    33c8:	cd bf       	out	0x3d, r28	; 61
    33ca:	df 91       	pop	r29
    33cc:	cf 91       	pop	r28
    33ce:	08 95       	ret

000033d0 <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf>:
				
				void setMaxLongitudeServoControlValue(float val)
    33d0:	cf 93       	push	r28
    33d2:	df 93       	push	r29
    33d4:	00 d0       	rcall	.+0      	; 0x33d6 <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf+0x6>
    33d6:	00 d0       	rcall	.+0      	; 0x33d8 <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf+0x8>
    33d8:	cd b7       	in	r28, 0x3d	; 61
    33da:	de b7       	in	r29, 0x3e	; 62
    33dc:	9a 83       	std	Y+2, r25	; 0x02
    33de:	89 83       	std	Y+1, r24	; 0x01
    33e0:	4b 83       	std	Y+3, r20	; 0x03
    33e2:	5c 83       	std	Y+4, r21	; 0x04
    33e4:	6d 83       	std	Y+5, r22	; 0x05
    33e6:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxLongitudeServoControlValue = val;
    33e8:	89 81       	ldd	r24, Y+1	; 0x01
    33ea:	9a 81       	ldd	r25, Y+2	; 0x02
    33ec:	9c 01       	movw	r18, r24
    33ee:	2a 5a       	subi	r18, 0xAA	; 170
    33f0:	3f 4f       	sbci	r19, 0xFF	; 255
    33f2:	8b 81       	ldd	r24, Y+3	; 0x03
    33f4:	9c 81       	ldd	r25, Y+4	; 0x04
    33f6:	ad 81       	ldd	r26, Y+5	; 0x05
    33f8:	be 81       	ldd	r27, Y+6	; 0x06
    33fa:	f9 01       	movw	r30, r18
    33fc:	80 83       	st	Z, r24
    33fe:	91 83       	std	Z+1, r25	; 0x01
    3400:	a2 83       	std	Z+2, r26	; 0x02
    3402:	b3 83       	std	Z+3, r27	; 0x03
				}
    3404:	26 96       	adiw	r28, 0x06	; 6
    3406:	0f b6       	in	r0, 0x3f	; 63
    3408:	f8 94       	cli
    340a:	de bf       	out	0x3e, r29	; 62
    340c:	0f be       	out	0x3f, r0	; 63
    340e:	cd bf       	out	0x3d, r28	; 61
    3410:	df 91       	pop	r29
    3412:	cf 91       	pop	r28
    3414:	08 95       	ret

00003416 <_ZN10helicopter10controller13PIDController16setYIntegralGainEf>:
				
				
				
				
				
				void setYIntegralGain(float val)
    3416:	cf 93       	push	r28
    3418:	df 93       	push	r29
    341a:	00 d0       	rcall	.+0      	; 0x341c <_ZN10helicopter10controller13PIDController16setYIntegralGainEf+0x6>
    341c:	00 d0       	rcall	.+0      	; 0x341e <_ZN10helicopter10controller13PIDController16setYIntegralGainEf+0x8>
    341e:	cd b7       	in	r28, 0x3d	; 61
    3420:	de b7       	in	r29, 0x3e	; 62
    3422:	9a 83       	std	Y+2, r25	; 0x02
    3424:	89 83       	std	Y+1, r24	; 0x01
    3426:	4b 83       	std	Y+3, r20	; 0x03
    3428:	5c 83       	std	Y+4, r21	; 0x04
    342a:	6d 83       	std	Y+5, r22	; 0x05
    342c:	7e 83       	std	Y+6, r23	; 0x06
				{
					yIntegralGain = val;
    342e:	29 81       	ldd	r18, Y+1	; 0x01
    3430:	3a 81       	ldd	r19, Y+2	; 0x02
    3432:	8b 81       	ldd	r24, Y+3	; 0x03
    3434:	9c 81       	ldd	r25, Y+4	; 0x04
    3436:	ad 81       	ldd	r26, Y+5	; 0x05
    3438:	be 81       	ldd	r27, Y+6	; 0x06
    343a:	f9 01       	movw	r30, r18
    343c:	86 a3       	std	Z+38, r24	; 0x26
    343e:	97 a3       	std	Z+39, r25	; 0x27
    3440:	a0 a7       	std	Z+40, r26	; 0x28
    3442:	b1 a7       	std	Z+41, r27	; 0x29
				}
    3444:	26 96       	adiw	r28, 0x06	; 6
    3446:	0f b6       	in	r0, 0x3f	; 63
    3448:	f8 94       	cli
    344a:	de bf       	out	0x3e, r29	; 62
    344c:	0f be       	out	0x3f, r0	; 63
    344e:	cd bf       	out	0x3d, r28	; 61
    3450:	df 91       	pop	r29
    3452:	cf 91       	pop	r28
    3454:	08 95       	ret

00003456 <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf>:
				
				void setYDerivativeGain(float val)
    3456:	cf 93       	push	r28
    3458:	df 93       	push	r29
    345a:	00 d0       	rcall	.+0      	; 0x345c <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf+0x6>
    345c:	00 d0       	rcall	.+0      	; 0x345e <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf+0x8>
    345e:	cd b7       	in	r28, 0x3d	; 61
    3460:	de b7       	in	r29, 0x3e	; 62
    3462:	9a 83       	std	Y+2, r25	; 0x02
    3464:	89 83       	std	Y+1, r24	; 0x01
    3466:	4b 83       	std	Y+3, r20	; 0x03
    3468:	5c 83       	std	Y+4, r21	; 0x04
    346a:	6d 83       	std	Y+5, r22	; 0x05
    346c:	7e 83       	std	Y+6, r23	; 0x06
				{
					yDerivativeGain = val;
    346e:	29 81       	ldd	r18, Y+1	; 0x01
    3470:	3a 81       	ldd	r19, Y+2	; 0x02
    3472:	8b 81       	ldd	r24, Y+3	; 0x03
    3474:	9c 81       	ldd	r25, Y+4	; 0x04
    3476:	ad 81       	ldd	r26, Y+5	; 0x05
    3478:	be 81       	ldd	r27, Y+6	; 0x06
    347a:	f9 01       	movw	r30, r18
    347c:	82 a7       	std	Z+42, r24	; 0x2a
    347e:	93 a7       	std	Z+43, r25	; 0x2b
    3480:	a4 a7       	std	Z+44, r26	; 0x2c
    3482:	b5 a7       	std	Z+45, r27	; 0x2d
				}
    3484:	26 96       	adiw	r28, 0x06	; 6
    3486:	0f b6       	in	r0, 0x3f	; 63
    3488:	f8 94       	cli
    348a:	de bf       	out	0x3e, r29	; 62
    348c:	0f be       	out	0x3f, r0	; 63
    348e:	cd bf       	out	0x3d, r28	; 61
    3490:	df 91       	pop	r29
    3492:	cf 91       	pop	r28
    3494:	08 95       	ret

00003496 <_ZN10helicopter10controller13PIDController20setYProportionalGainEf>:
				
				void setYProportionalGain(float val)
    3496:	cf 93       	push	r28
    3498:	df 93       	push	r29
    349a:	00 d0       	rcall	.+0      	; 0x349c <_ZN10helicopter10controller13PIDController20setYProportionalGainEf+0x6>
    349c:	00 d0       	rcall	.+0      	; 0x349e <_ZN10helicopter10controller13PIDController20setYProportionalGainEf+0x8>
    349e:	cd b7       	in	r28, 0x3d	; 61
    34a0:	de b7       	in	r29, 0x3e	; 62
    34a2:	9a 83       	std	Y+2, r25	; 0x02
    34a4:	89 83       	std	Y+1, r24	; 0x01
    34a6:	4b 83       	std	Y+3, r20	; 0x03
    34a8:	5c 83       	std	Y+4, r21	; 0x04
    34aa:	6d 83       	std	Y+5, r22	; 0x05
    34ac:	7e 83       	std	Y+6, r23	; 0x06
				{
					yProportionalGain = val;
    34ae:	29 81       	ldd	r18, Y+1	; 0x01
    34b0:	3a 81       	ldd	r19, Y+2	; 0x02
    34b2:	8b 81       	ldd	r24, Y+3	; 0x03
    34b4:	9c 81       	ldd	r25, Y+4	; 0x04
    34b6:	ad 81       	ldd	r26, Y+5	; 0x05
    34b8:	be 81       	ldd	r27, Y+6	; 0x06
    34ba:	f9 01       	movw	r30, r18
    34bc:	86 a7       	std	Z+46, r24	; 0x2e
    34be:	97 a7       	std	Z+47, r25	; 0x2f
    34c0:	a0 ab       	std	Z+48, r26	; 0x30
    34c2:	b1 ab       	std	Z+49, r27	; 0x31
				}
    34c4:	26 96       	adiw	r28, 0x06	; 6
    34c6:	0f b6       	in	r0, 0x3f	; 63
    34c8:	f8 94       	cli
    34ca:	de bf       	out	0x3e, r29	; 62
    34cc:	0f be       	out	0x3f, r0	; 63
    34ce:	cd bf       	out	0x3d, r28	; 61
    34d0:	df 91       	pop	r29
    34d2:	cf 91       	pop	r28
    34d4:	08 95       	ret

000034d6 <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf>:
				
				void setYAntiWindupGain(float val)
    34d6:	cf 93       	push	r28
    34d8:	df 93       	push	r29
    34da:	00 d0       	rcall	.+0      	; 0x34dc <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf+0x6>
    34dc:	00 d0       	rcall	.+0      	; 0x34de <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf+0x8>
    34de:	cd b7       	in	r28, 0x3d	; 61
    34e0:	de b7       	in	r29, 0x3e	; 62
    34e2:	9a 83       	std	Y+2, r25	; 0x02
    34e4:	89 83       	std	Y+1, r24	; 0x01
    34e6:	4b 83       	std	Y+3, r20	; 0x03
    34e8:	5c 83       	std	Y+4, r21	; 0x04
    34ea:	6d 83       	std	Y+5, r22	; 0x05
    34ec:	7e 83       	std	Y+6, r23	; 0x06
				{
					yAntiWindupGain = val;
    34ee:	29 81       	ldd	r18, Y+1	; 0x01
    34f0:	3a 81       	ldd	r19, Y+2	; 0x02
    34f2:	8b 81       	ldd	r24, Y+3	; 0x03
    34f4:	9c 81       	ldd	r25, Y+4	; 0x04
    34f6:	ad 81       	ldd	r26, Y+5	; 0x05
    34f8:	be 81       	ldd	r27, Y+6	; 0x06
    34fa:	f9 01       	movw	r30, r18
    34fc:	82 ab       	std	Z+50, r24	; 0x32
    34fe:	93 ab       	std	Z+51, r25	; 0x33
    3500:	a4 ab       	std	Z+52, r26	; 0x34
    3502:	b5 ab       	std	Z+53, r27	; 0x35
				}
    3504:	26 96       	adiw	r28, 0x06	; 6
    3506:	0f b6       	in	r0, 0x3f	; 63
    3508:	f8 94       	cli
    350a:	de bf       	out	0x3e, r29	; 62
    350c:	0f be       	out	0x3f, r0	; 63
    350e:	cd bf       	out	0x3d, r28	; 61
    3510:	df 91       	pop	r29
    3512:	cf 91       	pop	r28
    3514:	08 95       	ret

00003516 <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf>:
				
				void setLateralInnerLoopGain(float val)
    3516:	cf 93       	push	r28
    3518:	df 93       	push	r29
    351a:	00 d0       	rcall	.+0      	; 0x351c <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf+0x6>
    351c:	00 d0       	rcall	.+0      	; 0x351e <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf+0x8>
    351e:	cd b7       	in	r28, 0x3d	; 61
    3520:	de b7       	in	r29, 0x3e	; 62
    3522:	9a 83       	std	Y+2, r25	; 0x02
    3524:	89 83       	std	Y+1, r24	; 0x01
    3526:	4b 83       	std	Y+3, r20	; 0x03
    3528:	5c 83       	std	Y+4, r21	; 0x04
    352a:	6d 83       	std	Y+5, r22	; 0x05
    352c:	7e 83       	std	Y+6, r23	; 0x06
				{
					lateralInnerLoopGain = val;
    352e:	29 81       	ldd	r18, Y+1	; 0x01
    3530:	3a 81       	ldd	r19, Y+2	; 0x02
    3532:	8b 81       	ldd	r24, Y+3	; 0x03
    3534:	9c 81       	ldd	r25, Y+4	; 0x04
    3536:	ad 81       	ldd	r26, Y+5	; 0x05
    3538:	be 81       	ldd	r27, Y+6	; 0x06
    353a:	f9 01       	movw	r30, r18
    353c:	86 ab       	std	Z+54, r24	; 0x36
    353e:	97 ab       	std	Z+55, r25	; 0x37
    3540:	a0 af       	std	Z+56, r26	; 0x38
    3542:	b1 af       	std	Z+57, r27	; 0x39
				}
    3544:	26 96       	adiw	r28, 0x06	; 6
    3546:	0f b6       	in	r0, 0x3f	; 63
    3548:	f8 94       	cli
    354a:	de bf       	out	0x3e, r29	; 62
    354c:	0f be       	out	0x3f, r0	; 63
    354e:	cd bf       	out	0x3d, r28	; 61
    3550:	df 91       	pop	r29
    3552:	cf 91       	pop	r28
    3554:	08 95       	ret

00003556 <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf>:
				
				void setMinLateralServoControlValue(float val)
    3556:	cf 93       	push	r28
    3558:	df 93       	push	r29
    355a:	00 d0       	rcall	.+0      	; 0x355c <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf+0x6>
    355c:	00 d0       	rcall	.+0      	; 0x355e <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf+0x8>
    355e:	cd b7       	in	r28, 0x3d	; 61
    3560:	de b7       	in	r29, 0x3e	; 62
    3562:	9a 83       	std	Y+2, r25	; 0x02
    3564:	89 83       	std	Y+1, r24	; 0x01
    3566:	4b 83       	std	Y+3, r20	; 0x03
    3568:	5c 83       	std	Y+4, r21	; 0x04
    356a:	6d 83       	std	Y+5, r22	; 0x05
    356c:	7e 83       	std	Y+6, r23	; 0x06
				{
					minLateralServoControlValue = val;
    356e:	89 81       	ldd	r24, Y+1	; 0x01
    3570:	9a 81       	ldd	r25, Y+2	; 0x02
    3572:	9c 01       	movw	r18, r24
    3574:	26 5a       	subi	r18, 0xA6	; 166
    3576:	3f 4f       	sbci	r19, 0xFF	; 255
    3578:	8b 81       	ldd	r24, Y+3	; 0x03
    357a:	9c 81       	ldd	r25, Y+4	; 0x04
    357c:	ad 81       	ldd	r26, Y+5	; 0x05
    357e:	be 81       	ldd	r27, Y+6	; 0x06
    3580:	f9 01       	movw	r30, r18
    3582:	80 83       	st	Z, r24
    3584:	91 83       	std	Z+1, r25	; 0x01
    3586:	a2 83       	std	Z+2, r26	; 0x02
    3588:	b3 83       	std	Z+3, r27	; 0x03
				}
    358a:	26 96       	adiw	r28, 0x06	; 6
    358c:	0f b6       	in	r0, 0x3f	; 63
    358e:	f8 94       	cli
    3590:	de bf       	out	0x3e, r29	; 62
    3592:	0f be       	out	0x3f, r0	; 63
    3594:	cd bf       	out	0x3d, r28	; 61
    3596:	df 91       	pop	r29
    3598:	cf 91       	pop	r28
    359a:	08 95       	ret

0000359c <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf>:
				
				void setMaxLateralServoControlValue(float val)
    359c:	cf 93       	push	r28
    359e:	df 93       	push	r29
    35a0:	00 d0       	rcall	.+0      	; 0x35a2 <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf+0x6>
    35a2:	00 d0       	rcall	.+0      	; 0x35a4 <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf+0x8>
    35a4:	cd b7       	in	r28, 0x3d	; 61
    35a6:	de b7       	in	r29, 0x3e	; 62
    35a8:	9a 83       	std	Y+2, r25	; 0x02
    35aa:	89 83       	std	Y+1, r24	; 0x01
    35ac:	4b 83       	std	Y+3, r20	; 0x03
    35ae:	5c 83       	std	Y+4, r21	; 0x04
    35b0:	6d 83       	std	Y+5, r22	; 0x05
    35b2:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxLateralServoControlValue = val;
    35b4:	89 81       	ldd	r24, Y+1	; 0x01
    35b6:	9a 81       	ldd	r25, Y+2	; 0x02
    35b8:	9c 01       	movw	r18, r24
    35ba:	22 5a       	subi	r18, 0xA2	; 162
    35bc:	3f 4f       	sbci	r19, 0xFF	; 255
    35be:	8b 81       	ldd	r24, Y+3	; 0x03
    35c0:	9c 81       	ldd	r25, Y+4	; 0x04
    35c2:	ad 81       	ldd	r26, Y+5	; 0x05
    35c4:	be 81       	ldd	r27, Y+6	; 0x06
    35c6:	f9 01       	movw	r30, r18
    35c8:	80 83       	st	Z, r24
    35ca:	91 83       	std	Z+1, r25	; 0x01
    35cc:	a2 83       	std	Z+2, r26	; 0x02
    35ce:	b3 83       	std	Z+3, r27	; 0x03
				}
    35d0:	26 96       	adiw	r28, 0x06	; 6
    35d2:	0f b6       	in	r0, 0x3f	; 63
    35d4:	f8 94       	cli
    35d6:	de bf       	out	0x3e, r29	; 62
    35d8:	0f be       	out	0x3f, r0	; 63
    35da:	cd bf       	out	0x3d, r28	; 61
    35dc:	df 91       	pop	r29
    35de:	cf 91       	pop	r28
    35e0:	08 95       	ret

000035e2 <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf>:
				void setZAntiWindupGain(float val)
				{
					zAntiWindupGain = val;
				}
				
				void setMinMainRotorServoControlValue(float val)
    35e2:	cf 93       	push	r28
    35e4:	df 93       	push	r29
    35e6:	00 d0       	rcall	.+0      	; 0x35e8 <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf+0x6>
    35e8:	00 d0       	rcall	.+0      	; 0x35ea <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf+0x8>
    35ea:	cd b7       	in	r28, 0x3d	; 61
    35ec:	de b7       	in	r29, 0x3e	; 62
    35ee:	9a 83       	std	Y+2, r25	; 0x02
    35f0:	89 83       	std	Y+1, r24	; 0x01
    35f2:	4b 83       	std	Y+3, r20	; 0x03
    35f4:	5c 83       	std	Y+4, r21	; 0x04
    35f6:	6d 83       	std	Y+5, r22	; 0x05
    35f8:	7e 83       	std	Y+6, r23	; 0x06
				{
					minMainRotorServoControlValue = val;
    35fa:	89 81       	ldd	r24, Y+1	; 0x01
    35fc:	9a 81       	ldd	r25, Y+2	; 0x02
    35fe:	9c 01       	movw	r18, r24
    3600:	2e 59       	subi	r18, 0x9E	; 158
    3602:	3f 4f       	sbci	r19, 0xFF	; 255
    3604:	8b 81       	ldd	r24, Y+3	; 0x03
    3606:	9c 81       	ldd	r25, Y+4	; 0x04
    3608:	ad 81       	ldd	r26, Y+5	; 0x05
    360a:	be 81       	ldd	r27, Y+6	; 0x06
    360c:	f9 01       	movw	r30, r18
    360e:	80 83       	st	Z, r24
    3610:	91 83       	std	Z+1, r25	; 0x01
    3612:	a2 83       	std	Z+2, r26	; 0x02
    3614:	b3 83       	std	Z+3, r27	; 0x03
				}
    3616:	26 96       	adiw	r28, 0x06	; 6
    3618:	0f b6       	in	r0, 0x3f	; 63
    361a:	f8 94       	cli
    361c:	de bf       	out	0x3e, r29	; 62
    361e:	0f be       	out	0x3f, r0	; 63
    3620:	cd bf       	out	0x3d, r28	; 61
    3622:	df 91       	pop	r29
    3624:	cf 91       	pop	r28
    3626:	08 95       	ret

00003628 <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf>:
				
				void setMaxMainRotorServoControlValue(float val)
    3628:	cf 93       	push	r28
    362a:	df 93       	push	r29
    362c:	00 d0       	rcall	.+0      	; 0x362e <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf+0x6>
    362e:	00 d0       	rcall	.+0      	; 0x3630 <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf+0x8>
    3630:	cd b7       	in	r28, 0x3d	; 61
    3632:	de b7       	in	r29, 0x3e	; 62
    3634:	9a 83       	std	Y+2, r25	; 0x02
    3636:	89 83       	std	Y+1, r24	; 0x01
    3638:	4b 83       	std	Y+3, r20	; 0x03
    363a:	5c 83       	std	Y+4, r21	; 0x04
    363c:	6d 83       	std	Y+5, r22	; 0x05
    363e:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxMainRotorServoControlValue = val;
    3640:	89 81       	ldd	r24, Y+1	; 0x01
    3642:	9a 81       	ldd	r25, Y+2	; 0x02
    3644:	9c 01       	movw	r18, r24
    3646:	2a 59       	subi	r18, 0x9A	; 154
    3648:	3f 4f       	sbci	r19, 0xFF	; 255
    364a:	8b 81       	ldd	r24, Y+3	; 0x03
    364c:	9c 81       	ldd	r25, Y+4	; 0x04
    364e:	ad 81       	ldd	r26, Y+5	; 0x05
    3650:	be 81       	ldd	r27, Y+6	; 0x06
    3652:	f9 01       	movw	r30, r18
    3654:	80 83       	st	Z, r24
    3656:	91 83       	std	Z+1, r25	; 0x01
    3658:	a2 83       	std	Z+2, r26	; 0x02
    365a:	b3 83       	std	Z+3, r27	; 0x03
				}
    365c:	26 96       	adiw	r28, 0x06	; 6
    365e:	0f b6       	in	r0, 0x3f	; 63
    3660:	f8 94       	cli
    3662:	de bf       	out	0x3e, r29	; 62
    3664:	0f be       	out	0x3f, r0	; 63
    3666:	cd bf       	out	0x3d, r28	; 61
    3668:	df 91       	pop	r29
    366a:	cf 91       	pop	r28
    366c:	08 95       	ret

0000366e <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf>:
				
				
				/**
				 * Gain value applied to the yaw proportional error
				 */
				void setYawProportionalGain(float yawProportionalGain)
    366e:	cf 93       	push	r28
    3670:	df 93       	push	r29
    3672:	00 d0       	rcall	.+0      	; 0x3674 <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf+0x6>
    3674:	00 d0       	rcall	.+0      	; 0x3676 <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf+0x8>
    3676:	cd b7       	in	r28, 0x3d	; 61
    3678:	de b7       	in	r29, 0x3e	; 62
    367a:	9a 83       	std	Y+2, r25	; 0x02
    367c:	89 83       	std	Y+1, r24	; 0x01
    367e:	4b 83       	std	Y+3, r20	; 0x03
    3680:	5c 83       	std	Y+4, r21	; 0x04
    3682:	6d 83       	std	Y+5, r22	; 0x05
    3684:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawProportionalGain = yawProportionalGain;
    3686:	29 81       	ldd	r18, Y+1	; 0x01
    3688:	3a 81       	ldd	r19, Y+2	; 0x02
    368a:	8b 81       	ldd	r24, Y+3	; 0x03
    368c:	9c 81       	ldd	r25, Y+4	; 0x04
    368e:	ad 81       	ldd	r26, Y+5	; 0x05
    3690:	be 81       	ldd	r27, Y+6	; 0x06
    3692:	f9 01       	movw	r30, r18
    3694:	82 87       	std	Z+10, r24	; 0x0a
    3696:	93 87       	std	Z+11, r25	; 0x0b
    3698:	a4 87       	std	Z+12, r26	; 0x0c
    369a:	b5 87       	std	Z+13, r27	; 0x0d
				}
    369c:	26 96       	adiw	r28, 0x06	; 6
    369e:	0f b6       	in	r0, 0x3f	; 63
    36a0:	f8 94       	cli
    36a2:	de bf       	out	0x3e, r29	; 62
    36a4:	0f be       	out	0x3f, r0	; 63
    36a6:	cd bf       	out	0x3d, r28	; 61
    36a8:	df 91       	pop	r29
    36aa:	cf 91       	pop	r28
    36ac:	08 95       	ret

000036ae <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf>:
				
				/**
				 * Gain value applied to the yaw integral
				 */
				void setYawIntegralGain(float yawIntegralGain)
    36ae:	cf 93       	push	r28
    36b0:	df 93       	push	r29
    36b2:	00 d0       	rcall	.+0      	; 0x36b4 <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf+0x6>
    36b4:	00 d0       	rcall	.+0      	; 0x36b6 <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf+0x8>
    36b6:	cd b7       	in	r28, 0x3d	; 61
    36b8:	de b7       	in	r29, 0x3e	; 62
    36ba:	9a 83       	std	Y+2, r25	; 0x02
    36bc:	89 83       	std	Y+1, r24	; 0x01
    36be:	4b 83       	std	Y+3, r20	; 0x03
    36c0:	5c 83       	std	Y+4, r21	; 0x04
    36c2:	6d 83       	std	Y+5, r22	; 0x05
    36c4:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawIntegralGain = yawIntegralGain;
    36c6:	29 81       	ldd	r18, Y+1	; 0x01
    36c8:	3a 81       	ldd	r19, Y+2	; 0x02
    36ca:	8b 81       	ldd	r24, Y+3	; 0x03
    36cc:	9c 81       	ldd	r25, Y+4	; 0x04
    36ce:	ad 81       	ldd	r26, Y+5	; 0x05
    36d0:	be 81       	ldd	r27, Y+6	; 0x06
    36d2:	f9 01       	movw	r30, r18
    36d4:	82 83       	std	Z+2, r24	; 0x02
    36d6:	93 83       	std	Z+3, r25	; 0x03
    36d8:	a4 83       	std	Z+4, r26	; 0x04
    36da:	b5 83       	std	Z+5, r27	; 0x05
				}
    36dc:	26 96       	adiw	r28, 0x06	; 6
    36de:	0f b6       	in	r0, 0x3f	; 63
    36e0:	f8 94       	cli
    36e2:	de bf       	out	0x3e, r29	; 62
    36e4:	0f be       	out	0x3f, r0	; 63
    36e6:	cd bf       	out	0x3d, r28	; 61
    36e8:	df 91       	pop	r29
    36ea:	cf 91       	pop	r28
    36ec:	08 95       	ret

000036ee <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf>:
				
				/**
				 * Gain value applied to the derivative
				 */
				void setYawDerivativeGain(float yawDerivativeGain)
    36ee:	cf 93       	push	r28
    36f0:	df 93       	push	r29
    36f2:	00 d0       	rcall	.+0      	; 0x36f4 <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf+0x6>
    36f4:	00 d0       	rcall	.+0      	; 0x36f6 <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf+0x8>
    36f6:	cd b7       	in	r28, 0x3d	; 61
    36f8:	de b7       	in	r29, 0x3e	; 62
    36fa:	9a 83       	std	Y+2, r25	; 0x02
    36fc:	89 83       	std	Y+1, r24	; 0x01
    36fe:	4b 83       	std	Y+3, r20	; 0x03
    3700:	5c 83       	std	Y+4, r21	; 0x04
    3702:	6d 83       	std	Y+5, r22	; 0x05
    3704:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawDerivativeGain = yawDerivativeGain;
    3706:	29 81       	ldd	r18, Y+1	; 0x01
    3708:	3a 81       	ldd	r19, Y+2	; 0x02
    370a:	8b 81       	ldd	r24, Y+3	; 0x03
    370c:	9c 81       	ldd	r25, Y+4	; 0x04
    370e:	ad 81       	ldd	r26, Y+5	; 0x05
    3710:	be 81       	ldd	r27, Y+6	; 0x06
    3712:	f9 01       	movw	r30, r18
    3714:	86 83       	std	Z+6, r24	; 0x06
    3716:	97 83       	std	Z+7, r25	; 0x07
    3718:	a0 87       	std	Z+8, r26	; 0x08
    371a:	b1 87       	std	Z+9, r27	; 0x09
				}
    371c:	26 96       	adiw	r28, 0x06	; 6
    371e:	0f b6       	in	r0, 0x3f	; 63
    3720:	f8 94       	cli
    3722:	de bf       	out	0x3e, r29	; 62
    3724:	0f be       	out	0x3f, r0	; 63
    3726:	cd bf       	out	0x3d, r28	; 61
    3728:	df 91       	pop	r29
    372a:	cf 91       	pop	r28
    372c:	08 95       	ret

0000372e <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf>:
				
				/**
				 * The number of seconds between pid controller updates. This number
				 * should generally be less than 1. Like .05 for a 20 hz rate.
				 */
				void setIntervalPeriodSecs(float intervalPeriodSecs)
    372e:	cf 93       	push	r28
    3730:	df 93       	push	r29
    3732:	00 d0       	rcall	.+0      	; 0x3734 <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf+0x6>
    3734:	00 d0       	rcall	.+0      	; 0x3736 <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf+0x8>
    3736:	cd b7       	in	r28, 0x3d	; 61
    3738:	de b7       	in	r29, 0x3e	; 62
    373a:	9a 83       	std	Y+2, r25	; 0x02
    373c:	89 83       	std	Y+1, r24	; 0x01
    373e:	4b 83       	std	Y+3, r20	; 0x03
    3740:	5c 83       	std	Y+4, r21	; 0x04
    3742:	6d 83       	std	Y+5, r22	; 0x05
    3744:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->intervalPeriodSecs = intervalPeriodSecs;
    3746:	89 81       	ldd	r24, Y+1	; 0x01
    3748:	9a 81       	ldd	r25, Y+2	; 0x02
    374a:	9c 01       	movw	r18, r24
    374c:	26 59       	subi	r18, 0x96	; 150
    374e:	3f 4f       	sbci	r19, 0xFF	; 255
    3750:	8b 81       	ldd	r24, Y+3	; 0x03
    3752:	9c 81       	ldd	r25, Y+4	; 0x04
    3754:	ad 81       	ldd	r26, Y+5	; 0x05
    3756:	be 81       	ldd	r27, Y+6	; 0x06
    3758:	f9 01       	movw	r30, r18
    375a:	80 83       	st	Z, r24
    375c:	91 83       	std	Z+1, r25	; 0x01
    375e:	a2 83       	std	Z+2, r26	; 0x02
    3760:	b3 83       	std	Z+3, r27	; 0x03
				}
    3762:	26 96       	adiw	r28, 0x06	; 6
    3764:	0f b6       	in	r0, 0x3f	; 63
    3766:	f8 94       	cli
    3768:	de bf       	out	0x3e, r29	; 62
    376a:	0f be       	out	0x3f, r0	; 63
    376c:	cd bf       	out	0x3d, r28	; 61
    376e:	df 91       	pop	r29
    3770:	cf 91       	pop	r28
    3772:	08 95       	ret

00003774 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf>:
				 * keeps increasing despite the helicopter already at the maximum possible control values.
				 * @param yawAntiWindupGain The gain value which represents how fast the integral will
				 * go back to 0 when the servos are saturated.
				 * Some simple rule that have been suggested for the tracking time are ~ Tt = TiTd and Tt = (Ti + Td)/2.
				 */
				void setYawAntiWindupGain(float yawAntiWindupGain)
    3774:	cf 93       	push	r28
    3776:	df 93       	push	r29
    3778:	00 d0       	rcall	.+0      	; 0x377a <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf+0x6>
    377a:	00 d0       	rcall	.+0      	; 0x377c <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf+0x8>
    377c:	cd b7       	in	r28, 0x3d	; 61
    377e:	de b7       	in	r29, 0x3e	; 62
    3780:	9a 83       	std	Y+2, r25	; 0x02
    3782:	89 83       	std	Y+1, r24	; 0x01
    3784:	4b 83       	std	Y+3, r20	; 0x03
    3786:	5c 83       	std	Y+4, r21	; 0x04
    3788:	6d 83       	std	Y+5, r22	; 0x05
    378a:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawAntiWindupGain = yawAntiWindupGain;
    378c:	29 81       	ldd	r18, Y+1	; 0x01
    378e:	3a 81       	ldd	r19, Y+2	; 0x02
    3790:	8b 81       	ldd	r24, Y+3	; 0x03
    3792:	9c 81       	ldd	r25, Y+4	; 0x04
    3794:	ad 81       	ldd	r26, Y+5	; 0x05
    3796:	be 81       	ldd	r27, Y+6	; 0x06
    3798:	f9 01       	movw	r30, r18
    379a:	86 87       	std	Z+14, r24	; 0x0e
    379c:	97 87       	std	Z+15, r25	; 0x0f
    379e:	a0 8b       	std	Z+16, r26	; 0x10
    37a0:	b1 8b       	std	Z+17, r27	; 0x11
				}
    37a2:	26 96       	adiw	r28, 0x06	; 6
    37a4:	0f b6       	in	r0, 0x3f	; 63
    37a6:	f8 94       	cli
    37a8:	de bf       	out	0x3e, r29	; 62
    37aa:	0f be       	out	0x3f, r0	; 63
    37ac:	cd bf       	out	0x3d, r28	; 61
    37ae:	df 91       	pop	r29
    37b0:	cf 91       	pop	r28
    37b2:	08 95       	ret

000037b4 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf>:
				/**
				 * The minimum control value that the yaw actuators can be set too. This is used for 
				 * integral anti-windup to determine when the actuators would be saturated.
				 * The value should be no smaller than the controlMinValue (e.g. no less than -1)
				 */
				void setMinYawServoControl(float minYawServoControlValue)
    37b4:	cf 93       	push	r28
    37b6:	df 93       	push	r29
    37b8:	00 d0       	rcall	.+0      	; 0x37ba <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf+0x6>
    37ba:	00 d0       	rcall	.+0      	; 0x37bc <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf+0x8>
    37bc:	cd b7       	in	r28, 0x3d	; 61
    37be:	de b7       	in	r29, 0x3e	; 62
    37c0:	9a 83       	std	Y+2, r25	; 0x02
    37c2:	89 83       	std	Y+1, r24	; 0x01
    37c4:	4b 83       	std	Y+3, r20	; 0x03
    37c6:	5c 83       	std	Y+4, r21	; 0x04
    37c8:	6d 83       	std	Y+5, r22	; 0x05
    37ca:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->minYawServoControlValue = minYawServoControlValue;
    37cc:	89 81       	ldd	r24, Y+1	; 0x01
    37ce:	9a 81       	ldd	r25, Y+2	; 0x02
    37d0:	9c 01       	movw	r18, r24
    37d2:	26 5b       	subi	r18, 0xB6	; 182
    37d4:	3f 4f       	sbci	r19, 0xFF	; 255
    37d6:	8b 81       	ldd	r24, Y+3	; 0x03
    37d8:	9c 81       	ldd	r25, Y+4	; 0x04
    37da:	ad 81       	ldd	r26, Y+5	; 0x05
    37dc:	be 81       	ldd	r27, Y+6	; 0x06
    37de:	f9 01       	movw	r30, r18
    37e0:	80 83       	st	Z, r24
    37e2:	91 83       	std	Z+1, r25	; 0x01
    37e4:	a2 83       	std	Z+2, r26	; 0x02
    37e6:	b3 83       	std	Z+3, r27	; 0x03
				}
    37e8:	26 96       	adiw	r28, 0x06	; 6
    37ea:	0f b6       	in	r0, 0x3f	; 63
    37ec:	f8 94       	cli
    37ee:	de bf       	out	0x3e, r29	; 62
    37f0:	0f be       	out	0x3f, r0	; 63
    37f2:	cd bf       	out	0x3d, r28	; 61
    37f4:	df 91       	pop	r29
    37f6:	cf 91       	pop	r28
    37f8:	08 95       	ret

000037fa <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf>:
				/**
				 * The maximum control value that the yaw actuators can be set too. This is used for 
				 * integral anti-windup to determine when the actuators would be saturated.
				 * The value should be no larger than the controlMaxValue (e.g. no greater than 1)
				 */
				void setMaxYawServoControl(float maxYawServoControlValue)
    37fa:	cf 93       	push	r28
    37fc:	df 93       	push	r29
    37fe:	00 d0       	rcall	.+0      	; 0x3800 <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf+0x6>
    3800:	00 d0       	rcall	.+0      	; 0x3802 <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf+0x8>
    3802:	cd b7       	in	r28, 0x3d	; 61
    3804:	de b7       	in	r29, 0x3e	; 62
    3806:	9a 83       	std	Y+2, r25	; 0x02
    3808:	89 83       	std	Y+1, r24	; 0x01
    380a:	4b 83       	std	Y+3, r20	; 0x03
    380c:	5c 83       	std	Y+4, r21	; 0x04
    380e:	6d 83       	std	Y+5, r22	; 0x05
    3810:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->maxYawServoControlValue = maxYawServoControlValue;
    3812:	89 81       	ldd	r24, Y+1	; 0x01
    3814:	9a 81       	ldd	r25, Y+2	; 0x02
    3816:	9c 01       	movw	r18, r24
    3818:	22 5b       	subi	r18, 0xB2	; 178
    381a:	3f 4f       	sbci	r19, 0xFF	; 255
    381c:	8b 81       	ldd	r24, Y+3	; 0x03
    381e:	9c 81       	ldd	r25, Y+4	; 0x04
    3820:	ad 81       	ldd	r26, Y+5	; 0x05
    3822:	be 81       	ldd	r27, Y+6	; 0x06
    3824:	f9 01       	movw	r30, r18
    3826:	80 83       	st	Z, r24
    3828:	91 83       	std	Z+1, r25	; 0x01
    382a:	a2 83       	std	Z+2, r26	; 0x02
    382c:	b3 83       	std	Z+3, r27	; 0x03
				}
    382e:	26 96       	adiw	r28, 0x06	; 6
    3830:	0f b6       	in	r0, 0x3f	; 63
    3832:	f8 94       	cli
    3834:	de bf       	out	0x3e, r29	; 62
    3836:	0f be       	out	0x3f, r0	; 63
    3838:	cd bf       	out	0x3d, r28	; 61
    383a:	df 91       	pop	r29
    383c:	cf 91       	pop	r28
    383e:	08 95       	ret

00003840 <_ZN10helicopter10controller13PIDController18setControlMaxValueEf>:
				
				/**
				 * This is the maximum possible output value for a control signal.
				 * Generally, this should be set to 1.
				 */
				void setControlMaxValue(float controlMaxValue)
    3840:	cf 93       	push	r28
    3842:	df 93       	push	r29
    3844:	00 d0       	rcall	.+0      	; 0x3846 <_ZN10helicopter10controller13PIDController18setControlMaxValueEf+0x6>
    3846:	00 d0       	rcall	.+0      	; 0x3848 <_ZN10helicopter10controller13PIDController18setControlMaxValueEf+0x8>
    3848:	cd b7       	in	r28, 0x3d	; 61
    384a:	de b7       	in	r29, 0x3e	; 62
    384c:	9a 83       	std	Y+2, r25	; 0x02
    384e:	89 83       	std	Y+1, r24	; 0x01
    3850:	4b 83       	std	Y+3, r20	; 0x03
    3852:	5c 83       	std	Y+4, r21	; 0x04
    3854:	6d 83       	std	Y+5, r22	; 0x05
    3856:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->controlMaxValue = controlMaxValue;
    3858:	89 81       	ldd	r24, Y+1	; 0x01
    385a:	9a 81       	ldd	r25, Y+2	; 0x02
    385c:	9c 01       	movw	r18, r24
    385e:	22 59       	subi	r18, 0x92	; 146
    3860:	3f 4f       	sbci	r19, 0xFF	; 255
    3862:	8b 81       	ldd	r24, Y+3	; 0x03
    3864:	9c 81       	ldd	r25, Y+4	; 0x04
    3866:	ad 81       	ldd	r26, Y+5	; 0x05
    3868:	be 81       	ldd	r27, Y+6	; 0x06
    386a:	f9 01       	movw	r30, r18
    386c:	80 83       	st	Z, r24
    386e:	91 83       	std	Z+1, r25	; 0x01
    3870:	a2 83       	std	Z+2, r26	; 0x02
    3872:	b3 83       	std	Z+3, r27	; 0x03
				}
    3874:	26 96       	adiw	r28, 0x06	; 6
    3876:	0f b6       	in	r0, 0x3f	; 63
    3878:	f8 94       	cli
    387a:	de bf       	out	0x3e, r29	; 62
    387c:	0f be       	out	0x3f, r0	; 63
    387e:	cd bf       	out	0x3d, r28	; 61
    3880:	df 91       	pop	r29
    3882:	cf 91       	pop	r28
    3884:	08 95       	ret

00003886 <_ZN10helicopter10controller13PIDController18setControlMinValueEf>:
				
				/**
				 * This is the minimum possible value for a control signal.
				 * Generally, this should be set to -1.
				 */
				void setControlMinValue(float controlMinValue)
    3886:	cf 93       	push	r28
    3888:	df 93       	push	r29
    388a:	00 d0       	rcall	.+0      	; 0x388c <_ZN10helicopter10controller13PIDController18setControlMinValueEf+0x6>
    388c:	00 d0       	rcall	.+0      	; 0x388e <_ZN10helicopter10controller13PIDController18setControlMinValueEf+0x8>
    388e:	cd b7       	in	r28, 0x3d	; 61
    3890:	de b7       	in	r29, 0x3e	; 62
    3892:	9a 83       	std	Y+2, r25	; 0x02
    3894:	89 83       	std	Y+1, r24	; 0x01
    3896:	4b 83       	std	Y+3, r20	; 0x03
    3898:	5c 83       	std	Y+4, r21	; 0x04
    389a:	6d 83       	std	Y+5, r22	; 0x05
    389c:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->controlMinValue = controlMinValue;
    389e:	89 81       	ldd	r24, Y+1	; 0x01
    38a0:	9a 81       	ldd	r25, Y+2	; 0x02
    38a2:	9c 01       	movw	r18, r24
    38a4:	2e 58       	subi	r18, 0x8E	; 142
    38a6:	3f 4f       	sbci	r19, 0xFF	; 255
    38a8:	8b 81       	ldd	r24, Y+3	; 0x03
    38aa:	9c 81       	ldd	r25, Y+4	; 0x04
    38ac:	ad 81       	ldd	r26, Y+5	; 0x05
    38ae:	be 81       	ldd	r27, Y+6	; 0x06
    38b0:	f9 01       	movw	r30, r18
    38b2:	80 83       	st	Z, r24
    38b4:	91 83       	std	Z+1, r25	; 0x01
    38b6:	a2 83       	std	Z+2, r26	; 0x02
    38b8:	b3 83       	std	Z+3, r27	; 0x03
				}			
    38ba:	26 96       	adiw	r28, 0x06	; 6
    38bc:	0f b6       	in	r0, 0x3f	; 63
    38be:	f8 94       	cli
    38c0:	de bf       	out	0x3e, r29	; 62
    38c2:	0f be       	out	0x3f, r0	; 63
    38c4:	cd bf       	out	0x3d, r28	; 61
    38c6:	df 91       	pop	r29
    38c8:	cf 91       	pop	r28
    38ca:	08 95       	ret

000038cc <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE>:
using namespace helicopter::model;
using namespace helicopter::controller;
using namespace helicopter::util;

void setupDefaultsandReferencePosition(SystemModel *model, PIDController *pidController)
{	
    38cc:	cf 93       	push	r28
    38ce:	df 93       	push	r29
    38d0:	00 d0       	rcall	.+0      	; 0x38d2 <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE+0x6>
    38d2:	1f 92       	push	r1
    38d4:	cd b7       	in	r28, 0x3d	; 61
    38d6:	de b7       	in	r29, 0x3e	; 62
    38d8:	9a 83       	std	Y+2, r25	; 0x02
    38da:	89 83       	std	Y+1, r24	; 0x01
    38dc:	7c 83       	std	Y+4, r23	; 0x04
    38de:	6b 83       	std	Y+3, r22	; 0x03
	/**
	 * Set reference position of the helicopter.
	 * These are the setpoints that the helicopter to navigate/orient to.
	 * This includes the final location that the helicopter should travel to.
	 */
	model->ReferenceMagYawDegrees(0.0); //point north
    38e0:	89 81       	ldd	r24, Y+1	; 0x01
    38e2:	9a 81       	ldd	r25, Y+2	; 0x02
    38e4:	40 e0       	ldi	r20, 0x00	; 0
    38e6:	50 e0       	ldi	r21, 0x00	; 0
    38e8:	ba 01       	movw	r22, r20
    38ea:	0e 94 5f 17 	call	0x2ebe	; 0x2ebe <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf>
	model->ReferenceYawVelocityDegreesPerSecond(0.0);
    38ee:	89 81       	ldd	r24, Y+1	; 0x01
    38f0:	9a 81       	ldd	r25, Y+2	; 0x02
    38f2:	40 e0       	ldi	r20, 0x00	; 0
    38f4:	50 e0       	ldi	r21, 0x00	; 0
    38f6:	ba 01       	movw	r22, r20
    38f8:	0e 94 7f 17 	call	0x2efe	; 0x2efe <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf>
	
	//Negative values because positive values are 'down' in NED. So we want a negative altitude setpoint.
	model->ReferenceZNEDBodyFrameFeet(-100);
    38fc:	89 81       	ldd	r24, Y+1	; 0x01
    38fe:	9a 81       	ldd	r25, Y+2	; 0x02
    3900:	40 e0       	ldi	r20, 0x00	; 0
    3902:	50 e0       	ldi	r21, 0x00	; 0
    3904:	68 ec       	ldi	r22, 0xC8	; 200
    3906:	72 ec       	ldi	r23, 0xC2	; 194
    3908:	0e 94 3d 18 	call	0x307a	; 0x307a <_ZN10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEf>
	model->ReferenceZVelocityFeetPerSecond(0);
    390c:	89 81       	ldd	r24, Y+1	; 0x01
    390e:	9a 81       	ldd	r25, Y+2	; 0x02
    3910:	40 e0       	ldi	r20, 0x00	; 0
    3912:	50 e0       	ldi	r21, 0x00	; 0
    3914:	ba 01       	movw	r22, r20
    3916:	0e 94 60 18 	call	0x30c0	; 0x30c0 <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf>
	model->ReferenceXNEDBodyFrame(0);
    391a:	89 81       	ldd	r24, Y+1	; 0x01
    391c:	9a 81       	ldd	r25, Y+2	; 0x02
    391e:	40 e0       	ldi	r20, 0x00	; 0
    3920:	50 e0       	ldi	r21, 0x00	; 0
    3922:	ba 01       	movw	r22, r20
    3924:	0e 94 9f 17 	call	0x2f3e	; 0x2f3e <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf>
	model->ReferenceXVelocityMetersPerSecond(0);
    3928:	89 81       	ldd	r24, Y+1	; 0x01
    392a:	9a 81       	ldd	r25, Y+2	; 0x02
    392c:	40 e0       	ldi	r20, 0x00	; 0
    392e:	50 e0       	ldi	r21, 0x00	; 0
    3930:	ba 01       	movw	r22, r20
    3932:	0e 94 bf 17 	call	0x2f7e	; 0x2f7e <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf>
	model->ReferenceYNEDBodyFrame(0);
    3936:	89 81       	ldd	r24, Y+1	; 0x01
    3938:	9a 81       	ldd	r25, Y+2	; 0x02
    393a:	40 e0       	ldi	r20, 0x00	; 0
    393c:	50 e0       	ldi	r21, 0x00	; 0
    393e:	ba 01       	movw	r22, r20
    3940:	0e 94 df 17 	call	0x2fbe	; 0x2fbe <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf>
	model->ReferenceYVelocityMetersPerSecond(0);
    3944:	89 81       	ldd	r24, Y+1	; 0x01
    3946:	9a 81       	ldd	r25, Y+2	; 0x02
    3948:	40 e0       	ldi	r20, 0x00	; 0
    394a:	50 e0       	ldi	r21, 0x00	; 0
    394c:	ba 01       	movw	r22, r20
    394e:	0e 94 02 18 	call	0x3004	; 0x3004 <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf>
	
	
	pidController->setYawProportionalGain(3.0);
    3952:	8b 81       	ldd	r24, Y+3	; 0x03
    3954:	9c 81       	ldd	r25, Y+4	; 0x04
    3956:	40 e0       	ldi	r20, 0x00	; 0
    3958:	50 e0       	ldi	r21, 0x00	; 0
    395a:	60 e4       	ldi	r22, 0x40	; 64
    395c:	70 e4       	ldi	r23, 0x40	; 64
    395e:	0e 94 37 1b 	call	0x366e	; 0x366e <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf>
	pidController->setYawIntegralGain(.008);
    3962:	8b 81       	ldd	r24, Y+3	; 0x03
    3964:	9c 81       	ldd	r25, Y+4	; 0x04
    3966:	4f e6       	ldi	r20, 0x6F	; 111
    3968:	52 e1       	ldi	r21, 0x12	; 18
    396a:	63 e0       	ldi	r22, 0x03	; 3
    396c:	7c e3       	ldi	r23, 0x3C	; 60
    396e:	0e 94 57 1b 	call	0x36ae	; 0x36ae <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf>
	pidController->setYawDerivativeGain(.85);
    3972:	8b 81       	ldd	r24, Y+3	; 0x03
    3974:	9c 81       	ldd	r25, Y+4	; 0x04
    3976:	4a e9       	ldi	r20, 0x9A	; 154
    3978:	59 e9       	ldi	r21, 0x99	; 153
    397a:	69 e5       	ldi	r22, 0x59	; 89
    397c:	7f e3       	ldi	r23, 0x3F	; 63
    397e:	0e 94 77 1b 	call	0x36ee	; 0x36ee <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf>
	pidController->setYawAntiWindupGain(.1);
    3982:	8b 81       	ldd	r24, Y+3	; 0x03
    3984:	9c 81       	ldd	r25, Y+4	; 0x04
    3986:	4d ec       	ldi	r20, 0xCD	; 205
    3988:	5c ec       	ldi	r21, 0xCC	; 204
    398a:	6c ec       	ldi	r22, 0xCC	; 204
    398c:	7d e3       	ldi	r23, 0x3D	; 61
    398e:	0e 94 ba 1b 	call	0x3774	; 0x3774 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf>
	
	pidController->setXProportionalGain(.289);
    3992:	8b 81       	ldd	r24, Y+3	; 0x03
    3994:	9c 81       	ldd	r25, Y+4	; 0x04
    3996:	4f ec       	ldi	r20, 0xCF	; 207
    3998:	57 ef       	ldi	r21, 0xF7	; 247
    399a:	63 e9       	ldi	r22, 0x93	; 147
    399c:	7e e3       	ldi	r23, 0x3E	; 62
    399e:	0e 94 65 19 	call	0x32ca	; 0x32ca <_ZN10helicopter10controller13PIDController20setXProportionalGainEf>
	pidController->setXIntegralGain(0);
    39a2:	8b 81       	ldd	r24, Y+3	; 0x03
    39a4:	9c 81       	ldd	r25, Y+4	; 0x04
    39a6:	40 e0       	ldi	r20, 0x00	; 0
    39a8:	50 e0       	ldi	r21, 0x00	; 0
    39aa:	ba 01       	movw	r22, r20
    39ac:	0e 94 25 19 	call	0x324a	; 0x324a <_ZN10helicopter10controller13PIDController16setXIntegralGainEf>
	pidController->setXDerivativeGain(1.859);
    39b0:	8b 81       	ldd	r24, Y+3	; 0x03
    39b2:	9c 81       	ldd	r25, Y+4	; 0x04
    39b4:	46 eb       	ldi	r20, 0xB6	; 182
    39b6:	53 ef       	ldi	r21, 0xF3	; 243
    39b8:	6d ee       	ldi	r22, 0xED	; 237
    39ba:	7f e3       	ldi	r23, 0x3F	; 63
    39bc:	0e 94 45 19 	call	0x328a	; 0x328a <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf>
	pidController->setXAntiWindupGain(0);
    39c0:	8b 81       	ldd	r24, Y+3	; 0x03
    39c2:	9c 81       	ldd	r25, Y+4	; 0x04
    39c4:	40 e0       	ldi	r20, 0x00	; 0
    39c6:	50 e0       	ldi	r21, 0x00	; 0
    39c8:	ba 01       	movw	r22, r20
    39ca:	0e 94 85 19 	call	0x330a	; 0x330a <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf>
	pidController->setLongitudeInnerLoopGain(.031);
    39ce:	8b 81       	ldd	r24, Y+3	; 0x03
    39d0:	9c 81       	ldd	r25, Y+4	; 0x04
    39d2:	46 eb       	ldi	r20, 0xB6	; 182
    39d4:	53 ef       	ldi	r21, 0xF3	; 243
    39d6:	6d ef       	ldi	r22, 0xFD	; 253
    39d8:	7c e3       	ldi	r23, 0x3C	; 60
    39da:	0e 94 a5 19 	call	0x334a	; 0x334a <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf>
	
	pidController->setYProportionalGain(1.437);
    39de:	8b 81       	ldd	r24, Y+3	; 0x03
    39e0:	9c 81       	ldd	r25, Y+4	; 0x04
    39e2:	4e e9       	ldi	r20, 0x9E	; 158
    39e4:	5f ee       	ldi	r21, 0xEF	; 239
    39e6:	67 eb       	ldi	r22, 0xB7	; 183
    39e8:	7f e3       	ldi	r23, 0x3F	; 63
    39ea:	0e 94 4b 1a 	call	0x3496	; 0x3496 <_ZN10helicopter10controller13PIDController20setYProportionalGainEf>
	pidController->setYIntegralGain(0);
    39ee:	8b 81       	ldd	r24, Y+3	; 0x03
    39f0:	9c 81       	ldd	r25, Y+4	; 0x04
    39f2:	40 e0       	ldi	r20, 0x00	; 0
    39f4:	50 e0       	ldi	r21, 0x00	; 0
    39f6:	ba 01       	movw	r22, r20
    39f8:	0e 94 0b 1a 	call	0x3416	; 0x3416 <_ZN10helicopter10controller13PIDController16setYIntegralGainEf>
	pidController->setYDerivativeGain(2.8363);
    39fc:	8b 81       	ldd	r24, Y+3	; 0x03
    39fe:	9c 81       	ldd	r25, Y+4	; 0x04
    3a00:	40 ef       	ldi	r20, 0xF0	; 240
    3a02:	55 e8       	ldi	r21, 0x85	; 133
    3a04:	65 e3       	ldi	r22, 0x35	; 53
    3a06:	70 e4       	ldi	r23, 0x40	; 64
    3a08:	0e 94 2b 1a 	call	0x3456	; 0x3456 <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf>
	pidController->setYAntiWindupGain(0);
    3a0c:	8b 81       	ldd	r24, Y+3	; 0x03
    3a0e:	9c 81       	ldd	r25, Y+4	; 0x04
    3a10:	40 e0       	ldi	r20, 0x00	; 0
    3a12:	50 e0       	ldi	r21, 0x00	; 0
    3a14:	ba 01       	movw	r22, r20
    3a16:	0e 94 6b 1a 	call	0x34d6	; 0x34d6 <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf>
	pidController->setLateralInnerLoopGain(.092);	
    3a1a:	8b 81       	ldd	r24, Y+3	; 0x03
    3a1c:	9c 81       	ldd	r25, Y+4	; 0x04
    3a1e:	4f e7       	ldi	r20, 0x7F	; 127
    3a20:	5a e6       	ldi	r21, 0x6A	; 106
    3a22:	6c eb       	ldi	r22, 0xBC	; 188
    3a24:	7d e3       	ldi	r23, 0x3D	; 61
    3a26:	0e 94 8b 1a 	call	0x3516	; 0x3516 <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf>
	
	//TODO: Don't forget that there is a difference between how often the sensors
	//are read and how often the control algorithm runs. 
	pidController->setIntervalPeriodSecs(PID_OUTER_LOOP_PERIOD);
    3a2a:	8b 81       	ldd	r24, Y+3	; 0x03
    3a2c:	9c 81       	ldd	r25, Y+4	; 0x04
    3a2e:	4d ec       	ldi	r20, 0xCD	; 205
    3a30:	5c ec       	ldi	r21, 0xCC	; 204
    3a32:	6c e4       	ldi	r22, 0x4C	; 76
    3a34:	7d e3       	ldi	r23, 0x3D	; 61
    3a36:	0e 94 97 1b 	call	0x372e	; 0x372e <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf>
//pidController->setMinYawServoControl (-10);
//pidController->setMaxYawServoControl(10);



	pidController->setControlMaxValue(1.0d);
    3a3a:	8b 81       	ldd	r24, Y+3	; 0x03
    3a3c:	9c 81       	ldd	r25, Y+4	; 0x04
    3a3e:	40 e0       	ldi	r20, 0x00	; 0
    3a40:	50 e0       	ldi	r21, 0x00	; 0
    3a42:	60 e8       	ldi	r22, 0x80	; 128
    3a44:	7f e3       	ldi	r23, 0x3F	; 63
    3a46:	0e 94 20 1c 	call	0x3840	; 0x3840 <_ZN10helicopter10controller13PIDController18setControlMaxValueEf>
	pidController->setControlMinValue(-1.0d);
    3a4a:	8b 81       	ldd	r24, Y+3	; 0x03
    3a4c:	9c 81       	ldd	r25, Y+4	; 0x04
    3a4e:	40 e0       	ldi	r20, 0x00	; 0
    3a50:	50 e0       	ldi	r21, 0x00	; 0
    3a52:	60 e8       	ldi	r22, 0x80	; 128
    3a54:	7f eb       	ldi	r23, 0xBF	; 191
    3a56:	0e 94 43 1c 	call	0x3886	; 0x3886 <_ZN10helicopter10controller13PIDController18setControlMinValueEf>
	
	pidController->setMinYawServoControl (-1.0d);
    3a5a:	8b 81       	ldd	r24, Y+3	; 0x03
    3a5c:	9c 81       	ldd	r25, Y+4	; 0x04
    3a5e:	40 e0       	ldi	r20, 0x00	; 0
    3a60:	50 e0       	ldi	r21, 0x00	; 0
    3a62:	60 e8       	ldi	r22, 0x80	; 128
    3a64:	7f eb       	ldi	r23, 0xBF	; 191
    3a66:	0e 94 da 1b 	call	0x37b4	; 0x37b4 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf>
	pidController->setMaxYawServoControl (1.0d);
    3a6a:	8b 81       	ldd	r24, Y+3	; 0x03
    3a6c:	9c 81       	ldd	r25, Y+4	; 0x04
    3a6e:	40 e0       	ldi	r20, 0x00	; 0
    3a70:	50 e0       	ldi	r21, 0x00	; 0
    3a72:	60 e8       	ldi	r22, 0x80	; 128
    3a74:	7f e3       	ldi	r23, 0x3F	; 63
    3a76:	0e 94 fd 1b 	call	0x37fa	; 0x37fa <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf>
	
	pidController->setMaxLongitudeServoControlValue(1.0d);
    3a7a:	8b 81       	ldd	r24, Y+3	; 0x03
    3a7c:	9c 81       	ldd	r25, Y+4	; 0x04
    3a7e:	40 e0       	ldi	r20, 0x00	; 0
    3a80:	50 e0       	ldi	r21, 0x00	; 0
    3a82:	60 e8       	ldi	r22, 0x80	; 128
    3a84:	7f e3       	ldi	r23, 0x3F	; 63
    3a86:	0e 94 e8 19 	call	0x33d0	; 0x33d0 <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf>
	pidController->setMinLongitudeServoControlValue(-1.0d);
    3a8a:	8b 81       	ldd	r24, Y+3	; 0x03
    3a8c:	9c 81       	ldd	r25, Y+4	; 0x04
    3a8e:	40 e0       	ldi	r20, 0x00	; 0
    3a90:	50 e0       	ldi	r21, 0x00	; 0
    3a92:	60 e8       	ldi	r22, 0x80	; 128
    3a94:	7f eb       	ldi	r23, 0xBF	; 191
    3a96:	0e 94 c5 19 	call	0x338a	; 0x338a <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf>
	
	pidController->setMaxLateralServoControlValue(1.0d);
    3a9a:	8b 81       	ldd	r24, Y+3	; 0x03
    3a9c:	9c 81       	ldd	r25, Y+4	; 0x04
    3a9e:	40 e0       	ldi	r20, 0x00	; 0
    3aa0:	50 e0       	ldi	r21, 0x00	; 0
    3aa2:	60 e8       	ldi	r22, 0x80	; 128
    3aa4:	7f e3       	ldi	r23, 0x3F	; 63
    3aa6:	0e 94 ce 1a 	call	0x359c	; 0x359c <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf>
	pidController->setMinLateralServoControlValue(-1.0d);
    3aaa:	8b 81       	ldd	r24, Y+3	; 0x03
    3aac:	9c 81       	ldd	r25, Y+4	; 0x04
    3aae:	40 e0       	ldi	r20, 0x00	; 0
    3ab0:	50 e0       	ldi	r21, 0x00	; 0
    3ab2:	60 e8       	ldi	r22, 0x80	; 128
    3ab4:	7f eb       	ldi	r23, 0xBF	; 191
    3ab6:	0e 94 ab 1a 	call	0x3556	; 0x3556 <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf>
	
	pidController->setMaxMainRotorServoControlValue(1.0d);
    3aba:	8b 81       	ldd	r24, Y+3	; 0x03
    3abc:	9c 81       	ldd	r25, Y+4	; 0x04
    3abe:	40 e0       	ldi	r20, 0x00	; 0
    3ac0:	50 e0       	ldi	r21, 0x00	; 0
    3ac2:	60 e8       	ldi	r22, 0x80	; 128
    3ac4:	7f e3       	ldi	r23, 0x3F	; 63
    3ac6:	0e 94 14 1b 	call	0x3628	; 0x3628 <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf>
	pidController->setMinMainRotorServoControlValue(-1.0d);
    3aca:	8b 81       	ldd	r24, Y+3	; 0x03
    3acc:	9c 81       	ldd	r25, Y+4	; 0x04
    3ace:	40 e0       	ldi	r20, 0x00	; 0
    3ad0:	50 e0       	ldi	r21, 0x00	; 0
    3ad2:	60 e8       	ldi	r22, 0x80	; 128
    3ad4:	7f eb       	ldi	r23, 0xBF	; 191
    3ad6:	0e 94 f1 1a 	call	0x35e2	; 0x35e2 <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf>
}
    3ada:	0f 90       	pop	r0
    3adc:	0f 90       	pop	r0
    3ade:	0f 90       	pop	r0
    3ae0:	0f 90       	pop	r0
    3ae2:	df 91       	pop	r29
    3ae4:	cf 91       	pop	r28
    3ae6:	08 95       	ret

00003ae8 <main>:


int main(void)
{	
    3ae8:	4f 92       	push	r4
    3aea:	5f 92       	push	r5
    3aec:	6f 92       	push	r6
    3aee:	7f 92       	push	r7
    3af0:	8f 92       	push	r8
    3af2:	9f 92       	push	r9
    3af4:	af 92       	push	r10
    3af6:	bf 92       	push	r11
    3af8:	cf 92       	push	r12
    3afa:	df 92       	push	r13
    3afc:	ef 92       	push	r14
    3afe:	ff 92       	push	r15
    3b00:	0f 93       	push	r16
    3b02:	1f 93       	push	r17
    3b04:	cf 93       	push	r28
    3b06:	df 93       	push	r29
    3b08:	cd b7       	in	r28, 0x3d	; 61
    3b0a:	de b7       	in	r29, 0x3e	; 62
    3b0c:	e7 97       	sbiw	r28, 0x37	; 55
    3b0e:	0f b6       	in	r0, 0x3f	; 63
    3b10:	f8 94       	cli
    3b12:	de bf       	out	0x3e, r29	; 62
    3b14:	0f be       	out	0x3f, r0	; 63
    3b16:	cd bf       	out	0x3d, r28	; 61
	SystemModel *model = new SystemModel();
    3b18:	8c ee       	ldi	r24, 0xEC	; 236
    3b1a:	90 e0       	ldi	r25, 0x00	; 0
    3b1c:	0e 94 08 3d 	call	0x7a10	; 0x7a10 <_Znwj>
    3b20:	8c 01       	movw	r16, r24
    3b22:	c8 01       	movw	r24, r16
    3b24:	0e 94 5f 15 	call	0x2abe	; 0x2abe <_ZN10helicopter5model11SystemModelC1Ev>
    3b28:	1b 83       	std	Y+3, r17	; 0x03
    3b2a:	0a 83       	std	Y+2, r16	; 0x02
	
	PIDController *pidController = new PIDController(model);
    3b2c:	86 e7       	ldi	r24, 0x76	; 118
    3b2e:	90 e0       	ldi	r25, 0x00	; 0
    3b30:	0e 94 08 3d 	call	0x7a10	; 0x7a10 <_Znwj>
    3b34:	8c 01       	movw	r16, r24
    3b36:	8a 81       	ldd	r24, Y+2	; 0x02
    3b38:	9b 81       	ldd	r25, Y+3	; 0x03
    3b3a:	bc 01       	movw	r22, r24
    3b3c:	c8 01       	movw	r24, r16
    3b3e:	0e 94 40 07 	call	0xe80	; 0xe80 <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelE>
    3b42:	1d 83       	std	Y+5, r17	; 0x05
    3b44:	0c 83       	std	Y+4, r16	; 0x04
	
	
	
	setupDefaultsandReferencePosition(model, pidController);
    3b46:	2c 81       	ldd	r18, Y+4	; 0x04
    3b48:	3d 81       	ldd	r19, Y+5	; 0x05
    3b4a:	8a 81       	ldd	r24, Y+2	; 0x02
    3b4c:	9b 81       	ldd	r25, Y+3	; 0x03
    3b4e:	b9 01       	movw	r22, r18
    3b50:	0e 94 66 1c 	call	0x38cc	; 0x38cc <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE>
	
	//Timer *timer = new Timer(F_CPU,PRESCALE_BY_TENTWENTYFOUR,75); //Good timeout when using the radio
	Timer *timer = new Timer(F_CPU, PRESCALE_BY_TENTWENTYFOUR, 10); //Good timeout when using the USB
    3b54:	88 e0       	ldi	r24, 0x08	; 8
    3b56:	90 e0       	ldi	r25, 0x00	; 0
    3b58:	0e 94 08 3d 	call	0x7a10	; 0x7a10 <_Znwj>
    3b5c:	6c 01       	movw	r12, r24
    3b5e:	1a e0       	ldi	r17, 0x0A	; 10
    3b60:	e1 2e       	mov	r14, r17
    3b62:	f1 2c       	mov	r15, r1
    3b64:	00 e0       	ldi	r16, 0x00	; 0
    3b66:	10 e0       	ldi	r17, 0x00	; 0
    3b68:	20 e0       	ldi	r18, 0x00	; 0
    3b6a:	34 e0       	ldi	r19, 0x04	; 4
    3b6c:	40 e0       	ldi	r20, 0x00	; 0
    3b6e:	54 e2       	ldi	r21, 0x24	; 36
    3b70:	64 ef       	ldi	r22, 0xF4	; 244
    3b72:	70 e0       	ldi	r23, 0x00	; 0
    3b74:	c6 01       	movw	r24, r12
    3b76:	0e 94 b9 14 	call	0x2972	; 0x2972 <_ZN10helicopter4util5TimerC1Em9PRESCALERm>
    3b7a:	df 82       	std	Y+7, r13	; 0x07
    3b7c:	ce 82       	std	Y+6, r12	; 0x06
	
	//Create a driver for communicating with the Ground Control Station (GCS).
	//SerialDriver *serialDriver = new SerialDriver(57600, SerialDriver::Zero, timer, true, true);  
	SerialDriver *serialDriver = new SerialDriver(76800, SerialDriver::Zero, timer, true, true);  
    3b7e:	8b e0       	ldi	r24, 0x0B	; 11
    3b80:	90 e0       	ldi	r25, 0x00	; 0
    3b82:	0e 94 08 3d 	call	0x7a10	; 0x7a10 <_Znwj>
    3b86:	5c 01       	movw	r10, r24
    3b88:	8e 81       	ldd	r24, Y+6	; 0x06
    3b8a:	9f 81       	ldd	r25, Y+7	; 0x07
    3b8c:	cc 24       	eor	r12, r12
    3b8e:	c3 94       	inc	r12
    3b90:	ee 24       	eor	r14, r14
    3b92:	e3 94       	inc	r14
    3b94:	8c 01       	movw	r16, r24
    3b96:	20 e0       	ldi	r18, 0x00	; 0
    3b98:	40 e0       	ldi	r20, 0x00	; 0
    3b9a:	5c e2       	ldi	r21, 0x2C	; 44
    3b9c:	61 e0       	ldi	r22, 0x01	; 1
    3b9e:	70 e0       	ldi	r23, 0x00	; 0
    3ba0:	c5 01       	movw	r24, r10
    3ba2:	0e 94 f9 14 	call	0x29f2	; 0x29f2 <_ZN10helicopter7drivers12SerialDriverC1EmNS1_8UartPortEPNS_4util5TimerEbb>
    3ba6:	b9 86       	std	Y+9, r11	; 0x09
    3ba8:	a8 86       	std	Y+8, r10	; 0x08
	serialDriver->initialize();
    3baa:	88 85       	ldd	r24, Y+8	; 0x08
    3bac:	99 85       	ldd	r25, Y+9	; 0x09
    3bae:	fc 01       	movw	r30, r24
    3bb0:	80 81       	ld	r24, Z
    3bb2:	91 81       	ldd	r25, Z+1	; 0x01
    3bb4:	04 96       	adiw	r24, 0x04	; 4
    3bb6:	fc 01       	movw	r30, r24
    3bb8:	20 81       	ld	r18, Z
    3bba:	31 81       	ldd	r19, Z+1	; 0x01
    3bbc:	88 85       	ldd	r24, Y+8	; 0x08
    3bbe:	99 85       	ldd	r25, Y+9	; 0x09
    3bc0:	f9 01       	movw	r30, r18
    3bc2:	19 95       	eicall
	
	GroundControlStationInterface *gcsInterface = new GroundControlStationInterface(serialDriver);
    3bc4:	82 e0       	ldi	r24, 0x02	; 2
    3bc6:	90 e0       	ldi	r25, 0x00	; 0
    3bc8:	0e 94 08 3d 	call	0x7a10	; 0x7a10 <_Znwj>
    3bcc:	8c 01       	movw	r16, r24
    3bce:	88 85       	ldd	r24, Y+8	; 0x08
    3bd0:	99 85       	ldd	r25, Y+9	; 0x09
    3bd2:	bc 01       	movw	r22, r24
    3bd4:	c8 01       	movw	r24, r16
    3bd6:	0e 94 47 15 	call	0x2a8e	; 0x2a8e <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverE>
    3bda:	1b 87       	std	Y+11, r17	; 0x0b
    3bdc:	0a 87       	std	Y+10, r16	; 0x0a
	//This frequency works well for radio.
//	SimTelemetryTask *simTelemTask = new SimTelemetryTask(radioInterface, model, 0, 10);//starting at tick 1, execute 20 times a second
//	TransmitTelemetryTask *transTelemTask = new TransmitTelemetryTask(radioInterface, model, 1, 10);//starting at tick 2, execute 20 times a second

	//this frequency works well for USB.
	SimTelemetryTask *simTelemTask = new SimTelemetryTask(gcsInterface, model, pidController,0, 4);//starting at tick 0, execute 50 times a second
    3bde:	8d e0       	ldi	r24, 0x0D	; 13
    3be0:	90 e0       	ldi	r25, 0x00	; 0
    3be2:	0e 94 08 3d 	call	0x7a10	; 0x7a10 <_Znwj>
    3be6:	6c 01       	movw	r12, r24
    3be8:	2c 81       	ldd	r18, Y+4	; 0x04
    3bea:	3d 81       	ldd	r19, Y+5	; 0x05
    3bec:	4a 81       	ldd	r20, Y+2	; 0x02
    3bee:	5b 81       	ldd	r21, Y+3	; 0x03
    3bf0:	8a 85       	ldd	r24, Y+10	; 0x0a
    3bf2:	9b 85       	ldd	r25, Y+11	; 0x0b
    3bf4:	68 94       	set
    3bf6:	ee 24       	eor	r14, r14
    3bf8:	e2 f8       	bld	r14, 2
    3bfa:	f1 2c       	mov	r15, r1
    3bfc:	00 e0       	ldi	r16, 0x00	; 0
    3bfe:	10 e0       	ldi	r17, 0x00	; 0
    3c00:	bc 01       	movw	r22, r24
    3c02:	c6 01       	movw	r24, r12
    3c04:	0e 94 73 39 	call	0x72e6	; 0x72e6 <_ZN10helicopter5tasks16SimTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEPNS_10controller13PIDControllerEii>
    3c08:	dd 86       	std	Y+13, r13	; 0x0d
    3c0a:	cc 86       	std	Y+12, r12	; 0x0c
	TransmitTelemetryTask *transTelemTask = new TransmitTelemetryTask(gcsInterface, model, 1, 4);//starting at tick 1, execute 50 times a second
    3c0c:	8b e0       	ldi	r24, 0x0B	; 11
    3c0e:	90 e0       	ldi	r25, 0x00	; 0
    3c10:	0e 94 08 3d 	call	0x7a10	; 0x7a10 <_Znwj>
    3c14:	7c 01       	movw	r14, r24
    3c16:	4a 81       	ldd	r20, Y+2	; 0x02
    3c18:	5b 81       	ldd	r21, Y+3	; 0x03
    3c1a:	8a 85       	ldd	r24, Y+10	; 0x0a
    3c1c:	9b 85       	ldd	r25, Y+11	; 0x0b
    3c1e:	04 e0       	ldi	r16, 0x04	; 4
    3c20:	10 e0       	ldi	r17, 0x00	; 0
    3c22:	21 e0       	ldi	r18, 0x01	; 1
    3c24:	30 e0       	ldi	r19, 0x00	; 0
    3c26:	bc 01       	movw	r22, r24
    3c28:	c7 01       	movw	r24, r14
    3c2a:	0e 94 5f 3c 	call	0x78be	; 0x78be <_ZN10helicopter5tasks21TransmitTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEii>
    3c2e:	ff 86       	std	Y+15, r15	; 0x0f
    3c30:	ee 86       	std	Y+14, r14	; 0x0e
	
	FlashLEDTask *flashTask = new FlashLEDTask(2, SCHEDULER_TICK_FREQUENCY_HZ);//starting at tick 2, execute once a second
    3c32:	8a e0       	ldi	r24, 0x0A	; 10
    3c34:	90 e0       	ldi	r25, 0x00	; 0
    3c36:	0e 94 08 3d 	call	0x7a10	; 0x7a10 <_Znwj>
    3c3a:	8c 01       	movw	r16, r24
    3c3c:	23 e0       	ldi	r18, 0x03	; 3
    3c3e:	30 e0       	ldi	r19, 0x00	; 0
    3c40:	46 e4       	ldi	r20, 0x46	; 70
    3c42:	50 e0       	ldi	r21, 0x00	; 0
    3c44:	62 e0       	ldi	r22, 0x02	; 2
    3c46:	70 e0       	ldi	r23, 0x00	; 0
    3c48:	c8 01       	movw	r24, r16
    3c4a:	0e 94 02 14 	call	0x2804	; 0x2804 <_ZN10helicopter5tasks12FlashLEDTaskC1Eiii>
    3c4e:	19 8b       	std	Y+17, r17	; 0x11
    3c50:	08 8b       	std	Y+16, r16	; 0x10
		
		
	SensorProcessingTask *sensorProcessingTask = new SensorProcessingTask(model, 5, 4);
    3c52:	89 e0       	ldi	r24, 0x09	; 9
    3c54:	90 e0       	ldi	r25, 0x00	; 0
    3c56:	0e 94 08 3d 	call	0x7a10	; 0x7a10 <_Znwj>
    3c5a:	8c 01       	movw	r16, r24
    3c5c:	8a 81       	ldd	r24, Y+2	; 0x02
    3c5e:	9b 81       	ldd	r25, Y+3	; 0x03
    3c60:	24 e0       	ldi	r18, 0x04	; 4
    3c62:	30 e0       	ldi	r19, 0x00	; 0
    3c64:	45 e0       	ldi	r20, 0x05	; 5
    3c66:	50 e0       	ldi	r21, 0x00	; 0
    3c68:	bc 01       	movw	r22, r24
    3c6a:	c8 01       	movw	r24, r16
    3c6c:	0e 94 87 37 	call	0x6f0e	; 0x6f0e <_ZN10helicopter5tasks20SensorProcessingTaskC1EPNS_5model11SystemModelEii>
    3c70:	1b 8b       	std	Y+19, r17	; 0x13
    3c72:	0a 8b       	std	Y+18, r16	; 0x12
		
	//execute the pid outer loop at the PID_OUTER_LOOP_PERIOD rate. The division is to convert the period into ticks for the scheduler.
	PIDOuterLoopTask *pidOuterLoop = new PIDOuterLoopTask(pidController, 3, (SCHEDULER_TICK_FREQUENCY_HZ / (1/PID_OUTER_LOOP_PERIOD)));
    3c74:	89 e0       	ldi	r24, 0x09	; 9
    3c76:	90 e0       	ldi	r25, 0x00	; 0
    3c78:	0e 94 08 3d 	call	0x7a10	; 0x7a10 <_Znwj>
    3c7c:	8c 01       	movw	r16, r24
    3c7e:	8c 81       	ldd	r24, Y+4	; 0x04
    3c80:	9d 81       	ldd	r25, Y+5	; 0x05
    3c82:	23 e0       	ldi	r18, 0x03	; 3
    3c84:	30 e0       	ldi	r19, 0x00	; 0
    3c86:	43 e0       	ldi	r20, 0x03	; 3
    3c88:	50 e0       	ldi	r21, 0x00	; 0
    3c8a:	bc 01       	movw	r22, r24
    3c8c:	c8 01       	movw	r24, r16
    3c8e:	0e 94 35 36 	call	0x6c6a	; 0x6c6a <_ZN10helicopter5tasks16PIDOuterLoopTaskC1EPNS_10controller13PIDControllerEii>
    3c92:	1d 8b       	std	Y+21, r17	; 0x15
    3c94:	0c 8b       	std	Y+20, r16	; 0x14
	PIDInnerLoopTask *pidInnerLoop = new PIDInnerLoopTask(pidController, 4, (SCHEDULER_TICK_FREQUENCY_HZ / (1/PID_OUTER_LOOP_PERIOD)));
    3c96:	89 e0       	ldi	r24, 0x09	; 9
    3c98:	90 e0       	ldi	r25, 0x00	; 0
    3c9a:	0e 94 08 3d 	call	0x7a10	; 0x7a10 <_Znwj>
    3c9e:	8c 01       	movw	r16, r24
    3ca0:	8c 81       	ldd	r24, Y+4	; 0x04
    3ca2:	9d 81       	ldd	r25, Y+5	; 0x05
    3ca4:	23 e0       	ldi	r18, 0x03	; 3
    3ca6:	30 e0       	ldi	r19, 0x00	; 0
    3ca8:	44 e0       	ldi	r20, 0x04	; 4
    3caa:	50 e0       	ldi	r21, 0x00	; 0
    3cac:	bc 01       	movw	r22, r24
    3cae:	c8 01       	movw	r24, r16
    3cb0:	0e 94 b1 35 	call	0x6b62	; 0x6b62 <_ZN10helicopter5tasks16PIDInnerLoopTaskC1EPNS_10controller13PIDControllerEii>
    3cb4:	1f 8b       	std	Y+23, r17	; 0x17
    3cb6:	0e 8b       	std	Y+22, r16	; 0x16
	


	Scheduler *scheduler = Scheduler::getScheduler();
    3cb8:	0e 94 0d 33 	call	0x661a	; 0x661a <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>
    3cbc:	99 8f       	std	Y+25, r25	; 0x19
    3cbe:	88 8f       	std	Y+24, r24	; 0x18
	
	scheduler->addTask(flashTask);
    3cc0:	28 89       	ldd	r18, Y+16	; 0x10
    3cc2:	39 89       	ldd	r19, Y+17	; 0x11
    3cc4:	88 8d       	ldd	r24, Y+24	; 0x18
    3cc6:	99 8d       	ldd	r25, Y+25	; 0x19
    3cc8:	b9 01       	movw	r22, r18
    3cca:	0e 94 9d 33 	call	0x673a	; 0x673a <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(simTelemTask);
    3cce:	2c 85       	ldd	r18, Y+12	; 0x0c
    3cd0:	3d 85       	ldd	r19, Y+13	; 0x0d
    3cd2:	88 8d       	ldd	r24, Y+24	; 0x18
    3cd4:	99 8d       	ldd	r25, Y+25	; 0x19
    3cd6:	b9 01       	movw	r22, r18
    3cd8:	0e 94 9d 33 	call	0x673a	; 0x673a <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(transTelemTask);
    3cdc:	2e 85       	ldd	r18, Y+14	; 0x0e
    3cde:	3f 85       	ldd	r19, Y+15	; 0x0f
    3ce0:	88 8d       	ldd	r24, Y+24	; 0x18
    3ce2:	99 8d       	ldd	r25, Y+25	; 0x19
    3ce4:	b9 01       	movw	r22, r18
    3ce6:	0e 94 9d 33 	call	0x673a	; 0x673a <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(pidOuterLoop);
    3cea:	2c 89       	ldd	r18, Y+20	; 0x14
    3cec:	3d 89       	ldd	r19, Y+21	; 0x15
    3cee:	88 8d       	ldd	r24, Y+24	; 0x18
    3cf0:	99 8d       	ldd	r25, Y+25	; 0x19
    3cf2:	b9 01       	movw	r22, r18
    3cf4:	0e 94 9d 33 	call	0x673a	; 0x673a <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(pidInnerLoop);
    3cf8:	2e 89       	ldd	r18, Y+22	; 0x16
    3cfa:	3f 89       	ldd	r19, Y+23	; 0x17
    3cfc:	88 8d       	ldd	r24, Y+24	; 0x18
    3cfe:	99 8d       	ldd	r25, Y+25	; 0x19
    3d00:	b9 01       	movw	r22, r18
    3d02:	0e 94 9d 33 	call	0x673a	; 0x673a <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(sensorProcessingTask);
    3d06:	2a 89       	ldd	r18, Y+18	; 0x12
    3d08:	3b 89       	ldd	r19, Y+19	; 0x13
    3d0a:	88 8d       	ldd	r24, Y+24	; 0x18
    3d0c:	99 8d       	ldd	r25, Y+25	; 0x19
    3d0e:	b9 01       	movw	r22, r18
    3d10:	0e 94 9d 33 	call	0x673a	; 0x673a <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	
	//Wait until we receive location data before starting the scheduler
	//TODO rework this
	bool isInitialized = false;
    3d14:	19 82       	std	Y+1, r1	; 0x01
	while (!isInitialized)
    3d16:	2e c1       	rjmp	.+604    	; 0x3f74 <main+0x48c>
	{
		simTelemTask->runTaskImpl();
    3d18:	8c 85       	ldd	r24, Y+12	; 0x0c
    3d1a:	9d 85       	ldd	r25, Y+13	; 0x0d
    3d1c:	fc 01       	movw	r30, r24
    3d1e:	80 81       	ld	r24, Z
    3d20:	91 81       	ldd	r25, Z+1	; 0x01
    3d22:	fc 01       	movw	r30, r24
    3d24:	20 81       	ld	r18, Z
    3d26:	31 81       	ldd	r19, Z+1	; 0x01
    3d28:	8c 85       	ldd	r24, Y+12	; 0x0c
    3d2a:	9d 85       	ldd	r25, Y+13	; 0x0d
    3d2c:	f9 01       	movw	r30, r18
    3d2e:	19 95       	eicall
		
		if (model->LatitudeDegrees() != 0 && model->LongitudeDegrees() != 0)
    3d30:	8a 81       	ldd	r24, Y+2	; 0x02
    3d32:	9b 81       	ldd	r25, Y+3	; 0x03
    3d34:	0e 94 83 18 	call	0x3106	; 0x3106 <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    3d38:	dc 01       	movw	r26, r24
    3d3a:	cb 01       	movw	r24, r22
    3d3c:	20 e0       	ldi	r18, 0x00	; 0
    3d3e:	30 e0       	ldi	r19, 0x00	; 0
    3d40:	a9 01       	movw	r20, r18
    3d42:	bc 01       	movw	r22, r24
    3d44:	cd 01       	movw	r24, r26
    3d46:	0e 94 6d 43 	call	0x86da	; 0x86da <__cmpsf2>
    3d4a:	88 23       	and	r24, r24
    3d4c:	89 f0       	breq	.+34     	; 0x3d70 <main+0x288>
    3d4e:	8a 81       	ldd	r24, Y+2	; 0x02
    3d50:	9b 81       	ldd	r25, Y+3	; 0x03
    3d52:	0e 94 9b 18 	call	0x3136	; 0x3136 <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    3d56:	dc 01       	movw	r26, r24
    3d58:	cb 01       	movw	r24, r22
    3d5a:	20 e0       	ldi	r18, 0x00	; 0
    3d5c:	30 e0       	ldi	r19, 0x00	; 0
    3d5e:	a9 01       	movw	r20, r18
    3d60:	bc 01       	movw	r22, r24
    3d62:	cd 01       	movw	r24, r26
    3d64:	0e 94 6d 43 	call	0x86da	; 0x86da <__cmpsf2>
    3d68:	88 23       	and	r24, r24
    3d6a:	11 f0       	breq	.+4      	; 0x3d70 <main+0x288>
    3d6c:	81 e0       	ldi	r24, 0x01	; 1
    3d6e:	01 c0       	rjmp	.+2      	; 0x3d72 <main+0x28a>
    3d70:	80 e0       	ldi	r24, 0x00	; 0
    3d72:	88 23       	and	r24, r24
    3d74:	09 f4       	brne	.+2      	; 0x3d78 <main+0x290>
    3d76:	82 c0       	rjmp	.+260    	; 0x3e7c <main+0x394>
		{
			isInitialized = true;
    3d78:	81 e0       	ldi	r24, 0x01	; 1
    3d7a:	89 83       	std	Y+1, r24	; 0x01
			
			//ecefReferenceX, ecefReferenceY, ecefReferenceZ,ecefToLocalNEDRotationMatrix,
			CoordinateUtil::CalculateECEFToLocalNEDRotationMatrix(model->LatitudeDegrees(), model->LongitudeDegrees(), model->EcefToLocalNEDRotationMatrix);
    3d7c:	8a 81       	ldd	r24, Y+2	; 0x02
    3d7e:	9b 81       	ldd	r25, Y+3	; 0x03
    3d80:	8c 01       	movw	r16, r24
    3d82:	08 53       	subi	r16, 0x38	; 56
    3d84:	1f 4f       	sbci	r17, 0xFF	; 255
    3d86:	8a 81       	ldd	r24, Y+2	; 0x02
    3d88:	9b 81       	ldd	r25, Y+3	; 0x03
    3d8a:	0e 94 9b 18 	call	0x3136	; 0x3136 <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    3d8e:	6b 01       	movw	r12, r22
    3d90:	7c 01       	movw	r14, r24
    3d92:	8a 81       	ldd	r24, Y+2	; 0x02
    3d94:	9b 81       	ldd	r25, Y+3	; 0x03
    3d96:	0e 94 83 18 	call	0x3106	; 0x3106 <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    3d9a:	dc 01       	movw	r26, r24
    3d9c:	cb 01       	movw	r24, r22
    3d9e:	a7 01       	movw	r20, r14
    3da0:	96 01       	movw	r18, r12
    3da2:	bc 01       	movw	r22, r24
    3da4:	cd 01       	movw	r24, r26
    3da6:	0e 94 73 3d 	call	0x7ae6	; 0x7ae6 <_ZN10helicopter4util14CoordinateUtil37CalculateECEFToLocalNEDRotationMatrixEffPA3_f>
	
			float initialXPositionEcef = 0;
    3daa:	18 a6       	std	Y+40, r1	; 0x28
    3dac:	19 a6       	std	Y+41, r1	; 0x29
    3dae:	1a a6       	std	Y+42, r1	; 0x2a
    3db0:	1b a6       	std	Y+43, r1	; 0x2b
			float initialYPositionEcef = 0;
    3db2:	1c a6       	std	Y+44, r1	; 0x2c
    3db4:	1d a6       	std	Y+45, r1	; 0x2d
    3db6:	1e a6       	std	Y+46, r1	; 0x2e
    3db8:	1f a6       	std	Y+47, r1	; 0x2f
			float initialZPositionEcef = 0;
    3dba:	18 aa       	std	Y+48, r1	; 0x30
    3dbc:	19 aa       	std	Y+49, r1	; 0x31
    3dbe:	1a aa       	std	Y+50, r1	; 0x32
    3dc0:	1b aa       	std	Y+51, r1	; 0x33
			CoordinateUtil::ConvertFromGeodeticToECEF(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), initialXPositionEcef, initialYPositionEcef, initialZPositionEcef);
    3dc2:	8a 81       	ldd	r24, Y+2	; 0x02
    3dc4:	9b 81       	ldd	r25, Y+3	; 0x03
    3dc6:	0e 94 25 18 	call	0x304a	; 0x304a <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    3dca:	6c ab       	std	Y+52, r22	; 0x34
    3dcc:	7d ab       	std	Y+53, r23	; 0x35
    3dce:	8e ab       	std	Y+54, r24	; 0x36
    3dd0:	9f ab       	std	Y+55, r25	; 0x37
    3dd2:	8a 81       	ldd	r24, Y+2	; 0x02
    3dd4:	9b 81       	ldd	r25, Y+3	; 0x03
    3dd6:	0e 94 9b 18 	call	0x3136	; 0x3136 <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    3dda:	2b 01       	movw	r4, r22
    3ddc:	3c 01       	movw	r6, r24
    3dde:	8a 81       	ldd	r24, Y+2	; 0x02
    3de0:	9b 81       	ldd	r25, Y+3	; 0x03
    3de2:	0e 94 83 18 	call	0x3106	; 0x3106 <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    3de6:	dc 01       	movw	r26, r24
    3de8:	cb 01       	movw	r24, r22
    3dea:	be 01       	movw	r22, r28
    3dec:	60 5d       	subi	r22, 0xD0	; 208
    3dee:	7f 4f       	sbci	r23, 0xFF	; 255
    3df0:	ae 01       	movw	r20, r28
    3df2:	44 5d       	subi	r20, 0xD4	; 212
    3df4:	5f 4f       	sbci	r21, 0xFF	; 255
    3df6:	9e 01       	movw	r18, r28
    3df8:	28 5d       	subi	r18, 0xD8	; 216
    3dfa:	3f 4f       	sbci	r19, 0xFF	; 255
    3dfc:	4b 01       	movw	r8, r22
    3dfe:	5a 01       	movw	r10, r20
    3e00:	69 01       	movw	r12, r18
    3e02:	ec a8       	ldd	r14, Y+52	; 0x34
    3e04:	fd a8       	ldd	r15, Y+53	; 0x35
    3e06:	0e a9       	ldd	r16, Y+54	; 0x36
    3e08:	1f a9       	ldd	r17, Y+55	; 0x37
    3e0a:	a3 01       	movw	r20, r6
    3e0c:	92 01       	movw	r18, r4
    3e0e:	bc 01       	movw	r22, r24
    3e10:	cd 01       	movw	r24, r26
    3e12:	0e 94 22 3f 	call	0x7e44	; 0x7e44 <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEfffRfS2_S2_>
			
			model->InitialXPositionEcef(initialXPositionEcef);
    3e16:	88 a5       	ldd	r24, Y+40	; 0x28
    3e18:	99 a5       	ldd	r25, Y+41	; 0x29
    3e1a:	aa a5       	ldd	r26, Y+42	; 0x2a
    3e1c:	bb a5       	ldd	r27, Y+43	; 0x2b
    3e1e:	bc 01       	movw	r22, r24
    3e20:	cd 01       	movw	r24, r26
    3e22:	0e 94 dc 43 	call	0x87b8	; 0x87b8 <__fixsfsi>
    3e26:	dc 01       	movw	r26, r24
    3e28:	cb 01       	movw	r24, r22
    3e2a:	2a 81       	ldd	r18, Y+2	; 0x02
    3e2c:	3b 81       	ldd	r19, Y+3	; 0x03
    3e2e:	ac 01       	movw	r20, r24
    3e30:	bd 01       	movw	r22, r26
    3e32:	c9 01       	movw	r24, r18
    3e34:	0e 94 b3 18 	call	0x3166	; 0x3166 <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl>
			model->InitialYPositionEcef(initialYPositionEcef);
    3e38:	8c a5       	ldd	r24, Y+44	; 0x2c
    3e3a:	9d a5       	ldd	r25, Y+45	; 0x2d
    3e3c:	ae a5       	ldd	r26, Y+46	; 0x2e
    3e3e:	bf a5       	ldd	r27, Y+47	; 0x2f
    3e40:	bc 01       	movw	r22, r24
    3e42:	cd 01       	movw	r24, r26
    3e44:	0e 94 dc 43 	call	0x87b8	; 0x87b8 <__fixsfsi>
    3e48:	dc 01       	movw	r26, r24
    3e4a:	cb 01       	movw	r24, r22
    3e4c:	2a 81       	ldd	r18, Y+2	; 0x02
    3e4e:	3b 81       	ldd	r19, Y+3	; 0x03
    3e50:	ac 01       	movw	r20, r24
    3e52:	bd 01       	movw	r22, r26
    3e54:	c9 01       	movw	r24, r18
    3e56:	0e 94 d9 18 	call	0x31b2	; 0x31b2 <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl>
			model->InitialZPositionEcef(initialZPositionEcef);
    3e5a:	88 a9       	ldd	r24, Y+48	; 0x30
    3e5c:	99 a9       	ldd	r25, Y+49	; 0x31
    3e5e:	aa a9       	ldd	r26, Y+50	; 0x32
    3e60:	bb a9       	ldd	r27, Y+51	; 0x33
    3e62:	bc 01       	movw	r22, r24
    3e64:	cd 01       	movw	r24, r26
    3e66:	0e 94 dc 43 	call	0x87b8	; 0x87b8 <__fixsfsi>
    3e6a:	dc 01       	movw	r26, r24
    3e6c:	cb 01       	movw	r24, r22
    3e6e:	2a 81       	ldd	r18, Y+2	; 0x02
    3e70:	3b 81       	ldd	r19, Y+3	; 0x03
    3e72:	ac 01       	movw	r20, r24
    3e74:	bd 01       	movw	r22, r26
    3e76:	c9 01       	movw	r24, r18
    3e78:	0e 94 ff 18 	call	0x31fe	; 0x31fe <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl>
    3e7c:	80 e0       	ldi	r24, 0x00	; 0
    3e7e:	90 e0       	ldi	r25, 0x00	; 0
    3e80:	a8 ec       	ldi	r26, 0xC8	; 200
    3e82:	b2 e4       	ldi	r27, 0x42	; 66
    3e84:	8a 8f       	std	Y+26, r24	; 0x1a
    3e86:	9b 8f       	std	Y+27, r25	; 0x1b
    3e88:	ac 8f       	std	Y+28, r26	; 0x1c
    3e8a:	bd 8f       	std	Y+29, r27	; 0x1d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    3e8c:	20 e0       	ldi	r18, 0x00	; 0
    3e8e:	30 e0       	ldi	r19, 0x00	; 0
    3e90:	4a e7       	ldi	r20, 0x7A	; 122
    3e92:	55 e4       	ldi	r21, 0x45	; 69
    3e94:	6a 8d       	ldd	r22, Y+26	; 0x1a
    3e96:	7b 8d       	ldd	r23, Y+27	; 0x1b
    3e98:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3e9a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3e9c:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    3ea0:	dc 01       	movw	r26, r24
    3ea2:	cb 01       	movw	r24, r22
    3ea4:	8e 8f       	std	Y+30, r24	; 0x1e
    3ea6:	9f 8f       	std	Y+31, r25	; 0x1f
    3ea8:	a8 a3       	std	Y+32, r26	; 0x20
    3eaa:	b9 a3       	std	Y+33, r27	; 0x21
	if (__tmp < 1.0)
    3eac:	20 e0       	ldi	r18, 0x00	; 0
    3eae:	30 e0       	ldi	r19, 0x00	; 0
    3eb0:	40 e8       	ldi	r20, 0x80	; 128
    3eb2:	5f e3       	ldi	r21, 0x3F	; 63
    3eb4:	6e 8d       	ldd	r22, Y+30	; 0x1e
    3eb6:	7f 8d       	ldd	r23, Y+31	; 0x1f
    3eb8:	88 a1       	ldd	r24, Y+32	; 0x20
    3eba:	99 a1       	ldd	r25, Y+33	; 0x21
    3ebc:	0e 94 6d 43 	call	0x86da	; 0x86da <__cmpsf2>
    3ec0:	88 23       	and	r24, r24
    3ec2:	2c f4       	brge	.+10     	; 0x3ece <main+0x3e6>
		__ticks = 1;
    3ec4:	81 e0       	ldi	r24, 0x01	; 1
    3ec6:	90 e0       	ldi	r25, 0x00	; 0
    3ec8:	9b a3       	std	Y+35, r25	; 0x23
    3eca:	8a a3       	std	Y+34, r24	; 0x22
    3ecc:	46 c0       	rjmp	.+140    	; 0x3f5a <main+0x472>
	else if (__tmp > 65535)
    3ece:	20 e0       	ldi	r18, 0x00	; 0
    3ed0:	3f ef       	ldi	r19, 0xFF	; 255
    3ed2:	4f e7       	ldi	r20, 0x7F	; 127
    3ed4:	57 e4       	ldi	r21, 0x47	; 71
    3ed6:	6e 8d       	ldd	r22, Y+30	; 0x1e
    3ed8:	7f 8d       	ldd	r23, Y+31	; 0x1f
    3eda:	88 a1       	ldd	r24, Y+32	; 0x20
    3edc:	99 a1       	ldd	r25, Y+33	; 0x21
    3ede:	0e 94 4b 45 	call	0x8a96	; 0x8a96 <__gesf2>
    3ee2:	18 16       	cp	r1, r24
    3ee4:	84 f5       	brge	.+96     	; 0x3f46 <main+0x45e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ee6:	20 e0       	ldi	r18, 0x00	; 0
    3ee8:	30 e0       	ldi	r19, 0x00	; 0
    3eea:	40 e2       	ldi	r20, 0x20	; 32
    3eec:	51 e4       	ldi	r21, 0x41	; 65
    3eee:	6a 8d       	ldd	r22, Y+26	; 0x1a
    3ef0:	7b 8d       	ldd	r23, Y+27	; 0x1b
    3ef2:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3ef4:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3ef6:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    3efa:	dc 01       	movw	r26, r24
    3efc:	cb 01       	movw	r24, r22
    3efe:	bc 01       	movw	r22, r24
    3f00:	cd 01       	movw	r24, r26
    3f02:	0e 94 e1 43 	call	0x87c2	; 0x87c2 <__fixunssfsi>
    3f06:	dc 01       	movw	r26, r24
    3f08:	cb 01       	movw	r24, r22
    3f0a:	9b a3       	std	Y+35, r25	; 0x23
    3f0c:	8a a3       	std	Y+34, r24	; 0x22
    3f0e:	12 c0       	rjmp	.+36     	; 0x3f34 <main+0x44c>
    3f10:	80 e9       	ldi	r24, 0x90	; 144
    3f12:	91 e0       	ldi	r25, 0x01	; 1
    3f14:	9d a3       	std	Y+37, r25	; 0x25
    3f16:	8c a3       	std	Y+36, r24	; 0x24
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    3f18:	8c a1       	ldd	r24, Y+36	; 0x24
    3f1a:	9d a1       	ldd	r25, Y+37	; 0x25
    3f1c:	8c 01       	movw	r16, r24
    3f1e:	c8 01       	movw	r24, r16
    3f20:	01 97       	sbiw	r24, 0x01	; 1
    3f22:	f1 f7       	brne	.-4      	; 0x3f20 <main+0x438>
    3f24:	8c 01       	movw	r16, r24
    3f26:	1d a3       	std	Y+37, r17	; 0x25
    3f28:	0c a3       	std	Y+36, r16	; 0x24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f2a:	8a a1       	ldd	r24, Y+34	; 0x22
    3f2c:	9b a1       	ldd	r25, Y+35	; 0x23
    3f2e:	01 97       	sbiw	r24, 0x01	; 1
    3f30:	9b a3       	std	Y+35, r25	; 0x23
    3f32:	8a a3       	std	Y+34, r24	; 0x22
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f34:	21 e0       	ldi	r18, 0x01	; 1
    3f36:	8a a1       	ldd	r24, Y+34	; 0x22
    3f38:	9b a1       	ldd	r25, Y+35	; 0x23
    3f3a:	00 97       	sbiw	r24, 0x00	; 0
    3f3c:	09 f4       	brne	.+2      	; 0x3f40 <main+0x458>
    3f3e:	20 e0       	ldi	r18, 0x00	; 0
    3f40:	22 23       	and	r18, r18
    3f42:	31 f7       	brne	.-52     	; 0x3f10 <main+0x428>
    3f44:	17 c0       	rjmp	.+46     	; 0x3f74 <main+0x48c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f46:	6e 8d       	ldd	r22, Y+30	; 0x1e
    3f48:	7f 8d       	ldd	r23, Y+31	; 0x1f
    3f4a:	88 a1       	ldd	r24, Y+32	; 0x20
    3f4c:	99 a1       	ldd	r25, Y+33	; 0x21
    3f4e:	0e 94 e1 43 	call	0x87c2	; 0x87c2 <__fixunssfsi>
    3f52:	dc 01       	movw	r26, r24
    3f54:	cb 01       	movw	r24, r22
    3f56:	9b a3       	std	Y+35, r25	; 0x23
    3f58:	8a a3       	std	Y+34, r24	; 0x22
    3f5a:	8a a1       	ldd	r24, Y+34	; 0x22
    3f5c:	9b a1       	ldd	r25, Y+35	; 0x23
    3f5e:	9f a3       	std	Y+39, r25	; 0x27
    3f60:	8e a3       	std	Y+38, r24	; 0x26
    3f62:	8e a1       	ldd	r24, Y+38	; 0x26
    3f64:	9f a1       	ldd	r25, Y+39	; 0x27
    3f66:	8c 01       	movw	r16, r24
    3f68:	f8 01       	movw	r30, r16
    3f6a:	31 97       	sbiw	r30, 0x01	; 1
    3f6c:	f1 f7       	brne	.-4      	; 0x3f6a <main+0x482>
    3f6e:	8f 01       	movw	r16, r30
    3f70:	1f a3       	std	Y+39, r17	; 0x27
    3f72:	0e a3       	std	Y+38, r16	; 0x26
	
	
	//Wait until we receive location data before starting the scheduler
	//TODO rework this
	bool isInitialized = false;
	while (!isInitialized)
    3f74:	99 81       	ldd	r25, Y+1	; 0x01
    3f76:	81 e0       	ldi	r24, 0x01	; 1
    3f78:	89 27       	eor	r24, r25
    3f7a:	88 23       	and	r24, r24
    3f7c:	09 f0       	breq	.+2      	; 0x3f80 <main+0x498>
    3f7e:	cc ce       	rjmp	.-616    	; 0x3d18 <main+0x230>
		_delay_ms(100);
	}
	
	
	
	scheduler->init(); //Sets up the timer registers, inits all tasks,
    3f80:	88 8d       	ldd	r24, Y+24	; 0x18
    3f82:	99 8d       	ldd	r25, Y+25	; 0x19
    3f84:	0e 94 d8 33 	call	0x67b0	; 0x67b0 <_ZN10helicopter9scheduler9Scheduler4initEv>
	
	scheduler->start();
    3f88:	88 8d       	ldd	r24, Y+24	; 0x18
    3f8a:	99 8d       	ldd	r25, Y+25	; 0x19
    3f8c:	0e 94 b0 34 	call	0x6960	; 0x6960 <_ZN10helicopter9scheduler9Scheduler5startEv>
    3f90:	01 c0       	rjmp	.+2      	; 0x3f94 <main+0x4ac>
	
	
	while(1)
    3f92:	00 00       	nop
	{
		//Checks to see if any tasks are ready to run an executes them.
		//goes to sleep (until the next timer tick) after processing all available tasks.
		scheduler->dispatch();
    3f94:	88 8d       	ldd	r24, Y+24	; 0x18
    3f96:	99 8d       	ldd	r25, Y+25	; 0x19
    3f98:	0e 94 39 34 	call	0x6872	; 0x6872 <_ZN10helicopter9scheduler9Scheduler8dispatchEv>
		
		/**
		 * Determine if the last processing frame was blown.
		 */
		if (scheduler->hasBlownFrame())
    3f9c:	88 8d       	ldd	r24, Y+24	; 0x18
    3f9e:	99 8d       	ldd	r25, Y+25	; 0x19
    3fa0:	0e 94 a8 14 	call	0x2950	; 0x2950 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEv>
    3fa4:	88 23       	and	r24, r24
    3fa6:	a9 f3       	breq	.-22     	; 0x3f92 <main+0x4aa>
		{
			pidController->addBlownFrame();
    3fa8:	8c 81       	ldd	r24, Y+4	; 0x04
    3faa:	9d 81       	ldd	r25, Y+5	; 0x05
    3fac:	0e 94 55 11 	call	0x22aa	; 0x22aa <_ZN10helicopter10controller13PIDController13addBlownFrameEv>
	scheduler->init(); //Sets up the timer registers, inits all tasks,
	
	scheduler->start();
	
	
	while(1)
    3fb0:	f0 cf       	rjmp	.-32     	; 0x3f92 <main+0x4aa>

00003fb2 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>:
	namespace tasks
	{
		/**
			* This task is used to periodically flash an LED on the flight computer.
			*/
		class FlashLEDTask : public Task
    3fb2:	cf 93       	push	r28
    3fb4:	df 93       	push	r29
    3fb6:	1f 92       	push	r1
    3fb8:	1f 92       	push	r1
    3fba:	cd b7       	in	r28, 0x3d	; 61
    3fbc:	de b7       	in	r29, 0x3e	; 62
    3fbe:	9a 83       	std	Y+2, r25	; 0x02
    3fc0:	89 83       	std	Y+1, r24	; 0x01
    3fc2:	89 81       	ldd	r24, Y+1	; 0x01
    3fc4:	9a 81       	ldd	r25, Y+2	; 0x02
    3fc6:	28 e1       	ldi	r18, 0x18	; 24
    3fc8:	32 e0       	ldi	r19, 0x02	; 2
    3fca:	fc 01       	movw	r30, r24
    3fcc:	31 83       	std	Z+1, r19	; 0x01
    3fce:	20 83       	st	Z, r18
    3fd0:	89 81       	ldd	r24, Y+1	; 0x01
    3fd2:	9a 81       	ldd	r25, Y+2	; 0x02
    3fd4:	0e 94 cf 13 	call	0x279e	; 0x279e <_ZN10helicopter5tasks4TaskD1Ev>
    3fd8:	80 e0       	ldi	r24, 0x00	; 0
    3fda:	90 e0       	ldi	r25, 0x00	; 0
    3fdc:	81 70       	andi	r24, 0x01	; 1
    3fde:	99 27       	eor	r25, r25
    3fe0:	00 97       	sbiw	r24, 0x00	; 0
    3fe2:	21 f0       	breq	.+8      	; 0x3fec <_ZN10helicopter5tasks12FlashLEDTaskD1Ev+0x3a>
    3fe4:	89 81       	ldd	r24, Y+1	; 0x01
    3fe6:	9a 81       	ldd	r25, Y+2	; 0x02
    3fe8:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    3fec:	0f 90       	pop	r0
    3fee:	0f 90       	pop	r0
    3ff0:	df 91       	pop	r29
    3ff2:	cf 91       	pop	r28
    3ff4:	08 95       	ret

00003ff6 <_ZN10helicopter5tasks12FlashLEDTaskD0Ev>:
    3ff6:	cf 93       	push	r28
    3ff8:	df 93       	push	r29
    3ffa:	1f 92       	push	r1
    3ffc:	1f 92       	push	r1
    3ffe:	cd b7       	in	r28, 0x3d	; 61
    4000:	de b7       	in	r29, 0x3e	; 62
    4002:	9a 83       	std	Y+2, r25	; 0x02
    4004:	89 83       	std	Y+1, r24	; 0x01
    4006:	89 81       	ldd	r24, Y+1	; 0x01
    4008:	9a 81       	ldd	r25, Y+2	; 0x02
    400a:	0e 94 d9 1f 	call	0x3fb2	; 0x3fb2 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>
    400e:	89 81       	ldd	r24, Y+1	; 0x01
    4010:	9a 81       	ldd	r25, Y+2	; 0x02
    4012:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    4016:	0f 90       	pop	r0
    4018:	0f 90       	pop	r0
    401a:	df 91       	pop	r29
    401c:	cf 91       	pop	r28
    401e:	08 95       	ret

00004020 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>:

using namespace helicopter::util;
using namespace helicopter::interfaces;

void GroundControlStationInterface::calculateChecksum (byte *msgPayload, int payloadSize, byte &checksumA, byte &checksumB)
{
    4020:	0f 93       	push	r16
    4022:	1f 93       	push	r17
    4024:	cf 93       	push	r28
    4026:	df 93       	push	r29
    4028:	cd b7       	in	r28, 0x3d	; 61
    402a:	de b7       	in	r29, 0x3e	; 62
    402c:	2d 97       	sbiw	r28, 0x0d	; 13
    402e:	0f b6       	in	r0, 0x3f	; 63
    4030:	f8 94       	cli
    4032:	de bf       	out	0x3e, r29	; 62
    4034:	0f be       	out	0x3f, r0	; 63
    4036:	cd bf       	out	0x3d, r28	; 61
    4038:	9d 83       	std	Y+5, r25	; 0x05
    403a:	8c 83       	std	Y+4, r24	; 0x04
    403c:	7f 83       	std	Y+7, r23	; 0x07
    403e:	6e 83       	std	Y+6, r22	; 0x06
    4040:	59 87       	std	Y+9, r21	; 0x09
    4042:	48 87       	std	Y+8, r20	; 0x08
    4044:	3b 87       	std	Y+11, r19	; 0x0b
    4046:	2a 87       	std	Y+10, r18	; 0x0a
    4048:	1d 87       	std	Y+13, r17	; 0x0d
    404a:	0c 87       	std	Y+12, r16	; 0x0c
	for (int i = 0; i < payloadSize; i++)
    404c:	1a 82       	std	Y+2, r1	; 0x02
    404e:	19 82       	std	Y+1, r1	; 0x01
    4050:	26 c0       	rjmp	.+76     	; 0x409e <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x7e>
	{
		byte b = msgPayload[i];
    4052:	89 81       	ldd	r24, Y+1	; 0x01
    4054:	9a 81       	ldd	r25, Y+2	; 0x02
    4056:	2e 81       	ldd	r18, Y+6	; 0x06
    4058:	3f 81       	ldd	r19, Y+7	; 0x07
    405a:	82 0f       	add	r24, r18
    405c:	93 1f       	adc	r25, r19
    405e:	fc 01       	movw	r30, r24
    4060:	80 81       	ld	r24, Z
    4062:	8b 83       	std	Y+3, r24	; 0x03
		
		//These fields can overflow, but that is intentional.
		checksumA = (byte) (checksumA + b);
    4064:	8a 85       	ldd	r24, Y+10	; 0x0a
    4066:	9b 85       	ldd	r25, Y+11	; 0x0b
    4068:	fc 01       	movw	r30, r24
    406a:	90 81       	ld	r25, Z
    406c:	8b 81       	ldd	r24, Y+3	; 0x03
    406e:	29 2f       	mov	r18, r25
    4070:	28 0f       	add	r18, r24
    4072:	8a 85       	ldd	r24, Y+10	; 0x0a
    4074:	9b 85       	ldd	r25, Y+11	; 0x0b
    4076:	fc 01       	movw	r30, r24
    4078:	20 83       	st	Z, r18
		checksumB = (byte) (checksumB + checksumA);
    407a:	8c 85       	ldd	r24, Y+12	; 0x0c
    407c:	9d 85       	ldd	r25, Y+13	; 0x0d
    407e:	fc 01       	movw	r30, r24
    4080:	20 81       	ld	r18, Z
    4082:	8a 85       	ldd	r24, Y+10	; 0x0a
    4084:	9b 85       	ldd	r25, Y+11	; 0x0b
    4086:	fc 01       	movw	r30, r24
    4088:	80 81       	ld	r24, Z
    408a:	28 0f       	add	r18, r24
    408c:	8c 85       	ldd	r24, Y+12	; 0x0c
    408e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4090:	fc 01       	movw	r30, r24
    4092:	20 83       	st	Z, r18
using namespace helicopter::util;
using namespace helicopter::interfaces;

void GroundControlStationInterface::calculateChecksum (byte *msgPayload, int payloadSize, byte &checksumA, byte &checksumB)
{
	for (int i = 0; i < payloadSize; i++)
    4094:	89 81       	ldd	r24, Y+1	; 0x01
    4096:	9a 81       	ldd	r25, Y+2	; 0x02
    4098:	01 96       	adiw	r24, 0x01	; 1
    409a:	9a 83       	std	Y+2, r25	; 0x02
    409c:	89 83       	std	Y+1, r24	; 0x01
    409e:	41 e0       	ldi	r20, 0x01	; 1
    40a0:	29 81       	ldd	r18, Y+1	; 0x01
    40a2:	3a 81       	ldd	r19, Y+2	; 0x02
    40a4:	88 85       	ldd	r24, Y+8	; 0x08
    40a6:	99 85       	ldd	r25, Y+9	; 0x09
    40a8:	28 17       	cp	r18, r24
    40aa:	39 07       	cpc	r19, r25
    40ac:	0c f0       	brlt	.+2      	; 0x40b0 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x90>
    40ae:	40 e0       	ldi	r20, 0x00	; 0
    40b0:	44 23       	and	r20, r20
    40b2:	79 f6       	brne	.-98     	; 0x4052 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x32>
		
		//These fields can overflow, but that is intentional.
		checksumA = (byte) (checksumA + b);
		checksumB = (byte) (checksumB + checksumA);
	}
}
    40b4:	2d 96       	adiw	r28, 0x0d	; 13
    40b6:	0f b6       	in	r0, 0x3f	; 63
    40b8:	f8 94       	cli
    40ba:	de bf       	out	0x3e, r29	; 62
    40bc:	0f be       	out	0x3f, r0	; 63
    40be:	cd bf       	out	0x3d, r28	; 61
    40c0:	df 91       	pop	r29
    40c2:	cf 91       	pop	r28
    40c4:	1f 91       	pop	r17
    40c6:	0f 91       	pop	r16
    40c8:	08 95       	ret

000040ca <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>:

int GroundControlStationInterface::transmit(Message *msgToSend)
{
    40ca:	cf 92       	push	r12
    40cc:	df 92       	push	r13
    40ce:	ef 92       	push	r14
    40d0:	ff 92       	push	r15
    40d2:	0f 93       	push	r16
    40d4:	1f 93       	push	r17
    40d6:	cf 93       	push	r28
    40d8:	df 93       	push	r29
    40da:	cd b7       	in	r28, 0x3d	; 61
    40dc:	de b7       	in	r29, 0x3e	; 62
    40de:	64 97       	sbiw	r28, 0x14	; 20
    40e0:	0f b6       	in	r0, 0x3f	; 63
    40e2:	f8 94       	cli
    40e4:	de bf       	out	0x3e, r29	; 62
    40e6:	0f be       	out	0x3f, r0	; 63
    40e8:	cd bf       	out	0x3d, r28	; 61
    40ea:	9a 8b       	std	Y+18, r25	; 0x12
    40ec:	89 8b       	std	Y+17, r24	; 0x11
    40ee:	7c 8b       	std	Y+20, r23	; 0x14
    40f0:	6b 8b       	std	Y+19, r22	; 0x13
		delete [] msgPayload;
		msgPayload = NULL;
	}
	
	return status;
}
    40f2:	ed b6       	in	r14, 0x3d	; 61
    40f4:	fe b6       	in	r15, 0x3e	; 62
	}
}

int GroundControlStationInterface::transmit(Message *msgToSend)
{
	int status = 0;
    40f6:	1a 82       	std	Y+2, r1	; 0x02
    40f8:	19 82       	std	Y+1, r1	; 0x01
	
	if (msgToSend != NULL)
    40fa:	8b 89       	ldd	r24, Y+19	; 0x13
    40fc:	9c 89       	ldd	r25, Y+20	; 0x14
    40fe:	00 97       	sbiw	r24, 0x00	; 0
    4100:	09 f4       	brne	.+2      	; 0x4104 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x3a>
    4102:	b3 c0       	rjmp	.+358    	; 0x426a <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x1a0>
    4104:	8d b7       	in	r24, 0x3d	; 61
    4106:	9e b7       	in	r25, 0x3e	; 62
    4108:	6c 01       	movw	r12, r24
	{
		byte *msgPayload = msgToSend->getBytes();
    410a:	8b 89       	ldd	r24, Y+19	; 0x13
    410c:	9c 89       	ldd	r25, Y+20	; 0x14
    410e:	fc 01       	movw	r30, r24
    4110:	80 81       	ld	r24, Z
    4112:	91 81       	ldd	r25, Z+1	; 0x01
    4114:	04 96       	adiw	r24, 0x04	; 4
    4116:	fc 01       	movw	r30, r24
    4118:	20 81       	ld	r18, Z
    411a:	31 81       	ldd	r19, Z+1	; 0x01
    411c:	8b 89       	ldd	r24, Y+19	; 0x13
    411e:	9c 89       	ldd	r25, Y+20	; 0x14
    4120:	f9 01       	movw	r30, r18
    4122:	19 95       	eicall
    4124:	9e 83       	std	Y+6, r25	; 0x06
    4126:	8d 83       	std	Y+5, r24	; 0x05
		
		int payloadSize = msgToSend->getMessageSize();
    4128:	8b 89       	ldd	r24, Y+19	; 0x13
    412a:	9c 89       	ldd	r25, Y+20	; 0x14
    412c:	0e 94 e6 22 	call	0x45cc	; 0x45cc <_ZN10helicopter8messages7Message14getMessageSizeEv>
    4130:	98 87       	std	Y+8, r25	; 0x08
    4132:	8f 83       	std	Y+7, r24	; 0x07
		
		int completeMsgSize = payloadSize + MsgHeaderFooterSize;;
    4134:	8f 81       	ldd	r24, Y+7	; 0x07
    4136:	98 85       	ldd	r25, Y+8	; 0x08
    4138:	05 96       	adiw	r24, 0x05	; 5
    413a:	9a 87       	std	Y+10, r25	; 0x0a
    413c:	89 87       	std	Y+9, r24	; 0x09

		byte completeMsg[completeMsgSize];
    413e:	89 85       	ldd	r24, Y+9	; 0x09
    4140:	9a 85       	ldd	r25, Y+10	; 0x0a
    4142:	01 97       	sbiw	r24, 0x01	; 1
    4144:	9c 87       	std	Y+12, r25	; 0x0c
    4146:	8b 87       	std	Y+11, r24	; 0x0b
    4148:	01 96       	adiw	r24, 0x01	; 1
    414a:	2d b7       	in	r18, 0x3d	; 61
    414c:	3e b7       	in	r19, 0x3e	; 62
    414e:	28 1b       	sub	r18, r24
    4150:	39 0b       	sbc	r19, r25
    4152:	0f b6       	in	r0, 0x3f	; 63
    4154:	f8 94       	cli
    4156:	3e bf       	out	0x3e, r19	; 62
    4158:	0f be       	out	0x3f, r0	; 63
    415a:	2d bf       	out	0x3d, r18	; 61
    415c:	8d b7       	in	r24, 0x3d	; 61
    415e:	9e b7       	in	r25, 0x3e	; 62
    4160:	01 96       	adiw	r24, 0x01	; 1
    4162:	9e 87       	std	Y+14, r25	; 0x0e
    4164:	8d 87       	std	Y+13, r24	; 0x0d
		
		completeMsg[0] = GroundControlStationInterface::SyncByte1;
    4166:	8d 85       	ldd	r24, Y+13	; 0x0d
    4168:	9e 85       	ldd	r25, Y+14	; 0x0e
    416a:	25 eb       	ldi	r18, 0xB5	; 181
    416c:	fc 01       	movw	r30, r24
    416e:	20 83       	st	Z, r18
		completeMsg[1] = GroundControlStationInterface::SyncByte2;
    4170:	8d 85       	ldd	r24, Y+13	; 0x0d
    4172:	9e 85       	ldd	r25, Y+14	; 0x0e
    4174:	22 e6       	ldi	r18, 0x62	; 98
    4176:	fc 01       	movw	r30, r24
    4178:	21 83       	std	Z+1, r18	; 0x01
		completeMsg[2] = GroundControlStationInterface::SyncByte3;
    417a:	8d 85       	ldd	r24, Y+13	; 0x0d
    417c:	9e 85       	ldd	r25, Y+14	; 0x0e
    417e:	27 ed       	ldi	r18, 0xD7	; 215
    4180:	fc 01       	movw	r30, r24
    4182:	22 83       	std	Z+2, r18	; 0x02
		
		memcpy(&completeMsg[3], msgPayload, payloadSize);
    4184:	4f 81       	ldd	r20, Y+7	; 0x07
    4186:	58 85       	ldd	r21, Y+8	; 0x08
    4188:	8d 85       	ldd	r24, Y+13	; 0x0d
    418a:	9e 85       	ldd	r25, Y+14	; 0x0e
    418c:	03 96       	adiw	r24, 0x03	; 3
    418e:	2d 81       	ldd	r18, Y+5	; 0x05
    4190:	3e 81       	ldd	r19, Y+6	; 0x06
    4192:	b9 01       	movw	r22, r18
    4194:	0e 94 ed 48 	call	0x91da	; 0x91da <memcpy>
		
		byte checksumA = 0;
    4198:	1f 86       	std	Y+15, r1	; 0x0f
		byte checksumB = 0;
    419a:	18 8a       	std	Y+16, r1	; 0x10
		
		calculateChecksum(msgPayload, payloadSize, checksumA, checksumB);
    419c:	fe 01       	movw	r30, r28
    419e:	70 96       	adiw	r30, 0x10	; 16
    41a0:	9e 01       	movw	r18, r28
    41a2:	21 5f       	subi	r18, 0xF1	; 241
    41a4:	3f 4f       	sbci	r19, 0xFF	; 255
    41a6:	4f 81       	ldd	r20, Y+7	; 0x07
    41a8:	58 85       	ldd	r21, Y+8	; 0x08
    41aa:	6d 81       	ldd	r22, Y+5	; 0x05
    41ac:	7e 81       	ldd	r23, Y+6	; 0x06
    41ae:	89 89       	ldd	r24, Y+17	; 0x11
    41b0:	9a 89       	ldd	r25, Y+18	; 0x12
    41b2:	8f 01       	movw	r16, r30
    41b4:	0e 94 10 20 	call	0x4020	; 0x4020 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>
		
		completeMsg[completeMsgSize - 2] = checksumA;
    41b8:	89 85       	ldd	r24, Y+9	; 0x09
    41ba:	9a 85       	ldd	r25, Y+10	; 0x0a
    41bc:	02 97       	sbiw	r24, 0x02	; 2
    41be:	4f 85       	ldd	r20, Y+15	; 0x0f
    41c0:	2d 85       	ldd	r18, Y+13	; 0x0d
    41c2:	3e 85       	ldd	r19, Y+14	; 0x0e
    41c4:	82 0f       	add	r24, r18
    41c6:	93 1f       	adc	r25, r19
    41c8:	fc 01       	movw	r30, r24
    41ca:	40 83       	st	Z, r20
		completeMsg[completeMsgSize - 1] = checksumB;
    41cc:	89 85       	ldd	r24, Y+9	; 0x09
    41ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    41d0:	01 97       	sbiw	r24, 0x01	; 1
    41d2:	48 89       	ldd	r20, Y+16	; 0x10
    41d4:	2d 85       	ldd	r18, Y+13	; 0x0d
    41d6:	3e 85       	ldd	r19, Y+14	; 0x0e
    41d8:	82 0f       	add	r24, r18
    41da:	93 1f       	adc	r25, r19
    41dc:	fc 01       	movw	r30, r24
    41de:	40 83       	st	Z, r20
		
		//iterate over the bytes and transmit them, unless there was an error.
		for (int i = 0; i < completeMsgSize && status == 0; i++)
    41e0:	1c 82       	std	Y+4, r1	; 0x04
    41e2:	1b 82       	std	Y+3, r1	; 0x03
    41e4:	23 c0       	rjmp	.+70     	; 0x422c <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x162>
		{
			status = serialDriver->transmitByte(completeMsg[i]);
    41e6:	89 89       	ldd	r24, Y+17	; 0x11
    41e8:	9a 89       	ldd	r25, Y+18	; 0x12
    41ea:	fc 01       	movw	r30, r24
    41ec:	80 81       	ld	r24, Z
    41ee:	91 81       	ldd	r25, Z+1	; 0x01
    41f0:	fc 01       	movw	r30, r24
    41f2:	80 81       	ld	r24, Z
    41f4:	91 81       	ldd	r25, Z+1	; 0x01
    41f6:	06 96       	adiw	r24, 0x06	; 6
    41f8:	fc 01       	movw	r30, r24
    41fa:	20 81       	ld	r18, Z
    41fc:	31 81       	ldd	r19, Z+1	; 0x01
    41fe:	4d 85       	ldd	r20, Y+13	; 0x0d
    4200:	5e 85       	ldd	r21, Y+14	; 0x0e
    4202:	8b 81       	ldd	r24, Y+3	; 0x03
    4204:	9c 81       	ldd	r25, Y+4	; 0x04
    4206:	84 0f       	add	r24, r20
    4208:	95 1f       	adc	r25, r21
    420a:	fc 01       	movw	r30, r24
    420c:	40 81       	ld	r20, Z
    420e:	89 89       	ldd	r24, Y+17	; 0x11
    4210:	9a 89       	ldd	r25, Y+18	; 0x12
    4212:	fc 01       	movw	r30, r24
    4214:	80 81       	ld	r24, Z
    4216:	91 81       	ldd	r25, Z+1	; 0x01
    4218:	64 2f       	mov	r22, r20
    421a:	f9 01       	movw	r30, r18
    421c:	19 95       	eicall
    421e:	9a 83       	std	Y+2, r25	; 0x02
    4220:	89 83       	std	Y+1, r24	; 0x01
		
		completeMsg[completeMsgSize - 2] = checksumA;
		completeMsg[completeMsgSize - 1] = checksumB;
		
		//iterate over the bytes and transmit them, unless there was an error.
		for (int i = 0; i < completeMsgSize && status == 0; i++)
    4222:	8b 81       	ldd	r24, Y+3	; 0x03
    4224:	9c 81       	ldd	r25, Y+4	; 0x04
    4226:	01 96       	adiw	r24, 0x01	; 1
    4228:	9c 83       	std	Y+4, r25	; 0x04
    422a:	8b 83       	std	Y+3, r24	; 0x03
    422c:	2b 81       	ldd	r18, Y+3	; 0x03
    422e:	3c 81       	ldd	r19, Y+4	; 0x04
    4230:	89 85       	ldd	r24, Y+9	; 0x09
    4232:	9a 85       	ldd	r25, Y+10	; 0x0a
    4234:	28 17       	cp	r18, r24
    4236:	39 07       	cpc	r19, r25
    4238:	34 f4       	brge	.+12     	; 0x4246 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x17c>
    423a:	89 81       	ldd	r24, Y+1	; 0x01
    423c:	9a 81       	ldd	r25, Y+2	; 0x02
    423e:	00 97       	sbiw	r24, 0x00	; 0
    4240:	11 f4       	brne	.+4      	; 0x4246 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x17c>
    4242:	81 e0       	ldi	r24, 0x01	; 1
    4244:	01 c0       	rjmp	.+2      	; 0x4248 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x17e>
    4246:	80 e0       	ldi	r24, 0x00	; 0
    4248:	88 23       	and	r24, r24
    424a:	69 f6       	brne	.-102    	; 0x41e6 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x11c>
		{
			status = serialDriver->transmitByte(completeMsg[i]);
		}
		
		delete [] msgPayload;
    424c:	8d 81       	ldd	r24, Y+5	; 0x05
    424e:	9e 81       	ldd	r25, Y+6	; 0x06
    4250:	00 97       	sbiw	r24, 0x00	; 0
    4252:	21 f0       	breq	.+8      	; 0x425c <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x192>
    4254:	8d 81       	ldd	r24, Y+5	; 0x05
    4256:	9e 81       	ldd	r25, Y+6	; 0x06
    4258:	0e 94 3f 3d 	call	0x7a7e	; 0x7a7e <_ZdaPv>
		msgPayload = NULL;
    425c:	1e 82       	std	Y+6, r1	; 0x06
    425e:	1d 82       	std	Y+5, r1	; 0x05
    4260:	0f b6       	in	r0, 0x3f	; 63
    4262:	f8 94       	cli
    4264:	de be       	out	0x3e, r13	; 62
    4266:	0f be       	out	0x3f, r0	; 63
    4268:	cd be       	out	0x3d, r12	; 61
	}
	
	return status;
    426a:	89 81       	ldd	r24, Y+1	; 0x01
    426c:	9a 81       	ldd	r25, Y+2	; 0x02
}
    426e:	0f b6       	in	r0, 0x3f	; 63
    4270:	f8 94       	cli
    4272:	fe be       	out	0x3e, r15	; 62
    4274:	0f be       	out	0x3f, r0	; 63
    4276:	ed be       	out	0x3d, r14	; 61
    4278:	64 96       	adiw	r28, 0x14	; 20
    427a:	0f b6       	in	r0, 0x3f	; 63
    427c:	f8 94       	cli
    427e:	de bf       	out	0x3e, r29	; 62
    4280:	0f be       	out	0x3f, r0	; 63
    4282:	cd bf       	out	0x3d, r28	; 61
    4284:	df 91       	pop	r29
    4286:	cf 91       	pop	r28
    4288:	1f 91       	pop	r17
    428a:	0f 91       	pop	r16
    428c:	ff 90       	pop	r15
    428e:	ef 90       	pop	r14
    4290:	df 90       	pop	r13
    4292:	cf 90       	pop	r12
    4294:	08 95       	ret

00004296 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE>:
 * a lot of data is constantly received before that timeout, and none of the data
 * is a sync byte, then this method will never stop receiving bytes and will
 * lock up the rest of the system. 
 */
int GroundControlStationInterface::receive(Message * &receivedMessage)
{
    4296:	cf 92       	push	r12
    4298:	df 92       	push	r13
    429a:	ef 92       	push	r14
    429c:	ff 92       	push	r15
    429e:	0f 93       	push	r16
    42a0:	1f 93       	push	r17
    42a2:	cf 93       	push	r28
    42a4:	df 93       	push	r29
    42a6:	cd b7       	in	r28, 0x3d	; 61
    42a8:	de b7       	in	r29, 0x3e	; 62
    42aa:	66 97       	sbiw	r28, 0x16	; 22
    42ac:	0f b6       	in	r0, 0x3f	; 63
    42ae:	f8 94       	cli
    42b0:	de bf       	out	0x3e, r29	; 62
    42b2:	0f be       	out	0x3f, r0	; 63
    42b4:	cd bf       	out	0x3d, r28	; 61
    42b6:	9c 8b       	std	Y+20, r25	; 0x14
    42b8:	8b 8b       	std	Y+19, r24	; 0x13
    42ba:	7e 8b       	std	Y+22, r23	; 0x16
    42bc:	6d 8b       	std	Y+21, r22	; 0x15
	{
		receivedMessage = NULL;
	}
	
	return status;
    42be:	ed b6       	in	r14, 0x3d	; 61
    42c0:	fe b6       	in	r15, 0x3e	; 62
 * is a sync byte, then this method will never stop receiving bytes and will
 * lock up the rest of the system. 
 */
int GroundControlStationInterface::receive(Message * &receivedMessage)
{
	int status = 0;
    42c2:	1a 82       	std	Y+2, r1	; 0x02
    42c4:	19 82       	std	Y+1, r1	; 0x01
	
    byte firstSyncByte = 0;
    42c6:	1b 82       	std	Y+3, r1	; 0x03
    byte secondSyncByte = 0;
    42c8:	1c 82       	std	Y+4, r1	; 0x04
    byte thirdSyncByte = 0;
    42ca:	1d 86       	std	Y+13, r1	; 0x0d
	

	//Read until the sync bytes are received or we time out.
	//Throw away any 'garbage' bytes.
	while(!(firstSyncByte == SyncByte1 && secondSyncByte == SyncByte2 && thirdSyncByte == SyncByte3) && status == 0)
    42cc:	1d c0       	rjmp	.+58     	; 0x4308 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x72>
	{
		firstSyncByte = secondSyncByte;
    42ce:	8c 81       	ldd	r24, Y+4	; 0x04
    42d0:	8b 83       	std	Y+3, r24	; 0x03
		secondSyncByte = thirdSyncByte;
    42d2:	8d 85       	ldd	r24, Y+13	; 0x0d
    42d4:	8c 83       	std	Y+4, r24	; 0x04
		status = serialDriver->receiveByte(thirdSyncByte);
    42d6:	8b 89       	ldd	r24, Y+19	; 0x13
    42d8:	9c 89       	ldd	r25, Y+20	; 0x14
    42da:	fc 01       	movw	r30, r24
    42dc:	80 81       	ld	r24, Z
    42de:	91 81       	ldd	r25, Z+1	; 0x01
    42e0:	fc 01       	movw	r30, r24
    42e2:	80 81       	ld	r24, Z
    42e4:	91 81       	ldd	r25, Z+1	; 0x01
    42e6:	08 96       	adiw	r24, 0x08	; 8
    42e8:	fc 01       	movw	r30, r24
    42ea:	20 81       	ld	r18, Z
    42ec:	31 81       	ldd	r19, Z+1	; 0x01
    42ee:	8b 89       	ldd	r24, Y+19	; 0x13
    42f0:	9c 89       	ldd	r25, Y+20	; 0x14
    42f2:	fc 01       	movw	r30, r24
    42f4:	80 81       	ld	r24, Z
    42f6:	91 81       	ldd	r25, Z+1	; 0x01
    42f8:	ae 01       	movw	r20, r28
    42fa:	43 5f       	subi	r20, 0xF3	; 243
    42fc:	5f 4f       	sbci	r21, 0xFF	; 255
    42fe:	ba 01       	movw	r22, r20
    4300:	f9 01       	movw	r30, r18
    4302:	19 95       	eicall
    4304:	9a 83       	std	Y+2, r25	; 0x02
    4306:	89 83       	std	Y+1, r24	; 0x01
    byte thirdSyncByte = 0;
	

	//Read until the sync bytes are received or we time out.
	//Throw away any 'garbage' bytes.
	while(!(firstSyncByte == SyncByte1 && secondSyncByte == SyncByte2 && thirdSyncByte == SyncByte3) && status == 0)
    4308:	8b 81       	ldd	r24, Y+3	; 0x03
    430a:	85 3b       	cpi	r24, 0xB5	; 181
    430c:	31 f4       	brne	.+12     	; 0x431a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x84>
    430e:	8c 81       	ldd	r24, Y+4	; 0x04
    4310:	82 36       	cpi	r24, 0x62	; 98
    4312:	19 f4       	brne	.+6      	; 0x431a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x84>
    4314:	8d 85       	ldd	r24, Y+13	; 0x0d
    4316:	87 3d       	cpi	r24, 0xD7	; 215
    4318:	31 f0       	breq	.+12     	; 0x4326 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x90>
    431a:	89 81       	ldd	r24, Y+1	; 0x01
    431c:	9a 81       	ldd	r25, Y+2	; 0x02
    431e:	00 97       	sbiw	r24, 0x00	; 0
    4320:	11 f4       	brne	.+4      	; 0x4326 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x90>
    4322:	81 e0       	ldi	r24, 0x01	; 1
    4324:	01 c0       	rjmp	.+2      	; 0x4328 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x92>
    4326:	80 e0       	ldi	r24, 0x00	; 0
    4328:	88 23       	and	r24, r24
    432a:	89 f6       	brne	.-94     	; 0x42ce <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x38>
		firstSyncByte = secondSyncByte;
		secondSyncByte = thirdSyncByte;
		status = serialDriver->receiveByte(thirdSyncByte);
	}
	
	if (status == 0)
    432c:	89 81       	ldd	r24, Y+1	; 0x01
    432e:	9a 81       	ldd	r25, Y+2	; 0x02
    4330:	00 97       	sbiw	r24, 0x00	; 0
    4332:	09 f0       	breq	.+2      	; 0x4336 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xa0>
    4334:	f9 c0       	rjmp	.+498    	; 0x4528 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x292>
	{
		//once we have found a valid message, get the message ID
		byte msgType = 0;
    4336:	1e 86       	std	Y+14, r1	; 0x0e
		
		status = serialDriver->receiveByte(msgType);
    4338:	8b 89       	ldd	r24, Y+19	; 0x13
    433a:	9c 89       	ldd	r25, Y+20	; 0x14
    433c:	fc 01       	movw	r30, r24
    433e:	80 81       	ld	r24, Z
    4340:	91 81       	ldd	r25, Z+1	; 0x01
    4342:	fc 01       	movw	r30, r24
    4344:	80 81       	ld	r24, Z
    4346:	91 81       	ldd	r25, Z+1	; 0x01
    4348:	08 96       	adiw	r24, 0x08	; 8
    434a:	fc 01       	movw	r30, r24
    434c:	20 81       	ld	r18, Z
    434e:	31 81       	ldd	r19, Z+1	; 0x01
    4350:	8b 89       	ldd	r24, Y+19	; 0x13
    4352:	9c 89       	ldd	r25, Y+20	; 0x14
    4354:	fc 01       	movw	r30, r24
    4356:	80 81       	ld	r24, Z
    4358:	91 81       	ldd	r25, Z+1	; 0x01
    435a:	ae 01       	movw	r20, r28
    435c:	42 5f       	subi	r20, 0xF2	; 242
    435e:	5f 4f       	sbci	r21, 0xFF	; 255
    4360:	ba 01       	movw	r22, r20
    4362:	f9 01       	movw	r30, r18
    4364:	19 95       	eicall
    4366:	9a 83       	std	Y+2, r25	; 0x02
    4368:	89 83       	std	Y+1, r24	; 0x01
		
		if (status == 0)
    436a:	89 81       	ldd	r24, Y+1	; 0x01
    436c:	9a 81       	ldd	r25, Y+2	; 0x02
    436e:	00 97       	sbiw	r24, 0x00	; 0
    4370:	09 f0       	breq	.+2      	; 0x4374 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xde>
    4372:	da c0       	rjmp	.+436    	; 0x4528 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x292>
		{
			int msgSize = 0;
    4374:	1e 82       	std	Y+6, r1	; 0x06
    4376:	1d 82       	std	Y+5, r1	; 0x05
			
			switch(msgType)
    4378:	8e 85       	ldd	r24, Y+14	; 0x0e
    437a:	88 2f       	mov	r24, r24
    437c:	90 e0       	ldi	r25, 0x00	; 0
    437e:	82 30       	cpi	r24, 0x02	; 2
    4380:	91 05       	cpc	r25, r1
    4382:	29 f4       	brne	.+10     	; 0x438e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xf8>
			{
				case SystemTelemetryMessage::MessageType:
					msgSize = SystemTelemetryMessage::MessageSize;
    4384:	85 ed       	ldi	r24, 0xD5	; 213
    4386:	90 e0       	ldi	r25, 0x00	; 0
    4388:	9e 83       	std	Y+6, r25	; 0x06
    438a:	8d 83       	std	Y+5, r24	; 0x05
					break;
    438c:	05 c0       	rjmp	.+10     	; 0x4398 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x102>
				default:
					//unrecognized message type.
					status = -2;
    438e:	8e ef       	ldi	r24, 0xFE	; 254
    4390:	9f ef       	ldi	r25, 0xFF	; 255
    4392:	9a 83       	std	Y+2, r25	; 0x02
    4394:	89 83       	std	Y+1, r24	; 0x01
					break;
    4396:	00 00       	nop
			}
			
			if (status == 0)
    4398:	89 81       	ldd	r24, Y+1	; 0x01
    439a:	9a 81       	ldd	r25, Y+2	; 0x02
    439c:	00 97       	sbiw	r24, 0x00	; 0
    439e:	09 f0       	breq	.+2      	; 0x43a2 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x10c>
    43a0:	c3 c0       	rjmp	.+390    	; 0x4528 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x292>
    43a2:	8d b7       	in	r24, 0x3d	; 61
    43a4:	9e b7       	in	r25, 0x3e	; 62
    43a6:	6c 01       	movw	r12, r24
			{
				byte messagePayload[msgSize];
    43a8:	8d 81       	ldd	r24, Y+5	; 0x05
    43aa:	9e 81       	ldd	r25, Y+6	; 0x06
    43ac:	01 97       	sbiw	r24, 0x01	; 1
    43ae:	9a 87       	std	Y+10, r25	; 0x0a
    43b0:	89 87       	std	Y+9, r24	; 0x09
    43b2:	01 96       	adiw	r24, 0x01	; 1
    43b4:	2d b7       	in	r18, 0x3d	; 61
    43b6:	3e b7       	in	r19, 0x3e	; 62
    43b8:	28 1b       	sub	r18, r24
    43ba:	39 0b       	sbc	r19, r25
    43bc:	0f b6       	in	r0, 0x3f	; 63
    43be:	f8 94       	cli
    43c0:	3e bf       	out	0x3e, r19	; 62
    43c2:	0f be       	out	0x3f, r0	; 63
    43c4:	2d bf       	out	0x3d, r18	; 61
    43c6:	8d b7       	in	r24, 0x3d	; 61
    43c8:	9e b7       	in	r25, 0x3e	; 62
    43ca:	01 96       	adiw	r24, 0x01	; 1
    43cc:	9c 87       	std	Y+12, r25	; 0x0c
    43ce:	8b 87       	std	Y+11, r24	; 0x0b
							
				messagePayload[0] = msgType;
    43d0:	2e 85       	ldd	r18, Y+14	; 0x0e
    43d2:	8b 85       	ldd	r24, Y+11	; 0x0b
    43d4:	9c 85       	ldd	r25, Y+12	; 0x0c
    43d6:	fc 01       	movw	r30, r24
    43d8:	20 83       	st	Z, r18
							
				//Read the bytes in the payload of the message.
				//skip the first position since thats where the message type is located.
				for (int i = 1; i < msgSize && status == 0; i++)
    43da:	81 e0       	ldi	r24, 0x01	; 1
    43dc:	90 e0       	ldi	r25, 0x00	; 0
    43de:	98 87       	std	Y+8, r25	; 0x08
    43e0:	8f 83       	std	Y+7, r24	; 0x07
    43e2:	21 c0       	rjmp	.+66     	; 0x4426 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x190>
				{
					status = serialDriver->receiveByte(messagePayload[i]);
    43e4:	8b 89       	ldd	r24, Y+19	; 0x13
    43e6:	9c 89       	ldd	r25, Y+20	; 0x14
    43e8:	fc 01       	movw	r30, r24
    43ea:	80 81       	ld	r24, Z
    43ec:	91 81       	ldd	r25, Z+1	; 0x01
    43ee:	fc 01       	movw	r30, r24
    43f0:	80 81       	ld	r24, Z
    43f2:	91 81       	ldd	r25, Z+1	; 0x01
    43f4:	08 96       	adiw	r24, 0x08	; 8
    43f6:	fc 01       	movw	r30, r24
    43f8:	20 81       	ld	r18, Z
    43fa:	31 81       	ldd	r19, Z+1	; 0x01
    43fc:	4b 85       	ldd	r20, Y+11	; 0x0b
    43fe:	5c 85       	ldd	r21, Y+12	; 0x0c
    4400:	8f 81       	ldd	r24, Y+7	; 0x07
    4402:	98 85       	ldd	r25, Y+8	; 0x08
    4404:	48 0f       	add	r20, r24
    4406:	59 1f       	adc	r21, r25
    4408:	8b 89       	ldd	r24, Y+19	; 0x13
    440a:	9c 89       	ldd	r25, Y+20	; 0x14
    440c:	fc 01       	movw	r30, r24
    440e:	80 81       	ld	r24, Z
    4410:	91 81       	ldd	r25, Z+1	; 0x01
    4412:	ba 01       	movw	r22, r20
    4414:	f9 01       	movw	r30, r18
    4416:	19 95       	eicall
    4418:	9a 83       	std	Y+2, r25	; 0x02
    441a:	89 83       	std	Y+1, r24	; 0x01
							
				messagePayload[0] = msgType;
							
				//Read the bytes in the payload of the message.
				//skip the first position since thats where the message type is located.
				for (int i = 1; i < msgSize && status == 0; i++)
    441c:	8f 81       	ldd	r24, Y+7	; 0x07
    441e:	98 85       	ldd	r25, Y+8	; 0x08
    4420:	01 96       	adiw	r24, 0x01	; 1
    4422:	98 87       	std	Y+8, r25	; 0x08
    4424:	8f 83       	std	Y+7, r24	; 0x07
    4426:	2f 81       	ldd	r18, Y+7	; 0x07
    4428:	38 85       	ldd	r19, Y+8	; 0x08
    442a:	8d 81       	ldd	r24, Y+5	; 0x05
    442c:	9e 81       	ldd	r25, Y+6	; 0x06
    442e:	28 17       	cp	r18, r24
    4430:	39 07       	cpc	r19, r25
    4432:	34 f4       	brge	.+12     	; 0x4440 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1aa>
    4434:	89 81       	ldd	r24, Y+1	; 0x01
    4436:	9a 81       	ldd	r25, Y+2	; 0x02
    4438:	00 97       	sbiw	r24, 0x00	; 0
    443a:	11 f4       	brne	.+4      	; 0x4440 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1aa>
    443c:	81 e0       	ldi	r24, 0x01	; 1
    443e:	01 c0       	rjmp	.+2      	; 0x4442 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1ac>
    4440:	80 e0       	ldi	r24, 0x00	; 0
    4442:	88 23       	and	r24, r24
    4444:	79 f6       	brne	.-98     	; 0x43e4 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x14e>
				{
					status = serialDriver->receiveByte(messagePayload[i]);
				}
							
				if (status == 0)
    4446:	89 81       	ldd	r24, Y+1	; 0x01
    4448:	9a 81       	ldd	r25, Y+2	; 0x02
    444a:	00 97       	sbiw	r24, 0x00	; 0
    444c:	09 f0       	breq	.+2      	; 0x4450 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1ba>
    444e:	67 c0       	rjmp	.+206    	; 0x451e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x288>
				{
					//Read the two checksum bytes
					byte messageChecksumA = 0;
    4450:	1f 86       	std	Y+15, r1	; 0x0f
					byte messageChecksumB = 0;
    4452:	18 8a       	std	Y+16, r1	; 0x10
					byte calculatedChecksumA = 0;
    4454:	19 8a       	std	Y+17, r1	; 0x11
					byte calculatedChecksumB = 0;
    4456:	1a 8a       	std	Y+18, r1	; 0x12
								
					//Note: status is getting overwritten here.
					status = serialDriver->receiveByte(messageChecksumA);
    4458:	8b 89       	ldd	r24, Y+19	; 0x13
    445a:	9c 89       	ldd	r25, Y+20	; 0x14
    445c:	fc 01       	movw	r30, r24
    445e:	80 81       	ld	r24, Z
    4460:	91 81       	ldd	r25, Z+1	; 0x01
    4462:	fc 01       	movw	r30, r24
    4464:	80 81       	ld	r24, Z
    4466:	91 81       	ldd	r25, Z+1	; 0x01
    4468:	08 96       	adiw	r24, 0x08	; 8
    446a:	fc 01       	movw	r30, r24
    446c:	20 81       	ld	r18, Z
    446e:	31 81       	ldd	r19, Z+1	; 0x01
    4470:	8b 89       	ldd	r24, Y+19	; 0x13
    4472:	9c 89       	ldd	r25, Y+20	; 0x14
    4474:	fc 01       	movw	r30, r24
    4476:	80 81       	ld	r24, Z
    4478:	91 81       	ldd	r25, Z+1	; 0x01
    447a:	ae 01       	movw	r20, r28
    447c:	41 5f       	subi	r20, 0xF1	; 241
    447e:	5f 4f       	sbci	r21, 0xFF	; 255
    4480:	ba 01       	movw	r22, r20
    4482:	f9 01       	movw	r30, r18
    4484:	19 95       	eicall
    4486:	9a 83       	std	Y+2, r25	; 0x02
    4488:	89 83       	std	Y+1, r24	; 0x01
					status = serialDriver->receiveByte(messageChecksumB);
    448a:	8b 89       	ldd	r24, Y+19	; 0x13
    448c:	9c 89       	ldd	r25, Y+20	; 0x14
    448e:	fc 01       	movw	r30, r24
    4490:	80 81       	ld	r24, Z
    4492:	91 81       	ldd	r25, Z+1	; 0x01
    4494:	fc 01       	movw	r30, r24
    4496:	80 81       	ld	r24, Z
    4498:	91 81       	ldd	r25, Z+1	; 0x01
    449a:	08 96       	adiw	r24, 0x08	; 8
    449c:	fc 01       	movw	r30, r24
    449e:	20 81       	ld	r18, Z
    44a0:	31 81       	ldd	r19, Z+1	; 0x01
    44a2:	8b 89       	ldd	r24, Y+19	; 0x13
    44a4:	9c 89       	ldd	r25, Y+20	; 0x14
    44a6:	fc 01       	movw	r30, r24
    44a8:	80 81       	ld	r24, Z
    44aa:	91 81       	ldd	r25, Z+1	; 0x01
    44ac:	ae 01       	movw	r20, r28
    44ae:	40 5f       	subi	r20, 0xF0	; 240
    44b0:	5f 4f       	sbci	r21, 0xFF	; 255
    44b2:	ba 01       	movw	r22, r20
    44b4:	f9 01       	movw	r30, r18
    44b6:	19 95       	eicall
    44b8:	9a 83       	std	Y+2, r25	; 0x02
    44ba:	89 83       	std	Y+1, r24	; 0x01
								
					//Generate checksum for the message			
					calculateChecksum(messagePayload, msgSize, calculatedChecksumA, calculatedChecksumB);
    44bc:	6b 85       	ldd	r22, Y+11	; 0x0b
    44be:	7c 85       	ldd	r23, Y+12	; 0x0c
    44c0:	fe 01       	movw	r30, r28
    44c2:	72 96       	adiw	r30, 0x12	; 18
    44c4:	9e 01       	movw	r18, r28
    44c6:	2f 5e       	subi	r18, 0xEF	; 239
    44c8:	3f 4f       	sbci	r19, 0xFF	; 255
    44ca:	4d 81       	ldd	r20, Y+5	; 0x05
    44cc:	5e 81       	ldd	r21, Y+6	; 0x06
    44ce:	8b 89       	ldd	r24, Y+19	; 0x13
    44d0:	9c 89       	ldd	r25, Y+20	; 0x14
    44d2:	8f 01       	movw	r16, r30
    44d4:	0e 94 10 20 	call	0x4020	; 0x4020 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>
								
					//verify that the checksum is correct
					if (calculatedChecksumA == messageChecksumA && calculatedChecksumB == messageChecksumB)
    44d8:	99 89       	ldd	r25, Y+17	; 0x11
    44da:	8f 85       	ldd	r24, Y+15	; 0x0f
    44dc:	98 17       	cp	r25, r24
    44de:	d9 f4       	brne	.+54     	; 0x4516 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x280>
    44e0:	9a 89       	ldd	r25, Y+18	; 0x12
    44e2:	88 89       	ldd	r24, Y+16	; 0x10
    44e4:	98 17       	cp	r25, r24
    44e6:	b9 f4       	brne	.+46     	; 0x4516 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x280>
					{
						//build the message
						switch(msgType)
    44e8:	8e 85       	ldd	r24, Y+14	; 0x0e
    44ea:	88 2f       	mov	r24, r24
    44ec:	90 e0       	ldi	r25, 0x00	; 0
    44ee:	82 30       	cpi	r24, 0x02	; 2
    44f0:	91 05       	cpc	r25, r1
    44f2:	59 f4       	brne	.+22     	; 0x450a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x274>
						{
							case SystemTelemetryMessage::MessageType:
								receivedMessage = SystemTelemetryMessage::buildMessageSt(messagePayload);
    44f4:	8b 85       	ldd	r24, Y+11	; 0x0b
    44f6:	9c 85       	ldd	r25, Y+12	; 0x0c
    44f8:	0e 94 68 2f 	call	0x5ed0	; 0x5ed0 <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh>
    44fc:	9c 01       	movw	r18, r24
    44fe:	8d 89       	ldd	r24, Y+21	; 0x15
    4500:	9e 89       	ldd	r25, Y+22	; 0x16
    4502:	fc 01       	movw	r30, r24
    4504:	31 83       	std	Z+1, r19	; 0x01
    4506:	20 83       	st	Z, r18
							break;
    4508:	05 c0       	rjmp	.+10     	; 0x4514 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x27e>
							default:
								//unrecognized message type.
								status = -2;
    450a:	8e ef       	ldi	r24, 0xFE	; 254
    450c:	9f ef       	ldi	r25, 0xFF	; 255
    450e:	9a 83       	std	Y+2, r25	; 0x02
    4510:	89 83       	std	Y+1, r24	; 0x01
							break;
    4512:	00 00       	nop
								
					//verify that the checksum is correct
					if (calculatedChecksumA == messageChecksumA && calculatedChecksumB == messageChecksumB)
					{
						//build the message
						switch(msgType)
    4514:	04 c0       	rjmp	.+8      	; 0x451e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x288>
							break;
						}
					}else
					{
						//checksum mismatch
						status = -3;
    4516:	8d ef       	ldi	r24, 0xFD	; 253
    4518:	9f ef       	ldi	r25, 0xFF	; 255
    451a:	9a 83       	std	Y+2, r25	; 0x02
    451c:	89 83       	std	Y+1, r24	; 0x01
    451e:	0f b6       	in	r0, 0x3f	; 63
    4520:	f8 94       	cli
    4522:	de be       	out	0x3e, r13	; 62
    4524:	0f be       	out	0x3f, r0	; 63
    4526:	cd be       	out	0x3d, r12	; 61
				}
			}
		}
	}
	
	if (status != 0)
    4528:	89 81       	ldd	r24, Y+1	; 0x01
    452a:	9a 81       	ldd	r25, Y+2	; 0x02
    452c:	00 97       	sbiw	r24, 0x00	; 0
    452e:	29 f0       	breq	.+10     	; 0x453a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x2a4>
	{
		receivedMessage = NULL;
    4530:	8d 89       	ldd	r24, Y+21	; 0x15
    4532:	9e 89       	ldd	r25, Y+22	; 0x16
    4534:	fc 01       	movw	r30, r24
    4536:	11 82       	std	Z+1, r1	; 0x01
    4538:	10 82       	st	Z, r1
	}
	
	return status;
    453a:	89 81       	ldd	r24, Y+1	; 0x01
    453c:	9a 81       	ldd	r25, Y+2	; 0x02
    453e:	0f b6       	in	r0, 0x3f	; 63
    4540:	f8 94       	cli
    4542:	fe be       	out	0x3e, r15	; 62
    4544:	0f be       	out	0x3f, r0	; 63
    4546:	ed be       	out	0x3d, r14	; 61
    4548:	66 96       	adiw	r28, 0x16	; 22
    454a:	0f b6       	in	r0, 0x3f	; 63
    454c:	f8 94       	cli
    454e:	de bf       	out	0x3e, r29	; 62
    4550:	0f be       	out	0x3f, r0	; 63
    4552:	cd bf       	out	0x3d, r28	; 61
    4554:	df 91       	pop	r29
    4556:	cf 91       	pop	r28
    4558:	1f 91       	pop	r17
    455a:	0f 91       	pop	r16
    455c:	ff 90       	pop	r15
    455e:	ef 90       	pop	r14
    4560:	df 90       	pop	r13
    4562:	cf 90       	pop	r12
    4564:	08 95       	ret

00004566 <_ZN10helicopter8messages7MessageD1Ev>:
					msgType(msgType), msgSize(msgSize)
				{
					
				}
				
				virtual ~Message()
    4566:	cf 93       	push	r28
    4568:	df 93       	push	r29
    456a:	1f 92       	push	r1
    456c:	1f 92       	push	r1
    456e:	cd b7       	in	r28, 0x3d	; 61
    4570:	de b7       	in	r29, 0x3e	; 62
    4572:	9a 83       	std	Y+2, r25	; 0x02
    4574:	89 83       	std	Y+1, r24	; 0x01
				{
    4576:	89 81       	ldd	r24, Y+1	; 0x01
    4578:	9a 81       	ldd	r25, Y+2	; 0x02
    457a:	26 e2       	ldi	r18, 0x26	; 38
    457c:	32 e0       	ldi	r19, 0x02	; 2
    457e:	fc 01       	movw	r30, r24
    4580:	31 83       	std	Z+1, r19	; 0x01
    4582:	20 83       	st	Z, r18
					
				}
    4584:	80 e0       	ldi	r24, 0x00	; 0
    4586:	90 e0       	ldi	r25, 0x00	; 0
    4588:	81 70       	andi	r24, 0x01	; 1
    458a:	99 27       	eor	r25, r25
    458c:	00 97       	sbiw	r24, 0x00	; 0
    458e:	21 f0       	breq	.+8      	; 0x4598 <_ZN10helicopter8messages7MessageD1Ev+0x32>
    4590:	89 81       	ldd	r24, Y+1	; 0x01
    4592:	9a 81       	ldd	r25, Y+2	; 0x02
    4594:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    4598:	0f 90       	pop	r0
    459a:	0f 90       	pop	r0
    459c:	df 91       	pop	r29
    459e:	cf 91       	pop	r28
    45a0:	08 95       	ret

000045a2 <_ZN10helicopter8messages7MessageD0Ev>:
					msgType(msgType), msgSize(msgSize)
				{
					
				}
				
				virtual ~Message()
    45a2:	cf 93       	push	r28
    45a4:	df 93       	push	r29
    45a6:	1f 92       	push	r1
    45a8:	1f 92       	push	r1
    45aa:	cd b7       	in	r28, 0x3d	; 61
    45ac:	de b7       	in	r29, 0x3e	; 62
    45ae:	9a 83       	std	Y+2, r25	; 0x02
    45b0:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    45b2:	89 81       	ldd	r24, Y+1	; 0x01
    45b4:	9a 81       	ldd	r25, Y+2	; 0x02
    45b6:	0e 94 b3 22 	call	0x4566	; 0x4566 <_ZN10helicopter8messages7MessageD1Ev>
    45ba:	89 81       	ldd	r24, Y+1	; 0x01
    45bc:	9a 81       	ldd	r25, Y+2	; 0x02
    45be:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    45c2:	0f 90       	pop	r0
    45c4:	0f 90       	pop	r0
    45c6:	df 91       	pop	r29
    45c8:	cf 91       	pop	r28
    45ca:	08 95       	ret

000045cc <_ZN10helicopter8messages7Message14getMessageSizeEv>:
	* Returns the number of bytes in this message. This should
	* be the payload of the message, and not underlying protocol
	* information (sync bytes and checksum bytes)
	*/
int Message::getMessageSize()
{
    45cc:	cf 93       	push	r28
    45ce:	df 93       	push	r29
    45d0:	1f 92       	push	r1
    45d2:	1f 92       	push	r1
    45d4:	cd b7       	in	r28, 0x3d	; 61
    45d6:	de b7       	in	r29, 0x3e	; 62
    45d8:	9a 83       	std	Y+2, r25	; 0x02
    45da:	89 83       	std	Y+1, r24	; 0x01
	return msgSize;
    45dc:	89 81       	ldd	r24, Y+1	; 0x01
    45de:	9a 81       	ldd	r25, Y+2	; 0x02
    45e0:	fc 01       	movw	r30, r24
    45e2:	83 81       	ldd	r24, Z+3	; 0x03
    45e4:	94 81       	ldd	r25, Z+4	; 0x04
}
    45e6:	0f 90       	pop	r0
    45e8:	0f 90       	pop	r0
    45ea:	df 91       	pop	r29
    45ec:	cf 91       	pop	r28
    45ee:	08 95       	ret

000045f0 <_ZN10helicopter8messages7Message8getBytesEv>:
				
/**
	* Returns the data in this message in raw byte format for transmission.
	*/
byte *Message::getBytes()
{
    45f0:	cf 93       	push	r28
    45f2:	df 93       	push	r29
    45f4:	1f 92       	push	r1
    45f6:	1f 92       	push	r1
    45f8:	cd b7       	in	r28, 0x3d	; 61
    45fa:	de b7       	in	r29, 0x3e	; 62
    45fc:	9a 83       	std	Y+2, r25	; 0x02
    45fe:	89 83       	std	Y+1, r24	; 0x01
	return NULL;
    4600:	80 e0       	ldi	r24, 0x00	; 0
    4602:	90 e0       	ldi	r25, 0x00	; 0
}
    4604:	0f 90       	pop	r0
    4606:	0f 90       	pop	r0
    4608:	df 91       	pop	r29
    460a:	cf 91       	pop	r28
    460c:	08 95       	ret

0000460e <_ZN10helicopter8messages7Message12buildMessageEPh>:
	* for creating a message object given a stream of bytes.
	* @param message The bytes in the payload of the message which should be used
	* to construct a message object.
	*/
void Message::buildMessage(byte *message)
{
    460e:	cf 93       	push	r28
    4610:	df 93       	push	r29
    4612:	00 d0       	rcall	.+0      	; 0x4614 <_ZN10helicopter8messages7Message12buildMessageEPh+0x6>
    4614:	1f 92       	push	r1
    4616:	cd b7       	in	r28, 0x3d	; 61
    4618:	de b7       	in	r29, 0x3e	; 62
    461a:	9a 83       	std	Y+2, r25	; 0x02
    461c:	89 83       	std	Y+1, r24	; 0x01
    461e:	7c 83       	std	Y+4, r23	; 0x04
    4620:	6b 83       	std	Y+3, r22	; 0x03
	//noop. subclass should implement this.
    4622:	0f 90       	pop	r0
    4624:	0f 90       	pop	r0
    4626:	0f 90       	pop	r0
    4628:	0f 90       	pop	r0
    462a:	df 91       	pop	r29
    462c:	cf 91       	pop	r28
    462e:	08 95       	ret

00004630 <_ZN10helicopter8messages7MessageC1Ehi>:
			
				/**
				 * @param msgType The identifier of this message
				 * @param msgSize The size in bytes of this message
				 */
				Message (byte msgType, int msgSize):
    4630:	cf 93       	push	r28
    4632:	df 93       	push	r29
    4634:	00 d0       	rcall	.+0      	; 0x4636 <_ZN10helicopter8messages7MessageC1Ehi+0x6>
    4636:	1f 92       	push	r1
    4638:	1f 92       	push	r1
    463a:	cd b7       	in	r28, 0x3d	; 61
    463c:	de b7       	in	r29, 0x3e	; 62
    463e:	9a 83       	std	Y+2, r25	; 0x02
    4640:	89 83       	std	Y+1, r24	; 0x01
    4642:	6b 83       	std	Y+3, r22	; 0x03
    4644:	5d 83       	std	Y+5, r21	; 0x05
    4646:	4c 83       	std	Y+4, r20	; 0x04
					msgType(msgType), msgSize(msgSize)
    4648:	89 81       	ldd	r24, Y+1	; 0x01
    464a:	9a 81       	ldd	r25, Y+2	; 0x02
    464c:	26 e2       	ldi	r18, 0x26	; 38
    464e:	32 e0       	ldi	r19, 0x02	; 2
    4650:	fc 01       	movw	r30, r24
    4652:	31 83       	std	Z+1, r19	; 0x01
    4654:	20 83       	st	Z, r18
    4656:	89 81       	ldd	r24, Y+1	; 0x01
    4658:	9a 81       	ldd	r25, Y+2	; 0x02
    465a:	2b 81       	ldd	r18, Y+3	; 0x03
    465c:	fc 01       	movw	r30, r24
    465e:	22 83       	std	Z+2, r18	; 0x02
    4660:	89 81       	ldd	r24, Y+1	; 0x01
    4662:	9a 81       	ldd	r25, Y+2	; 0x02
    4664:	2c 81       	ldd	r18, Y+4	; 0x04
    4666:	3d 81       	ldd	r19, Y+5	; 0x05
    4668:	fc 01       	movw	r30, r24
    466a:	34 83       	std	Z+4, r19	; 0x04
    466c:	23 83       	std	Z+3, r18	; 0x03
				{
					
				}
    466e:	0f 90       	pop	r0
    4670:	0f 90       	pop	r0
    4672:	0f 90       	pop	r0
    4674:	0f 90       	pop	r0
    4676:	0f 90       	pop	r0
    4678:	df 91       	pop	r29
    467a:	cf 91       	pop	r28
    467c:	08 95       	ret

0000467e <_ZN10helicopter8messages11SyncMessageC1Ev>:
				static const byte MessageType = 3;
							
				static const byte MessageSize =
					sizeof(msgType);
							
				SyncMessage(): Message(MessageType,MessageSize)
    467e:	cf 93       	push	r28
    4680:	df 93       	push	r29
    4682:	1f 92       	push	r1
    4684:	1f 92       	push	r1
    4686:	cd b7       	in	r28, 0x3d	; 61
    4688:	de b7       	in	r29, 0x3e	; 62
    468a:	9a 83       	std	Y+2, r25	; 0x02
    468c:	89 83       	std	Y+1, r24	; 0x01
    468e:	89 81       	ldd	r24, Y+1	; 0x01
    4690:	9a 81       	ldd	r25, Y+2	; 0x02
    4692:	41 e0       	ldi	r20, 0x01	; 1
    4694:	50 e0       	ldi	r21, 0x00	; 0
    4696:	63 e0       	ldi	r22, 0x03	; 3
    4698:	0e 94 18 23 	call	0x4630	; 0x4630 <_ZN10helicopter8messages7MessageC1Ehi>
    469c:	89 81       	ldd	r24, Y+1	; 0x01
    469e:	9a 81       	ldd	r25, Y+2	; 0x02
    46a0:	22 e3       	ldi	r18, 0x32	; 50
    46a2:	32 e0       	ldi	r19, 0x02	; 2
    46a4:	fc 01       	movw	r30, r24
    46a6:	31 83       	std	Z+1, r19	; 0x01
    46a8:	20 83       	st	Z, r18
				{
								
				}
    46aa:	0f 90       	pop	r0
    46ac:	0f 90       	pop	r0
    46ae:	df 91       	pop	r29
    46b0:	cf 91       	pop	r28
    46b2:	08 95       	ret

000046b4 <_ZN10helicopter8messages11SyncMessageD1Ev>:
				
				~SyncMessage()
    46b4:	cf 93       	push	r28
    46b6:	df 93       	push	r29
    46b8:	1f 92       	push	r1
    46ba:	1f 92       	push	r1
    46bc:	cd b7       	in	r28, 0x3d	; 61
    46be:	de b7       	in	r29, 0x3e	; 62
    46c0:	9a 83       	std	Y+2, r25	; 0x02
    46c2:	89 83       	std	Y+1, r24	; 0x01
				{
    46c4:	89 81       	ldd	r24, Y+1	; 0x01
    46c6:	9a 81       	ldd	r25, Y+2	; 0x02
    46c8:	22 e3       	ldi	r18, 0x32	; 50
    46ca:	32 e0       	ldi	r19, 0x02	; 2
    46cc:	fc 01       	movw	r30, r24
    46ce:	31 83       	std	Z+1, r19	; 0x01
    46d0:	20 83       	st	Z, r18
    46d2:	89 81       	ldd	r24, Y+1	; 0x01
    46d4:	9a 81       	ldd	r25, Y+2	; 0x02
    46d6:	0e 94 b3 22 	call	0x4566	; 0x4566 <_ZN10helicopter8messages7MessageD1Ev>
					
				}
    46da:	80 e0       	ldi	r24, 0x00	; 0
    46dc:	90 e0       	ldi	r25, 0x00	; 0
    46de:	81 70       	andi	r24, 0x01	; 1
    46e0:	99 27       	eor	r25, r25
    46e2:	00 97       	sbiw	r24, 0x00	; 0
    46e4:	21 f0       	breq	.+8      	; 0x46ee <_ZN10helicopter8messages11SyncMessageD1Ev+0x3a>
    46e6:	89 81       	ldd	r24, Y+1	; 0x01
    46e8:	9a 81       	ldd	r25, Y+2	; 0x02
    46ea:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    46ee:	0f 90       	pop	r0
    46f0:	0f 90       	pop	r0
    46f2:	df 91       	pop	r29
    46f4:	cf 91       	pop	r28
    46f6:	08 95       	ret

000046f8 <_ZN10helicopter8messages11SyncMessageD0Ev>:
				SyncMessage(): Message(MessageType,MessageSize)
				{
								
				}
				
				~SyncMessage()
    46f8:	cf 93       	push	r28
    46fa:	df 93       	push	r29
    46fc:	1f 92       	push	r1
    46fe:	1f 92       	push	r1
    4700:	cd b7       	in	r28, 0x3d	; 61
    4702:	de b7       	in	r29, 0x3e	; 62
    4704:	9a 83       	std	Y+2, r25	; 0x02
    4706:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    4708:	89 81       	ldd	r24, Y+1	; 0x01
    470a:	9a 81       	ldd	r25, Y+2	; 0x02
    470c:	0e 94 5a 23 	call	0x46b4	; 0x46b4 <_ZN10helicopter8messages11SyncMessageD1Ev>
    4710:	89 81       	ldd	r24, Y+1	; 0x01
    4712:	9a 81       	ldd	r25, Y+2	; 0x02
    4714:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    4718:	0f 90       	pop	r0
    471a:	0f 90       	pop	r0
    471c:	df 91       	pop	r29
    471e:	cf 91       	pop	r28
    4720:	08 95       	ret

00004722 <_ZN10helicopter8messages11SyncMessage8getBytesEv>:

using namespace helicopter::messages;


byte *SyncMessage::getBytes()
{
    4722:	cf 93       	push	r28
    4724:	df 93       	push	r29
    4726:	00 d0       	rcall	.+0      	; 0x4728 <_ZN10helicopter8messages11SyncMessage8getBytesEv+0x6>
    4728:	00 d0       	rcall	.+0      	; 0x472a <_ZN10helicopter8messages11SyncMessage8getBytesEv+0x8>
    472a:	cd b7       	in	r28, 0x3d	; 61
    472c:	de b7       	in	r29, 0x3e	; 62
    472e:	9e 83       	std	Y+6, r25	; 0x06
    4730:	8d 83       	std	Y+5, r24	; 0x05
	byte *msg = new byte[MessageSize];
    4732:	81 e0       	ldi	r24, 0x01	; 1
    4734:	90 e0       	ldi	r25, 0x00	; 0
    4736:	0e 94 2e 3d 	call	0x7a5c	; 0x7a5c <_Znaj>
    473a:	9a 83       	std	Y+2, r25	; 0x02
    473c:	89 83       	std	Y+1, r24	; 0x01
	byte *msgPtr = msg;
    473e:	89 81       	ldd	r24, Y+1	; 0x01
    4740:	9a 81       	ldd	r25, Y+2	; 0x02
    4742:	9c 83       	std	Y+4, r25	; 0x04
    4744:	8b 83       	std	Y+3, r24	; 0x03
	msgPtr[0] = this->msgType;
    4746:	8d 81       	ldd	r24, Y+5	; 0x05
    4748:	9e 81       	ldd	r25, Y+6	; 0x06
    474a:	fc 01       	movw	r30, r24
    474c:	22 81       	ldd	r18, Z+2	; 0x02
    474e:	8b 81       	ldd	r24, Y+3	; 0x03
    4750:	9c 81       	ldd	r25, Y+4	; 0x04
    4752:	fc 01       	movw	r30, r24
    4754:	20 83       	st	Z, r18
	
	return msg;
    4756:	89 81       	ldd	r24, Y+1	; 0x01
    4758:	9a 81       	ldd	r25, Y+2	; 0x02
}
    475a:	26 96       	adiw	r28, 0x06	; 6
    475c:	0f b6       	in	r0, 0x3f	; 63
    475e:	f8 94       	cli
    4760:	de bf       	out	0x3e, r29	; 62
    4762:	0f be       	out	0x3f, r0	; 63
    4764:	cd bf       	out	0x3d, r28	; 61
    4766:	df 91       	pop	r29
    4768:	cf 91       	pop	r28
    476a:	08 95       	ret

0000476c <_ZN10helicopter8messages11SyncMessage12buildMessageEPh>:

void SyncMessage::buildMessage(byte *message)
{
    476c:	cf 93       	push	r28
    476e:	df 93       	push	r29
    4770:	00 d0       	rcall	.+0      	; 0x4772 <_ZN10helicopter8messages11SyncMessage12buildMessageEPh+0x6>
    4772:	1f 92       	push	r1
    4774:	cd b7       	in	r28, 0x3d	; 61
    4776:	de b7       	in	r29, 0x3e	; 62
    4778:	9a 83       	std	Y+2, r25	; 0x02
    477a:	89 83       	std	Y+1, r24	; 0x01
    477c:	7c 83       	std	Y+4, r23	; 0x04
    477e:	6b 83       	std	Y+3, r22	; 0x03
	if (message != NULL)
    4780:	8b 81       	ldd	r24, Y+3	; 0x03
    4782:	9c 81       	ldd	r25, Y+4	; 0x04
    4784:	00 97       	sbiw	r24, 0x00	; 0
    4786:	41 f0       	breq	.+16     	; 0x4798 <_ZN10helicopter8messages11SyncMessage12buildMessageEPh+0x2c>
	{
		msgType = message[0];
    4788:	8b 81       	ldd	r24, Y+3	; 0x03
    478a:	9c 81       	ldd	r25, Y+4	; 0x04
    478c:	fc 01       	movw	r30, r24
    478e:	20 81       	ld	r18, Z
    4790:	89 81       	ldd	r24, Y+1	; 0x01
    4792:	9a 81       	ldd	r25, Y+2	; 0x02
    4794:	fc 01       	movw	r30, r24
    4796:	22 83       	std	Z+2, r18	; 0x02
	}
}
    4798:	0f 90       	pop	r0
    479a:	0f 90       	pop	r0
    479c:	0f 90       	pop	r0
    479e:	0f 90       	pop	r0
    47a0:	df 91       	pop	r29
    47a2:	cf 91       	pop	r28
    47a4:	08 95       	ret

000047a6 <_ZN10helicopter8messages7Message6encodeERPhRl>:
				
				/**
				 * Mem copies the value into the buffer pointer then increments
				 * the pointer location by the size of the value copied.
				 */
				void encode (byte *&buffPtr, long &val)
    47a6:	cf 93       	push	r28
    47a8:	df 93       	push	r29
    47aa:	00 d0       	rcall	.+0      	; 0x47ac <_ZN10helicopter8messages7Message6encodeERPhRl+0x6>
    47ac:	00 d0       	rcall	.+0      	; 0x47ae <_ZN10helicopter8messages7Message6encodeERPhRl+0x8>
    47ae:	cd b7       	in	r28, 0x3d	; 61
    47b0:	de b7       	in	r29, 0x3e	; 62
    47b2:	9a 83       	std	Y+2, r25	; 0x02
    47b4:	89 83       	std	Y+1, r24	; 0x01
    47b6:	7c 83       	std	Y+4, r23	; 0x04
    47b8:	6b 83       	std	Y+3, r22	; 0x03
    47ba:	5e 83       	std	Y+6, r21	; 0x06
    47bc:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(buffPtr, &val, sizeof(val));
    47be:	8b 81       	ldd	r24, Y+3	; 0x03
    47c0:	9c 81       	ldd	r25, Y+4	; 0x04
    47c2:	fc 01       	movw	r30, r24
    47c4:	80 81       	ld	r24, Z
    47c6:	91 81       	ldd	r25, Z+1	; 0x01
    47c8:	2d 81       	ldd	r18, Y+5	; 0x05
    47ca:	3e 81       	ldd	r19, Y+6	; 0x06
    47cc:	44 e0       	ldi	r20, 0x04	; 4
    47ce:	50 e0       	ldi	r21, 0x00	; 0
    47d0:	b9 01       	movw	r22, r18
    47d2:	0e 94 ed 48 	call	0x91da	; 0x91da <memcpy>
					buffPtr += sizeof(val);
    47d6:	8b 81       	ldd	r24, Y+3	; 0x03
    47d8:	9c 81       	ldd	r25, Y+4	; 0x04
    47da:	fc 01       	movw	r30, r24
    47dc:	80 81       	ld	r24, Z
    47de:	91 81       	ldd	r25, Z+1	; 0x01
    47e0:	9c 01       	movw	r18, r24
    47e2:	2c 5f       	subi	r18, 0xFC	; 252
    47e4:	3f 4f       	sbci	r19, 0xFF	; 255
    47e6:	8b 81       	ldd	r24, Y+3	; 0x03
    47e8:	9c 81       	ldd	r25, Y+4	; 0x04
    47ea:	fc 01       	movw	r30, r24
    47ec:	31 83       	std	Z+1, r19	; 0x01
    47ee:	20 83       	st	Z, r18
				}
    47f0:	26 96       	adiw	r28, 0x06	; 6
    47f2:	0f b6       	in	r0, 0x3f	; 63
    47f4:	f8 94       	cli
    47f6:	de bf       	out	0x3e, r29	; 62
    47f8:	0f be       	out	0x3f, r0	; 63
    47fa:	cd bf       	out	0x3d, r28	; 61
    47fc:	df 91       	pop	r29
    47fe:	cf 91       	pop	r28
    4800:	08 95       	ret

00004802 <_ZN10helicopter8messages7Message6encodeERPhRf>:
				
				void encode (byte *&buffPtr, float &val)
    4802:	cf 93       	push	r28
    4804:	df 93       	push	r29
    4806:	00 d0       	rcall	.+0      	; 0x4808 <_ZN10helicopter8messages7Message6encodeERPhRf+0x6>
    4808:	00 d0       	rcall	.+0      	; 0x480a <_ZN10helicopter8messages7Message6encodeERPhRf+0x8>
    480a:	cd b7       	in	r28, 0x3d	; 61
    480c:	de b7       	in	r29, 0x3e	; 62
    480e:	9a 83       	std	Y+2, r25	; 0x02
    4810:	89 83       	std	Y+1, r24	; 0x01
    4812:	7c 83       	std	Y+4, r23	; 0x04
    4814:	6b 83       	std	Y+3, r22	; 0x03
    4816:	5e 83       	std	Y+6, r21	; 0x06
    4818:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(buffPtr, &val, sizeof(val));
    481a:	8b 81       	ldd	r24, Y+3	; 0x03
    481c:	9c 81       	ldd	r25, Y+4	; 0x04
    481e:	fc 01       	movw	r30, r24
    4820:	80 81       	ld	r24, Z
    4822:	91 81       	ldd	r25, Z+1	; 0x01
    4824:	2d 81       	ldd	r18, Y+5	; 0x05
    4826:	3e 81       	ldd	r19, Y+6	; 0x06
    4828:	44 e0       	ldi	r20, 0x04	; 4
    482a:	50 e0       	ldi	r21, 0x00	; 0
    482c:	b9 01       	movw	r22, r18
    482e:	0e 94 ed 48 	call	0x91da	; 0x91da <memcpy>
					buffPtr += sizeof(val);
    4832:	8b 81       	ldd	r24, Y+3	; 0x03
    4834:	9c 81       	ldd	r25, Y+4	; 0x04
    4836:	fc 01       	movw	r30, r24
    4838:	80 81       	ld	r24, Z
    483a:	91 81       	ldd	r25, Z+1	; 0x01
    483c:	9c 01       	movw	r18, r24
    483e:	2c 5f       	subi	r18, 0xFC	; 252
    4840:	3f 4f       	sbci	r19, 0xFF	; 255
    4842:	8b 81       	ldd	r24, Y+3	; 0x03
    4844:	9c 81       	ldd	r25, Y+4	; 0x04
    4846:	fc 01       	movw	r30, r24
    4848:	31 83       	std	Z+1, r19	; 0x01
    484a:	20 83       	st	Z, r18
				}				
    484c:	26 96       	adiw	r28, 0x06	; 6
    484e:	0f b6       	in	r0, 0x3f	; 63
    4850:	f8 94       	cli
    4852:	de bf       	out	0x3e, r29	; 62
    4854:	0f be       	out	0x3f, r0	; 63
    4856:	cd bf       	out	0x3d, r28	; 61
    4858:	df 91       	pop	r29
    485a:	cf 91       	pop	r28
    485c:	08 95       	ret

0000485e <_ZN10helicopter8messages7Message6encodeERPhRh>:
				{
					memcpy(buffPtr, &val, sizeof(val));
					buffPtr += sizeof(val);
				}		
				
				void encode (byte *&buffPtr, byte &val)
    485e:	cf 93       	push	r28
    4860:	df 93       	push	r29
    4862:	00 d0       	rcall	.+0      	; 0x4864 <_ZN10helicopter8messages7Message6encodeERPhRh+0x6>
    4864:	00 d0       	rcall	.+0      	; 0x4866 <_ZN10helicopter8messages7Message6encodeERPhRh+0x8>
    4866:	cd b7       	in	r28, 0x3d	; 61
    4868:	de b7       	in	r29, 0x3e	; 62
    486a:	9a 83       	std	Y+2, r25	; 0x02
    486c:	89 83       	std	Y+1, r24	; 0x01
    486e:	7c 83       	std	Y+4, r23	; 0x04
    4870:	6b 83       	std	Y+3, r22	; 0x03
    4872:	5e 83       	std	Y+6, r21	; 0x06
    4874:	4d 83       	std	Y+5, r20	; 0x05
				{
					*buffPtr = val;
    4876:	8b 81       	ldd	r24, Y+3	; 0x03
    4878:	9c 81       	ldd	r25, Y+4	; 0x04
    487a:	fc 01       	movw	r30, r24
    487c:	80 81       	ld	r24, Z
    487e:	91 81       	ldd	r25, Z+1	; 0x01
    4880:	2d 81       	ldd	r18, Y+5	; 0x05
    4882:	3e 81       	ldd	r19, Y+6	; 0x06
    4884:	f9 01       	movw	r30, r18
    4886:	20 81       	ld	r18, Z
    4888:	fc 01       	movw	r30, r24
    488a:	20 83       	st	Z, r18
					buffPtr += sizeof(val);
    488c:	8b 81       	ldd	r24, Y+3	; 0x03
    488e:	9c 81       	ldd	r25, Y+4	; 0x04
    4890:	fc 01       	movw	r30, r24
    4892:	80 81       	ld	r24, Z
    4894:	91 81       	ldd	r25, Z+1	; 0x01
    4896:	9c 01       	movw	r18, r24
    4898:	2f 5f       	subi	r18, 0xFF	; 255
    489a:	3f 4f       	sbci	r19, 0xFF	; 255
    489c:	8b 81       	ldd	r24, Y+3	; 0x03
    489e:	9c 81       	ldd	r25, Y+4	; 0x04
    48a0:	fc 01       	movw	r30, r24
    48a2:	31 83       	std	Z+1, r19	; 0x01
    48a4:	20 83       	st	Z, r18
				}
    48a6:	26 96       	adiw	r28, 0x06	; 6
    48a8:	0f b6       	in	r0, 0x3f	; 63
    48aa:	f8 94       	cli
    48ac:	de bf       	out	0x3e, r29	; 62
    48ae:	0f be       	out	0x3f, r0	; 63
    48b0:	cd bf       	out	0x3d, r28	; 61
    48b2:	df 91       	pop	r29
    48b4:	cf 91       	pop	r28
    48b6:	08 95       	ret

000048b8 <_ZN10helicopter8messages7Message6decodeERPhRh>:
				
				/**
				 * Copies the the value at the buff pointer location into the given val parameter and
				 * increments the buffer by the sizeof(val)
				 */
				void decode (byte *&buffPtr, byte &val)
    48b8:	cf 93       	push	r28
    48ba:	df 93       	push	r29
    48bc:	00 d0       	rcall	.+0      	; 0x48be <_ZN10helicopter8messages7Message6decodeERPhRh+0x6>
    48be:	00 d0       	rcall	.+0      	; 0x48c0 <_ZN10helicopter8messages7Message6decodeERPhRh+0x8>
    48c0:	cd b7       	in	r28, 0x3d	; 61
    48c2:	de b7       	in	r29, 0x3e	; 62
    48c4:	9a 83       	std	Y+2, r25	; 0x02
    48c6:	89 83       	std	Y+1, r24	; 0x01
    48c8:	7c 83       	std	Y+4, r23	; 0x04
    48ca:	6b 83       	std	Y+3, r22	; 0x03
    48cc:	5e 83       	std	Y+6, r21	; 0x06
    48ce:	4d 83       	std	Y+5, r20	; 0x05
				{
					val = *buffPtr;
    48d0:	8b 81       	ldd	r24, Y+3	; 0x03
    48d2:	9c 81       	ldd	r25, Y+4	; 0x04
    48d4:	fc 01       	movw	r30, r24
    48d6:	80 81       	ld	r24, Z
    48d8:	91 81       	ldd	r25, Z+1	; 0x01
    48da:	fc 01       	movw	r30, r24
    48dc:	20 81       	ld	r18, Z
    48de:	8d 81       	ldd	r24, Y+5	; 0x05
    48e0:	9e 81       	ldd	r25, Y+6	; 0x06
    48e2:	fc 01       	movw	r30, r24
    48e4:	20 83       	st	Z, r18
					buffPtr += sizeof(val);
    48e6:	8b 81       	ldd	r24, Y+3	; 0x03
    48e8:	9c 81       	ldd	r25, Y+4	; 0x04
    48ea:	fc 01       	movw	r30, r24
    48ec:	80 81       	ld	r24, Z
    48ee:	91 81       	ldd	r25, Z+1	; 0x01
    48f0:	9c 01       	movw	r18, r24
    48f2:	2f 5f       	subi	r18, 0xFF	; 255
    48f4:	3f 4f       	sbci	r19, 0xFF	; 255
    48f6:	8b 81       	ldd	r24, Y+3	; 0x03
    48f8:	9c 81       	ldd	r25, Y+4	; 0x04
    48fa:	fc 01       	movw	r30, r24
    48fc:	31 83       	std	Z+1, r19	; 0x01
    48fe:	20 83       	st	Z, r18
				}
    4900:	26 96       	adiw	r28, 0x06	; 6
    4902:	0f b6       	in	r0, 0x3f	; 63
    4904:	f8 94       	cli
    4906:	de bf       	out	0x3e, r29	; 62
    4908:	0f be       	out	0x3f, r0	; 63
    490a:	cd bf       	out	0x3d, r28	; 61
    490c:	df 91       	pop	r29
    490e:	cf 91       	pop	r28
    4910:	08 95       	ret

00004912 <_ZN10helicopter8messages7Message6decodeERPhRl>:
				
				void decode (byte *&buffPtr, long &val)
    4912:	cf 93       	push	r28
    4914:	df 93       	push	r29
    4916:	00 d0       	rcall	.+0      	; 0x4918 <_ZN10helicopter8messages7Message6decodeERPhRl+0x6>
    4918:	00 d0       	rcall	.+0      	; 0x491a <_ZN10helicopter8messages7Message6decodeERPhRl+0x8>
    491a:	cd b7       	in	r28, 0x3d	; 61
    491c:	de b7       	in	r29, 0x3e	; 62
    491e:	9a 83       	std	Y+2, r25	; 0x02
    4920:	89 83       	std	Y+1, r24	; 0x01
    4922:	7c 83       	std	Y+4, r23	; 0x04
    4924:	6b 83       	std	Y+3, r22	; 0x03
    4926:	5e 83       	std	Y+6, r21	; 0x06
    4928:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(&val, buffPtr, sizeof(val));
    492a:	8b 81       	ldd	r24, Y+3	; 0x03
    492c:	9c 81       	ldd	r25, Y+4	; 0x04
    492e:	fc 01       	movw	r30, r24
    4930:	20 81       	ld	r18, Z
    4932:	31 81       	ldd	r19, Z+1	; 0x01
    4934:	8d 81       	ldd	r24, Y+5	; 0x05
    4936:	9e 81       	ldd	r25, Y+6	; 0x06
    4938:	44 e0       	ldi	r20, 0x04	; 4
    493a:	50 e0       	ldi	r21, 0x00	; 0
    493c:	b9 01       	movw	r22, r18
    493e:	0e 94 ed 48 	call	0x91da	; 0x91da <memcpy>
					buffPtr += sizeof(val);
    4942:	8b 81       	ldd	r24, Y+3	; 0x03
    4944:	9c 81       	ldd	r25, Y+4	; 0x04
    4946:	fc 01       	movw	r30, r24
    4948:	80 81       	ld	r24, Z
    494a:	91 81       	ldd	r25, Z+1	; 0x01
    494c:	9c 01       	movw	r18, r24
    494e:	2c 5f       	subi	r18, 0xFC	; 252
    4950:	3f 4f       	sbci	r19, 0xFF	; 255
    4952:	8b 81       	ldd	r24, Y+3	; 0x03
    4954:	9c 81       	ldd	r25, Y+4	; 0x04
    4956:	fc 01       	movw	r30, r24
    4958:	31 83       	std	Z+1, r19	; 0x01
    495a:	20 83       	st	Z, r18
				}
    495c:	26 96       	adiw	r28, 0x06	; 6
    495e:	0f b6       	in	r0, 0x3f	; 63
    4960:	f8 94       	cli
    4962:	de bf       	out	0x3e, r29	; 62
    4964:	0f be       	out	0x3f, r0	; 63
    4966:	cd bf       	out	0x3d, r28	; 61
    4968:	df 91       	pop	r29
    496a:	cf 91       	pop	r28
    496c:	08 95       	ret

0000496e <_ZN10helicopter8messages7Message6decodeERPhRf>:
				
				void decode (byte *&buffPtr, float &val)
    496e:	cf 93       	push	r28
    4970:	df 93       	push	r29
    4972:	00 d0       	rcall	.+0      	; 0x4974 <_ZN10helicopter8messages7Message6decodeERPhRf+0x6>
    4974:	00 d0       	rcall	.+0      	; 0x4976 <_ZN10helicopter8messages7Message6decodeERPhRf+0x8>
    4976:	cd b7       	in	r28, 0x3d	; 61
    4978:	de b7       	in	r29, 0x3e	; 62
    497a:	9a 83       	std	Y+2, r25	; 0x02
    497c:	89 83       	std	Y+1, r24	; 0x01
    497e:	7c 83       	std	Y+4, r23	; 0x04
    4980:	6b 83       	std	Y+3, r22	; 0x03
    4982:	5e 83       	std	Y+6, r21	; 0x06
    4984:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(&val, buffPtr, sizeof(val));
    4986:	8b 81       	ldd	r24, Y+3	; 0x03
    4988:	9c 81       	ldd	r25, Y+4	; 0x04
    498a:	fc 01       	movw	r30, r24
    498c:	20 81       	ld	r18, Z
    498e:	31 81       	ldd	r19, Z+1	; 0x01
    4990:	8d 81       	ldd	r24, Y+5	; 0x05
    4992:	9e 81       	ldd	r25, Y+6	; 0x06
    4994:	44 e0       	ldi	r20, 0x04	; 4
    4996:	50 e0       	ldi	r21, 0x00	; 0
    4998:	b9 01       	movw	r22, r18
    499a:	0e 94 ed 48 	call	0x91da	; 0x91da <memcpy>
					buffPtr += sizeof(val);
    499e:	8b 81       	ldd	r24, Y+3	; 0x03
    49a0:	9c 81       	ldd	r25, Y+4	; 0x04
    49a2:	fc 01       	movw	r30, r24
    49a4:	80 81       	ld	r24, Z
    49a6:	91 81       	ldd	r25, Z+1	; 0x01
    49a8:	9c 01       	movw	r18, r24
    49aa:	2c 5f       	subi	r18, 0xFC	; 252
    49ac:	3f 4f       	sbci	r19, 0xFF	; 255
    49ae:	8b 81       	ldd	r24, Y+3	; 0x03
    49b0:	9c 81       	ldd	r25, Y+4	; 0x04
    49b2:	fc 01       	movw	r30, r24
    49b4:	31 83       	std	Z+1, r19	; 0x01
    49b6:	20 83       	st	Z, r18
				}
    49b8:	26 96       	adiw	r28, 0x06	; 6
    49ba:	0f b6       	in	r0, 0x3f	; 63
    49bc:	f8 94       	cli
    49be:	de bf       	out	0x3e, r29	; 62
    49c0:	0f be       	out	0x3f, r0	; 63
    49c2:	cd bf       	out	0x3d, r28	; 61
    49c4:	df 91       	pop	r29
    49c6:	cf 91       	pop	r28
    49c8:	08 95       	ret

000049ca <_ZN10helicopter5model11SystemModel13MagYawDegreesEf>:
			 * Z axis is pointing up out of the FC
			 */
			

			float MagYawDegrees() const { return magYawDegrees; }
			void MagYawDegrees(float val) { magYawDegrees = val; }	
    49ca:	cf 93       	push	r28
    49cc:	df 93       	push	r29
    49ce:	00 d0       	rcall	.+0      	; 0x49d0 <_ZN10helicopter5model11SystemModel13MagYawDegreesEf+0x6>
    49d0:	00 d0       	rcall	.+0      	; 0x49d2 <_ZN10helicopter5model11SystemModel13MagYawDegreesEf+0x8>
    49d2:	cd b7       	in	r28, 0x3d	; 61
    49d4:	de b7       	in	r29, 0x3e	; 62
    49d6:	9a 83       	std	Y+2, r25	; 0x02
    49d8:	89 83       	std	Y+1, r24	; 0x01
    49da:	4b 83       	std	Y+3, r20	; 0x03
    49dc:	5c 83       	std	Y+4, r21	; 0x04
    49de:	6d 83       	std	Y+5, r22	; 0x05
    49e0:	7e 83       	std	Y+6, r23	; 0x06
    49e2:	29 81       	ldd	r18, Y+1	; 0x01
    49e4:	3a 81       	ldd	r19, Y+2	; 0x02
    49e6:	8b 81       	ldd	r24, Y+3	; 0x03
    49e8:	9c 81       	ldd	r25, Y+4	; 0x04
    49ea:	ad 81       	ldd	r26, Y+5	; 0x05
    49ec:	be 81       	ldd	r27, Y+6	; 0x06
    49ee:	f9 01       	movw	r30, r18
    49f0:	80 83       	st	Z, r24
    49f2:	91 83       	std	Z+1, r25	; 0x01
    49f4:	a2 83       	std	Z+2, r26	; 0x02
    49f6:	b3 83       	std	Z+3, r27	; 0x03
    49f8:	26 96       	adiw	r28, 0x06	; 6
    49fa:	0f b6       	in	r0, 0x3f	; 63
    49fc:	f8 94       	cli
    49fe:	de bf       	out	0x3e, r29	; 62
    4a00:	0f be       	out	0x3f, r0	; 63
    4a02:	cd bf       	out	0x3d, r28	; 61
    4a04:	df 91       	pop	r29
    4a06:	cf 91       	pop	r28
    4a08:	08 95       	ret

00004a0a <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf>:
				
			float YawControlBeforeServoLimitsAdjustment() const {return yawControlBeforeServoLimitsAdjustment;}
			void YawControlBeforeServoLimitsAdjustment(float val) { yawControlBeforeServoLimitsAdjustment = val;}
				
			float YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
			void YawVelocityDegreesPerSecond(float val) { yawVelocityDegreesPerSecond = val;}
    4a0a:	cf 93       	push	r28
    4a0c:	df 93       	push	r29
    4a0e:	00 d0       	rcall	.+0      	; 0x4a10 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf+0x6>
    4a10:	00 d0       	rcall	.+0      	; 0x4a12 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf+0x8>
    4a12:	cd b7       	in	r28, 0x3d	; 61
    4a14:	de b7       	in	r29, 0x3e	; 62
    4a16:	9a 83       	std	Y+2, r25	; 0x02
    4a18:	89 83       	std	Y+1, r24	; 0x01
    4a1a:	4b 83       	std	Y+3, r20	; 0x03
    4a1c:	5c 83       	std	Y+4, r21	; 0x04
    4a1e:	6d 83       	std	Y+5, r22	; 0x05
    4a20:	7e 83       	std	Y+6, r23	; 0x06
    4a22:	29 81       	ldd	r18, Y+1	; 0x01
    4a24:	3a 81       	ldd	r19, Y+2	; 0x02
    4a26:	8b 81       	ldd	r24, Y+3	; 0x03
    4a28:	9c 81       	ldd	r25, Y+4	; 0x04
    4a2a:	ad 81       	ldd	r26, Y+5	; 0x05
    4a2c:	be 81       	ldd	r27, Y+6	; 0x06
    4a2e:	f9 01       	movw	r30, r18
    4a30:	80 8b       	std	Z+16, r24	; 0x10
    4a32:	91 8b       	std	Z+17, r25	; 0x11
    4a34:	a2 8b       	std	Z+18, r26	; 0x12
    4a36:	b3 8b       	std	Z+19, r27	; 0x13
    4a38:	26 96       	adiw	r28, 0x06	; 6
    4a3a:	0f b6       	in	r0, 0x3f	; 63
    4a3c:	f8 94       	cli
    4a3e:	de bf       	out	0x3e, r29	; 62
    4a40:	0f be       	out	0x3f, r0	; 63
    4a42:	cd bf       	out	0x3d, r28	; 61
    4a44:	df 91       	pop	r29
    4a46:	cf 91       	pop	r28
    4a48:	08 95       	ret

00004a4a <_ZNK10helicopter5model11SystemModel15YawProportionalEv>:
			void ReferenceYawVelocityDegreesPerSecond(float val) { referenceYawVelocityDegreesPerSecond = val;}
				
			float YawIntegral() const {return yawIntegral;}
			void YawIntegral(float val) { yawIntegral = val;}

			float YawProportional() const {return yawProportional;}
    4a4a:	cf 93       	push	r28
    4a4c:	df 93       	push	r29
    4a4e:	1f 92       	push	r1
    4a50:	1f 92       	push	r1
    4a52:	cd b7       	in	r28, 0x3d	; 61
    4a54:	de b7       	in	r29, 0x3e	; 62
    4a56:	9a 83       	std	Y+2, r25	; 0x02
    4a58:	89 83       	std	Y+1, r24	; 0x01
    4a5a:	89 81       	ldd	r24, Y+1	; 0x01
    4a5c:	9a 81       	ldd	r25, Y+2	; 0x02
    4a5e:	fc 01       	movw	r30, r24
    4a60:	84 8d       	ldd	r24, Z+28	; 0x1c
    4a62:	95 8d       	ldd	r25, Z+29	; 0x1d
    4a64:	a6 8d       	ldd	r26, Z+30	; 0x1e
    4a66:	b7 8d       	ldd	r27, Z+31	; 0x1f
    4a68:	bc 01       	movw	r22, r24
    4a6a:	cd 01       	movw	r24, r26
    4a6c:	0f 90       	pop	r0
    4a6e:	0f 90       	pop	r0
    4a70:	df 91       	pop	r29
    4a72:	cf 91       	pop	r28
    4a74:	08 95       	ret

00004a76 <_ZNK10helicopter5model11SystemModel18YawDerivativeErrorEv>:
			void YawProportional(float val) { yawProportional = val;}

			float YawDerivativeError() const {return yawDerivativeError;}
    4a76:	cf 93       	push	r28
    4a78:	df 93       	push	r29
    4a7a:	1f 92       	push	r1
    4a7c:	1f 92       	push	r1
    4a7e:	cd b7       	in	r28, 0x3d	; 61
    4a80:	de b7       	in	r29, 0x3e	; 62
    4a82:	9a 83       	std	Y+2, r25	; 0x02
    4a84:	89 83       	std	Y+1, r24	; 0x01
    4a86:	89 81       	ldd	r24, Y+1	; 0x01
    4a88:	9a 81       	ldd	r25, Y+2	; 0x02
    4a8a:	fc 01       	movw	r30, r24
    4a8c:	80 a1       	ldd	r24, Z+32	; 0x20
    4a8e:	91 a1       	ldd	r25, Z+33	; 0x21
    4a90:	a2 a1       	ldd	r26, Z+34	; 0x22
    4a92:	b3 a1       	ldd	r27, Z+35	; 0x23
    4a94:	bc 01       	movw	r22, r24
    4a96:	cd 01       	movw	r24, r26
    4a98:	0f 90       	pop	r0
    4a9a:	0f 90       	pop	r0
    4a9c:	df 91       	pop	r29
    4a9e:	cf 91       	pop	r28
    4aa0:	08 95       	ret

00004aa2 <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf>:

			float LongitudeControl() const {return longitudeControl;}
			void LongitudeControl(float val) { longitudeControl = val;}
				
			float XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
			void XVelocityMetersPerSecond(float val) { xVelocityMetersPerSecond = val;}
    4aa2:	cf 93       	push	r28
    4aa4:	df 93       	push	r29
    4aa6:	00 d0       	rcall	.+0      	; 0x4aa8 <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf+0x6>
    4aa8:	00 d0       	rcall	.+0      	; 0x4aaa <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf+0x8>
    4aaa:	cd b7       	in	r28, 0x3d	; 61
    4aac:	de b7       	in	r29, 0x3e	; 62
    4aae:	9a 83       	std	Y+2, r25	; 0x02
    4ab0:	89 83       	std	Y+1, r24	; 0x01
    4ab2:	4b 83       	std	Y+3, r20	; 0x03
    4ab4:	5c 83       	std	Y+4, r21	; 0x04
    4ab6:	6d 83       	std	Y+5, r22	; 0x05
    4ab8:	7e 83       	std	Y+6, r23	; 0x06
    4aba:	29 81       	ldd	r18, Y+1	; 0x01
    4abc:	3a 81       	ldd	r19, Y+2	; 0x02
    4abe:	8b 81       	ldd	r24, Y+3	; 0x03
    4ac0:	9c 81       	ldd	r25, Y+4	; 0x04
    4ac2:	ad 81       	ldd	r26, Y+5	; 0x05
    4ac4:	be 81       	ldd	r27, Y+6	; 0x06
    4ac6:	f9 01       	movw	r30, r18
    4ac8:	84 ab       	std	Z+52, r24	; 0x34
    4aca:	95 ab       	std	Z+53, r25	; 0x35
    4acc:	a6 ab       	std	Z+54, r26	; 0x36
    4ace:	b7 ab       	std	Z+55, r27	; 0x37
    4ad0:	26 96       	adiw	r28, 0x06	; 6
    4ad2:	0f b6       	in	r0, 0x3f	; 63
    4ad4:	f8 94       	cli
    4ad6:	de bf       	out	0x3e, r29	; 62
    4ad8:	0f be       	out	0x3f, r0	; 63
    4ada:	cd bf       	out	0x3d, r28	; 61
    4adc:	df 91       	pop	r29
    4ade:	cf 91       	pop	r28
    4ae0:	08 95       	ret

00004ae2 <_ZNK10helicopter5model11SystemModel13XProportionalEv>:
			void ReferenceXVelocityMetersPerSecond(float val) { referenceXVelocityMetersPerSecond = val;}
				
			float XLongitudeOuterLoopSetpoint() const {return xLongitudeOuterLoopSetpoint;}
			void XLongitudeOuterLoopSetpoint(float val) { xLongitudeOuterLoopSetpoint = val;}
				
			float XProportional() const {return xProportional;}
    4ae2:	cf 93       	push	r28
    4ae4:	df 93       	push	r29
    4ae6:	1f 92       	push	r1
    4ae8:	1f 92       	push	r1
    4aea:	cd b7       	in	r28, 0x3d	; 61
    4aec:	de b7       	in	r29, 0x3e	; 62
    4aee:	9a 83       	std	Y+2, r25	; 0x02
    4af0:	89 83       	std	Y+1, r24	; 0x01
    4af2:	89 81       	ldd	r24, Y+1	; 0x01
    4af4:	9a 81       	ldd	r25, Y+2	; 0x02
    4af6:	80 5c       	subi	r24, 0xC0	; 192
    4af8:	9f 4f       	sbci	r25, 0xFF	; 255
    4afa:	fc 01       	movw	r30, r24
    4afc:	80 81       	ld	r24, Z
    4afe:	91 81       	ldd	r25, Z+1	; 0x01
    4b00:	a2 81       	ldd	r26, Z+2	; 0x02
    4b02:	b3 81       	ldd	r27, Z+3	; 0x03
    4b04:	bc 01       	movw	r22, r24
    4b06:	cd 01       	movw	r24, r26
    4b08:	0f 90       	pop	r0
    4b0a:	0f 90       	pop	r0
    4b0c:	df 91       	pop	r29
    4b0e:	cf 91       	pop	r28
    4b10:	08 95       	ret

00004b12 <_ZNK10helicopter5model11SystemModel16XDerivativeErrorEv>:
			void XProportional(float val) { xProportional = val;}
				
			float XIntegral() const {return xIntegral;}
			void XIntegral(float val) { xIntegral = val;}
				
			float XDerivativeError() const {return xDerivativeError;}
    4b12:	cf 93       	push	r28
    4b14:	df 93       	push	r29
    4b16:	1f 92       	push	r1
    4b18:	1f 92       	push	r1
    4b1a:	cd b7       	in	r28, 0x3d	; 61
    4b1c:	de b7       	in	r29, 0x3e	; 62
    4b1e:	9a 83       	std	Y+2, r25	; 0x02
    4b20:	89 83       	std	Y+1, r24	; 0x01
    4b22:	89 81       	ldd	r24, Y+1	; 0x01
    4b24:	9a 81       	ldd	r25, Y+2	; 0x02
    4b26:	88 5b       	subi	r24, 0xB8	; 184
    4b28:	9f 4f       	sbci	r25, 0xFF	; 255
    4b2a:	fc 01       	movw	r30, r24
    4b2c:	80 81       	ld	r24, Z
    4b2e:	91 81       	ldd	r25, Z+1	; 0x01
    4b30:	a2 81       	ldd	r26, Z+2	; 0x02
    4b32:	b3 81       	ldd	r27, Z+3	; 0x03
    4b34:	bc 01       	movw	r22, r24
    4b36:	cd 01       	movw	r24, r26
    4b38:	0f 90       	pop	r0
    4b3a:	0f 90       	pop	r0
    4b3c:	df 91       	pop	r29
    4b3e:	cf 91       	pop	r28
    4b40:	08 95       	ret

00004b42 <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf>:
			void XDerivativeError(float val) { xDerivativeError = val;}
				
		
			float ThetaPitchDegrees() const {return thetaPitchDegrees;}
			void ThetaPitchDegrees(float val) {thetaPitchDegrees = val;}
    4b42:	cf 93       	push	r28
    4b44:	df 93       	push	r29
    4b46:	00 d0       	rcall	.+0      	; 0x4b48 <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf+0x6>
    4b48:	00 d0       	rcall	.+0      	; 0x4b4a <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf+0x8>
    4b4a:	cd b7       	in	r28, 0x3d	; 61
    4b4c:	de b7       	in	r29, 0x3e	; 62
    4b4e:	9a 83       	std	Y+2, r25	; 0x02
    4b50:	89 83       	std	Y+1, r24	; 0x01
    4b52:	4b 83       	std	Y+3, r20	; 0x03
    4b54:	5c 83       	std	Y+4, r21	; 0x04
    4b56:	6d 83       	std	Y+5, r22	; 0x05
    4b58:	7e 83       	std	Y+6, r23	; 0x06
    4b5a:	89 81       	ldd	r24, Y+1	; 0x01
    4b5c:	9a 81       	ldd	r25, Y+2	; 0x02
    4b5e:	9c 01       	movw	r18, r24
    4b60:	24 5b       	subi	r18, 0xB4	; 180
    4b62:	3f 4f       	sbci	r19, 0xFF	; 255
    4b64:	8b 81       	ldd	r24, Y+3	; 0x03
    4b66:	9c 81       	ldd	r25, Y+4	; 0x04
    4b68:	ad 81       	ldd	r26, Y+5	; 0x05
    4b6a:	be 81       	ldd	r27, Y+6	; 0x06
    4b6c:	f9 01       	movw	r30, r18
    4b6e:	80 83       	st	Z, r24
    4b70:	91 83       	std	Z+1, r25	; 0x01
    4b72:	a2 83       	std	Z+2, r26	; 0x02
    4b74:	b3 83       	std	Z+3, r27	; 0x03
    4b76:	26 96       	adiw	r28, 0x06	; 6
    4b78:	0f b6       	in	r0, 0x3f	; 63
    4b7a:	f8 94       	cli
    4b7c:	de bf       	out	0x3e, r29	; 62
    4b7e:	0f be       	out	0x3f, r0	; 63
    4b80:	cd bf       	out	0x3d, r28	; 61
    4b82:	df 91       	pop	r29
    4b84:	cf 91       	pop	r28
    4b86:	08 95       	ret

00004b88 <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf>:

			float LateralControl() const {return lateralControl;}
			void LateralControl(float val) { lateralControl = val;}

			float YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
			void YVelocityMetersPerSecond(float val) { yVelocityMetersPerSecond = val;}
    4b88:	cf 93       	push	r28
    4b8a:	df 93       	push	r29
    4b8c:	00 d0       	rcall	.+0      	; 0x4b8e <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf+0x6>
    4b8e:	00 d0       	rcall	.+0      	; 0x4b90 <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf+0x8>
    4b90:	cd b7       	in	r28, 0x3d	; 61
    4b92:	de b7       	in	r29, 0x3e	; 62
    4b94:	9a 83       	std	Y+2, r25	; 0x02
    4b96:	89 83       	std	Y+1, r24	; 0x01
    4b98:	4b 83       	std	Y+3, r20	; 0x03
    4b9a:	5c 83       	std	Y+4, r21	; 0x04
    4b9c:	6d 83       	std	Y+5, r22	; 0x05
    4b9e:	7e 83       	std	Y+6, r23	; 0x06
    4ba0:	89 81       	ldd	r24, Y+1	; 0x01
    4ba2:	9a 81       	ldd	r25, Y+2	; 0x02
    4ba4:	9c 01       	movw	r18, r24
    4ba6:	20 5a       	subi	r18, 0xA0	; 160
    4ba8:	3f 4f       	sbci	r19, 0xFF	; 255
    4baa:	8b 81       	ldd	r24, Y+3	; 0x03
    4bac:	9c 81       	ldd	r25, Y+4	; 0x04
    4bae:	ad 81       	ldd	r26, Y+5	; 0x05
    4bb0:	be 81       	ldd	r27, Y+6	; 0x06
    4bb2:	f9 01       	movw	r30, r18
    4bb4:	80 83       	st	Z, r24
    4bb6:	91 83       	std	Z+1, r25	; 0x01
    4bb8:	a2 83       	std	Z+2, r26	; 0x02
    4bba:	b3 83       	std	Z+3, r27	; 0x03
    4bbc:	26 96       	adiw	r28, 0x06	; 6
    4bbe:	0f b6       	in	r0, 0x3f	; 63
    4bc0:	f8 94       	cli
    4bc2:	de bf       	out	0x3e, r29	; 62
    4bc4:	0f be       	out	0x3f, r0	; 63
    4bc6:	cd bf       	out	0x3d, r28	; 61
    4bc8:	df 91       	pop	r29
    4bca:	cf 91       	pop	r28
    4bcc:	08 95       	ret

00004bce <_ZNK10helicopter5model11SystemModel13YProportionalEv>:
			void ReferenceYVelocityMetersPerSecond(float val) { referenceYVelocityMetersPerSecond = val;}

			float YLateralOuterLoopSetpoint() const {return yLateralOuterLoopSetpoint;}
			void YLateralOuterLoopSetpoint(float val) { yLateralOuterLoopSetpoint = val;}

			float YProportional() const {return yProportional;}
    4bce:	cf 93       	push	r28
    4bd0:	df 93       	push	r29
    4bd2:	1f 92       	push	r1
    4bd4:	1f 92       	push	r1
    4bd6:	cd b7       	in	r28, 0x3d	; 61
    4bd8:	de b7       	in	r29, 0x3e	; 62
    4bda:	9a 83       	std	Y+2, r25	; 0x02
    4bdc:	89 83       	std	Y+1, r24	; 0x01
    4bde:	89 81       	ldd	r24, Y+1	; 0x01
    4be0:	9a 81       	ldd	r25, Y+2	; 0x02
    4be2:	84 59       	subi	r24, 0x94	; 148
    4be4:	9f 4f       	sbci	r25, 0xFF	; 255
    4be6:	fc 01       	movw	r30, r24
    4be8:	80 81       	ld	r24, Z
    4bea:	91 81       	ldd	r25, Z+1	; 0x01
    4bec:	a2 81       	ldd	r26, Z+2	; 0x02
    4bee:	b3 81       	ldd	r27, Z+3	; 0x03
    4bf0:	bc 01       	movw	r22, r24
    4bf2:	cd 01       	movw	r24, r26
    4bf4:	0f 90       	pop	r0
    4bf6:	0f 90       	pop	r0
    4bf8:	df 91       	pop	r29
    4bfa:	cf 91       	pop	r28
    4bfc:	08 95       	ret

00004bfe <_ZNK10helicopter5model11SystemModel16YDerivativeErrorEv>:
			void YProportional(float val) { yProportional = val;}

			float YIntegral() const {return yIntegral;}
			void YIntegral(float val) { yIntegral = val;}

			float YDerivativeError() const {return yDerivativeError;}
    4bfe:	cf 93       	push	r28
    4c00:	df 93       	push	r29
    4c02:	1f 92       	push	r1
    4c04:	1f 92       	push	r1
    4c06:	cd b7       	in	r28, 0x3d	; 61
    4c08:	de b7       	in	r29, 0x3e	; 62
    4c0a:	9a 83       	std	Y+2, r25	; 0x02
    4c0c:	89 83       	std	Y+1, r24	; 0x01
    4c0e:	89 81       	ldd	r24, Y+1	; 0x01
    4c10:	9a 81       	ldd	r25, Y+2	; 0x02
    4c12:	8c 58       	subi	r24, 0x8C	; 140
    4c14:	9f 4f       	sbci	r25, 0xFF	; 255
    4c16:	fc 01       	movw	r30, r24
    4c18:	80 81       	ld	r24, Z
    4c1a:	91 81       	ldd	r25, Z+1	; 0x01
    4c1c:	a2 81       	ldd	r26, Z+2	; 0x02
    4c1e:	b3 81       	ldd	r27, Z+3	; 0x03
    4c20:	bc 01       	movw	r22, r24
    4c22:	cd 01       	movw	r24, r26
    4c24:	0f 90       	pop	r0
    4c26:	0f 90       	pop	r0
    4c28:	df 91       	pop	r29
    4c2a:	cf 91       	pop	r28
    4c2c:	08 95       	ret

00004c2e <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf>:
			void YDerivativeError(float val) { yDerivativeError = val;}


			float PhiRollDegrees() const {return phiRollDegrees;}
			void PhiRollDegrees(float val) {phiRollDegrees = val;}
    4c2e:	cf 93       	push	r28
    4c30:	df 93       	push	r29
    4c32:	00 d0       	rcall	.+0      	; 0x4c34 <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf+0x6>
    4c34:	00 d0       	rcall	.+0      	; 0x4c36 <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf+0x8>
    4c36:	cd b7       	in	r28, 0x3d	; 61
    4c38:	de b7       	in	r29, 0x3e	; 62
    4c3a:	9a 83       	std	Y+2, r25	; 0x02
    4c3c:	89 83       	std	Y+1, r24	; 0x01
    4c3e:	4b 83       	std	Y+3, r20	; 0x03
    4c40:	5c 83       	std	Y+4, r21	; 0x04
    4c42:	6d 83       	std	Y+5, r22	; 0x05
    4c44:	7e 83       	std	Y+6, r23	; 0x06
    4c46:	89 81       	ldd	r24, Y+1	; 0x01
    4c48:	9a 81       	ldd	r25, Y+2	; 0x02
    4c4a:	9c 01       	movw	r18, r24
    4c4c:	28 58       	subi	r18, 0x88	; 136
    4c4e:	3f 4f       	sbci	r19, 0xFF	; 255
    4c50:	8b 81       	ldd	r24, Y+3	; 0x03
    4c52:	9c 81       	ldd	r25, Y+4	; 0x04
    4c54:	ad 81       	ldd	r26, Y+5	; 0x05
    4c56:	be 81       	ldd	r27, Y+6	; 0x06
    4c58:	f9 01       	movw	r30, r18
    4c5a:	80 83       	st	Z, r24
    4c5c:	91 83       	std	Z+1, r25	; 0x01
    4c5e:	a2 83       	std	Z+2, r26	; 0x02
    4c60:	b3 83       	std	Z+3, r27	; 0x03
    4c62:	26 96       	adiw	r28, 0x06	; 6
    4c64:	0f b6       	in	r0, 0x3f	; 63
    4c66:	f8 94       	cli
    4c68:	de bf       	out	0x3e, r29	; 62
    4c6a:	0f be       	out	0x3f, r0	; 63
    4c6c:	cd bf       	out	0x3d, r28	; 61
    4c6e:	df 91       	pop	r29
    4c70:	cf 91       	pop	r28
    4c72:	08 95       	ret

00004c74 <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf>:
						
						
						

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
			void AltitudeFeetAgl(float val) { altitudeFeetAgl = val; }
    4c74:	cf 93       	push	r28
    4c76:	df 93       	push	r29
    4c78:	00 d0       	rcall	.+0      	; 0x4c7a <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf+0x6>
    4c7a:	00 d0       	rcall	.+0      	; 0x4c7c <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf+0x8>
    4c7c:	cd b7       	in	r28, 0x3d	; 61
    4c7e:	de b7       	in	r29, 0x3e	; 62
    4c80:	9a 83       	std	Y+2, r25	; 0x02
    4c82:	89 83       	std	Y+1, r24	; 0x01
    4c84:	4b 83       	std	Y+3, r20	; 0x03
    4c86:	5c 83       	std	Y+4, r21	; 0x04
    4c88:	6d 83       	std	Y+5, r22	; 0x05
    4c8a:	7e 83       	std	Y+6, r23	; 0x06
    4c8c:	89 81       	ldd	r24, Y+1	; 0x01
    4c8e:	9a 81       	ldd	r25, Y+2	; 0x02
    4c90:	9c 01       	movw	r18, r24
    4c92:	24 58       	subi	r18, 0x84	; 132
    4c94:	3f 4f       	sbci	r19, 0xFF	; 255
    4c96:	8b 81       	ldd	r24, Y+3	; 0x03
    4c98:	9c 81       	ldd	r25, Y+4	; 0x04
    4c9a:	ad 81       	ldd	r26, Y+5	; 0x05
    4c9c:	be 81       	ldd	r27, Y+6	; 0x06
    4c9e:	f9 01       	movw	r30, r18
    4ca0:	80 83       	st	Z, r24
    4ca2:	91 83       	std	Z+1, r25	; 0x01
    4ca4:	a2 83       	std	Z+2, r26	; 0x02
    4ca6:	b3 83       	std	Z+3, r27	; 0x03
    4ca8:	26 96       	adiw	r28, 0x06	; 6
    4caa:	0f b6       	in	r0, 0x3f	; 63
    4cac:	f8 94       	cli
    4cae:	de bf       	out	0x3e, r29	; 62
    4cb0:	0f be       	out	0x3f, r0	; 63
    4cb2:	cd bf       	out	0x3d, r28	; 61
    4cb4:	df 91       	pop	r29
    4cb6:	cf 91       	pop	r28
    4cb8:	08 95       	ret

00004cba <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf>:

			float MainRotorControlBeforeServoLimitsAdjustment() const {return mainRotorControlBeforeServoLimitsAdjustment;}
			void MainRotorControlBeforeServoLimitsAdjustment(float val) { mainRotorControlBeforeServoLimitsAdjustment = val;}

			float ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
			void ZVelocityFeetPerSecond(float val) { zVelocityFeetPerSecond = val;}
    4cba:	cf 93       	push	r28
    4cbc:	df 93       	push	r29
    4cbe:	00 d0       	rcall	.+0      	; 0x4cc0 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf+0x6>
    4cc0:	00 d0       	rcall	.+0      	; 0x4cc2 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf+0x8>
    4cc2:	cd b7       	in	r28, 0x3d	; 61
    4cc4:	de b7       	in	r29, 0x3e	; 62
    4cc6:	9a 83       	std	Y+2, r25	; 0x02
    4cc8:	89 83       	std	Y+1, r24	; 0x01
    4cca:	4b 83       	std	Y+3, r20	; 0x03
    4ccc:	5c 83       	std	Y+4, r21	; 0x04
    4cce:	6d 83       	std	Y+5, r22	; 0x05
    4cd0:	7e 83       	std	Y+6, r23	; 0x06
    4cd2:	89 81       	ldd	r24, Y+1	; 0x01
    4cd4:	9a 81       	ldd	r25, Y+2	; 0x02
    4cd6:	9c 01       	movw	r18, r24
    4cd8:	20 57       	subi	r18, 0x70	; 112
    4cda:	3f 4f       	sbci	r19, 0xFF	; 255
    4cdc:	8b 81       	ldd	r24, Y+3	; 0x03
    4cde:	9c 81       	ldd	r25, Y+4	; 0x04
    4ce0:	ad 81       	ldd	r26, Y+5	; 0x05
    4ce2:	be 81       	ldd	r27, Y+6	; 0x06
    4ce4:	f9 01       	movw	r30, r18
    4ce6:	80 83       	st	Z, r24
    4ce8:	91 83       	std	Z+1, r25	; 0x01
    4cea:	a2 83       	std	Z+2, r26	; 0x02
    4cec:	b3 83       	std	Z+3, r27	; 0x03
    4cee:	26 96       	adiw	r28, 0x06	; 6
    4cf0:	0f b6       	in	r0, 0x3f	; 63
    4cf2:	f8 94       	cli
    4cf4:	de bf       	out	0x3e, r29	; 62
    4cf6:	0f be       	out	0x3f, r0	; 63
    4cf8:	cd bf       	out	0x3d, r28	; 61
    4cfa:	df 91       	pop	r29
    4cfc:	cf 91       	pop	r28
    4cfe:	08 95       	ret

00004d00 <_ZNK10helicopter5model11SystemModel13ZProportionalEv>:
			void ReferenceZVelocityFeetPerSecond(float val) { referenceZVelocityFeetPerSecond = val;}

			float ZIntegral() const {return zIntegral;}
			void ZIntegral(float val) { zIntegral = val;}

			float ZProportional() const {return zProportional;}
    4d00:	cf 93       	push	r28
    4d02:	df 93       	push	r29
    4d04:	1f 92       	push	r1
    4d06:	1f 92       	push	r1
    4d08:	cd b7       	in	r28, 0x3d	; 61
    4d0a:	de b7       	in	r29, 0x3e	; 62
    4d0c:	9a 83       	std	Y+2, r25	; 0x02
    4d0e:	89 83       	std	Y+1, r24	; 0x01
    4d10:	89 81       	ldd	r24, Y+1	; 0x01
    4d12:	9a 81       	ldd	r25, Y+2	; 0x02
    4d14:	84 56       	subi	r24, 0x64	; 100
    4d16:	9f 4f       	sbci	r25, 0xFF	; 255
    4d18:	fc 01       	movw	r30, r24
    4d1a:	80 81       	ld	r24, Z
    4d1c:	91 81       	ldd	r25, Z+1	; 0x01
    4d1e:	a2 81       	ldd	r26, Z+2	; 0x02
    4d20:	b3 81       	ldd	r27, Z+3	; 0x03
    4d22:	bc 01       	movw	r22, r24
    4d24:	cd 01       	movw	r24, r26
    4d26:	0f 90       	pop	r0
    4d28:	0f 90       	pop	r0
    4d2a:	df 91       	pop	r29
    4d2c:	cf 91       	pop	r28
    4d2e:	08 95       	ret

00004d30 <_ZNK10helicopter5model11SystemModel16ZDerivativeErrorEv>:
			void ZProportional(float val) { zProportional = val;}

			float ZDerivativeError() const {return zDerivativeError;}
    4d30:	cf 93       	push	r28
    4d32:	df 93       	push	r29
    4d34:	1f 92       	push	r1
    4d36:	1f 92       	push	r1
    4d38:	cd b7       	in	r28, 0x3d	; 61
    4d3a:	de b7       	in	r29, 0x3e	; 62
    4d3c:	9a 83       	std	Y+2, r25	; 0x02
    4d3e:	89 83       	std	Y+1, r24	; 0x01
    4d40:	89 81       	ldd	r24, Y+1	; 0x01
    4d42:	9a 81       	ldd	r25, Y+2	; 0x02
    4d44:	80 56       	subi	r24, 0x60	; 96
    4d46:	9f 4f       	sbci	r25, 0xFF	; 255
    4d48:	fc 01       	movw	r30, r24
    4d4a:	80 81       	ld	r24, Z
    4d4c:	91 81       	ldd	r25, Z+1	; 0x01
    4d4e:	a2 81       	ldd	r26, Z+2	; 0x02
    4d50:	b3 81       	ldd	r27, Z+3	; 0x03
    4d52:	bc 01       	movw	r22, r24
    4d54:	cd 01       	movw	r24, r26
    4d56:	0f 90       	pop	r0
    4d58:	0f 90       	pop	r0
    4d5a:	df 91       	pop	r29
    4d5c:	cf 91       	pop	r28
    4d5e:	08 95       	ret

00004d60 <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf>:
			void ZDerivativeError(float val) { zDerivativeError = val;}						
						
						
			float LatitudeDegrees() const {return latitudeDegrees;}
			void LatitudeDegrees(float val) { latitudeDegrees = val;}						
    4d60:	cf 93       	push	r28
    4d62:	df 93       	push	r29
    4d64:	00 d0       	rcall	.+0      	; 0x4d66 <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf+0x6>
    4d66:	00 d0       	rcall	.+0      	; 0x4d68 <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf+0x8>
    4d68:	cd b7       	in	r28, 0x3d	; 61
    4d6a:	de b7       	in	r29, 0x3e	; 62
    4d6c:	9a 83       	std	Y+2, r25	; 0x02
    4d6e:	89 83       	std	Y+1, r24	; 0x01
    4d70:	4b 83       	std	Y+3, r20	; 0x03
    4d72:	5c 83       	std	Y+4, r21	; 0x04
    4d74:	6d 83       	std	Y+5, r22	; 0x05
    4d76:	7e 83       	std	Y+6, r23	; 0x06
    4d78:	89 81       	ldd	r24, Y+1	; 0x01
    4d7a:	9a 81       	ldd	r25, Y+2	; 0x02
    4d7c:	9c 01       	movw	r18, r24
    4d7e:	2c 55       	subi	r18, 0x5C	; 92
    4d80:	3f 4f       	sbci	r19, 0xFF	; 255
    4d82:	8b 81       	ldd	r24, Y+3	; 0x03
    4d84:	9c 81       	ldd	r25, Y+4	; 0x04
    4d86:	ad 81       	ldd	r26, Y+5	; 0x05
    4d88:	be 81       	ldd	r27, Y+6	; 0x06
    4d8a:	f9 01       	movw	r30, r18
    4d8c:	80 83       	st	Z, r24
    4d8e:	91 83       	std	Z+1, r25	; 0x01
    4d90:	a2 83       	std	Z+2, r26	; 0x02
    4d92:	b3 83       	std	Z+3, r27	; 0x03
    4d94:	26 96       	adiw	r28, 0x06	; 6
    4d96:	0f b6       	in	r0, 0x3f	; 63
    4d98:	f8 94       	cli
    4d9a:	de bf       	out	0x3e, r29	; 62
    4d9c:	0f be       	out	0x3f, r0	; 63
    4d9e:	cd bf       	out	0x3d, r28	; 61
    4da0:	df 91       	pop	r29
    4da2:	cf 91       	pop	r28
    4da4:	08 95       	ret

00004da6 <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf>:

			float LongitudeDegrees() const {return longitudeDegrees;}
			void LongitudeDegrees(float val) { longitudeDegrees = val;}						
    4da6:	cf 93       	push	r28
    4da8:	df 93       	push	r29
    4daa:	00 d0       	rcall	.+0      	; 0x4dac <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf+0x6>
    4dac:	00 d0       	rcall	.+0      	; 0x4dae <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf+0x8>
    4dae:	cd b7       	in	r28, 0x3d	; 61
    4db0:	de b7       	in	r29, 0x3e	; 62
    4db2:	9a 83       	std	Y+2, r25	; 0x02
    4db4:	89 83       	std	Y+1, r24	; 0x01
    4db6:	4b 83       	std	Y+3, r20	; 0x03
    4db8:	5c 83       	std	Y+4, r21	; 0x04
    4dba:	6d 83       	std	Y+5, r22	; 0x05
    4dbc:	7e 83       	std	Y+6, r23	; 0x06
    4dbe:	89 81       	ldd	r24, Y+1	; 0x01
    4dc0:	9a 81       	ldd	r25, Y+2	; 0x02
    4dc2:	9c 01       	movw	r18, r24
    4dc4:	28 55       	subi	r18, 0x58	; 88
    4dc6:	3f 4f       	sbci	r19, 0xFF	; 255
    4dc8:	8b 81       	ldd	r24, Y+3	; 0x03
    4dca:	9c 81       	ldd	r25, Y+4	; 0x04
    4dcc:	ad 81       	ldd	r26, Y+5	; 0x05
    4dce:	be 81       	ldd	r27, Y+6	; 0x06
    4dd0:	f9 01       	movw	r30, r18
    4dd2:	80 83       	st	Z, r24
    4dd4:	91 83       	std	Z+1, r25	; 0x01
    4dd6:	a2 83       	std	Z+2, r26	; 0x02
    4dd8:	b3 83       	std	Z+3, r27	; 0x03
    4dda:	26 96       	adiw	r28, 0x06	; 6
    4ddc:	0f b6       	in	r0, 0x3f	; 63
    4dde:	f8 94       	cli
    4de0:	de bf       	out	0x3e, r29	; 62
    4de2:	0f be       	out	0x3f, r0	; 63
    4de4:	cd bf       	out	0x3d, r28	; 61
    4de6:	df 91       	pop	r29
    4de8:	cf 91       	pop	r28
    4dea:	08 95       	ret

00004dec <_ZNK10helicopter5model11SystemModel8TimeoutsEv>:
						
						
			long Timeouts() const {return timeouts; }
    4dec:	cf 93       	push	r28
    4dee:	df 93       	push	r29
    4df0:	1f 92       	push	r1
    4df2:	1f 92       	push	r1
    4df4:	cd b7       	in	r28, 0x3d	; 61
    4df6:	de b7       	in	r29, 0x3e	; 62
    4df8:	9a 83       	std	Y+2, r25	; 0x02
    4dfa:	89 83       	std	Y+1, r24	; 0x01
    4dfc:	89 81       	ldd	r24, Y+1	; 0x01
    4dfe:	9a 81       	ldd	r25, Y+2	; 0x02
    4e00:	84 55       	subi	r24, 0x54	; 84
    4e02:	9f 4f       	sbci	r25, 0xFF	; 255
    4e04:	fc 01       	movw	r30, r24
    4e06:	80 81       	ld	r24, Z
    4e08:	91 81       	ldd	r25, Z+1	; 0x01
    4e0a:	a2 81       	ldd	r26, Z+2	; 0x02
    4e0c:	b3 81       	ldd	r27, Z+3	; 0x03
    4e0e:	bc 01       	movw	r22, r24
    4e10:	cd 01       	movw	r24, r26
    4e12:	0f 90       	pop	r0
    4e14:	0f 90       	pop	r0
    4e16:	df 91       	pop	r29
    4e18:	cf 91       	pop	r28
    4e1a:	08 95       	ret

00004e1c <_ZN10helicopter5model11SystemModel8TimeoutsEl>:
			void Timeouts(long val) { timeouts = val; }
    4e1c:	cf 93       	push	r28
    4e1e:	df 93       	push	r29
    4e20:	00 d0       	rcall	.+0      	; 0x4e22 <_ZN10helicopter5model11SystemModel8TimeoutsEl+0x6>
    4e22:	00 d0       	rcall	.+0      	; 0x4e24 <_ZN10helicopter5model11SystemModel8TimeoutsEl+0x8>
    4e24:	cd b7       	in	r28, 0x3d	; 61
    4e26:	de b7       	in	r29, 0x3e	; 62
    4e28:	9a 83       	std	Y+2, r25	; 0x02
    4e2a:	89 83       	std	Y+1, r24	; 0x01
    4e2c:	4b 83       	std	Y+3, r20	; 0x03
    4e2e:	5c 83       	std	Y+4, r21	; 0x04
    4e30:	6d 83       	std	Y+5, r22	; 0x05
    4e32:	7e 83       	std	Y+6, r23	; 0x06
    4e34:	89 81       	ldd	r24, Y+1	; 0x01
    4e36:	9a 81       	ldd	r25, Y+2	; 0x02
    4e38:	9c 01       	movw	r18, r24
    4e3a:	24 55       	subi	r18, 0x54	; 84
    4e3c:	3f 4f       	sbci	r19, 0xFF	; 255
    4e3e:	8b 81       	ldd	r24, Y+3	; 0x03
    4e40:	9c 81       	ldd	r25, Y+4	; 0x04
    4e42:	ad 81       	ldd	r26, Y+5	; 0x05
    4e44:	be 81       	ldd	r27, Y+6	; 0x06
    4e46:	f9 01       	movw	r30, r18
    4e48:	80 83       	st	Z, r24
    4e4a:	91 83       	std	Z+1, r25	; 0x01
    4e4c:	a2 83       	std	Z+2, r26	; 0x02
    4e4e:	b3 83       	std	Z+3, r27	; 0x03
    4e50:	26 96       	adiw	r28, 0x06	; 6
    4e52:	0f b6       	in	r0, 0x3f	; 63
    4e54:	f8 94       	cli
    4e56:	de bf       	out	0x3e, r29	; 62
    4e58:	0f be       	out	0x3f, r0	; 63
    4e5a:	cd bf       	out	0x3d, r28	; 61
    4e5c:	df 91       	pop	r29
    4e5e:	cf 91       	pop	r28
    4e60:	08 95       	ret

00004e62 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>:
			
			long UnrecognizedMsgTypes() const {return unrecognizedMsgTypes; }
    4e62:	cf 93       	push	r28
    4e64:	df 93       	push	r29
    4e66:	1f 92       	push	r1
    4e68:	1f 92       	push	r1
    4e6a:	cd b7       	in	r28, 0x3d	; 61
    4e6c:	de b7       	in	r29, 0x3e	; 62
    4e6e:	9a 83       	std	Y+2, r25	; 0x02
    4e70:	89 83       	std	Y+1, r24	; 0x01
    4e72:	89 81       	ldd	r24, Y+1	; 0x01
    4e74:	9a 81       	ldd	r25, Y+2	; 0x02
    4e76:	80 55       	subi	r24, 0x50	; 80
    4e78:	9f 4f       	sbci	r25, 0xFF	; 255
    4e7a:	fc 01       	movw	r30, r24
    4e7c:	80 81       	ld	r24, Z
    4e7e:	91 81       	ldd	r25, Z+1	; 0x01
    4e80:	a2 81       	ldd	r26, Z+2	; 0x02
    4e82:	b3 81       	ldd	r27, Z+3	; 0x03
    4e84:	bc 01       	movw	r22, r24
    4e86:	cd 01       	movw	r24, r26
    4e88:	0f 90       	pop	r0
    4e8a:	0f 90       	pop	r0
    4e8c:	df 91       	pop	r29
    4e8e:	cf 91       	pop	r28
    4e90:	08 95       	ret

00004e92 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl>:
			void UnrecognizedMsgTypes(long val) { unrecognizedMsgTypes = val; }
    4e92:	cf 93       	push	r28
    4e94:	df 93       	push	r29
    4e96:	00 d0       	rcall	.+0      	; 0x4e98 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl+0x6>
    4e98:	00 d0       	rcall	.+0      	; 0x4e9a <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl+0x8>
    4e9a:	cd b7       	in	r28, 0x3d	; 61
    4e9c:	de b7       	in	r29, 0x3e	; 62
    4e9e:	9a 83       	std	Y+2, r25	; 0x02
    4ea0:	89 83       	std	Y+1, r24	; 0x01
    4ea2:	4b 83       	std	Y+3, r20	; 0x03
    4ea4:	5c 83       	std	Y+4, r21	; 0x04
    4ea6:	6d 83       	std	Y+5, r22	; 0x05
    4ea8:	7e 83       	std	Y+6, r23	; 0x06
    4eaa:	89 81       	ldd	r24, Y+1	; 0x01
    4eac:	9a 81       	ldd	r25, Y+2	; 0x02
    4eae:	9c 01       	movw	r18, r24
    4eb0:	20 55       	subi	r18, 0x50	; 80
    4eb2:	3f 4f       	sbci	r19, 0xFF	; 255
    4eb4:	8b 81       	ldd	r24, Y+3	; 0x03
    4eb6:	9c 81       	ldd	r25, Y+4	; 0x04
    4eb8:	ad 81       	ldd	r26, Y+5	; 0x05
    4eba:	be 81       	ldd	r27, Y+6	; 0x06
    4ebc:	f9 01       	movw	r30, r18
    4ebe:	80 83       	st	Z, r24
    4ec0:	91 83       	std	Z+1, r25	; 0x01
    4ec2:	a2 83       	std	Z+2, r26	; 0x02
    4ec4:	b3 83       	std	Z+3, r27	; 0x03
    4ec6:	26 96       	adiw	r28, 0x06	; 6
    4ec8:	0f b6       	in	r0, 0x3f	; 63
    4eca:	f8 94       	cli
    4ecc:	de bf       	out	0x3e, r29	; 62
    4ece:	0f be       	out	0x3f, r0	; 63
    4ed0:	cd bf       	out	0x3d, r28	; 61
    4ed2:	df 91       	pop	r29
    4ed4:	cf 91       	pop	r28
    4ed6:	08 95       	ret

00004ed8 <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>:
			
			long ChecksumErrors() const {return checksumErrors; }
    4ed8:	cf 93       	push	r28
    4eda:	df 93       	push	r29
    4edc:	1f 92       	push	r1
    4ede:	1f 92       	push	r1
    4ee0:	cd b7       	in	r28, 0x3d	; 61
    4ee2:	de b7       	in	r29, 0x3e	; 62
    4ee4:	9a 83       	std	Y+2, r25	; 0x02
    4ee6:	89 83       	std	Y+1, r24	; 0x01
    4ee8:	89 81       	ldd	r24, Y+1	; 0x01
    4eea:	9a 81       	ldd	r25, Y+2	; 0x02
    4eec:	8c 54       	subi	r24, 0x4C	; 76
    4eee:	9f 4f       	sbci	r25, 0xFF	; 255
    4ef0:	fc 01       	movw	r30, r24
    4ef2:	80 81       	ld	r24, Z
    4ef4:	91 81       	ldd	r25, Z+1	; 0x01
    4ef6:	a2 81       	ldd	r26, Z+2	; 0x02
    4ef8:	b3 81       	ldd	r27, Z+3	; 0x03
    4efa:	bc 01       	movw	r22, r24
    4efc:	cd 01       	movw	r24, r26
    4efe:	0f 90       	pop	r0
    4f00:	0f 90       	pop	r0
    4f02:	df 91       	pop	r29
    4f04:	cf 91       	pop	r28
    4f06:	08 95       	ret

00004f08 <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl>:
			void ChecksumErrors(long val) { checksumErrors = val; }
    4f08:	cf 93       	push	r28
    4f0a:	df 93       	push	r29
    4f0c:	00 d0       	rcall	.+0      	; 0x4f0e <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl+0x6>
    4f0e:	00 d0       	rcall	.+0      	; 0x4f10 <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl+0x8>
    4f10:	cd b7       	in	r28, 0x3d	; 61
    4f12:	de b7       	in	r29, 0x3e	; 62
    4f14:	9a 83       	std	Y+2, r25	; 0x02
    4f16:	89 83       	std	Y+1, r24	; 0x01
    4f18:	4b 83       	std	Y+3, r20	; 0x03
    4f1a:	5c 83       	std	Y+4, r21	; 0x04
    4f1c:	6d 83       	std	Y+5, r22	; 0x05
    4f1e:	7e 83       	std	Y+6, r23	; 0x06
    4f20:	89 81       	ldd	r24, Y+1	; 0x01
    4f22:	9a 81       	ldd	r25, Y+2	; 0x02
    4f24:	9c 01       	movw	r18, r24
    4f26:	2c 54       	subi	r18, 0x4C	; 76
    4f28:	3f 4f       	sbci	r19, 0xFF	; 255
    4f2a:	8b 81       	ldd	r24, Y+3	; 0x03
    4f2c:	9c 81       	ldd	r25, Y+4	; 0x04
    4f2e:	ad 81       	ldd	r26, Y+5	; 0x05
    4f30:	be 81       	ldd	r27, Y+6	; 0x06
    4f32:	f9 01       	movw	r30, r18
    4f34:	80 83       	st	Z, r24
    4f36:	91 83       	std	Z+1, r25	; 0x01
    4f38:	a2 83       	std	Z+2, r26	; 0x02
    4f3a:	b3 83       	std	Z+3, r27	; 0x03
    4f3c:	26 96       	adiw	r28, 0x06	; 6
    4f3e:	0f b6       	in	r0, 0x3f	; 63
    4f40:	f8 94       	cli
    4f42:	de bf       	out	0x3e, r29	; 62
    4f44:	0f be       	out	0x3f, r0	; 63
    4f46:	cd bf       	out	0x3d, r28	; 61
    4f48:	df 91       	pop	r29
    4f4a:	cf 91       	pop	r28
    4f4c:	08 95       	ret

00004f4e <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>:
				sizeof(UnrecognizedMsgTypes) + 
				sizeof(ChecksumErrors) + 
				sizeof(NumOfBlownFrames);

			
				SystemTelemetryMessage(): Message(MessageType,MessageSize),
    4f4e:	cf 93       	push	r28
    4f50:	df 93       	push	r29
    4f52:	1f 92       	push	r1
    4f54:	1f 92       	push	r1
    4f56:	cd b7       	in	r28, 0x3d	; 61
    4f58:	de b7       	in	r29, 0x3e	; 62
    4f5a:	9a 83       	std	Y+2, r25	; 0x02
    4f5c:	89 83       	std	Y+1, r24	; 0x01
										
														
					Timeouts(0),
					UnrecognizedMsgTypes(0),
					ChecksumErrors(0),
					NumOfBlownFrames(0)
    4f5e:	89 81       	ldd	r24, Y+1	; 0x01
    4f60:	9a 81       	ldd	r25, Y+2	; 0x02
    4f62:	45 ed       	ldi	r20, 0xD5	; 213
    4f64:	50 e0       	ldi	r21, 0x00	; 0
    4f66:	62 e0       	ldi	r22, 0x02	; 2
    4f68:	0e 94 18 23 	call	0x4630	; 0x4630 <_ZN10helicopter8messages7MessageC1Ehi>
    4f6c:	89 81       	ldd	r24, Y+1	; 0x01
    4f6e:	9a 81       	ldd	r25, Y+2	; 0x02
    4f70:	2e e3       	ldi	r18, 0x3E	; 62
    4f72:	32 e0       	ldi	r19, 0x02	; 2
    4f74:	fc 01       	movw	r30, r24
    4f76:	31 83       	std	Z+1, r19	; 0x01
    4f78:	20 83       	st	Z, r18
    4f7a:	89 81       	ldd	r24, Y+1	; 0x01
    4f7c:	9a 81       	ldd	r25, Y+2	; 0x02
    4f7e:	fc 01       	movw	r30, r24
    4f80:	15 82       	std	Z+5, r1	; 0x05
    4f82:	16 82       	std	Z+6, r1	; 0x06
    4f84:	17 82       	std	Z+7, r1	; 0x07
    4f86:	10 86       	std	Z+8, r1	; 0x08
    4f88:	89 81       	ldd	r24, Y+1	; 0x01
    4f8a:	9a 81       	ldd	r25, Y+2	; 0x02
    4f8c:	fc 01       	movw	r30, r24
    4f8e:	11 86       	std	Z+9, r1	; 0x09
    4f90:	12 86       	std	Z+10, r1	; 0x0a
    4f92:	13 86       	std	Z+11, r1	; 0x0b
    4f94:	14 86       	std	Z+12, r1	; 0x0c
    4f96:	89 81       	ldd	r24, Y+1	; 0x01
    4f98:	9a 81       	ldd	r25, Y+2	; 0x02
    4f9a:	fc 01       	movw	r30, r24
    4f9c:	15 86       	std	Z+13, r1	; 0x0d
    4f9e:	16 86       	std	Z+14, r1	; 0x0e
    4fa0:	17 86       	std	Z+15, r1	; 0x0f
    4fa2:	10 8a       	std	Z+16, r1	; 0x10
    4fa4:	89 81       	ldd	r24, Y+1	; 0x01
    4fa6:	9a 81       	ldd	r25, Y+2	; 0x02
    4fa8:	fc 01       	movw	r30, r24
    4faa:	11 8a       	std	Z+17, r1	; 0x11
    4fac:	12 8a       	std	Z+18, r1	; 0x12
    4fae:	13 8a       	std	Z+19, r1	; 0x13
    4fb0:	14 8a       	std	Z+20, r1	; 0x14
    4fb2:	89 81       	ldd	r24, Y+1	; 0x01
    4fb4:	9a 81       	ldd	r25, Y+2	; 0x02
    4fb6:	fc 01       	movw	r30, r24
    4fb8:	15 8a       	std	Z+21, r1	; 0x15
    4fba:	16 8a       	std	Z+22, r1	; 0x16
    4fbc:	17 8a       	std	Z+23, r1	; 0x17
    4fbe:	10 8e       	std	Z+24, r1	; 0x18
    4fc0:	89 81       	ldd	r24, Y+1	; 0x01
    4fc2:	9a 81       	ldd	r25, Y+2	; 0x02
    4fc4:	fc 01       	movw	r30, r24
    4fc6:	11 8e       	std	Z+25, r1	; 0x19
    4fc8:	12 8e       	std	Z+26, r1	; 0x1a
    4fca:	13 8e       	std	Z+27, r1	; 0x1b
    4fcc:	14 8e       	std	Z+28, r1	; 0x1c
    4fce:	89 81       	ldd	r24, Y+1	; 0x01
    4fd0:	9a 81       	ldd	r25, Y+2	; 0x02
    4fd2:	fc 01       	movw	r30, r24
    4fd4:	15 8e       	std	Z+29, r1	; 0x1d
    4fd6:	16 8e       	std	Z+30, r1	; 0x1e
    4fd8:	17 8e       	std	Z+31, r1	; 0x1f
    4fda:	10 a2       	std	Z+32, r1	; 0x20
    4fdc:	89 81       	ldd	r24, Y+1	; 0x01
    4fde:	9a 81       	ldd	r25, Y+2	; 0x02
    4fe0:	fc 01       	movw	r30, r24
    4fe2:	11 a2       	std	Z+33, r1	; 0x21
    4fe4:	12 a2       	std	Z+34, r1	; 0x22
    4fe6:	13 a2       	std	Z+35, r1	; 0x23
    4fe8:	14 a2       	std	Z+36, r1	; 0x24
    4fea:	89 81       	ldd	r24, Y+1	; 0x01
    4fec:	9a 81       	ldd	r25, Y+2	; 0x02
    4fee:	fc 01       	movw	r30, r24
    4ff0:	15 a2       	std	Z+37, r1	; 0x25
    4ff2:	16 a2       	std	Z+38, r1	; 0x26
    4ff4:	17 a2       	std	Z+39, r1	; 0x27
    4ff6:	10 a6       	std	Z+40, r1	; 0x28
    4ff8:	89 81       	ldd	r24, Y+1	; 0x01
    4ffa:	9a 81       	ldd	r25, Y+2	; 0x02
    4ffc:	fc 01       	movw	r30, r24
    4ffe:	11 a6       	std	Z+41, r1	; 0x29
    5000:	12 a6       	std	Z+42, r1	; 0x2a
    5002:	13 a6       	std	Z+43, r1	; 0x2b
    5004:	14 a6       	std	Z+44, r1	; 0x2c
    5006:	89 81       	ldd	r24, Y+1	; 0x01
    5008:	9a 81       	ldd	r25, Y+2	; 0x02
    500a:	fc 01       	movw	r30, r24
    500c:	15 a6       	std	Z+45, r1	; 0x2d
    500e:	16 a6       	std	Z+46, r1	; 0x2e
    5010:	17 a6       	std	Z+47, r1	; 0x2f
    5012:	10 aa       	std	Z+48, r1	; 0x30
    5014:	89 81       	ldd	r24, Y+1	; 0x01
    5016:	9a 81       	ldd	r25, Y+2	; 0x02
    5018:	fc 01       	movw	r30, r24
    501a:	11 aa       	std	Z+49, r1	; 0x31
    501c:	12 aa       	std	Z+50, r1	; 0x32
    501e:	13 aa       	std	Z+51, r1	; 0x33
    5020:	14 aa       	std	Z+52, r1	; 0x34
    5022:	89 81       	ldd	r24, Y+1	; 0x01
    5024:	9a 81       	ldd	r25, Y+2	; 0x02
    5026:	fc 01       	movw	r30, r24
    5028:	15 aa       	std	Z+53, r1	; 0x35
    502a:	16 aa       	std	Z+54, r1	; 0x36
    502c:	17 aa       	std	Z+55, r1	; 0x37
    502e:	10 ae       	std	Z+56, r1	; 0x38
    5030:	89 81       	ldd	r24, Y+1	; 0x01
    5032:	9a 81       	ldd	r25, Y+2	; 0x02
    5034:	fc 01       	movw	r30, r24
    5036:	11 ae       	std	Z+57, r1	; 0x39
    5038:	12 ae       	std	Z+58, r1	; 0x3a
    503a:	13 ae       	std	Z+59, r1	; 0x3b
    503c:	14 ae       	std	Z+60, r1	; 0x3c
    503e:	89 81       	ldd	r24, Y+1	; 0x01
    5040:	9a 81       	ldd	r25, Y+2	; 0x02
    5042:	cd 96       	adiw	r24, 0x3d	; 61
    5044:	fc 01       	movw	r30, r24
    5046:	10 82       	st	Z, r1
    5048:	11 82       	std	Z+1, r1	; 0x01
    504a:	12 82       	std	Z+2, r1	; 0x02
    504c:	13 82       	std	Z+3, r1	; 0x03
    504e:	89 81       	ldd	r24, Y+1	; 0x01
    5050:	9a 81       	ldd	r25, Y+2	; 0x02
    5052:	8f 5b       	subi	r24, 0xBF	; 191
    5054:	9f 4f       	sbci	r25, 0xFF	; 255
    5056:	fc 01       	movw	r30, r24
    5058:	10 82       	st	Z, r1
    505a:	11 82       	std	Z+1, r1	; 0x01
    505c:	12 82       	std	Z+2, r1	; 0x02
    505e:	13 82       	std	Z+3, r1	; 0x03
    5060:	89 81       	ldd	r24, Y+1	; 0x01
    5062:	9a 81       	ldd	r25, Y+2	; 0x02
    5064:	8b 5b       	subi	r24, 0xBB	; 187
    5066:	9f 4f       	sbci	r25, 0xFF	; 255
    5068:	fc 01       	movw	r30, r24
    506a:	10 82       	st	Z, r1
    506c:	11 82       	std	Z+1, r1	; 0x01
    506e:	12 82       	std	Z+2, r1	; 0x02
    5070:	13 82       	std	Z+3, r1	; 0x03
    5072:	89 81       	ldd	r24, Y+1	; 0x01
    5074:	9a 81       	ldd	r25, Y+2	; 0x02
    5076:	87 5b       	subi	r24, 0xB7	; 183
    5078:	9f 4f       	sbci	r25, 0xFF	; 255
    507a:	fc 01       	movw	r30, r24
    507c:	10 82       	st	Z, r1
    507e:	11 82       	std	Z+1, r1	; 0x01
    5080:	12 82       	std	Z+2, r1	; 0x02
    5082:	13 82       	std	Z+3, r1	; 0x03
    5084:	89 81       	ldd	r24, Y+1	; 0x01
    5086:	9a 81       	ldd	r25, Y+2	; 0x02
    5088:	83 5b       	subi	r24, 0xB3	; 179
    508a:	9f 4f       	sbci	r25, 0xFF	; 255
    508c:	fc 01       	movw	r30, r24
    508e:	10 82       	st	Z, r1
    5090:	11 82       	std	Z+1, r1	; 0x01
    5092:	12 82       	std	Z+2, r1	; 0x02
    5094:	13 82       	std	Z+3, r1	; 0x03
    5096:	89 81       	ldd	r24, Y+1	; 0x01
    5098:	9a 81       	ldd	r25, Y+2	; 0x02
    509a:	8f 5a       	subi	r24, 0xAF	; 175
    509c:	9f 4f       	sbci	r25, 0xFF	; 255
    509e:	fc 01       	movw	r30, r24
    50a0:	10 82       	st	Z, r1
    50a2:	11 82       	std	Z+1, r1	; 0x01
    50a4:	12 82       	std	Z+2, r1	; 0x02
    50a6:	13 82       	std	Z+3, r1	; 0x03
    50a8:	89 81       	ldd	r24, Y+1	; 0x01
    50aa:	9a 81       	ldd	r25, Y+2	; 0x02
    50ac:	8b 5a       	subi	r24, 0xAB	; 171
    50ae:	9f 4f       	sbci	r25, 0xFF	; 255
    50b0:	fc 01       	movw	r30, r24
    50b2:	10 82       	st	Z, r1
    50b4:	11 82       	std	Z+1, r1	; 0x01
    50b6:	12 82       	std	Z+2, r1	; 0x02
    50b8:	13 82       	std	Z+3, r1	; 0x03
    50ba:	89 81       	ldd	r24, Y+1	; 0x01
    50bc:	9a 81       	ldd	r25, Y+2	; 0x02
    50be:	87 5a       	subi	r24, 0xA7	; 167
    50c0:	9f 4f       	sbci	r25, 0xFF	; 255
    50c2:	fc 01       	movw	r30, r24
    50c4:	10 82       	st	Z, r1
    50c6:	11 82       	std	Z+1, r1	; 0x01
    50c8:	12 82       	std	Z+2, r1	; 0x02
    50ca:	13 82       	std	Z+3, r1	; 0x03
    50cc:	89 81       	ldd	r24, Y+1	; 0x01
    50ce:	9a 81       	ldd	r25, Y+2	; 0x02
    50d0:	83 5a       	subi	r24, 0xA3	; 163
    50d2:	9f 4f       	sbci	r25, 0xFF	; 255
    50d4:	fc 01       	movw	r30, r24
    50d6:	10 82       	st	Z, r1
    50d8:	11 82       	std	Z+1, r1	; 0x01
    50da:	12 82       	std	Z+2, r1	; 0x02
    50dc:	13 82       	std	Z+3, r1	; 0x03
    50de:	89 81       	ldd	r24, Y+1	; 0x01
    50e0:	9a 81       	ldd	r25, Y+2	; 0x02
    50e2:	8f 59       	subi	r24, 0x9F	; 159
    50e4:	9f 4f       	sbci	r25, 0xFF	; 255
    50e6:	fc 01       	movw	r30, r24
    50e8:	10 82       	st	Z, r1
    50ea:	11 82       	std	Z+1, r1	; 0x01
    50ec:	12 82       	std	Z+2, r1	; 0x02
    50ee:	13 82       	std	Z+3, r1	; 0x03
    50f0:	89 81       	ldd	r24, Y+1	; 0x01
    50f2:	9a 81       	ldd	r25, Y+2	; 0x02
    50f4:	8b 59       	subi	r24, 0x9B	; 155
    50f6:	9f 4f       	sbci	r25, 0xFF	; 255
    50f8:	fc 01       	movw	r30, r24
    50fa:	10 82       	st	Z, r1
    50fc:	11 82       	std	Z+1, r1	; 0x01
    50fe:	12 82       	std	Z+2, r1	; 0x02
    5100:	13 82       	std	Z+3, r1	; 0x03
    5102:	89 81       	ldd	r24, Y+1	; 0x01
    5104:	9a 81       	ldd	r25, Y+2	; 0x02
    5106:	87 59       	subi	r24, 0x97	; 151
    5108:	9f 4f       	sbci	r25, 0xFF	; 255
    510a:	fc 01       	movw	r30, r24
    510c:	10 82       	st	Z, r1
    510e:	11 82       	std	Z+1, r1	; 0x01
    5110:	12 82       	std	Z+2, r1	; 0x02
    5112:	13 82       	std	Z+3, r1	; 0x03
    5114:	89 81       	ldd	r24, Y+1	; 0x01
    5116:	9a 81       	ldd	r25, Y+2	; 0x02
    5118:	83 59       	subi	r24, 0x93	; 147
    511a:	9f 4f       	sbci	r25, 0xFF	; 255
    511c:	fc 01       	movw	r30, r24
    511e:	10 82       	st	Z, r1
    5120:	11 82       	std	Z+1, r1	; 0x01
    5122:	12 82       	std	Z+2, r1	; 0x02
    5124:	13 82       	std	Z+3, r1	; 0x03
    5126:	89 81       	ldd	r24, Y+1	; 0x01
    5128:	9a 81       	ldd	r25, Y+2	; 0x02
    512a:	8f 58       	subi	r24, 0x8F	; 143
    512c:	9f 4f       	sbci	r25, 0xFF	; 255
    512e:	fc 01       	movw	r30, r24
    5130:	10 82       	st	Z, r1
    5132:	11 82       	std	Z+1, r1	; 0x01
    5134:	12 82       	std	Z+2, r1	; 0x02
    5136:	13 82       	std	Z+3, r1	; 0x03
    5138:	89 81       	ldd	r24, Y+1	; 0x01
    513a:	9a 81       	ldd	r25, Y+2	; 0x02
    513c:	8b 58       	subi	r24, 0x8B	; 139
    513e:	9f 4f       	sbci	r25, 0xFF	; 255
    5140:	fc 01       	movw	r30, r24
    5142:	10 82       	st	Z, r1
    5144:	11 82       	std	Z+1, r1	; 0x01
    5146:	12 82       	std	Z+2, r1	; 0x02
    5148:	13 82       	std	Z+3, r1	; 0x03
    514a:	89 81       	ldd	r24, Y+1	; 0x01
    514c:	9a 81       	ldd	r25, Y+2	; 0x02
    514e:	87 58       	subi	r24, 0x87	; 135
    5150:	9f 4f       	sbci	r25, 0xFF	; 255
    5152:	fc 01       	movw	r30, r24
    5154:	10 82       	st	Z, r1
    5156:	11 82       	std	Z+1, r1	; 0x01
    5158:	12 82       	std	Z+2, r1	; 0x02
    515a:	13 82       	std	Z+3, r1	; 0x03
    515c:	89 81       	ldd	r24, Y+1	; 0x01
    515e:	9a 81       	ldd	r25, Y+2	; 0x02
    5160:	83 58       	subi	r24, 0x83	; 131
    5162:	9f 4f       	sbci	r25, 0xFF	; 255
    5164:	fc 01       	movw	r30, r24
    5166:	10 82       	st	Z, r1
    5168:	11 82       	std	Z+1, r1	; 0x01
    516a:	12 82       	std	Z+2, r1	; 0x02
    516c:	13 82       	std	Z+3, r1	; 0x03
    516e:	89 81       	ldd	r24, Y+1	; 0x01
    5170:	9a 81       	ldd	r25, Y+2	; 0x02
    5172:	8f 57       	subi	r24, 0x7F	; 127
    5174:	9f 4f       	sbci	r25, 0xFF	; 255
    5176:	fc 01       	movw	r30, r24
    5178:	10 82       	st	Z, r1
    517a:	11 82       	std	Z+1, r1	; 0x01
    517c:	12 82       	std	Z+2, r1	; 0x02
    517e:	13 82       	std	Z+3, r1	; 0x03
    5180:	89 81       	ldd	r24, Y+1	; 0x01
    5182:	9a 81       	ldd	r25, Y+2	; 0x02
    5184:	8b 57       	subi	r24, 0x7B	; 123
    5186:	9f 4f       	sbci	r25, 0xFF	; 255
    5188:	fc 01       	movw	r30, r24
    518a:	10 82       	st	Z, r1
    518c:	11 82       	std	Z+1, r1	; 0x01
    518e:	12 82       	std	Z+2, r1	; 0x02
    5190:	13 82       	std	Z+3, r1	; 0x03
    5192:	89 81       	ldd	r24, Y+1	; 0x01
    5194:	9a 81       	ldd	r25, Y+2	; 0x02
    5196:	87 57       	subi	r24, 0x77	; 119
    5198:	9f 4f       	sbci	r25, 0xFF	; 255
    519a:	fc 01       	movw	r30, r24
    519c:	10 82       	st	Z, r1
    519e:	11 82       	std	Z+1, r1	; 0x01
    51a0:	12 82       	std	Z+2, r1	; 0x02
    51a2:	13 82       	std	Z+3, r1	; 0x03
    51a4:	89 81       	ldd	r24, Y+1	; 0x01
    51a6:	9a 81       	ldd	r25, Y+2	; 0x02
    51a8:	83 57       	subi	r24, 0x73	; 115
    51aa:	9f 4f       	sbci	r25, 0xFF	; 255
    51ac:	fc 01       	movw	r30, r24
    51ae:	10 82       	st	Z, r1
    51b0:	11 82       	std	Z+1, r1	; 0x01
    51b2:	12 82       	std	Z+2, r1	; 0x02
    51b4:	13 82       	std	Z+3, r1	; 0x03
    51b6:	89 81       	ldd	r24, Y+1	; 0x01
    51b8:	9a 81       	ldd	r25, Y+2	; 0x02
    51ba:	8f 56       	subi	r24, 0x6F	; 111
    51bc:	9f 4f       	sbci	r25, 0xFF	; 255
    51be:	fc 01       	movw	r30, r24
    51c0:	10 82       	st	Z, r1
    51c2:	11 82       	std	Z+1, r1	; 0x01
    51c4:	12 82       	std	Z+2, r1	; 0x02
    51c6:	13 82       	std	Z+3, r1	; 0x03
    51c8:	89 81       	ldd	r24, Y+1	; 0x01
    51ca:	9a 81       	ldd	r25, Y+2	; 0x02
    51cc:	8b 56       	subi	r24, 0x6B	; 107
    51ce:	9f 4f       	sbci	r25, 0xFF	; 255
    51d0:	fc 01       	movw	r30, r24
    51d2:	10 82       	st	Z, r1
    51d4:	11 82       	std	Z+1, r1	; 0x01
    51d6:	12 82       	std	Z+2, r1	; 0x02
    51d8:	13 82       	std	Z+3, r1	; 0x03
    51da:	89 81       	ldd	r24, Y+1	; 0x01
    51dc:	9a 81       	ldd	r25, Y+2	; 0x02
    51de:	87 56       	subi	r24, 0x67	; 103
    51e0:	9f 4f       	sbci	r25, 0xFF	; 255
    51e2:	fc 01       	movw	r30, r24
    51e4:	10 82       	st	Z, r1
    51e6:	11 82       	std	Z+1, r1	; 0x01
    51e8:	12 82       	std	Z+2, r1	; 0x02
    51ea:	13 82       	std	Z+3, r1	; 0x03
    51ec:	89 81       	ldd	r24, Y+1	; 0x01
    51ee:	9a 81       	ldd	r25, Y+2	; 0x02
    51f0:	83 56       	subi	r24, 0x63	; 99
    51f2:	9f 4f       	sbci	r25, 0xFF	; 255
    51f4:	fc 01       	movw	r30, r24
    51f6:	10 82       	st	Z, r1
    51f8:	11 82       	std	Z+1, r1	; 0x01
    51fa:	12 82       	std	Z+2, r1	; 0x02
    51fc:	13 82       	std	Z+3, r1	; 0x03
    51fe:	89 81       	ldd	r24, Y+1	; 0x01
    5200:	9a 81       	ldd	r25, Y+2	; 0x02
    5202:	8f 55       	subi	r24, 0x5F	; 95
    5204:	9f 4f       	sbci	r25, 0xFF	; 255
    5206:	fc 01       	movw	r30, r24
    5208:	10 82       	st	Z, r1
    520a:	11 82       	std	Z+1, r1	; 0x01
    520c:	12 82       	std	Z+2, r1	; 0x02
    520e:	13 82       	std	Z+3, r1	; 0x03
    5210:	89 81       	ldd	r24, Y+1	; 0x01
    5212:	9a 81       	ldd	r25, Y+2	; 0x02
    5214:	8b 55       	subi	r24, 0x5B	; 91
    5216:	9f 4f       	sbci	r25, 0xFF	; 255
    5218:	fc 01       	movw	r30, r24
    521a:	10 82       	st	Z, r1
    521c:	11 82       	std	Z+1, r1	; 0x01
    521e:	12 82       	std	Z+2, r1	; 0x02
    5220:	13 82       	std	Z+3, r1	; 0x03
    5222:	89 81       	ldd	r24, Y+1	; 0x01
    5224:	9a 81       	ldd	r25, Y+2	; 0x02
    5226:	87 55       	subi	r24, 0x57	; 87
    5228:	9f 4f       	sbci	r25, 0xFF	; 255
    522a:	fc 01       	movw	r30, r24
    522c:	10 82       	st	Z, r1
    522e:	11 82       	std	Z+1, r1	; 0x01
    5230:	12 82       	std	Z+2, r1	; 0x02
    5232:	13 82       	std	Z+3, r1	; 0x03
    5234:	89 81       	ldd	r24, Y+1	; 0x01
    5236:	9a 81       	ldd	r25, Y+2	; 0x02
    5238:	83 55       	subi	r24, 0x53	; 83
    523a:	9f 4f       	sbci	r25, 0xFF	; 255
    523c:	fc 01       	movw	r30, r24
    523e:	10 82       	st	Z, r1
    5240:	11 82       	std	Z+1, r1	; 0x01
    5242:	12 82       	std	Z+2, r1	; 0x02
    5244:	13 82       	std	Z+3, r1	; 0x03
    5246:	89 81       	ldd	r24, Y+1	; 0x01
    5248:	9a 81       	ldd	r25, Y+2	; 0x02
    524a:	8f 54       	subi	r24, 0x4F	; 79
    524c:	9f 4f       	sbci	r25, 0xFF	; 255
    524e:	fc 01       	movw	r30, r24
    5250:	10 82       	st	Z, r1
    5252:	11 82       	std	Z+1, r1	; 0x01
    5254:	12 82       	std	Z+2, r1	; 0x02
    5256:	13 82       	std	Z+3, r1	; 0x03
    5258:	89 81       	ldd	r24, Y+1	; 0x01
    525a:	9a 81       	ldd	r25, Y+2	; 0x02
    525c:	8b 54       	subi	r24, 0x4B	; 75
    525e:	9f 4f       	sbci	r25, 0xFF	; 255
    5260:	fc 01       	movw	r30, r24
    5262:	10 82       	st	Z, r1
    5264:	11 82       	std	Z+1, r1	; 0x01
    5266:	12 82       	std	Z+2, r1	; 0x02
    5268:	13 82       	std	Z+3, r1	; 0x03
    526a:	89 81       	ldd	r24, Y+1	; 0x01
    526c:	9a 81       	ldd	r25, Y+2	; 0x02
    526e:	87 54       	subi	r24, 0x47	; 71
    5270:	9f 4f       	sbci	r25, 0xFF	; 255
    5272:	fc 01       	movw	r30, r24
    5274:	10 82       	st	Z, r1
    5276:	11 82       	std	Z+1, r1	; 0x01
    5278:	12 82       	std	Z+2, r1	; 0x02
    527a:	13 82       	std	Z+3, r1	; 0x03
    527c:	89 81       	ldd	r24, Y+1	; 0x01
    527e:	9a 81       	ldd	r25, Y+2	; 0x02
    5280:	83 54       	subi	r24, 0x43	; 67
    5282:	9f 4f       	sbci	r25, 0xFF	; 255
    5284:	fc 01       	movw	r30, r24
    5286:	10 82       	st	Z, r1
    5288:	11 82       	std	Z+1, r1	; 0x01
    528a:	12 82       	std	Z+2, r1	; 0x02
    528c:	13 82       	std	Z+3, r1	; 0x03
    528e:	89 81       	ldd	r24, Y+1	; 0x01
    5290:	9a 81       	ldd	r25, Y+2	; 0x02
    5292:	8f 53       	subi	r24, 0x3F	; 63
    5294:	9f 4f       	sbci	r25, 0xFF	; 255
    5296:	fc 01       	movw	r30, r24
    5298:	10 82       	st	Z, r1
    529a:	11 82       	std	Z+1, r1	; 0x01
    529c:	12 82       	std	Z+2, r1	; 0x02
    529e:	13 82       	std	Z+3, r1	; 0x03
    52a0:	89 81       	ldd	r24, Y+1	; 0x01
    52a2:	9a 81       	ldd	r25, Y+2	; 0x02
    52a4:	8b 53       	subi	r24, 0x3B	; 59
    52a6:	9f 4f       	sbci	r25, 0xFF	; 255
    52a8:	fc 01       	movw	r30, r24
    52aa:	10 82       	st	Z, r1
    52ac:	11 82       	std	Z+1, r1	; 0x01
    52ae:	12 82       	std	Z+2, r1	; 0x02
    52b0:	13 82       	std	Z+3, r1	; 0x03
    52b2:	89 81       	ldd	r24, Y+1	; 0x01
    52b4:	9a 81       	ldd	r25, Y+2	; 0x02
    52b6:	87 53       	subi	r24, 0x37	; 55
    52b8:	9f 4f       	sbci	r25, 0xFF	; 255
    52ba:	fc 01       	movw	r30, r24
    52bc:	10 82       	st	Z, r1
    52be:	11 82       	std	Z+1, r1	; 0x01
    52c0:	12 82       	std	Z+2, r1	; 0x02
    52c2:	13 82       	std	Z+3, r1	; 0x03
    52c4:	89 81       	ldd	r24, Y+1	; 0x01
    52c6:	9a 81       	ldd	r25, Y+2	; 0x02
    52c8:	83 53       	subi	r24, 0x33	; 51
    52ca:	9f 4f       	sbci	r25, 0xFF	; 255
    52cc:	fc 01       	movw	r30, r24
    52ce:	10 82       	st	Z, r1
    52d0:	11 82       	std	Z+1, r1	; 0x01
    52d2:	12 82       	std	Z+2, r1	; 0x02
    52d4:	13 82       	std	Z+3, r1	; 0x03
    52d6:	89 81       	ldd	r24, Y+1	; 0x01
    52d8:	9a 81       	ldd	r25, Y+2	; 0x02
    52da:	8f 52       	subi	r24, 0x2F	; 47
    52dc:	9f 4f       	sbci	r25, 0xFF	; 255
    52de:	fc 01       	movw	r30, r24
    52e0:	10 82       	st	Z, r1
    52e2:	11 82       	std	Z+1, r1	; 0x01
    52e4:	12 82       	std	Z+2, r1	; 0x02
    52e6:	13 82       	std	Z+3, r1	; 0x03
    52e8:	89 81       	ldd	r24, Y+1	; 0x01
    52ea:	9a 81       	ldd	r25, Y+2	; 0x02
    52ec:	8b 52       	subi	r24, 0x2B	; 43
    52ee:	9f 4f       	sbci	r25, 0xFF	; 255
    52f0:	fc 01       	movw	r30, r24
    52f2:	10 82       	st	Z, r1
    52f4:	11 82       	std	Z+1, r1	; 0x01
    52f6:	12 82       	std	Z+2, r1	; 0x02
    52f8:	13 82       	std	Z+3, r1	; 0x03
				{
				
				}
    52fa:	0f 90       	pop	r0
    52fc:	0f 90       	pop	r0
    52fe:	df 91       	pop	r29
    5300:	cf 91       	pop	r28
    5302:	08 95       	ret

00005304 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>:
			
				~SystemTelemetryMessage() {}
    5304:	cf 93       	push	r28
    5306:	df 93       	push	r29
    5308:	1f 92       	push	r1
    530a:	1f 92       	push	r1
    530c:	cd b7       	in	r28, 0x3d	; 61
    530e:	de b7       	in	r29, 0x3e	; 62
    5310:	9a 83       	std	Y+2, r25	; 0x02
    5312:	89 83       	std	Y+1, r24	; 0x01
    5314:	89 81       	ldd	r24, Y+1	; 0x01
    5316:	9a 81       	ldd	r25, Y+2	; 0x02
    5318:	2e e3       	ldi	r18, 0x3E	; 62
    531a:	32 e0       	ldi	r19, 0x02	; 2
    531c:	fc 01       	movw	r30, r24
    531e:	31 83       	std	Z+1, r19	; 0x01
    5320:	20 83       	st	Z, r18
    5322:	89 81       	ldd	r24, Y+1	; 0x01
    5324:	9a 81       	ldd	r25, Y+2	; 0x02
    5326:	0e 94 b3 22 	call	0x4566	; 0x4566 <_ZN10helicopter8messages7MessageD1Ev>
    532a:	80 e0       	ldi	r24, 0x00	; 0
    532c:	90 e0       	ldi	r25, 0x00	; 0
    532e:	81 70       	andi	r24, 0x01	; 1
    5330:	99 27       	eor	r25, r25
    5332:	00 97       	sbiw	r24, 0x00	; 0
    5334:	21 f0       	breq	.+8      	; 0x533e <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev+0x3a>
    5336:	89 81       	ldd	r24, Y+1	; 0x01
    5338:	9a 81       	ldd	r25, Y+2	; 0x02
    533a:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    533e:	0f 90       	pop	r0
    5340:	0f 90       	pop	r0
    5342:	df 91       	pop	r29
    5344:	cf 91       	pop	r28
    5346:	08 95       	ret

00005348 <_ZN10helicopter8messages22SystemTelemetryMessageD0Ev>:
    5348:	cf 93       	push	r28
    534a:	df 93       	push	r29
    534c:	1f 92       	push	r1
    534e:	1f 92       	push	r1
    5350:	cd b7       	in	r28, 0x3d	; 61
    5352:	de b7       	in	r29, 0x3e	; 62
    5354:	9a 83       	std	Y+2, r25	; 0x02
    5356:	89 83       	std	Y+1, r24	; 0x01
    5358:	89 81       	ldd	r24, Y+1	; 0x01
    535a:	9a 81       	ldd	r25, Y+2	; 0x02
    535c:	0e 94 82 29 	call	0x5304	; 0x5304 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>
    5360:	89 81       	ldd	r24, Y+1	; 0x01
    5362:	9a 81       	ldd	r25, Y+2	; 0x02
    5364:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    5368:	0f 90       	pop	r0
    536a:	0f 90       	pop	r0
    536c:	df 91       	pop	r29
    536e:	cf 91       	pop	r28
    5370:	08 95       	ret

00005372 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv>:

using namespace helicopter::messages;


byte *SystemTelemetryMessage::getBytes()
{
    5372:	cf 93       	push	r28
    5374:	df 93       	push	r29
    5376:	00 d0       	rcall	.+0      	; 0x5378 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv+0x6>
    5378:	00 d0       	rcall	.+0      	; 0x537a <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv+0x8>
    537a:	cd b7       	in	r28, 0x3d	; 61
    537c:	de b7       	in	r29, 0x3e	; 62
    537e:	9e 83       	std	Y+6, r25	; 0x06
    5380:	8d 83       	std	Y+5, r24	; 0x05
	byte *msg = new byte[MessageSize];
    5382:	85 ed       	ldi	r24, 0xD5	; 213
    5384:	90 e0       	ldi	r25, 0x00	; 0
    5386:	0e 94 2e 3d 	call	0x7a5c	; 0x7a5c <_Znaj>
    538a:	9a 83       	std	Y+2, r25	; 0x02
    538c:	89 83       	std	Y+1, r24	; 0x01
	byte *msgPtr = msg;
    538e:	89 81       	ldd	r24, Y+1	; 0x01
    5390:	9a 81       	ldd	r25, Y+2	; 0x02
    5392:	9c 83       	std	Y+4, r25	; 0x04
    5394:	8b 83       	std	Y+3, r24	; 0x03
	
	encode (msgPtr, msgType);
    5396:	8d 81       	ldd	r24, Y+5	; 0x05
    5398:	9e 81       	ldd	r25, Y+6	; 0x06
    539a:	ac 01       	movw	r20, r24
    539c:	4e 5f       	subi	r20, 0xFE	; 254
    539e:	5f 4f       	sbci	r21, 0xFF	; 255
    53a0:	8d 81       	ldd	r24, Y+5	; 0x05
    53a2:	9e 81       	ldd	r25, Y+6	; 0x06
    53a4:	9e 01       	movw	r18, r28
    53a6:	2d 5f       	subi	r18, 0xFD	; 253
    53a8:	3f 4f       	sbci	r19, 0xFF	; 255
    53aa:	b9 01       	movw	r22, r18
    53ac:	0e 94 2f 24 	call	0x485e	; 0x485e <_ZN10helicopter8messages7Message6encodeERPhRh>
	encode (msgPtr, MagYaw);
    53b0:	8d 81       	ldd	r24, Y+5	; 0x05
    53b2:	9e 81       	ldd	r25, Y+6	; 0x06
    53b4:	ac 01       	movw	r20, r24
    53b6:	4b 5f       	subi	r20, 0xFB	; 251
    53b8:	5f 4f       	sbci	r21, 0xFF	; 255
    53ba:	8d 81       	ldd	r24, Y+5	; 0x05
    53bc:	9e 81       	ldd	r25, Y+6	; 0x06
    53be:	9e 01       	movw	r18, r28
    53c0:	2d 5f       	subi	r18, 0xFD	; 253
    53c2:	3f 4f       	sbci	r19, 0xFF	; 255
    53c4:	b9 01       	movw	r22, r18
    53c6:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawVelocityDegreesPerSecond);
    53ca:	8d 81       	ldd	r24, Y+5	; 0x05
    53cc:	9e 81       	ldd	r25, Y+6	; 0x06
    53ce:	ac 01       	movw	r20, r24
    53d0:	47 5f       	subi	r20, 0xF7	; 247
    53d2:	5f 4f       	sbci	r21, 0xFF	; 255
    53d4:	8d 81       	ldd	r24, Y+5	; 0x05
    53d6:	9e 81       	ldd	r25, Y+6	; 0x06
    53d8:	9e 01       	movw	r18, r28
    53da:	2d 5f       	subi	r18, 0xFD	; 253
    53dc:	3f 4f       	sbci	r19, 0xFF	; 255
    53de:	b9 01       	movw	r22, r18
    53e0:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawIntegral);
    53e4:	8d 81       	ldd	r24, Y+5	; 0x05
    53e6:	9e 81       	ldd	r25, Y+6	; 0x06
    53e8:	ac 01       	movw	r20, r24
    53ea:	43 5f       	subi	r20, 0xF3	; 243
    53ec:	5f 4f       	sbci	r21, 0xFF	; 255
    53ee:	8d 81       	ldd	r24, Y+5	; 0x05
    53f0:	9e 81       	ldd	r25, Y+6	; 0x06
    53f2:	9e 01       	movw	r18, r28
    53f4:	2d 5f       	subi	r18, 0xFD	; 253
    53f6:	3f 4f       	sbci	r19, 0xFF	; 255
    53f8:	b9 01       	movw	r22, r18
    53fa:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawProportional);
    53fe:	8d 81       	ldd	r24, Y+5	; 0x05
    5400:	9e 81       	ldd	r25, Y+6	; 0x06
    5402:	ac 01       	movw	r20, r24
    5404:	4f 5e       	subi	r20, 0xEF	; 239
    5406:	5f 4f       	sbci	r21, 0xFF	; 255
    5408:	8d 81       	ldd	r24, Y+5	; 0x05
    540a:	9e 81       	ldd	r25, Y+6	; 0x06
    540c:	9e 01       	movw	r18, r28
    540e:	2d 5f       	subi	r18, 0xFD	; 253
    5410:	3f 4f       	sbci	r19, 0xFF	; 255
    5412:	b9 01       	movw	r22, r18
    5414:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawDerivativeError);
    5418:	8d 81       	ldd	r24, Y+5	; 0x05
    541a:	9e 81       	ldd	r25, Y+6	; 0x06
    541c:	ac 01       	movw	r20, r24
    541e:	4b 5e       	subi	r20, 0xEB	; 235
    5420:	5f 4f       	sbci	r21, 0xFF	; 255
    5422:	8d 81       	ldd	r24, Y+5	; 0x05
    5424:	9e 81       	ldd	r25, Y+6	; 0x06
    5426:	9e 01       	movw	r18, r28
    5428:	2d 5f       	subi	r18, 0xFD	; 253
    542a:	3f 4f       	sbci	r19, 0xFF	; 255
    542c:	b9 01       	movw	r22, r18
    542e:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawControl);
    5432:	8d 81       	ldd	r24, Y+5	; 0x05
    5434:	9e 81       	ldd	r25, Y+6	; 0x06
    5436:	ac 01       	movw	r20, r24
    5438:	47 5e       	subi	r20, 0xE7	; 231
    543a:	5f 4f       	sbci	r21, 0xFF	; 255
    543c:	8d 81       	ldd	r24, Y+5	; 0x05
    543e:	9e 81       	ldd	r25, Y+6	; 0x06
    5440:	9e 01       	movw	r18, r28
    5442:	2d 5f       	subi	r18, 0xFD	; 253
    5444:	3f 4f       	sbci	r19, 0xFF	; 255
    5446:	b9 01       	movw	r22, r18
    5448:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawIntegralGain);
    544c:	8d 81       	ldd	r24, Y+5	; 0x05
    544e:	9e 81       	ldd	r25, Y+6	; 0x06
    5450:	ac 01       	movw	r20, r24
    5452:	43 5e       	subi	r20, 0xE3	; 227
    5454:	5f 4f       	sbci	r21, 0xFF	; 255
    5456:	8d 81       	ldd	r24, Y+5	; 0x05
    5458:	9e 81       	ldd	r25, Y+6	; 0x06
    545a:	9e 01       	movw	r18, r28
    545c:	2d 5f       	subi	r18, 0xFD	; 253
    545e:	3f 4f       	sbci	r19, 0xFF	; 255
    5460:	b9 01       	movw	r22, r18
    5462:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawDerivativeGain);
    5466:	8d 81       	ldd	r24, Y+5	; 0x05
    5468:	9e 81       	ldd	r25, Y+6	; 0x06
    546a:	ac 01       	movw	r20, r24
    546c:	4f 5d       	subi	r20, 0xDF	; 223
    546e:	5f 4f       	sbci	r21, 0xFF	; 255
    5470:	8d 81       	ldd	r24, Y+5	; 0x05
    5472:	9e 81       	ldd	r25, Y+6	; 0x06
    5474:	9e 01       	movw	r18, r28
    5476:	2d 5f       	subi	r18, 0xFD	; 253
    5478:	3f 4f       	sbci	r19, 0xFF	; 255
    547a:	b9 01       	movw	r22, r18
    547c:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawProportionalGain);
    5480:	8d 81       	ldd	r24, Y+5	; 0x05
    5482:	9e 81       	ldd	r25, Y+6	; 0x06
    5484:	ac 01       	movw	r20, r24
    5486:	4b 5d       	subi	r20, 0xDB	; 219
    5488:	5f 4f       	sbci	r21, 0xFF	; 255
    548a:	8d 81       	ldd	r24, Y+5	; 0x05
    548c:	9e 81       	ldd	r25, Y+6	; 0x06
    548e:	9e 01       	movw	r18, r28
    5490:	2d 5f       	subi	r18, 0xFD	; 253
    5492:	3f 4f       	sbci	r19, 0xFF	; 255
    5494:	b9 01       	movw	r22, r18
    5496:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawAntiWindupGain);
    549a:	8d 81       	ldd	r24, Y+5	; 0x05
    549c:	9e 81       	ldd	r25, Y+6	; 0x06
    549e:	ac 01       	movw	r20, r24
    54a0:	47 5d       	subi	r20, 0xD7	; 215
    54a2:	5f 4f       	sbci	r21, 0xFF	; 255
    54a4:	8d 81       	ldd	r24, Y+5	; 0x05
    54a6:	9e 81       	ldd	r25, Y+6	; 0x06
    54a8:	9e 01       	movw	r18, r28
    54aa:	2d 5f       	subi	r18, 0xFD	; 253
    54ac:	3f 4f       	sbci	r19, 0xFF	; 255
    54ae:	b9 01       	movw	r22, r18
    54b0:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	


	encode (msgPtr, XNEDBodyFrame);
    54b4:	8d 81       	ldd	r24, Y+5	; 0x05
    54b6:	9e 81       	ldd	r25, Y+6	; 0x06
    54b8:	ac 01       	movw	r20, r24
    54ba:	43 5d       	subi	r20, 0xD3	; 211
    54bc:	5f 4f       	sbci	r21, 0xFF	; 255
    54be:	8d 81       	ldd	r24, Y+5	; 0x05
    54c0:	9e 81       	ldd	r25, Y+6	; 0x06
    54c2:	9e 01       	movw	r18, r28
    54c4:	2d 5f       	subi	r18, 0xFD	; 253
    54c6:	3f 4f       	sbci	r19, 0xFF	; 255
    54c8:	b9 01       	movw	r22, r18
    54ca:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XVelocityMetersPerSecond);
    54ce:	8d 81       	ldd	r24, Y+5	; 0x05
    54d0:	9e 81       	ldd	r25, Y+6	; 0x06
    54d2:	ac 01       	movw	r20, r24
    54d4:	4f 5c       	subi	r20, 0xCF	; 207
    54d6:	5f 4f       	sbci	r21, 0xFF	; 255
    54d8:	8d 81       	ldd	r24, Y+5	; 0x05
    54da:	9e 81       	ldd	r25, Y+6	; 0x06
    54dc:	9e 01       	movw	r18, r28
    54de:	2d 5f       	subi	r18, 0xFD	; 253
    54e0:	3f 4f       	sbci	r19, 0xFF	; 255
    54e2:	b9 01       	movw	r22, r18
    54e4:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ThetaPitchDegrees);	
    54e8:	8d 81       	ldd	r24, Y+5	; 0x05
    54ea:	9e 81       	ldd	r25, Y+6	; 0x06
    54ec:	ac 01       	movw	r20, r24
    54ee:	4b 5c       	subi	r20, 0xCB	; 203
    54f0:	5f 4f       	sbci	r21, 0xFF	; 255
    54f2:	8d 81       	ldd	r24, Y+5	; 0x05
    54f4:	9e 81       	ldd	r25, Y+6	; 0x06
    54f6:	9e 01       	movw	r18, r28
    54f8:	2d 5f       	subi	r18, 0xFD	; 253
    54fa:	3f 4f       	sbci	r19, 0xFF	; 255
    54fc:	b9 01       	movw	r22, r18
    54fe:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XIntegral);
    5502:	8d 81       	ldd	r24, Y+5	; 0x05
    5504:	9e 81       	ldd	r25, Y+6	; 0x06
    5506:	ac 01       	movw	r20, r24
    5508:	47 5c       	subi	r20, 0xC7	; 199
    550a:	5f 4f       	sbci	r21, 0xFF	; 255
    550c:	8d 81       	ldd	r24, Y+5	; 0x05
    550e:	9e 81       	ldd	r25, Y+6	; 0x06
    5510:	9e 01       	movw	r18, r28
    5512:	2d 5f       	subi	r18, 0xFD	; 253
    5514:	3f 4f       	sbci	r19, 0xFF	; 255
    5516:	b9 01       	movw	r22, r18
    5518:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XProportional);
    551c:	8d 81       	ldd	r24, Y+5	; 0x05
    551e:	9e 81       	ldd	r25, Y+6	; 0x06
    5520:	ac 01       	movw	r20, r24
    5522:	43 5c       	subi	r20, 0xC3	; 195
    5524:	5f 4f       	sbci	r21, 0xFF	; 255
    5526:	8d 81       	ldd	r24, Y+5	; 0x05
    5528:	9e 81       	ldd	r25, Y+6	; 0x06
    552a:	9e 01       	movw	r18, r28
    552c:	2d 5f       	subi	r18, 0xFD	; 253
    552e:	3f 4f       	sbci	r19, 0xFF	; 255
    5530:	b9 01       	movw	r22, r18
    5532:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XDerivativeError);
    5536:	8d 81       	ldd	r24, Y+5	; 0x05
    5538:	9e 81       	ldd	r25, Y+6	; 0x06
    553a:	ac 01       	movw	r20, r24
    553c:	4f 5b       	subi	r20, 0xBF	; 191
    553e:	5f 4f       	sbci	r21, 0xFF	; 255
    5540:	8d 81       	ldd	r24, Y+5	; 0x05
    5542:	9e 81       	ldd	r25, Y+6	; 0x06
    5544:	9e 01       	movw	r18, r28
    5546:	2d 5f       	subi	r18, 0xFD	; 253
    5548:	3f 4f       	sbci	r19, 0xFF	; 255
    554a:	b9 01       	movw	r22, r18
    554c:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LongitudeControl);
    5550:	8d 81       	ldd	r24, Y+5	; 0x05
    5552:	9e 81       	ldd	r25, Y+6	; 0x06
    5554:	ac 01       	movw	r20, r24
    5556:	4b 5b       	subi	r20, 0xBB	; 187
    5558:	5f 4f       	sbci	r21, 0xFF	; 255
    555a:	8d 81       	ldd	r24, Y+5	; 0x05
    555c:	9e 81       	ldd	r25, Y+6	; 0x06
    555e:	9e 01       	movw	r18, r28
    5560:	2d 5f       	subi	r18, 0xFD	; 253
    5562:	3f 4f       	sbci	r19, 0xFF	; 255
    5564:	b9 01       	movw	r22, r18
    5566:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XIntegralGain);
    556a:	8d 81       	ldd	r24, Y+5	; 0x05
    556c:	9e 81       	ldd	r25, Y+6	; 0x06
    556e:	ac 01       	movw	r20, r24
    5570:	47 5b       	subi	r20, 0xB7	; 183
    5572:	5f 4f       	sbci	r21, 0xFF	; 255
    5574:	8d 81       	ldd	r24, Y+5	; 0x05
    5576:	9e 81       	ldd	r25, Y+6	; 0x06
    5578:	9e 01       	movw	r18, r28
    557a:	2d 5f       	subi	r18, 0xFD	; 253
    557c:	3f 4f       	sbci	r19, 0xFF	; 255
    557e:	b9 01       	movw	r22, r18
    5580:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XDerivativeGain);
    5584:	8d 81       	ldd	r24, Y+5	; 0x05
    5586:	9e 81       	ldd	r25, Y+6	; 0x06
    5588:	ac 01       	movw	r20, r24
    558a:	43 5b       	subi	r20, 0xB3	; 179
    558c:	5f 4f       	sbci	r21, 0xFF	; 255
    558e:	8d 81       	ldd	r24, Y+5	; 0x05
    5590:	9e 81       	ldd	r25, Y+6	; 0x06
    5592:	9e 01       	movw	r18, r28
    5594:	2d 5f       	subi	r18, 0xFD	; 253
    5596:	3f 4f       	sbci	r19, 0xFF	; 255
    5598:	b9 01       	movw	r22, r18
    559a:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XProportionalGain);
    559e:	8d 81       	ldd	r24, Y+5	; 0x05
    55a0:	9e 81       	ldd	r25, Y+6	; 0x06
    55a2:	ac 01       	movw	r20, r24
    55a4:	4f 5a       	subi	r20, 0xAF	; 175
    55a6:	5f 4f       	sbci	r21, 0xFF	; 255
    55a8:	8d 81       	ldd	r24, Y+5	; 0x05
    55aa:	9e 81       	ldd	r25, Y+6	; 0x06
    55ac:	9e 01       	movw	r18, r28
    55ae:	2d 5f       	subi	r18, 0xFD	; 253
    55b0:	3f 4f       	sbci	r19, 0xFF	; 255
    55b2:	b9 01       	movw	r22, r18
    55b4:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XAntiWindupGain);	
    55b8:	8d 81       	ldd	r24, Y+5	; 0x05
    55ba:	9e 81       	ldd	r25, Y+6	; 0x06
    55bc:	ac 01       	movw	r20, r24
    55be:	4b 5a       	subi	r20, 0xAB	; 171
    55c0:	5f 4f       	sbci	r21, 0xFF	; 255
    55c2:	8d 81       	ldd	r24, Y+5	; 0x05
    55c4:	9e 81       	ldd	r25, Y+6	; 0x06
    55c6:	9e 01       	movw	r18, r28
    55c8:	2d 5f       	subi	r18, 0xFD	; 253
    55ca:	3f 4f       	sbci	r19, 0xFF	; 255
    55cc:	b9 01       	movw	r22, r18
    55ce:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LongitudeInnerLoopGain);	
    55d2:	8d 81       	ldd	r24, Y+5	; 0x05
    55d4:	9e 81       	ldd	r25, Y+6	; 0x06
    55d6:	ac 01       	movw	r20, r24
    55d8:	47 5a       	subi	r20, 0xA7	; 167
    55da:	5f 4f       	sbci	r21, 0xFF	; 255
    55dc:	8d 81       	ldd	r24, Y+5	; 0x05
    55de:	9e 81       	ldd	r25, Y+6	; 0x06
    55e0:	9e 01       	movw	r18, r28
    55e2:	2d 5f       	subi	r18, 0xFD	; 253
    55e4:	3f 4f       	sbci	r19, 0xFF	; 255
    55e6:	b9 01       	movw	r22, r18
    55e8:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XLongitudeOuterLoopSetpoint);
    55ec:	8d 81       	ldd	r24, Y+5	; 0x05
    55ee:	9e 81       	ldd	r25, Y+6	; 0x06
    55f0:	ac 01       	movw	r20, r24
    55f2:	43 5a       	subi	r20, 0xA3	; 163
    55f4:	5f 4f       	sbci	r21, 0xFF	; 255
    55f6:	8d 81       	ldd	r24, Y+5	; 0x05
    55f8:	9e 81       	ldd	r25, Y+6	; 0x06
    55fa:	9e 01       	movw	r18, r28
    55fc:	2d 5f       	subi	r18, 0xFD	; 253
    55fe:	3f 4f       	sbci	r19, 0xFF	; 255
    5600:	b9 01       	movw	r22, r18
    5602:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	
	encode (msgPtr, YNEDBodyFrame);
    5606:	8d 81       	ldd	r24, Y+5	; 0x05
    5608:	9e 81       	ldd	r25, Y+6	; 0x06
    560a:	ac 01       	movw	r20, r24
    560c:	4f 59       	subi	r20, 0x9F	; 159
    560e:	5f 4f       	sbci	r21, 0xFF	; 255
    5610:	8d 81       	ldd	r24, Y+5	; 0x05
    5612:	9e 81       	ldd	r25, Y+6	; 0x06
    5614:	9e 01       	movw	r18, r28
    5616:	2d 5f       	subi	r18, 0xFD	; 253
    5618:	3f 4f       	sbci	r19, 0xFF	; 255
    561a:	b9 01       	movw	r22, r18
    561c:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YVelocityMetersPerSecond);
    5620:	8d 81       	ldd	r24, Y+5	; 0x05
    5622:	9e 81       	ldd	r25, Y+6	; 0x06
    5624:	ac 01       	movw	r20, r24
    5626:	4b 59       	subi	r20, 0x9B	; 155
    5628:	5f 4f       	sbci	r21, 0xFF	; 255
    562a:	8d 81       	ldd	r24, Y+5	; 0x05
    562c:	9e 81       	ldd	r25, Y+6	; 0x06
    562e:	9e 01       	movw	r18, r28
    5630:	2d 5f       	subi	r18, 0xFD	; 253
    5632:	3f 4f       	sbci	r19, 0xFF	; 255
    5634:	b9 01       	movw	r22, r18
    5636:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, PhiRollDegrees);
    563a:	8d 81       	ldd	r24, Y+5	; 0x05
    563c:	9e 81       	ldd	r25, Y+6	; 0x06
    563e:	ac 01       	movw	r20, r24
    5640:	47 59       	subi	r20, 0x97	; 151
    5642:	5f 4f       	sbci	r21, 0xFF	; 255
    5644:	8d 81       	ldd	r24, Y+5	; 0x05
    5646:	9e 81       	ldd	r25, Y+6	; 0x06
    5648:	9e 01       	movw	r18, r28
    564a:	2d 5f       	subi	r18, 0xFD	; 253
    564c:	3f 4f       	sbci	r19, 0xFF	; 255
    564e:	b9 01       	movw	r22, r18
    5650:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YIntegral);
    5654:	8d 81       	ldd	r24, Y+5	; 0x05
    5656:	9e 81       	ldd	r25, Y+6	; 0x06
    5658:	ac 01       	movw	r20, r24
    565a:	43 59       	subi	r20, 0x93	; 147
    565c:	5f 4f       	sbci	r21, 0xFF	; 255
    565e:	8d 81       	ldd	r24, Y+5	; 0x05
    5660:	9e 81       	ldd	r25, Y+6	; 0x06
    5662:	9e 01       	movw	r18, r28
    5664:	2d 5f       	subi	r18, 0xFD	; 253
    5666:	3f 4f       	sbci	r19, 0xFF	; 255
    5668:	b9 01       	movw	r22, r18
    566a:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YProportional);
    566e:	8d 81       	ldd	r24, Y+5	; 0x05
    5670:	9e 81       	ldd	r25, Y+6	; 0x06
    5672:	ac 01       	movw	r20, r24
    5674:	4f 58       	subi	r20, 0x8F	; 143
    5676:	5f 4f       	sbci	r21, 0xFF	; 255
    5678:	8d 81       	ldd	r24, Y+5	; 0x05
    567a:	9e 81       	ldd	r25, Y+6	; 0x06
    567c:	9e 01       	movw	r18, r28
    567e:	2d 5f       	subi	r18, 0xFD	; 253
    5680:	3f 4f       	sbci	r19, 0xFF	; 255
    5682:	b9 01       	movw	r22, r18
    5684:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YDerivativeError);
    5688:	8d 81       	ldd	r24, Y+5	; 0x05
    568a:	9e 81       	ldd	r25, Y+6	; 0x06
    568c:	ac 01       	movw	r20, r24
    568e:	4b 58       	subi	r20, 0x8B	; 139
    5690:	5f 4f       	sbci	r21, 0xFF	; 255
    5692:	8d 81       	ldd	r24, Y+5	; 0x05
    5694:	9e 81       	ldd	r25, Y+6	; 0x06
    5696:	9e 01       	movw	r18, r28
    5698:	2d 5f       	subi	r18, 0xFD	; 253
    569a:	3f 4f       	sbci	r19, 0xFF	; 255
    569c:	b9 01       	movw	r22, r18
    569e:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LateralControl);
    56a2:	8d 81       	ldd	r24, Y+5	; 0x05
    56a4:	9e 81       	ldd	r25, Y+6	; 0x06
    56a6:	ac 01       	movw	r20, r24
    56a8:	47 58       	subi	r20, 0x87	; 135
    56aa:	5f 4f       	sbci	r21, 0xFF	; 255
    56ac:	8d 81       	ldd	r24, Y+5	; 0x05
    56ae:	9e 81       	ldd	r25, Y+6	; 0x06
    56b0:	9e 01       	movw	r18, r28
    56b2:	2d 5f       	subi	r18, 0xFD	; 253
    56b4:	3f 4f       	sbci	r19, 0xFF	; 255
    56b6:	b9 01       	movw	r22, r18
    56b8:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YIntegralGain);
    56bc:	8d 81       	ldd	r24, Y+5	; 0x05
    56be:	9e 81       	ldd	r25, Y+6	; 0x06
    56c0:	ac 01       	movw	r20, r24
    56c2:	43 58       	subi	r20, 0x83	; 131
    56c4:	5f 4f       	sbci	r21, 0xFF	; 255
    56c6:	8d 81       	ldd	r24, Y+5	; 0x05
    56c8:	9e 81       	ldd	r25, Y+6	; 0x06
    56ca:	9e 01       	movw	r18, r28
    56cc:	2d 5f       	subi	r18, 0xFD	; 253
    56ce:	3f 4f       	sbci	r19, 0xFF	; 255
    56d0:	b9 01       	movw	r22, r18
    56d2:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YDerivativeGain);
    56d6:	8d 81       	ldd	r24, Y+5	; 0x05
    56d8:	9e 81       	ldd	r25, Y+6	; 0x06
    56da:	ac 01       	movw	r20, r24
    56dc:	4f 57       	subi	r20, 0x7F	; 127
    56de:	5f 4f       	sbci	r21, 0xFF	; 255
    56e0:	8d 81       	ldd	r24, Y+5	; 0x05
    56e2:	9e 81       	ldd	r25, Y+6	; 0x06
    56e4:	9e 01       	movw	r18, r28
    56e6:	2d 5f       	subi	r18, 0xFD	; 253
    56e8:	3f 4f       	sbci	r19, 0xFF	; 255
    56ea:	b9 01       	movw	r22, r18
    56ec:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YProportionalGain);
    56f0:	8d 81       	ldd	r24, Y+5	; 0x05
    56f2:	9e 81       	ldd	r25, Y+6	; 0x06
    56f4:	ac 01       	movw	r20, r24
    56f6:	4b 57       	subi	r20, 0x7B	; 123
    56f8:	5f 4f       	sbci	r21, 0xFF	; 255
    56fa:	8d 81       	ldd	r24, Y+5	; 0x05
    56fc:	9e 81       	ldd	r25, Y+6	; 0x06
    56fe:	9e 01       	movw	r18, r28
    5700:	2d 5f       	subi	r18, 0xFD	; 253
    5702:	3f 4f       	sbci	r19, 0xFF	; 255
    5704:	b9 01       	movw	r22, r18
    5706:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YAntiWindupGain);
    570a:	8d 81       	ldd	r24, Y+5	; 0x05
    570c:	9e 81       	ldd	r25, Y+6	; 0x06
    570e:	ac 01       	movw	r20, r24
    5710:	47 57       	subi	r20, 0x77	; 119
    5712:	5f 4f       	sbci	r21, 0xFF	; 255
    5714:	8d 81       	ldd	r24, Y+5	; 0x05
    5716:	9e 81       	ldd	r25, Y+6	; 0x06
    5718:	9e 01       	movw	r18, r28
    571a:	2d 5f       	subi	r18, 0xFD	; 253
    571c:	3f 4f       	sbci	r19, 0xFF	; 255
    571e:	b9 01       	movw	r22, r18
    5720:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LateralInnerLoopGain);	
    5724:	8d 81       	ldd	r24, Y+5	; 0x05
    5726:	9e 81       	ldd	r25, Y+6	; 0x06
    5728:	ac 01       	movw	r20, r24
    572a:	43 57       	subi	r20, 0x73	; 115
    572c:	5f 4f       	sbci	r21, 0xFF	; 255
    572e:	8d 81       	ldd	r24, Y+5	; 0x05
    5730:	9e 81       	ldd	r25, Y+6	; 0x06
    5732:	9e 01       	movw	r18, r28
    5734:	2d 5f       	subi	r18, 0xFD	; 253
    5736:	3f 4f       	sbci	r19, 0xFF	; 255
    5738:	b9 01       	movw	r22, r18
    573a:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YLateralOuterLoopSetpoint);
    573e:	8d 81       	ldd	r24, Y+5	; 0x05
    5740:	9e 81       	ldd	r25, Y+6	; 0x06
    5742:	ac 01       	movw	r20, r24
    5744:	4f 56       	subi	r20, 0x6F	; 111
    5746:	5f 4f       	sbci	r21, 0xFF	; 255
    5748:	8d 81       	ldd	r24, Y+5	; 0x05
    574a:	9e 81       	ldd	r25, Y+6	; 0x06
    574c:	9e 01       	movw	r18, r28
    574e:	2d 5f       	subi	r18, 0xFD	; 253
    5750:	3f 4f       	sbci	r19, 0xFF	; 255
    5752:	b9 01       	movw	r22, r18
    5754:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	
	

	encode (msgPtr, AltitudeFeetAgl);
    5758:	8d 81       	ldd	r24, Y+5	; 0x05
    575a:	9e 81       	ldd	r25, Y+6	; 0x06
    575c:	ac 01       	movw	r20, r24
    575e:	4b 56       	subi	r20, 0x6B	; 107
    5760:	5f 4f       	sbci	r21, 0xFF	; 255
    5762:	8d 81       	ldd	r24, Y+5	; 0x05
    5764:	9e 81       	ldd	r25, Y+6	; 0x06
    5766:	9e 01       	movw	r18, r28
    5768:	2d 5f       	subi	r18, 0xFD	; 253
    576a:	3f 4f       	sbci	r19, 0xFF	; 255
    576c:	b9 01       	movw	r22, r18
    576e:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZVelocityMetersPerSecond);
    5772:	8d 81       	ldd	r24, Y+5	; 0x05
    5774:	9e 81       	ldd	r25, Y+6	; 0x06
    5776:	ac 01       	movw	r20, r24
    5778:	47 56       	subi	r20, 0x67	; 103
    577a:	5f 4f       	sbci	r21, 0xFF	; 255
    577c:	8d 81       	ldd	r24, Y+5	; 0x05
    577e:	9e 81       	ldd	r25, Y+6	; 0x06
    5780:	9e 01       	movw	r18, r28
    5782:	2d 5f       	subi	r18, 0xFD	; 253
    5784:	3f 4f       	sbci	r19, 0xFF	; 255
    5786:	b9 01       	movw	r22, r18
    5788:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZIntegral);
    578c:	8d 81       	ldd	r24, Y+5	; 0x05
    578e:	9e 81       	ldd	r25, Y+6	; 0x06
    5790:	ac 01       	movw	r20, r24
    5792:	43 56       	subi	r20, 0x63	; 99
    5794:	5f 4f       	sbci	r21, 0xFF	; 255
    5796:	8d 81       	ldd	r24, Y+5	; 0x05
    5798:	9e 81       	ldd	r25, Y+6	; 0x06
    579a:	9e 01       	movw	r18, r28
    579c:	2d 5f       	subi	r18, 0xFD	; 253
    579e:	3f 4f       	sbci	r19, 0xFF	; 255
    57a0:	b9 01       	movw	r22, r18
    57a2:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZProportional);
    57a6:	8d 81       	ldd	r24, Y+5	; 0x05
    57a8:	9e 81       	ldd	r25, Y+6	; 0x06
    57aa:	ac 01       	movw	r20, r24
    57ac:	4f 55       	subi	r20, 0x5F	; 95
    57ae:	5f 4f       	sbci	r21, 0xFF	; 255
    57b0:	8d 81       	ldd	r24, Y+5	; 0x05
    57b2:	9e 81       	ldd	r25, Y+6	; 0x06
    57b4:	9e 01       	movw	r18, r28
    57b6:	2d 5f       	subi	r18, 0xFD	; 253
    57b8:	3f 4f       	sbci	r19, 0xFF	; 255
    57ba:	b9 01       	movw	r22, r18
    57bc:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZDerivativeError);
    57c0:	8d 81       	ldd	r24, Y+5	; 0x05
    57c2:	9e 81       	ldd	r25, Y+6	; 0x06
    57c4:	ac 01       	movw	r20, r24
    57c6:	4b 55       	subi	r20, 0x5B	; 91
    57c8:	5f 4f       	sbci	r21, 0xFF	; 255
    57ca:	8d 81       	ldd	r24, Y+5	; 0x05
    57cc:	9e 81       	ldd	r25, Y+6	; 0x06
    57ce:	9e 01       	movw	r18, r28
    57d0:	2d 5f       	subi	r18, 0xFD	; 253
    57d2:	3f 4f       	sbci	r19, 0xFF	; 255
    57d4:	b9 01       	movw	r22, r18
    57d6:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, MainRotorCollectiveControl);
    57da:	8d 81       	ldd	r24, Y+5	; 0x05
    57dc:	9e 81       	ldd	r25, Y+6	; 0x06
    57de:	ac 01       	movw	r20, r24
    57e0:	47 55       	subi	r20, 0x57	; 87
    57e2:	5f 4f       	sbci	r21, 0xFF	; 255
    57e4:	8d 81       	ldd	r24, Y+5	; 0x05
    57e6:	9e 81       	ldd	r25, Y+6	; 0x06
    57e8:	9e 01       	movw	r18, r28
    57ea:	2d 5f       	subi	r18, 0xFD	; 253
    57ec:	3f 4f       	sbci	r19, 0xFF	; 255
    57ee:	b9 01       	movw	r22, r18
    57f0:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZIntegralGain);
    57f4:	8d 81       	ldd	r24, Y+5	; 0x05
    57f6:	9e 81       	ldd	r25, Y+6	; 0x06
    57f8:	ac 01       	movw	r20, r24
    57fa:	43 55       	subi	r20, 0x53	; 83
    57fc:	5f 4f       	sbci	r21, 0xFF	; 255
    57fe:	8d 81       	ldd	r24, Y+5	; 0x05
    5800:	9e 81       	ldd	r25, Y+6	; 0x06
    5802:	9e 01       	movw	r18, r28
    5804:	2d 5f       	subi	r18, 0xFD	; 253
    5806:	3f 4f       	sbci	r19, 0xFF	; 255
    5808:	b9 01       	movw	r22, r18
    580a:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZDerivativeGain);
    580e:	8d 81       	ldd	r24, Y+5	; 0x05
    5810:	9e 81       	ldd	r25, Y+6	; 0x06
    5812:	ac 01       	movw	r20, r24
    5814:	4f 54       	subi	r20, 0x4F	; 79
    5816:	5f 4f       	sbci	r21, 0xFF	; 255
    5818:	8d 81       	ldd	r24, Y+5	; 0x05
    581a:	9e 81       	ldd	r25, Y+6	; 0x06
    581c:	9e 01       	movw	r18, r28
    581e:	2d 5f       	subi	r18, 0xFD	; 253
    5820:	3f 4f       	sbci	r19, 0xFF	; 255
    5822:	b9 01       	movw	r22, r18
    5824:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZProportionalGain);
    5828:	8d 81       	ldd	r24, Y+5	; 0x05
    582a:	9e 81       	ldd	r25, Y+6	; 0x06
    582c:	ac 01       	movw	r20, r24
    582e:	4b 54       	subi	r20, 0x4B	; 75
    5830:	5f 4f       	sbci	r21, 0xFF	; 255
    5832:	8d 81       	ldd	r24, Y+5	; 0x05
    5834:	9e 81       	ldd	r25, Y+6	; 0x06
    5836:	9e 01       	movw	r18, r28
    5838:	2d 5f       	subi	r18, 0xFD	; 253
    583a:	3f 4f       	sbci	r19, 0xFF	; 255
    583c:	b9 01       	movw	r22, r18
    583e:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZAntiWindupGain);
    5842:	8d 81       	ldd	r24, Y+5	; 0x05
    5844:	9e 81       	ldd	r25, Y+6	; 0x06
    5846:	ac 01       	movw	r20, r24
    5848:	47 54       	subi	r20, 0x47	; 71
    584a:	5f 4f       	sbci	r21, 0xFF	; 255
    584c:	8d 81       	ldd	r24, Y+5	; 0x05
    584e:	9e 81       	ldd	r25, Y+6	; 0x06
    5850:	9e 01       	movw	r18, r28
    5852:	2d 5f       	subi	r18, 0xFD	; 253
    5854:	3f 4f       	sbci	r19, 0xFF	; 255
    5856:	b9 01       	movw	r22, r18
    5858:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZNEDBodyFrame);
    585c:	8d 81       	ldd	r24, Y+5	; 0x05
    585e:	9e 81       	ldd	r25, Y+6	; 0x06
    5860:	ac 01       	movw	r20, r24
    5862:	43 54       	subi	r20, 0x43	; 67
    5864:	5f 4f       	sbci	r21, 0xFF	; 255
    5866:	8d 81       	ldd	r24, Y+5	; 0x05
    5868:	9e 81       	ldd	r25, Y+6	; 0x06
    586a:	9e 01       	movw	r18, r28
    586c:	2d 5f       	subi	r18, 0xFD	; 253
    586e:	3f 4f       	sbci	r19, 0xFF	; 255
    5870:	b9 01       	movw	r22, r18
    5872:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
		
	
	encode(msgPtr, LatitudeDegrees);
    5876:	8d 81       	ldd	r24, Y+5	; 0x05
    5878:	9e 81       	ldd	r25, Y+6	; 0x06
    587a:	ac 01       	movw	r20, r24
    587c:	4f 53       	subi	r20, 0x3F	; 63
    587e:	5f 4f       	sbci	r21, 0xFF	; 255
    5880:	8d 81       	ldd	r24, Y+5	; 0x05
    5882:	9e 81       	ldd	r25, Y+6	; 0x06
    5884:	9e 01       	movw	r18, r28
    5886:	2d 5f       	subi	r18, 0xFD	; 253
    5888:	3f 4f       	sbci	r19, 0xFF	; 255
    588a:	b9 01       	movw	r22, r18
    588c:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode(msgPtr, LongitudeDegrees);
    5890:	8d 81       	ldd	r24, Y+5	; 0x05
    5892:	9e 81       	ldd	r25, Y+6	; 0x06
    5894:	ac 01       	movw	r20, r24
    5896:	4b 53       	subi	r20, 0x3B	; 59
    5898:	5f 4f       	sbci	r21, 0xFF	; 255
    589a:	8d 81       	ldd	r24, Y+5	; 0x05
    589c:	9e 81       	ldd	r25, Y+6	; 0x06
    589e:	9e 01       	movw	r18, r28
    58a0:	2d 5f       	subi	r18, 0xFD	; 253
    58a2:	3f 4f       	sbci	r19, 0xFF	; 255
    58a4:	b9 01       	movw	r22, r18
    58a6:	0e 94 01 24 	call	0x4802	; 0x4802 <_ZN10helicopter8messages7Message6encodeERPhRf>
	
	encode (msgPtr, Timeouts);
    58aa:	8d 81       	ldd	r24, Y+5	; 0x05
    58ac:	9e 81       	ldd	r25, Y+6	; 0x06
    58ae:	ac 01       	movw	r20, r24
    58b0:	47 53       	subi	r20, 0x37	; 55
    58b2:	5f 4f       	sbci	r21, 0xFF	; 255
    58b4:	8d 81       	ldd	r24, Y+5	; 0x05
    58b6:	9e 81       	ldd	r25, Y+6	; 0x06
    58b8:	9e 01       	movw	r18, r28
    58ba:	2d 5f       	subi	r18, 0xFD	; 253
    58bc:	3f 4f       	sbci	r19, 0xFF	; 255
    58be:	b9 01       	movw	r22, r18
    58c0:	0e 94 d3 23 	call	0x47a6	; 0x47a6 <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, UnrecognizedMsgTypes);
    58c4:	8d 81       	ldd	r24, Y+5	; 0x05
    58c6:	9e 81       	ldd	r25, Y+6	; 0x06
    58c8:	ac 01       	movw	r20, r24
    58ca:	43 53       	subi	r20, 0x33	; 51
    58cc:	5f 4f       	sbci	r21, 0xFF	; 255
    58ce:	8d 81       	ldd	r24, Y+5	; 0x05
    58d0:	9e 81       	ldd	r25, Y+6	; 0x06
    58d2:	9e 01       	movw	r18, r28
    58d4:	2d 5f       	subi	r18, 0xFD	; 253
    58d6:	3f 4f       	sbci	r19, 0xFF	; 255
    58d8:	b9 01       	movw	r22, r18
    58da:	0e 94 d3 23 	call	0x47a6	; 0x47a6 <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, ChecksumErrors);
    58de:	8d 81       	ldd	r24, Y+5	; 0x05
    58e0:	9e 81       	ldd	r25, Y+6	; 0x06
    58e2:	ac 01       	movw	r20, r24
    58e4:	4f 52       	subi	r20, 0x2F	; 47
    58e6:	5f 4f       	sbci	r21, 0xFF	; 255
    58e8:	8d 81       	ldd	r24, Y+5	; 0x05
    58ea:	9e 81       	ldd	r25, Y+6	; 0x06
    58ec:	9e 01       	movw	r18, r28
    58ee:	2d 5f       	subi	r18, 0xFD	; 253
    58f0:	3f 4f       	sbci	r19, 0xFF	; 255
    58f2:	b9 01       	movw	r22, r18
    58f4:	0e 94 d3 23 	call	0x47a6	; 0x47a6 <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, NumOfBlownFrames);
    58f8:	8d 81       	ldd	r24, Y+5	; 0x05
    58fa:	9e 81       	ldd	r25, Y+6	; 0x06
    58fc:	ac 01       	movw	r20, r24
    58fe:	4b 52       	subi	r20, 0x2B	; 43
    5900:	5f 4f       	sbci	r21, 0xFF	; 255
    5902:	8d 81       	ldd	r24, Y+5	; 0x05
    5904:	9e 81       	ldd	r25, Y+6	; 0x06
    5906:	9e 01       	movw	r18, r28
    5908:	2d 5f       	subi	r18, 0xFD	; 253
    590a:	3f 4f       	sbci	r19, 0xFF	; 255
    590c:	b9 01       	movw	r22, r18
    590e:	0e 94 d3 23 	call	0x47a6	; 0x47a6 <_ZN10helicopter8messages7Message6encodeERPhRl>
				
	return msg;
    5912:	89 81       	ldd	r24, Y+1	; 0x01
    5914:	9a 81       	ldd	r25, Y+2	; 0x02
}
    5916:	26 96       	adiw	r28, 0x06	; 6
    5918:	0f b6       	in	r0, 0x3f	; 63
    591a:	f8 94       	cli
    591c:	de bf       	out	0x3e, r29	; 62
    591e:	0f be       	out	0x3f, r0	; 63
    5920:	cd bf       	out	0x3d, r28	; 61
    5922:	df 91       	pop	r29
    5924:	cf 91       	pop	r28
    5926:	08 95       	ret

00005928 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh>:

void SystemTelemetryMessage::buildMessage(byte *message)
{
    5928:	cf 93       	push	r28
    592a:	df 93       	push	r29
    592c:	00 d0       	rcall	.+0      	; 0x592e <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x6>
    592e:	1f 92       	push	r1
    5930:	cd b7       	in	r28, 0x3d	; 61
    5932:	de b7       	in	r29, 0x3e	; 62
    5934:	9a 83       	std	Y+2, r25	; 0x02
    5936:	89 83       	std	Y+1, r24	; 0x01
    5938:	7c 83       	std	Y+4, r23	; 0x04
    593a:	6b 83       	std	Y+3, r22	; 0x03
	if (message != NULL)
    593c:	8b 81       	ldd	r24, Y+3	; 0x03
    593e:	9c 81       	ldd	r25, Y+4	; 0x04
    5940:	00 97       	sbiw	r24, 0x00	; 0
    5942:	09 f4       	brne	.+2      	; 0x5946 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x1e>
    5944:	be c2       	rjmp	.+1404   	; 0x5ec2 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x59a>
	{
		decode (message,msgType);
    5946:	89 81       	ldd	r24, Y+1	; 0x01
    5948:	9a 81       	ldd	r25, Y+2	; 0x02
    594a:	ac 01       	movw	r20, r24
    594c:	4e 5f       	subi	r20, 0xFE	; 254
    594e:	5f 4f       	sbci	r21, 0xFF	; 255
    5950:	89 81       	ldd	r24, Y+1	; 0x01
    5952:	9a 81       	ldd	r25, Y+2	; 0x02
    5954:	9e 01       	movw	r18, r28
    5956:	2d 5f       	subi	r18, 0xFD	; 253
    5958:	3f 4f       	sbci	r19, 0xFF	; 255
    595a:	b9 01       	movw	r22, r18
    595c:	0e 94 5c 24 	call	0x48b8	; 0x48b8 <_ZN10helicopter8messages7Message6decodeERPhRh>
		decode (message,MagYaw);
    5960:	89 81       	ldd	r24, Y+1	; 0x01
    5962:	9a 81       	ldd	r25, Y+2	; 0x02
    5964:	ac 01       	movw	r20, r24
    5966:	4b 5f       	subi	r20, 0xFB	; 251
    5968:	5f 4f       	sbci	r21, 0xFF	; 255
    596a:	89 81       	ldd	r24, Y+1	; 0x01
    596c:	9a 81       	ldd	r25, Y+2	; 0x02
    596e:	9e 01       	movw	r18, r28
    5970:	2d 5f       	subi	r18, 0xFD	; 253
    5972:	3f 4f       	sbci	r19, 0xFF	; 255
    5974:	b9 01       	movw	r22, r18
    5976:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawVelocityDegreesPerSecond);
    597a:	89 81       	ldd	r24, Y+1	; 0x01
    597c:	9a 81       	ldd	r25, Y+2	; 0x02
    597e:	ac 01       	movw	r20, r24
    5980:	47 5f       	subi	r20, 0xF7	; 247
    5982:	5f 4f       	sbci	r21, 0xFF	; 255
    5984:	89 81       	ldd	r24, Y+1	; 0x01
    5986:	9a 81       	ldd	r25, Y+2	; 0x02
    5988:	9e 01       	movw	r18, r28
    598a:	2d 5f       	subi	r18, 0xFD	; 253
    598c:	3f 4f       	sbci	r19, 0xFF	; 255
    598e:	b9 01       	movw	r22, r18
    5990:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawIntegral);
    5994:	89 81       	ldd	r24, Y+1	; 0x01
    5996:	9a 81       	ldd	r25, Y+2	; 0x02
    5998:	ac 01       	movw	r20, r24
    599a:	43 5f       	subi	r20, 0xF3	; 243
    599c:	5f 4f       	sbci	r21, 0xFF	; 255
    599e:	89 81       	ldd	r24, Y+1	; 0x01
    59a0:	9a 81       	ldd	r25, Y+2	; 0x02
    59a2:	9e 01       	movw	r18, r28
    59a4:	2d 5f       	subi	r18, 0xFD	; 253
    59a6:	3f 4f       	sbci	r19, 0xFF	; 255
    59a8:	b9 01       	movw	r22, r18
    59aa:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawProportional);
    59ae:	89 81       	ldd	r24, Y+1	; 0x01
    59b0:	9a 81       	ldd	r25, Y+2	; 0x02
    59b2:	ac 01       	movw	r20, r24
    59b4:	4f 5e       	subi	r20, 0xEF	; 239
    59b6:	5f 4f       	sbci	r21, 0xFF	; 255
    59b8:	89 81       	ldd	r24, Y+1	; 0x01
    59ba:	9a 81       	ldd	r25, Y+2	; 0x02
    59bc:	9e 01       	movw	r18, r28
    59be:	2d 5f       	subi	r18, 0xFD	; 253
    59c0:	3f 4f       	sbci	r19, 0xFF	; 255
    59c2:	b9 01       	movw	r22, r18
    59c4:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawDerivativeError);	
    59c8:	89 81       	ldd	r24, Y+1	; 0x01
    59ca:	9a 81       	ldd	r25, Y+2	; 0x02
    59cc:	ac 01       	movw	r20, r24
    59ce:	4b 5e       	subi	r20, 0xEB	; 235
    59d0:	5f 4f       	sbci	r21, 0xFF	; 255
    59d2:	89 81       	ldd	r24, Y+1	; 0x01
    59d4:	9a 81       	ldd	r25, Y+2	; 0x02
    59d6:	9e 01       	movw	r18, r28
    59d8:	2d 5f       	subi	r18, 0xFD	; 253
    59da:	3f 4f       	sbci	r19, 0xFF	; 255
    59dc:	b9 01       	movw	r22, r18
    59de:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawControl);	
    59e2:	89 81       	ldd	r24, Y+1	; 0x01
    59e4:	9a 81       	ldd	r25, Y+2	; 0x02
    59e6:	ac 01       	movw	r20, r24
    59e8:	47 5e       	subi	r20, 0xE7	; 231
    59ea:	5f 4f       	sbci	r21, 0xFF	; 255
    59ec:	89 81       	ldd	r24, Y+1	; 0x01
    59ee:	9a 81       	ldd	r25, Y+2	; 0x02
    59f0:	9e 01       	movw	r18, r28
    59f2:	2d 5f       	subi	r18, 0xFD	; 253
    59f4:	3f 4f       	sbci	r19, 0xFF	; 255
    59f6:	b9 01       	movw	r22, r18
    59f8:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawIntegralGain);
    59fc:	89 81       	ldd	r24, Y+1	; 0x01
    59fe:	9a 81       	ldd	r25, Y+2	; 0x02
    5a00:	ac 01       	movw	r20, r24
    5a02:	43 5e       	subi	r20, 0xE3	; 227
    5a04:	5f 4f       	sbci	r21, 0xFF	; 255
    5a06:	89 81       	ldd	r24, Y+1	; 0x01
    5a08:	9a 81       	ldd	r25, Y+2	; 0x02
    5a0a:	9e 01       	movw	r18, r28
    5a0c:	2d 5f       	subi	r18, 0xFD	; 253
    5a0e:	3f 4f       	sbci	r19, 0xFF	; 255
    5a10:	b9 01       	movw	r22, r18
    5a12:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawDerivativeGain);
    5a16:	89 81       	ldd	r24, Y+1	; 0x01
    5a18:	9a 81       	ldd	r25, Y+2	; 0x02
    5a1a:	ac 01       	movw	r20, r24
    5a1c:	4f 5d       	subi	r20, 0xDF	; 223
    5a1e:	5f 4f       	sbci	r21, 0xFF	; 255
    5a20:	89 81       	ldd	r24, Y+1	; 0x01
    5a22:	9a 81       	ldd	r25, Y+2	; 0x02
    5a24:	9e 01       	movw	r18, r28
    5a26:	2d 5f       	subi	r18, 0xFD	; 253
    5a28:	3f 4f       	sbci	r19, 0xFF	; 255
    5a2a:	b9 01       	movw	r22, r18
    5a2c:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawProportionalGain);
    5a30:	89 81       	ldd	r24, Y+1	; 0x01
    5a32:	9a 81       	ldd	r25, Y+2	; 0x02
    5a34:	ac 01       	movw	r20, r24
    5a36:	4b 5d       	subi	r20, 0xDB	; 219
    5a38:	5f 4f       	sbci	r21, 0xFF	; 255
    5a3a:	89 81       	ldd	r24, Y+1	; 0x01
    5a3c:	9a 81       	ldd	r25, Y+2	; 0x02
    5a3e:	9e 01       	movw	r18, r28
    5a40:	2d 5f       	subi	r18, 0xFD	; 253
    5a42:	3f 4f       	sbci	r19, 0xFF	; 255
    5a44:	b9 01       	movw	r22, r18
    5a46:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawAntiWindupGain);
    5a4a:	89 81       	ldd	r24, Y+1	; 0x01
    5a4c:	9a 81       	ldd	r25, Y+2	; 0x02
    5a4e:	ac 01       	movw	r20, r24
    5a50:	47 5d       	subi	r20, 0xD7	; 215
    5a52:	5f 4f       	sbci	r21, 0xFF	; 255
    5a54:	89 81       	ldd	r24, Y+1	; 0x01
    5a56:	9a 81       	ldd	r25, Y+2	; 0x02
    5a58:	9e 01       	movw	r18, r28
    5a5a:	2d 5f       	subi	r18, 0xFD	; 253
    5a5c:	3f 4f       	sbci	r19, 0xFF	; 255
    5a5e:	b9 01       	movw	r22, r18
    5a60:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		
		
		

		decode (message, XNEDBodyFrame);
    5a64:	89 81       	ldd	r24, Y+1	; 0x01
    5a66:	9a 81       	ldd	r25, Y+2	; 0x02
    5a68:	ac 01       	movw	r20, r24
    5a6a:	43 5d       	subi	r20, 0xD3	; 211
    5a6c:	5f 4f       	sbci	r21, 0xFF	; 255
    5a6e:	89 81       	ldd	r24, Y+1	; 0x01
    5a70:	9a 81       	ldd	r25, Y+2	; 0x02
    5a72:	9e 01       	movw	r18, r28
    5a74:	2d 5f       	subi	r18, 0xFD	; 253
    5a76:	3f 4f       	sbci	r19, 0xFF	; 255
    5a78:	b9 01       	movw	r22, r18
    5a7a:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XVelocityMetersPerSecond);
    5a7e:	89 81       	ldd	r24, Y+1	; 0x01
    5a80:	9a 81       	ldd	r25, Y+2	; 0x02
    5a82:	ac 01       	movw	r20, r24
    5a84:	4f 5c       	subi	r20, 0xCF	; 207
    5a86:	5f 4f       	sbci	r21, 0xFF	; 255
    5a88:	89 81       	ldd	r24, Y+1	; 0x01
    5a8a:	9a 81       	ldd	r25, Y+2	; 0x02
    5a8c:	9e 01       	movw	r18, r28
    5a8e:	2d 5f       	subi	r18, 0xFD	; 253
    5a90:	3f 4f       	sbci	r19, 0xFF	; 255
    5a92:	b9 01       	movw	r22, r18
    5a94:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ThetaPitchDegrees);
    5a98:	89 81       	ldd	r24, Y+1	; 0x01
    5a9a:	9a 81       	ldd	r25, Y+2	; 0x02
    5a9c:	ac 01       	movw	r20, r24
    5a9e:	4b 5c       	subi	r20, 0xCB	; 203
    5aa0:	5f 4f       	sbci	r21, 0xFF	; 255
    5aa2:	89 81       	ldd	r24, Y+1	; 0x01
    5aa4:	9a 81       	ldd	r25, Y+2	; 0x02
    5aa6:	9e 01       	movw	r18, r28
    5aa8:	2d 5f       	subi	r18, 0xFD	; 253
    5aaa:	3f 4f       	sbci	r19, 0xFF	; 255
    5aac:	b9 01       	movw	r22, r18
    5aae:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XIntegral);
    5ab2:	89 81       	ldd	r24, Y+1	; 0x01
    5ab4:	9a 81       	ldd	r25, Y+2	; 0x02
    5ab6:	ac 01       	movw	r20, r24
    5ab8:	47 5c       	subi	r20, 0xC7	; 199
    5aba:	5f 4f       	sbci	r21, 0xFF	; 255
    5abc:	89 81       	ldd	r24, Y+1	; 0x01
    5abe:	9a 81       	ldd	r25, Y+2	; 0x02
    5ac0:	9e 01       	movw	r18, r28
    5ac2:	2d 5f       	subi	r18, 0xFD	; 253
    5ac4:	3f 4f       	sbci	r19, 0xFF	; 255
    5ac6:	b9 01       	movw	r22, r18
    5ac8:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XProportional);
    5acc:	89 81       	ldd	r24, Y+1	; 0x01
    5ace:	9a 81       	ldd	r25, Y+2	; 0x02
    5ad0:	ac 01       	movw	r20, r24
    5ad2:	43 5c       	subi	r20, 0xC3	; 195
    5ad4:	5f 4f       	sbci	r21, 0xFF	; 255
    5ad6:	89 81       	ldd	r24, Y+1	; 0x01
    5ad8:	9a 81       	ldd	r25, Y+2	; 0x02
    5ada:	9e 01       	movw	r18, r28
    5adc:	2d 5f       	subi	r18, 0xFD	; 253
    5ade:	3f 4f       	sbci	r19, 0xFF	; 255
    5ae0:	b9 01       	movw	r22, r18
    5ae2:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XDerivativeError);
    5ae6:	89 81       	ldd	r24, Y+1	; 0x01
    5ae8:	9a 81       	ldd	r25, Y+2	; 0x02
    5aea:	ac 01       	movw	r20, r24
    5aec:	4f 5b       	subi	r20, 0xBF	; 191
    5aee:	5f 4f       	sbci	r21, 0xFF	; 255
    5af0:	89 81       	ldd	r24, Y+1	; 0x01
    5af2:	9a 81       	ldd	r25, Y+2	; 0x02
    5af4:	9e 01       	movw	r18, r28
    5af6:	2d 5f       	subi	r18, 0xFD	; 253
    5af8:	3f 4f       	sbci	r19, 0xFF	; 255
    5afa:	b9 01       	movw	r22, r18
    5afc:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LongitudeControl);
    5b00:	89 81       	ldd	r24, Y+1	; 0x01
    5b02:	9a 81       	ldd	r25, Y+2	; 0x02
    5b04:	ac 01       	movw	r20, r24
    5b06:	4b 5b       	subi	r20, 0xBB	; 187
    5b08:	5f 4f       	sbci	r21, 0xFF	; 255
    5b0a:	89 81       	ldd	r24, Y+1	; 0x01
    5b0c:	9a 81       	ldd	r25, Y+2	; 0x02
    5b0e:	9e 01       	movw	r18, r28
    5b10:	2d 5f       	subi	r18, 0xFD	; 253
    5b12:	3f 4f       	sbci	r19, 0xFF	; 255
    5b14:	b9 01       	movw	r22, r18
    5b16:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XIntegralGain);
    5b1a:	89 81       	ldd	r24, Y+1	; 0x01
    5b1c:	9a 81       	ldd	r25, Y+2	; 0x02
    5b1e:	ac 01       	movw	r20, r24
    5b20:	47 5b       	subi	r20, 0xB7	; 183
    5b22:	5f 4f       	sbci	r21, 0xFF	; 255
    5b24:	89 81       	ldd	r24, Y+1	; 0x01
    5b26:	9a 81       	ldd	r25, Y+2	; 0x02
    5b28:	9e 01       	movw	r18, r28
    5b2a:	2d 5f       	subi	r18, 0xFD	; 253
    5b2c:	3f 4f       	sbci	r19, 0xFF	; 255
    5b2e:	b9 01       	movw	r22, r18
    5b30:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XDerivativeGain);
    5b34:	89 81       	ldd	r24, Y+1	; 0x01
    5b36:	9a 81       	ldd	r25, Y+2	; 0x02
    5b38:	ac 01       	movw	r20, r24
    5b3a:	43 5b       	subi	r20, 0xB3	; 179
    5b3c:	5f 4f       	sbci	r21, 0xFF	; 255
    5b3e:	89 81       	ldd	r24, Y+1	; 0x01
    5b40:	9a 81       	ldd	r25, Y+2	; 0x02
    5b42:	9e 01       	movw	r18, r28
    5b44:	2d 5f       	subi	r18, 0xFD	; 253
    5b46:	3f 4f       	sbci	r19, 0xFF	; 255
    5b48:	b9 01       	movw	r22, r18
    5b4a:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XProportionalGain);
    5b4e:	89 81       	ldd	r24, Y+1	; 0x01
    5b50:	9a 81       	ldd	r25, Y+2	; 0x02
    5b52:	ac 01       	movw	r20, r24
    5b54:	4f 5a       	subi	r20, 0xAF	; 175
    5b56:	5f 4f       	sbci	r21, 0xFF	; 255
    5b58:	89 81       	ldd	r24, Y+1	; 0x01
    5b5a:	9a 81       	ldd	r25, Y+2	; 0x02
    5b5c:	9e 01       	movw	r18, r28
    5b5e:	2d 5f       	subi	r18, 0xFD	; 253
    5b60:	3f 4f       	sbci	r19, 0xFF	; 255
    5b62:	b9 01       	movw	r22, r18
    5b64:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XAntiWindupGain);
    5b68:	89 81       	ldd	r24, Y+1	; 0x01
    5b6a:	9a 81       	ldd	r25, Y+2	; 0x02
    5b6c:	ac 01       	movw	r20, r24
    5b6e:	4b 5a       	subi	r20, 0xAB	; 171
    5b70:	5f 4f       	sbci	r21, 0xFF	; 255
    5b72:	89 81       	ldd	r24, Y+1	; 0x01
    5b74:	9a 81       	ldd	r25, Y+2	; 0x02
    5b76:	9e 01       	movw	r18, r28
    5b78:	2d 5f       	subi	r18, 0xFD	; 253
    5b7a:	3f 4f       	sbci	r19, 0xFF	; 255
    5b7c:	b9 01       	movw	r22, r18
    5b7e:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LongitudeInnerLoopGain);
    5b82:	89 81       	ldd	r24, Y+1	; 0x01
    5b84:	9a 81       	ldd	r25, Y+2	; 0x02
    5b86:	ac 01       	movw	r20, r24
    5b88:	47 5a       	subi	r20, 0xA7	; 167
    5b8a:	5f 4f       	sbci	r21, 0xFF	; 255
    5b8c:	89 81       	ldd	r24, Y+1	; 0x01
    5b8e:	9a 81       	ldd	r25, Y+2	; 0x02
    5b90:	9e 01       	movw	r18, r28
    5b92:	2d 5f       	subi	r18, 0xFD	; 253
    5b94:	3f 4f       	sbci	r19, 0xFF	; 255
    5b96:	b9 01       	movw	r22, r18
    5b98:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XLongitudeOuterLoopSetpoint);
    5b9c:	89 81       	ldd	r24, Y+1	; 0x01
    5b9e:	9a 81       	ldd	r25, Y+2	; 0x02
    5ba0:	ac 01       	movw	r20, r24
    5ba2:	43 5a       	subi	r20, 0xA3	; 163
    5ba4:	5f 4f       	sbci	r21, 0xFF	; 255
    5ba6:	89 81       	ldd	r24, Y+1	; 0x01
    5ba8:	9a 81       	ldd	r25, Y+2	; 0x02
    5baa:	9e 01       	movw	r18, r28
    5bac:	2d 5f       	subi	r18, 0xFD	; 253
    5bae:	3f 4f       	sbci	r19, 0xFF	; 255
    5bb0:	b9 01       	movw	r22, r18
    5bb2:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>

		decode (message, YNEDBodyFrame);
    5bb6:	89 81       	ldd	r24, Y+1	; 0x01
    5bb8:	9a 81       	ldd	r25, Y+2	; 0x02
    5bba:	ac 01       	movw	r20, r24
    5bbc:	4f 59       	subi	r20, 0x9F	; 159
    5bbe:	5f 4f       	sbci	r21, 0xFF	; 255
    5bc0:	89 81       	ldd	r24, Y+1	; 0x01
    5bc2:	9a 81       	ldd	r25, Y+2	; 0x02
    5bc4:	9e 01       	movw	r18, r28
    5bc6:	2d 5f       	subi	r18, 0xFD	; 253
    5bc8:	3f 4f       	sbci	r19, 0xFF	; 255
    5bca:	b9 01       	movw	r22, r18
    5bcc:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YVelocityMetersPerSecond);
    5bd0:	89 81       	ldd	r24, Y+1	; 0x01
    5bd2:	9a 81       	ldd	r25, Y+2	; 0x02
    5bd4:	ac 01       	movw	r20, r24
    5bd6:	4b 59       	subi	r20, 0x9B	; 155
    5bd8:	5f 4f       	sbci	r21, 0xFF	; 255
    5bda:	89 81       	ldd	r24, Y+1	; 0x01
    5bdc:	9a 81       	ldd	r25, Y+2	; 0x02
    5bde:	9e 01       	movw	r18, r28
    5be0:	2d 5f       	subi	r18, 0xFD	; 253
    5be2:	3f 4f       	sbci	r19, 0xFF	; 255
    5be4:	b9 01       	movw	r22, r18
    5be6:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, PhiRollDegrees);
    5bea:	89 81       	ldd	r24, Y+1	; 0x01
    5bec:	9a 81       	ldd	r25, Y+2	; 0x02
    5bee:	ac 01       	movw	r20, r24
    5bf0:	47 59       	subi	r20, 0x97	; 151
    5bf2:	5f 4f       	sbci	r21, 0xFF	; 255
    5bf4:	89 81       	ldd	r24, Y+1	; 0x01
    5bf6:	9a 81       	ldd	r25, Y+2	; 0x02
    5bf8:	9e 01       	movw	r18, r28
    5bfa:	2d 5f       	subi	r18, 0xFD	; 253
    5bfc:	3f 4f       	sbci	r19, 0xFF	; 255
    5bfe:	b9 01       	movw	r22, r18
    5c00:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YIntegral);
    5c04:	89 81       	ldd	r24, Y+1	; 0x01
    5c06:	9a 81       	ldd	r25, Y+2	; 0x02
    5c08:	ac 01       	movw	r20, r24
    5c0a:	43 59       	subi	r20, 0x93	; 147
    5c0c:	5f 4f       	sbci	r21, 0xFF	; 255
    5c0e:	89 81       	ldd	r24, Y+1	; 0x01
    5c10:	9a 81       	ldd	r25, Y+2	; 0x02
    5c12:	9e 01       	movw	r18, r28
    5c14:	2d 5f       	subi	r18, 0xFD	; 253
    5c16:	3f 4f       	sbci	r19, 0xFF	; 255
    5c18:	b9 01       	movw	r22, r18
    5c1a:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YProportional);
    5c1e:	89 81       	ldd	r24, Y+1	; 0x01
    5c20:	9a 81       	ldd	r25, Y+2	; 0x02
    5c22:	ac 01       	movw	r20, r24
    5c24:	4f 58       	subi	r20, 0x8F	; 143
    5c26:	5f 4f       	sbci	r21, 0xFF	; 255
    5c28:	89 81       	ldd	r24, Y+1	; 0x01
    5c2a:	9a 81       	ldd	r25, Y+2	; 0x02
    5c2c:	9e 01       	movw	r18, r28
    5c2e:	2d 5f       	subi	r18, 0xFD	; 253
    5c30:	3f 4f       	sbci	r19, 0xFF	; 255
    5c32:	b9 01       	movw	r22, r18
    5c34:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YDerivativeError);
    5c38:	89 81       	ldd	r24, Y+1	; 0x01
    5c3a:	9a 81       	ldd	r25, Y+2	; 0x02
    5c3c:	ac 01       	movw	r20, r24
    5c3e:	4b 58       	subi	r20, 0x8B	; 139
    5c40:	5f 4f       	sbci	r21, 0xFF	; 255
    5c42:	89 81       	ldd	r24, Y+1	; 0x01
    5c44:	9a 81       	ldd	r25, Y+2	; 0x02
    5c46:	9e 01       	movw	r18, r28
    5c48:	2d 5f       	subi	r18, 0xFD	; 253
    5c4a:	3f 4f       	sbci	r19, 0xFF	; 255
    5c4c:	b9 01       	movw	r22, r18
    5c4e:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LateralControl);
    5c52:	89 81       	ldd	r24, Y+1	; 0x01
    5c54:	9a 81       	ldd	r25, Y+2	; 0x02
    5c56:	ac 01       	movw	r20, r24
    5c58:	47 58       	subi	r20, 0x87	; 135
    5c5a:	5f 4f       	sbci	r21, 0xFF	; 255
    5c5c:	89 81       	ldd	r24, Y+1	; 0x01
    5c5e:	9a 81       	ldd	r25, Y+2	; 0x02
    5c60:	9e 01       	movw	r18, r28
    5c62:	2d 5f       	subi	r18, 0xFD	; 253
    5c64:	3f 4f       	sbci	r19, 0xFF	; 255
    5c66:	b9 01       	movw	r22, r18
    5c68:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YIntegralGain);
    5c6c:	89 81       	ldd	r24, Y+1	; 0x01
    5c6e:	9a 81       	ldd	r25, Y+2	; 0x02
    5c70:	ac 01       	movw	r20, r24
    5c72:	43 58       	subi	r20, 0x83	; 131
    5c74:	5f 4f       	sbci	r21, 0xFF	; 255
    5c76:	89 81       	ldd	r24, Y+1	; 0x01
    5c78:	9a 81       	ldd	r25, Y+2	; 0x02
    5c7a:	9e 01       	movw	r18, r28
    5c7c:	2d 5f       	subi	r18, 0xFD	; 253
    5c7e:	3f 4f       	sbci	r19, 0xFF	; 255
    5c80:	b9 01       	movw	r22, r18
    5c82:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YDerivativeGain);
    5c86:	89 81       	ldd	r24, Y+1	; 0x01
    5c88:	9a 81       	ldd	r25, Y+2	; 0x02
    5c8a:	ac 01       	movw	r20, r24
    5c8c:	4f 57       	subi	r20, 0x7F	; 127
    5c8e:	5f 4f       	sbci	r21, 0xFF	; 255
    5c90:	89 81       	ldd	r24, Y+1	; 0x01
    5c92:	9a 81       	ldd	r25, Y+2	; 0x02
    5c94:	9e 01       	movw	r18, r28
    5c96:	2d 5f       	subi	r18, 0xFD	; 253
    5c98:	3f 4f       	sbci	r19, 0xFF	; 255
    5c9a:	b9 01       	movw	r22, r18
    5c9c:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YProportionalGain);
    5ca0:	89 81       	ldd	r24, Y+1	; 0x01
    5ca2:	9a 81       	ldd	r25, Y+2	; 0x02
    5ca4:	ac 01       	movw	r20, r24
    5ca6:	4b 57       	subi	r20, 0x7B	; 123
    5ca8:	5f 4f       	sbci	r21, 0xFF	; 255
    5caa:	89 81       	ldd	r24, Y+1	; 0x01
    5cac:	9a 81       	ldd	r25, Y+2	; 0x02
    5cae:	9e 01       	movw	r18, r28
    5cb0:	2d 5f       	subi	r18, 0xFD	; 253
    5cb2:	3f 4f       	sbci	r19, 0xFF	; 255
    5cb4:	b9 01       	movw	r22, r18
    5cb6:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YAntiWindupGain);
    5cba:	89 81       	ldd	r24, Y+1	; 0x01
    5cbc:	9a 81       	ldd	r25, Y+2	; 0x02
    5cbe:	ac 01       	movw	r20, r24
    5cc0:	47 57       	subi	r20, 0x77	; 119
    5cc2:	5f 4f       	sbci	r21, 0xFF	; 255
    5cc4:	89 81       	ldd	r24, Y+1	; 0x01
    5cc6:	9a 81       	ldd	r25, Y+2	; 0x02
    5cc8:	9e 01       	movw	r18, r28
    5cca:	2d 5f       	subi	r18, 0xFD	; 253
    5ccc:	3f 4f       	sbci	r19, 0xFF	; 255
    5cce:	b9 01       	movw	r22, r18
    5cd0:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LateralInnerLoopGain);
    5cd4:	89 81       	ldd	r24, Y+1	; 0x01
    5cd6:	9a 81       	ldd	r25, Y+2	; 0x02
    5cd8:	ac 01       	movw	r20, r24
    5cda:	43 57       	subi	r20, 0x73	; 115
    5cdc:	5f 4f       	sbci	r21, 0xFF	; 255
    5cde:	89 81       	ldd	r24, Y+1	; 0x01
    5ce0:	9a 81       	ldd	r25, Y+2	; 0x02
    5ce2:	9e 01       	movw	r18, r28
    5ce4:	2d 5f       	subi	r18, 0xFD	; 253
    5ce6:	3f 4f       	sbci	r19, 0xFF	; 255
    5ce8:	b9 01       	movw	r22, r18
    5cea:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YLateralOuterLoopSetpoint);
    5cee:	89 81       	ldd	r24, Y+1	; 0x01
    5cf0:	9a 81       	ldd	r25, Y+2	; 0x02
    5cf2:	ac 01       	movw	r20, r24
    5cf4:	4f 56       	subi	r20, 0x6F	; 111
    5cf6:	5f 4f       	sbci	r21, 0xFF	; 255
    5cf8:	89 81       	ldd	r24, Y+1	; 0x01
    5cfa:	9a 81       	ldd	r25, Y+2	; 0x02
    5cfc:	9e 01       	movw	r18, r28
    5cfe:	2d 5f       	subi	r18, 0xFD	; 253
    5d00:	3f 4f       	sbci	r19, 0xFF	; 255
    5d02:	b9 01       	movw	r22, r18
    5d04:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>

		decode (message, AltitudeFeetAgl);
    5d08:	89 81       	ldd	r24, Y+1	; 0x01
    5d0a:	9a 81       	ldd	r25, Y+2	; 0x02
    5d0c:	ac 01       	movw	r20, r24
    5d0e:	4b 56       	subi	r20, 0x6B	; 107
    5d10:	5f 4f       	sbci	r21, 0xFF	; 255
    5d12:	89 81       	ldd	r24, Y+1	; 0x01
    5d14:	9a 81       	ldd	r25, Y+2	; 0x02
    5d16:	9e 01       	movw	r18, r28
    5d18:	2d 5f       	subi	r18, 0xFD	; 253
    5d1a:	3f 4f       	sbci	r19, 0xFF	; 255
    5d1c:	b9 01       	movw	r22, r18
    5d1e:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZVelocityMetersPerSecond);
    5d22:	89 81       	ldd	r24, Y+1	; 0x01
    5d24:	9a 81       	ldd	r25, Y+2	; 0x02
    5d26:	ac 01       	movw	r20, r24
    5d28:	47 56       	subi	r20, 0x67	; 103
    5d2a:	5f 4f       	sbci	r21, 0xFF	; 255
    5d2c:	89 81       	ldd	r24, Y+1	; 0x01
    5d2e:	9a 81       	ldd	r25, Y+2	; 0x02
    5d30:	9e 01       	movw	r18, r28
    5d32:	2d 5f       	subi	r18, 0xFD	; 253
    5d34:	3f 4f       	sbci	r19, 0xFF	; 255
    5d36:	b9 01       	movw	r22, r18
    5d38:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZIntegral);
    5d3c:	89 81       	ldd	r24, Y+1	; 0x01
    5d3e:	9a 81       	ldd	r25, Y+2	; 0x02
    5d40:	ac 01       	movw	r20, r24
    5d42:	43 56       	subi	r20, 0x63	; 99
    5d44:	5f 4f       	sbci	r21, 0xFF	; 255
    5d46:	89 81       	ldd	r24, Y+1	; 0x01
    5d48:	9a 81       	ldd	r25, Y+2	; 0x02
    5d4a:	9e 01       	movw	r18, r28
    5d4c:	2d 5f       	subi	r18, 0xFD	; 253
    5d4e:	3f 4f       	sbci	r19, 0xFF	; 255
    5d50:	b9 01       	movw	r22, r18
    5d52:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZProportional);
    5d56:	89 81       	ldd	r24, Y+1	; 0x01
    5d58:	9a 81       	ldd	r25, Y+2	; 0x02
    5d5a:	ac 01       	movw	r20, r24
    5d5c:	4f 55       	subi	r20, 0x5F	; 95
    5d5e:	5f 4f       	sbci	r21, 0xFF	; 255
    5d60:	89 81       	ldd	r24, Y+1	; 0x01
    5d62:	9a 81       	ldd	r25, Y+2	; 0x02
    5d64:	9e 01       	movw	r18, r28
    5d66:	2d 5f       	subi	r18, 0xFD	; 253
    5d68:	3f 4f       	sbci	r19, 0xFF	; 255
    5d6a:	b9 01       	movw	r22, r18
    5d6c:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZDerivativeError);
    5d70:	89 81       	ldd	r24, Y+1	; 0x01
    5d72:	9a 81       	ldd	r25, Y+2	; 0x02
    5d74:	ac 01       	movw	r20, r24
    5d76:	4b 55       	subi	r20, 0x5B	; 91
    5d78:	5f 4f       	sbci	r21, 0xFF	; 255
    5d7a:	89 81       	ldd	r24, Y+1	; 0x01
    5d7c:	9a 81       	ldd	r25, Y+2	; 0x02
    5d7e:	9e 01       	movw	r18, r28
    5d80:	2d 5f       	subi	r18, 0xFD	; 253
    5d82:	3f 4f       	sbci	r19, 0xFF	; 255
    5d84:	b9 01       	movw	r22, r18
    5d86:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, MainRotorCollectiveControl);
    5d8a:	89 81       	ldd	r24, Y+1	; 0x01
    5d8c:	9a 81       	ldd	r25, Y+2	; 0x02
    5d8e:	ac 01       	movw	r20, r24
    5d90:	47 55       	subi	r20, 0x57	; 87
    5d92:	5f 4f       	sbci	r21, 0xFF	; 255
    5d94:	89 81       	ldd	r24, Y+1	; 0x01
    5d96:	9a 81       	ldd	r25, Y+2	; 0x02
    5d98:	9e 01       	movw	r18, r28
    5d9a:	2d 5f       	subi	r18, 0xFD	; 253
    5d9c:	3f 4f       	sbci	r19, 0xFF	; 255
    5d9e:	b9 01       	movw	r22, r18
    5da0:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZIntegralGain);
    5da4:	89 81       	ldd	r24, Y+1	; 0x01
    5da6:	9a 81       	ldd	r25, Y+2	; 0x02
    5da8:	ac 01       	movw	r20, r24
    5daa:	43 55       	subi	r20, 0x53	; 83
    5dac:	5f 4f       	sbci	r21, 0xFF	; 255
    5dae:	89 81       	ldd	r24, Y+1	; 0x01
    5db0:	9a 81       	ldd	r25, Y+2	; 0x02
    5db2:	9e 01       	movw	r18, r28
    5db4:	2d 5f       	subi	r18, 0xFD	; 253
    5db6:	3f 4f       	sbci	r19, 0xFF	; 255
    5db8:	b9 01       	movw	r22, r18
    5dba:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZDerivativeGain);
    5dbe:	89 81       	ldd	r24, Y+1	; 0x01
    5dc0:	9a 81       	ldd	r25, Y+2	; 0x02
    5dc2:	ac 01       	movw	r20, r24
    5dc4:	4f 54       	subi	r20, 0x4F	; 79
    5dc6:	5f 4f       	sbci	r21, 0xFF	; 255
    5dc8:	89 81       	ldd	r24, Y+1	; 0x01
    5dca:	9a 81       	ldd	r25, Y+2	; 0x02
    5dcc:	9e 01       	movw	r18, r28
    5dce:	2d 5f       	subi	r18, 0xFD	; 253
    5dd0:	3f 4f       	sbci	r19, 0xFF	; 255
    5dd2:	b9 01       	movw	r22, r18
    5dd4:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZProportionalGain);
    5dd8:	89 81       	ldd	r24, Y+1	; 0x01
    5dda:	9a 81       	ldd	r25, Y+2	; 0x02
    5ddc:	ac 01       	movw	r20, r24
    5dde:	4b 54       	subi	r20, 0x4B	; 75
    5de0:	5f 4f       	sbci	r21, 0xFF	; 255
    5de2:	89 81       	ldd	r24, Y+1	; 0x01
    5de4:	9a 81       	ldd	r25, Y+2	; 0x02
    5de6:	9e 01       	movw	r18, r28
    5de8:	2d 5f       	subi	r18, 0xFD	; 253
    5dea:	3f 4f       	sbci	r19, 0xFF	; 255
    5dec:	b9 01       	movw	r22, r18
    5dee:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZAntiWindupGain);
    5df2:	89 81       	ldd	r24, Y+1	; 0x01
    5df4:	9a 81       	ldd	r25, Y+2	; 0x02
    5df6:	ac 01       	movw	r20, r24
    5df8:	47 54       	subi	r20, 0x47	; 71
    5dfa:	5f 4f       	sbci	r21, 0xFF	; 255
    5dfc:	89 81       	ldd	r24, Y+1	; 0x01
    5dfe:	9a 81       	ldd	r25, Y+2	; 0x02
    5e00:	9e 01       	movw	r18, r28
    5e02:	2d 5f       	subi	r18, 0xFD	; 253
    5e04:	3f 4f       	sbci	r19, 0xFF	; 255
    5e06:	b9 01       	movw	r22, r18
    5e08:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZNEDBodyFrame);
    5e0c:	89 81       	ldd	r24, Y+1	; 0x01
    5e0e:	9a 81       	ldd	r25, Y+2	; 0x02
    5e10:	ac 01       	movw	r20, r24
    5e12:	43 54       	subi	r20, 0x43	; 67
    5e14:	5f 4f       	sbci	r21, 0xFF	; 255
    5e16:	89 81       	ldd	r24, Y+1	; 0x01
    5e18:	9a 81       	ldd	r25, Y+2	; 0x02
    5e1a:	9e 01       	movw	r18, r28
    5e1c:	2d 5f       	subi	r18, 0xFD	; 253
    5e1e:	3f 4f       	sbci	r19, 0xFF	; 255
    5e20:	b9 01       	movw	r22, r18
    5e22:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		
	
		decode (message, LatitudeDegrees);
    5e26:	89 81       	ldd	r24, Y+1	; 0x01
    5e28:	9a 81       	ldd	r25, Y+2	; 0x02
    5e2a:	ac 01       	movw	r20, r24
    5e2c:	4f 53       	subi	r20, 0x3F	; 63
    5e2e:	5f 4f       	sbci	r21, 0xFF	; 255
    5e30:	89 81       	ldd	r24, Y+1	; 0x01
    5e32:	9a 81       	ldd	r25, Y+2	; 0x02
    5e34:	9e 01       	movw	r18, r28
    5e36:	2d 5f       	subi	r18, 0xFD	; 253
    5e38:	3f 4f       	sbci	r19, 0xFF	; 255
    5e3a:	b9 01       	movw	r22, r18
    5e3c:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LongitudeDegrees);
    5e40:	89 81       	ldd	r24, Y+1	; 0x01
    5e42:	9a 81       	ldd	r25, Y+2	; 0x02
    5e44:	ac 01       	movw	r20, r24
    5e46:	4b 53       	subi	r20, 0x3B	; 59
    5e48:	5f 4f       	sbci	r21, 0xFF	; 255
    5e4a:	89 81       	ldd	r24, Y+1	; 0x01
    5e4c:	9a 81       	ldd	r25, Y+2	; 0x02
    5e4e:	9e 01       	movw	r18, r28
    5e50:	2d 5f       	subi	r18, 0xFD	; 253
    5e52:	3f 4f       	sbci	r19, 0xFF	; 255
    5e54:	b9 01       	movw	r22, r18
    5e56:	0e 94 b7 24 	call	0x496e	; 0x496e <_ZN10helicopter8messages7Message6decodeERPhRf>
						
		decode (message,Timeouts);
    5e5a:	89 81       	ldd	r24, Y+1	; 0x01
    5e5c:	9a 81       	ldd	r25, Y+2	; 0x02
    5e5e:	ac 01       	movw	r20, r24
    5e60:	47 53       	subi	r20, 0x37	; 55
    5e62:	5f 4f       	sbci	r21, 0xFF	; 255
    5e64:	89 81       	ldd	r24, Y+1	; 0x01
    5e66:	9a 81       	ldd	r25, Y+2	; 0x02
    5e68:	9e 01       	movw	r18, r28
    5e6a:	2d 5f       	subi	r18, 0xFD	; 253
    5e6c:	3f 4f       	sbci	r19, 0xFF	; 255
    5e6e:	b9 01       	movw	r22, r18
    5e70:	0e 94 89 24 	call	0x4912	; 0x4912 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message,UnrecognizedMsgTypes);
    5e74:	89 81       	ldd	r24, Y+1	; 0x01
    5e76:	9a 81       	ldd	r25, Y+2	; 0x02
    5e78:	ac 01       	movw	r20, r24
    5e7a:	43 53       	subi	r20, 0x33	; 51
    5e7c:	5f 4f       	sbci	r21, 0xFF	; 255
    5e7e:	89 81       	ldd	r24, Y+1	; 0x01
    5e80:	9a 81       	ldd	r25, Y+2	; 0x02
    5e82:	9e 01       	movw	r18, r28
    5e84:	2d 5f       	subi	r18, 0xFD	; 253
    5e86:	3f 4f       	sbci	r19, 0xFF	; 255
    5e88:	b9 01       	movw	r22, r18
    5e8a:	0e 94 89 24 	call	0x4912	; 0x4912 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message,ChecksumErrors);
    5e8e:	89 81       	ldd	r24, Y+1	; 0x01
    5e90:	9a 81       	ldd	r25, Y+2	; 0x02
    5e92:	ac 01       	movw	r20, r24
    5e94:	4f 52       	subi	r20, 0x2F	; 47
    5e96:	5f 4f       	sbci	r21, 0xFF	; 255
    5e98:	89 81       	ldd	r24, Y+1	; 0x01
    5e9a:	9a 81       	ldd	r25, Y+2	; 0x02
    5e9c:	9e 01       	movw	r18, r28
    5e9e:	2d 5f       	subi	r18, 0xFD	; 253
    5ea0:	3f 4f       	sbci	r19, 0xFF	; 255
    5ea2:	b9 01       	movw	r22, r18
    5ea4:	0e 94 89 24 	call	0x4912	; 0x4912 <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message,NumOfBlownFrames);
    5ea8:	89 81       	ldd	r24, Y+1	; 0x01
    5eaa:	9a 81       	ldd	r25, Y+2	; 0x02
    5eac:	ac 01       	movw	r20, r24
    5eae:	4b 52       	subi	r20, 0x2B	; 43
    5eb0:	5f 4f       	sbci	r21, 0xFF	; 255
    5eb2:	89 81       	ldd	r24, Y+1	; 0x01
    5eb4:	9a 81       	ldd	r25, Y+2	; 0x02
    5eb6:	9e 01       	movw	r18, r28
    5eb8:	2d 5f       	subi	r18, 0xFD	; 253
    5eba:	3f 4f       	sbci	r19, 0xFF	; 255
    5ebc:	b9 01       	movw	r22, r18
    5ebe:	0e 94 89 24 	call	0x4912	; 0x4912 <_ZN10helicopter8messages7Message6decodeERPhRl>
	}
}
    5ec2:	0f 90       	pop	r0
    5ec4:	0f 90       	pop	r0
    5ec6:	0f 90       	pop	r0
    5ec8:	0f 90       	pop	r0
    5eca:	df 91       	pop	r29
    5ecc:	cf 91       	pop	r28
    5ece:	08 95       	ret

00005ed0 <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh>:

SystemTelemetryMessage* SystemTelemetryMessage::buildMessageSt(byte *message)
{
    5ed0:	0f 93       	push	r16
    5ed2:	1f 93       	push	r17
    5ed4:	cf 93       	push	r28
    5ed6:	df 93       	push	r29
    5ed8:	00 d0       	rcall	.+0      	; 0x5eda <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh+0xa>
    5eda:	1f 92       	push	r1
    5edc:	cd b7       	in	r28, 0x3d	; 61
    5ede:	de b7       	in	r29, 0x3e	; 62
    5ee0:	9c 83       	std	Y+4, r25	; 0x04
    5ee2:	8b 83       	std	Y+3, r24	; 0x03
	SystemTelemetryMessage *msg = new SystemTelemetryMessage();
    5ee4:	89 ed       	ldi	r24, 0xD9	; 217
    5ee6:	90 e0       	ldi	r25, 0x00	; 0
    5ee8:	0e 94 08 3d 	call	0x7a10	; 0x7a10 <_Znwj>
    5eec:	8c 01       	movw	r16, r24
    5eee:	c8 01       	movw	r24, r16
    5ef0:	0e 94 a7 27 	call	0x4f4e	; 0x4f4e <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>
    5ef4:	1a 83       	std	Y+2, r17	; 0x02
    5ef6:	09 83       	std	Y+1, r16	; 0x01
	msg->buildMessage(message);
    5ef8:	89 81       	ldd	r24, Y+1	; 0x01
    5efa:	9a 81       	ldd	r25, Y+2	; 0x02
    5efc:	fc 01       	movw	r30, r24
    5efe:	80 81       	ld	r24, Z
    5f00:	91 81       	ldd	r25, Z+1	; 0x01
    5f02:	06 96       	adiw	r24, 0x06	; 6
    5f04:	fc 01       	movw	r30, r24
    5f06:	20 81       	ld	r18, Z
    5f08:	31 81       	ldd	r19, Z+1	; 0x01
    5f0a:	4b 81       	ldd	r20, Y+3	; 0x03
    5f0c:	5c 81       	ldd	r21, Y+4	; 0x04
    5f0e:	89 81       	ldd	r24, Y+1	; 0x01
    5f10:	9a 81       	ldd	r25, Y+2	; 0x02
    5f12:	ba 01       	movw	r22, r20
    5f14:	f9 01       	movw	r30, r18
    5f16:	19 95       	eicall
	
	return msg;
    5f18:	89 81       	ldd	r24, Y+1	; 0x01
    5f1a:	9a 81       	ldd	r25, Y+2	; 0x02
}
    5f1c:	0f 90       	pop	r0
    5f1e:	0f 90       	pop	r0
    5f20:	0f 90       	pop	r0
    5f22:	0f 90       	pop	r0
    5f24:	df 91       	pop	r29
    5f26:	cf 91       	pop	r28
    5f28:	1f 91       	pop	r17
    5f2a:	0f 91       	pop	r16
    5f2c:	08 95       	ret

00005f2e <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE>:

SystemTelemetryMessage * SystemTelemetryMessage::buildMessageFromModel(SystemModel *model)
{
    5f2e:	0f 93       	push	r16
    5f30:	1f 93       	push	r17
    5f32:	cf 93       	push	r28
    5f34:	df 93       	push	r29
    5f36:	00 d0       	rcall	.+0      	; 0x5f38 <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE+0xa>
    5f38:	1f 92       	push	r1
    5f3a:	cd b7       	in	r28, 0x3d	; 61
    5f3c:	de b7       	in	r29, 0x3e	; 62
    5f3e:	9c 83       	std	Y+4, r25	; 0x04
    5f40:	8b 83       	std	Y+3, r24	; 0x03
	SystemTelemetryMessage *message = new SystemTelemetryMessage();
    5f42:	89 ed       	ldi	r24, 0xD9	; 217
    5f44:	90 e0       	ldi	r25, 0x00	; 0
    5f46:	0e 94 08 3d 	call	0x7a10	; 0x7a10 <_Znwj>
    5f4a:	8c 01       	movw	r16, r24
    5f4c:	c8 01       	movw	r24, r16
    5f4e:	0e 94 a7 27 	call	0x4f4e	; 0x4f4e <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>
    5f52:	1a 83       	std	Y+2, r17	; 0x02
    5f54:	09 83       	std	Y+1, r16	; 0x01
	
	message->MagYaw = model->MagYawDegrees();
    5f56:	8b 81       	ldd	r24, Y+3	; 0x03
    5f58:	9c 81       	ldd	r25, Y+4	; 0x04
    5f5a:	0e 94 37 01 	call	0x26e	; 0x26e <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>
    5f5e:	dc 01       	movw	r26, r24
    5f60:	cb 01       	movw	r24, r22
    5f62:	29 81       	ldd	r18, Y+1	; 0x01
    5f64:	3a 81       	ldd	r19, Y+2	; 0x02
    5f66:	f9 01       	movw	r30, r18
    5f68:	85 83       	std	Z+5, r24	; 0x05
    5f6a:	96 83       	std	Z+6, r25	; 0x06
    5f6c:	a7 83       	std	Z+7, r26	; 0x07
    5f6e:	b0 87       	std	Z+8, r27	; 0x08
	message->YawDerivativeError = model->YawDerivativeError();
    5f70:	8b 81       	ldd	r24, Y+3	; 0x03
    5f72:	9c 81       	ldd	r25, Y+4	; 0x04
    5f74:	0e 94 3b 25 	call	0x4a76	; 0x4a76 <_ZNK10helicopter5model11SystemModel18YawDerivativeErrorEv>
    5f78:	dc 01       	movw	r26, r24
    5f7a:	cb 01       	movw	r24, r22
    5f7c:	29 81       	ldd	r18, Y+1	; 0x01
    5f7e:	3a 81       	ldd	r19, Y+2	; 0x02
    5f80:	f9 01       	movw	r30, r18
    5f82:	85 8b       	std	Z+21, r24	; 0x15
    5f84:	96 8b       	std	Z+22, r25	; 0x16
    5f86:	a7 8b       	std	Z+23, r26	; 0x17
    5f88:	b0 8f       	std	Z+24, r27	; 0x18
	message->YawIntegral = model->YawIntegral();
    5f8a:	8b 81       	ldd	r24, Y+3	; 0x03
    5f8c:	9c 81       	ldd	r25, Y+4	; 0x04
    5f8e:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>
    5f92:	dc 01       	movw	r26, r24
    5f94:	cb 01       	movw	r24, r22
    5f96:	29 81       	ldd	r18, Y+1	; 0x01
    5f98:	3a 81       	ldd	r19, Y+2	; 0x02
    5f9a:	f9 01       	movw	r30, r18
    5f9c:	85 87       	std	Z+13, r24	; 0x0d
    5f9e:	96 87       	std	Z+14, r25	; 0x0e
    5fa0:	a7 87       	std	Z+15, r26	; 0x0f
    5fa2:	b0 8b       	std	Z+16, r27	; 0x10
	message->YawProportional = model->YawProportional();
    5fa4:	8b 81       	ldd	r24, Y+3	; 0x03
    5fa6:	9c 81       	ldd	r25, Y+4	; 0x04
    5fa8:	0e 94 25 25 	call	0x4a4a	; 0x4a4a <_ZNK10helicopter5model11SystemModel15YawProportionalEv>
    5fac:	dc 01       	movw	r26, r24
    5fae:	cb 01       	movw	r24, r22
    5fb0:	29 81       	ldd	r18, Y+1	; 0x01
    5fb2:	3a 81       	ldd	r19, Y+2	; 0x02
    5fb4:	f9 01       	movw	r30, r18
    5fb6:	81 8b       	std	Z+17, r24	; 0x11
    5fb8:	92 8b       	std	Z+18, r25	; 0x12
    5fba:	a3 8b       	std	Z+19, r26	; 0x13
    5fbc:	b4 8b       	std	Z+20, r27	; 0x14
	message->YawVelocityDegreesPerSecond = model->YawVelocityDegreesPerSecond();
    5fbe:	8b 81       	ldd	r24, Y+3	; 0x03
    5fc0:	9c 81       	ldd	r25, Y+4	; 0x04
    5fc2:	0e 94 cf 01 	call	0x39e	; 0x39e <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>
    5fc6:	dc 01       	movw	r26, r24
    5fc8:	cb 01       	movw	r24, r22
    5fca:	29 81       	ldd	r18, Y+1	; 0x01
    5fcc:	3a 81       	ldd	r19, Y+2	; 0x02
    5fce:	f9 01       	movw	r30, r18
    5fd0:	81 87       	std	Z+9, r24	; 0x09
    5fd2:	92 87       	std	Z+10, r25	; 0x0a
    5fd4:	a3 87       	std	Z+11, r26	; 0x0b
    5fd6:	b4 87       	std	Z+12, r27	; 0x0c
	message->YawControl = model->YawControl();
    5fd8:	8b 81       	ldd	r24, Y+3	; 0x03
    5fda:	9c 81       	ldd	r25, Y+4	; 0x04
    5fdc:	0e 94 63 01 	call	0x2c6	; 0x2c6 <_ZNK10helicopter5model11SystemModel10YawControlEv>
    5fe0:	dc 01       	movw	r26, r24
    5fe2:	cb 01       	movw	r24, r22
    5fe4:	29 81       	ldd	r18, Y+1	; 0x01
    5fe6:	3a 81       	ldd	r19, Y+2	; 0x02
    5fe8:	f9 01       	movw	r30, r18
    5fea:	81 8f       	std	Z+25, r24	; 0x19
    5fec:	92 8f       	std	Z+26, r25	; 0x1a
    5fee:	a3 8f       	std	Z+27, r26	; 0x1b
    5ff0:	b4 8f       	std	Z+28, r27	; 0x1c
	

	message->ThetaPitchDegrees = model->ThetaPitchDegrees();
    5ff2:	8b 81       	ldd	r24, Y+3	; 0x03
    5ff4:	9c 81       	ldd	r25, Y+4	; 0x04
    5ff6:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <_ZNK10helicopter5model11SystemModel17ThetaPitchDegreesEv>
    5ffa:	dc 01       	movw	r26, r24
    5ffc:	cb 01       	movw	r24, r22
    5ffe:	29 81       	ldd	r18, Y+1	; 0x01
    6000:	3a 81       	ldd	r19, Y+2	; 0x02
    6002:	f9 01       	movw	r30, r18
    6004:	85 ab       	std	Z+53, r24	; 0x35
    6006:	96 ab       	std	Z+54, r25	; 0x36
    6008:	a7 ab       	std	Z+55, r26	; 0x37
    600a:	b0 af       	std	Z+56, r27	; 0x38
	message->XNEDBodyFrame = model->XNEDBodyFrame();
    600c:	8b 81       	ldd	r24, Y+3	; 0x03
    600e:	9c 81       	ldd	r25, Y+4	; 0x04
    6010:	0e 94 71 02 	call	0x4e2	; 0x4e2 <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>
    6014:	dc 01       	movw	r26, r24
    6016:	cb 01       	movw	r24, r22
    6018:	29 81       	ldd	r18, Y+1	; 0x01
    601a:	3a 81       	ldd	r19, Y+2	; 0x02
    601c:	f9 01       	movw	r30, r18
    601e:	85 a7       	std	Z+45, r24	; 0x2d
    6020:	96 a7       	std	Z+46, r25	; 0x2e
    6022:	a7 a7       	std	Z+47, r26	; 0x2f
    6024:	b0 ab       	std	Z+48, r27	; 0x30
	message->XDerivativeError = model->XDerivativeError();
    6026:	8b 81       	ldd	r24, Y+3	; 0x03
    6028:	9c 81       	ldd	r25, Y+4	; 0x04
    602a:	0e 94 89 25 	call	0x4b12	; 0x4b12 <_ZNK10helicopter5model11SystemModel16XDerivativeErrorEv>
    602e:	dc 01       	movw	r26, r24
    6030:	cb 01       	movw	r24, r22
    6032:	29 81       	ldd	r18, Y+1	; 0x01
    6034:	3a 81       	ldd	r19, Y+2	; 0x02
    6036:	2f 5b       	subi	r18, 0xBF	; 191
    6038:	3f 4f       	sbci	r19, 0xFF	; 255
    603a:	f9 01       	movw	r30, r18
    603c:	80 83       	st	Z, r24
    603e:	91 83       	std	Z+1, r25	; 0x01
    6040:	a2 83       	std	Z+2, r26	; 0x02
    6042:	b3 83       	std	Z+3, r27	; 0x03
	message->XIntegral = model->XIntegral();
    6044:	8b 81       	ldd	r24, Y+3	; 0x03
    6046:	9c 81       	ldd	r25, Y+4	; 0x04
    6048:	0e 94 8e 03 	call	0x71c	; 0x71c <_ZNK10helicopter5model11SystemModel9XIntegralEv>
    604c:	dc 01       	movw	r26, r24
    604e:	cb 01       	movw	r24, r22
    6050:	29 81       	ldd	r18, Y+1	; 0x01
    6052:	3a 81       	ldd	r19, Y+2	; 0x02
    6054:	f9 01       	movw	r30, r18
    6056:	81 af       	std	Z+57, r24	; 0x39
    6058:	92 af       	std	Z+58, r25	; 0x3a
    605a:	a3 af       	std	Z+59, r26	; 0x3b
    605c:	b4 af       	std	Z+60, r27	; 0x3c
	message->XProportional = model->XProportional();
    605e:	8b 81       	ldd	r24, Y+3	; 0x03
    6060:	9c 81       	ldd	r25, Y+4	; 0x04
    6062:	0e 94 71 25 	call	0x4ae2	; 0x4ae2 <_ZNK10helicopter5model11SystemModel13XProportionalEv>
    6066:	dc 01       	movw	r26, r24
    6068:	cb 01       	movw	r24, r22
    606a:	29 81       	ldd	r18, Y+1	; 0x01
    606c:	3a 81       	ldd	r19, Y+2	; 0x02
    606e:	23 5c       	subi	r18, 0xC3	; 195
    6070:	3f 4f       	sbci	r19, 0xFF	; 255
    6072:	f9 01       	movw	r30, r18
    6074:	80 83       	st	Z, r24
    6076:	91 83       	std	Z+1, r25	; 0x01
    6078:	a2 83       	std	Z+2, r26	; 0x02
    607a:	b3 83       	std	Z+3, r27	; 0x03
	message->XVelocityMetersPerSecond = model->XVelocityMetersPerSecond();
    607c:	8b 81       	ldd	r24, Y+3	; 0x03
    607e:	9c 81       	ldd	r25, Y+4	; 0x04
    6080:	0e 94 09 03 	call	0x612	; 0x612 <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>
    6084:	dc 01       	movw	r26, r24
    6086:	cb 01       	movw	r24, r22
    6088:	29 81       	ldd	r18, Y+1	; 0x01
    608a:	3a 81       	ldd	r19, Y+2	; 0x02
    608c:	f9 01       	movw	r30, r18
    608e:	81 ab       	std	Z+49, r24	; 0x31
    6090:	92 ab       	std	Z+50, r25	; 0x32
    6092:	a3 ab       	std	Z+51, r26	; 0x33
    6094:	b4 ab       	std	Z+52, r27	; 0x34
	message->LongitudeControl = model->LongitudeControl();
    6096:	8b 81       	ldd	r24, Y+3	; 0x03
    6098:	9c 81       	ldd	r25, Y+4	; 0x04
    609a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>
    609e:	dc 01       	movw	r26, r24
    60a0:	cb 01       	movw	r24, r22
    60a2:	29 81       	ldd	r18, Y+1	; 0x01
    60a4:	3a 81       	ldd	r19, Y+2	; 0x02
    60a6:	2b 5b       	subi	r18, 0xBB	; 187
    60a8:	3f 4f       	sbci	r19, 0xFF	; 255
    60aa:	f9 01       	movw	r30, r18
    60ac:	80 83       	st	Z, r24
    60ae:	91 83       	std	Z+1, r25	; 0x01
    60b0:	a2 83       	std	Z+2, r26	; 0x02
    60b2:	b3 83       	std	Z+3, r27	; 0x03
	message->XLongitudeOuterLoopSetpoint = model->XLongitudeOuterLoopSetpoint();
    60b4:	8b 81       	ldd	r24, Y+3	; 0x03
    60b6:	9c 81       	ldd	r25, Y+4	; 0x04
    60b8:	0e 94 35 03 	call	0x66a	; 0x66a <_ZNK10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEv>
    60bc:	dc 01       	movw	r26, r24
    60be:	cb 01       	movw	r24, r22
    60c0:	29 81       	ldd	r18, Y+1	; 0x01
    60c2:	3a 81       	ldd	r19, Y+2	; 0x02
    60c4:	23 5a       	subi	r18, 0xA3	; 163
    60c6:	3f 4f       	sbci	r19, 0xFF	; 255
    60c8:	f9 01       	movw	r30, r18
    60ca:	80 83       	st	Z, r24
    60cc:	91 83       	std	Z+1, r25	; 0x01
    60ce:	a2 83       	std	Z+2, r26	; 0x02
    60d0:	b3 83       	std	Z+3, r27	; 0x03

	
	message->PhiRollDegrees = model->PhiRollDegrees();
    60d2:	8b 81       	ldd	r24, Y+3	; 0x03
    60d4:	9c 81       	ldd	r25, Y+4	; 0x04
    60d6:	0e 94 96 05 	call	0xb2c	; 0xb2c <_ZNK10helicopter5model11SystemModel14PhiRollDegreesEv>
    60da:	dc 01       	movw	r26, r24
    60dc:	cb 01       	movw	r24, r22
    60de:	29 81       	ldd	r18, Y+1	; 0x01
    60e0:	3a 81       	ldd	r19, Y+2	; 0x02
    60e2:	27 59       	subi	r18, 0x97	; 151
    60e4:	3f 4f       	sbci	r19, 0xFF	; 255
    60e6:	f9 01       	movw	r30, r18
    60e8:	80 83       	st	Z, r24
    60ea:	91 83       	std	Z+1, r25	; 0x01
    60ec:	a2 83       	std	Z+2, r26	; 0x02
    60ee:	b3 83       	std	Z+3, r27	; 0x03
	message->YNEDBodyFrame = model->YNEDBodyFrame();
    60f0:	8b 81       	ldd	r24, Y+3	; 0x03
    60f2:	9c 81       	ldd	r25, Y+4	; 0x04
    60f4:	0e 94 04 04 	call	0x808	; 0x808 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>
    60f8:	dc 01       	movw	r26, r24
    60fa:	cb 01       	movw	r24, r22
    60fc:	29 81       	ldd	r18, Y+1	; 0x01
    60fe:	3a 81       	ldd	r19, Y+2	; 0x02
    6100:	2f 59       	subi	r18, 0x9F	; 159
    6102:	3f 4f       	sbci	r19, 0xFF	; 255
    6104:	f9 01       	movw	r30, r18
    6106:	80 83       	st	Z, r24
    6108:	91 83       	std	Z+1, r25	; 0x01
    610a:	a2 83       	std	Z+2, r26	; 0x02
    610c:	b3 83       	std	Z+3, r27	; 0x03
	message->YDerivativeError = model->YDerivativeError();
    610e:	8b 81       	ldd	r24, Y+3	; 0x03
    6110:	9c 81       	ldd	r25, Y+4	; 0x04
    6112:	0e 94 ff 25 	call	0x4bfe	; 0x4bfe <_ZNK10helicopter5model11SystemModel16YDerivativeErrorEv>
    6116:	dc 01       	movw	r26, r24
    6118:	cb 01       	movw	r24, r22
    611a:	29 81       	ldd	r18, Y+1	; 0x01
    611c:	3a 81       	ldd	r19, Y+2	; 0x02
    611e:	2b 58       	subi	r18, 0x8B	; 139
    6120:	3f 4f       	sbci	r19, 0xFF	; 255
    6122:	f9 01       	movw	r30, r18
    6124:	80 83       	st	Z, r24
    6126:	91 83       	std	Z+1, r25	; 0x01
    6128:	a2 83       	std	Z+2, r26	; 0x02
    612a:	b3 83       	std	Z+3, r27	; 0x03
	message->YIntegral = model->YIntegral();
    612c:	8b 81       	ldd	r24, Y+3	; 0x03
    612e:	9c 81       	ldd	r25, Y+4	; 0x04
    6130:	0e 94 38 05 	call	0xa70	; 0xa70 <_ZNK10helicopter5model11SystemModel9YIntegralEv>
    6134:	dc 01       	movw	r26, r24
    6136:	cb 01       	movw	r24, r22
    6138:	29 81       	ldd	r18, Y+1	; 0x01
    613a:	3a 81       	ldd	r19, Y+2	; 0x02
    613c:	23 59       	subi	r18, 0x93	; 147
    613e:	3f 4f       	sbci	r19, 0xFF	; 255
    6140:	f9 01       	movw	r30, r18
    6142:	80 83       	st	Z, r24
    6144:	91 83       	std	Z+1, r25	; 0x01
    6146:	a2 83       	std	Z+2, r26	; 0x02
    6148:	b3 83       	std	Z+3, r27	; 0x03
	message->YProportional = model->YProportional();
    614a:	8b 81       	ldd	r24, Y+3	; 0x03
    614c:	9c 81       	ldd	r25, Y+4	; 0x04
    614e:	0e 94 e7 25 	call	0x4bce	; 0x4bce <_ZNK10helicopter5model11SystemModel13YProportionalEv>
    6152:	dc 01       	movw	r26, r24
    6154:	cb 01       	movw	r24, r22
    6156:	29 81       	ldd	r18, Y+1	; 0x01
    6158:	3a 81       	ldd	r19, Y+2	; 0x02
    615a:	2f 58       	subi	r18, 0x8F	; 143
    615c:	3f 4f       	sbci	r19, 0xFF	; 255
    615e:	f9 01       	movw	r30, r18
    6160:	80 83       	st	Z, r24
    6162:	91 83       	std	Z+1, r25	; 0x01
    6164:	a2 83       	std	Z+2, r26	; 0x02
    6166:	b3 83       	std	Z+3, r27	; 0x03
	message->YVelocityMetersPerSecond = model->YVelocityMetersPerSecond();
    6168:	8b 81       	ldd	r24, Y+3	; 0x03
    616a:	9c 81       	ldd	r25, Y+4	; 0x04
    616c:	0e 94 aa 04 	call	0x954	; 0x954 <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>
    6170:	dc 01       	movw	r26, r24
    6172:	cb 01       	movw	r24, r22
    6174:	29 81       	ldd	r18, Y+1	; 0x01
    6176:	3a 81       	ldd	r19, Y+2	; 0x02
    6178:	2b 59       	subi	r18, 0x9B	; 155
    617a:	3f 4f       	sbci	r19, 0xFF	; 255
    617c:	f9 01       	movw	r30, r18
    617e:	80 83       	st	Z, r24
    6180:	91 83       	std	Z+1, r25	; 0x01
    6182:	a2 83       	std	Z+2, r26	; 0x02
    6184:	b3 83       	std	Z+3, r27	; 0x03
	message->LateralControl = model->LateralControl();
    6186:	8b 81       	ldd	r24, Y+3	; 0x03
    6188:	9c 81       	ldd	r25, Y+4	; 0x04
    618a:	0e 94 6f 04 	call	0x8de	; 0x8de <_ZNK10helicopter5model11SystemModel14LateralControlEv>
    618e:	dc 01       	movw	r26, r24
    6190:	cb 01       	movw	r24, r22
    6192:	29 81       	ldd	r18, Y+1	; 0x01
    6194:	3a 81       	ldd	r19, Y+2	; 0x02
    6196:	27 58       	subi	r18, 0x87	; 135
    6198:	3f 4f       	sbci	r19, 0xFF	; 255
    619a:	f9 01       	movw	r30, r18
    619c:	80 83       	st	Z, r24
    619e:	91 83       	std	Z+1, r25	; 0x01
    61a0:	a2 83       	std	Z+2, r26	; 0x02
    61a2:	b3 83       	std	Z+3, r27	; 0x03
	message->YLateralOuterLoopSetpoint = model->YLateralOuterLoopSetpoint();
    61a4:	8b 81       	ldd	r24, Y+3	; 0x03
    61a6:	9c 81       	ldd	r25, Y+4	; 0x04
    61a8:	0e 94 da 04 	call	0x9b4	; 0x9b4 <_ZNK10helicopter5model11SystemModel25YLateralOuterLoopSetpointEv>
    61ac:	dc 01       	movw	r26, r24
    61ae:	cb 01       	movw	r24, r22
    61b0:	29 81       	ldd	r18, Y+1	; 0x01
    61b2:	3a 81       	ldd	r19, Y+2	; 0x02
    61b4:	2f 56       	subi	r18, 0x6F	; 111
    61b6:	3f 4f       	sbci	r19, 0xFF	; 255
    61b8:	f9 01       	movw	r30, r18
    61ba:	80 83       	st	Z, r24
    61bc:	91 83       	std	Z+1, r25	; 0x01
    61be:	a2 83       	std	Z+2, r26	; 0x02
    61c0:	b3 83       	std	Z+3, r27	; 0x03
	
	
	
	message->AltitudeFeetAgl = model->AltitudeFeetAgl();
    61c2:	8b 81       	ldd	r24, Y+3	; 0x03
    61c4:	9c 81       	ldd	r25, Y+4	; 0x04
    61c6:	0e 94 25 18 	call	0x304a	; 0x304a <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    61ca:	dc 01       	movw	r26, r24
    61cc:	cb 01       	movw	r24, r22
    61ce:	29 81       	ldd	r18, Y+1	; 0x01
    61d0:	3a 81       	ldd	r19, Y+2	; 0x02
    61d2:	2b 56       	subi	r18, 0x6B	; 107
    61d4:	3f 4f       	sbci	r19, 0xFF	; 255
    61d6:	f9 01       	movw	r30, r18
    61d8:	80 83       	st	Z, r24
    61da:	91 83       	std	Z+1, r25	; 0x01
    61dc:	a2 83       	std	Z+2, r26	; 0x02
    61de:	b3 83       	std	Z+3, r27	; 0x03
	message->ZDerivativeError = model->ZDerivativeError();
    61e0:	8b 81       	ldd	r24, Y+3	; 0x03
    61e2:	9c 81       	ldd	r25, Y+4	; 0x04
    61e4:	0e 94 98 26 	call	0x4d30	; 0x4d30 <_ZNK10helicopter5model11SystemModel16ZDerivativeErrorEv>
    61e8:	dc 01       	movw	r26, r24
    61ea:	cb 01       	movw	r24, r22
    61ec:	29 81       	ldd	r18, Y+1	; 0x01
    61ee:	3a 81       	ldd	r19, Y+2	; 0x02
    61f0:	2b 55       	subi	r18, 0x5B	; 91
    61f2:	3f 4f       	sbci	r19, 0xFF	; 255
    61f4:	f9 01       	movw	r30, r18
    61f6:	80 83       	st	Z, r24
    61f8:	91 83       	std	Z+1, r25	; 0x01
    61fa:	a2 83       	std	Z+2, r26	; 0x02
    61fc:	b3 83       	std	Z+3, r27	; 0x03
	message->ZIntegral = model->ZIntegral();
    61fe:	8b 81       	ldd	r24, Y+3	; 0x03
    6200:	9c 81       	ldd	r25, Y+4	; 0x04
    6202:	0e 94 84 06 	call	0xd08	; 0xd08 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>
    6206:	dc 01       	movw	r26, r24
    6208:	cb 01       	movw	r24, r22
    620a:	29 81       	ldd	r18, Y+1	; 0x01
    620c:	3a 81       	ldd	r19, Y+2	; 0x02
    620e:	23 56       	subi	r18, 0x63	; 99
    6210:	3f 4f       	sbci	r19, 0xFF	; 255
    6212:	f9 01       	movw	r30, r18
    6214:	80 83       	st	Z, r24
    6216:	91 83       	std	Z+1, r25	; 0x01
    6218:	a2 83       	std	Z+2, r26	; 0x02
    621a:	b3 83       	std	Z+3, r27	; 0x03
	message->ZProportional = model->ZProportional();
    621c:	8b 81       	ldd	r24, Y+3	; 0x03
    621e:	9c 81       	ldd	r25, Y+4	; 0x04
    6220:	0e 94 80 26 	call	0x4d00	; 0x4d00 <_ZNK10helicopter5model11SystemModel13ZProportionalEv>
    6224:	dc 01       	movw	r26, r24
    6226:	cb 01       	movw	r24, r22
    6228:	29 81       	ldd	r18, Y+1	; 0x01
    622a:	3a 81       	ldd	r19, Y+2	; 0x02
    622c:	2f 55       	subi	r18, 0x5F	; 95
    622e:	3f 4f       	sbci	r19, 0xFF	; 255
    6230:	f9 01       	movw	r30, r18
    6232:	80 83       	st	Z, r24
    6234:	91 83       	std	Z+1, r25	; 0x01
    6236:	a2 83       	std	Z+2, r26	; 0x02
    6238:	b3 83       	std	Z+3, r27	; 0x03
	message->ZVelocityMetersPerSecond = (model->ZVelocityFeetPerSecond() / 3.2804f);
    623a:	8b 81       	ldd	r24, Y+3	; 0x03
    623c:	9c 81       	ldd	r25, Y+4	; 0x04
    623e:	0e 94 54 06 	call	0xca8	; 0xca8 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>
    6242:	dc 01       	movw	r26, r24
    6244:	cb 01       	movw	r24, r22
    6246:	23 e1       	ldi	r18, 0x13	; 19
    6248:	32 ef       	ldi	r19, 0xF2	; 242
    624a:	41 e5       	ldi	r20, 0x51	; 81
    624c:	50 e4       	ldi	r21, 0x40	; 64
    624e:	bc 01       	movw	r22, r24
    6250:	cd 01       	movw	r24, r26
    6252:	0e 94 74 43 	call	0x86e8	; 0x86e8 <__divsf3>
    6256:	dc 01       	movw	r26, r24
    6258:	cb 01       	movw	r24, r22
    625a:	29 81       	ldd	r18, Y+1	; 0x01
    625c:	3a 81       	ldd	r19, Y+2	; 0x02
    625e:	27 56       	subi	r18, 0x67	; 103
    6260:	3f 4f       	sbci	r19, 0xFF	; 255
    6262:	f9 01       	movw	r30, r18
    6264:	80 83       	st	Z, r24
    6266:	91 83       	std	Z+1, r25	; 0x01
    6268:	a2 83       	std	Z+2, r26	; 0x02
    626a:	b3 83       	std	Z+3, r27	; 0x03
	message->MainRotorCollectiveControl = model->MainRotorCollectiveControl();
    626c:	8b 81       	ldd	r24, Y+3	; 0x03
    626e:	9c 81       	ldd	r25, Y+4	; 0x04
    6270:	0e 94 de 05 	call	0xbbc	; 0xbbc <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>
    6274:	dc 01       	movw	r26, r24
    6276:	cb 01       	movw	r24, r22
    6278:	29 81       	ldd	r18, Y+1	; 0x01
    627a:	3a 81       	ldd	r19, Y+2	; 0x02
    627c:	27 55       	subi	r18, 0x57	; 87
    627e:	3f 4f       	sbci	r19, 0xFF	; 255
    6280:	f9 01       	movw	r30, r18
    6282:	80 83       	st	Z, r24
    6284:	91 83       	std	Z+1, r25	; 0x01
    6286:	a2 83       	std	Z+2, r26	; 0x02
    6288:	b3 83       	std	Z+3, r27	; 0x03
	message->ZNEDBodyFrame = model->ZNEDBodyFrame();
    628a:	8b 81       	ldd	r24, Y+3	; 0x03
    628c:	9c 81       	ldd	r25, Y+4	; 0x04
    628e:	0e 94 ae 05 	call	0xb5c	; 0xb5c <_ZNK10helicopter5model11SystemModel13ZNEDBodyFrameEv>
    6292:	dc 01       	movw	r26, r24
    6294:	cb 01       	movw	r24, r22
    6296:	29 81       	ldd	r18, Y+1	; 0x01
    6298:	3a 81       	ldd	r19, Y+2	; 0x02
    629a:	23 54       	subi	r18, 0x43	; 67
    629c:	3f 4f       	sbci	r19, 0xFF	; 255
    629e:	f9 01       	movw	r30, r18
    62a0:	80 83       	st	Z, r24
    62a2:	91 83       	std	Z+1, r25	; 0x01
    62a4:	a2 83       	std	Z+2, r26	; 0x02
    62a6:	b3 83       	std	Z+3, r27	; 0x03
	
	
	
	message->ChecksumErrors = model->ChecksumErrors();
    62a8:	8b 81       	ldd	r24, Y+3	; 0x03
    62aa:	9c 81       	ldd	r25, Y+4	; 0x04
    62ac:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>
    62b0:	dc 01       	movw	r26, r24
    62b2:	cb 01       	movw	r24, r22
    62b4:	29 81       	ldd	r18, Y+1	; 0x01
    62b6:	3a 81       	ldd	r19, Y+2	; 0x02
    62b8:	2f 52       	subi	r18, 0x2F	; 47
    62ba:	3f 4f       	sbci	r19, 0xFF	; 255
    62bc:	f9 01       	movw	r30, r18
    62be:	80 83       	st	Z, r24
    62c0:	91 83       	std	Z+1, r25	; 0x01
    62c2:	a2 83       	std	Z+2, r26	; 0x02
    62c4:	b3 83       	std	Z+3, r27	; 0x03
	message->Timeouts = model->Timeouts();
    62c6:	8b 81       	ldd	r24, Y+3	; 0x03
    62c8:	9c 81       	ldd	r25, Y+4	; 0x04
    62ca:	0e 94 f6 26 	call	0x4dec	; 0x4dec <_ZNK10helicopter5model11SystemModel8TimeoutsEv>
    62ce:	dc 01       	movw	r26, r24
    62d0:	cb 01       	movw	r24, r22
    62d2:	29 81       	ldd	r18, Y+1	; 0x01
    62d4:	3a 81       	ldd	r19, Y+2	; 0x02
    62d6:	27 53       	subi	r18, 0x37	; 55
    62d8:	3f 4f       	sbci	r19, 0xFF	; 255
    62da:	f9 01       	movw	r30, r18
    62dc:	80 83       	st	Z, r24
    62de:	91 83       	std	Z+1, r25	; 0x01
    62e0:	a2 83       	std	Z+2, r26	; 0x02
    62e2:	b3 83       	std	Z+3, r27	; 0x03
	message->UnrecognizedMsgTypes = model->UnrecognizedMsgTypes();
    62e4:	8b 81       	ldd	r24, Y+3	; 0x03
    62e6:	9c 81       	ldd	r25, Y+4	; 0x04
    62e8:	0e 94 31 27 	call	0x4e62	; 0x4e62 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>
    62ec:	dc 01       	movw	r26, r24
    62ee:	cb 01       	movw	r24, r22
    62f0:	29 81       	ldd	r18, Y+1	; 0x01
    62f2:	3a 81       	ldd	r19, Y+2	; 0x02
    62f4:	23 53       	subi	r18, 0x33	; 51
    62f6:	3f 4f       	sbci	r19, 0xFF	; 255
    62f8:	f9 01       	movw	r30, r18
    62fa:	80 83       	st	Z, r24
    62fc:	91 83       	std	Z+1, r25	; 0x01
    62fe:	a2 83       	std	Z+2, r26	; 0x02
    6300:	b3 83       	std	Z+3, r27	; 0x03
	message->NumOfBlownFrames = model->BlownFrames();
    6302:	8b 81       	ldd	r24, Y+3	; 0x03
    6304:	9c 81       	ldd	r25, Y+4	; 0x04
    6306:	0e 94 05 07 	call	0xe0a	; 0xe0a <_ZNK10helicopter5model11SystemModel11BlownFramesEv>
    630a:	dc 01       	movw	r26, r24
    630c:	cb 01       	movw	r24, r22
    630e:	29 81       	ldd	r18, Y+1	; 0x01
    6310:	3a 81       	ldd	r19, Y+2	; 0x02
    6312:	2b 52       	subi	r18, 0x2B	; 43
    6314:	3f 4f       	sbci	r19, 0xFF	; 255
    6316:	f9 01       	movw	r30, r18
    6318:	80 83       	st	Z, r24
    631a:	91 83       	std	Z+1, r25	; 0x01
    631c:	a2 83       	std	Z+2, r26	; 0x02
    631e:	b3 83       	std	Z+3, r27	; 0x03
	
	return message;
    6320:	89 81       	ldd	r24, Y+1	; 0x01
    6322:	9a 81       	ldd	r25, Y+2	; 0x02
}
    6324:	0f 90       	pop	r0
    6326:	0f 90       	pop	r0
    6328:	0f 90       	pop	r0
    632a:	0f 90       	pop	r0
    632c:	df 91       	pop	r29
    632e:	cf 91       	pop	r28
    6330:	1f 91       	pop	r17
    6332:	0f 91       	pop	r16
    6334:	08 95       	ret

00006336 <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE>:
	model->ChecksumErrors(this->ChecksumErrors);
	model->BlownFrames(this->NumOfBlownFrames);
}

void SystemTelemetryMessage::updateModelFromMessageFromSimulator (SystemModel *model)
{
    6336:	cf 93       	push	r28
    6338:	df 93       	push	r29
    633a:	00 d0       	rcall	.+0      	; 0x633c <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE+0x6>
    633c:	1f 92       	push	r1
    633e:	cd b7       	in	r28, 0x3d	; 61
    6340:	de b7       	in	r29, 0x3e	; 62
    6342:	9a 83       	std	Y+2, r25	; 0x02
    6344:	89 83       	std	Y+1, r24	; 0x01
    6346:	7c 83       	std	Y+4, r23	; 0x04
    6348:	6b 83       	std	Y+3, r22	; 0x03
	//These values are sensor readings from the simulator that are used for flight
	//control calculations. The real helicopter algorithms will read these values
	//from actual sensors, but when running off of the simulator, these sensor
	//readings come from the simulator itself.
	
	model->MagYawDegrees(this->MagYaw);
    634a:	89 81       	ldd	r24, Y+1	; 0x01
    634c:	9a 81       	ldd	r25, Y+2	; 0x02
    634e:	fc 01       	movw	r30, r24
    6350:	85 81       	ldd	r24, Z+5	; 0x05
    6352:	96 81       	ldd	r25, Z+6	; 0x06
    6354:	a7 81       	ldd	r26, Z+7	; 0x07
    6356:	b0 85       	ldd	r27, Z+8	; 0x08
    6358:	2b 81       	ldd	r18, Y+3	; 0x03
    635a:	3c 81       	ldd	r19, Y+4	; 0x04
    635c:	ac 01       	movw	r20, r24
    635e:	bd 01       	movw	r22, r26
    6360:	c9 01       	movw	r24, r18
    6362:	0e 94 e5 24 	call	0x49ca	; 0x49ca <_ZN10helicopter5model11SystemModel13MagYawDegreesEf>
	model->YawVelocityDegreesPerSecond(this->YawVelocityDegreesPerSecond);
    6366:	89 81       	ldd	r24, Y+1	; 0x01
    6368:	9a 81       	ldd	r25, Y+2	; 0x02
    636a:	fc 01       	movw	r30, r24
    636c:	81 85       	ldd	r24, Z+9	; 0x09
    636e:	92 85       	ldd	r25, Z+10	; 0x0a
    6370:	a3 85       	ldd	r26, Z+11	; 0x0b
    6372:	b4 85       	ldd	r27, Z+12	; 0x0c
    6374:	2b 81       	ldd	r18, Y+3	; 0x03
    6376:	3c 81       	ldd	r19, Y+4	; 0x04
    6378:	ac 01       	movw	r20, r24
    637a:	bd 01       	movw	r22, r26
    637c:	c9 01       	movw	r24, r18
    637e:	0e 94 05 25 	call	0x4a0a	; 0x4a0a <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf>
	
	//model->XNEDBodyFrame((double) this->XNEDBodyFrame / 100);//not supposed to be here since this is a calculated value, not a sensor reading.
	model->XVelocityMetersPerSecond(this->XVelocityMetersPerSecond);
    6382:	89 81       	ldd	r24, Y+1	; 0x01
    6384:	9a 81       	ldd	r25, Y+2	; 0x02
    6386:	fc 01       	movw	r30, r24
    6388:	81 a9       	ldd	r24, Z+49	; 0x31
    638a:	92 a9       	ldd	r25, Z+50	; 0x32
    638c:	a3 a9       	ldd	r26, Z+51	; 0x33
    638e:	b4 a9       	ldd	r27, Z+52	; 0x34
    6390:	2b 81       	ldd	r18, Y+3	; 0x03
    6392:	3c 81       	ldd	r19, Y+4	; 0x04
    6394:	ac 01       	movw	r20, r24
    6396:	bd 01       	movw	r22, r26
    6398:	c9 01       	movw	r24, r18
    639a:	0e 94 51 25 	call	0x4aa2	; 0x4aa2 <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf>
	model->ThetaPitchDegrees(this->ThetaPitchDegrees);
    639e:	89 81       	ldd	r24, Y+1	; 0x01
    63a0:	9a 81       	ldd	r25, Y+2	; 0x02
    63a2:	fc 01       	movw	r30, r24
    63a4:	85 a9       	ldd	r24, Z+53	; 0x35
    63a6:	96 a9       	ldd	r25, Z+54	; 0x36
    63a8:	a7 a9       	ldd	r26, Z+55	; 0x37
    63aa:	b0 ad       	ldd	r27, Z+56	; 0x38
    63ac:	2b 81       	ldd	r18, Y+3	; 0x03
    63ae:	3c 81       	ldd	r19, Y+4	; 0x04
    63b0:	ac 01       	movw	r20, r24
    63b2:	bd 01       	movw	r22, r26
    63b4:	c9 01       	movw	r24, r18
    63b6:	0e 94 a1 25 	call	0x4b42	; 0x4b42 <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf>
	
	//model->YNEDBodyFrame((double) this->YNEDBodyFrame / 100);
	model->YVelocityMetersPerSecond(this->YVelocityMetersPerSecond);
    63ba:	89 81       	ldd	r24, Y+1	; 0x01
    63bc:	9a 81       	ldd	r25, Y+2	; 0x02
    63be:	8b 59       	subi	r24, 0x9B	; 155
    63c0:	9f 4f       	sbci	r25, 0xFF	; 255
    63c2:	fc 01       	movw	r30, r24
    63c4:	80 81       	ld	r24, Z
    63c6:	91 81       	ldd	r25, Z+1	; 0x01
    63c8:	a2 81       	ldd	r26, Z+2	; 0x02
    63ca:	b3 81       	ldd	r27, Z+3	; 0x03
    63cc:	2b 81       	ldd	r18, Y+3	; 0x03
    63ce:	3c 81       	ldd	r19, Y+4	; 0x04
    63d0:	ac 01       	movw	r20, r24
    63d2:	bd 01       	movw	r22, r26
    63d4:	c9 01       	movw	r24, r18
    63d6:	0e 94 c4 25 	call	0x4b88	; 0x4b88 <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf>
	model->PhiRollDegrees(this->PhiRollDegrees);
    63da:	89 81       	ldd	r24, Y+1	; 0x01
    63dc:	9a 81       	ldd	r25, Y+2	; 0x02
    63de:	87 59       	subi	r24, 0x97	; 151
    63e0:	9f 4f       	sbci	r25, 0xFF	; 255
    63e2:	fc 01       	movw	r30, r24
    63e4:	80 81       	ld	r24, Z
    63e6:	91 81       	ldd	r25, Z+1	; 0x01
    63e8:	a2 81       	ldd	r26, Z+2	; 0x02
    63ea:	b3 81       	ldd	r27, Z+3	; 0x03
    63ec:	2b 81       	ldd	r18, Y+3	; 0x03
    63ee:	3c 81       	ldd	r19, Y+4	; 0x04
    63f0:	ac 01       	movw	r20, r24
    63f2:	bd 01       	movw	r22, r26
    63f4:	c9 01       	movw	r24, r18
    63f6:	0e 94 17 26 	call	0x4c2e	; 0x4c2e <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf>
	
	model->AltitudeFeetAgl(this->AltitudeFeetAgl);
    63fa:	89 81       	ldd	r24, Y+1	; 0x01
    63fc:	9a 81       	ldd	r25, Y+2	; 0x02
    63fe:	8b 56       	subi	r24, 0x6B	; 107
    6400:	9f 4f       	sbci	r25, 0xFF	; 255
    6402:	fc 01       	movw	r30, r24
    6404:	80 81       	ld	r24, Z
    6406:	91 81       	ldd	r25, Z+1	; 0x01
    6408:	a2 81       	ldd	r26, Z+2	; 0x02
    640a:	b3 81       	ldd	r27, Z+3	; 0x03
    640c:	2b 81       	ldd	r18, Y+3	; 0x03
    640e:	3c 81       	ldd	r19, Y+4	; 0x04
    6410:	ac 01       	movw	r20, r24
    6412:	bd 01       	movw	r22, r26
    6414:	c9 01       	movw	r24, r18
    6416:	0e 94 3a 26 	call	0x4c74	; 0x4c74 <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf>
	
	//Convert from meters per sec, to foot per sec.
	
	model->ZVelocityFeetPerSecond(this->ZVelocityMetersPerSecond * 3.28084d); 
    641a:	89 81       	ldd	r24, Y+1	; 0x01
    641c:	9a 81       	ldd	r25, Y+2	; 0x02
    641e:	87 56       	subi	r24, 0x67	; 103
    6420:	9f 4f       	sbci	r25, 0xFF	; 255
    6422:	fc 01       	movw	r30, r24
    6424:	80 81       	ld	r24, Z
    6426:	91 81       	ldd	r25, Z+1	; 0x01
    6428:	a2 81       	ldd	r26, Z+2	; 0x02
    642a:	b3 81       	ldd	r27, Z+3	; 0x03
    642c:	28 e4       	ldi	r18, 0x48	; 72
    642e:	39 ef       	ldi	r19, 0xF9	; 249
    6430:	41 e5       	ldi	r20, 0x51	; 81
    6432:	50 e4       	ldi	r21, 0x40	; 64
    6434:	bc 01       	movw	r22, r24
    6436:	cd 01       	movw	r24, r26
    6438:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    643c:	dc 01       	movw	r26, r24
    643e:	cb 01       	movw	r24, r22
    6440:	2b 81       	ldd	r18, Y+3	; 0x03
    6442:	3c 81       	ldd	r19, Y+4	; 0x04
    6444:	ac 01       	movw	r20, r24
    6446:	bd 01       	movw	r22, r26
    6448:	c9 01       	movw	r24, r18
    644a:	0e 94 5d 26 	call	0x4cba	; 0x4cba <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf>
	
	model->LatitudeDegrees(this->LatitudeDegrees);
    644e:	89 81       	ldd	r24, Y+1	; 0x01
    6450:	9a 81       	ldd	r25, Y+2	; 0x02
    6452:	8f 53       	subi	r24, 0x3F	; 63
    6454:	9f 4f       	sbci	r25, 0xFF	; 255
    6456:	fc 01       	movw	r30, r24
    6458:	80 81       	ld	r24, Z
    645a:	91 81       	ldd	r25, Z+1	; 0x01
    645c:	a2 81       	ldd	r26, Z+2	; 0x02
    645e:	b3 81       	ldd	r27, Z+3	; 0x03
    6460:	2b 81       	ldd	r18, Y+3	; 0x03
    6462:	3c 81       	ldd	r19, Y+4	; 0x04
    6464:	ac 01       	movw	r20, r24
    6466:	bd 01       	movw	r22, r26
    6468:	c9 01       	movw	r24, r18
    646a:	0e 94 b0 26 	call	0x4d60	; 0x4d60 <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf>
	model->LongitudeDegrees(this->LongitudeDegrees);
    646e:	89 81       	ldd	r24, Y+1	; 0x01
    6470:	9a 81       	ldd	r25, Y+2	; 0x02
    6472:	8b 53       	subi	r24, 0x3B	; 59
    6474:	9f 4f       	sbci	r25, 0xFF	; 255
    6476:	fc 01       	movw	r30, r24
    6478:	80 81       	ld	r24, Z
    647a:	91 81       	ldd	r25, Z+1	; 0x01
    647c:	a2 81       	ldd	r26, Z+2	; 0x02
    647e:	b3 81       	ldd	r27, Z+3	; 0x03
    6480:	2b 81       	ldd	r18, Y+3	; 0x03
    6482:	3c 81       	ldd	r19, Y+4	; 0x04
    6484:	ac 01       	movw	r20, r24
    6486:	bd 01       	movw	r22, r26
    6488:	c9 01       	movw	r24, r18
    648a:	0e 94 d3 26 	call	0x4da6	; 0x4da6 <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf>
    648e:	0f 90       	pop	r0
    6490:	0f 90       	pop	r0
    6492:	0f 90       	pop	r0
    6494:	0f 90       	pop	r0
    6496:	df 91       	pop	r29
    6498:	cf 91       	pop	r28
    649a:	08 95       	ret

0000649c <_ZN10helicopter5tasks4Task8getDelayEv>:
				 * subclasses runTaskImpl to execute the actual task logic.
				 */
				virtual void runTask();
				
					
				int getDelay()
    649c:	cf 93       	push	r28
    649e:	df 93       	push	r29
    64a0:	1f 92       	push	r1
    64a2:	1f 92       	push	r1
    64a4:	cd b7       	in	r28, 0x3d	; 61
    64a6:	de b7       	in	r29, 0x3e	; 62
    64a8:	9a 83       	std	Y+2, r25	; 0x02
    64aa:	89 83       	std	Y+1, r24	; 0x01
				{
					return delay;
    64ac:	89 81       	ldd	r24, Y+1	; 0x01
    64ae:	9a 81       	ldd	r25, Y+2	; 0x02
    64b0:	fc 01       	movw	r30, r24
    64b2:	82 81       	ldd	r24, Z+2	; 0x02
    64b4:	93 81       	ldd	r25, Z+3	; 0x03
				}
    64b6:	0f 90       	pop	r0
    64b8:	0f 90       	pop	r0
    64ba:	df 91       	pop	r29
    64bc:	cf 91       	pop	r28
    64be:	08 95       	ret

000064c0 <_ZN10helicopter5tasks4Task9getPeriodEv>:
				
				int getPeriod()
    64c0:	cf 93       	push	r28
    64c2:	df 93       	push	r29
    64c4:	1f 92       	push	r1
    64c6:	1f 92       	push	r1
    64c8:	cd b7       	in	r28, 0x3d	; 61
    64ca:	de b7       	in	r29, 0x3e	; 62
    64cc:	9a 83       	std	Y+2, r25	; 0x02
    64ce:	89 83       	std	Y+1, r24	; 0x01
				{
					return period;
    64d0:	89 81       	ldd	r24, Y+1	; 0x01
    64d2:	9a 81       	ldd	r25, Y+2	; 0x02
    64d4:	fc 01       	movw	r30, r24
    64d6:	84 81       	ldd	r24, Z+4	; 0x04
    64d8:	95 81       	ldd	r25, Z+5	; 0x05
				}
    64da:	0f 90       	pop	r0
    64dc:	0f 90       	pop	r0
    64de:	df 91       	pop	r29
    64e0:	cf 91       	pop	r28
    64e2:	08 95       	ret

000064e4 <_ZN10helicopter5tasks4Task8setDelayEi>:
				
				void setDelay(int delay)
    64e4:	cf 93       	push	r28
    64e6:	df 93       	push	r29
    64e8:	00 d0       	rcall	.+0      	; 0x64ea <_ZN10helicopter5tasks4Task8setDelayEi+0x6>
    64ea:	1f 92       	push	r1
    64ec:	cd b7       	in	r28, 0x3d	; 61
    64ee:	de b7       	in	r29, 0x3e	; 62
    64f0:	9a 83       	std	Y+2, r25	; 0x02
    64f2:	89 83       	std	Y+1, r24	; 0x01
    64f4:	7c 83       	std	Y+4, r23	; 0x04
    64f6:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->delay = delay;
    64f8:	89 81       	ldd	r24, Y+1	; 0x01
    64fa:	9a 81       	ldd	r25, Y+2	; 0x02
    64fc:	2b 81       	ldd	r18, Y+3	; 0x03
    64fe:	3c 81       	ldd	r19, Y+4	; 0x04
    6500:	fc 01       	movw	r30, r24
    6502:	33 83       	std	Z+3, r19	; 0x03
    6504:	22 83       	std	Z+2, r18	; 0x02
				}
    6506:	0f 90       	pop	r0
    6508:	0f 90       	pop	r0
    650a:	0f 90       	pop	r0
    650c:	0f 90       	pop	r0
    650e:	df 91       	pop	r29
    6510:	cf 91       	pop	r28
    6512:	08 95       	ret

00006514 <_ZN10helicopter5tasks4Task15getIsReadyToRunEv>:
				
				bool getIsReadyToRun()
    6514:	cf 93       	push	r28
    6516:	df 93       	push	r29
    6518:	1f 92       	push	r1
    651a:	1f 92       	push	r1
    651c:	cd b7       	in	r28, 0x3d	; 61
    651e:	de b7       	in	r29, 0x3e	; 62
    6520:	9a 83       	std	Y+2, r25	; 0x02
    6522:	89 83       	std	Y+1, r24	; 0x01
				{
					return isReadyToRun;
    6524:	89 81       	ldd	r24, Y+1	; 0x01
    6526:	9a 81       	ldd	r25, Y+2	; 0x02
    6528:	fc 01       	movw	r30, r24
    652a:	86 81       	ldd	r24, Z+6	; 0x06
				}
    652c:	0f 90       	pop	r0
    652e:	0f 90       	pop	r0
    6530:	df 91       	pop	r29
    6532:	cf 91       	pop	r28
    6534:	08 95       	ret

00006536 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>:
				
				void setIsReadyToRun(bool isReadyToRun)
    6536:	cf 93       	push	r28
    6538:	df 93       	push	r29
    653a:	00 d0       	rcall	.+0      	; 0x653c <_ZN10helicopter5tasks4Task15setIsReadyToRunEb+0x6>
    653c:	cd b7       	in	r28, 0x3d	; 61
    653e:	de b7       	in	r29, 0x3e	; 62
    6540:	9a 83       	std	Y+2, r25	; 0x02
    6542:	89 83       	std	Y+1, r24	; 0x01
    6544:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->isReadyToRun = isReadyToRun;
    6546:	89 81       	ldd	r24, Y+1	; 0x01
    6548:	9a 81       	ldd	r25, Y+2	; 0x02
    654a:	2b 81       	ldd	r18, Y+3	; 0x03
    654c:	fc 01       	movw	r30, r24
    654e:	26 83       	std	Z+6, r18	; 0x06
				}
    6550:	0f 90       	pop	r0
    6552:	0f 90       	pop	r0
    6554:	0f 90       	pop	r0
    6556:	df 91       	pop	r29
    6558:	cf 91       	pop	r28
    655a:	08 95       	ret

0000655c <_ZN10helicopter5tasks4Task11reduceDelayEv>:
				
				/**
				 * Reduces the delay by one tick.
				 */
				void reduceDelay()
    655c:	cf 93       	push	r28
    655e:	df 93       	push	r29
    6560:	1f 92       	push	r1
    6562:	1f 92       	push	r1
    6564:	cd b7       	in	r28, 0x3d	; 61
    6566:	de b7       	in	r29, 0x3e	; 62
    6568:	9a 83       	std	Y+2, r25	; 0x02
    656a:	89 83       	std	Y+1, r24	; 0x01
				{
					delay--;
    656c:	89 81       	ldd	r24, Y+1	; 0x01
    656e:	9a 81       	ldd	r25, Y+2	; 0x02
    6570:	fc 01       	movw	r30, r24
    6572:	82 81       	ldd	r24, Z+2	; 0x02
    6574:	93 81       	ldd	r25, Z+3	; 0x03
    6576:	9c 01       	movw	r18, r24
    6578:	21 50       	subi	r18, 0x01	; 1
    657a:	31 09       	sbc	r19, r1
    657c:	89 81       	ldd	r24, Y+1	; 0x01
    657e:	9a 81       	ldd	r25, Y+2	; 0x02
    6580:	fc 01       	movw	r30, r24
    6582:	33 83       	std	Z+3, r19	; 0x03
    6584:	22 83       	std	Z+2, r18	; 0x02
				}
    6586:	0f 90       	pop	r0
    6588:	0f 90       	pop	r0
    658a:	df 91       	pop	r29
    658c:	cf 91       	pop	r28
    658e:	08 95       	ret

00006590 <_ZN10helicopter9scheduler9Scheduler13getNumOfTasksEv>:
			    /*
				* Starts the timer for determining which tasks are ready to run.
				*/
				void start();
				
				int getNumOfTasks()
    6590:	cf 93       	push	r28
    6592:	df 93       	push	r29
    6594:	1f 92       	push	r1
    6596:	1f 92       	push	r1
    6598:	cd b7       	in	r28, 0x3d	; 61
    659a:	de b7       	in	r29, 0x3e	; 62
    659c:	9a 83       	std	Y+2, r25	; 0x02
    659e:	89 83       	std	Y+1, r24	; 0x01
				{
					return numOfTasks;
    65a0:	89 81       	ldd	r24, Y+1	; 0x01
    65a2:	9a 81       	ldd	r25, Y+2	; 0x02
    65a4:	fc 01       	movw	r30, r24
    65a6:	84 89       	ldd	r24, Z+20	; 0x14
    65a8:	95 89       	ldd	r25, Z+21	; 0x15
				}
    65aa:	0f 90       	pop	r0
    65ac:	0f 90       	pop	r0
    65ae:	df 91       	pop	r29
    65b0:	cf 91       	pop	r28
    65b2:	08 95       	ret

000065b4 <_ZN10helicopter9scheduler9Scheduler8getTasksEv>:
				
				Task **getTasks()
    65b4:	cf 93       	push	r28
    65b6:	df 93       	push	r29
    65b8:	1f 92       	push	r1
    65ba:	1f 92       	push	r1
    65bc:	cd b7       	in	r28, 0x3d	; 61
    65be:	de b7       	in	r29, 0x3e	; 62
    65c0:	9a 83       	std	Y+2, r25	; 0x02
    65c2:	89 83       	std	Y+1, r24	; 0x01
				{
					return tasks;
    65c4:	89 81       	ldd	r24, Y+1	; 0x01
    65c6:	9a 81       	ldd	r25, Y+2	; 0x02
				}
    65c8:	0f 90       	pop	r0
    65ca:	0f 90       	pop	r0
    65cc:	df 91       	pop	r29
    65ce:	cf 91       	pop	r28
    65d0:	08 95       	ret

000065d2 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb>:
				/**
				 * Sets whether a blown frame was detected. (I.e. the dispatcher didn't finish before
				 * the scheduler timmer was triggered again)
				 * @param blownFrameDetected true if a frame was blown, false otherwise.
				 */
				void hasBlownFrame(bool blowFrameDetected)
    65d2:	cf 93       	push	r28
    65d4:	df 93       	push	r29
    65d6:	00 d0       	rcall	.+0      	; 0x65d8 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb+0x6>
    65d8:	cd b7       	in	r28, 0x3d	; 61
    65da:	de b7       	in	r29, 0x3e	; 62
    65dc:	9a 83       	std	Y+2, r25	; 0x02
    65de:	89 83       	std	Y+1, r24	; 0x01
    65e0:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->blowFrameDetected = blowFrameDetected;
    65e2:	89 81       	ldd	r24, Y+1	; 0x01
    65e4:	9a 81       	ldd	r25, Y+2	; 0x02
    65e6:	2b 81       	ldd	r18, Y+3	; 0x03
    65e8:	fc 01       	movw	r30, r24
    65ea:	22 8f       	std	Z+26, r18	; 0x1a
				}
    65ec:	0f 90       	pop	r0
    65ee:	0f 90       	pop	r0
    65f0:	0f 90       	pop	r0
    65f2:	df 91       	pop	r29
    65f4:	cf 91       	pop	r28
    65f6:	08 95       	ret

000065f8 <_ZN10helicopter9scheduler9Scheduler20hasCompletedDispatchEv>:
				/**
				 * Returns a flag indicating that the dispatch method has completed. This is for
				 * use by the scheduler to determine if the dispatcher blew a frame.
				 * @return true if the dispatch method completed, false otherwise. 
				 */
				bool hasCompletedDispatch()
    65f8:	cf 93       	push	r28
    65fa:	df 93       	push	r29
    65fc:	1f 92       	push	r1
    65fe:	1f 92       	push	r1
    6600:	cd b7       	in	r28, 0x3d	; 61
    6602:	de b7       	in	r29, 0x3e	; 62
    6604:	9a 83       	std	Y+2, r25	; 0x02
    6606:	89 83       	std	Y+1, r24	; 0x01
				{
					return completedDispatch;
    6608:	89 81       	ldd	r24, Y+1	; 0x01
    660a:	9a 81       	ldd	r25, Y+2	; 0x02
    660c:	fc 01       	movw	r30, r24
    660e:	83 8d       	ldd	r24, Z+27	; 0x1b
				}
    6610:	0f 90       	pop	r0
    6612:	0f 90       	pop	r0
    6614:	df 91       	pop	r29
    6616:	cf 91       	pop	r28
    6618:	08 95       	ret

0000661a <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>:
using namespace helicopter::scheduler;

Scheduler* Scheduler::scheduler = NULL;

Scheduler* Scheduler::getScheduler()
{
    661a:	ef 92       	push	r14
    661c:	ff 92       	push	r15
    661e:	0f 93       	push	r16
    6620:	1f 93       	push	r17
    6622:	cf 93       	push	r28
    6624:	df 93       	push	r29
    6626:	cd b7       	in	r28, 0x3d	; 61
    6628:	de b7       	in	r29, 0x3e	; 62
	if (scheduler == NULL)
    662a:	80 91 9a 02 	lds	r24, 0x029A
    662e:	90 91 9b 02 	lds	r25, 0x029B
    6632:	00 97       	sbiw	r24, 0x00	; 0
    6634:	a1 f4       	brne	.+40     	; 0x665e <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv+0x44>
	{
		scheduler = new Scheduler(F_CPU, PRESCALE_BY_SIXTYFOUR, SCHEDULER_TICK_FREQUENCY_HZ);
    6636:	8c e1       	ldi	r24, 0x1C	; 28
    6638:	90 e0       	ldi	r25, 0x00	; 0
    663a:	0e 94 08 3d 	call	0x7a10	; 0x7a10 <_Znwj>
    663e:	7c 01       	movw	r14, r24
    6640:	06 e4       	ldi	r16, 0x46	; 70
    6642:	10 e0       	ldi	r17, 0x00	; 0
    6644:	20 e4       	ldi	r18, 0x40	; 64
    6646:	30 e0       	ldi	r19, 0x00	; 0
    6648:	40 e0       	ldi	r20, 0x00	; 0
    664a:	54 e2       	ldi	r21, 0x24	; 36
    664c:	64 ef       	ldi	r22, 0xF4	; 244
    664e:	70 e0       	ldi	r23, 0x00	; 0
    6650:	c7 01       	movw	r24, r14
    6652:	0e 94 3a 33 	call	0x6674	; 0x6674 <_ZN10helicopter9scheduler9SchedulerC1Em9PRESCALERi>
    6656:	f0 92 9b 02 	sts	0x029B, r15
    665a:	e0 92 9a 02 	sts	0x029A, r14
	}

	return scheduler;
    665e:	80 91 9a 02 	lds	r24, 0x029A
    6662:	90 91 9b 02 	lds	r25, 0x029B
}
    6666:	df 91       	pop	r29
    6668:	cf 91       	pop	r28
    666a:	1f 91       	pop	r17
    666c:	0f 91       	pop	r16
    666e:	ff 90       	pop	r15
    6670:	ef 90       	pop	r14
    6672:	08 95       	ret

00006674 <_ZN10helicopter9scheduler9SchedulerC1Em9PRESCALERi>:

Scheduler::Scheduler(unsigned long cpuSpeed, PRESCALER prescaler, int schedulerTickFrequencyHz)
    6674:	0f 93       	push	r16
    6676:	1f 93       	push	r17
    6678:	cf 93       	push	r28
    667a:	df 93       	push	r29
    667c:	cd b7       	in	r28, 0x3d	; 61
    667e:	de b7       	in	r29, 0x3e	; 62
    6680:	2a 97       	sbiw	r28, 0x0a	; 10
    6682:	0f b6       	in	r0, 0x3f	; 63
    6684:	f8 94       	cli
    6686:	de bf       	out	0x3e, r29	; 62
    6688:	0f be       	out	0x3f, r0	; 63
    668a:	cd bf       	out	0x3d, r28	; 61
    668c:	9a 83       	std	Y+2, r25	; 0x02
    668e:	89 83       	std	Y+1, r24	; 0x01
    6690:	4b 83       	std	Y+3, r20	; 0x03
    6692:	5c 83       	std	Y+4, r21	; 0x04
    6694:	6d 83       	std	Y+5, r22	; 0x05
    6696:	7e 83       	std	Y+6, r23	; 0x06
    6698:	38 87       	std	Y+8, r19	; 0x08
    669a:	2f 83       	std	Y+7, r18	; 0x07
    669c:	1a 87       	std	Y+10, r17	; 0x0a
    669e:	09 87       	std	Y+9, r16	; 0x09
{
	targetTimerCount =  ((cpuSpeed / prescaler) / schedulerTickFrequencyHz);
    66a0:	8f 81       	ldd	r24, Y+7	; 0x07
    66a2:	98 85       	ldd	r25, Y+8	; 0x08
    66a4:	9c 01       	movw	r18, r24
    66a6:	44 27       	eor	r20, r20
    66a8:	37 fd       	sbrc	r19, 7
    66aa:	40 95       	com	r20
    66ac:	54 2f       	mov	r21, r20
    66ae:	8b 81       	ldd	r24, Y+3	; 0x03
    66b0:	9c 81       	ldd	r25, Y+4	; 0x04
    66b2:	ad 81       	ldd	r26, Y+5	; 0x05
    66b4:	be 81       	ldd	r27, Y+6	; 0x06
    66b6:	bc 01       	movw	r22, r24
    66b8:	cd 01       	movw	r24, r26
    66ba:	0e 94 7d 47 	call	0x8efa	; 0x8efa <__udivmodsi4>
    66be:	da 01       	movw	r26, r20
    66c0:	c9 01       	movw	r24, r18
    66c2:	29 85       	ldd	r18, Y+9	; 0x09
    66c4:	3a 85       	ldd	r19, Y+10	; 0x0a
    66c6:	44 27       	eor	r20, r20
    66c8:	37 fd       	sbrc	r19, 7
    66ca:	40 95       	com	r20
    66cc:	54 2f       	mov	r21, r20
    66ce:	bc 01       	movw	r22, r24
    66d0:	cd 01       	movw	r24, r26
    66d2:	0e 94 7d 47 	call	0x8efa	; 0x8efa <__udivmodsi4>
    66d6:	da 01       	movw	r26, r20
    66d8:	c9 01       	movw	r24, r18
    66da:	9c 01       	movw	r18, r24
    66dc:	89 81       	ldd	r24, Y+1	; 0x01
    66de:	9a 81       	ldd	r25, Y+2	; 0x02
    66e0:	fc 01       	movw	r30, r24
    66e2:	37 8b       	std	Z+23, r19	; 0x17
    66e4:	26 8b       	std	Z+22, r18	; 0x16
	
	//Calculate the timer value to achieve the desired frequency. 
	this->targetTimerCount = targetTimerCount;
    66e6:	89 81       	ldd	r24, Y+1	; 0x01
    66e8:	9a 81       	ldd	r25, Y+2	; 0x02
    66ea:	fc 01       	movw	r30, r24
    66ec:	26 89       	ldd	r18, Z+22	; 0x16
    66ee:	37 89       	ldd	r19, Z+23	; 0x17
    66f0:	89 81       	ldd	r24, Y+1	; 0x01
    66f2:	9a 81       	ldd	r25, Y+2	; 0x02
    66f4:	fc 01       	movw	r30, r24
    66f6:	37 8b       	std	Z+23, r19	; 0x17
    66f8:	26 8b       	std	Z+22, r18	; 0x16

	this->prescaler = prescaler;
    66fa:	89 81       	ldd	r24, Y+1	; 0x01
    66fc:	9a 81       	ldd	r25, Y+2	; 0x02
    66fe:	2f 81       	ldd	r18, Y+7	; 0x07
    6700:	38 85       	ldd	r19, Y+8	; 0x08
    6702:	fc 01       	movw	r30, r24
    6704:	31 8f       	std	Z+25, r19	; 0x19
    6706:	20 8f       	std	Z+24, r18	; 0x18
	
	numOfTasks = 0;
    6708:	89 81       	ldd	r24, Y+1	; 0x01
    670a:	9a 81       	ldd	r25, Y+2	; 0x02
    670c:	fc 01       	movw	r30, r24
    670e:	15 8a       	std	Z+21, r1	; 0x15
    6710:	14 8a       	std	Z+20, r1	; 0x14
	
	blowFrameDetected = false;
    6712:	89 81       	ldd	r24, Y+1	; 0x01
    6714:	9a 81       	ldd	r25, Y+2	; 0x02
    6716:	fc 01       	movw	r30, r24
    6718:	12 8e       	std	Z+26, r1	; 0x1a
	
	completedDispatch = true;
    671a:	89 81       	ldd	r24, Y+1	; 0x01
    671c:	9a 81       	ldd	r25, Y+2	; 0x02
    671e:	21 e0       	ldi	r18, 0x01	; 1
    6720:	fc 01       	movw	r30, r24
    6722:	23 8f       	std	Z+27, r18	; 0x1b
}
    6724:	2a 96       	adiw	r28, 0x0a	; 10
    6726:	0f b6       	in	r0, 0x3f	; 63
    6728:	f8 94       	cli
    672a:	de bf       	out	0x3e, r29	; 62
    672c:	0f be       	out	0x3f, r0	; 63
    672e:	cd bf       	out	0x3d, r28	; 61
    6730:	df 91       	pop	r29
    6732:	cf 91       	pop	r28
    6734:	1f 91       	pop	r17
    6736:	0f 91       	pop	r16
    6738:	08 95       	ret

0000673a <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>:
	
	numOfTasks = 0;
}

int Scheduler::addTask(Task *task)
{
    673a:	cf 93       	push	r28
    673c:	df 93       	push	r29
    673e:	00 d0       	rcall	.+0      	; 0x6740 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x6>
    6740:	1f 92       	push	r1
    6742:	cd b7       	in	r28, 0x3d	; 61
    6744:	de b7       	in	r29, 0x3e	; 62
    6746:	9a 83       	std	Y+2, r25	; 0x02
    6748:	89 83       	std	Y+1, r24	; 0x01
    674a:	7c 83       	std	Y+4, r23	; 0x04
    674c:	6b 83       	std	Y+3, r22	; 0x03
	if (numOfTasks < MAXNUMOFTASKS)
    674e:	89 81       	ldd	r24, Y+1	; 0x01
    6750:	9a 81       	ldd	r25, Y+2	; 0x02
    6752:	fc 01       	movw	r30, r24
    6754:	84 89       	ldd	r24, Z+20	; 0x14
    6756:	95 89       	ldd	r25, Z+21	; 0x15
    6758:	8a 30       	cpi	r24, 0x0A	; 10
    675a:	91 05       	cpc	r25, r1
    675c:	04 f5       	brge	.+64     	; 0x679e <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x64>
	{
		tasks[numOfTasks] = task;
    675e:	89 81       	ldd	r24, Y+1	; 0x01
    6760:	9a 81       	ldd	r25, Y+2	; 0x02
    6762:	fc 01       	movw	r30, r24
    6764:	84 89       	ldd	r24, Z+20	; 0x14
    6766:	95 89       	ldd	r25, Z+21	; 0x15
    6768:	29 81       	ldd	r18, Y+1	; 0x01
    676a:	3a 81       	ldd	r19, Y+2	; 0x02
    676c:	88 0f       	add	r24, r24
    676e:	99 1f       	adc	r25, r25
    6770:	82 0f       	add	r24, r18
    6772:	93 1f       	adc	r25, r19
    6774:	2b 81       	ldd	r18, Y+3	; 0x03
    6776:	3c 81       	ldd	r19, Y+4	; 0x04
    6778:	fc 01       	movw	r30, r24
    677a:	31 83       	std	Z+1, r19	; 0x01
    677c:	20 83       	st	Z, r18
		numOfTasks++;
    677e:	89 81       	ldd	r24, Y+1	; 0x01
    6780:	9a 81       	ldd	r25, Y+2	; 0x02
    6782:	fc 01       	movw	r30, r24
    6784:	84 89       	ldd	r24, Z+20	; 0x14
    6786:	95 89       	ldd	r25, Z+21	; 0x15
    6788:	9c 01       	movw	r18, r24
    678a:	2f 5f       	subi	r18, 0xFF	; 255
    678c:	3f 4f       	sbci	r19, 0xFF	; 255
    678e:	89 81       	ldd	r24, Y+1	; 0x01
    6790:	9a 81       	ldd	r25, Y+2	; 0x02
    6792:	fc 01       	movw	r30, r24
    6794:	35 8b       	std	Z+21, r19	; 0x15
    6796:	24 8b       	std	Z+20, r18	; 0x14
		
		return 0;
    6798:	80 e0       	ldi	r24, 0x00	; 0
    679a:	90 e0       	ldi	r25, 0x00	; 0
    679c:	02 c0       	rjmp	.+4      	; 0x67a2 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x68>
	}

	return -1;
    679e:	8f ef       	ldi	r24, 0xFF	; 255
    67a0:	9f ef       	ldi	r25, 0xFF	; 255
}
    67a2:	0f 90       	pop	r0
    67a4:	0f 90       	pop	r0
    67a6:	0f 90       	pop	r0
    67a8:	0f 90       	pop	r0
    67aa:	df 91       	pop	r29
    67ac:	cf 91       	pop	r28
    67ae:	08 95       	ret

000067b0 <_ZN10helicopter9scheduler9Scheduler4initEv>:

void Scheduler::init()
{
    67b0:	cf 93       	push	r28
    67b2:	df 93       	push	r29
    67b4:	00 d0       	rcall	.+0      	; 0x67b6 <_ZN10helicopter9scheduler9Scheduler4initEv+0x6>
    67b6:	1f 92       	push	r1
    67b8:	cd b7       	in	r28, 0x3d	; 61
    67ba:	de b7       	in	r29, 0x3e	; 62
    67bc:	9c 83       	std	Y+4, r25	; 0x04
    67be:	8b 83       	std	Y+3, r24	; 0x03
	for (int i = 0; i < numOfTasks; i++)
    67c0:	1a 82       	std	Y+2, r1	; 0x02
    67c2:	19 82       	std	Y+1, r1	; 0x01
    67c4:	24 c0       	rjmp	.+72     	; 0x680e <_ZN10helicopter9scheduler9Scheduler4initEv+0x5e>
	{
		tasks[i]->init();
    67c6:	2b 81       	ldd	r18, Y+3	; 0x03
    67c8:	3c 81       	ldd	r19, Y+4	; 0x04
    67ca:	89 81       	ldd	r24, Y+1	; 0x01
    67cc:	9a 81       	ldd	r25, Y+2	; 0x02
    67ce:	88 0f       	add	r24, r24
    67d0:	99 1f       	adc	r25, r25
    67d2:	82 0f       	add	r24, r18
    67d4:	93 1f       	adc	r25, r19
    67d6:	fc 01       	movw	r30, r24
    67d8:	80 81       	ld	r24, Z
    67da:	91 81       	ldd	r25, Z+1	; 0x01
    67dc:	fc 01       	movw	r30, r24
    67de:	80 81       	ld	r24, Z
    67e0:	91 81       	ldd	r25, Z+1	; 0x01
    67e2:	06 96       	adiw	r24, 0x06	; 6
    67e4:	fc 01       	movw	r30, r24
    67e6:	20 81       	ld	r18, Z
    67e8:	31 81       	ldd	r19, Z+1	; 0x01
    67ea:	4b 81       	ldd	r20, Y+3	; 0x03
    67ec:	5c 81       	ldd	r21, Y+4	; 0x04
    67ee:	89 81       	ldd	r24, Y+1	; 0x01
    67f0:	9a 81       	ldd	r25, Y+2	; 0x02
    67f2:	88 0f       	add	r24, r24
    67f4:	99 1f       	adc	r25, r25
    67f6:	84 0f       	add	r24, r20
    67f8:	95 1f       	adc	r25, r21
    67fa:	fc 01       	movw	r30, r24
    67fc:	80 81       	ld	r24, Z
    67fe:	91 81       	ldd	r25, Z+1	; 0x01
    6800:	f9 01       	movw	r30, r18
    6802:	19 95       	eicall
	return -1;
}

void Scheduler::init()
{
	for (int i = 0; i < numOfTasks; i++)
    6804:	89 81       	ldd	r24, Y+1	; 0x01
    6806:	9a 81       	ldd	r25, Y+2	; 0x02
    6808:	01 96       	adiw	r24, 0x01	; 1
    680a:	9a 83       	std	Y+2, r25	; 0x02
    680c:	89 83       	std	Y+1, r24	; 0x01
    680e:	8b 81       	ldd	r24, Y+3	; 0x03
    6810:	9c 81       	ldd	r25, Y+4	; 0x04
    6812:	fc 01       	movw	r30, r24
    6814:	24 89       	ldd	r18, Z+20	; 0x14
    6816:	35 89       	ldd	r19, Z+21	; 0x15
    6818:	41 e0       	ldi	r20, 0x01	; 1
    681a:	89 81       	ldd	r24, Y+1	; 0x01
    681c:	9a 81       	ldd	r25, Y+2	; 0x02
    681e:	82 17       	cp	r24, r18
    6820:	93 07       	cpc	r25, r19
    6822:	0c f0       	brlt	.+2      	; 0x6826 <_ZN10helicopter9scheduler9Scheduler4initEv+0x76>
    6824:	40 e0       	ldi	r20, 0x00	; 0
    6826:	44 23       	and	r20, r20
    6828:	71 f6       	brne	.-100    	; 0x67c6 <_ZN10helicopter9scheduler9Scheduler4initEv+0x16>
	{
		tasks[i]->init();
	}
	
	//setup timer
	OCR1A = targetTimerCount; //Set Clear Timer on Compare (auto reset) (CTC)
    682a:	88 e8       	ldi	r24, 0x88	; 136
    682c:	90 e0       	ldi	r25, 0x00	; 0
    682e:	2b 81       	ldd	r18, Y+3	; 0x03
    6830:	3c 81       	ldd	r19, Y+4	; 0x04
    6832:	f9 01       	movw	r30, r18
    6834:	26 89       	ldd	r18, Z+22	; 0x16
    6836:	37 89       	ldd	r19, Z+23	; 0x17
    6838:	fc 01       	movw	r30, r24
    683a:	31 83       	std	Z+1, r19	; 0x01
    683c:	20 83       	st	Z, r18
		
	TCCR1B |= (1 << WGM12); //Configure timer 1 for ctc mode
    683e:	81 e8       	ldi	r24, 0x81	; 129
    6840:	90 e0       	ldi	r25, 0x00	; 0
    6842:	21 e8       	ldi	r18, 0x81	; 129
    6844:	30 e0       	ldi	r19, 0x00	; 0
    6846:	f9 01       	movw	r30, r18
    6848:	20 81       	ld	r18, Z
    684a:	28 60       	ori	r18, 0x08	; 8
    684c:	fc 01       	movw	r30, r24
    684e:	20 83       	st	Z, r18
		
	TIMSK1 |= (1 << OCIE1A); //enable ctc interrupt
    6850:	8f e6       	ldi	r24, 0x6F	; 111
    6852:	90 e0       	ldi	r25, 0x00	; 0
    6854:	2f e6       	ldi	r18, 0x6F	; 111
    6856:	30 e0       	ldi	r19, 0x00	; 0
    6858:	f9 01       	movw	r30, r18
    685a:	20 81       	ld	r18, Z
    685c:	22 60       	ori	r18, 0x02	; 2
    685e:	fc 01       	movw	r30, r24
    6860:	20 83       	st	Z, r18
		
	sei(); //Enable global interrupts
    6862:	78 94       	sei
}
    6864:	0f 90       	pop	r0
    6866:	0f 90       	pop	r0
    6868:	0f 90       	pop	r0
    686a:	0f 90       	pop	r0
    686c:	df 91       	pop	r29
    686e:	cf 91       	pop	r28
    6870:	08 95       	ret

00006872 <_ZN10helicopter9scheduler9Scheduler8dispatchEv>:

void Scheduler::dispatch()
{
    6872:	cf 93       	push	r28
    6874:	df 93       	push	r29
    6876:	00 d0       	rcall	.+0      	; 0x6878 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x6>
    6878:	00 d0       	rcall	.+0      	; 0x687a <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x8>
    687a:	cd b7       	in	r28, 0x3d	; 61
    687c:	de b7       	in	r29, 0x3e	; 62
    687e:	9e 83       	std	Y+6, r25	; 0x06
    6880:	8d 83       	std	Y+5, r24	; 0x05
	completedDispatch = false;
    6882:	8d 81       	ldd	r24, Y+5	; 0x05
    6884:	9e 81       	ldd	r25, Y+6	; 0x06
    6886:	fc 01       	movw	r30, r24
    6888:	13 8e       	std	Z+27, r1	; 0x1b
	blowFrameDetected = false;
    688a:	8d 81       	ldd	r24, Y+5	; 0x05
    688c:	9e 81       	ldd	r25, Y+6	; 0x06
    688e:	fc 01       	movw	r30, r24
    6890:	12 8e       	std	Z+26, r1	; 0x1a
	
	Task *task = NULL;
    6892:	1c 82       	std	Y+4, r1	; 0x04
    6894:	1b 82       	std	Y+3, r1	; 0x03
		
	for (int i = 0; i < numOfTasks; i++)
    6896:	1a 82       	std	Y+2, r1	; 0x02
    6898:	19 82       	std	Y+1, r1	; 0x01
    689a:	2a c0       	rjmp	.+84     	; 0x68f0 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x7e>
	{
		task = tasks[i];
    689c:	2d 81       	ldd	r18, Y+5	; 0x05
    689e:	3e 81       	ldd	r19, Y+6	; 0x06
    68a0:	89 81       	ldd	r24, Y+1	; 0x01
    68a2:	9a 81       	ldd	r25, Y+2	; 0x02
    68a4:	88 0f       	add	r24, r24
    68a6:	99 1f       	adc	r25, r25
    68a8:	82 0f       	add	r24, r18
    68aa:	93 1f       	adc	r25, r19
    68ac:	fc 01       	movw	r30, r24
    68ae:	80 81       	ld	r24, Z
    68b0:	91 81       	ldd	r25, Z+1	; 0x01
    68b2:	9c 83       	std	Y+4, r25	; 0x04
    68b4:	8b 83       	std	Y+3, r24	; 0x03
		
		if (task->getIsReadyToRun())
    68b6:	8b 81       	ldd	r24, Y+3	; 0x03
    68b8:	9c 81       	ldd	r25, Y+4	; 0x04
    68ba:	0e 94 8a 32 	call	0x6514	; 0x6514 <_ZN10helicopter5tasks4Task15getIsReadyToRunEv>
    68be:	88 23       	and	r24, r24
    68c0:	91 f0       	breq	.+36     	; 0x68e6 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x74>
		{
			task->setIsReadyToRun(false);
    68c2:	8b 81       	ldd	r24, Y+3	; 0x03
    68c4:	9c 81       	ldd	r25, Y+4	; 0x04
    68c6:	60 e0       	ldi	r22, 0x00	; 0
    68c8:	0e 94 9b 32 	call	0x6536	; 0x6536 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>
			task->runTask();
    68cc:	8b 81       	ldd	r24, Y+3	; 0x03
    68ce:	9c 81       	ldd	r25, Y+4	; 0x04
    68d0:	fc 01       	movw	r30, r24
    68d2:	80 81       	ld	r24, Z
    68d4:	91 81       	ldd	r25, Z+1	; 0x01
    68d6:	08 96       	adiw	r24, 0x08	; 8
    68d8:	fc 01       	movw	r30, r24
    68da:	20 81       	ld	r18, Z
    68dc:	31 81       	ldd	r19, Z+1	; 0x01
    68de:	8b 81       	ldd	r24, Y+3	; 0x03
    68e0:	9c 81       	ldd	r25, Y+4	; 0x04
    68e2:	f9 01       	movw	r30, r18
    68e4:	19 95       	eicall
	completedDispatch = false;
	blowFrameDetected = false;
	
	Task *task = NULL;
		
	for (int i = 0; i < numOfTasks; i++)
    68e6:	89 81       	ldd	r24, Y+1	; 0x01
    68e8:	9a 81       	ldd	r25, Y+2	; 0x02
    68ea:	01 96       	adiw	r24, 0x01	; 1
    68ec:	9a 83       	std	Y+2, r25	; 0x02
    68ee:	89 83       	std	Y+1, r24	; 0x01
    68f0:	8d 81       	ldd	r24, Y+5	; 0x05
    68f2:	9e 81       	ldd	r25, Y+6	; 0x06
    68f4:	fc 01       	movw	r30, r24
    68f6:	24 89       	ldd	r18, Z+20	; 0x14
    68f8:	35 89       	ldd	r19, Z+21	; 0x15
    68fa:	41 e0       	ldi	r20, 0x01	; 1
    68fc:	89 81       	ldd	r24, Y+1	; 0x01
    68fe:	9a 81       	ldd	r25, Y+2	; 0x02
    6900:	82 17       	cp	r24, r18
    6902:	93 07       	cpc	r25, r19
    6904:	0c f0       	brlt	.+2      	; 0x6908 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x96>
    6906:	40 e0       	ldi	r20, 0x00	; 0
    6908:	44 23       	and	r20, r20
    690a:	41 f6       	brne	.-112    	; 0x689c <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x2a>
	/*if ((TIFR1 & (1<<OCF1A)) != 0)
	{
		model->SystemModel->
	}*/
	
	completedDispatch = true;
    690c:	8d 81       	ldd	r24, Y+5	; 0x05
    690e:	9e 81       	ldd	r25, Y+6	; 0x06
    6910:	21 e0       	ldi	r18, 0x01	; 1
    6912:	fc 01       	movw	r30, r24
    6914:	23 8f       	std	Z+27, r18	; 0x1b
	
	//tells the processor to goto sleep to conserve power since no more
	//tasks are scheduled to be run until after the next scheduler interrupt(tick)
	//which will then wake the processor back up.
	set_sleep_mode(SLEEP_MODE_IDLE);
    6916:	83 e5       	ldi	r24, 0x53	; 83
    6918:	90 e0       	ldi	r25, 0x00	; 0
    691a:	23 e5       	ldi	r18, 0x53	; 83
    691c:	30 e0       	ldi	r19, 0x00	; 0
    691e:	f9 01       	movw	r30, r18
    6920:	20 81       	ld	r18, Z
    6922:	21 7f       	andi	r18, 0xF1	; 241
    6924:	fc 01       	movw	r30, r24
    6926:	20 83       	st	Z, r18
	sleep_mode();
    6928:	83 e5       	ldi	r24, 0x53	; 83
    692a:	90 e0       	ldi	r25, 0x00	; 0
    692c:	23 e5       	ldi	r18, 0x53	; 83
    692e:	30 e0       	ldi	r19, 0x00	; 0
    6930:	f9 01       	movw	r30, r18
    6932:	20 81       	ld	r18, Z
    6934:	21 60       	ori	r18, 0x01	; 1
    6936:	fc 01       	movw	r30, r24
    6938:	20 83       	st	Z, r18
    693a:	88 95       	sleep
    693c:	83 e5       	ldi	r24, 0x53	; 83
    693e:	90 e0       	ldi	r25, 0x00	; 0
    6940:	23 e5       	ldi	r18, 0x53	; 83
    6942:	30 e0       	ldi	r19, 0x00	; 0
    6944:	f9 01       	movw	r30, r18
    6946:	20 81       	ld	r18, Z
    6948:	2e 7f       	andi	r18, 0xFE	; 254
    694a:	fc 01       	movw	r30, r24
    694c:	20 83       	st	Z, r18
}
    694e:	26 96       	adiw	r28, 0x06	; 6
    6950:	0f b6       	in	r0, 0x3f	; 63
    6952:	f8 94       	cli
    6954:	de bf       	out	0x3e, r29	; 62
    6956:	0f be       	out	0x3f, r0	; 63
    6958:	cd bf       	out	0x3d, r28	; 61
    695a:	df 91       	pop	r29
    695c:	cf 91       	pop	r28
    695e:	08 95       	ret

00006960 <_ZN10helicopter9scheduler9Scheduler5startEv>:

void Scheduler::start()
{
    6960:	cf 93       	push	r28
    6962:	df 93       	push	r29
    6964:	1f 92       	push	r1
    6966:	1f 92       	push	r1
    6968:	cd b7       	in	r28, 0x3d	; 61
    696a:	de b7       	in	r29, 0x3e	; 62
    696c:	9a 83       	std	Y+2, r25	; 0x02
    696e:	89 83       	std	Y+1, r24	; 0x01
	//Setting TCCR to a prescaler will start the timer.
	switch(this->prescaler)
    6970:	89 81       	ldd	r24, Y+1	; 0x01
    6972:	9a 81       	ldd	r25, Y+2	; 0x02
    6974:	fc 01       	movw	r30, r24
    6976:	80 8d       	ldd	r24, Z+24	; 0x18
    6978:	91 8d       	ldd	r25, Z+25	; 0x19
    697a:	80 34       	cpi	r24, 0x40	; 64
    697c:	91 05       	cpc	r25, r1
    697e:	39 f1       	breq	.+78     	; 0x69ce <_ZN10helicopter9scheduler9Scheduler5startEv+0x6e>
    6980:	81 34       	cpi	r24, 0x41	; 65
    6982:	91 05       	cpc	r25, r1
    6984:	3c f4       	brge	.+14     	; 0x6994 <_ZN10helicopter9scheduler9Scheduler5startEv+0x34>
    6986:	81 30       	cpi	r24, 0x01	; 1
    6988:	91 05       	cpc	r25, r1
    698a:	69 f0       	breq	.+26     	; 0x69a6 <_ZN10helicopter9scheduler9Scheduler5startEv+0x46>
    698c:	88 30       	cpi	r24, 0x08	; 8
    698e:	91 05       	cpc	r25, r1
    6990:	a1 f0       	breq	.+40     	; 0x69ba <_ZN10helicopter9scheduler9Scheduler5startEv+0x5a>
    6992:	3b c0       	rjmp	.+118    	; 0x6a0a <_ZN10helicopter9scheduler9Scheduler5startEv+0xaa>
    6994:	81 15       	cp	r24, r1
    6996:	f1 e0       	ldi	r31, 0x01	; 1
    6998:	9f 07       	cpc	r25, r31
    699a:	19 f1       	breq	.+70     	; 0x69e2 <_ZN10helicopter9scheduler9Scheduler5startEv+0x82>
    699c:	81 15       	cp	r24, r1
    699e:	24 e0       	ldi	r18, 0x04	; 4
    69a0:	92 07       	cpc	r25, r18
    69a2:	49 f1       	breq	.+82     	; 0x69f6 <_ZN10helicopter9scheduler9Scheduler5startEv+0x96>
    69a4:	32 c0       	rjmp	.+100    	; 0x6a0a <_ZN10helicopter9scheduler9Scheduler5startEv+0xaa>
	{
		case 1:
			TCCR1B |= NoPrescaling;
    69a6:	81 e8       	ldi	r24, 0x81	; 129
    69a8:	90 e0       	ldi	r25, 0x00	; 0
    69aa:	21 e8       	ldi	r18, 0x81	; 129
    69ac:	30 e0       	ldi	r19, 0x00	; 0
    69ae:	f9 01       	movw	r30, r18
    69b0:	20 81       	ld	r18, Z
    69b2:	21 60       	ori	r18, 0x01	; 1
    69b4:	fc 01       	movw	r30, r24
    69b6:	20 83       	st	Z, r18
			break;
    69b8:	31 c0       	rjmp	.+98     	; 0x6a1c <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 8:
			TCCR1B |= PrescaleByEight;
    69ba:	81 e8       	ldi	r24, 0x81	; 129
    69bc:	90 e0       	ldi	r25, 0x00	; 0
    69be:	21 e8       	ldi	r18, 0x81	; 129
    69c0:	30 e0       	ldi	r19, 0x00	; 0
    69c2:	f9 01       	movw	r30, r18
    69c4:	20 81       	ld	r18, Z
    69c6:	22 60       	ori	r18, 0x02	; 2
    69c8:	fc 01       	movw	r30, r24
    69ca:	20 83       	st	Z, r18
			break;
    69cc:	27 c0       	rjmp	.+78     	; 0x6a1c <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 64:
			TCCR1B |= PrescaleBySixtyFour;
    69ce:	81 e8       	ldi	r24, 0x81	; 129
    69d0:	90 e0       	ldi	r25, 0x00	; 0
    69d2:	21 e8       	ldi	r18, 0x81	; 129
    69d4:	30 e0       	ldi	r19, 0x00	; 0
    69d6:	f9 01       	movw	r30, r18
    69d8:	20 81       	ld	r18, Z
    69da:	23 60       	ori	r18, 0x03	; 3
    69dc:	fc 01       	movw	r30, r24
    69de:	20 83       	st	Z, r18
			break;
    69e0:	1d c0       	rjmp	.+58     	; 0x6a1c <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 256:
			TCCR1B |= PrescaleByTwofiftysix;
    69e2:	81 e8       	ldi	r24, 0x81	; 129
    69e4:	90 e0       	ldi	r25, 0x00	; 0
    69e6:	21 e8       	ldi	r18, 0x81	; 129
    69e8:	30 e0       	ldi	r19, 0x00	; 0
    69ea:	f9 01       	movw	r30, r18
    69ec:	20 81       	ld	r18, Z
    69ee:	24 60       	ori	r18, 0x04	; 4
    69f0:	fc 01       	movw	r30, r24
    69f2:	20 83       	st	Z, r18
			break;
    69f4:	13 c0       	rjmp	.+38     	; 0x6a1c <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 1024:
			TCCR1B |= PrescaleByTentwentyfour;
    69f6:	81 e8       	ldi	r24, 0x81	; 129
    69f8:	90 e0       	ldi	r25, 0x00	; 0
    69fa:	21 e8       	ldi	r18, 0x81	; 129
    69fc:	30 e0       	ldi	r19, 0x00	; 0
    69fe:	f9 01       	movw	r30, r18
    6a00:	20 81       	ld	r18, Z
    6a02:	25 60       	ori	r18, 0x05	; 5
    6a04:	fc 01       	movw	r30, r24
    6a06:	20 83       	st	Z, r18
			break;
    6a08:	09 c0       	rjmp	.+18     	; 0x6a1c <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		default:
			TCCR1B |= NoPrescaling;	
    6a0a:	81 e8       	ldi	r24, 0x81	; 129
    6a0c:	90 e0       	ldi	r25, 0x00	; 0
    6a0e:	21 e8       	ldi	r18, 0x81	; 129
    6a10:	30 e0       	ldi	r19, 0x00	; 0
    6a12:	f9 01       	movw	r30, r18
    6a14:	20 81       	ld	r18, Z
    6a16:	21 60       	ori	r18, 0x01	; 1
    6a18:	fc 01       	movw	r30, r24
    6a1a:	20 83       	st	Z, r18
	}
}
    6a1c:	0f 90       	pop	r0
    6a1e:	0f 90       	pop	r0
    6a20:	df 91       	pop	r29
    6a22:	cf 91       	pop	r28
    6a24:	08 95       	ret

00006a26 <__vector_17>:

/**
 * Interrupt service routine for determining when tasks are ready to execute.
 */
ISR(TIMER1_COMPA_vect)
{
    6a26:	1f 92       	push	r1
    6a28:	0f 92       	push	r0
    6a2a:	00 90 5f 00 	lds	r0, 0x005F
    6a2e:	0f 92       	push	r0
    6a30:	11 24       	eor	r1, r1
    6a32:	00 90 5b 00 	lds	r0, 0x005B
    6a36:	0f 92       	push	r0
    6a38:	2f 93       	push	r18
    6a3a:	3f 93       	push	r19
    6a3c:	4f 93       	push	r20
    6a3e:	5f 93       	push	r21
    6a40:	6f 93       	push	r22
    6a42:	7f 93       	push	r23
    6a44:	8f 93       	push	r24
    6a46:	9f 93       	push	r25
    6a48:	af 93       	push	r26
    6a4a:	bf 93       	push	r27
    6a4c:	ef 93       	push	r30
    6a4e:	ff 93       	push	r31
    6a50:	cf 93       	push	r28
    6a52:	df 93       	push	r29
    6a54:	00 d0       	rcall	.+0      	; 0x6a56 <__vector_17+0x30>
    6a56:	00 d0       	rcall	.+0      	; 0x6a58 <__vector_17+0x32>
    6a58:	cd b7       	in	r28, 0x3d	; 61
    6a5a:	de b7       	in	r29, 0x3e	; 62
	//TODO do we want to stop interrupts in this method?
	Scheduler *scheduler = Scheduler::getScheduler();
    6a5c:	0e 94 0d 33 	call	0x661a	; 0x661a <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>
    6a60:	9c 83       	std	Y+4, r25	; 0x04
    6a62:	8b 83       	std	Y+3, r24	; 0x03
	
	//Detect if the scheduler blew a frame
	if (!scheduler->hasCompletedDispatch())
    6a64:	8b 81       	ldd	r24, Y+3	; 0x03
    6a66:	9c 81       	ldd	r25, Y+4	; 0x04
    6a68:	0e 94 fc 32 	call	0x65f8	; 0x65f8 <_ZN10helicopter9scheduler9Scheduler20hasCompletedDispatchEv>
    6a6c:	98 2f       	mov	r25, r24
    6a6e:	81 e0       	ldi	r24, 0x01	; 1
    6a70:	89 27       	eor	r24, r25
    6a72:	88 23       	and	r24, r24
    6a74:	29 f0       	breq	.+10     	; 0x6a80 <__vector_17+0x5a>
	{
		scheduler->hasBlownFrame(true);
    6a76:	8b 81       	ldd	r24, Y+3	; 0x03
    6a78:	9c 81       	ldd	r25, Y+4	; 0x04
    6a7a:	61 e0       	ldi	r22, 0x01	; 1
    6a7c:	0e 94 e9 32 	call	0x65d2	; 0x65d2 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb>
	}
	
	Task *task = NULL;
    6a80:	1e 82       	std	Y+6, r1	; 0x06
    6a82:	1d 82       	std	Y+5, r1	; 0x05
	
	//iterate through all the tasks and decrement how many
	//'ticks' are left before the task is ready to execute.
	for (int i = 0; i < scheduler->getNumOfTasks(); i++)
    6a84:	1a 82       	std	Y+2, r1	; 0x02
    6a86:	19 82       	std	Y+1, r1	; 0x01
    6a88:	33 c0       	rjmp	.+102    	; 0x6af0 <__vector_17+0xca>
	{
		task = scheduler->getTasks()[i];
    6a8a:	8b 81       	ldd	r24, Y+3	; 0x03
    6a8c:	9c 81       	ldd	r25, Y+4	; 0x04
    6a8e:	0e 94 da 32 	call	0x65b4	; 0x65b4 <_ZN10helicopter9scheduler9Scheduler8getTasksEv>
    6a92:	9c 01       	movw	r18, r24
    6a94:	89 81       	ldd	r24, Y+1	; 0x01
    6a96:	9a 81       	ldd	r25, Y+2	; 0x02
    6a98:	88 0f       	add	r24, r24
    6a9a:	99 1f       	adc	r25, r25
    6a9c:	82 0f       	add	r24, r18
    6a9e:	93 1f       	adc	r25, r19
    6aa0:	fc 01       	movw	r30, r24
    6aa2:	80 81       	ld	r24, Z
    6aa4:	91 81       	ldd	r25, Z+1	; 0x01
    6aa6:	9e 83       	std	Y+6, r25	; 0x06
    6aa8:	8d 83       	std	Y+5, r24	; 0x05
		
		if (task->getDelay() == 0)
    6aaa:	8d 81       	ldd	r24, Y+5	; 0x05
    6aac:	9e 81       	ldd	r25, Y+6	; 0x06
    6aae:	0e 94 4e 32 	call	0x649c	; 0x649c <_ZN10helicopter5tasks4Task8getDelayEv>
    6ab2:	21 e0       	ldi	r18, 0x01	; 1
    6ab4:	00 97       	sbiw	r24, 0x00	; 0
    6ab6:	09 f0       	breq	.+2      	; 0x6aba <__vector_17+0x94>
    6ab8:	20 e0       	ldi	r18, 0x00	; 0
    6aba:	22 23       	and	r18, r18
    6abc:	81 f0       	breq	.+32     	; 0x6ade <__vector_17+0xb8>
		{
			//Mark the task as ready to run
			task->setIsReadyToRun(true);
    6abe:	8d 81       	ldd	r24, Y+5	; 0x05
    6ac0:	9e 81       	ldd	r25, Y+6	; 0x06
    6ac2:	61 e0       	ldi	r22, 0x01	; 1
    6ac4:	0e 94 9b 32 	call	0x6536	; 0x6536 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>
			task->setDelay(task->getPeriod());
    6ac8:	8d 81       	ldd	r24, Y+5	; 0x05
    6aca:	9e 81       	ldd	r25, Y+6	; 0x06
    6acc:	0e 94 60 32 	call	0x64c0	; 0x64c0 <_ZN10helicopter5tasks4Task9getPeriodEv>
    6ad0:	9c 01       	movw	r18, r24
    6ad2:	8d 81       	ldd	r24, Y+5	; 0x05
    6ad4:	9e 81       	ldd	r25, Y+6	; 0x06
    6ad6:	b9 01       	movw	r22, r18
    6ad8:	0e 94 72 32 	call	0x64e4	; 0x64e4 <_ZN10helicopter5tasks4Task8setDelayEi>
    6adc:	04 c0       	rjmp	.+8      	; 0x6ae6 <__vector_17+0xc0>
		}else
		{
			task->reduceDelay();
    6ade:	8d 81       	ldd	r24, Y+5	; 0x05
    6ae0:	9e 81       	ldd	r25, Y+6	; 0x06
    6ae2:	0e 94 ae 32 	call	0x655c	; 0x655c <_ZN10helicopter5tasks4Task11reduceDelayEv>
	
	Task *task = NULL;
	
	//iterate through all the tasks and decrement how many
	//'ticks' are left before the task is ready to execute.
	for (int i = 0; i < scheduler->getNumOfTasks(); i++)
    6ae6:	89 81       	ldd	r24, Y+1	; 0x01
    6ae8:	9a 81       	ldd	r25, Y+2	; 0x02
    6aea:	01 96       	adiw	r24, 0x01	; 1
    6aec:	9a 83       	std	Y+2, r25	; 0x02
    6aee:	89 83       	std	Y+1, r24	; 0x01
    6af0:	8b 81       	ldd	r24, Y+3	; 0x03
    6af2:	9c 81       	ldd	r25, Y+4	; 0x04
    6af4:	0e 94 c8 32 	call	0x6590	; 0x6590 <_ZN10helicopter9scheduler9Scheduler13getNumOfTasksEv>
    6af8:	9c 01       	movw	r18, r24
    6afa:	41 e0       	ldi	r20, 0x01	; 1
    6afc:	89 81       	ldd	r24, Y+1	; 0x01
    6afe:	9a 81       	ldd	r25, Y+2	; 0x02
    6b00:	82 17       	cp	r24, r18
    6b02:	93 07       	cpc	r25, r19
    6b04:	0c f0       	brlt	.+2      	; 0x6b08 <__vector_17+0xe2>
    6b06:	40 e0       	ldi	r20, 0x00	; 0
    6b08:	44 23       	and	r20, r20
    6b0a:	09 f0       	breq	.+2      	; 0x6b0e <__vector_17+0xe8>
    6b0c:	be cf       	rjmp	.-132    	; 0x6a8a <__vector_17+0x64>
		}else
		{
			task->reduceDelay();
		}
	}
}
    6b0e:	26 96       	adiw	r28, 0x06	; 6
    6b10:	0f b6       	in	r0, 0x3f	; 63
    6b12:	f8 94       	cli
    6b14:	de bf       	out	0x3e, r29	; 62
    6b16:	0f be       	out	0x3f, r0	; 63
    6b18:	cd bf       	out	0x3d, r28	; 61
    6b1a:	df 91       	pop	r29
    6b1c:	cf 91       	pop	r28
    6b1e:	ff 91       	pop	r31
    6b20:	ef 91       	pop	r30
    6b22:	bf 91       	pop	r27
    6b24:	af 91       	pop	r26
    6b26:	9f 91       	pop	r25
    6b28:	8f 91       	pop	r24
    6b2a:	7f 91       	pop	r23
    6b2c:	6f 91       	pop	r22
    6b2e:	5f 91       	pop	r21
    6b30:	4f 91       	pop	r20
    6b32:	3f 91       	pop	r19
    6b34:	2f 91       	pop	r18
    6b36:	0f 90       	pop	r0
    6b38:	00 92 5b 00 	sts	0x005B, r0
    6b3c:	0f 90       	pop	r0
    6b3e:	00 92 5f 00 	sts	0x005F, r0
    6b42:	0f 90       	pop	r0
    6b44:	1f 90       	pop	r1
    6b46:	18 95       	reti

00006b48 <_ZN10helicopter5tasks4Task4initEv>:
				virtual ~Task(){}
				
				/**
				 * Function to initialize the task before execution.
				 */
				virtual void init(){;}
    6b48:	cf 93       	push	r28
    6b4a:	df 93       	push	r29
    6b4c:	1f 92       	push	r1
    6b4e:	1f 92       	push	r1
    6b50:	cd b7       	in	r28, 0x3d	; 61
    6b52:	de b7       	in	r29, 0x3e	; 62
    6b54:	9a 83       	std	Y+2, r25	; 0x02
    6b56:	89 83       	std	Y+1, r24	; 0x01
    6b58:	0f 90       	pop	r0
    6b5a:	0f 90       	pop	r0
    6b5c:	df 91       	pop	r29
    6b5e:	cf 91       	pop	r28
    6b60:	08 95       	ret

00006b62 <_ZN10helicopter5tasks16PIDInnerLoopTaskC1EPNS_10controller13PIDControllerEii>:
 */ 
#include "PIDInnerLoopTask.h"

using namespace helicopter::tasks;

PIDInnerLoopTask::PIDInnerLoopTask (PIDController *pidController, int delay, int period) :
    6b62:	cf 93       	push	r28
    6b64:	df 93       	push	r29
    6b66:	cd b7       	in	r28, 0x3d	; 61
    6b68:	de b7       	in	r29, 0x3e	; 62
    6b6a:	28 97       	sbiw	r28, 0x08	; 8
    6b6c:	0f b6       	in	r0, 0x3f	; 63
    6b6e:	f8 94       	cli
    6b70:	de bf       	out	0x3e, r29	; 62
    6b72:	0f be       	out	0x3f, r0	; 63
    6b74:	cd bf       	out	0x3d, r28	; 61
    6b76:	9a 83       	std	Y+2, r25	; 0x02
    6b78:	89 83       	std	Y+1, r24	; 0x01
    6b7a:	7c 83       	std	Y+4, r23	; 0x04
    6b7c:	6b 83       	std	Y+3, r22	; 0x03
    6b7e:	5e 83       	std	Y+6, r21	; 0x06
    6b80:	4d 83       	std	Y+5, r20	; 0x05
    6b82:	38 87       	std	Y+8, r19	; 0x08
    6b84:	2f 83       	std	Y+7, r18	; 0x07
Task(delay, period),
pidController(pidController)
    6b86:	89 81       	ldd	r24, Y+1	; 0x01
    6b88:	9a 81       	ldd	r25, Y+2	; 0x02
    6b8a:	4f 81       	ldd	r20, Y+7	; 0x07
    6b8c:	58 85       	ldd	r21, Y+8	; 0x08
    6b8e:	2d 81       	ldd	r18, Y+5	; 0x05
    6b90:	3e 81       	ldd	r19, Y+6	; 0x06
    6b92:	b9 01       	movw	r22, r18
    6b94:	0e 94 16 3c 	call	0x782c	; 0x782c <_ZN10helicopter5tasks4TaskC1Eii>
    6b98:	89 81       	ldd	r24, Y+1	; 0x01
    6b9a:	9a 81       	ldd	r25, Y+2	; 0x02
    6b9c:	2a e4       	ldi	r18, 0x4A	; 74
    6b9e:	32 e0       	ldi	r19, 0x02	; 2
    6ba0:	fc 01       	movw	r30, r24
    6ba2:	31 83       	std	Z+1, r19	; 0x01
    6ba4:	20 83       	st	Z, r18
    6ba6:	89 81       	ldd	r24, Y+1	; 0x01
    6ba8:	9a 81       	ldd	r25, Y+2	; 0x02
    6baa:	2b 81       	ldd	r18, Y+3	; 0x03
    6bac:	3c 81       	ldd	r19, Y+4	; 0x04
    6bae:	fc 01       	movw	r30, r24
    6bb0:	30 87       	std	Z+8, r19	; 0x08
    6bb2:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    6bb4:	28 96       	adiw	r28, 0x08	; 8
    6bb6:	0f b6       	in	r0, 0x3f	; 63
    6bb8:	f8 94       	cli
    6bba:	de bf       	out	0x3e, r29	; 62
    6bbc:	0f be       	out	0x3f, r0	; 63
    6bbe:	cd bf       	out	0x3d, r28	; 61
    6bc0:	df 91       	pop	r29
    6bc2:	cf 91       	pop	r28
    6bc4:	08 95       	ret

00006bc6 <_ZN10helicopter5tasks16PIDInnerLoopTask11runTaskImplEv>:

void PIDInnerLoopTask::runTaskImpl()
{
    6bc6:	cf 93       	push	r28
    6bc8:	df 93       	push	r29
    6bca:	1f 92       	push	r1
    6bcc:	1f 92       	push	r1
    6bce:	cd b7       	in	r28, 0x3d	; 61
    6bd0:	de b7       	in	r29, 0x3e	; 62
    6bd2:	9a 83       	std	Y+2, r25	; 0x02
    6bd4:	89 83       	std	Y+1, r24	; 0x01
	pidController->cyclicLateralInnerLoopUpdate();
    6bd6:	89 81       	ldd	r24, Y+1	; 0x01
    6bd8:	9a 81       	ldd	r25, Y+2	; 0x02
    6bda:	fc 01       	movw	r30, r24
    6bdc:	87 81       	ldd	r24, Z+7	; 0x07
    6bde:	90 85       	ldd	r25, Z+8	; 0x08
    6be0:	0e 94 be 10 	call	0x217c	; 0x217c <_ZN10helicopter10controller13PIDController28cyclicLateralInnerLoopUpdateEv>
	pidController->cyclicLongitudeInnerLoopUpdate();
    6be4:	89 81       	ldd	r24, Y+1	; 0x01
    6be6:	9a 81       	ldd	r25, Y+2	; 0x02
    6be8:	fc 01       	movw	r30, r24
    6bea:	87 81       	ldd	r24, Z+7	; 0x07
    6bec:	90 85       	ldd	r25, Z+8	; 0x08
    6bee:	0e 94 27 10 	call	0x204e	; 0x204e <_ZN10helicopter10controller13PIDController30cyclicLongitudeInnerLoopUpdateEv>
}
    6bf2:	0f 90       	pop	r0
    6bf4:	0f 90       	pop	r0
    6bf6:	df 91       	pop	r29
    6bf8:	cf 91       	pop	r28
    6bfa:	08 95       	ret

00006bfc <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class executes the outer loop of the PID controller
		 */
		class PIDInnerLoopTask : public Task
    6bfc:	cf 93       	push	r28
    6bfe:	df 93       	push	r29
    6c00:	1f 92       	push	r1
    6c02:	1f 92       	push	r1
    6c04:	cd b7       	in	r28, 0x3d	; 61
    6c06:	de b7       	in	r29, 0x3e	; 62
    6c08:	9a 83       	std	Y+2, r25	; 0x02
    6c0a:	89 83       	std	Y+1, r24	; 0x01
    6c0c:	89 81       	ldd	r24, Y+1	; 0x01
    6c0e:	9a 81       	ldd	r25, Y+2	; 0x02
    6c10:	2a e4       	ldi	r18, 0x4A	; 74
    6c12:	32 e0       	ldi	r19, 0x02	; 2
    6c14:	fc 01       	movw	r30, r24
    6c16:	31 83       	std	Z+1, r19	; 0x01
    6c18:	20 83       	st	Z, r18
    6c1a:	89 81       	ldd	r24, Y+1	; 0x01
    6c1c:	9a 81       	ldd	r25, Y+2	; 0x02
    6c1e:	0e 94 cf 13 	call	0x279e	; 0x279e <_ZN10helicopter5tasks4TaskD1Ev>
    6c22:	80 e0       	ldi	r24, 0x00	; 0
    6c24:	90 e0       	ldi	r25, 0x00	; 0
    6c26:	81 70       	andi	r24, 0x01	; 1
    6c28:	99 27       	eor	r25, r25
    6c2a:	00 97       	sbiw	r24, 0x00	; 0
    6c2c:	21 f0       	breq	.+8      	; 0x6c36 <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev+0x3a>
    6c2e:	89 81       	ldd	r24, Y+1	; 0x01
    6c30:	9a 81       	ldd	r25, Y+2	; 0x02
    6c32:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    6c36:	0f 90       	pop	r0
    6c38:	0f 90       	pop	r0
    6c3a:	df 91       	pop	r29
    6c3c:	cf 91       	pop	r28
    6c3e:	08 95       	ret

00006c40 <_ZN10helicopter5tasks16PIDInnerLoopTaskD0Ev>:
    6c40:	cf 93       	push	r28
    6c42:	df 93       	push	r29
    6c44:	1f 92       	push	r1
    6c46:	1f 92       	push	r1
    6c48:	cd b7       	in	r28, 0x3d	; 61
    6c4a:	de b7       	in	r29, 0x3e	; 62
    6c4c:	9a 83       	std	Y+2, r25	; 0x02
    6c4e:	89 83       	std	Y+1, r24	; 0x01
    6c50:	89 81       	ldd	r24, Y+1	; 0x01
    6c52:	9a 81       	ldd	r25, Y+2	; 0x02
    6c54:	0e 94 fe 35 	call	0x6bfc	; 0x6bfc <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>
    6c58:	89 81       	ldd	r24, Y+1	; 0x01
    6c5a:	9a 81       	ldd	r25, Y+2	; 0x02
    6c5c:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    6c60:	0f 90       	pop	r0
    6c62:	0f 90       	pop	r0
    6c64:	df 91       	pop	r29
    6c66:	cf 91       	pop	r28
    6c68:	08 95       	ret

00006c6a <_ZN10helicopter5tasks16PIDOuterLoopTaskC1EPNS_10controller13PIDControllerEii>:
 */ 
#include "PIDOuterLoopTask.h"

using namespace helicopter::tasks;

PIDOuterLoopTask::PIDOuterLoopTask (PIDController *pidController, int delay, int period) :
    6c6a:	cf 93       	push	r28
    6c6c:	df 93       	push	r29
    6c6e:	cd b7       	in	r28, 0x3d	; 61
    6c70:	de b7       	in	r29, 0x3e	; 62
    6c72:	28 97       	sbiw	r28, 0x08	; 8
    6c74:	0f b6       	in	r0, 0x3f	; 63
    6c76:	f8 94       	cli
    6c78:	de bf       	out	0x3e, r29	; 62
    6c7a:	0f be       	out	0x3f, r0	; 63
    6c7c:	cd bf       	out	0x3d, r28	; 61
    6c7e:	9a 83       	std	Y+2, r25	; 0x02
    6c80:	89 83       	std	Y+1, r24	; 0x01
    6c82:	7c 83       	std	Y+4, r23	; 0x04
    6c84:	6b 83       	std	Y+3, r22	; 0x03
    6c86:	5e 83       	std	Y+6, r21	; 0x06
    6c88:	4d 83       	std	Y+5, r20	; 0x05
    6c8a:	38 87       	std	Y+8, r19	; 0x08
    6c8c:	2f 83       	std	Y+7, r18	; 0x07
Task(delay, period),
pidController(pidController)
    6c8e:	89 81       	ldd	r24, Y+1	; 0x01
    6c90:	9a 81       	ldd	r25, Y+2	; 0x02
    6c92:	4f 81       	ldd	r20, Y+7	; 0x07
    6c94:	58 85       	ldd	r21, Y+8	; 0x08
    6c96:	2d 81       	ldd	r18, Y+5	; 0x05
    6c98:	3e 81       	ldd	r19, Y+6	; 0x06
    6c9a:	b9 01       	movw	r22, r18
    6c9c:	0e 94 16 3c 	call	0x782c	; 0x782c <_ZN10helicopter5tasks4TaskC1Eii>
    6ca0:	89 81       	ldd	r24, Y+1	; 0x01
    6ca2:	9a 81       	ldd	r25, Y+2	; 0x02
    6ca4:	28 e5       	ldi	r18, 0x58	; 88
    6ca6:	32 e0       	ldi	r19, 0x02	; 2
    6ca8:	fc 01       	movw	r30, r24
    6caa:	31 83       	std	Z+1, r19	; 0x01
    6cac:	20 83       	st	Z, r18
    6cae:	89 81       	ldd	r24, Y+1	; 0x01
    6cb0:	9a 81       	ldd	r25, Y+2	; 0x02
    6cb2:	2b 81       	ldd	r18, Y+3	; 0x03
    6cb4:	3c 81       	ldd	r19, Y+4	; 0x04
    6cb6:	fc 01       	movw	r30, r24
    6cb8:	30 87       	std	Z+8, r19	; 0x08
    6cba:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    6cbc:	28 96       	adiw	r28, 0x08	; 8
    6cbe:	0f b6       	in	r0, 0x3f	; 63
    6cc0:	f8 94       	cli
    6cc2:	de bf       	out	0x3e, r29	; 62
    6cc4:	0f be       	out	0x3f, r0	; 63
    6cc6:	cd bf       	out	0x3d, r28	; 61
    6cc8:	df 91       	pop	r29
    6cca:	cf 91       	pop	r28
    6ccc:	08 95       	ret

00006cce <_ZN10helicopter5tasks16PIDOuterLoopTask11runTaskImplEv>:

void PIDOuterLoopTask::runTaskImpl()
{
    6cce:	cf 93       	push	r28
    6cd0:	df 93       	push	r29
    6cd2:	1f 92       	push	r1
    6cd4:	1f 92       	push	r1
    6cd6:	cd b7       	in	r28, 0x3d	; 61
    6cd8:	de b7       	in	r29, 0x3e	; 62
    6cda:	9a 83       	std	Y+2, r25	; 0x02
    6cdc:	89 83       	std	Y+1, r24	; 0x01
	pidController->mainRotorCollectiveOuterLoopUpdate();
    6cde:	89 81       	ldd	r24, Y+1	; 0x01
    6ce0:	9a 81       	ldd	r25, Y+2	; 0x02
    6ce2:	fc 01       	movw	r30, r24
    6ce4:	87 81       	ldd	r24, Z+7	; 0x07
    6ce6:	90 85       	ldd	r25, Z+8	; 0x08
    6ce8:	0e 94 3b 0c 	call	0x1876	; 0x1876 <_ZN10helicopter10controller13PIDController34mainRotorCollectiveOuterLoopUpdateEv>
	pidController->tailRotorCollectiveOuterLoopUpdate();
    6cec:	89 81       	ldd	r24, Y+1	; 0x01
    6cee:	9a 81       	ldd	r25, Y+2	; 0x02
    6cf0:	fc 01       	movw	r30, r24
    6cf2:	87 81       	ldd	r24, Z+7	; 0x07
    6cf4:	90 85       	ldd	r25, Z+8	; 0x08
    6cf6:	0e 94 cd 0a 	call	0x159a	; 0x159a <_ZN10helicopter10controller13PIDController34tailRotorCollectiveOuterLoopUpdateEv>
	pidController->cyclicLongitudeOuterLoopUpdate();
    6cfa:	89 81       	ldd	r24, Y+1	; 0x01
    6cfc:	9a 81       	ldd	r25, Y+2	; 0x02
    6cfe:	fc 01       	movw	r30, r24
    6d00:	87 81       	ldd	r24, Z+7	; 0x07
    6d02:	90 85       	ldd	r25, Z+8	; 0x08
    6d04:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <_ZN10helicopter10controller13PIDController30cyclicLongitudeOuterLoopUpdateEv>
	pidController->cyclicLateralOuterLoopUpdate();
    6d08:	89 81       	ldd	r24, Y+1	; 0x01
    6d0a:	9a 81       	ldd	r25, Y+2	; 0x02
    6d0c:	fc 01       	movw	r30, r24
    6d0e:	87 81       	ldd	r24, Z+7	; 0x07
    6d10:	90 85       	ldd	r25, Z+8	; 0x08
    6d12:	0e 94 e2 0e 	call	0x1dc4	; 0x1dc4 <_ZN10helicopter10controller13PIDController28cyclicLateralOuterLoopUpdateEv>
}
    6d16:	0f 90       	pop	r0
    6d18:	0f 90       	pop	r0
    6d1a:	df 91       	pop	r29
    6d1c:	cf 91       	pop	r28
    6d1e:	08 95       	ret

00006d20 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class executes the outer loop of the PID controller
		 */
		class PIDOuterLoopTask : public Task
    6d20:	cf 93       	push	r28
    6d22:	df 93       	push	r29
    6d24:	1f 92       	push	r1
    6d26:	1f 92       	push	r1
    6d28:	cd b7       	in	r28, 0x3d	; 61
    6d2a:	de b7       	in	r29, 0x3e	; 62
    6d2c:	9a 83       	std	Y+2, r25	; 0x02
    6d2e:	89 83       	std	Y+1, r24	; 0x01
    6d30:	89 81       	ldd	r24, Y+1	; 0x01
    6d32:	9a 81       	ldd	r25, Y+2	; 0x02
    6d34:	28 e5       	ldi	r18, 0x58	; 88
    6d36:	32 e0       	ldi	r19, 0x02	; 2
    6d38:	fc 01       	movw	r30, r24
    6d3a:	31 83       	std	Z+1, r19	; 0x01
    6d3c:	20 83       	st	Z, r18
    6d3e:	89 81       	ldd	r24, Y+1	; 0x01
    6d40:	9a 81       	ldd	r25, Y+2	; 0x02
    6d42:	0e 94 cf 13 	call	0x279e	; 0x279e <_ZN10helicopter5tasks4TaskD1Ev>
    6d46:	80 e0       	ldi	r24, 0x00	; 0
    6d48:	90 e0       	ldi	r25, 0x00	; 0
    6d4a:	81 70       	andi	r24, 0x01	; 1
    6d4c:	99 27       	eor	r25, r25
    6d4e:	00 97       	sbiw	r24, 0x00	; 0
    6d50:	21 f0       	breq	.+8      	; 0x6d5a <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev+0x3a>
    6d52:	89 81       	ldd	r24, Y+1	; 0x01
    6d54:	9a 81       	ldd	r25, Y+2	; 0x02
    6d56:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    6d5a:	0f 90       	pop	r0
    6d5c:	0f 90       	pop	r0
    6d5e:	df 91       	pop	r29
    6d60:	cf 91       	pop	r28
    6d62:	08 95       	ret

00006d64 <_ZN10helicopter5tasks16PIDOuterLoopTaskD0Ev>:
    6d64:	cf 93       	push	r28
    6d66:	df 93       	push	r29
    6d68:	1f 92       	push	r1
    6d6a:	1f 92       	push	r1
    6d6c:	cd b7       	in	r28, 0x3d	; 61
    6d6e:	de b7       	in	r29, 0x3e	; 62
    6d70:	9a 83       	std	Y+2, r25	; 0x02
    6d72:	89 83       	std	Y+1, r24	; 0x01
    6d74:	89 81       	ldd	r24, Y+1	; 0x01
    6d76:	9a 81       	ldd	r25, Y+2	; 0x02
    6d78:	0e 94 90 36 	call	0x6d20	; 0x6d20 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>
    6d7c:	89 81       	ldd	r24, Y+1	; 0x01
    6d7e:	9a 81       	ldd	r25, Y+2	; 0x02
    6d80:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    6d84:	0f 90       	pop	r0
    6d86:	0f 90       	pop	r0
    6d88:	df 91       	pop	r29
    6d8a:	cf 91       	pop	r28
    6d8c:	08 95       	ret

00006d8e <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf>:
																							
		
		
		
			float XNEDBodyFrame() const {return xNEDBodyFrame;}
			void XNEDBodyFrame(float val) { xNEDBodyFrame = val;}
    6d8e:	cf 93       	push	r28
    6d90:	df 93       	push	r29
    6d92:	00 d0       	rcall	.+0      	; 0x6d94 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf+0x6>
    6d94:	00 d0       	rcall	.+0      	; 0x6d96 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf+0x8>
    6d96:	cd b7       	in	r28, 0x3d	; 61
    6d98:	de b7       	in	r29, 0x3e	; 62
    6d9a:	9a 83       	std	Y+2, r25	; 0x02
    6d9c:	89 83       	std	Y+1, r24	; 0x01
    6d9e:	4b 83       	std	Y+3, r20	; 0x03
    6da0:	5c 83       	std	Y+4, r21	; 0x04
    6da2:	6d 83       	std	Y+5, r22	; 0x05
    6da4:	7e 83       	std	Y+6, r23	; 0x06
    6da6:	29 81       	ldd	r18, Y+1	; 0x01
    6da8:	3a 81       	ldd	r19, Y+2	; 0x02
    6daa:	8b 81       	ldd	r24, Y+3	; 0x03
    6dac:	9c 81       	ldd	r25, Y+4	; 0x04
    6dae:	ad 81       	ldd	r26, Y+5	; 0x05
    6db0:	be 81       	ldd	r27, Y+6	; 0x06
    6db2:	f9 01       	movw	r30, r18
    6db4:	84 a3       	std	Z+36, r24	; 0x24
    6db6:	95 a3       	std	Z+37, r25	; 0x25
    6db8:	a6 a3       	std	Z+38, r26	; 0x26
    6dba:	b7 a3       	std	Z+39, r27	; 0x27
    6dbc:	26 96       	adiw	r28, 0x06	; 6
    6dbe:	0f b6       	in	r0, 0x3f	; 63
    6dc0:	f8 94       	cli
    6dc2:	de bf       	out	0x3e, r29	; 62
    6dc4:	0f be       	out	0x3f, r0	; 63
    6dc6:	cd bf       	out	0x3d, r28	; 61
    6dc8:	df 91       	pop	r29
    6dca:	cf 91       	pop	r28
    6dcc:	08 95       	ret

00006dce <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf>:
						
						


			float YNEDBodyFrame() const {return yNEDBodyFrame;}
			void YNEDBodyFrame(float val) { yNEDBodyFrame = val;}
    6dce:	cf 93       	push	r28
    6dd0:	df 93       	push	r29
    6dd2:	00 d0       	rcall	.+0      	; 0x6dd4 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf+0x6>
    6dd4:	00 d0       	rcall	.+0      	; 0x6dd6 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf+0x8>
    6dd6:	cd b7       	in	r28, 0x3d	; 61
    6dd8:	de b7       	in	r29, 0x3e	; 62
    6dda:	9a 83       	std	Y+2, r25	; 0x02
    6ddc:	89 83       	std	Y+1, r24	; 0x01
    6dde:	4b 83       	std	Y+3, r20	; 0x03
    6de0:	5c 83       	std	Y+4, r21	; 0x04
    6de2:	6d 83       	std	Y+5, r22	; 0x05
    6de4:	7e 83       	std	Y+6, r23	; 0x06
    6de6:	89 81       	ldd	r24, Y+1	; 0x01
    6de8:	9a 81       	ldd	r25, Y+2	; 0x02
    6dea:	9c 01       	movw	r18, r24
    6dec:	20 5b       	subi	r18, 0xB0	; 176
    6dee:	3f 4f       	sbci	r19, 0xFF	; 255
    6df0:	8b 81       	ldd	r24, Y+3	; 0x03
    6df2:	9c 81       	ldd	r25, Y+4	; 0x04
    6df4:	ad 81       	ldd	r26, Y+5	; 0x05
    6df6:	be 81       	ldd	r27, Y+6	; 0x06
    6df8:	f9 01       	movw	r30, r18
    6dfa:	80 83       	st	Z, r24
    6dfc:	91 83       	std	Z+1, r25	; 0x01
    6dfe:	a2 83       	std	Z+2, r26	; 0x02
    6e00:	b3 83       	std	Z+3, r27	; 0x03
    6e02:	26 96       	adiw	r28, 0x06	; 6
    6e04:	0f b6       	in	r0, 0x3f	; 63
    6e06:	f8 94       	cli
    6e08:	de bf       	out	0x3e, r29	; 62
    6e0a:	0f be       	out	0x3f, r0	; 63
    6e0c:	cd bf       	out	0x3d, r28	; 61
    6e0e:	df 91       	pop	r29
    6e10:	cf 91       	pop	r28
    6e12:	08 95       	ret

00006e14 <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf>:

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
			void AltitudeFeetAgl(float val) { altitudeFeetAgl = val; }

			float ZNEDBodyFrame() const { return zNEDBodyFrame; }
			void ZNEDBodyFrame(float val) { zNEDBodyFrame = val; }
    6e14:	cf 93       	push	r28
    6e16:	df 93       	push	r29
    6e18:	00 d0       	rcall	.+0      	; 0x6e1a <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf+0x6>
    6e1a:	00 d0       	rcall	.+0      	; 0x6e1c <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf+0x8>
    6e1c:	cd b7       	in	r28, 0x3d	; 61
    6e1e:	de b7       	in	r29, 0x3e	; 62
    6e20:	9a 83       	std	Y+2, r25	; 0x02
    6e22:	89 83       	std	Y+1, r24	; 0x01
    6e24:	4b 83       	std	Y+3, r20	; 0x03
    6e26:	5c 83       	std	Y+4, r21	; 0x04
    6e28:	6d 83       	std	Y+5, r22	; 0x05
    6e2a:	7e 83       	std	Y+6, r23	; 0x06
    6e2c:	89 81       	ldd	r24, Y+1	; 0x01
    6e2e:	9a 81       	ldd	r25, Y+2	; 0x02
    6e30:	9c 01       	movw	r18, r24
    6e32:	20 58       	subi	r18, 0x80	; 128
    6e34:	3f 4f       	sbci	r19, 0xFF	; 255
    6e36:	8b 81       	ldd	r24, Y+3	; 0x03
    6e38:	9c 81       	ldd	r25, Y+4	; 0x04
    6e3a:	ad 81       	ldd	r26, Y+5	; 0x05
    6e3c:	be 81       	ldd	r27, Y+6	; 0x06
    6e3e:	f9 01       	movw	r30, r18
    6e40:	80 83       	st	Z, r24
    6e42:	91 83       	std	Z+1, r25	; 0x01
    6e44:	a2 83       	std	Z+2, r26	; 0x02
    6e46:	b3 83       	std	Z+3, r27	; 0x03
    6e48:	26 96       	adiw	r28, 0x06	; 6
    6e4a:	0f b6       	in	r0, 0x3f	; 63
    6e4c:	f8 94       	cli
    6e4e:	de bf       	out	0x3e, r29	; 62
    6e50:	0f be       	out	0x3f, r0	; 63
    6e52:	cd bf       	out	0x3d, r28	; 61
    6e54:	df 91       	pop	r29
    6e56:	cf 91       	pop	r28
    6e58:	08 95       	ret

00006e5a <_ZNK10helicopter5model11SystemModel20InitialXPositionEcefEv>:
			void ChecksumErrors(long val) { checksumErrors = val; }
			
			long  BlownFrames() const {return numOfFramesBlown;}
			void BlownFrames( long val ) { numOfFramesBlown = val;}

			long  InitialXPositionEcef() const {return initialXPositionEcef;}
    6e5a:	cf 93       	push	r28
    6e5c:	df 93       	push	r29
    6e5e:	1f 92       	push	r1
    6e60:	1f 92       	push	r1
    6e62:	cd b7       	in	r28, 0x3d	; 61
    6e64:	de b7       	in	r29, 0x3e	; 62
    6e66:	9a 83       	std	Y+2, r25	; 0x02
    6e68:	89 83       	std	Y+1, r24	; 0x01
    6e6a:	89 81       	ldd	r24, Y+1	; 0x01
    6e6c:	9a 81       	ldd	r25, Y+2	; 0x02
    6e6e:	84 54       	subi	r24, 0x44	; 68
    6e70:	9f 4f       	sbci	r25, 0xFF	; 255
    6e72:	fc 01       	movw	r30, r24
    6e74:	80 81       	ld	r24, Z
    6e76:	91 81       	ldd	r25, Z+1	; 0x01
    6e78:	a2 81       	ldd	r26, Z+2	; 0x02
    6e7a:	b3 81       	ldd	r27, Z+3	; 0x03
    6e7c:	bc 01       	movw	r22, r24
    6e7e:	cd 01       	movw	r24, r26
    6e80:	0e 94 dc 43 	call	0x87b8	; 0x87b8 <__fixsfsi>
    6e84:	dc 01       	movw	r26, r24
    6e86:	cb 01       	movw	r24, r22
    6e88:	bc 01       	movw	r22, r24
    6e8a:	cd 01       	movw	r24, r26
    6e8c:	0f 90       	pop	r0
    6e8e:	0f 90       	pop	r0
    6e90:	df 91       	pop	r29
    6e92:	cf 91       	pop	r28
    6e94:	08 95       	ret

00006e96 <_ZNK10helicopter5model11SystemModel20InitialYPositionEcefEv>:
			void InitialXPositionEcef( long val ) { initialXPositionEcef = val;}			

			long  InitialYPositionEcef() const {return initialYPositionEcef;}
    6e96:	cf 93       	push	r28
    6e98:	df 93       	push	r29
    6e9a:	1f 92       	push	r1
    6e9c:	1f 92       	push	r1
    6e9e:	cd b7       	in	r28, 0x3d	; 61
    6ea0:	de b7       	in	r29, 0x3e	; 62
    6ea2:	9a 83       	std	Y+2, r25	; 0x02
    6ea4:	89 83       	std	Y+1, r24	; 0x01
    6ea6:	89 81       	ldd	r24, Y+1	; 0x01
    6ea8:	9a 81       	ldd	r25, Y+2	; 0x02
    6eaa:	80 54       	subi	r24, 0x40	; 64
    6eac:	9f 4f       	sbci	r25, 0xFF	; 255
    6eae:	fc 01       	movw	r30, r24
    6eb0:	80 81       	ld	r24, Z
    6eb2:	91 81       	ldd	r25, Z+1	; 0x01
    6eb4:	a2 81       	ldd	r26, Z+2	; 0x02
    6eb6:	b3 81       	ldd	r27, Z+3	; 0x03
    6eb8:	bc 01       	movw	r22, r24
    6eba:	cd 01       	movw	r24, r26
    6ebc:	0e 94 dc 43 	call	0x87b8	; 0x87b8 <__fixsfsi>
    6ec0:	dc 01       	movw	r26, r24
    6ec2:	cb 01       	movw	r24, r22
    6ec4:	bc 01       	movw	r22, r24
    6ec6:	cd 01       	movw	r24, r26
    6ec8:	0f 90       	pop	r0
    6eca:	0f 90       	pop	r0
    6ecc:	df 91       	pop	r29
    6ece:	cf 91       	pop	r28
    6ed0:	08 95       	ret

00006ed2 <_ZNK10helicopter5model11SystemModel20InitialZPositionEcefEv>:
			void InitialYPositionEcef( long val ) { initialYPositionEcef = val;}

			long  InitialZPositionEcef() const {return initialZPositionEcef;}
    6ed2:	cf 93       	push	r28
    6ed4:	df 93       	push	r29
    6ed6:	1f 92       	push	r1
    6ed8:	1f 92       	push	r1
    6eda:	cd b7       	in	r28, 0x3d	; 61
    6edc:	de b7       	in	r29, 0x3e	; 62
    6ede:	9a 83       	std	Y+2, r25	; 0x02
    6ee0:	89 83       	std	Y+1, r24	; 0x01
    6ee2:	89 81       	ldd	r24, Y+1	; 0x01
    6ee4:	9a 81       	ldd	r25, Y+2	; 0x02
    6ee6:	8c 53       	subi	r24, 0x3C	; 60
    6ee8:	9f 4f       	sbci	r25, 0xFF	; 255
    6eea:	fc 01       	movw	r30, r24
    6eec:	80 81       	ld	r24, Z
    6eee:	91 81       	ldd	r25, Z+1	; 0x01
    6ef0:	a2 81       	ldd	r26, Z+2	; 0x02
    6ef2:	b3 81       	ldd	r27, Z+3	; 0x03
    6ef4:	bc 01       	movw	r22, r24
    6ef6:	cd 01       	movw	r24, r26
    6ef8:	0e 94 dc 43 	call	0x87b8	; 0x87b8 <__fixsfsi>
    6efc:	dc 01       	movw	r26, r24
    6efe:	cb 01       	movw	r24, r22
    6f00:	bc 01       	movw	r22, r24
    6f02:	cd 01       	movw	r24, r26
    6f04:	0f 90       	pop	r0
    6f06:	0f 90       	pop	r0
    6f08:	df 91       	pop	r29
    6f0a:	cf 91       	pop	r28
    6f0c:	08 95       	ret

00006f0e <_ZN10helicopter5tasks20SensorProcessingTaskC1EPNS_5model11SystemModelEii>:
#include "CoordinateUtil.h"

using namespace helicopter::tasks;
using namespace helicopter::util;

SensorProcessingTask::SensorProcessingTask (SystemModel *model, int delay, int period) :
    6f0e:	cf 93       	push	r28
    6f10:	df 93       	push	r29
    6f12:	cd b7       	in	r28, 0x3d	; 61
    6f14:	de b7       	in	r29, 0x3e	; 62
    6f16:	28 97       	sbiw	r28, 0x08	; 8
    6f18:	0f b6       	in	r0, 0x3f	; 63
    6f1a:	f8 94       	cli
    6f1c:	de bf       	out	0x3e, r29	; 62
    6f1e:	0f be       	out	0x3f, r0	; 63
    6f20:	cd bf       	out	0x3d, r28	; 61
    6f22:	9a 83       	std	Y+2, r25	; 0x02
    6f24:	89 83       	std	Y+1, r24	; 0x01
    6f26:	7c 83       	std	Y+4, r23	; 0x04
    6f28:	6b 83       	std	Y+3, r22	; 0x03
    6f2a:	5e 83       	std	Y+6, r21	; 0x06
    6f2c:	4d 83       	std	Y+5, r20	; 0x05
    6f2e:	38 87       	std	Y+8, r19	; 0x08
    6f30:	2f 83       	std	Y+7, r18	; 0x07
	Task(delay, period),
	model(model)
    6f32:	89 81       	ldd	r24, Y+1	; 0x01
    6f34:	9a 81       	ldd	r25, Y+2	; 0x02
    6f36:	4f 81       	ldd	r20, Y+7	; 0x07
    6f38:	58 85       	ldd	r21, Y+8	; 0x08
    6f3a:	2d 81       	ldd	r18, Y+5	; 0x05
    6f3c:	3e 81       	ldd	r19, Y+6	; 0x06
    6f3e:	b9 01       	movw	r22, r18
    6f40:	0e 94 16 3c 	call	0x782c	; 0x782c <_ZN10helicopter5tasks4TaskC1Eii>
    6f44:	89 81       	ldd	r24, Y+1	; 0x01
    6f46:	9a 81       	ldd	r25, Y+2	; 0x02
    6f48:	26 e6       	ldi	r18, 0x66	; 102
    6f4a:	32 e0       	ldi	r19, 0x02	; 2
    6f4c:	fc 01       	movw	r30, r24
    6f4e:	31 83       	std	Z+1, r19	; 0x01
    6f50:	20 83       	st	Z, r18
    6f52:	89 81       	ldd	r24, Y+1	; 0x01
    6f54:	9a 81       	ldd	r25, Y+2	; 0x02
    6f56:	2b 81       	ldd	r18, Y+3	; 0x03
    6f58:	3c 81       	ldd	r19, Y+4	; 0x04
    6f5a:	fc 01       	movw	r30, r24
    6f5c:	30 87       	std	Z+8, r19	; 0x08
    6f5e:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    6f60:	28 96       	adiw	r28, 0x08	; 8
    6f62:	0f b6       	in	r0, 0x3f	; 63
    6f64:	f8 94       	cli
    6f66:	de bf       	out	0x3e, r29	; 62
    6f68:	0f be       	out	0x3f, r0	; 63
    6f6a:	cd bf       	out	0x3d, r28	; 61
    6f6c:	df 91       	pop	r29
    6f6e:	cf 91       	pop	r28
    6f70:	08 95       	ret

00006f72 <_ZN10helicopter5tasks20SensorProcessingTask11runTaskImplEv>:

void SensorProcessingTask::runTaskImpl()
{
    6f72:	4f 92       	push	r4
    6f74:	5f 92       	push	r5
    6f76:	6f 92       	push	r6
    6f78:	7f 92       	push	r7
    6f7a:	8f 92       	push	r8
    6f7c:	9f 92       	push	r9
    6f7e:	af 92       	push	r10
    6f80:	bf 92       	push	r11
    6f82:	cf 92       	push	r12
    6f84:	df 92       	push	r13
    6f86:	ef 92       	push	r14
    6f88:	ff 92       	push	r15
    6f8a:	0f 93       	push	r16
    6f8c:	1f 93       	push	r17
    6f8e:	cf 93       	push	r28
    6f90:	df 93       	push	r29
    6f92:	cd b7       	in	r28, 0x3d	; 61
    6f94:	de b7       	in	r29, 0x3e	; 62
    6f96:	66 97       	sbiw	r28, 0x16	; 22
    6f98:	0f b6       	in	r0, 0x3f	; 63
    6f9a:	f8 94       	cli
    6f9c:	de bf       	out	0x3e, r29	; 62
    6f9e:	0f be       	out	0x3f, r0	; 63
    6fa0:	cd bf       	out	0x3d, r28	; 61
    6fa2:	9e 87       	std	Y+14, r25	; 0x0e
    6fa4:	8d 87       	std	Y+13, r24	; 0x0d
	float localNEDX = 0;
    6fa6:	19 82       	std	Y+1, r1	; 0x01
    6fa8:	1a 82       	std	Y+2, r1	; 0x02
    6faa:	1b 82       	std	Y+3, r1	; 0x03
    6fac:	1c 82       	std	Y+4, r1	; 0x04
	float localNEDY = 0;
    6fae:	1d 82       	std	Y+5, r1	; 0x05
    6fb0:	1e 82       	std	Y+6, r1	; 0x06
    6fb2:	1f 82       	std	Y+7, r1	; 0x07
    6fb4:	18 86       	std	Y+8, r1	; 0x08
	float localNEDZ = 0;
    6fb6:	19 86       	std	Y+9, r1	; 0x09
    6fb8:	1a 86       	std	Y+10, r1	; 0x0a
    6fba:	1b 86       	std	Y+11, r1	; 0x0b
    6fbc:	1c 86       	std	Y+12, r1	; 0x0c
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
		localNEDX,localNEDY,localNEDZ);
    6fbe:	8d 85       	ldd	r24, Y+13	; 0x0d
    6fc0:	9e 85       	ldd	r25, Y+14	; 0x0e
    6fc2:	fc 01       	movw	r30, r24
    6fc4:	87 81       	ldd	r24, Z+7	; 0x07
    6fc6:	90 85       	ldd	r25, Z+8	; 0x08
    6fc8:	8c 01       	movw	r16, r24
    6fca:	08 53       	subi	r16, 0x38	; 56
    6fcc:	1f 4f       	sbci	r17, 0xFF	; 255
	float localNEDX = 0;
	float localNEDY = 0;
	float localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    6fce:	8d 85       	ldd	r24, Y+13	; 0x0d
    6fd0:	9e 85       	ldd	r25, Y+14	; 0x0e
    6fd2:	fc 01       	movw	r30, r24
    6fd4:	87 81       	ldd	r24, Z+7	; 0x07
    6fd6:	90 85       	ldd	r25, Z+8	; 0x08
    6fd8:	0e 94 69 37 	call	0x6ed2	; 0x6ed2 <_ZNK10helicopter5model11SystemModel20InitialZPositionEcefEv>
    6fdc:	dc 01       	movw	r26, r24
    6fde:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    6fe0:	bc 01       	movw	r22, r24
    6fe2:	cd 01       	movw	r24, r26
    6fe4:	0e 94 0f 44 	call	0x881e	; 0x881e <__floatsisf>
    6fe8:	4b 01       	movw	r8, r22
    6fea:	5c 01       	movw	r10, r24
	float localNEDX = 0;
	float localNEDY = 0;
	float localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    6fec:	8d 85       	ldd	r24, Y+13	; 0x0d
    6fee:	9e 85       	ldd	r25, Y+14	; 0x0e
    6ff0:	fc 01       	movw	r30, r24
    6ff2:	87 81       	ldd	r24, Z+7	; 0x07
    6ff4:	90 85       	ldd	r25, Z+8	; 0x08
    6ff6:	0e 94 4b 37 	call	0x6e96	; 0x6e96 <_ZNK10helicopter5model11SystemModel20InitialYPositionEcefEv>
    6ffa:	dc 01       	movw	r26, r24
    6ffc:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    6ffe:	bc 01       	movw	r22, r24
    7000:	cd 01       	movw	r24, r26
    7002:	0e 94 0f 44 	call	0x881e	; 0x881e <__floatsisf>
    7006:	6b 01       	movw	r12, r22
    7008:	7c 01       	movw	r14, r24
	float localNEDX = 0;
	float localNEDY = 0;
	float localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    700a:	8d 85       	ldd	r24, Y+13	; 0x0d
    700c:	9e 85       	ldd	r25, Y+14	; 0x0e
    700e:	fc 01       	movw	r30, r24
    7010:	87 81       	ldd	r24, Z+7	; 0x07
    7012:	90 85       	ldd	r25, Z+8	; 0x08
    7014:	0e 94 2d 37 	call	0x6e5a	; 0x6e5a <_ZNK10helicopter5model11SystemModel20InitialXPositionEcefEv>
    7018:	dc 01       	movw	r26, r24
    701a:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    701c:	bc 01       	movw	r22, r24
    701e:	cd 01       	movw	r24, r26
    7020:	0e 94 0f 44 	call	0x881e	; 0x881e <__floatsisf>
    7024:	6f 87       	std	Y+15, r22	; 0x0f
    7026:	78 8b       	std	Y+16, r23	; 0x10
    7028:	89 8b       	std	Y+17, r24	; 0x11
    702a:	9a 8b       	std	Y+18, r25	; 0x12
    702c:	8d 85       	ldd	r24, Y+13	; 0x0d
    702e:	9e 85       	ldd	r25, Y+14	; 0x0e
    7030:	fc 01       	movw	r30, r24
    7032:	87 81       	ldd	r24, Z+7	; 0x07
    7034:	90 85       	ldd	r25, Z+8	; 0x08
    7036:	0e 94 25 18 	call	0x304a	; 0x304a <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    703a:	6b 8b       	std	Y+19, r22	; 0x13
    703c:	7c 8b       	std	Y+20, r23	; 0x14
    703e:	8d 8b       	std	Y+21, r24	; 0x15
    7040:	9e 8b       	std	Y+22, r25	; 0x16
    7042:	8d 85       	ldd	r24, Y+13	; 0x0d
    7044:	9e 85       	ldd	r25, Y+14	; 0x0e
    7046:	fc 01       	movw	r30, r24
    7048:	87 81       	ldd	r24, Z+7	; 0x07
    704a:	90 85       	ldd	r25, Z+8	; 0x08
    704c:	0e 94 9b 18 	call	0x3136	; 0x3136 <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    7050:	2b 01       	movw	r4, r22
    7052:	3c 01       	movw	r6, r24
    7054:	8d 85       	ldd	r24, Y+13	; 0x0d
    7056:	9e 85       	ldd	r25, Y+14	; 0x0e
    7058:	fc 01       	movw	r30, r24
    705a:	87 81       	ldd	r24, Z+7	; 0x07
    705c:	90 85       	ldd	r25, Z+8	; 0x08
    705e:	0e 94 83 18 	call	0x3106	; 0x3106 <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    7062:	dc 01       	movw	r26, r24
    7064:	cb 01       	movw	r24, r22
    7066:	9e 01       	movw	r18, r28
    7068:	27 5f       	subi	r18, 0xF7	; 247
    706a:	3f 4f       	sbci	r19, 0xFF	; 255
    706c:	43 2f       	mov	r20, r19
    706e:	4f 93       	push	r20
    7070:	2f 93       	push	r18
    7072:	9e 01       	movw	r18, r28
    7074:	2b 5f       	subi	r18, 0xFB	; 251
    7076:	3f 4f       	sbci	r19, 0xFF	; 255
    7078:	43 2f       	mov	r20, r19
    707a:	4f 93       	push	r20
    707c:	2f 93       	push	r18
    707e:	9e 01       	movw	r18, r28
    7080:	2f 5f       	subi	r18, 0xFF	; 255
    7082:	3f 4f       	sbci	r19, 0xFF	; 255
    7084:	23 2f       	mov	r18, r19
    7086:	2f 93       	push	r18
    7088:	9e 01       	movw	r18, r28
    708a:	2f 5f       	subi	r18, 0xFF	; 255
    708c:	3f 4f       	sbci	r19, 0xFF	; 255
    708e:	2f 93       	push	r18
    7090:	21 2f       	mov	r18, r17
    7092:	2f 93       	push	r18
    7094:	20 2f       	mov	r18, r16
    7096:	2f 93       	push	r18
    7098:	2b 2d       	mov	r18, r11
    709a:	2f 93       	push	r18
    709c:	2a 2d       	mov	r18, r10
    709e:	2f 93       	push	r18
    70a0:	29 2d       	mov	r18, r9
    70a2:	2f 93       	push	r18
    70a4:	28 2d       	mov	r18, r8
    70a6:	2f 93       	push	r18
    70a8:	2f 2d       	mov	r18, r15
    70aa:	2f 93       	push	r18
    70ac:	2e 2d       	mov	r18, r14
    70ae:	2f 93       	push	r18
    70b0:	2d 2d       	mov	r18, r13
    70b2:	2f 93       	push	r18
    70b4:	2c 2d       	mov	r18, r12
    70b6:	2f 93       	push	r18
    70b8:	af 84       	ldd	r10, Y+15	; 0x0f
    70ba:	b8 88       	ldd	r11, Y+16	; 0x10
    70bc:	c9 88       	ldd	r12, Y+17	; 0x11
    70be:	da 88       	ldd	r13, Y+18	; 0x12
    70c0:	eb 88       	ldd	r14, Y+19	; 0x13
    70c2:	fc 88       	ldd	r15, Y+20	; 0x14
    70c4:	0d 89       	ldd	r16, Y+21	; 0x15
    70c6:	1e 89       	ldd	r17, Y+22	; 0x16
    70c8:	a3 01       	movw	r20, r6
    70ca:	92 01       	movw	r18, r4
    70cc:	bc 01       	movw	r22, r24
    70ce:	cd 01       	movw	r24, r26
    70d0:	0e 94 63 41 	call	0x82c6	; 0x82c6 <_ZN10helicopter4util14CoordinateUtil29ConvertFromGeodedicToLocalNEDEffffffPA3_fRfS4_S4_>
    70d4:	8d b7       	in	r24, 0x3d	; 61
    70d6:	9e b7       	in	r25, 0x3e	; 62
    70d8:	40 96       	adiw	r24, 0x10	; 16
    70da:	0f b6       	in	r0, 0x3f	; 63
    70dc:	f8 94       	cli
    70de:	de bf       	out	0x3e, r29	; 62
    70e0:	0f be       	out	0x3f, r0	; 63
    70e2:	cd bf       	out	0x3d, r28	; 61
		
		
	model->XNEDBodyFrame(localNEDX);
    70e4:	89 81       	ldd	r24, Y+1	; 0x01
    70e6:	9a 81       	ldd	r25, Y+2	; 0x02
    70e8:	ab 81       	ldd	r26, Y+3	; 0x03
    70ea:	bc 81       	ldd	r27, Y+4	; 0x04
    70ec:	2d 85       	ldd	r18, Y+13	; 0x0d
    70ee:	3e 85       	ldd	r19, Y+14	; 0x0e
    70f0:	f9 01       	movw	r30, r18
    70f2:	27 81       	ldd	r18, Z+7	; 0x07
    70f4:	30 85       	ldd	r19, Z+8	; 0x08
    70f6:	ac 01       	movw	r20, r24
    70f8:	bd 01       	movw	r22, r26
    70fa:	c9 01       	movw	r24, r18
    70fc:	0e 94 c7 36 	call	0x6d8e	; 0x6d8e <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf>
	model->YNEDBodyFrame(localNEDY);
    7100:	8d 81       	ldd	r24, Y+5	; 0x05
    7102:	9e 81       	ldd	r25, Y+6	; 0x06
    7104:	af 81       	ldd	r26, Y+7	; 0x07
    7106:	b8 85       	ldd	r27, Y+8	; 0x08
    7108:	2d 85       	ldd	r18, Y+13	; 0x0d
    710a:	3e 85       	ldd	r19, Y+14	; 0x0e
    710c:	f9 01       	movw	r30, r18
    710e:	27 81       	ldd	r18, Z+7	; 0x07
    7110:	30 85       	ldd	r19, Z+8	; 0x08
    7112:	ac 01       	movw	r20, r24
    7114:	bd 01       	movw	r22, r26
    7116:	c9 01       	movw	r24, r18
    7118:	0e 94 e7 36 	call	0x6dce	; 0x6dce <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf>
	model->ZNEDBodyFrame(localNEDZ);
    711c:	89 85       	ldd	r24, Y+9	; 0x09
    711e:	9a 85       	ldd	r25, Y+10	; 0x0a
    7120:	ab 85       	ldd	r26, Y+11	; 0x0b
    7122:	bc 85       	ldd	r27, Y+12	; 0x0c
    7124:	2d 85       	ldd	r18, Y+13	; 0x0d
    7126:	3e 85       	ldd	r19, Y+14	; 0x0e
    7128:	f9 01       	movw	r30, r18
    712a:	27 81       	ldd	r18, Z+7	; 0x07
    712c:	30 85       	ldd	r19, Z+8	; 0x08
    712e:	ac 01       	movw	r20, r24
    7130:	bd 01       	movw	r22, r26
    7132:	c9 01       	movw	r24, r18
    7134:	0e 94 0a 37 	call	0x6e14	; 0x6e14 <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf>
}
    7138:	66 96       	adiw	r28, 0x16	; 22
    713a:	0f b6       	in	r0, 0x3f	; 63
    713c:	f8 94       	cli
    713e:	de bf       	out	0x3e, r29	; 62
    7140:	0f be       	out	0x3f, r0	; 63
    7142:	cd bf       	out	0x3d, r28	; 61
    7144:	df 91       	pop	r29
    7146:	cf 91       	pop	r28
    7148:	1f 91       	pop	r17
    714a:	0f 91       	pop	r16
    714c:	ff 90       	pop	r15
    714e:	ef 90       	pop	r14
    7150:	df 90       	pop	r13
    7152:	cf 90       	pop	r12
    7154:	bf 90       	pop	r11
    7156:	af 90       	pop	r10
    7158:	9f 90       	pop	r9
    715a:	8f 90       	pop	r8
    715c:	7f 90       	pop	r7
    715e:	6f 90       	pop	r6
    7160:	5f 90       	pop	r5
    7162:	4f 90       	pop	r4
    7164:	08 95       	ret

00007166 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>:
	{
		/**
		 * This class processes and transforms sensor data such as converting latitude/longitude into
		 * x,y,z coordinates
		 */
		class SensorProcessingTask : public Task
    7166:	cf 93       	push	r28
    7168:	df 93       	push	r29
    716a:	1f 92       	push	r1
    716c:	1f 92       	push	r1
    716e:	cd b7       	in	r28, 0x3d	; 61
    7170:	de b7       	in	r29, 0x3e	; 62
    7172:	9a 83       	std	Y+2, r25	; 0x02
    7174:	89 83       	std	Y+1, r24	; 0x01
    7176:	89 81       	ldd	r24, Y+1	; 0x01
    7178:	9a 81       	ldd	r25, Y+2	; 0x02
    717a:	26 e6       	ldi	r18, 0x66	; 102
    717c:	32 e0       	ldi	r19, 0x02	; 2
    717e:	fc 01       	movw	r30, r24
    7180:	31 83       	std	Z+1, r19	; 0x01
    7182:	20 83       	st	Z, r18
    7184:	89 81       	ldd	r24, Y+1	; 0x01
    7186:	9a 81       	ldd	r25, Y+2	; 0x02
    7188:	0e 94 cf 13 	call	0x279e	; 0x279e <_ZN10helicopter5tasks4TaskD1Ev>
    718c:	80 e0       	ldi	r24, 0x00	; 0
    718e:	90 e0       	ldi	r25, 0x00	; 0
    7190:	81 70       	andi	r24, 0x01	; 1
    7192:	99 27       	eor	r25, r25
    7194:	00 97       	sbiw	r24, 0x00	; 0
    7196:	21 f0       	breq	.+8      	; 0x71a0 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev+0x3a>
    7198:	89 81       	ldd	r24, Y+1	; 0x01
    719a:	9a 81       	ldd	r25, Y+2	; 0x02
    719c:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    71a0:	0f 90       	pop	r0
    71a2:	0f 90       	pop	r0
    71a4:	df 91       	pop	r29
    71a6:	cf 91       	pop	r28
    71a8:	08 95       	ret

000071aa <_ZN10helicopter5tasks20SensorProcessingTaskD0Ev>:
    71aa:	cf 93       	push	r28
    71ac:	df 93       	push	r29
    71ae:	1f 92       	push	r1
    71b0:	1f 92       	push	r1
    71b2:	cd b7       	in	r28, 0x3d	; 61
    71b4:	de b7       	in	r29, 0x3e	; 62
    71b6:	9a 83       	std	Y+2, r25	; 0x02
    71b8:	89 83       	std	Y+1, r24	; 0x01
    71ba:	89 81       	ldd	r24, Y+1	; 0x01
    71bc:	9a 81       	ldd	r25, Y+2	; 0x02
    71be:	0e 94 b3 38 	call	0x7166	; 0x7166 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>
    71c2:	89 81       	ldd	r24, Y+1	; 0x01
    71c4:	9a 81       	ldd	r25, Y+2	; 0x02
    71c6:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    71ca:	0f 90       	pop	r0
    71cc:	0f 90       	pop	r0
    71ce:	df 91       	pop	r29
    71d0:	cf 91       	pop	r28
    71d2:	08 95       	ret

000071d4 <_ZN10helicopter10controller13PIDController16setZIntegralGainEf>:
				
				
				
				
				
				void setZIntegralGain(float val)
    71d4:	cf 93       	push	r28
    71d6:	df 93       	push	r29
    71d8:	00 d0       	rcall	.+0      	; 0x71da <_ZN10helicopter10controller13PIDController16setZIntegralGainEf+0x6>
    71da:	00 d0       	rcall	.+0      	; 0x71dc <_ZN10helicopter10controller13PIDController16setZIntegralGainEf+0x8>
    71dc:	cd b7       	in	r28, 0x3d	; 61
    71de:	de b7       	in	r29, 0x3e	; 62
    71e0:	9a 83       	std	Y+2, r25	; 0x02
    71e2:	89 83       	std	Y+1, r24	; 0x01
    71e4:	4b 83       	std	Y+3, r20	; 0x03
    71e6:	5c 83       	std	Y+4, r21	; 0x04
    71e8:	6d 83       	std	Y+5, r22	; 0x05
    71ea:	7e 83       	std	Y+6, r23	; 0x06
				{
					zIntegralGain = val;
    71ec:	29 81       	ldd	r18, Y+1	; 0x01
    71ee:	3a 81       	ldd	r19, Y+2	; 0x02
    71f0:	8b 81       	ldd	r24, Y+3	; 0x03
    71f2:	9c 81       	ldd	r25, Y+4	; 0x04
    71f4:	ad 81       	ldd	r26, Y+5	; 0x05
    71f6:	be 81       	ldd	r27, Y+6	; 0x06
    71f8:	f9 01       	movw	r30, r18
    71fa:	82 af       	std	Z+58, r24	; 0x3a
    71fc:	93 af       	std	Z+59, r25	; 0x3b
    71fe:	a4 af       	std	Z+60, r26	; 0x3c
    7200:	b5 af       	std	Z+61, r27	; 0x3d
				}
    7202:	26 96       	adiw	r28, 0x06	; 6
    7204:	0f b6       	in	r0, 0x3f	; 63
    7206:	f8 94       	cli
    7208:	de bf       	out	0x3e, r29	; 62
    720a:	0f be       	out	0x3f, r0	; 63
    720c:	cd bf       	out	0x3d, r28	; 61
    720e:	df 91       	pop	r29
    7210:	cf 91       	pop	r28
    7212:	08 95       	ret

00007214 <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf>:
				
				void setZDerivativeGain(float val)
    7214:	cf 93       	push	r28
    7216:	df 93       	push	r29
    7218:	00 d0       	rcall	.+0      	; 0x721a <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf+0x6>
    721a:	00 d0       	rcall	.+0      	; 0x721c <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf+0x8>
    721c:	cd b7       	in	r28, 0x3d	; 61
    721e:	de b7       	in	r29, 0x3e	; 62
    7220:	9a 83       	std	Y+2, r25	; 0x02
    7222:	89 83       	std	Y+1, r24	; 0x01
    7224:	4b 83       	std	Y+3, r20	; 0x03
    7226:	5c 83       	std	Y+4, r21	; 0x04
    7228:	6d 83       	std	Y+5, r22	; 0x05
    722a:	7e 83       	std	Y+6, r23	; 0x06
				{
					zDerivativeGain = val;
    722c:	89 81       	ldd	r24, Y+1	; 0x01
    722e:	9a 81       	ldd	r25, Y+2	; 0x02
    7230:	9c 01       	movw	r18, r24
    7232:	22 5c       	subi	r18, 0xC2	; 194
    7234:	3f 4f       	sbci	r19, 0xFF	; 255
    7236:	8b 81       	ldd	r24, Y+3	; 0x03
    7238:	9c 81       	ldd	r25, Y+4	; 0x04
    723a:	ad 81       	ldd	r26, Y+5	; 0x05
    723c:	be 81       	ldd	r27, Y+6	; 0x06
    723e:	f9 01       	movw	r30, r18
    7240:	80 83       	st	Z, r24
    7242:	91 83       	std	Z+1, r25	; 0x01
    7244:	a2 83       	std	Z+2, r26	; 0x02
    7246:	b3 83       	std	Z+3, r27	; 0x03
				}
    7248:	26 96       	adiw	r28, 0x06	; 6
    724a:	0f b6       	in	r0, 0x3f	; 63
    724c:	f8 94       	cli
    724e:	de bf       	out	0x3e, r29	; 62
    7250:	0f be       	out	0x3f, r0	; 63
    7252:	cd bf       	out	0x3d, r28	; 61
    7254:	df 91       	pop	r29
    7256:	cf 91       	pop	r28
    7258:	08 95       	ret

0000725a <_ZN10helicopter10controller13PIDController20setZProportionalGainEf>:
				
				void setZProportionalGain(float val)
    725a:	cf 93       	push	r28
    725c:	df 93       	push	r29
    725e:	00 d0       	rcall	.+0      	; 0x7260 <_ZN10helicopter10controller13PIDController20setZProportionalGainEf+0x6>
    7260:	00 d0       	rcall	.+0      	; 0x7262 <_ZN10helicopter10controller13PIDController20setZProportionalGainEf+0x8>
    7262:	cd b7       	in	r28, 0x3d	; 61
    7264:	de b7       	in	r29, 0x3e	; 62
    7266:	9a 83       	std	Y+2, r25	; 0x02
    7268:	89 83       	std	Y+1, r24	; 0x01
    726a:	4b 83       	std	Y+3, r20	; 0x03
    726c:	5c 83       	std	Y+4, r21	; 0x04
    726e:	6d 83       	std	Y+5, r22	; 0x05
    7270:	7e 83       	std	Y+6, r23	; 0x06
				{
					zProportionalGain = val;
    7272:	89 81       	ldd	r24, Y+1	; 0x01
    7274:	9a 81       	ldd	r25, Y+2	; 0x02
    7276:	9c 01       	movw	r18, r24
    7278:	2e 5b       	subi	r18, 0xBE	; 190
    727a:	3f 4f       	sbci	r19, 0xFF	; 255
    727c:	8b 81       	ldd	r24, Y+3	; 0x03
    727e:	9c 81       	ldd	r25, Y+4	; 0x04
    7280:	ad 81       	ldd	r26, Y+5	; 0x05
    7282:	be 81       	ldd	r27, Y+6	; 0x06
    7284:	f9 01       	movw	r30, r18
    7286:	80 83       	st	Z, r24
    7288:	91 83       	std	Z+1, r25	; 0x01
    728a:	a2 83       	std	Z+2, r26	; 0x02
    728c:	b3 83       	std	Z+3, r27	; 0x03
				}
    728e:	26 96       	adiw	r28, 0x06	; 6
    7290:	0f b6       	in	r0, 0x3f	; 63
    7292:	f8 94       	cli
    7294:	de bf       	out	0x3e, r29	; 62
    7296:	0f be       	out	0x3f, r0	; 63
    7298:	cd bf       	out	0x3d, r28	; 61
    729a:	df 91       	pop	r29
    729c:	cf 91       	pop	r28
    729e:	08 95       	ret

000072a0 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf>:
				
				void setZAntiWindupGain(float val)
    72a0:	cf 93       	push	r28
    72a2:	df 93       	push	r29
    72a4:	00 d0       	rcall	.+0      	; 0x72a6 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf+0x6>
    72a6:	00 d0       	rcall	.+0      	; 0x72a8 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf+0x8>
    72a8:	cd b7       	in	r28, 0x3d	; 61
    72aa:	de b7       	in	r29, 0x3e	; 62
    72ac:	9a 83       	std	Y+2, r25	; 0x02
    72ae:	89 83       	std	Y+1, r24	; 0x01
    72b0:	4b 83       	std	Y+3, r20	; 0x03
    72b2:	5c 83       	std	Y+4, r21	; 0x04
    72b4:	6d 83       	std	Y+5, r22	; 0x05
    72b6:	7e 83       	std	Y+6, r23	; 0x06
				{
					zAntiWindupGain = val;
    72b8:	89 81       	ldd	r24, Y+1	; 0x01
    72ba:	9a 81       	ldd	r25, Y+2	; 0x02
    72bc:	9c 01       	movw	r18, r24
    72be:	2a 5b       	subi	r18, 0xBA	; 186
    72c0:	3f 4f       	sbci	r19, 0xFF	; 255
    72c2:	8b 81       	ldd	r24, Y+3	; 0x03
    72c4:	9c 81       	ldd	r25, Y+4	; 0x04
    72c6:	ad 81       	ldd	r26, Y+5	; 0x05
    72c8:	be 81       	ldd	r27, Y+6	; 0x06
    72ca:	f9 01       	movw	r30, r18
    72cc:	80 83       	st	Z, r24
    72ce:	91 83       	std	Z+1, r25	; 0x01
    72d0:	a2 83       	std	Z+2, r26	; 0x02
    72d2:	b3 83       	std	Z+3, r27	; 0x03
				}
    72d4:	26 96       	adiw	r28, 0x06	; 6
    72d6:	0f b6       	in	r0, 0x3f	; 63
    72d8:	f8 94       	cli
    72da:	de bf       	out	0x3e, r29	; 62
    72dc:	0f be       	out	0x3f, r0	; 63
    72de:	cd bf       	out	0x3d, r28	; 61
    72e0:	df 91       	pop	r29
    72e2:	cf 91       	pop	r28
    72e4:	08 95       	ret

000072e6 <_ZN10helicopter5tasks16SimTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEPNS_10controller13PIDControllerEii>:
#include "SyncMessage.h"

using namespace helicopter::tasks;
using namespace helicopter::messages;

SimTelemetryTask::SimTelemetryTask(GroundControlStationInterface *radioInterface, SystemModel *model, PIDController *pidController, int delay, int period) :
    72e6:	ef 92       	push	r14
    72e8:	ff 92       	push	r15
    72ea:	0f 93       	push	r16
    72ec:	1f 93       	push	r17
    72ee:	cf 93       	push	r28
    72f0:	df 93       	push	r29
    72f2:	cd b7       	in	r28, 0x3d	; 61
    72f4:	de b7       	in	r29, 0x3e	; 62
    72f6:	2c 97       	sbiw	r28, 0x0c	; 12
    72f8:	0f b6       	in	r0, 0x3f	; 63
    72fa:	f8 94       	cli
    72fc:	de bf       	out	0x3e, r29	; 62
    72fe:	0f be       	out	0x3f, r0	; 63
    7300:	cd bf       	out	0x3d, r28	; 61
    7302:	9a 83       	std	Y+2, r25	; 0x02
    7304:	89 83       	std	Y+1, r24	; 0x01
    7306:	7c 83       	std	Y+4, r23	; 0x04
    7308:	6b 83       	std	Y+3, r22	; 0x03
    730a:	5e 83       	std	Y+6, r21	; 0x06
    730c:	4d 83       	std	Y+5, r20	; 0x05
    730e:	38 87       	std	Y+8, r19	; 0x08
    7310:	2f 83       	std	Y+7, r18	; 0x07
    7312:	1a 87       	std	Y+10, r17	; 0x0a
    7314:	09 87       	std	Y+9, r16	; 0x09
    7316:	fc 86       	std	Y+12, r15	; 0x0c
    7318:	eb 86       	std	Y+11, r14	; 0x0b
	Task(delay, period),
	radioInterface(radioInterface),
	model(model),
	pidController(pidController)
    731a:	89 81       	ldd	r24, Y+1	; 0x01
    731c:	9a 81       	ldd	r25, Y+2	; 0x02
    731e:	4b 85       	ldd	r20, Y+11	; 0x0b
    7320:	5c 85       	ldd	r21, Y+12	; 0x0c
    7322:	29 85       	ldd	r18, Y+9	; 0x09
    7324:	3a 85       	ldd	r19, Y+10	; 0x0a
    7326:	b9 01       	movw	r22, r18
    7328:	0e 94 16 3c 	call	0x782c	; 0x782c <_ZN10helicopter5tasks4TaskC1Eii>
    732c:	89 81       	ldd	r24, Y+1	; 0x01
    732e:	9a 81       	ldd	r25, Y+2	; 0x02
    7330:	24 e7       	ldi	r18, 0x74	; 116
    7332:	32 e0       	ldi	r19, 0x02	; 2
    7334:	fc 01       	movw	r30, r24
    7336:	31 83       	std	Z+1, r19	; 0x01
    7338:	20 83       	st	Z, r18
    733a:	89 81       	ldd	r24, Y+1	; 0x01
    733c:	9a 81       	ldd	r25, Y+2	; 0x02
    733e:	2b 81       	ldd	r18, Y+3	; 0x03
    7340:	3c 81       	ldd	r19, Y+4	; 0x04
    7342:	fc 01       	movw	r30, r24
    7344:	30 87       	std	Z+8, r19	; 0x08
    7346:	27 83       	std	Z+7, r18	; 0x07
    7348:	89 81       	ldd	r24, Y+1	; 0x01
    734a:	9a 81       	ldd	r25, Y+2	; 0x02
    734c:	2d 81       	ldd	r18, Y+5	; 0x05
    734e:	3e 81       	ldd	r19, Y+6	; 0x06
    7350:	fc 01       	movw	r30, r24
    7352:	32 87       	std	Z+10, r19	; 0x0a
    7354:	21 87       	std	Z+9, r18	; 0x09
    7356:	89 81       	ldd	r24, Y+1	; 0x01
    7358:	9a 81       	ldd	r25, Y+2	; 0x02
    735a:	2f 81       	ldd	r18, Y+7	; 0x07
    735c:	38 85       	ldd	r19, Y+8	; 0x08
    735e:	fc 01       	movw	r30, r24
    7360:	34 87       	std	Z+12, r19	; 0x0c
    7362:	23 87       	std	Z+11, r18	; 0x0b
{
	
}
    7364:	2c 96       	adiw	r28, 0x0c	; 12
    7366:	0f b6       	in	r0, 0x3f	; 63
    7368:	f8 94       	cli
    736a:	de bf       	out	0x3e, r29	; 62
    736c:	0f be       	out	0x3f, r0	; 63
    736e:	cd bf       	out	0x3d, r28	; 61
    7370:	df 91       	pop	r29
    7372:	cf 91       	pop	r28
    7374:	1f 91       	pop	r17
    7376:	0f 91       	pop	r16
    7378:	ff 90       	pop	r15
    737a:	ef 90       	pop	r14
    737c:	08 95       	ret

0000737e <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv>:

void SimTelemetryTask::runTaskImpl() 
{
    737e:	cf 93       	push	r28
    7380:	df 93       	push	r29
    7382:	cd b7       	in	r28, 0x3d	; 61
    7384:	de b7       	in	r29, 0x3e	; 62
    7386:	2d 97       	sbiw	r28, 0x0d	; 13
    7388:	0f b6       	in	r0, 0x3f	; 63
    738a:	f8 94       	cli
    738c:	de bf       	out	0x3e, r29	; 62
    738e:	0f be       	out	0x3f, r0	; 63
    7390:	cd bf       	out	0x3d, r28	; 61
    7392:	9d 87       	std	Y+13, r25	; 0x0d
    7394:	8c 87       	std	Y+12, r24	; 0x0c
	
	//Send sync message to indicate to the ground control station that we are ready to receive data.
	//Without this sync message, the GCS could send data while the FC is asleep, which would cause the data
	//to overflow the usart buffer.
	SyncMessage syncMsg;
    7396:	ce 01       	movw	r24, r28
    7398:	05 96       	adiw	r24, 0x05	; 5
    739a:	0e 94 3f 23 	call	0x467e	; 0x467e <_ZN10helicopter8messages11SyncMessageC1Ev>
	
	int status = radioInterface->transmit(&syncMsg);
    739e:	8c 85       	ldd	r24, Y+12	; 0x0c
    73a0:	9d 85       	ldd	r25, Y+13	; 0x0d
    73a2:	fc 01       	movw	r30, r24
    73a4:	87 81       	ldd	r24, Z+7	; 0x07
    73a6:	90 85       	ldd	r25, Z+8	; 0x08
    73a8:	9e 01       	movw	r18, r28
    73aa:	2b 5f       	subi	r18, 0xFB	; 251
    73ac:	3f 4f       	sbci	r19, 0xFF	; 255
    73ae:	b9 01       	movw	r22, r18
    73b0:	0e 94 65 20 	call	0x40ca	; 0x40ca <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>
    73b4:	9a 83       	std	Y+2, r25	; 0x02
    73b6:	89 83       	std	Y+1, r24	; 0x01
	
	if (status == 0)
    73b8:	89 81       	ldd	r24, Y+1	; 0x01
    73ba:	9a 81       	ldd	r25, Y+2	; 0x02
    73bc:	00 97       	sbiw	r24, 0x00	; 0
    73be:	09 f0       	breq	.+2      	; 0x73c2 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x44>
    73c0:	86 c1       	rjmp	.+780    	; 0x76ce <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x350>
	{
	
		//Use the radio interface to get the telemetry message from the simulator
		Message *message = NULL;
    73c2:	1b 86       	std	Y+11, r1	; 0x0b
    73c4:	1a 86       	std	Y+10, r1	; 0x0a
	
		status = radioInterface->receive(message);
    73c6:	8c 85       	ldd	r24, Y+12	; 0x0c
    73c8:	9d 85       	ldd	r25, Y+13	; 0x0d
    73ca:	fc 01       	movw	r30, r24
    73cc:	87 81       	ldd	r24, Z+7	; 0x07
    73ce:	90 85       	ldd	r25, Z+8	; 0x08
    73d0:	9e 01       	movw	r18, r28
    73d2:	26 5f       	subi	r18, 0xF6	; 246
    73d4:	3f 4f       	sbci	r19, 0xFF	; 255
    73d6:	b9 01       	movw	r22, r18
    73d8:	0e 94 4b 21 	call	0x4296	; 0x4296 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE>
    73dc:	9a 83       	std	Y+2, r25	; 0x02
    73de:	89 83       	std	Y+1, r24	; 0x01
	
		if (status == 0 && message != NULL)
    73e0:	89 81       	ldd	r24, Y+1	; 0x01
    73e2:	9a 81       	ldd	r25, Y+2	; 0x02
    73e4:	00 97       	sbiw	r24, 0x00	; 0
    73e6:	09 f0       	breq	.+2      	; 0x73ea <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x6c>
    73e8:	72 c1       	rjmp	.+740    	; 0x76ce <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x350>
    73ea:	8a 85       	ldd	r24, Y+10	; 0x0a
    73ec:	9b 85       	ldd	r25, Y+11	; 0x0b
    73ee:	00 97       	sbiw	r24, 0x00	; 0
    73f0:	09 f4       	brne	.+2      	; 0x73f4 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x76>
    73f2:	6d c1       	rjmp	.+730    	; 0x76ce <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x350>
		{
			SystemTelemetryMessage *telemMsg = (SystemTelemetryMessage*) message;
    73f4:	8a 85       	ldd	r24, Y+10	; 0x0a
    73f6:	9b 85       	ldd	r25, Y+11	; 0x0b
    73f8:	9c 83       	std	Y+4, r25	; 0x04
    73fa:	8b 83       	std	Y+3, r24	; 0x03
			
			//Update the model using the new data received from the simulator.
			telemMsg->updateModelFromMessageFromSimulator(model);
    73fc:	8c 85       	ldd	r24, Y+12	; 0x0c
    73fe:	9d 85       	ldd	r25, Y+13	; 0x0d
    7400:	fc 01       	movw	r30, r24
    7402:	21 85       	ldd	r18, Z+9	; 0x09
    7404:	32 85       	ldd	r19, Z+10	; 0x0a
    7406:	8b 81       	ldd	r24, Y+3	; 0x03
    7408:	9c 81       	ldd	r25, Y+4	; 0x04
    740a:	b9 01       	movw	r22, r18
    740c:	0e 94 9b 31 	call	0x6336	; 0x6336 <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE>
			
			pidController->setYawIntegralGain(telemMsg->YawIntegralGain);
    7410:	8b 81       	ldd	r24, Y+3	; 0x03
    7412:	9c 81       	ldd	r25, Y+4	; 0x04
    7414:	fc 01       	movw	r30, r24
    7416:	85 8d       	ldd	r24, Z+29	; 0x1d
    7418:	96 8d       	ldd	r25, Z+30	; 0x1e
    741a:	a7 8d       	ldd	r26, Z+31	; 0x1f
    741c:	b0 a1       	ldd	r27, Z+32	; 0x20
    741e:	2c 85       	ldd	r18, Y+12	; 0x0c
    7420:	3d 85       	ldd	r19, Y+13	; 0x0d
    7422:	f9 01       	movw	r30, r18
    7424:	23 85       	ldd	r18, Z+11	; 0x0b
    7426:	34 85       	ldd	r19, Z+12	; 0x0c
    7428:	ac 01       	movw	r20, r24
    742a:	bd 01       	movw	r22, r26
    742c:	c9 01       	movw	r24, r18
    742e:	0e 94 57 1b 	call	0x36ae	; 0x36ae <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf>
			pidController->setYawDerivativeGain(telemMsg->YawDerivativeGain);
    7432:	8b 81       	ldd	r24, Y+3	; 0x03
    7434:	9c 81       	ldd	r25, Y+4	; 0x04
    7436:	fc 01       	movw	r30, r24
    7438:	81 a1       	ldd	r24, Z+33	; 0x21
    743a:	92 a1       	ldd	r25, Z+34	; 0x22
    743c:	a3 a1       	ldd	r26, Z+35	; 0x23
    743e:	b4 a1       	ldd	r27, Z+36	; 0x24
    7440:	2c 85       	ldd	r18, Y+12	; 0x0c
    7442:	3d 85       	ldd	r19, Y+13	; 0x0d
    7444:	f9 01       	movw	r30, r18
    7446:	23 85       	ldd	r18, Z+11	; 0x0b
    7448:	34 85       	ldd	r19, Z+12	; 0x0c
    744a:	ac 01       	movw	r20, r24
    744c:	bd 01       	movw	r22, r26
    744e:	c9 01       	movw	r24, r18
    7450:	0e 94 77 1b 	call	0x36ee	; 0x36ee <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf>
			pidController->setYawProportionalGain(telemMsg->YawProportionalGain);
    7454:	8b 81       	ldd	r24, Y+3	; 0x03
    7456:	9c 81       	ldd	r25, Y+4	; 0x04
    7458:	fc 01       	movw	r30, r24
    745a:	85 a1       	ldd	r24, Z+37	; 0x25
    745c:	96 a1       	ldd	r25, Z+38	; 0x26
    745e:	a7 a1       	ldd	r26, Z+39	; 0x27
    7460:	b0 a5       	ldd	r27, Z+40	; 0x28
    7462:	2c 85       	ldd	r18, Y+12	; 0x0c
    7464:	3d 85       	ldd	r19, Y+13	; 0x0d
    7466:	f9 01       	movw	r30, r18
    7468:	23 85       	ldd	r18, Z+11	; 0x0b
    746a:	34 85       	ldd	r19, Z+12	; 0x0c
    746c:	ac 01       	movw	r20, r24
    746e:	bd 01       	movw	r22, r26
    7470:	c9 01       	movw	r24, r18
    7472:	0e 94 37 1b 	call	0x366e	; 0x366e <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf>
			pidController->setYawAntiWindupGain(telemMsg->YawAntiWindupGain);
    7476:	8b 81       	ldd	r24, Y+3	; 0x03
    7478:	9c 81       	ldd	r25, Y+4	; 0x04
    747a:	fc 01       	movw	r30, r24
    747c:	81 a5       	ldd	r24, Z+41	; 0x29
    747e:	92 a5       	ldd	r25, Z+42	; 0x2a
    7480:	a3 a5       	ldd	r26, Z+43	; 0x2b
    7482:	b4 a5       	ldd	r27, Z+44	; 0x2c
    7484:	2c 85       	ldd	r18, Y+12	; 0x0c
    7486:	3d 85       	ldd	r19, Y+13	; 0x0d
    7488:	f9 01       	movw	r30, r18
    748a:	23 85       	ldd	r18, Z+11	; 0x0b
    748c:	34 85       	ldd	r19, Z+12	; 0x0c
    748e:	ac 01       	movw	r20, r24
    7490:	bd 01       	movw	r22, r26
    7492:	c9 01       	movw	r24, r18
    7494:	0e 94 ba 1b 	call	0x3774	; 0x3774 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf>
		
			pidController->setXIntegralGain(telemMsg->XIntegralGain);
    7498:	8b 81       	ldd	r24, Y+3	; 0x03
    749a:	9c 81       	ldd	r25, Y+4	; 0x04
    749c:	87 5b       	subi	r24, 0xB7	; 183
    749e:	9f 4f       	sbci	r25, 0xFF	; 255
    74a0:	fc 01       	movw	r30, r24
    74a2:	80 81       	ld	r24, Z
    74a4:	91 81       	ldd	r25, Z+1	; 0x01
    74a6:	a2 81       	ldd	r26, Z+2	; 0x02
    74a8:	b3 81       	ldd	r27, Z+3	; 0x03
    74aa:	2c 85       	ldd	r18, Y+12	; 0x0c
    74ac:	3d 85       	ldd	r19, Y+13	; 0x0d
    74ae:	f9 01       	movw	r30, r18
    74b0:	23 85       	ldd	r18, Z+11	; 0x0b
    74b2:	34 85       	ldd	r19, Z+12	; 0x0c
    74b4:	ac 01       	movw	r20, r24
    74b6:	bd 01       	movw	r22, r26
    74b8:	c9 01       	movw	r24, r18
    74ba:	0e 94 25 19 	call	0x324a	; 0x324a <_ZN10helicopter10controller13PIDController16setXIntegralGainEf>
			pidController->setXDerivativeGain(telemMsg->XDerivativeGain);
    74be:	8b 81       	ldd	r24, Y+3	; 0x03
    74c0:	9c 81       	ldd	r25, Y+4	; 0x04
    74c2:	83 5b       	subi	r24, 0xB3	; 179
    74c4:	9f 4f       	sbci	r25, 0xFF	; 255
    74c6:	fc 01       	movw	r30, r24
    74c8:	80 81       	ld	r24, Z
    74ca:	91 81       	ldd	r25, Z+1	; 0x01
    74cc:	a2 81       	ldd	r26, Z+2	; 0x02
    74ce:	b3 81       	ldd	r27, Z+3	; 0x03
    74d0:	2c 85       	ldd	r18, Y+12	; 0x0c
    74d2:	3d 85       	ldd	r19, Y+13	; 0x0d
    74d4:	f9 01       	movw	r30, r18
    74d6:	23 85       	ldd	r18, Z+11	; 0x0b
    74d8:	34 85       	ldd	r19, Z+12	; 0x0c
    74da:	ac 01       	movw	r20, r24
    74dc:	bd 01       	movw	r22, r26
    74de:	c9 01       	movw	r24, r18
    74e0:	0e 94 45 19 	call	0x328a	; 0x328a <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf>
			pidController->setXProportionalGain(telemMsg->XProportionalGain);
    74e4:	8b 81       	ldd	r24, Y+3	; 0x03
    74e6:	9c 81       	ldd	r25, Y+4	; 0x04
    74e8:	8f 5a       	subi	r24, 0xAF	; 175
    74ea:	9f 4f       	sbci	r25, 0xFF	; 255
    74ec:	fc 01       	movw	r30, r24
    74ee:	80 81       	ld	r24, Z
    74f0:	91 81       	ldd	r25, Z+1	; 0x01
    74f2:	a2 81       	ldd	r26, Z+2	; 0x02
    74f4:	b3 81       	ldd	r27, Z+3	; 0x03
    74f6:	2c 85       	ldd	r18, Y+12	; 0x0c
    74f8:	3d 85       	ldd	r19, Y+13	; 0x0d
    74fa:	f9 01       	movw	r30, r18
    74fc:	23 85       	ldd	r18, Z+11	; 0x0b
    74fe:	34 85       	ldd	r19, Z+12	; 0x0c
    7500:	ac 01       	movw	r20, r24
    7502:	bd 01       	movw	r22, r26
    7504:	c9 01       	movw	r24, r18
    7506:	0e 94 65 19 	call	0x32ca	; 0x32ca <_ZN10helicopter10controller13PIDController20setXProportionalGainEf>
			pidController->setXAntiWindupGain(telemMsg->XAntiWindupGain);
    750a:	8b 81       	ldd	r24, Y+3	; 0x03
    750c:	9c 81       	ldd	r25, Y+4	; 0x04
    750e:	8b 5a       	subi	r24, 0xAB	; 171
    7510:	9f 4f       	sbci	r25, 0xFF	; 255
    7512:	fc 01       	movw	r30, r24
    7514:	80 81       	ld	r24, Z
    7516:	91 81       	ldd	r25, Z+1	; 0x01
    7518:	a2 81       	ldd	r26, Z+2	; 0x02
    751a:	b3 81       	ldd	r27, Z+3	; 0x03
    751c:	2c 85       	ldd	r18, Y+12	; 0x0c
    751e:	3d 85       	ldd	r19, Y+13	; 0x0d
    7520:	f9 01       	movw	r30, r18
    7522:	23 85       	ldd	r18, Z+11	; 0x0b
    7524:	34 85       	ldd	r19, Z+12	; 0x0c
    7526:	ac 01       	movw	r20, r24
    7528:	bd 01       	movw	r22, r26
    752a:	c9 01       	movw	r24, r18
    752c:	0e 94 85 19 	call	0x330a	; 0x330a <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf>
			pidController->setLongitudeInnerLoopGain(telemMsg->LongitudeInnerLoopGain);
    7530:	8b 81       	ldd	r24, Y+3	; 0x03
    7532:	9c 81       	ldd	r25, Y+4	; 0x04
    7534:	87 5a       	subi	r24, 0xA7	; 167
    7536:	9f 4f       	sbci	r25, 0xFF	; 255
    7538:	fc 01       	movw	r30, r24
    753a:	80 81       	ld	r24, Z
    753c:	91 81       	ldd	r25, Z+1	; 0x01
    753e:	a2 81       	ldd	r26, Z+2	; 0x02
    7540:	b3 81       	ldd	r27, Z+3	; 0x03
    7542:	2c 85       	ldd	r18, Y+12	; 0x0c
    7544:	3d 85       	ldd	r19, Y+13	; 0x0d
    7546:	f9 01       	movw	r30, r18
    7548:	23 85       	ldd	r18, Z+11	; 0x0b
    754a:	34 85       	ldd	r19, Z+12	; 0x0c
    754c:	ac 01       	movw	r20, r24
    754e:	bd 01       	movw	r22, r26
    7550:	c9 01       	movw	r24, r18
    7552:	0e 94 a5 19 	call	0x334a	; 0x334a <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf>
				
			pidController->setYIntegralGain(telemMsg->YIntegralGain);
    7556:	8b 81       	ldd	r24, Y+3	; 0x03
    7558:	9c 81       	ldd	r25, Y+4	; 0x04
    755a:	83 58       	subi	r24, 0x83	; 131
    755c:	9f 4f       	sbci	r25, 0xFF	; 255
    755e:	fc 01       	movw	r30, r24
    7560:	80 81       	ld	r24, Z
    7562:	91 81       	ldd	r25, Z+1	; 0x01
    7564:	a2 81       	ldd	r26, Z+2	; 0x02
    7566:	b3 81       	ldd	r27, Z+3	; 0x03
    7568:	2c 85       	ldd	r18, Y+12	; 0x0c
    756a:	3d 85       	ldd	r19, Y+13	; 0x0d
    756c:	f9 01       	movw	r30, r18
    756e:	23 85       	ldd	r18, Z+11	; 0x0b
    7570:	34 85       	ldd	r19, Z+12	; 0x0c
    7572:	ac 01       	movw	r20, r24
    7574:	bd 01       	movw	r22, r26
    7576:	c9 01       	movw	r24, r18
    7578:	0e 94 0b 1a 	call	0x3416	; 0x3416 <_ZN10helicopter10controller13PIDController16setYIntegralGainEf>
			pidController->setYDerivativeGain(telemMsg->YDerivativeGain);
    757c:	8b 81       	ldd	r24, Y+3	; 0x03
    757e:	9c 81       	ldd	r25, Y+4	; 0x04
    7580:	8f 57       	subi	r24, 0x7F	; 127
    7582:	9f 4f       	sbci	r25, 0xFF	; 255
    7584:	fc 01       	movw	r30, r24
    7586:	80 81       	ld	r24, Z
    7588:	91 81       	ldd	r25, Z+1	; 0x01
    758a:	a2 81       	ldd	r26, Z+2	; 0x02
    758c:	b3 81       	ldd	r27, Z+3	; 0x03
    758e:	2c 85       	ldd	r18, Y+12	; 0x0c
    7590:	3d 85       	ldd	r19, Y+13	; 0x0d
    7592:	f9 01       	movw	r30, r18
    7594:	23 85       	ldd	r18, Z+11	; 0x0b
    7596:	34 85       	ldd	r19, Z+12	; 0x0c
    7598:	ac 01       	movw	r20, r24
    759a:	bd 01       	movw	r22, r26
    759c:	c9 01       	movw	r24, r18
    759e:	0e 94 2b 1a 	call	0x3456	; 0x3456 <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf>
			pidController->setYProportionalGain(telemMsg->YProportionalGain);
    75a2:	8b 81       	ldd	r24, Y+3	; 0x03
    75a4:	9c 81       	ldd	r25, Y+4	; 0x04
    75a6:	8b 57       	subi	r24, 0x7B	; 123
    75a8:	9f 4f       	sbci	r25, 0xFF	; 255
    75aa:	fc 01       	movw	r30, r24
    75ac:	80 81       	ld	r24, Z
    75ae:	91 81       	ldd	r25, Z+1	; 0x01
    75b0:	a2 81       	ldd	r26, Z+2	; 0x02
    75b2:	b3 81       	ldd	r27, Z+3	; 0x03
    75b4:	2c 85       	ldd	r18, Y+12	; 0x0c
    75b6:	3d 85       	ldd	r19, Y+13	; 0x0d
    75b8:	f9 01       	movw	r30, r18
    75ba:	23 85       	ldd	r18, Z+11	; 0x0b
    75bc:	34 85       	ldd	r19, Z+12	; 0x0c
    75be:	ac 01       	movw	r20, r24
    75c0:	bd 01       	movw	r22, r26
    75c2:	c9 01       	movw	r24, r18
    75c4:	0e 94 4b 1a 	call	0x3496	; 0x3496 <_ZN10helicopter10controller13PIDController20setYProportionalGainEf>
			pidController->setYAntiWindupGain(telemMsg->YAntiWindupGain);
    75c8:	8b 81       	ldd	r24, Y+3	; 0x03
    75ca:	9c 81       	ldd	r25, Y+4	; 0x04
    75cc:	87 57       	subi	r24, 0x77	; 119
    75ce:	9f 4f       	sbci	r25, 0xFF	; 255
    75d0:	fc 01       	movw	r30, r24
    75d2:	80 81       	ld	r24, Z
    75d4:	91 81       	ldd	r25, Z+1	; 0x01
    75d6:	a2 81       	ldd	r26, Z+2	; 0x02
    75d8:	b3 81       	ldd	r27, Z+3	; 0x03
    75da:	2c 85       	ldd	r18, Y+12	; 0x0c
    75dc:	3d 85       	ldd	r19, Y+13	; 0x0d
    75de:	f9 01       	movw	r30, r18
    75e0:	23 85       	ldd	r18, Z+11	; 0x0b
    75e2:	34 85       	ldd	r19, Z+12	; 0x0c
    75e4:	ac 01       	movw	r20, r24
    75e6:	bd 01       	movw	r22, r26
    75e8:	c9 01       	movw	r24, r18
    75ea:	0e 94 6b 1a 	call	0x34d6	; 0x34d6 <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf>
			pidController->setLateralInnerLoopGain(telemMsg->LateralInnerLoopGain);
    75ee:	8b 81       	ldd	r24, Y+3	; 0x03
    75f0:	9c 81       	ldd	r25, Y+4	; 0x04
    75f2:	83 57       	subi	r24, 0x73	; 115
    75f4:	9f 4f       	sbci	r25, 0xFF	; 255
    75f6:	fc 01       	movw	r30, r24
    75f8:	80 81       	ld	r24, Z
    75fa:	91 81       	ldd	r25, Z+1	; 0x01
    75fc:	a2 81       	ldd	r26, Z+2	; 0x02
    75fe:	b3 81       	ldd	r27, Z+3	; 0x03
    7600:	2c 85       	ldd	r18, Y+12	; 0x0c
    7602:	3d 85       	ldd	r19, Y+13	; 0x0d
    7604:	f9 01       	movw	r30, r18
    7606:	23 85       	ldd	r18, Z+11	; 0x0b
    7608:	34 85       	ldd	r19, Z+12	; 0x0c
    760a:	ac 01       	movw	r20, r24
    760c:	bd 01       	movw	r22, r26
    760e:	c9 01       	movw	r24, r18
    7610:	0e 94 8b 1a 	call	0x3516	; 0x3516 <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf>
			
			pidController->setZIntegralGain(telemMsg->ZIntegralGain);
    7614:	8b 81       	ldd	r24, Y+3	; 0x03
    7616:	9c 81       	ldd	r25, Y+4	; 0x04
    7618:	83 55       	subi	r24, 0x53	; 83
    761a:	9f 4f       	sbci	r25, 0xFF	; 255
    761c:	fc 01       	movw	r30, r24
    761e:	80 81       	ld	r24, Z
    7620:	91 81       	ldd	r25, Z+1	; 0x01
    7622:	a2 81       	ldd	r26, Z+2	; 0x02
    7624:	b3 81       	ldd	r27, Z+3	; 0x03
    7626:	2c 85       	ldd	r18, Y+12	; 0x0c
    7628:	3d 85       	ldd	r19, Y+13	; 0x0d
    762a:	f9 01       	movw	r30, r18
    762c:	23 85       	ldd	r18, Z+11	; 0x0b
    762e:	34 85       	ldd	r19, Z+12	; 0x0c
    7630:	ac 01       	movw	r20, r24
    7632:	bd 01       	movw	r22, r26
    7634:	c9 01       	movw	r24, r18
    7636:	0e 94 ea 38 	call	0x71d4	; 0x71d4 <_ZN10helicopter10controller13PIDController16setZIntegralGainEf>
			pidController->setZDerivativeGain(telemMsg->ZDerivativeGain);
    763a:	8b 81       	ldd	r24, Y+3	; 0x03
    763c:	9c 81       	ldd	r25, Y+4	; 0x04
    763e:	8f 54       	subi	r24, 0x4F	; 79
    7640:	9f 4f       	sbci	r25, 0xFF	; 255
    7642:	fc 01       	movw	r30, r24
    7644:	80 81       	ld	r24, Z
    7646:	91 81       	ldd	r25, Z+1	; 0x01
    7648:	a2 81       	ldd	r26, Z+2	; 0x02
    764a:	b3 81       	ldd	r27, Z+3	; 0x03
    764c:	2c 85       	ldd	r18, Y+12	; 0x0c
    764e:	3d 85       	ldd	r19, Y+13	; 0x0d
    7650:	f9 01       	movw	r30, r18
    7652:	23 85       	ldd	r18, Z+11	; 0x0b
    7654:	34 85       	ldd	r19, Z+12	; 0x0c
    7656:	ac 01       	movw	r20, r24
    7658:	bd 01       	movw	r22, r26
    765a:	c9 01       	movw	r24, r18
    765c:	0e 94 0a 39 	call	0x7214	; 0x7214 <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf>
			pidController->setZProportionalGain(telemMsg->ZProportionalGain);
    7660:	8b 81       	ldd	r24, Y+3	; 0x03
    7662:	9c 81       	ldd	r25, Y+4	; 0x04
    7664:	8b 54       	subi	r24, 0x4B	; 75
    7666:	9f 4f       	sbci	r25, 0xFF	; 255
    7668:	fc 01       	movw	r30, r24
    766a:	80 81       	ld	r24, Z
    766c:	91 81       	ldd	r25, Z+1	; 0x01
    766e:	a2 81       	ldd	r26, Z+2	; 0x02
    7670:	b3 81       	ldd	r27, Z+3	; 0x03
    7672:	2c 85       	ldd	r18, Y+12	; 0x0c
    7674:	3d 85       	ldd	r19, Y+13	; 0x0d
    7676:	f9 01       	movw	r30, r18
    7678:	23 85       	ldd	r18, Z+11	; 0x0b
    767a:	34 85       	ldd	r19, Z+12	; 0x0c
    767c:	ac 01       	movw	r20, r24
    767e:	bd 01       	movw	r22, r26
    7680:	c9 01       	movw	r24, r18
    7682:	0e 94 2d 39 	call	0x725a	; 0x725a <_ZN10helicopter10controller13PIDController20setZProportionalGainEf>
			pidController->setZAntiWindupGain(telemMsg->ZAntiWindupGain);															
    7686:	8b 81       	ldd	r24, Y+3	; 0x03
    7688:	9c 81       	ldd	r25, Y+4	; 0x04
    768a:	87 54       	subi	r24, 0x47	; 71
    768c:	9f 4f       	sbci	r25, 0xFF	; 255
    768e:	fc 01       	movw	r30, r24
    7690:	80 81       	ld	r24, Z
    7692:	91 81       	ldd	r25, Z+1	; 0x01
    7694:	a2 81       	ldd	r26, Z+2	; 0x02
    7696:	b3 81       	ldd	r27, Z+3	; 0x03
    7698:	2c 85       	ldd	r18, Y+12	; 0x0c
    769a:	3d 85       	ldd	r19, Y+13	; 0x0d
    769c:	f9 01       	movw	r30, r18
    769e:	23 85       	ldd	r18, Z+11	; 0x0b
    76a0:	34 85       	ldd	r19, Z+12	; 0x0c
    76a2:	ac 01       	movw	r20, r24
    76a4:	bd 01       	movw	r22, r26
    76a6:	c9 01       	movw	r24, r18
    76a8:	0e 94 50 39 	call	0x72a0	; 0x72a0 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf>
		
			delete message;
    76ac:	8a 85       	ldd	r24, Y+10	; 0x0a
    76ae:	9b 85       	ldd	r25, Y+11	; 0x0b
    76b0:	00 97       	sbiw	r24, 0x00	; 0
    76b2:	69 f0       	breq	.+26     	; 0x76ce <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x350>
    76b4:	8a 85       	ldd	r24, Y+10	; 0x0a
    76b6:	9b 85       	ldd	r25, Y+11	; 0x0b
    76b8:	fc 01       	movw	r30, r24
    76ba:	80 81       	ld	r24, Z
    76bc:	91 81       	ldd	r25, Z+1	; 0x01
    76be:	02 96       	adiw	r24, 0x02	; 2
    76c0:	fc 01       	movw	r30, r24
    76c2:	20 81       	ld	r18, Z
    76c4:	31 81       	ldd	r19, Z+1	; 0x01
    76c6:	8a 85       	ldd	r24, Y+10	; 0x0a
    76c8:	9b 85       	ldd	r25, Y+11	; 0x0b
    76ca:	f9 01       	movw	r30, r18
    76cc:	19 95       	eicall
		}
	}
	
	//Update instrumentation fields
	switch (status)
    76ce:	89 81       	ldd	r24, Y+1	; 0x01
    76d0:	9a 81       	ldd	r25, Y+2	; 0x02
    76d2:	8e 3f       	cpi	r24, 0xFE	; 254
    76d4:	ff ef       	ldi	r31, 0xFF	; 255
    76d6:	9f 07       	cpc	r25, r31
    76d8:	41 f1       	breq	.+80     	; 0x772a <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x3ac>
    76da:	8f 3f       	cpi	r24, 0xFF	; 255
    76dc:	2f ef       	ldi	r18, 0xFF	; 255
    76de:	92 07       	cpc	r25, r18
    76e0:	2c f4       	brge	.+10     	; 0x76ec <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x36e>
    76e2:	8d 3f       	cpi	r24, 0xFD	; 253
    76e4:	ef ef       	ldi	r30, 0xFF	; 255
    76e6:	9e 07       	cpc	r25, r30
    76e8:	b9 f1       	breq	.+110    	; 0x7758 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x3da>
    76ea:	4d c0       	rjmp	.+154    	; 0x7786 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x408>
    76ec:	8f 3f       	cpi	r24, 0xFF	; 255
    76ee:	ff ef       	ldi	r31, 0xFF	; 255
    76f0:	9f 07       	cpc	r25, r31
    76f2:	21 f0       	breq	.+8      	; 0x76fc <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x37e>
    76f4:	00 97       	sbiw	r24, 0x00	; 0
    76f6:	09 f4       	brne	.+2      	; 0x76fa <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x37c>
    76f8:	47 c0       	rjmp	.+142    	; 0x7788 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x40a>
    76fa:	45 c0       	rjmp	.+138    	; 0x7786 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x408>
	{
		case 0:
			break;
		case -1:
			model->Timeouts(model->Timeouts() + 1);
    76fc:	8c 85       	ldd	r24, Y+12	; 0x0c
    76fe:	9d 85       	ldd	r25, Y+13	; 0x0d
    7700:	fc 01       	movw	r30, r24
    7702:	81 85       	ldd	r24, Z+9	; 0x09
    7704:	92 85       	ldd	r25, Z+10	; 0x0a
    7706:	0e 94 f6 26 	call	0x4dec	; 0x4dec <_ZNK10helicopter5model11SystemModel8TimeoutsEv>
    770a:	dc 01       	movw	r26, r24
    770c:	cb 01       	movw	r24, r22
    770e:	01 96       	adiw	r24, 0x01	; 1
    7710:	a1 1d       	adc	r26, r1
    7712:	b1 1d       	adc	r27, r1
    7714:	2c 85       	ldd	r18, Y+12	; 0x0c
    7716:	3d 85       	ldd	r19, Y+13	; 0x0d
    7718:	f9 01       	movw	r30, r18
    771a:	21 85       	ldd	r18, Z+9	; 0x09
    771c:	32 85       	ldd	r19, Z+10	; 0x0a
    771e:	ac 01       	movw	r20, r24
    7720:	bd 01       	movw	r22, r26
    7722:	c9 01       	movw	r24, r18
    7724:	0e 94 0e 27 	call	0x4e1c	; 0x4e1c <_ZN10helicopter5model11SystemModel8TimeoutsEl>
			break;
    7728:	30 c0       	rjmp	.+96     	; 0x778a <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x40c>
		case -2:
			model->UnrecognizedMsgTypes(model->UnrecognizedMsgTypes() + 1);
    772a:	8c 85       	ldd	r24, Y+12	; 0x0c
    772c:	9d 85       	ldd	r25, Y+13	; 0x0d
    772e:	fc 01       	movw	r30, r24
    7730:	81 85       	ldd	r24, Z+9	; 0x09
    7732:	92 85       	ldd	r25, Z+10	; 0x0a
    7734:	0e 94 31 27 	call	0x4e62	; 0x4e62 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>
    7738:	dc 01       	movw	r26, r24
    773a:	cb 01       	movw	r24, r22
    773c:	01 96       	adiw	r24, 0x01	; 1
    773e:	a1 1d       	adc	r26, r1
    7740:	b1 1d       	adc	r27, r1
    7742:	2c 85       	ldd	r18, Y+12	; 0x0c
    7744:	3d 85       	ldd	r19, Y+13	; 0x0d
    7746:	f9 01       	movw	r30, r18
    7748:	21 85       	ldd	r18, Z+9	; 0x09
    774a:	32 85       	ldd	r19, Z+10	; 0x0a
    774c:	ac 01       	movw	r20, r24
    774e:	bd 01       	movw	r22, r26
    7750:	c9 01       	movw	r24, r18
    7752:	0e 94 49 27 	call	0x4e92	; 0x4e92 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl>
			break;
    7756:	19 c0       	rjmp	.+50     	; 0x778a <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x40c>
		case -3:
			model->ChecksumErrors(model->ChecksumErrors() + 1);
    7758:	8c 85       	ldd	r24, Y+12	; 0x0c
    775a:	9d 85       	ldd	r25, Y+13	; 0x0d
    775c:	fc 01       	movw	r30, r24
    775e:	81 85       	ldd	r24, Z+9	; 0x09
    7760:	92 85       	ldd	r25, Z+10	; 0x0a
    7762:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>
    7766:	dc 01       	movw	r26, r24
    7768:	cb 01       	movw	r24, r22
    776a:	01 96       	adiw	r24, 0x01	; 1
    776c:	a1 1d       	adc	r26, r1
    776e:	b1 1d       	adc	r27, r1
    7770:	2c 85       	ldd	r18, Y+12	; 0x0c
    7772:	3d 85       	ldd	r19, Y+13	; 0x0d
    7774:	f9 01       	movw	r30, r18
    7776:	21 85       	ldd	r18, Z+9	; 0x09
    7778:	32 85       	ldd	r19, Z+10	; 0x0a
    777a:	ac 01       	movw	r20, r24
    777c:	bd 01       	movw	r22, r26
    777e:	c9 01       	movw	r24, r18
    7780:	0e 94 84 27 	call	0x4f08	; 0x4f08 <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl>
		default:
			break;
    7784:	02 c0       	rjmp	.+4      	; 0x778a <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x40c>
    7786:	01 c0       	rjmp	.+2      	; 0x778a <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x40c>
	
	//Update instrumentation fields
	switch (status)
	{
		case 0:
			break;
    7788:	00 00       	nop
		case -3:
			model->ChecksumErrors(model->ChecksumErrors() + 1);
		default:
			break;
		
	}
    778a:	ce 01       	movw	r24, r28
    778c:	05 96       	adiw	r24, 0x05	; 5
    778e:	0e 94 5a 23 	call	0x46b4	; 0x46b4 <_ZN10helicopter8messages11SyncMessageD1Ev>
}
    7792:	2d 96       	adiw	r28, 0x0d	; 13
    7794:	0f b6       	in	r0, 0x3f	; 63
    7796:	f8 94       	cli
    7798:	de bf       	out	0x3e, r29	; 62
    779a:	0f be       	out	0x3f, r0	; 63
    779c:	cd bf       	out	0x3d, r28	; 61
    779e:	df 91       	pop	r29
    77a0:	cf 91       	pop	r28
    77a2:	08 95       	ret

000077a4 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>:
	namespace tasks
	{
		/**
		 * Task to receive simulator telemetry data from the ground control station.
		 */
		class SimTelemetryTask : public Task
    77a4:	cf 93       	push	r28
    77a6:	df 93       	push	r29
    77a8:	1f 92       	push	r1
    77aa:	1f 92       	push	r1
    77ac:	cd b7       	in	r28, 0x3d	; 61
    77ae:	de b7       	in	r29, 0x3e	; 62
    77b0:	9a 83       	std	Y+2, r25	; 0x02
    77b2:	89 83       	std	Y+1, r24	; 0x01
    77b4:	89 81       	ldd	r24, Y+1	; 0x01
    77b6:	9a 81       	ldd	r25, Y+2	; 0x02
    77b8:	24 e7       	ldi	r18, 0x74	; 116
    77ba:	32 e0       	ldi	r19, 0x02	; 2
    77bc:	fc 01       	movw	r30, r24
    77be:	31 83       	std	Z+1, r19	; 0x01
    77c0:	20 83       	st	Z, r18
    77c2:	89 81       	ldd	r24, Y+1	; 0x01
    77c4:	9a 81       	ldd	r25, Y+2	; 0x02
    77c6:	0e 94 cf 13 	call	0x279e	; 0x279e <_ZN10helicopter5tasks4TaskD1Ev>
    77ca:	80 e0       	ldi	r24, 0x00	; 0
    77cc:	90 e0       	ldi	r25, 0x00	; 0
    77ce:	81 70       	andi	r24, 0x01	; 1
    77d0:	99 27       	eor	r25, r25
    77d2:	00 97       	sbiw	r24, 0x00	; 0
    77d4:	21 f0       	breq	.+8      	; 0x77de <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev+0x3a>
    77d6:	89 81       	ldd	r24, Y+1	; 0x01
    77d8:	9a 81       	ldd	r25, Y+2	; 0x02
    77da:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    77de:	0f 90       	pop	r0
    77e0:	0f 90       	pop	r0
    77e2:	df 91       	pop	r29
    77e4:	cf 91       	pop	r28
    77e6:	08 95       	ret

000077e8 <_ZN10helicopter5tasks16SimTelemetryTaskD0Ev>:
    77e8:	cf 93       	push	r28
    77ea:	df 93       	push	r29
    77ec:	1f 92       	push	r1
    77ee:	1f 92       	push	r1
    77f0:	cd b7       	in	r28, 0x3d	; 61
    77f2:	de b7       	in	r29, 0x3e	; 62
    77f4:	9a 83       	std	Y+2, r25	; 0x02
    77f6:	89 83       	std	Y+1, r24	; 0x01
    77f8:	89 81       	ldd	r24, Y+1	; 0x01
    77fa:	9a 81       	ldd	r25, Y+2	; 0x02
    77fc:	0e 94 d2 3b 	call	0x77a4	; 0x77a4 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>
    7800:	89 81       	ldd	r24, Y+1	; 0x01
    7802:	9a 81       	ldd	r25, Y+2	; 0x02
    7804:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    7808:	0f 90       	pop	r0
    780a:	0f 90       	pop	r0
    780c:	df 91       	pop	r29
    780e:	cf 91       	pop	r28
    7810:	08 95       	ret

00007812 <_ZN10helicopter5tasks4Task11runTaskImplEv>:
				
			protected:
				/**
				* Implemented by subclasses for the actual logic to execute
				*/
				virtual void runTaskImpl(){;}
    7812:	cf 93       	push	r28
    7814:	df 93       	push	r29
    7816:	1f 92       	push	r1
    7818:	1f 92       	push	r1
    781a:	cd b7       	in	r28, 0x3d	; 61
    781c:	de b7       	in	r29, 0x3e	; 62
    781e:	9a 83       	std	Y+2, r25	; 0x02
    7820:	89 83       	std	Y+1, r24	; 0x01
    7822:	0f 90       	pop	r0
    7824:	0f 90       	pop	r0
    7826:	df 91       	pop	r29
    7828:	cf 91       	pop	r28
    782a:	08 95       	ret

0000782c <_ZN10helicopter5tasks4TaskC1Eii>:
#include <avr/interrupt.h>
#include "Task.h"

using namespace helicopter::tasks;

Task::Task(int delay, int period)
    782c:	cf 93       	push	r28
    782e:	df 93       	push	r29
    7830:	00 d0       	rcall	.+0      	; 0x7832 <_ZN10helicopter5tasks4TaskC1Eii+0x6>
    7832:	00 d0       	rcall	.+0      	; 0x7834 <_ZN10helicopter5tasks4TaskC1Eii+0x8>
    7834:	cd b7       	in	r28, 0x3d	; 61
    7836:	de b7       	in	r29, 0x3e	; 62
    7838:	9a 83       	std	Y+2, r25	; 0x02
    783a:	89 83       	std	Y+1, r24	; 0x01
    783c:	7c 83       	std	Y+4, r23	; 0x04
    783e:	6b 83       	std	Y+3, r22	; 0x03
    7840:	5e 83       	std	Y+6, r21	; 0x06
    7842:	4d 83       	std	Y+5, r20	; 0x05
    7844:	89 81       	ldd	r24, Y+1	; 0x01
    7846:	9a 81       	ldd	r25, Y+2	; 0x02
    7848:	22 e8       	ldi	r18, 0x82	; 130
    784a:	32 e0       	ldi	r19, 0x02	; 2
    784c:	fc 01       	movw	r30, r24
    784e:	31 83       	std	Z+1, r19	; 0x01
    7850:	20 83       	st	Z, r18
{
	this->delay = delay;
    7852:	89 81       	ldd	r24, Y+1	; 0x01
    7854:	9a 81       	ldd	r25, Y+2	; 0x02
    7856:	2b 81       	ldd	r18, Y+3	; 0x03
    7858:	3c 81       	ldd	r19, Y+4	; 0x04
    785a:	fc 01       	movw	r30, r24
    785c:	33 83       	std	Z+3, r19	; 0x03
    785e:	22 83       	std	Z+2, r18	; 0x02
	this->period = period;
    7860:	89 81       	ldd	r24, Y+1	; 0x01
    7862:	9a 81       	ldd	r25, Y+2	; 0x02
    7864:	2d 81       	ldd	r18, Y+5	; 0x05
    7866:	3e 81       	ldd	r19, Y+6	; 0x06
    7868:	fc 01       	movw	r30, r24
    786a:	35 83       	std	Z+5, r19	; 0x05
    786c:	24 83       	std	Z+4, r18	; 0x04
	this->isReadyToRun = false;
    786e:	89 81       	ldd	r24, Y+1	; 0x01
    7870:	9a 81       	ldd	r25, Y+2	; 0x02
    7872:	fc 01       	movw	r30, r24
    7874:	16 82       	std	Z+6, r1	; 0x06
}
    7876:	26 96       	adiw	r28, 0x06	; 6
    7878:	0f b6       	in	r0, 0x3f	; 63
    787a:	f8 94       	cli
    787c:	de bf       	out	0x3e, r29	; 62
    787e:	0f be       	out	0x3f, r0	; 63
    7880:	cd bf       	out	0x3d, r28	; 61
    7882:	df 91       	pop	r29
    7884:	cf 91       	pop	r28
    7886:	08 95       	ret

00007888 <_ZN10helicopter5tasks4Task7runTaskEv>:

void Task::runTask()
{
    7888:	cf 93       	push	r28
    788a:	df 93       	push	r29
    788c:	1f 92       	push	r1
    788e:	1f 92       	push	r1
    7890:	cd b7       	in	r28, 0x3d	; 61
    7892:	de b7       	in	r29, 0x3e	; 62
    7894:	9a 83       	std	Y+2, r25	; 0x02
    7896:	89 83       	std	Y+1, r24	; 0x01
	//Disable interrupts 
	cli();
    7898:	f8 94       	cli
	
	//run task
	this->runTaskImpl();
    789a:	89 81       	ldd	r24, Y+1	; 0x01
    789c:	9a 81       	ldd	r25, Y+2	; 0x02
    789e:	fc 01       	movw	r30, r24
    78a0:	80 81       	ld	r24, Z
    78a2:	91 81       	ldd	r25, Z+1	; 0x01
    78a4:	fc 01       	movw	r30, r24
    78a6:	20 81       	ld	r18, Z
    78a8:	31 81       	ldd	r19, Z+1	; 0x01
    78aa:	89 81       	ldd	r24, Y+1	; 0x01
    78ac:	9a 81       	ldd	r25, Y+2	; 0x02
    78ae:	f9 01       	movw	r30, r18
    78b0:	19 95       	eicall
	
	//Re-enable interrupts
	sei();
    78b2:	78 94       	sei
    78b4:	0f 90       	pop	r0
    78b6:	0f 90       	pop	r0
    78b8:	df 91       	pop	r29
    78ba:	cf 91       	pop	r28
    78bc:	08 95       	ret

000078be <_ZN10helicopter5tasks21TransmitTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEii>:
#include "TransmitTelemetryTask.h"
#include "SystemTelemetryMessage.h"

using namespace helicopter::tasks;

TransmitTelemetryTask::TransmitTelemetryTask(GroundControlStationInterface *radioInterface, SystemModel *model, int delay, int period) :
    78be:	0f 93       	push	r16
    78c0:	1f 93       	push	r17
    78c2:	cf 93       	push	r28
    78c4:	df 93       	push	r29
    78c6:	cd b7       	in	r28, 0x3d	; 61
    78c8:	de b7       	in	r29, 0x3e	; 62
    78ca:	2a 97       	sbiw	r28, 0x0a	; 10
    78cc:	0f b6       	in	r0, 0x3f	; 63
    78ce:	f8 94       	cli
    78d0:	de bf       	out	0x3e, r29	; 62
    78d2:	0f be       	out	0x3f, r0	; 63
    78d4:	cd bf       	out	0x3d, r28	; 61
    78d6:	9a 83       	std	Y+2, r25	; 0x02
    78d8:	89 83       	std	Y+1, r24	; 0x01
    78da:	7c 83       	std	Y+4, r23	; 0x04
    78dc:	6b 83       	std	Y+3, r22	; 0x03
    78de:	5e 83       	std	Y+6, r21	; 0x06
    78e0:	4d 83       	std	Y+5, r20	; 0x05
    78e2:	38 87       	std	Y+8, r19	; 0x08
    78e4:	2f 83       	std	Y+7, r18	; 0x07
    78e6:	1a 87       	std	Y+10, r17	; 0x0a
    78e8:	09 87       	std	Y+9, r16	; 0x09
	Task(delay, period),
	radioInterface(radioInterface),
	model(model)
    78ea:	89 81       	ldd	r24, Y+1	; 0x01
    78ec:	9a 81       	ldd	r25, Y+2	; 0x02
    78ee:	49 85       	ldd	r20, Y+9	; 0x09
    78f0:	5a 85       	ldd	r21, Y+10	; 0x0a
    78f2:	2f 81       	ldd	r18, Y+7	; 0x07
    78f4:	38 85       	ldd	r19, Y+8	; 0x08
    78f6:	b9 01       	movw	r22, r18
    78f8:	0e 94 16 3c 	call	0x782c	; 0x782c <_ZN10helicopter5tasks4TaskC1Eii>
    78fc:	89 81       	ldd	r24, Y+1	; 0x01
    78fe:	9a 81       	ldd	r25, Y+2	; 0x02
    7900:	20 e9       	ldi	r18, 0x90	; 144
    7902:	32 e0       	ldi	r19, 0x02	; 2
    7904:	fc 01       	movw	r30, r24
    7906:	31 83       	std	Z+1, r19	; 0x01
    7908:	20 83       	st	Z, r18
    790a:	89 81       	ldd	r24, Y+1	; 0x01
    790c:	9a 81       	ldd	r25, Y+2	; 0x02
    790e:	2b 81       	ldd	r18, Y+3	; 0x03
    7910:	3c 81       	ldd	r19, Y+4	; 0x04
    7912:	fc 01       	movw	r30, r24
    7914:	30 87       	std	Z+8, r19	; 0x08
    7916:	27 83       	std	Z+7, r18	; 0x07
    7918:	89 81       	ldd	r24, Y+1	; 0x01
    791a:	9a 81       	ldd	r25, Y+2	; 0x02
    791c:	2d 81       	ldd	r18, Y+5	; 0x05
    791e:	3e 81       	ldd	r19, Y+6	; 0x06
    7920:	fc 01       	movw	r30, r24
    7922:	32 87       	std	Z+10, r19	; 0x0a
    7924:	21 87       	std	Z+9, r18	; 0x09
{
	
}
    7926:	2a 96       	adiw	r28, 0x0a	; 10
    7928:	0f b6       	in	r0, 0x3f	; 63
    792a:	f8 94       	cli
    792c:	de bf       	out	0x3e, r29	; 62
    792e:	0f be       	out	0x3f, r0	; 63
    7930:	cd bf       	out	0x3d, r28	; 61
    7932:	df 91       	pop	r29
    7934:	cf 91       	pop	r28
    7936:	1f 91       	pop	r17
    7938:	0f 91       	pop	r16
    793a:	08 95       	ret

0000793c <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv>:


void TransmitTelemetryTask::runTaskImpl()
{
    793c:	cf 93       	push	r28
    793e:	df 93       	push	r29
    7940:	00 d0       	rcall	.+0      	; 0x7942 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv+0x6>
    7942:	1f 92       	push	r1
    7944:	cd b7       	in	r28, 0x3d	; 61
    7946:	de b7       	in	r29, 0x3e	; 62
    7948:	9c 83       	std	Y+4, r25	; 0x04
    794a:	8b 83       	std	Y+3, r24	; 0x03
	//SystemTelemetryMessage *message = model->CreateTelemetryMessage();
	SystemTelemetryMessage *message = SystemTelemetryMessage::buildMessageFromModel(model);
    794c:	8b 81       	ldd	r24, Y+3	; 0x03
    794e:	9c 81       	ldd	r25, Y+4	; 0x04
    7950:	fc 01       	movw	r30, r24
    7952:	81 85       	ldd	r24, Z+9	; 0x09
    7954:	92 85       	ldd	r25, Z+10	; 0x0a
    7956:	0e 94 97 2f 	call	0x5f2e	; 0x5f2e <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE>
    795a:	9a 83       	std	Y+2, r25	; 0x02
    795c:	89 83       	std	Y+1, r24	; 0x01
	
	//TODO add some error handling in here
	radioInterface->transmit(message);
    795e:	8b 81       	ldd	r24, Y+3	; 0x03
    7960:	9c 81       	ldd	r25, Y+4	; 0x04
    7962:	fc 01       	movw	r30, r24
    7964:	87 81       	ldd	r24, Z+7	; 0x07
    7966:	90 85       	ldd	r25, Z+8	; 0x08
    7968:	29 81       	ldd	r18, Y+1	; 0x01
    796a:	3a 81       	ldd	r19, Y+2	; 0x02
    796c:	b9 01       	movw	r22, r18
    796e:	0e 94 65 20 	call	0x40ca	; 0x40ca <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>
	
	delete message;
    7972:	89 81       	ldd	r24, Y+1	; 0x01
    7974:	9a 81       	ldd	r25, Y+2	; 0x02
    7976:	00 97       	sbiw	r24, 0x00	; 0
    7978:	69 f0       	breq	.+26     	; 0x7994 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv+0x58>
    797a:	89 81       	ldd	r24, Y+1	; 0x01
    797c:	9a 81       	ldd	r25, Y+2	; 0x02
    797e:	fc 01       	movw	r30, r24
    7980:	80 81       	ld	r24, Z
    7982:	91 81       	ldd	r25, Z+1	; 0x01
    7984:	02 96       	adiw	r24, 0x02	; 2
    7986:	fc 01       	movw	r30, r24
    7988:	20 81       	ld	r18, Z
    798a:	31 81       	ldd	r19, Z+1	; 0x01
    798c:	89 81       	ldd	r24, Y+1	; 0x01
    798e:	9a 81       	ldd	r25, Y+2	; 0x02
    7990:	f9 01       	movw	r30, r18
    7992:	19 95       	eicall
    7994:	0f 90       	pop	r0
    7996:	0f 90       	pop	r0
    7998:	0f 90       	pop	r0
    799a:	0f 90       	pop	r0
    799c:	df 91       	pop	r29
    799e:	cf 91       	pop	r28
    79a0:	08 95       	ret

000079a2 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class transmits flight computer telemetry information to the ground control station.
		 */
		class TransmitTelemetryTask : public Task
    79a2:	cf 93       	push	r28
    79a4:	df 93       	push	r29
    79a6:	1f 92       	push	r1
    79a8:	1f 92       	push	r1
    79aa:	cd b7       	in	r28, 0x3d	; 61
    79ac:	de b7       	in	r29, 0x3e	; 62
    79ae:	9a 83       	std	Y+2, r25	; 0x02
    79b0:	89 83       	std	Y+1, r24	; 0x01
    79b2:	89 81       	ldd	r24, Y+1	; 0x01
    79b4:	9a 81       	ldd	r25, Y+2	; 0x02
    79b6:	20 e9       	ldi	r18, 0x90	; 144
    79b8:	32 e0       	ldi	r19, 0x02	; 2
    79ba:	fc 01       	movw	r30, r24
    79bc:	31 83       	std	Z+1, r19	; 0x01
    79be:	20 83       	st	Z, r18
    79c0:	89 81       	ldd	r24, Y+1	; 0x01
    79c2:	9a 81       	ldd	r25, Y+2	; 0x02
    79c4:	0e 94 cf 13 	call	0x279e	; 0x279e <_ZN10helicopter5tasks4TaskD1Ev>
    79c8:	80 e0       	ldi	r24, 0x00	; 0
    79ca:	90 e0       	ldi	r25, 0x00	; 0
    79cc:	81 70       	andi	r24, 0x01	; 1
    79ce:	99 27       	eor	r25, r25
    79d0:	00 97       	sbiw	r24, 0x00	; 0
    79d2:	21 f0       	breq	.+8      	; 0x79dc <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev+0x3a>
    79d4:	89 81       	ldd	r24, Y+1	; 0x01
    79d6:	9a 81       	ldd	r25, Y+2	; 0x02
    79d8:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    79dc:	0f 90       	pop	r0
    79de:	0f 90       	pop	r0
    79e0:	df 91       	pop	r29
    79e2:	cf 91       	pop	r28
    79e4:	08 95       	ret

000079e6 <_ZN10helicopter5tasks21TransmitTelemetryTaskD0Ev>:
    79e6:	cf 93       	push	r28
    79e8:	df 93       	push	r29
    79ea:	1f 92       	push	r1
    79ec:	1f 92       	push	r1
    79ee:	cd b7       	in	r28, 0x3d	; 61
    79f0:	de b7       	in	r29, 0x3e	; 62
    79f2:	9a 83       	std	Y+2, r25	; 0x02
    79f4:	89 83       	std	Y+1, r24	; 0x01
    79f6:	89 81       	ldd	r24, Y+1	; 0x01
    79f8:	9a 81       	ldd	r25, Y+2	; 0x02
    79fa:	0e 94 d1 3c 	call	0x79a2	; 0x79a2 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>
    79fe:	89 81       	ldd	r24, Y+1	; 0x01
    7a00:	9a 81       	ldd	r25, Y+2	; 0x02
    7a02:	0e 94 19 3d 	call	0x7a32	; 0x7a32 <_ZdlPv>
    7a06:	0f 90       	pop	r0
    7a08:	0f 90       	pop	r0
    7a0a:	df 91       	pop	r29
    7a0c:	cf 91       	pop	r28
    7a0e:	08 95       	ret

00007a10 <_Znwj>:
 *  Author: HP User
 */ 
#include <CommonHeader.h>

void * operator new(size_t size)
{
    7a10:	cf 93       	push	r28
    7a12:	df 93       	push	r29
    7a14:	1f 92       	push	r1
    7a16:	1f 92       	push	r1
    7a18:	cd b7       	in	r28, 0x3d	; 61
    7a1a:	de b7       	in	r29, 0x3e	; 62
    7a1c:	9a 83       	std	Y+2, r25	; 0x02
    7a1e:	89 83       	std	Y+1, r24	; 0x01
	return malloc(size);
    7a20:	89 81       	ldd	r24, Y+1	; 0x01
    7a22:	9a 81       	ldd	r25, Y+2	; 0x02
    7a24:	0e 94 b3 47 	call	0x8f66	; 0x8f66 <malloc>
}
    7a28:	0f 90       	pop	r0
    7a2a:	0f 90       	pop	r0
    7a2c:	df 91       	pop	r29
    7a2e:	cf 91       	pop	r28
    7a30:	08 95       	ret

00007a32 <_ZdlPv>:

void operator delete(void * ptr)
{
    7a32:	cf 93       	push	r28
    7a34:	df 93       	push	r29
    7a36:	1f 92       	push	r1
    7a38:	1f 92       	push	r1
    7a3a:	cd b7       	in	r28, 0x3d	; 61
    7a3c:	de b7       	in	r29, 0x3e	; 62
    7a3e:	9a 83       	std	Y+2, r25	; 0x02
    7a40:	89 83       	std	Y+1, r24	; 0x01
	if (ptr != NULL)
    7a42:	89 81       	ldd	r24, Y+1	; 0x01
    7a44:	9a 81       	ldd	r25, Y+2	; 0x02
    7a46:	00 97       	sbiw	r24, 0x00	; 0
    7a48:	21 f0       	breq	.+8      	; 0x7a52 <_ZdlPv+0x20>
	{
		free(ptr);
    7a4a:	89 81       	ldd	r24, Y+1	; 0x01
    7a4c:	9a 81       	ldd	r25, Y+2	; 0x02
    7a4e:	0e 94 4e 48 	call	0x909c	; 0x909c <free>
	}
}
    7a52:	0f 90       	pop	r0
    7a54:	0f 90       	pop	r0
    7a56:	df 91       	pop	r29
    7a58:	cf 91       	pop	r28
    7a5a:	08 95       	ret

00007a5c <_Znaj>:

void * operator new[](size_t size)
{
    7a5c:	cf 93       	push	r28
    7a5e:	df 93       	push	r29
    7a60:	1f 92       	push	r1
    7a62:	1f 92       	push	r1
    7a64:	cd b7       	in	r28, 0x3d	; 61
    7a66:	de b7       	in	r29, 0x3e	; 62
    7a68:	9a 83       	std	Y+2, r25	; 0x02
    7a6a:	89 83       	std	Y+1, r24	; 0x01
	return malloc(size);
    7a6c:	89 81       	ldd	r24, Y+1	; 0x01
    7a6e:	9a 81       	ldd	r25, Y+2	; 0x02
    7a70:	0e 94 b3 47 	call	0x8f66	; 0x8f66 <malloc>
}
    7a74:	0f 90       	pop	r0
    7a76:	0f 90       	pop	r0
    7a78:	df 91       	pop	r29
    7a7a:	cf 91       	pop	r28
    7a7c:	08 95       	ret

00007a7e <_ZdaPv>:

void operator delete[](void * ptr)
{
    7a7e:	cf 93       	push	r28
    7a80:	df 93       	push	r29
    7a82:	1f 92       	push	r1
    7a84:	1f 92       	push	r1
    7a86:	cd b7       	in	r28, 0x3d	; 61
    7a88:	de b7       	in	r29, 0x3e	; 62
    7a8a:	9a 83       	std	Y+2, r25	; 0x02
    7a8c:	89 83       	std	Y+1, r24	; 0x01
	if(ptr != NULL)
    7a8e:	89 81       	ldd	r24, Y+1	; 0x01
    7a90:	9a 81       	ldd	r25, Y+2	; 0x02
    7a92:	00 97       	sbiw	r24, 0x00	; 0
    7a94:	21 f0       	breq	.+8      	; 0x7a9e <_ZdaPv+0x20>
	{
		free(ptr);
    7a96:	89 81       	ldd	r24, Y+1	; 0x01
    7a98:	9a 81       	ldd	r25, Y+2	; 0x02
    7a9a:	0e 94 4e 48 	call	0x909c	; 0x909c <free>
	}
	
    7a9e:	0f 90       	pop	r0
    7aa0:	0f 90       	pop	r0
    7aa2:	df 91       	pop	r29
    7aa4:	cf 91       	pop	r28
    7aa6:	08 95       	ret

00007aa8 <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>:


using namespace helicopter::util;

float CoordinateUtil::DegreesToRad(float valueDegrees)
{
    7aa8:	cf 93       	push	r28
    7aaa:	df 93       	push	r29
    7aac:	00 d0       	rcall	.+0      	; 0x7aae <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf+0x6>
    7aae:	1f 92       	push	r1
    7ab0:	cd b7       	in	r28, 0x3d	; 61
    7ab2:	de b7       	in	r29, 0x3e	; 62
    7ab4:	69 83       	std	Y+1, r22	; 0x01
    7ab6:	7a 83       	std	Y+2, r23	; 0x02
    7ab8:	8b 83       	std	Y+3, r24	; 0x03
    7aba:	9c 83       	std	Y+4, r25	; 0x04
	return valueDegrees * (M_PI / 180.0);
    7abc:	25 e3       	ldi	r18, 0x35	; 53
    7abe:	3a ef       	ldi	r19, 0xFA	; 250
    7ac0:	4e e8       	ldi	r20, 0x8E	; 142
    7ac2:	5c e3       	ldi	r21, 0x3C	; 60
    7ac4:	69 81       	ldd	r22, Y+1	; 0x01
    7ac6:	7a 81       	ldd	r23, Y+2	; 0x02
    7ac8:	8b 81       	ldd	r24, Y+3	; 0x03
    7aca:	9c 81       	ldd	r25, Y+4	; 0x04
    7acc:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    7ad0:	dc 01       	movw	r26, r24
    7ad2:	cb 01       	movw	r24, r22
}
    7ad4:	bc 01       	movw	r22, r24
    7ad6:	cd 01       	movw	r24, r26
    7ad8:	0f 90       	pop	r0
    7ada:	0f 90       	pop	r0
    7adc:	0f 90       	pop	r0
    7ade:	0f 90       	pop	r0
    7ae0:	df 91       	pop	r29
    7ae2:	cf 91       	pop	r28
    7ae4:	08 95       	ret

00007ae6 <_ZN10helicopter4util14CoordinateUtil37CalculateECEFToLocalNEDRotationMatrixEffPA3_f>:

void CoordinateUtil::CalculateECEFToLocalNEDRotationMatrix(float latitudeDegrees, float longitudeDegrees, float  ecefToLocalNEDRotationMatrix[][3])
{
    7ae6:	cf 92       	push	r12
    7ae8:	df 92       	push	r13
    7aea:	ef 92       	push	r14
    7aec:	ff 92       	push	r15
    7aee:	0f 93       	push	r16
    7af0:	1f 93       	push	r17
    7af2:	cf 93       	push	r28
    7af4:	df 93       	push	r29
    7af6:	cd b7       	in	r28, 0x3d	; 61
    7af8:	de b7       	in	r29, 0x3e	; 62
    7afa:	62 97       	sbiw	r28, 0x12	; 18
    7afc:	0f b6       	in	r0, 0x3f	; 63
    7afe:	f8 94       	cli
    7b00:	de bf       	out	0x3e, r29	; 62
    7b02:	0f be       	out	0x3f, r0	; 63
    7b04:	cd bf       	out	0x3d, r28	; 61
    7b06:	69 87       	std	Y+9, r22	; 0x09
    7b08:	7a 87       	std	Y+10, r23	; 0x0a
    7b0a:	8b 87       	std	Y+11, r24	; 0x0b
    7b0c:	9c 87       	std	Y+12, r25	; 0x0c
    7b0e:	2d 87       	std	Y+13, r18	; 0x0d
    7b10:	3e 87       	std	Y+14, r19	; 0x0e
    7b12:	4f 87       	std	Y+15, r20	; 0x0f
    7b14:	58 8b       	std	Y+16, r21	; 0x10
    7b16:	1a 8b       	std	Y+18, r17	; 0x12
    7b18:	09 8b       	std	Y+17, r16	; 0x11
	float radLat = DegreesToRad(latitudeDegrees);
    7b1a:	89 85       	ldd	r24, Y+9	; 0x09
    7b1c:	9a 85       	ldd	r25, Y+10	; 0x0a
    7b1e:	ab 85       	ldd	r26, Y+11	; 0x0b
    7b20:	bc 85       	ldd	r27, Y+12	; 0x0c
    7b22:	bc 01       	movw	r22, r24
    7b24:	cd 01       	movw	r24, r26
    7b26:	0e 94 54 3d 	call	0x7aa8	; 0x7aa8 <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    7b2a:	dc 01       	movw	r26, r24
    7b2c:	cb 01       	movw	r24, r22
    7b2e:	89 83       	std	Y+1, r24	; 0x01
    7b30:	9a 83       	std	Y+2, r25	; 0x02
    7b32:	ab 83       	std	Y+3, r26	; 0x03
    7b34:	bc 83       	std	Y+4, r27	; 0x04
	float radLong = DegreesToRad(longitudeDegrees);
    7b36:	8d 85       	ldd	r24, Y+13	; 0x0d
    7b38:	9e 85       	ldd	r25, Y+14	; 0x0e
    7b3a:	af 85       	ldd	r26, Y+15	; 0x0f
    7b3c:	b8 89       	ldd	r27, Y+16	; 0x10
    7b3e:	bc 01       	movw	r22, r24
    7b40:	cd 01       	movw	r24, r26
    7b42:	0e 94 54 3d 	call	0x7aa8	; 0x7aa8 <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    7b46:	dc 01       	movw	r26, r24
    7b48:	cb 01       	movw	r24, r22
    7b4a:	8d 83       	std	Y+5, r24	; 0x05
    7b4c:	9e 83       	std	Y+6, r25	; 0x06
    7b4e:	af 83       	std	Y+7, r26	; 0x07
    7b50:	b8 87       	std	Y+8, r27	; 0x08

	
	ecefToLocalNEDRotationMatrix[0][0] = -1 * sin(radLat) * cos(radLong);
    7b52:	89 81       	ldd	r24, Y+1	; 0x01
    7b54:	9a 81       	ldd	r25, Y+2	; 0x02
    7b56:	ab 81       	ldd	r26, Y+3	; 0x03
    7b58:	bc 81       	ldd	r27, Y+4	; 0x04
    7b5a:	bc 01       	movw	r22, r24
    7b5c:	cd 01       	movw	r24, r26
    7b5e:	0e 94 fe 45 	call	0x8bfc	; 0x8bfc <sin>
    7b62:	dc 01       	movw	r26, r24
    7b64:	cb 01       	movw	r24, r22
    7b66:	6c 01       	movw	r12, r24
    7b68:	7d 01       	movw	r14, r26
    7b6a:	f7 fa       	bst	r15, 7
    7b6c:	f0 94       	com	r15
    7b6e:	f7 f8       	bld	r15, 7
    7b70:	f0 94       	com	r15
    7b72:	8d 81       	ldd	r24, Y+5	; 0x05
    7b74:	9e 81       	ldd	r25, Y+6	; 0x06
    7b76:	af 81       	ldd	r26, Y+7	; 0x07
    7b78:	b8 85       	ldd	r27, Y+8	; 0x08
    7b7a:	bc 01       	movw	r22, r24
    7b7c:	cd 01       	movw	r24, r26
    7b7e:	0e 94 71 43 	call	0x86e2	; 0x86e2 <cos>
    7b82:	dc 01       	movw	r26, r24
    7b84:	cb 01       	movw	r24, r22
    7b86:	9c 01       	movw	r18, r24
    7b88:	ad 01       	movw	r20, r26
    7b8a:	c7 01       	movw	r24, r14
    7b8c:	b6 01       	movw	r22, r12
    7b8e:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    7b92:	dc 01       	movw	r26, r24
    7b94:	cb 01       	movw	r24, r22
    7b96:	29 89       	ldd	r18, Y+17	; 0x11
    7b98:	3a 89       	ldd	r19, Y+18	; 0x12
    7b9a:	f9 01       	movw	r30, r18
    7b9c:	80 83       	st	Z, r24
    7b9e:	91 83       	std	Z+1, r25	; 0x01
    7ba0:	a2 83       	std	Z+2, r26	; 0x02
    7ba2:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[0][1] = -1 * sin(radLat) * sin(radLong);
    7ba4:	89 81       	ldd	r24, Y+1	; 0x01
    7ba6:	9a 81       	ldd	r25, Y+2	; 0x02
    7ba8:	ab 81       	ldd	r26, Y+3	; 0x03
    7baa:	bc 81       	ldd	r27, Y+4	; 0x04
    7bac:	bc 01       	movw	r22, r24
    7bae:	cd 01       	movw	r24, r26
    7bb0:	0e 94 fe 45 	call	0x8bfc	; 0x8bfc <sin>
    7bb4:	dc 01       	movw	r26, r24
    7bb6:	cb 01       	movw	r24, r22
    7bb8:	6c 01       	movw	r12, r24
    7bba:	7d 01       	movw	r14, r26
    7bbc:	f7 fa       	bst	r15, 7
    7bbe:	f0 94       	com	r15
    7bc0:	f7 f8       	bld	r15, 7
    7bc2:	f0 94       	com	r15
    7bc4:	8d 81       	ldd	r24, Y+5	; 0x05
    7bc6:	9e 81       	ldd	r25, Y+6	; 0x06
    7bc8:	af 81       	ldd	r26, Y+7	; 0x07
    7bca:	b8 85       	ldd	r27, Y+8	; 0x08
    7bcc:	bc 01       	movw	r22, r24
    7bce:	cd 01       	movw	r24, r26
    7bd0:	0e 94 fe 45 	call	0x8bfc	; 0x8bfc <sin>
    7bd4:	dc 01       	movw	r26, r24
    7bd6:	cb 01       	movw	r24, r22
    7bd8:	9c 01       	movw	r18, r24
    7bda:	ad 01       	movw	r20, r26
    7bdc:	c7 01       	movw	r24, r14
    7bde:	b6 01       	movw	r22, r12
    7be0:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    7be4:	dc 01       	movw	r26, r24
    7be6:	cb 01       	movw	r24, r22
    7be8:	29 89       	ldd	r18, Y+17	; 0x11
    7bea:	3a 89       	ldd	r19, Y+18	; 0x12
    7bec:	f9 01       	movw	r30, r18
    7bee:	84 83       	std	Z+4, r24	; 0x04
    7bf0:	95 83       	std	Z+5, r25	; 0x05
    7bf2:	a6 83       	std	Z+6, r26	; 0x06
    7bf4:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[0][2] = cos(radLat);
    7bf6:	89 81       	ldd	r24, Y+1	; 0x01
    7bf8:	9a 81       	ldd	r25, Y+2	; 0x02
    7bfa:	ab 81       	ldd	r26, Y+3	; 0x03
    7bfc:	bc 81       	ldd	r27, Y+4	; 0x04
    7bfe:	bc 01       	movw	r22, r24
    7c00:	cd 01       	movw	r24, r26
    7c02:	0e 94 71 43 	call	0x86e2	; 0x86e2 <cos>
    7c06:	dc 01       	movw	r26, r24
    7c08:	cb 01       	movw	r24, r22
    7c0a:	29 89       	ldd	r18, Y+17	; 0x11
    7c0c:	3a 89       	ldd	r19, Y+18	; 0x12
    7c0e:	f9 01       	movw	r30, r18
    7c10:	80 87       	std	Z+8, r24	; 0x08
    7c12:	91 87       	std	Z+9, r25	; 0x09
    7c14:	a2 87       	std	Z+10, r26	; 0x0a
    7c16:	b3 87       	std	Z+11, r27	; 0x0b
	ecefToLocalNEDRotationMatrix[1][0] = -1 * sin (radLong);
    7c18:	89 89       	ldd	r24, Y+17	; 0x11
    7c1a:	9a 89       	ldd	r25, Y+18	; 0x12
    7c1c:	8c 01       	movw	r16, r24
    7c1e:	04 5f       	subi	r16, 0xF4	; 244
    7c20:	1f 4f       	sbci	r17, 0xFF	; 255
    7c22:	8d 81       	ldd	r24, Y+5	; 0x05
    7c24:	9e 81       	ldd	r25, Y+6	; 0x06
    7c26:	af 81       	ldd	r26, Y+7	; 0x07
    7c28:	b8 85       	ldd	r27, Y+8	; 0x08
    7c2a:	bc 01       	movw	r22, r24
    7c2c:	cd 01       	movw	r24, r26
    7c2e:	0e 94 fe 45 	call	0x8bfc	; 0x8bfc <sin>
    7c32:	dc 01       	movw	r26, r24
    7c34:	cb 01       	movw	r24, r22
    7c36:	b0 58       	subi	r27, 0x80	; 128
    7c38:	f8 01       	movw	r30, r16
    7c3a:	80 83       	st	Z, r24
    7c3c:	91 83       	std	Z+1, r25	; 0x01
    7c3e:	a2 83       	std	Z+2, r26	; 0x02
    7c40:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[1][1] = cos(radLong);
    7c42:	89 89       	ldd	r24, Y+17	; 0x11
    7c44:	9a 89       	ldd	r25, Y+18	; 0x12
    7c46:	8c 01       	movw	r16, r24
    7c48:	04 5f       	subi	r16, 0xF4	; 244
    7c4a:	1f 4f       	sbci	r17, 0xFF	; 255
    7c4c:	8d 81       	ldd	r24, Y+5	; 0x05
    7c4e:	9e 81       	ldd	r25, Y+6	; 0x06
    7c50:	af 81       	ldd	r26, Y+7	; 0x07
    7c52:	b8 85       	ldd	r27, Y+8	; 0x08
    7c54:	bc 01       	movw	r22, r24
    7c56:	cd 01       	movw	r24, r26
    7c58:	0e 94 71 43 	call	0x86e2	; 0x86e2 <cos>
    7c5c:	dc 01       	movw	r26, r24
    7c5e:	cb 01       	movw	r24, r22
    7c60:	f8 01       	movw	r30, r16
    7c62:	84 83       	std	Z+4, r24	; 0x04
    7c64:	95 83       	std	Z+5, r25	; 0x05
    7c66:	a6 83       	std	Z+6, r26	; 0x06
    7c68:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[1][2] = 0;
    7c6a:	89 89       	ldd	r24, Y+17	; 0x11
    7c6c:	9a 89       	ldd	r25, Y+18	; 0x12
    7c6e:	0c 96       	adiw	r24, 0x0c	; 12
    7c70:	fc 01       	movw	r30, r24
    7c72:	10 86       	std	Z+8, r1	; 0x08
    7c74:	11 86       	std	Z+9, r1	; 0x09
    7c76:	12 86       	std	Z+10, r1	; 0x0a
    7c78:	13 86       	std	Z+11, r1	; 0x0b
	ecefToLocalNEDRotationMatrix[2][0] = -1 * cos(radLat) * cos(radLong);
    7c7a:	89 89       	ldd	r24, Y+17	; 0x11
    7c7c:	9a 89       	ldd	r25, Y+18	; 0x12
    7c7e:	8c 01       	movw	r16, r24
    7c80:	08 5e       	subi	r16, 0xE8	; 232
    7c82:	1f 4f       	sbci	r17, 0xFF	; 255
    7c84:	89 81       	ldd	r24, Y+1	; 0x01
    7c86:	9a 81       	ldd	r25, Y+2	; 0x02
    7c88:	ab 81       	ldd	r26, Y+3	; 0x03
    7c8a:	bc 81       	ldd	r27, Y+4	; 0x04
    7c8c:	bc 01       	movw	r22, r24
    7c8e:	cd 01       	movw	r24, r26
    7c90:	0e 94 71 43 	call	0x86e2	; 0x86e2 <cos>
    7c94:	dc 01       	movw	r26, r24
    7c96:	cb 01       	movw	r24, r22
    7c98:	6c 01       	movw	r12, r24
    7c9a:	7d 01       	movw	r14, r26
    7c9c:	f7 fa       	bst	r15, 7
    7c9e:	f0 94       	com	r15
    7ca0:	f7 f8       	bld	r15, 7
    7ca2:	f0 94       	com	r15
    7ca4:	8d 81       	ldd	r24, Y+5	; 0x05
    7ca6:	9e 81       	ldd	r25, Y+6	; 0x06
    7ca8:	af 81       	ldd	r26, Y+7	; 0x07
    7caa:	b8 85       	ldd	r27, Y+8	; 0x08
    7cac:	bc 01       	movw	r22, r24
    7cae:	cd 01       	movw	r24, r26
    7cb0:	0e 94 71 43 	call	0x86e2	; 0x86e2 <cos>
    7cb4:	dc 01       	movw	r26, r24
    7cb6:	cb 01       	movw	r24, r22
    7cb8:	9c 01       	movw	r18, r24
    7cba:	ad 01       	movw	r20, r26
    7cbc:	c7 01       	movw	r24, r14
    7cbe:	b6 01       	movw	r22, r12
    7cc0:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    7cc4:	dc 01       	movw	r26, r24
    7cc6:	cb 01       	movw	r24, r22
    7cc8:	f8 01       	movw	r30, r16
    7cca:	80 83       	st	Z, r24
    7ccc:	91 83       	std	Z+1, r25	; 0x01
    7cce:	a2 83       	std	Z+2, r26	; 0x02
    7cd0:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[2][1] = -1 * cos(radLat)*sin(radLong);
    7cd2:	89 89       	ldd	r24, Y+17	; 0x11
    7cd4:	9a 89       	ldd	r25, Y+18	; 0x12
    7cd6:	8c 01       	movw	r16, r24
    7cd8:	08 5e       	subi	r16, 0xE8	; 232
    7cda:	1f 4f       	sbci	r17, 0xFF	; 255
    7cdc:	89 81       	ldd	r24, Y+1	; 0x01
    7cde:	9a 81       	ldd	r25, Y+2	; 0x02
    7ce0:	ab 81       	ldd	r26, Y+3	; 0x03
    7ce2:	bc 81       	ldd	r27, Y+4	; 0x04
    7ce4:	bc 01       	movw	r22, r24
    7ce6:	cd 01       	movw	r24, r26
    7ce8:	0e 94 71 43 	call	0x86e2	; 0x86e2 <cos>
    7cec:	dc 01       	movw	r26, r24
    7cee:	cb 01       	movw	r24, r22
    7cf0:	6c 01       	movw	r12, r24
    7cf2:	7d 01       	movw	r14, r26
    7cf4:	f7 fa       	bst	r15, 7
    7cf6:	f0 94       	com	r15
    7cf8:	f7 f8       	bld	r15, 7
    7cfa:	f0 94       	com	r15
    7cfc:	8d 81       	ldd	r24, Y+5	; 0x05
    7cfe:	9e 81       	ldd	r25, Y+6	; 0x06
    7d00:	af 81       	ldd	r26, Y+7	; 0x07
    7d02:	b8 85       	ldd	r27, Y+8	; 0x08
    7d04:	bc 01       	movw	r22, r24
    7d06:	cd 01       	movw	r24, r26
    7d08:	0e 94 fe 45 	call	0x8bfc	; 0x8bfc <sin>
    7d0c:	dc 01       	movw	r26, r24
    7d0e:	cb 01       	movw	r24, r22
    7d10:	9c 01       	movw	r18, r24
    7d12:	ad 01       	movw	r20, r26
    7d14:	c7 01       	movw	r24, r14
    7d16:	b6 01       	movw	r22, r12
    7d18:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    7d1c:	dc 01       	movw	r26, r24
    7d1e:	cb 01       	movw	r24, r22
    7d20:	f8 01       	movw	r30, r16
    7d22:	84 83       	std	Z+4, r24	; 0x04
    7d24:	95 83       	std	Z+5, r25	; 0x05
    7d26:	a6 83       	std	Z+6, r26	; 0x06
    7d28:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[2][2] = -1 * sin(radLat);
    7d2a:	89 89       	ldd	r24, Y+17	; 0x11
    7d2c:	9a 89       	ldd	r25, Y+18	; 0x12
    7d2e:	8c 01       	movw	r16, r24
    7d30:	08 5e       	subi	r16, 0xE8	; 232
    7d32:	1f 4f       	sbci	r17, 0xFF	; 255
    7d34:	89 81       	ldd	r24, Y+1	; 0x01
    7d36:	9a 81       	ldd	r25, Y+2	; 0x02
    7d38:	ab 81       	ldd	r26, Y+3	; 0x03
    7d3a:	bc 81       	ldd	r27, Y+4	; 0x04
    7d3c:	bc 01       	movw	r22, r24
    7d3e:	cd 01       	movw	r24, r26
    7d40:	0e 94 fe 45 	call	0x8bfc	; 0x8bfc <sin>
    7d44:	dc 01       	movw	r26, r24
    7d46:	cb 01       	movw	r24, r22
    7d48:	b0 58       	subi	r27, 0x80	; 128
    7d4a:	f8 01       	movw	r30, r16
    7d4c:	80 87       	std	Z+8, r24	; 0x08
    7d4e:	91 87       	std	Z+9, r25	; 0x09
    7d50:	a2 87       	std	Z+10, r26	; 0x0a
    7d52:	b3 87       	std	Z+11, r27	; 0x0b
}
    7d54:	62 96       	adiw	r28, 0x12	; 18
    7d56:	0f b6       	in	r0, 0x3f	; 63
    7d58:	f8 94       	cli
    7d5a:	de bf       	out	0x3e, r29	; 62
    7d5c:	0f be       	out	0x3f, r0	; 63
    7d5e:	cd bf       	out	0x3d, r28	; 61
    7d60:	df 91       	pop	r29
    7d62:	cf 91       	pop	r28
    7d64:	1f 91       	pop	r17
    7d66:	0f 91       	pop	r16
    7d68:	ff 90       	pop	r15
    7d6a:	ef 90       	pop	r14
    7d6c:	df 90       	pop	r13
    7d6e:	cf 90       	pop	r12
    7d70:	08 95       	ret

00007d72 <_ZN10helicopter4util14CoordinateUtil11calculateNeEff>:

float CoordinateUtil::calculateNe(float E, float latitudeRads)
{
    7d72:	cf 92       	push	r12
    7d74:	df 92       	push	r13
    7d76:	ef 92       	push	r14
    7d78:	ff 92       	push	r15
    7d7a:	cf 93       	push	r28
    7d7c:	df 93       	push	r29
    7d7e:	cd b7       	in	r28, 0x3d	; 61
    7d80:	de b7       	in	r29, 0x3e	; 62
    7d82:	28 97       	sbiw	r28, 0x08	; 8
    7d84:	0f b6       	in	r0, 0x3f	; 63
    7d86:	f8 94       	cli
    7d88:	de bf       	out	0x3e, r29	; 62
    7d8a:	0f be       	out	0x3f, r0	; 63
    7d8c:	cd bf       	out	0x3d, r28	; 61
    7d8e:	69 83       	std	Y+1, r22	; 0x01
    7d90:	7a 83       	std	Y+2, r23	; 0x02
    7d92:	8b 83       	std	Y+3, r24	; 0x03
    7d94:	9c 83       	std	Y+4, r25	; 0x04
    7d96:	2d 83       	std	Y+5, r18	; 0x05
    7d98:	3e 83       	std	Y+6, r19	; 0x06
    7d9a:	4f 83       	std	Y+7, r20	; 0x07
    7d9c:	58 87       	std	Y+8, r21	; 0x08
	return Rea / sqrt(1 - pow(E, 2) * pow(sin(latitudeRads), 2));
    7d9e:	89 81       	ldd	r24, Y+1	; 0x01
    7da0:	9a 81       	ldd	r25, Y+2	; 0x02
    7da2:	ab 81       	ldd	r26, Y+3	; 0x03
    7da4:	bc 81       	ldd	r27, Y+4	; 0x04
    7da6:	20 e0       	ldi	r18, 0x00	; 0
    7da8:	30 e0       	ldi	r19, 0x00	; 0
    7daa:	40 e0       	ldi	r20, 0x00	; 0
    7dac:	50 e4       	ldi	r21, 0x40	; 64
    7dae:	bc 01       	movw	r22, r24
    7db0:	cd 01       	movw	r24, r26
    7db2:	0e 94 b2 45 	call	0x8b64	; 0x8b64 <pow>
    7db6:	6b 01       	movw	r12, r22
    7db8:	7c 01       	movw	r14, r24
    7dba:	8d 81       	ldd	r24, Y+5	; 0x05
    7dbc:	9e 81       	ldd	r25, Y+6	; 0x06
    7dbe:	af 81       	ldd	r26, Y+7	; 0x07
    7dc0:	b8 85       	ldd	r27, Y+8	; 0x08
    7dc2:	bc 01       	movw	r22, r24
    7dc4:	cd 01       	movw	r24, r26
    7dc6:	0e 94 fe 45 	call	0x8bfc	; 0x8bfc <sin>
    7dca:	dc 01       	movw	r26, r24
    7dcc:	cb 01       	movw	r24, r22
    7dce:	20 e0       	ldi	r18, 0x00	; 0
    7dd0:	30 e0       	ldi	r19, 0x00	; 0
    7dd2:	40 e0       	ldi	r20, 0x00	; 0
    7dd4:	50 e4       	ldi	r21, 0x40	; 64
    7dd6:	bc 01       	movw	r22, r24
    7dd8:	cd 01       	movw	r24, r26
    7dda:	0e 94 b2 45 	call	0x8b64	; 0x8b64 <pow>
    7dde:	dc 01       	movw	r26, r24
    7de0:	cb 01       	movw	r24, r22
    7de2:	9c 01       	movw	r18, r24
    7de4:	ad 01       	movw	r20, r26
    7de6:	c7 01       	movw	r24, r14
    7de8:	b6 01       	movw	r22, r12
    7dea:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    7dee:	dc 01       	movw	r26, r24
    7df0:	cb 01       	movw	r24, r22
    7df2:	9c 01       	movw	r18, r24
    7df4:	ad 01       	movw	r20, r26
    7df6:	60 e0       	ldi	r22, 0x00	; 0
    7df8:	70 e0       	ldi	r23, 0x00	; 0
    7dfa:	80 e8       	ldi	r24, 0x80	; 128
    7dfc:	9f e3       	ldi	r25, 0x3F	; 63
    7dfe:	0e 94 08 43 	call	0x8610	; 0x8610 <__subsf3>
    7e02:	dc 01       	movw	r26, r24
    7e04:	cb 01       	movw	r24, r22
    7e06:	bc 01       	movw	r22, r24
    7e08:	cd 01       	movw	r24, r26
    7e0a:	0e 94 08 46 	call	0x8c10	; 0x8c10 <sqrt>
    7e0e:	dc 01       	movw	r26, r24
    7e10:	cb 01       	movw	r24, r22
    7e12:	9c 01       	movw	r18, r24
    7e14:	ad 01       	movw	r20, r26
    7e16:	62 e3       	ldi	r22, 0x32	; 50
    7e18:	75 ea       	ldi	r23, 0xA5	; 165
    7e1a:	82 ec       	ldi	r24, 0xC2	; 194
    7e1c:	9a e4       	ldi	r25, 0x4A	; 74
    7e1e:	0e 94 74 43 	call	0x86e8	; 0x86e8 <__divsf3>
    7e22:	dc 01       	movw	r26, r24
    7e24:	cb 01       	movw	r24, r22
}
    7e26:	bc 01       	movw	r22, r24
    7e28:	cd 01       	movw	r24, r26
    7e2a:	28 96       	adiw	r28, 0x08	; 8
    7e2c:	0f b6       	in	r0, 0x3f	; 63
    7e2e:	f8 94       	cli
    7e30:	de bf       	out	0x3e, r29	; 62
    7e32:	0f be       	out	0x3f, r0	; 63
    7e34:	cd bf       	out	0x3d, r28	; 61
    7e36:	df 91       	pop	r29
    7e38:	cf 91       	pop	r28
    7e3a:	ff 90       	pop	r15
    7e3c:	ef 90       	pop	r14
    7e3e:	df 90       	pop	r13
    7e40:	cf 90       	pop	r12
    7e42:	08 95       	ret

00007e44 <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEfffRfS2_S2_>:
/**
 * A description of the variables used to convert lat/long to ecef can be found on page 25 of 
 * Unmanned Rotor Craft Systems
 */
void CoordinateUtil::ConvertFromGeodeticToECEF(float latitudeDegrees, float longitudeDegrees, float altitudeFeetAgl, float &ecefX, float &ecefY, float &ecefZ)
{
    7e44:	8f 92       	push	r8
    7e46:	9f 92       	push	r9
    7e48:	af 92       	push	r10
    7e4a:	bf 92       	push	r11
    7e4c:	cf 92       	push	r12
    7e4e:	df 92       	push	r13
    7e50:	ef 92       	push	r14
    7e52:	ff 92       	push	r15
    7e54:	0f 93       	push	r16
    7e56:	1f 93       	push	r17
    7e58:	cf 93       	push	r28
    7e5a:	df 93       	push	r29
    7e5c:	cd b7       	in	r28, 0x3d	; 61
    7e5e:	de b7       	in	r29, 0x3e	; 62
    7e60:	6e 97       	sbiw	r28, 0x1e	; 30
    7e62:	0f b6       	in	r0, 0x3f	; 63
    7e64:	f8 94       	cli
    7e66:	de bf       	out	0x3e, r29	; 62
    7e68:	0f be       	out	0x3f, r0	; 63
    7e6a:	cd bf       	out	0x3d, r28	; 61
    7e6c:	6d 87       	std	Y+13, r22	; 0x0d
    7e6e:	7e 87       	std	Y+14, r23	; 0x0e
    7e70:	8f 87       	std	Y+15, r24	; 0x0f
    7e72:	98 8b       	std	Y+16, r25	; 0x10
    7e74:	29 8b       	std	Y+17, r18	; 0x11
    7e76:	3a 8b       	std	Y+18, r19	; 0x12
    7e78:	4b 8b       	std	Y+19, r20	; 0x13
    7e7a:	5c 8b       	std	Y+20, r21	; 0x14
    7e7c:	ed 8a       	std	Y+21, r14	; 0x15
    7e7e:	fe 8a       	std	Y+22, r15	; 0x16
    7e80:	0f 8b       	std	Y+23, r16	; 0x17
    7e82:	18 8f       	std	Y+24, r17	; 0x18
    7e84:	da 8e       	std	Y+26, r13	; 0x1a
    7e86:	c9 8e       	std	Y+25, r12	; 0x19
    7e88:	bc 8e       	std	Y+28, r11	; 0x1c
    7e8a:	ab 8e       	std	Y+27, r10	; 0x1b
    7e8c:	9e 8e       	std	Y+30, r9	; 0x1e
    7e8e:	8d 8e       	std	Y+29, r8	; 0x1d
	float radLat = DegreesToRad(latitudeDegrees);
    7e90:	8d 85       	ldd	r24, Y+13	; 0x0d
    7e92:	9e 85       	ldd	r25, Y+14	; 0x0e
    7e94:	af 85       	ldd	r26, Y+15	; 0x0f
    7e96:	b8 89       	ldd	r27, Y+16	; 0x10
    7e98:	bc 01       	movw	r22, r24
    7e9a:	cd 01       	movw	r24, r26
    7e9c:	0e 94 54 3d 	call	0x7aa8	; 0x7aa8 <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    7ea0:	dc 01       	movw	r26, r24
    7ea2:	cb 01       	movw	r24, r22
    7ea4:	89 83       	std	Y+1, r24	; 0x01
    7ea6:	9a 83       	std	Y+2, r25	; 0x02
    7ea8:	ab 83       	std	Y+3, r26	; 0x03
    7eaa:	bc 83       	std	Y+4, r27	; 0x04
	float radLong = DegreesToRad(longitudeDegrees);
    7eac:	89 89       	ldd	r24, Y+17	; 0x11
    7eae:	9a 89       	ldd	r25, Y+18	; 0x12
    7eb0:	ab 89       	ldd	r26, Y+19	; 0x13
    7eb2:	bc 89       	ldd	r27, Y+20	; 0x14
    7eb4:	bc 01       	movw	r22, r24
    7eb6:	cd 01       	movw	r24, r26
    7eb8:	0e 94 54 3d 	call	0x7aa8	; 0x7aa8 <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    7ebc:	dc 01       	movw	r26, r24
    7ebe:	cb 01       	movw	r24, r22
    7ec0:	8d 83       	std	Y+5, r24	; 0x05
    7ec2:	9e 83       	std	Y+6, r25	; 0x06
    7ec4:	af 83       	std	Y+7, r26	; 0x07
    7ec6:	b8 87       	std	Y+8, r27	; 0x08
	

	float Ne = calculateNe(E, radLat);
    7ec8:	89 81       	ldd	r24, Y+1	; 0x01
    7eca:	9a 81       	ldd	r25, Y+2	; 0x02
    7ecc:	ab 81       	ldd	r26, Y+3	; 0x03
    7ece:	bc 81       	ldd	r27, Y+4	; 0x04
    7ed0:	9c 01       	movw	r18, r24
    7ed2:	ad 01       	movw	r20, r26
    7ed4:	62 ed       	ldi	r22, 0xD2	; 210
    7ed6:	70 e9       	ldi	r23, 0x90	; 144
    7ed8:	87 ea       	ldi	r24, 0xA7	; 167
    7eda:	9d e3       	ldi	r25, 0x3D	; 61
    7edc:	0e 94 b9 3e 	call	0x7d72	; 0x7d72 <_ZN10helicopter4util14CoordinateUtil11calculateNeEff>
    7ee0:	dc 01       	movw	r26, r24
    7ee2:	cb 01       	movw	r24, r22
    7ee4:	89 87       	std	Y+9, r24	; 0x09
    7ee6:	9a 87       	std	Y+10, r25	; 0x0a
    7ee8:	ab 87       	std	Y+11, r26	; 0x0b
    7eea:	bc 87       	std	Y+12, r27	; 0x0c
	
	ecefX = (Ne + altitudeFeetAgl) * cos(radLat) * cos(radLong);
    7eec:	2d 89       	ldd	r18, Y+21	; 0x15
    7eee:	3e 89       	ldd	r19, Y+22	; 0x16
    7ef0:	4f 89       	ldd	r20, Y+23	; 0x17
    7ef2:	58 8d       	ldd	r21, Y+24	; 0x18
    7ef4:	69 85       	ldd	r22, Y+9	; 0x09
    7ef6:	7a 85       	ldd	r23, Y+10	; 0x0a
    7ef8:	8b 85       	ldd	r24, Y+11	; 0x0b
    7efa:	9c 85       	ldd	r25, Y+12	; 0x0c
    7efc:	0e 94 09 43 	call	0x8612	; 0x8612 <__addsf3>
    7f00:	dc 01       	movw	r26, r24
    7f02:	cb 01       	movw	r24, r22
    7f04:	6c 01       	movw	r12, r24
    7f06:	7d 01       	movw	r14, r26
    7f08:	89 81       	ldd	r24, Y+1	; 0x01
    7f0a:	9a 81       	ldd	r25, Y+2	; 0x02
    7f0c:	ab 81       	ldd	r26, Y+3	; 0x03
    7f0e:	bc 81       	ldd	r27, Y+4	; 0x04
    7f10:	bc 01       	movw	r22, r24
    7f12:	cd 01       	movw	r24, r26
    7f14:	0e 94 71 43 	call	0x86e2	; 0x86e2 <cos>
    7f18:	dc 01       	movw	r26, r24
    7f1a:	cb 01       	movw	r24, r22
    7f1c:	9c 01       	movw	r18, r24
    7f1e:	ad 01       	movw	r20, r26
    7f20:	c7 01       	movw	r24, r14
    7f22:	b6 01       	movw	r22, r12
    7f24:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    7f28:	dc 01       	movw	r26, r24
    7f2a:	cb 01       	movw	r24, r22
    7f2c:	6c 01       	movw	r12, r24
    7f2e:	7d 01       	movw	r14, r26
    7f30:	8d 81       	ldd	r24, Y+5	; 0x05
    7f32:	9e 81       	ldd	r25, Y+6	; 0x06
    7f34:	af 81       	ldd	r26, Y+7	; 0x07
    7f36:	b8 85       	ldd	r27, Y+8	; 0x08
    7f38:	bc 01       	movw	r22, r24
    7f3a:	cd 01       	movw	r24, r26
    7f3c:	0e 94 71 43 	call	0x86e2	; 0x86e2 <cos>
    7f40:	dc 01       	movw	r26, r24
    7f42:	cb 01       	movw	r24, r22
    7f44:	9c 01       	movw	r18, r24
    7f46:	ad 01       	movw	r20, r26
    7f48:	c7 01       	movw	r24, r14
    7f4a:	b6 01       	movw	r22, r12
    7f4c:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    7f50:	dc 01       	movw	r26, r24
    7f52:	cb 01       	movw	r24, r22
    7f54:	29 8d       	ldd	r18, Y+25	; 0x19
    7f56:	3a 8d       	ldd	r19, Y+26	; 0x1a
    7f58:	f9 01       	movw	r30, r18
    7f5a:	80 83       	st	Z, r24
    7f5c:	91 83       	std	Z+1, r25	; 0x01
    7f5e:	a2 83       	std	Z+2, r26	; 0x02
    7f60:	b3 83       	std	Z+3, r27	; 0x03
	ecefY = (Ne + altitudeFeetAgl) * cos(radLat) * sin(radLong);
    7f62:	2d 89       	ldd	r18, Y+21	; 0x15
    7f64:	3e 89       	ldd	r19, Y+22	; 0x16
    7f66:	4f 89       	ldd	r20, Y+23	; 0x17
    7f68:	58 8d       	ldd	r21, Y+24	; 0x18
    7f6a:	69 85       	ldd	r22, Y+9	; 0x09
    7f6c:	7a 85       	ldd	r23, Y+10	; 0x0a
    7f6e:	8b 85       	ldd	r24, Y+11	; 0x0b
    7f70:	9c 85       	ldd	r25, Y+12	; 0x0c
    7f72:	0e 94 09 43 	call	0x8612	; 0x8612 <__addsf3>
    7f76:	dc 01       	movw	r26, r24
    7f78:	cb 01       	movw	r24, r22
    7f7a:	6c 01       	movw	r12, r24
    7f7c:	7d 01       	movw	r14, r26
    7f7e:	89 81       	ldd	r24, Y+1	; 0x01
    7f80:	9a 81       	ldd	r25, Y+2	; 0x02
    7f82:	ab 81       	ldd	r26, Y+3	; 0x03
    7f84:	bc 81       	ldd	r27, Y+4	; 0x04
    7f86:	bc 01       	movw	r22, r24
    7f88:	cd 01       	movw	r24, r26
    7f8a:	0e 94 71 43 	call	0x86e2	; 0x86e2 <cos>
    7f8e:	dc 01       	movw	r26, r24
    7f90:	cb 01       	movw	r24, r22
    7f92:	9c 01       	movw	r18, r24
    7f94:	ad 01       	movw	r20, r26
    7f96:	c7 01       	movw	r24, r14
    7f98:	b6 01       	movw	r22, r12
    7f9a:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    7f9e:	dc 01       	movw	r26, r24
    7fa0:	cb 01       	movw	r24, r22
    7fa2:	6c 01       	movw	r12, r24
    7fa4:	7d 01       	movw	r14, r26
    7fa6:	8d 81       	ldd	r24, Y+5	; 0x05
    7fa8:	9e 81       	ldd	r25, Y+6	; 0x06
    7faa:	af 81       	ldd	r26, Y+7	; 0x07
    7fac:	b8 85       	ldd	r27, Y+8	; 0x08
    7fae:	bc 01       	movw	r22, r24
    7fb0:	cd 01       	movw	r24, r26
    7fb2:	0e 94 fe 45 	call	0x8bfc	; 0x8bfc <sin>
    7fb6:	dc 01       	movw	r26, r24
    7fb8:	cb 01       	movw	r24, r22
    7fba:	9c 01       	movw	r18, r24
    7fbc:	ad 01       	movw	r20, r26
    7fbe:	c7 01       	movw	r24, r14
    7fc0:	b6 01       	movw	r22, r12
    7fc2:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    7fc6:	dc 01       	movw	r26, r24
    7fc8:	cb 01       	movw	r24, r22
    7fca:	2b 8d       	ldd	r18, Y+27	; 0x1b
    7fcc:	3c 8d       	ldd	r19, Y+28	; 0x1c
    7fce:	f9 01       	movw	r30, r18
    7fd0:	80 83       	st	Z, r24
    7fd2:	91 83       	std	Z+1, r25	; 0x01
    7fd4:	a2 83       	std	Z+2, r26	; 0x02
    7fd6:	b3 83       	std	Z+3, r27	; 0x03
	ecefZ = ((Ne * (1 - pow(E, 2))) + altitudeFeetAgl) * sin(radLat);
    7fd8:	27 e4       	ldi	r18, 0x47	; 71
    7fda:	39 e4       	ldi	r19, 0x49	; 73
    7fdc:	4e e7       	ldi	r20, 0x7E	; 126
    7fde:	5f e3       	ldi	r21, 0x3F	; 63
    7fe0:	69 85       	ldd	r22, Y+9	; 0x09
    7fe2:	7a 85       	ldd	r23, Y+10	; 0x0a
    7fe4:	8b 85       	ldd	r24, Y+11	; 0x0b
    7fe6:	9c 85       	ldd	r25, Y+12	; 0x0c
    7fe8:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    7fec:	dc 01       	movw	r26, r24
    7fee:	cb 01       	movw	r24, r22
    7ff0:	2d 89       	ldd	r18, Y+21	; 0x15
    7ff2:	3e 89       	ldd	r19, Y+22	; 0x16
    7ff4:	4f 89       	ldd	r20, Y+23	; 0x17
    7ff6:	58 8d       	ldd	r21, Y+24	; 0x18
    7ff8:	bc 01       	movw	r22, r24
    7ffa:	cd 01       	movw	r24, r26
    7ffc:	0e 94 09 43 	call	0x8612	; 0x8612 <__addsf3>
    8000:	dc 01       	movw	r26, r24
    8002:	cb 01       	movw	r24, r22
    8004:	6c 01       	movw	r12, r24
    8006:	7d 01       	movw	r14, r26
    8008:	89 81       	ldd	r24, Y+1	; 0x01
    800a:	9a 81       	ldd	r25, Y+2	; 0x02
    800c:	ab 81       	ldd	r26, Y+3	; 0x03
    800e:	bc 81       	ldd	r27, Y+4	; 0x04
    8010:	bc 01       	movw	r22, r24
    8012:	cd 01       	movw	r24, r26
    8014:	0e 94 fe 45 	call	0x8bfc	; 0x8bfc <sin>
    8018:	dc 01       	movw	r26, r24
    801a:	cb 01       	movw	r24, r22
    801c:	9c 01       	movw	r18, r24
    801e:	ad 01       	movw	r20, r26
    8020:	c7 01       	movw	r24, r14
    8022:	b6 01       	movw	r22, r12
    8024:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    8028:	dc 01       	movw	r26, r24
    802a:	cb 01       	movw	r24, r22
    802c:	2d 8d       	ldd	r18, Y+29	; 0x1d
    802e:	3e 8d       	ldd	r19, Y+30	; 0x1e
    8030:	f9 01       	movw	r30, r18
    8032:	80 83       	st	Z, r24
    8034:	91 83       	std	Z+1, r25	; 0x01
    8036:	a2 83       	std	Z+2, r26	; 0x02
    8038:	b3 83       	std	Z+3, r27	; 0x03
}
    803a:	6e 96       	adiw	r28, 0x1e	; 30
    803c:	0f b6       	in	r0, 0x3f	; 63
    803e:	f8 94       	cli
    8040:	de bf       	out	0x3e, r29	; 62
    8042:	0f be       	out	0x3f, r0	; 63
    8044:	cd bf       	out	0x3d, r28	; 61
    8046:	df 91       	pop	r29
    8048:	cf 91       	pop	r28
    804a:	1f 91       	pop	r17
    804c:	0f 91       	pop	r16
    804e:	ff 90       	pop	r15
    8050:	ef 90       	pop	r14
    8052:	df 90       	pop	r13
    8054:	cf 90       	pop	r12
    8056:	bf 90       	pop	r11
    8058:	af 90       	pop	r10
    805a:	9f 90       	pop	r9
    805c:	8f 90       	pop	r8
    805e:	08 95       	ret

00008060 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_>:

void CoordinateUtil::ConvertFromECEFToLocalNED(float ecefReferenceX, float ecefReferenceY, float ecefReferenceZ,
	float ecefX, float ecefY, float ecefZ, float ecefToLocalNEDRotationMatrix[][3],
	float &localNEDX, float &localNEDY, float &localNEDZ)
{
    8060:	af 92       	push	r10
    8062:	bf 92       	push	r11
    8064:	cf 92       	push	r12
    8066:	df 92       	push	r13
    8068:	ef 92       	push	r14
    806a:	ff 92       	push	r15
    806c:	0f 93       	push	r16
    806e:	1f 93       	push	r17
    8070:	cf 93       	push	r28
    8072:	df 93       	push	r29
    8074:	cd b7       	in	r28, 0x3d	; 61
    8076:	de b7       	in	r29, 0x3e	; 62
    8078:	e8 97       	sbiw	r28, 0x38	; 56
    807a:	0f b6       	in	r0, 0x3f	; 63
    807c:	f8 94       	cli
    807e:	de bf       	out	0x3e, r29	; 62
    8080:	0f be       	out	0x3f, r0	; 63
    8082:	cd bf       	out	0x3d, r28	; 61
    8084:	69 a7       	std	Y+41, r22	; 0x29
    8086:	7a a7       	std	Y+42, r23	; 0x2a
    8088:	8b a7       	std	Y+43, r24	; 0x2b
    808a:	9c a7       	std	Y+44, r25	; 0x2c
    808c:	2d a7       	std	Y+45, r18	; 0x2d
    808e:	3e a7       	std	Y+46, r19	; 0x2e
    8090:	4f a7       	std	Y+47, r20	; 0x2f
    8092:	58 ab       	std	Y+48, r21	; 0x30
    8094:	e9 aa       	std	Y+49, r14	; 0x31
    8096:	fa aa       	std	Y+50, r15	; 0x32
    8098:	0b ab       	std	Y+51, r16	; 0x33
    809a:	1c ab       	std	Y+52, r17	; 0x34
    809c:	ad aa       	std	Y+53, r10	; 0x35
    809e:	be aa       	std	Y+54, r11	; 0x36
    80a0:	cf aa       	std	Y+55, r12	; 0x37
    80a2:	d8 ae       	std	Y+56, r13	; 0x38
	//Get the current helicopters position relative to it's starting point in ecef.
	float differenceXECEF = ecefX - ecefReferenceX;
    80a4:	29 a5       	ldd	r18, Y+41	; 0x29
    80a6:	3a a5       	ldd	r19, Y+42	; 0x2a
    80a8:	4b a5       	ldd	r20, Y+43	; 0x2b
    80aa:	5c a5       	ldd	r21, Y+44	; 0x2c
    80ac:	6d a9       	ldd	r22, Y+53	; 0x35
    80ae:	7e a9       	ldd	r23, Y+54	; 0x36
    80b0:	8f a9       	ldd	r24, Y+55	; 0x37
    80b2:	98 ad       	ldd	r25, Y+56	; 0x38
    80b4:	0e 94 08 43 	call	0x8610	; 0x8610 <__subsf3>
    80b8:	dc 01       	movw	r26, r24
    80ba:	cb 01       	movw	r24, r22
    80bc:	8d 83       	std	Y+5, r24	; 0x05
    80be:	9e 83       	std	Y+6, r25	; 0x06
    80c0:	af 83       	std	Y+7, r26	; 0x07
    80c2:	b8 87       	std	Y+8, r27	; 0x08
	float differenceYECEF = ecefY - ecefReferenceY;
    80c4:	2d a5       	ldd	r18, Y+45	; 0x2d
    80c6:	3e a5       	ldd	r19, Y+46	; 0x2e
    80c8:	4f a5       	ldd	r20, Y+47	; 0x2f
    80ca:	58 a9       	ldd	r21, Y+48	; 0x30
    80cc:	2a 96       	adiw	r28, 0x0a	; 10
    80ce:	6c ad       	ldd	r22, Y+60	; 0x3c
    80d0:	7d ad       	ldd	r23, Y+61	; 0x3d
    80d2:	8e ad       	ldd	r24, Y+62	; 0x3e
    80d4:	9f ad       	ldd	r25, Y+63	; 0x3f
    80d6:	2a 97       	sbiw	r28, 0x0a	; 10
    80d8:	0e 94 08 43 	call	0x8610	; 0x8610 <__subsf3>
    80dc:	dc 01       	movw	r26, r24
    80de:	cb 01       	movw	r24, r22
    80e0:	89 87       	std	Y+9, r24	; 0x09
    80e2:	9a 87       	std	Y+10, r25	; 0x0a
    80e4:	ab 87       	std	Y+11, r26	; 0x0b
    80e6:	bc 87       	std	Y+12, r27	; 0x0c
	float differenceZECEF = ecefZ - ecefReferenceZ;
    80e8:	29 a9       	ldd	r18, Y+49	; 0x31
    80ea:	3a a9       	ldd	r19, Y+50	; 0x32
    80ec:	4b a9       	ldd	r20, Y+51	; 0x33
    80ee:	5c a9       	ldd	r21, Y+52	; 0x34
    80f0:	2e 96       	adiw	r28, 0x0e	; 14
    80f2:	6c ad       	ldd	r22, Y+60	; 0x3c
    80f4:	7d ad       	ldd	r23, Y+61	; 0x3d
    80f6:	8e ad       	ldd	r24, Y+62	; 0x3e
    80f8:	9f ad       	ldd	r25, Y+63	; 0x3f
    80fa:	2e 97       	sbiw	r28, 0x0e	; 14
    80fc:	0e 94 08 43 	call	0x8610	; 0x8610 <__subsf3>
    8100:	dc 01       	movw	r26, r24
    8102:	cb 01       	movw	r24, r22
    8104:	8d 87       	std	Y+13, r24	; 0x0d
    8106:	9e 87       	std	Y+14, r25	; 0x0e
    8108:	af 87       	std	Y+15, r26	; 0x0f
    810a:	b8 8b       	std	Y+16, r27	; 0x10
	
	float rotatedMatrix[3] = {};
    810c:	2c e0       	ldi	r18, 0x0C	; 12
    810e:	ce 01       	movw	r24, r28
    8110:	41 96       	adiw	r24, 0x11	; 17
    8112:	fc 01       	movw	r30, r24
    8114:	32 2f       	mov	r19, r18
    8116:	11 92       	st	Z+, r1
    8118:	3a 95       	dec	r19
    811a:	e9 f7       	brne	.-6      	; 0x8116 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0xb6>
	float positionMatrix[3] = {differenceXECEF, differenceYECEF, differenceZECEF};
    811c:	8d 81       	ldd	r24, Y+5	; 0x05
    811e:	9e 81       	ldd	r25, Y+6	; 0x06
    8120:	af 81       	ldd	r26, Y+7	; 0x07
    8122:	b8 85       	ldd	r27, Y+8	; 0x08
    8124:	8d 8f       	std	Y+29, r24	; 0x1d
    8126:	9e 8f       	std	Y+30, r25	; 0x1e
    8128:	af 8f       	std	Y+31, r26	; 0x1f
    812a:	b8 a3       	std	Y+32, r27	; 0x20
    812c:	89 85       	ldd	r24, Y+9	; 0x09
    812e:	9a 85       	ldd	r25, Y+10	; 0x0a
    8130:	ab 85       	ldd	r26, Y+11	; 0x0b
    8132:	bc 85       	ldd	r27, Y+12	; 0x0c
    8134:	89 a3       	std	Y+33, r24	; 0x21
    8136:	9a a3       	std	Y+34, r25	; 0x22
    8138:	ab a3       	std	Y+35, r26	; 0x23
    813a:	bc a3       	std	Y+36, r27	; 0x24
    813c:	8d 85       	ldd	r24, Y+13	; 0x0d
    813e:	9e 85       	ldd	r25, Y+14	; 0x0e
    8140:	af 85       	ldd	r26, Y+15	; 0x0f
    8142:	b8 89       	ldd	r27, Y+16	; 0x10
    8144:	8d a3       	std	Y+37, r24	; 0x25
    8146:	9e a3       	std	Y+38, r25	; 0x26
    8148:	af a3       	std	Y+39, r26	; 0x27
    814a:	b8 a7       	std	Y+40, r27	; 0x28
	
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
    814c:	1a 82       	std	Y+2, r1	; 0x02
    814e:	19 82       	std	Y+1, r1	; 0x01
    8150:	78 c0       	rjmp	.+240    	; 0x8242 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1e2>
	{
		//iterate through the columns of the rotation matrix
		for (int j = 0; j < 3; j++)
    8152:	1c 82       	std	Y+4, r1	; 0x04
    8154:	1b 82       	std	Y+3, r1	; 0x03
    8156:	66 c0       	rjmp	.+204    	; 0x8224 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1c4>
		{
			rotatedMatrix[i] += ecefToLocalNEDRotationMatrix[i] [j] * positionMatrix[j];
    8158:	89 81       	ldd	r24, Y+1	; 0x01
    815a:	9a 81       	ldd	r25, Y+2	; 0x02
    815c:	88 0f       	add	r24, r24
    815e:	99 1f       	adc	r25, r25
    8160:	88 0f       	add	r24, r24
    8162:	99 1f       	adc	r25, r25
    8164:	9e 01       	movw	r18, r28
    8166:	2f 5f       	subi	r18, 0xFF	; 255
    8168:	3f 4f       	sbci	r19, 0xFF	; 255
    816a:	82 0f       	add	r24, r18
    816c:	93 1f       	adc	r25, r19
    816e:	40 96       	adiw	r24, 0x10	; 16
    8170:	fc 01       	movw	r30, r24
    8172:	c0 80       	ld	r12, Z
    8174:	d1 80       	ldd	r13, Z+1	; 0x01
    8176:	e2 80       	ldd	r14, Z+2	; 0x02
    8178:	f3 80       	ldd	r15, Z+3	; 0x03
    817a:	29 81       	ldd	r18, Y+1	; 0x01
    817c:	3a 81       	ldd	r19, Y+2	; 0x02
    817e:	c9 01       	movw	r24, r18
    8180:	88 0f       	add	r24, r24
    8182:	99 1f       	adc	r25, r25
    8184:	82 0f       	add	r24, r18
    8186:	93 1f       	adc	r25, r19
    8188:	88 0f       	add	r24, r24
    818a:	99 1f       	adc	r25, r25
    818c:	88 0f       	add	r24, r24
    818e:	99 1f       	adc	r25, r25
    8190:	60 96       	adiw	r28, 0x10	; 16
    8192:	2e ad       	ldd	r18, Y+62	; 0x3e
    8194:	3f ad       	ldd	r19, Y+63	; 0x3f
    8196:	60 97       	sbiw	r28, 0x10	; 16
    8198:	28 0f       	add	r18, r24
    819a:	39 1f       	adc	r19, r25
    819c:	8b 81       	ldd	r24, Y+3	; 0x03
    819e:	9c 81       	ldd	r25, Y+4	; 0x04
    81a0:	88 0f       	add	r24, r24
    81a2:	99 1f       	adc	r25, r25
    81a4:	88 0f       	add	r24, r24
    81a6:	99 1f       	adc	r25, r25
    81a8:	82 0f       	add	r24, r18
    81aa:	93 1f       	adc	r25, r19
    81ac:	fc 01       	movw	r30, r24
    81ae:	80 81       	ld	r24, Z
    81b0:	91 81       	ldd	r25, Z+1	; 0x01
    81b2:	a2 81       	ldd	r26, Z+2	; 0x02
    81b4:	b3 81       	ldd	r27, Z+3	; 0x03
    81b6:	2b 81       	ldd	r18, Y+3	; 0x03
    81b8:	3c 81       	ldd	r19, Y+4	; 0x04
    81ba:	22 0f       	add	r18, r18
    81bc:	33 1f       	adc	r19, r19
    81be:	22 0f       	add	r18, r18
    81c0:	33 1f       	adc	r19, r19
    81c2:	ae 01       	movw	r20, r28
    81c4:	4f 5f       	subi	r20, 0xFF	; 255
    81c6:	5f 4f       	sbci	r21, 0xFF	; 255
    81c8:	24 0f       	add	r18, r20
    81ca:	35 1f       	adc	r19, r21
    81cc:	24 5e       	subi	r18, 0xE4	; 228
    81ce:	3f 4f       	sbci	r19, 0xFF	; 255
    81d0:	f9 01       	movw	r30, r18
    81d2:	20 81       	ld	r18, Z
    81d4:	31 81       	ldd	r19, Z+1	; 0x01
    81d6:	42 81       	ldd	r20, Z+2	; 0x02
    81d8:	53 81       	ldd	r21, Z+3	; 0x03
    81da:	bc 01       	movw	r22, r24
    81dc:	cd 01       	movw	r24, r26
    81de:	0e 94 4f 45 	call	0x8a9e	; 0x8a9e <__mulsf3>
    81e2:	dc 01       	movw	r26, r24
    81e4:	cb 01       	movw	r24, r22
    81e6:	9c 01       	movw	r18, r24
    81e8:	ad 01       	movw	r20, r26
    81ea:	c7 01       	movw	r24, r14
    81ec:	b6 01       	movw	r22, r12
    81ee:	0e 94 09 43 	call	0x8612	; 0x8612 <__addsf3>
    81f2:	dc 01       	movw	r26, r24
    81f4:	cb 01       	movw	r24, r22
    81f6:	29 81       	ldd	r18, Y+1	; 0x01
    81f8:	3a 81       	ldd	r19, Y+2	; 0x02
    81fa:	22 0f       	add	r18, r18
    81fc:	33 1f       	adc	r19, r19
    81fe:	22 0f       	add	r18, r18
    8200:	33 1f       	adc	r19, r19
    8202:	ae 01       	movw	r20, r28
    8204:	4f 5f       	subi	r20, 0xFF	; 255
    8206:	5f 4f       	sbci	r21, 0xFF	; 255
    8208:	24 0f       	add	r18, r20
    820a:	35 1f       	adc	r19, r21
    820c:	20 5f       	subi	r18, 0xF0	; 240
    820e:	3f 4f       	sbci	r19, 0xFF	; 255
    8210:	f9 01       	movw	r30, r18
    8212:	80 83       	st	Z, r24
    8214:	91 83       	std	Z+1, r25	; 0x01
    8216:	a2 83       	std	Z+2, r26	; 0x02
    8218:	b3 83       	std	Z+3, r27	; 0x03
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
	{
		//iterate through the columns of the rotation matrix
		for (int j = 0; j < 3; j++)
    821a:	8b 81       	ldd	r24, Y+3	; 0x03
    821c:	9c 81       	ldd	r25, Y+4	; 0x04
    821e:	01 96       	adiw	r24, 0x01	; 1
    8220:	9c 83       	std	Y+4, r25	; 0x04
    8222:	8b 83       	std	Y+3, r24	; 0x03
    8224:	21 e0       	ldi	r18, 0x01	; 1
    8226:	8b 81       	ldd	r24, Y+3	; 0x03
    8228:	9c 81       	ldd	r25, Y+4	; 0x04
    822a:	83 30       	cpi	r24, 0x03	; 3
    822c:	91 05       	cpc	r25, r1
    822e:	0c f0       	brlt	.+2      	; 0x8232 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1d2>
    8230:	20 e0       	ldi	r18, 0x00	; 0
    8232:	22 23       	and	r18, r18
    8234:	09 f0       	breq	.+2      	; 0x8238 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1d8>
    8236:	90 cf       	rjmp	.-224    	; 0x8158 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0xf8>
	float rotatedMatrix[3] = {};
	float positionMatrix[3] = {differenceXECEF, differenceYECEF, differenceZECEF};
	
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
    8238:	89 81       	ldd	r24, Y+1	; 0x01
    823a:	9a 81       	ldd	r25, Y+2	; 0x02
    823c:	01 96       	adiw	r24, 0x01	; 1
    823e:	9a 83       	std	Y+2, r25	; 0x02
    8240:	89 83       	std	Y+1, r24	; 0x01
    8242:	21 e0       	ldi	r18, 0x01	; 1
    8244:	89 81       	ldd	r24, Y+1	; 0x01
    8246:	9a 81       	ldd	r25, Y+2	; 0x02
    8248:	83 30       	cpi	r24, 0x03	; 3
    824a:	91 05       	cpc	r25, r1
    824c:	0c f0       	brlt	.+2      	; 0x8250 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1f0>
    824e:	20 e0       	ldi	r18, 0x00	; 0
    8250:	22 23       	and	r18, r18
    8252:	09 f0       	breq	.+2      	; 0x8256 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1f6>
    8254:	7e cf       	rjmp	.-260    	; 0x8152 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0xf2>
		{
			rotatedMatrix[i] += ecefToLocalNEDRotationMatrix[i] [j] * positionMatrix[j];
		}
	}
	
	localNEDX = rotatedMatrix[0];
    8256:	89 89       	ldd	r24, Y+17	; 0x11
    8258:	9a 89       	ldd	r25, Y+18	; 0x12
    825a:	ab 89       	ldd	r26, Y+19	; 0x13
    825c:	bc 89       	ldd	r27, Y+20	; 0x14
    825e:	62 96       	adiw	r28, 0x12	; 18
    8260:	2e ad       	ldd	r18, Y+62	; 0x3e
    8262:	3f ad       	ldd	r19, Y+63	; 0x3f
    8264:	62 97       	sbiw	r28, 0x12	; 18
    8266:	f9 01       	movw	r30, r18
    8268:	80 83       	st	Z, r24
    826a:	91 83       	std	Z+1, r25	; 0x01
    826c:	a2 83       	std	Z+2, r26	; 0x02
    826e:	b3 83       	std	Z+3, r27	; 0x03
	localNEDY = rotatedMatrix[1];
    8270:	8d 89       	ldd	r24, Y+21	; 0x15
    8272:	9e 89       	ldd	r25, Y+22	; 0x16
    8274:	af 89       	ldd	r26, Y+23	; 0x17
    8276:	b8 8d       	ldd	r27, Y+24	; 0x18
    8278:	64 96       	adiw	r28, 0x14	; 20
    827a:	2e ad       	ldd	r18, Y+62	; 0x3e
    827c:	3f ad       	ldd	r19, Y+63	; 0x3f
    827e:	64 97       	sbiw	r28, 0x14	; 20
    8280:	f9 01       	movw	r30, r18
    8282:	80 83       	st	Z, r24
    8284:	91 83       	std	Z+1, r25	; 0x01
    8286:	a2 83       	std	Z+2, r26	; 0x02
    8288:	b3 83       	std	Z+3, r27	; 0x03
	localNEDZ = rotatedMatrix[2];
    828a:	89 8d       	ldd	r24, Y+25	; 0x19
    828c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    828e:	ab 8d       	ldd	r26, Y+27	; 0x1b
    8290:	bc 8d       	ldd	r27, Y+28	; 0x1c
    8292:	66 96       	adiw	r28, 0x16	; 22
    8294:	2e ad       	ldd	r18, Y+62	; 0x3e
    8296:	3f ad       	ldd	r19, Y+63	; 0x3f
    8298:	66 97       	sbiw	r28, 0x16	; 22
    829a:	f9 01       	movw	r30, r18
    829c:	80 83       	st	Z, r24
    829e:	91 83       	std	Z+1, r25	; 0x01
    82a0:	a2 83       	std	Z+2, r26	; 0x02
    82a2:	b3 83       	std	Z+3, r27	; 0x03
}
    82a4:	e8 96       	adiw	r28, 0x38	; 56
    82a6:	0f b6       	in	r0, 0x3f	; 63
    82a8:	f8 94       	cli
    82aa:	de bf       	out	0x3e, r29	; 62
    82ac:	0f be       	out	0x3f, r0	; 63
    82ae:	cd bf       	out	0x3d, r28	; 61
    82b0:	df 91       	pop	r29
    82b2:	cf 91       	pop	r28
    82b4:	1f 91       	pop	r17
    82b6:	0f 91       	pop	r16
    82b8:	ff 90       	pop	r15
    82ba:	ef 90       	pop	r14
    82bc:	df 90       	pop	r13
    82be:	cf 90       	pop	r12
    82c0:	bf 90       	pop	r11
    82c2:	af 90       	pop	r10
    82c4:	08 95       	ret

000082c6 <_ZN10helicopter4util14CoordinateUtil29ConvertFromGeodedicToLocalNEDEffffffPA3_fRfS4_S4_>:

void CoordinateUtil::ConvertFromGeodedicToLocalNED(
	float geodedicLatitude, float geodedicLongitude, float altitudeFeetAgl,
	float ecefReferenceX, float ecefReferenceY, float ecefReferenceZ, float ecefToLocalNEDRotationMatrix[][3],
	float &localNEDX,float &localNEDY,float &localNEDZ)
{
    82c6:	2f 92       	push	r2
    82c8:	3f 92       	push	r3
    82ca:	4f 92       	push	r4
    82cc:	5f 92       	push	r5
    82ce:	6f 92       	push	r6
    82d0:	7f 92       	push	r7
    82d2:	8f 92       	push	r8
    82d4:	9f 92       	push	r9
    82d6:	af 92       	push	r10
    82d8:	bf 92       	push	r11
    82da:	cf 92       	push	r12
    82dc:	df 92       	push	r13
    82de:	ef 92       	push	r14
    82e0:	ff 92       	push	r15
    82e2:	0f 93       	push	r16
    82e4:	1f 93       	push	r17
    82e6:	cf 93       	push	r28
    82e8:	df 93       	push	r29
    82ea:	cd b7       	in	r28, 0x3d	; 61
    82ec:	de b7       	in	r29, 0x3e	; 62
    82ee:	6c 97       	sbiw	r28, 0x1c	; 28
    82f0:	0f b6       	in	r0, 0x3f	; 63
    82f2:	f8 94       	cli
    82f4:	de bf       	out	0x3e, r29	; 62
    82f6:	0f be       	out	0x3f, r0	; 63
    82f8:	cd bf       	out	0x3d, r28	; 61
    82fa:	6d 87       	std	Y+13, r22	; 0x0d
    82fc:	7e 87       	std	Y+14, r23	; 0x0e
    82fe:	8f 87       	std	Y+15, r24	; 0x0f
    8300:	98 8b       	std	Y+16, r25	; 0x10
    8302:	29 8b       	std	Y+17, r18	; 0x11
    8304:	3a 8b       	std	Y+18, r19	; 0x12
    8306:	4b 8b       	std	Y+19, r20	; 0x13
    8308:	5c 8b       	std	Y+20, r21	; 0x14
    830a:	ed 8a       	std	Y+21, r14	; 0x15
    830c:	fe 8a       	std	Y+22, r15	; 0x16
    830e:	0f 8b       	std	Y+23, r16	; 0x17
    8310:	18 8f       	std	Y+24, r17	; 0x18
    8312:	a9 8e       	std	Y+25, r10	; 0x19
    8314:	ba 8e       	std	Y+26, r11	; 0x1a
    8316:	cb 8e       	std	Y+27, r12	; 0x1b
    8318:	dc 8e       	std	Y+28, r13	; 0x1c
	float ecefX = 0;
    831a:	19 82       	std	Y+1, r1	; 0x01
    831c:	1a 82       	std	Y+2, r1	; 0x02
    831e:	1b 82       	std	Y+3, r1	; 0x03
    8320:	1c 82       	std	Y+4, r1	; 0x04
	float ecefY = 0;
    8322:	1d 82       	std	Y+5, r1	; 0x05
    8324:	1e 82       	std	Y+6, r1	; 0x06
    8326:	1f 82       	std	Y+7, r1	; 0x07
    8328:	18 86       	std	Y+8, r1	; 0x08
	float ecefZ = 0;
    832a:	19 86       	std	Y+9, r1	; 0x09
    832c:	1a 86       	std	Y+10, r1	; 0x0a
    832e:	1b 86       	std	Y+11, r1	; 0x0b
    8330:	1c 86       	std	Y+12, r1	; 0x0c
	
	ConvertFromGeodeticToECEF(geodedicLatitude, geodedicLongitude, altitudeFeetAgl, ecefX, ecefY, ecefZ);
    8332:	fe 01       	movw	r30, r28
    8334:	39 96       	adiw	r30, 0x09	; 9
    8336:	be 01       	movw	r22, r28
    8338:	6b 5f       	subi	r22, 0xFB	; 251
    833a:	7f 4f       	sbci	r23, 0xFF	; 255
    833c:	ed 88       	ldd	r14, Y+21	; 0x15
    833e:	fe 88       	ldd	r15, Y+22	; 0x16
    8340:	0f 89       	ldd	r16, Y+23	; 0x17
    8342:	18 8d       	ldd	r17, Y+24	; 0x18
    8344:	29 89       	ldd	r18, Y+17	; 0x11
    8346:	3a 89       	ldd	r19, Y+18	; 0x12
    8348:	4b 89       	ldd	r20, Y+19	; 0x13
    834a:	5c 89       	ldd	r21, Y+20	; 0x14
    834c:	8d 85       	ldd	r24, Y+13	; 0x0d
    834e:	9e 85       	ldd	r25, Y+14	; 0x0e
    8350:	af 85       	ldd	r26, Y+15	; 0x0f
    8352:	b8 89       	ldd	r27, Y+16	; 0x10
    8354:	4f 01       	movw	r8, r30
    8356:	5b 01       	movw	r10, r22
    8358:	be 01       	movw	r22, r28
    835a:	6f 5f       	subi	r22, 0xFF	; 255
    835c:	7f 4f       	sbci	r23, 0xFF	; 255
    835e:	6b 01       	movw	r12, r22
    8360:	bc 01       	movw	r22, r24
    8362:	cd 01       	movw	r24, r26
    8364:	0e 94 22 3f 	call	0x7e44	; 0x7e44 <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEfffRfS2_S2_>
	
	ConvertFromECEFToLocalNED(ecefReferenceX, ecefReferenceY, ecefReferenceZ,
		ecefX, ecefY, ecefZ, ecefToLocalNEDRotationMatrix,
		localNEDX, localNEDY, localNEDZ);
    8368:	29 85       	ldd	r18, Y+9	; 0x09
    836a:	3a 85       	ldd	r19, Y+10	; 0x0a
    836c:	4b 85       	ldd	r20, Y+11	; 0x0b
    836e:	5c 85       	ldd	r21, Y+12	; 0x0c
    8370:	8d 81       	ldd	r24, Y+5	; 0x05
    8372:	9e 81       	ldd	r25, Y+6	; 0x06
    8374:	af 81       	ldd	r26, Y+7	; 0x07
    8376:	b8 85       	ldd	r27, Y+8	; 0x08
    8378:	a9 80       	ldd	r10, Y+1	; 0x01
    837a:	ba 80       	ldd	r11, Y+2	; 0x02
    837c:	cb 80       	ldd	r12, Y+3	; 0x03
    837e:	dc 80       	ldd	r13, Y+4	; 0x04
    8380:	ee a8       	ldd	r14, Y+54	; 0x36
    8382:	ff a8       	ldd	r15, Y+55	; 0x37
    8384:	08 ad       	ldd	r16, Y+56	; 0x38
    8386:	19 ad       	ldd	r17, Y+57	; 0x39
    8388:	2a a8       	ldd	r2, Y+50	; 0x32
    838a:	3b a8       	ldd	r3, Y+51	; 0x33
    838c:	4c a8       	ldd	r4, Y+52	; 0x34
    838e:	5d a8       	ldd	r5, Y+53	; 0x35
    8390:	69 8c       	ldd	r6, Y+25	; 0x19
    8392:	7a 8c       	ldd	r7, Y+26	; 0x1a
    8394:	8b 8c       	ldd	r8, Y+27	; 0x1b
    8396:	9c 8c       	ldd	r9, Y+28	; 0x1c
    8398:	22 96       	adiw	r28, 0x02	; 2
    839a:	6f ad       	ldd	r22, Y+63	; 0x3f
    839c:	22 97       	sbiw	r28, 0x02	; 2
    839e:	6f 93       	push	r22
    83a0:	21 96       	adiw	r28, 0x01	; 1
    83a2:	6f ad       	ldd	r22, Y+63	; 0x3f
    83a4:	21 97       	sbiw	r28, 0x01	; 1
    83a6:	6f 93       	push	r22
    83a8:	6f ad       	ldd	r22, Y+63	; 0x3f
    83aa:	6f 93       	push	r22
    83ac:	6e ad       	ldd	r22, Y+62	; 0x3e
    83ae:	6f 93       	push	r22
    83b0:	6d ad       	ldd	r22, Y+61	; 0x3d
    83b2:	6f 93       	push	r22
    83b4:	6c ad       	ldd	r22, Y+60	; 0x3c
    83b6:	6f 93       	push	r22
    83b8:	6b ad       	ldd	r22, Y+59	; 0x3b
    83ba:	6f 93       	push	r22
    83bc:	6a ad       	ldd	r22, Y+58	; 0x3a
    83be:	6f 93       	push	r22
    83c0:	65 2f       	mov	r22, r21
    83c2:	6f 93       	push	r22
    83c4:	64 2f       	mov	r22, r20
    83c6:	6f 93       	push	r22
    83c8:	63 2f       	mov	r22, r19
    83ca:	6f 93       	push	r22
    83cc:	2f 93       	push	r18
    83ce:	2b 2f       	mov	r18, r27
    83d0:	2f 93       	push	r18
    83d2:	2a 2f       	mov	r18, r26
    83d4:	2f 93       	push	r18
    83d6:	29 2f       	mov	r18, r25
    83d8:	2f 93       	push	r18
    83da:	8f 93       	push	r24
    83dc:	a2 01       	movw	r20, r4
    83de:	91 01       	movw	r18, r2
    83e0:	c4 01       	movw	r24, r8
    83e2:	b3 01       	movw	r22, r6
    83e4:	0e 94 30 40 	call	0x8060	; 0x8060 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_>
    83e8:	8d b7       	in	r24, 0x3d	; 61
    83ea:	9e b7       	in	r25, 0x3e	; 62
    83ec:	40 96       	adiw	r24, 0x10	; 16
    83ee:	0f b6       	in	r0, 0x3f	; 63
    83f0:	f8 94       	cli
    83f2:	de bf       	out	0x3e, r29	; 62
    83f4:	0f be       	out	0x3f, r0	; 63
    83f6:	cd bf       	out	0x3d, r28	; 61
    83f8:	6c 96       	adiw	r28, 0x1c	; 28
    83fa:	0f b6       	in	r0, 0x3f	; 63
    83fc:	f8 94       	cli
    83fe:	de bf       	out	0x3e, r29	; 62
    8400:	0f be       	out	0x3f, r0	; 63
    8402:	cd bf       	out	0x3d, r28	; 61
    8404:	df 91       	pop	r29
    8406:	cf 91       	pop	r28
    8408:	1f 91       	pop	r17
    840a:	0f 91       	pop	r16
    840c:	ff 90       	pop	r15
    840e:	ef 90       	pop	r14
    8410:	df 90       	pop	r13
    8412:	cf 90       	pop	r12
    8414:	bf 90       	pop	r11
    8416:	af 90       	pop	r10
    8418:	9f 90       	pop	r9
    841a:	8f 90       	pop	r8
    841c:	7f 90       	pop	r7
    841e:	6f 90       	pop	r6
    8420:	5f 90       	pop	r5
    8422:	4f 90       	pop	r4
    8424:	3f 90       	pop	r3
    8426:	2f 90       	pop	r2
    8428:	08 95       	ret

0000842a <_ZN10helicopter4util5Timer10startTimerEv>:
#include "Timer.h"

using namespace helicopter::util;

void Timer::startTimer()
{
    842a:	0f 93       	push	r16
    842c:	1f 93       	push	r17
    842e:	cf 93       	push	r28
    8430:	df 93       	push	r29
    8432:	00 d0       	rcall	.+0      	; 0x8434 <_ZN10helicopter4util5Timer10startTimerEv+0xa>
    8434:	1f 92       	push	r1
    8436:	cd b7       	in	r28, 0x3d	; 61
    8438:	de b7       	in	r29, 0x3e	; 62
    843a:	9c 83       	std	Y+4, r25	; 0x04
    843c:	8b 83       	std	Y+3, r24	; 0x03
	//stop timer in case it was already started.
	stopTimer();
    843e:	8b 81       	ldd	r24, Y+3	; 0x03
    8440:	9c 81       	ldd	r25, Y+4	; 0x04
    8442:	0e 94 e9 42 	call	0x85d2	; 0x85d2 <_ZN10helicopter4util5Timer9stopTimerEv>
	
	int frequency = 0;
    8446:	1a 82       	std	Y+2, r1	; 0x02
    8448:	19 82       	std	Y+1, r1	; 0x01
	
	if (timeoutMilliseconds > 1000) 
    844a:	8b 81       	ldd	r24, Y+3	; 0x03
    844c:	9c 81       	ldd	r25, Y+4	; 0x04
    844e:	fc 01       	movw	r30, r24
    8450:	86 81       	ldd	r24, Z+6	; 0x06
    8452:	97 81       	ldd	r25, Z+7	; 0x07
    8454:	89 3e       	cpi	r24, 0xE9	; 233
    8456:	f3 e0       	ldi	r31, 0x03	; 3
    8458:	9f 07       	cpc	r25, r31
    845a:	2c f0       	brlt	.+10     	; 0x8466 <_ZN10helicopter4util5Timer10startTimerEv+0x3c>
	{
		frequency = 1;
    845c:	81 e0       	ldi	r24, 0x01	; 1
    845e:	90 e0       	ldi	r25, 0x00	; 0
    8460:	9a 83       	std	Y+2, r25	; 0x02
    8462:	89 83       	std	Y+1, r24	; 0x01
    8464:	0d c0       	rjmp	.+26     	; 0x8480 <_ZN10helicopter4util5Timer10startTimerEv+0x56>
	}else
	{
		frequency = 1000 / timeoutMilliseconds;
    8466:	8b 81       	ldd	r24, Y+3	; 0x03
    8468:	9c 81       	ldd	r25, Y+4	; 0x04
    846a:	fc 01       	movw	r30, r24
    846c:	26 81       	ldd	r18, Z+6	; 0x06
    846e:	37 81       	ldd	r19, Z+7	; 0x07
    8470:	88 ee       	ldi	r24, 0xE8	; 232
    8472:	93 e0       	ldi	r25, 0x03	; 3
    8474:	b9 01       	movw	r22, r18
    8476:	0e 94 69 47 	call	0x8ed2	; 0x8ed2 <__divmodhi4>
    847a:	9b 01       	movw	r18, r22
    847c:	3a 83       	std	Y+2, r19	; 0x02
    847e:	29 83       	std	Y+1, r18	; 0x01
	}

	//setup timer.
	//set the output compare register so that when the Timer Counter (TCNT) matches this output register
	//it indicates that the timer has timed out.
	OCR3A = ((cpuSpeed /  timerPrescaler) / frequency); 
    8480:	08 e9       	ldi	r16, 0x98	; 152
    8482:	10 e0       	ldi	r17, 0x00	; 0
    8484:	8b 81       	ldd	r24, Y+3	; 0x03
    8486:	9c 81       	ldd	r25, Y+4	; 0x04
    8488:	fc 01       	movw	r30, r24
    848a:	80 81       	ld	r24, Z
    848c:	91 81       	ldd	r25, Z+1	; 0x01
    848e:	a2 81       	ldd	r26, Z+2	; 0x02
    8490:	b3 81       	ldd	r27, Z+3	; 0x03
    8492:	2b 81       	ldd	r18, Y+3	; 0x03
    8494:	3c 81       	ldd	r19, Y+4	; 0x04
    8496:	f9 01       	movw	r30, r18
    8498:	24 81       	ldd	r18, Z+4	; 0x04
    849a:	35 81       	ldd	r19, Z+5	; 0x05
    849c:	44 27       	eor	r20, r20
    849e:	37 fd       	sbrc	r19, 7
    84a0:	40 95       	com	r20
    84a2:	54 2f       	mov	r21, r20
    84a4:	bc 01       	movw	r22, r24
    84a6:	cd 01       	movw	r24, r26
    84a8:	0e 94 7d 47 	call	0x8efa	; 0x8efa <__udivmodsi4>
    84ac:	da 01       	movw	r26, r20
    84ae:	c9 01       	movw	r24, r18
    84b0:	29 81       	ldd	r18, Y+1	; 0x01
    84b2:	3a 81       	ldd	r19, Y+2	; 0x02
    84b4:	44 27       	eor	r20, r20
    84b6:	37 fd       	sbrc	r19, 7
    84b8:	40 95       	com	r20
    84ba:	54 2f       	mov	r21, r20
    84bc:	bc 01       	movw	r22, r24
    84be:	cd 01       	movw	r24, r26
    84c0:	0e 94 7d 47 	call	0x8efa	; 0x8efa <__udivmodsi4>
    84c4:	da 01       	movw	r26, r20
    84c6:	c9 01       	movw	r24, r18
    84c8:	f8 01       	movw	r30, r16
    84ca:	91 83       	std	Z+1, r25	; 0x01
    84cc:	80 83       	st	Z, r24
		
	TCCR3B |= (1 << WGM32); //Configure timer 1 for Clear on Timer Compare (CTC) mode so that if there is a match, the TCNT goes back to 0.
    84ce:	81 e9       	ldi	r24, 0x91	; 145
    84d0:	90 e0       	ldi	r25, 0x00	; 0
    84d2:	21 e9       	ldi	r18, 0x91	; 145
    84d4:	30 e0       	ldi	r19, 0x00	; 0
    84d6:	f9 01       	movw	r30, r18
    84d8:	20 81       	ld	r18, Z
    84da:	28 60       	ori	r18, 0x08	; 8
    84dc:	fc 01       	movw	r30, r24
    84de:	20 83       	st	Z, r18
		
	//Set the Timer Counter Control Register (TCCR) with the appropriate prescaller
	//which causes the timer counter to start (i.e. the timer starts).
	switch(timerPrescaler)
    84e0:	8b 81       	ldd	r24, Y+3	; 0x03
    84e2:	9c 81       	ldd	r25, Y+4	; 0x04
    84e4:	fc 01       	movw	r30, r24
    84e6:	84 81       	ldd	r24, Z+4	; 0x04
    84e8:	95 81       	ldd	r25, Z+5	; 0x05
    84ea:	80 34       	cpi	r24, 0x40	; 64
    84ec:	91 05       	cpc	r25, r1
    84ee:	39 f1       	breq	.+78     	; 0x853e <_ZN10helicopter4util5Timer10startTimerEv+0x114>
    84f0:	81 34       	cpi	r24, 0x41	; 65
    84f2:	91 05       	cpc	r25, r1
    84f4:	3c f4       	brge	.+14     	; 0x8504 <_ZN10helicopter4util5Timer10startTimerEv+0xda>
    84f6:	81 30       	cpi	r24, 0x01	; 1
    84f8:	91 05       	cpc	r25, r1
    84fa:	69 f0       	breq	.+26     	; 0x8516 <_ZN10helicopter4util5Timer10startTimerEv+0xec>
    84fc:	88 30       	cpi	r24, 0x08	; 8
    84fe:	91 05       	cpc	r25, r1
    8500:	a1 f0       	breq	.+40     	; 0x852a <_ZN10helicopter4util5Timer10startTimerEv+0x100>
    8502:	3b c0       	rjmp	.+118    	; 0x857a <_ZN10helicopter4util5Timer10startTimerEv+0x150>
    8504:	81 15       	cp	r24, r1
    8506:	f1 e0       	ldi	r31, 0x01	; 1
    8508:	9f 07       	cpc	r25, r31
    850a:	19 f1       	breq	.+70     	; 0x8552 <_ZN10helicopter4util5Timer10startTimerEv+0x128>
    850c:	81 15       	cp	r24, r1
    850e:	24 e0       	ldi	r18, 0x04	; 4
    8510:	92 07       	cpc	r25, r18
    8512:	49 f1       	breq	.+82     	; 0x8566 <_ZN10helicopter4util5Timer10startTimerEv+0x13c>
    8514:	32 c0       	rjmp	.+100    	; 0x857a <_ZN10helicopter4util5Timer10startTimerEv+0x150>
	{
		case NO_PRESCALER:
		TCCR3B |= NoPrescaling;
    8516:	81 e9       	ldi	r24, 0x91	; 145
    8518:	90 e0       	ldi	r25, 0x00	; 0
    851a:	21 e9       	ldi	r18, 0x91	; 145
    851c:	30 e0       	ldi	r19, 0x00	; 0
    851e:	f9 01       	movw	r30, r18
    8520:	20 81       	ld	r18, Z
    8522:	21 60       	ori	r18, 0x01	; 1
    8524:	fc 01       	movw	r30, r24
    8526:	20 83       	st	Z, r18
		break;
    8528:	31 c0       	rjmp	.+98     	; 0x858c <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_EIGHT:
		TCCR3B |= PrescaleByEight;
    852a:	81 e9       	ldi	r24, 0x91	; 145
    852c:	90 e0       	ldi	r25, 0x00	; 0
    852e:	21 e9       	ldi	r18, 0x91	; 145
    8530:	30 e0       	ldi	r19, 0x00	; 0
    8532:	f9 01       	movw	r30, r18
    8534:	20 81       	ld	r18, Z
    8536:	22 60       	ori	r18, 0x02	; 2
    8538:	fc 01       	movw	r30, r24
    853a:	20 83       	st	Z, r18
		break;
    853c:	27 c0       	rjmp	.+78     	; 0x858c <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_SIXTYFOUR:
		TCCR3B |= PrescaleBySixtyFour;
    853e:	81 e9       	ldi	r24, 0x91	; 145
    8540:	90 e0       	ldi	r25, 0x00	; 0
    8542:	21 e9       	ldi	r18, 0x91	; 145
    8544:	30 e0       	ldi	r19, 0x00	; 0
    8546:	f9 01       	movw	r30, r18
    8548:	20 81       	ld	r18, Z
    854a:	23 60       	ori	r18, 0x03	; 3
    854c:	fc 01       	movw	r30, r24
    854e:	20 83       	st	Z, r18
		break;
    8550:	1d c0       	rjmp	.+58     	; 0x858c <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_TWOFIFTYSIX:
		TCCR3B |= PrescaleByTwofiftysix;
    8552:	81 e9       	ldi	r24, 0x91	; 145
    8554:	90 e0       	ldi	r25, 0x00	; 0
    8556:	21 e9       	ldi	r18, 0x91	; 145
    8558:	30 e0       	ldi	r19, 0x00	; 0
    855a:	f9 01       	movw	r30, r18
    855c:	20 81       	ld	r18, Z
    855e:	24 60       	ori	r18, 0x04	; 4
    8560:	fc 01       	movw	r30, r24
    8562:	20 83       	st	Z, r18
		break;
    8564:	13 c0       	rjmp	.+38     	; 0x858c <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_TENTWENTYFOUR:
		TCCR3B |= PrescaleByTentwentyfour;
    8566:	81 e9       	ldi	r24, 0x91	; 145
    8568:	90 e0       	ldi	r25, 0x00	; 0
    856a:	21 e9       	ldi	r18, 0x91	; 145
    856c:	30 e0       	ldi	r19, 0x00	; 0
    856e:	f9 01       	movw	r30, r18
    8570:	20 81       	ld	r18, Z
    8572:	25 60       	ori	r18, 0x05	; 5
    8574:	fc 01       	movw	r30, r24
    8576:	20 83       	st	Z, r18
		break;
    8578:	09 c0       	rjmp	.+18     	; 0x858c <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		default:
		TCCR3B |= NoPrescaling;
    857a:	81 e9       	ldi	r24, 0x91	; 145
    857c:	90 e0       	ldi	r25, 0x00	; 0
    857e:	21 e9       	ldi	r18, 0x91	; 145
    8580:	30 e0       	ldi	r19, 0x00	; 0
    8582:	f9 01       	movw	r30, r18
    8584:	20 81       	ld	r18, Z
    8586:	21 60       	ori	r18, 0x01	; 1
    8588:	fc 01       	movw	r30, r24
    858a:	20 83       	st	Z, r18
	}
}
    858c:	0f 90       	pop	r0
    858e:	0f 90       	pop	r0
    8590:	0f 90       	pop	r0
    8592:	0f 90       	pop	r0
    8594:	df 91       	pop	r29
    8596:	cf 91       	pop	r28
    8598:	1f 91       	pop	r17
    859a:	0f 91       	pop	r16
    859c:	08 95       	ret

0000859e <_ZN10helicopter4util5Timer11hasTimedoutEv>:

bool Timer::hasTimedout()
{
    859e:	cf 93       	push	r28
    85a0:	df 93       	push	r29
    85a2:	1f 92       	push	r1
    85a4:	1f 92       	push	r1
    85a6:	cd b7       	in	r28, 0x3d	; 61
    85a8:	de b7       	in	r29, 0x3e	; 62
    85aa:	9a 83       	std	Y+2, r25	; 0x02
    85ac:	89 83       	std	Y+1, r24	; 0x01
	//Check the Timer Interrupt Flags Register (TIFR) to determine if the flag was set indicating
	//that the timer has timed out.
	return (TIFR3 & (1<<OCF3A)) != 0;
    85ae:	88 e3       	ldi	r24, 0x38	; 56
    85b0:	90 e0       	ldi	r25, 0x00	; 0
    85b2:	fc 01       	movw	r30, r24
    85b4:	80 81       	ld	r24, Z
    85b6:	88 2f       	mov	r24, r24
    85b8:	90 e0       	ldi	r25, 0x00	; 0
    85ba:	82 70       	andi	r24, 0x02	; 2
    85bc:	99 27       	eor	r25, r25
    85be:	21 e0       	ldi	r18, 0x01	; 1
    85c0:	00 97       	sbiw	r24, 0x00	; 0
    85c2:	09 f4       	brne	.+2      	; 0x85c6 <_ZN10helicopter4util5Timer11hasTimedoutEv+0x28>
    85c4:	20 e0       	ldi	r18, 0x00	; 0
    85c6:	82 2f       	mov	r24, r18
}
    85c8:	0f 90       	pop	r0
    85ca:	0f 90       	pop	r0
    85cc:	df 91       	pop	r29
    85ce:	cf 91       	pop	r28
    85d0:	08 95       	ret

000085d2 <_ZN10helicopter4util5Timer9stopTimerEv>:

void Timer::stopTimer()
{
    85d2:	cf 93       	push	r28
    85d4:	df 93       	push	r29
    85d6:	1f 92       	push	r1
    85d8:	1f 92       	push	r1
    85da:	cd b7       	in	r28, 0x3d	; 61
    85dc:	de b7       	in	r29, 0x3e	; 62
    85de:	9a 83       	std	Y+2, r25	; 0x02
    85e0:	89 83       	std	Y+1, r24	; 0x01
	//stop the timer
	TCCR3B = 0;
    85e2:	81 e9       	ldi	r24, 0x91	; 145
    85e4:	90 e0       	ldi	r25, 0x00	; 0
    85e6:	fc 01       	movw	r30, r24
    85e8:	10 82       	st	Z, r1
	
	//Then clear the timer counter (sets the count back to 0 so when the timer starts again, it starts from 0). 
	//Clear after stopping in order to avoid missing a compare match.
	TCNT3 = 0;
    85ea:	84 e9       	ldi	r24, 0x94	; 148
    85ec:	90 e0       	ldi	r25, 0x00	; 0
    85ee:	fc 01       	movw	r30, r24
    85f0:	11 82       	std	Z+1, r1	; 0x01
    85f2:	10 82       	st	Z, r1
	
	//clear the timeout flag.
	TIFR3 |= (1<<OCF3A);
    85f4:	88 e3       	ldi	r24, 0x38	; 56
    85f6:	90 e0       	ldi	r25, 0x00	; 0
    85f8:	28 e3       	ldi	r18, 0x38	; 56
    85fa:	30 e0       	ldi	r19, 0x00	; 0
    85fc:	f9 01       	movw	r30, r18
    85fe:	20 81       	ld	r18, Z
    8600:	22 60       	ori	r18, 0x02	; 2
    8602:	fc 01       	movw	r30, r24
    8604:	20 83       	st	Z, r18
    8606:	0f 90       	pop	r0
    8608:	0f 90       	pop	r0
    860a:	df 91       	pop	r29
    860c:	cf 91       	pop	r28
    860e:	08 95       	ret

00008610 <__subsf3>:
    8610:	50 58       	subi	r21, 0x80	; 128

00008612 <__addsf3>:
    8612:	bb 27       	eor	r27, r27
    8614:	aa 27       	eor	r26, r26
    8616:	0e d0       	rcall	.+28     	; 0x8634 <__addsf3x>
    8618:	dc c1       	rjmp	.+952    	; 0x89d2 <__fp_round>
    861a:	a5 d1       	rcall	.+842    	; 0x8966 <__fp_pscA>
    861c:	30 f0       	brcs	.+12     	; 0x862a <__addsf3+0x18>
    861e:	aa d1       	rcall	.+852    	; 0x8974 <__fp_pscB>
    8620:	20 f0       	brcs	.+8      	; 0x862a <__addsf3+0x18>
    8622:	31 f4       	brne	.+12     	; 0x8630 <__addsf3+0x1e>
    8624:	9f 3f       	cpi	r25, 0xFF	; 255
    8626:	11 f4       	brne	.+4      	; 0x862c <__addsf3+0x1a>
    8628:	1e f4       	brtc	.+6      	; 0x8630 <__addsf3+0x1e>
    862a:	9a c1       	rjmp	.+820    	; 0x8960 <__fp_nan>
    862c:	0e f4       	brtc	.+2      	; 0x8630 <__addsf3+0x1e>
    862e:	e0 95       	com	r30
    8630:	e7 fb       	bst	r30, 7
    8632:	67 c1       	rjmp	.+718    	; 0x8902 <__fp_inf>

00008634 <__addsf3x>:
    8634:	e9 2f       	mov	r30, r25
    8636:	ef d1       	rcall	.+990    	; 0x8a16 <__fp_split3>
    8638:	80 f3       	brcs	.-32     	; 0x861a <__addsf3+0x8>
    863a:	ba 17       	cp	r27, r26
    863c:	62 07       	cpc	r22, r18
    863e:	73 07       	cpc	r23, r19
    8640:	84 07       	cpc	r24, r20
    8642:	95 07       	cpc	r25, r21
    8644:	18 f0       	brcs	.+6      	; 0x864c <__addsf3x+0x18>
    8646:	71 f4       	brne	.+28     	; 0x8664 <__addsf3x+0x30>
    8648:	9e f5       	brtc	.+102    	; 0x86b0 <__addsf3x+0x7c>
    864a:	1e c2       	rjmp	.+1084   	; 0x8a88 <__fp_zero>
    864c:	0e f4       	brtc	.+2      	; 0x8650 <__addsf3x+0x1c>
    864e:	e0 95       	com	r30
    8650:	0b 2e       	mov	r0, r27
    8652:	ba 2f       	mov	r27, r26
    8654:	a0 2d       	mov	r26, r0
    8656:	0b 01       	movw	r0, r22
    8658:	b9 01       	movw	r22, r18
    865a:	90 01       	movw	r18, r0
    865c:	0c 01       	movw	r0, r24
    865e:	ca 01       	movw	r24, r20
    8660:	a0 01       	movw	r20, r0
    8662:	11 24       	eor	r1, r1
    8664:	ff 27       	eor	r31, r31
    8666:	59 1b       	sub	r21, r25
    8668:	99 f0       	breq	.+38     	; 0x8690 <__addsf3x+0x5c>
    866a:	59 3f       	cpi	r21, 0xF9	; 249
    866c:	50 f4       	brcc	.+20     	; 0x8682 <__addsf3x+0x4e>
    866e:	50 3e       	cpi	r21, 0xE0	; 224
    8670:	68 f1       	brcs	.+90     	; 0x86cc <__addsf3x+0x98>
    8672:	1a 16       	cp	r1, r26
    8674:	f0 40       	sbci	r31, 0x00	; 0
    8676:	a2 2f       	mov	r26, r18
    8678:	23 2f       	mov	r18, r19
    867a:	34 2f       	mov	r19, r20
    867c:	44 27       	eor	r20, r20
    867e:	58 5f       	subi	r21, 0xF8	; 248
    8680:	f3 cf       	rjmp	.-26     	; 0x8668 <__addsf3x+0x34>
    8682:	46 95       	lsr	r20
    8684:	37 95       	ror	r19
    8686:	27 95       	ror	r18
    8688:	a7 95       	ror	r26
    868a:	f0 40       	sbci	r31, 0x00	; 0
    868c:	53 95       	inc	r21
    868e:	c9 f7       	brne	.-14     	; 0x8682 <__addsf3x+0x4e>
    8690:	7e f4       	brtc	.+30     	; 0x86b0 <__addsf3x+0x7c>
    8692:	1f 16       	cp	r1, r31
    8694:	ba 0b       	sbc	r27, r26
    8696:	62 0b       	sbc	r22, r18
    8698:	73 0b       	sbc	r23, r19
    869a:	84 0b       	sbc	r24, r20
    869c:	ba f0       	brmi	.+46     	; 0x86cc <__addsf3x+0x98>
    869e:	91 50       	subi	r25, 0x01	; 1
    86a0:	a1 f0       	breq	.+40     	; 0x86ca <__addsf3x+0x96>
    86a2:	ff 0f       	add	r31, r31
    86a4:	bb 1f       	adc	r27, r27
    86a6:	66 1f       	adc	r22, r22
    86a8:	77 1f       	adc	r23, r23
    86aa:	88 1f       	adc	r24, r24
    86ac:	c2 f7       	brpl	.-16     	; 0x869e <__addsf3x+0x6a>
    86ae:	0e c0       	rjmp	.+28     	; 0x86cc <__addsf3x+0x98>
    86b0:	ba 0f       	add	r27, r26
    86b2:	62 1f       	adc	r22, r18
    86b4:	73 1f       	adc	r23, r19
    86b6:	84 1f       	adc	r24, r20
    86b8:	48 f4       	brcc	.+18     	; 0x86cc <__addsf3x+0x98>
    86ba:	87 95       	ror	r24
    86bc:	77 95       	ror	r23
    86be:	67 95       	ror	r22
    86c0:	b7 95       	ror	r27
    86c2:	f7 95       	ror	r31
    86c4:	9e 3f       	cpi	r25, 0xFE	; 254
    86c6:	08 f0       	brcs	.+2      	; 0x86ca <__addsf3x+0x96>
    86c8:	b3 cf       	rjmp	.-154    	; 0x8630 <__addsf3+0x1e>
    86ca:	93 95       	inc	r25
    86cc:	88 0f       	add	r24, r24
    86ce:	08 f0       	brcs	.+2      	; 0x86d2 <__addsf3x+0x9e>
    86d0:	99 27       	eor	r25, r25
    86d2:	ee 0f       	add	r30, r30
    86d4:	97 95       	ror	r25
    86d6:	87 95       	ror	r24
    86d8:	08 95       	ret

000086da <__cmpsf2>:
    86da:	ef d0       	rcall	.+478    	; 0x88ba <__fp_cmp>
    86dc:	08 f4       	brcc	.+2      	; 0x86e0 <__cmpsf2+0x6>
    86de:	81 e0       	ldi	r24, 0x01	; 1
    86e0:	08 95       	ret

000086e2 <cos>:
    86e2:	50 d1       	rcall	.+672    	; 0x8984 <__fp_rempio2>
    86e4:	e3 95       	inc	r30
    86e6:	86 c1       	rjmp	.+780    	; 0x89f4 <__fp_sinus>

000086e8 <__divsf3>:
    86e8:	0c d0       	rcall	.+24     	; 0x8702 <__divsf3x>
    86ea:	73 c1       	rjmp	.+742    	; 0x89d2 <__fp_round>
    86ec:	43 d1       	rcall	.+646    	; 0x8974 <__fp_pscB>
    86ee:	40 f0       	brcs	.+16     	; 0x8700 <__divsf3+0x18>
    86f0:	3a d1       	rcall	.+628    	; 0x8966 <__fp_pscA>
    86f2:	30 f0       	brcs	.+12     	; 0x8700 <__divsf3+0x18>
    86f4:	21 f4       	brne	.+8      	; 0x86fe <__divsf3+0x16>
    86f6:	5f 3f       	cpi	r21, 0xFF	; 255
    86f8:	19 f0       	breq	.+6      	; 0x8700 <__divsf3+0x18>
    86fa:	03 c1       	rjmp	.+518    	; 0x8902 <__fp_inf>
    86fc:	51 11       	cpse	r21, r1
    86fe:	c5 c1       	rjmp	.+906    	; 0x8a8a <__fp_szero>
    8700:	2f c1       	rjmp	.+606    	; 0x8960 <__fp_nan>

00008702 <__divsf3x>:
    8702:	89 d1       	rcall	.+786    	; 0x8a16 <__fp_split3>
    8704:	98 f3       	brcs	.-26     	; 0x86ec <__divsf3+0x4>

00008706 <__divsf3_pse>:
    8706:	99 23       	and	r25, r25
    8708:	c9 f3       	breq	.-14     	; 0x86fc <__divsf3+0x14>
    870a:	55 23       	and	r21, r21
    870c:	b1 f3       	breq	.-20     	; 0x86fa <__divsf3+0x12>
    870e:	95 1b       	sub	r25, r21
    8710:	55 0b       	sbc	r21, r21
    8712:	bb 27       	eor	r27, r27
    8714:	aa 27       	eor	r26, r26
    8716:	62 17       	cp	r22, r18
    8718:	73 07       	cpc	r23, r19
    871a:	84 07       	cpc	r24, r20
    871c:	38 f0       	brcs	.+14     	; 0x872c <__divsf3_pse+0x26>
    871e:	9f 5f       	subi	r25, 0xFF	; 255
    8720:	5f 4f       	sbci	r21, 0xFF	; 255
    8722:	22 0f       	add	r18, r18
    8724:	33 1f       	adc	r19, r19
    8726:	44 1f       	adc	r20, r20
    8728:	aa 1f       	adc	r26, r26
    872a:	a9 f3       	breq	.-22     	; 0x8716 <__divsf3_pse+0x10>
    872c:	33 d0       	rcall	.+102    	; 0x8794 <__divsf3_pse+0x8e>
    872e:	0e 2e       	mov	r0, r30
    8730:	3a f0       	brmi	.+14     	; 0x8740 <__divsf3_pse+0x3a>
    8732:	e0 e8       	ldi	r30, 0x80	; 128
    8734:	30 d0       	rcall	.+96     	; 0x8796 <__divsf3_pse+0x90>
    8736:	91 50       	subi	r25, 0x01	; 1
    8738:	50 40       	sbci	r21, 0x00	; 0
    873a:	e6 95       	lsr	r30
    873c:	00 1c       	adc	r0, r0
    873e:	ca f7       	brpl	.-14     	; 0x8732 <__divsf3_pse+0x2c>
    8740:	29 d0       	rcall	.+82     	; 0x8794 <__divsf3_pse+0x8e>
    8742:	fe 2f       	mov	r31, r30
    8744:	27 d0       	rcall	.+78     	; 0x8794 <__divsf3_pse+0x8e>
    8746:	66 0f       	add	r22, r22
    8748:	77 1f       	adc	r23, r23
    874a:	88 1f       	adc	r24, r24
    874c:	bb 1f       	adc	r27, r27
    874e:	26 17       	cp	r18, r22
    8750:	37 07       	cpc	r19, r23
    8752:	48 07       	cpc	r20, r24
    8754:	ab 07       	cpc	r26, r27
    8756:	b0 e8       	ldi	r27, 0x80	; 128
    8758:	09 f0       	breq	.+2      	; 0x875c <__divsf3_pse+0x56>
    875a:	bb 0b       	sbc	r27, r27
    875c:	80 2d       	mov	r24, r0
    875e:	bf 01       	movw	r22, r30
    8760:	ff 27       	eor	r31, r31
    8762:	93 58       	subi	r25, 0x83	; 131
    8764:	5f 4f       	sbci	r21, 0xFF	; 255
    8766:	2a f0       	brmi	.+10     	; 0x8772 <__divsf3_pse+0x6c>
    8768:	9e 3f       	cpi	r25, 0xFE	; 254
    876a:	51 05       	cpc	r21, r1
    876c:	68 f0       	brcs	.+26     	; 0x8788 <__divsf3_pse+0x82>
    876e:	c9 c0       	rjmp	.+402    	; 0x8902 <__fp_inf>
    8770:	8c c1       	rjmp	.+792    	; 0x8a8a <__fp_szero>
    8772:	5f 3f       	cpi	r21, 0xFF	; 255
    8774:	ec f3       	brlt	.-6      	; 0x8770 <__divsf3_pse+0x6a>
    8776:	98 3e       	cpi	r25, 0xE8	; 232
    8778:	dc f3       	brlt	.-10     	; 0x8770 <__divsf3_pse+0x6a>
    877a:	86 95       	lsr	r24
    877c:	77 95       	ror	r23
    877e:	67 95       	ror	r22
    8780:	b7 95       	ror	r27
    8782:	f7 95       	ror	r31
    8784:	9f 5f       	subi	r25, 0xFF	; 255
    8786:	c9 f7       	brne	.-14     	; 0x877a <__divsf3_pse+0x74>
    8788:	88 0f       	add	r24, r24
    878a:	91 1d       	adc	r25, r1
    878c:	96 95       	lsr	r25
    878e:	87 95       	ror	r24
    8790:	97 f9       	bld	r25, 7
    8792:	08 95       	ret
    8794:	e1 e0       	ldi	r30, 0x01	; 1
    8796:	66 0f       	add	r22, r22
    8798:	77 1f       	adc	r23, r23
    879a:	88 1f       	adc	r24, r24
    879c:	bb 1f       	adc	r27, r27
    879e:	62 17       	cp	r22, r18
    87a0:	73 07       	cpc	r23, r19
    87a2:	84 07       	cpc	r24, r20
    87a4:	ba 07       	cpc	r27, r26
    87a6:	20 f0       	brcs	.+8      	; 0x87b0 <__divsf3_pse+0xaa>
    87a8:	62 1b       	sub	r22, r18
    87aa:	73 0b       	sbc	r23, r19
    87ac:	84 0b       	sbc	r24, r20
    87ae:	ba 0b       	sbc	r27, r26
    87b0:	ee 1f       	adc	r30, r30
    87b2:	88 f7       	brcc	.-30     	; 0x8796 <__divsf3_pse+0x90>
    87b4:	e0 95       	com	r30
    87b6:	08 95       	ret

000087b8 <__fixsfsi>:
    87b8:	04 d0       	rcall	.+8      	; 0x87c2 <__fixunssfsi>
    87ba:	68 94       	set
    87bc:	b1 11       	cpse	r27, r1
    87be:	65 c1       	rjmp	.+714    	; 0x8a8a <__fp_szero>
    87c0:	08 95       	ret

000087c2 <__fixunssfsi>:
    87c2:	31 d1       	rcall	.+610    	; 0x8a26 <__fp_splitA>
    87c4:	88 f0       	brcs	.+34     	; 0x87e8 <__fixunssfsi+0x26>
    87c6:	9f 57       	subi	r25, 0x7F	; 127
    87c8:	90 f0       	brcs	.+36     	; 0x87ee <__fixunssfsi+0x2c>
    87ca:	b9 2f       	mov	r27, r25
    87cc:	99 27       	eor	r25, r25
    87ce:	b7 51       	subi	r27, 0x17	; 23
    87d0:	a0 f0       	brcs	.+40     	; 0x87fa <__fixunssfsi+0x38>
    87d2:	d1 f0       	breq	.+52     	; 0x8808 <__fixunssfsi+0x46>
    87d4:	66 0f       	add	r22, r22
    87d6:	77 1f       	adc	r23, r23
    87d8:	88 1f       	adc	r24, r24
    87da:	99 1f       	adc	r25, r25
    87dc:	1a f0       	brmi	.+6      	; 0x87e4 <__fixunssfsi+0x22>
    87de:	ba 95       	dec	r27
    87e0:	c9 f7       	brne	.-14     	; 0x87d4 <__fixunssfsi+0x12>
    87e2:	12 c0       	rjmp	.+36     	; 0x8808 <__fixunssfsi+0x46>
    87e4:	b1 30       	cpi	r27, 0x01	; 1
    87e6:	81 f0       	breq	.+32     	; 0x8808 <__fixunssfsi+0x46>
    87e8:	4f d1       	rcall	.+670    	; 0x8a88 <__fp_zero>
    87ea:	b1 e0       	ldi	r27, 0x01	; 1
    87ec:	08 95       	ret
    87ee:	4c c1       	rjmp	.+664    	; 0x8a88 <__fp_zero>
    87f0:	67 2f       	mov	r22, r23
    87f2:	78 2f       	mov	r23, r24
    87f4:	88 27       	eor	r24, r24
    87f6:	b8 5f       	subi	r27, 0xF8	; 248
    87f8:	39 f0       	breq	.+14     	; 0x8808 <__fixunssfsi+0x46>
    87fa:	b9 3f       	cpi	r27, 0xF9	; 249
    87fc:	cc f3       	brlt	.-14     	; 0x87f0 <__fixunssfsi+0x2e>
    87fe:	86 95       	lsr	r24
    8800:	77 95       	ror	r23
    8802:	67 95       	ror	r22
    8804:	b3 95       	inc	r27
    8806:	d9 f7       	brne	.-10     	; 0x87fe <__fixunssfsi+0x3c>
    8808:	3e f4       	brtc	.+14     	; 0x8818 <__fixunssfsi+0x56>
    880a:	90 95       	com	r25
    880c:	80 95       	com	r24
    880e:	70 95       	com	r23
    8810:	61 95       	neg	r22
    8812:	7f 4f       	sbci	r23, 0xFF	; 255
    8814:	8f 4f       	sbci	r24, 0xFF	; 255
    8816:	9f 4f       	sbci	r25, 0xFF	; 255
    8818:	08 95       	ret

0000881a <__floatunsisf>:
    881a:	e8 94       	clt
    881c:	09 c0       	rjmp	.+18     	; 0x8830 <__floatsisf+0x12>

0000881e <__floatsisf>:
    881e:	97 fb       	bst	r25, 7
    8820:	3e f4       	brtc	.+14     	; 0x8830 <__floatsisf+0x12>
    8822:	90 95       	com	r25
    8824:	80 95       	com	r24
    8826:	70 95       	com	r23
    8828:	61 95       	neg	r22
    882a:	7f 4f       	sbci	r23, 0xFF	; 255
    882c:	8f 4f       	sbci	r24, 0xFF	; 255
    882e:	9f 4f       	sbci	r25, 0xFF	; 255
    8830:	99 23       	and	r25, r25
    8832:	a9 f0       	breq	.+42     	; 0x885e <__floatsisf+0x40>
    8834:	f9 2f       	mov	r31, r25
    8836:	96 e9       	ldi	r25, 0x96	; 150
    8838:	bb 27       	eor	r27, r27
    883a:	93 95       	inc	r25
    883c:	f6 95       	lsr	r31
    883e:	87 95       	ror	r24
    8840:	77 95       	ror	r23
    8842:	67 95       	ror	r22
    8844:	b7 95       	ror	r27
    8846:	f1 11       	cpse	r31, r1
    8848:	f8 cf       	rjmp	.-16     	; 0x883a <__floatsisf+0x1c>
    884a:	fa f4       	brpl	.+62     	; 0x888a <__floatsisf+0x6c>
    884c:	bb 0f       	add	r27, r27
    884e:	11 f4       	brne	.+4      	; 0x8854 <__floatsisf+0x36>
    8850:	60 ff       	sbrs	r22, 0
    8852:	1b c0       	rjmp	.+54     	; 0x888a <__floatsisf+0x6c>
    8854:	6f 5f       	subi	r22, 0xFF	; 255
    8856:	7f 4f       	sbci	r23, 0xFF	; 255
    8858:	8f 4f       	sbci	r24, 0xFF	; 255
    885a:	9f 4f       	sbci	r25, 0xFF	; 255
    885c:	16 c0       	rjmp	.+44     	; 0x888a <__floatsisf+0x6c>
    885e:	88 23       	and	r24, r24
    8860:	11 f0       	breq	.+4      	; 0x8866 <__floatsisf+0x48>
    8862:	96 e9       	ldi	r25, 0x96	; 150
    8864:	11 c0       	rjmp	.+34     	; 0x8888 <__floatsisf+0x6a>
    8866:	77 23       	and	r23, r23
    8868:	21 f0       	breq	.+8      	; 0x8872 <__floatsisf+0x54>
    886a:	9e e8       	ldi	r25, 0x8E	; 142
    886c:	87 2f       	mov	r24, r23
    886e:	76 2f       	mov	r23, r22
    8870:	05 c0       	rjmp	.+10     	; 0x887c <__floatsisf+0x5e>
    8872:	66 23       	and	r22, r22
    8874:	71 f0       	breq	.+28     	; 0x8892 <__floatsisf+0x74>
    8876:	96 e8       	ldi	r25, 0x86	; 134
    8878:	86 2f       	mov	r24, r22
    887a:	70 e0       	ldi	r23, 0x00	; 0
    887c:	60 e0       	ldi	r22, 0x00	; 0
    887e:	2a f0       	brmi	.+10     	; 0x888a <__floatsisf+0x6c>
    8880:	9a 95       	dec	r25
    8882:	66 0f       	add	r22, r22
    8884:	77 1f       	adc	r23, r23
    8886:	88 1f       	adc	r24, r24
    8888:	da f7       	brpl	.-10     	; 0x8880 <__floatsisf+0x62>
    888a:	88 0f       	add	r24, r24
    888c:	96 95       	lsr	r25
    888e:	87 95       	ror	r24
    8890:	97 f9       	bld	r25, 7
    8892:	08 95       	ret

00008894 <floor>:
    8894:	e2 d0       	rcall	.+452    	; 0x8a5a <__fp_trunc>
    8896:	80 f0       	brcs	.+32     	; 0x88b8 <floor+0x24>
    8898:	9f 37       	cpi	r25, 0x7F	; 127
    889a:	40 f4       	brcc	.+16     	; 0x88ac <floor+0x18>
    889c:	91 11       	cpse	r25, r1
    889e:	0e f0       	brts	.+2      	; 0x88a2 <floor+0xe>
    88a0:	f4 c0       	rjmp	.+488    	; 0x8a8a <__fp_szero>
    88a2:	60 e0       	ldi	r22, 0x00	; 0
    88a4:	70 e0       	ldi	r23, 0x00	; 0
    88a6:	80 e8       	ldi	r24, 0x80	; 128
    88a8:	9f eb       	ldi	r25, 0xBF	; 191
    88aa:	08 95       	ret
    88ac:	26 f4       	brtc	.+8      	; 0x88b6 <floor+0x22>
    88ae:	1b 16       	cp	r1, r27
    88b0:	61 1d       	adc	r22, r1
    88b2:	71 1d       	adc	r23, r1
    88b4:	81 1d       	adc	r24, r1
    88b6:	2b c0       	rjmp	.+86     	; 0x890e <__fp_mintl>
    88b8:	45 c0       	rjmp	.+138    	; 0x8944 <__fp_mpack>

000088ba <__fp_cmp>:
    88ba:	99 0f       	add	r25, r25
    88bc:	00 08       	sbc	r0, r0
    88be:	55 0f       	add	r21, r21
    88c0:	aa 0b       	sbc	r26, r26
    88c2:	e0 e8       	ldi	r30, 0x80	; 128
    88c4:	fe ef       	ldi	r31, 0xFE	; 254
    88c6:	16 16       	cp	r1, r22
    88c8:	17 06       	cpc	r1, r23
    88ca:	e8 07       	cpc	r30, r24
    88cc:	f9 07       	cpc	r31, r25
    88ce:	c0 f0       	brcs	.+48     	; 0x8900 <__fp_cmp+0x46>
    88d0:	12 16       	cp	r1, r18
    88d2:	13 06       	cpc	r1, r19
    88d4:	e4 07       	cpc	r30, r20
    88d6:	f5 07       	cpc	r31, r21
    88d8:	98 f0       	brcs	.+38     	; 0x8900 <__fp_cmp+0x46>
    88da:	62 1b       	sub	r22, r18
    88dc:	73 0b       	sbc	r23, r19
    88de:	84 0b       	sbc	r24, r20
    88e0:	95 0b       	sbc	r25, r21
    88e2:	39 f4       	brne	.+14     	; 0x88f2 <__fp_cmp+0x38>
    88e4:	0a 26       	eor	r0, r26
    88e6:	61 f0       	breq	.+24     	; 0x8900 <__fp_cmp+0x46>
    88e8:	23 2b       	or	r18, r19
    88ea:	24 2b       	or	r18, r20
    88ec:	25 2b       	or	r18, r21
    88ee:	21 f4       	brne	.+8      	; 0x88f8 <__fp_cmp+0x3e>
    88f0:	08 95       	ret
    88f2:	0a 26       	eor	r0, r26
    88f4:	09 f4       	brne	.+2      	; 0x88f8 <__fp_cmp+0x3e>
    88f6:	a1 40       	sbci	r26, 0x01	; 1
    88f8:	a6 95       	lsr	r26
    88fa:	8f ef       	ldi	r24, 0xFF	; 255
    88fc:	81 1d       	adc	r24, r1
    88fe:	81 1d       	adc	r24, r1
    8900:	08 95       	ret

00008902 <__fp_inf>:
    8902:	97 f9       	bld	r25, 7
    8904:	9f 67       	ori	r25, 0x7F	; 127
    8906:	80 e8       	ldi	r24, 0x80	; 128
    8908:	70 e0       	ldi	r23, 0x00	; 0
    890a:	60 e0       	ldi	r22, 0x00	; 0
    890c:	08 95       	ret

0000890e <__fp_mintl>:
    890e:	88 23       	and	r24, r24
    8910:	71 f4       	brne	.+28     	; 0x892e <__fp_mintl+0x20>
    8912:	77 23       	and	r23, r23
    8914:	21 f0       	breq	.+8      	; 0x891e <__fp_mintl+0x10>
    8916:	98 50       	subi	r25, 0x08	; 8
    8918:	87 2b       	or	r24, r23
    891a:	76 2f       	mov	r23, r22
    891c:	07 c0       	rjmp	.+14     	; 0x892c <__fp_mintl+0x1e>
    891e:	66 23       	and	r22, r22
    8920:	11 f4       	brne	.+4      	; 0x8926 <__fp_mintl+0x18>
    8922:	99 27       	eor	r25, r25
    8924:	0d c0       	rjmp	.+26     	; 0x8940 <__fp_mintl+0x32>
    8926:	90 51       	subi	r25, 0x10	; 16
    8928:	86 2b       	or	r24, r22
    892a:	70 e0       	ldi	r23, 0x00	; 0
    892c:	60 e0       	ldi	r22, 0x00	; 0
    892e:	2a f0       	brmi	.+10     	; 0x893a <__fp_mintl+0x2c>
    8930:	9a 95       	dec	r25
    8932:	66 0f       	add	r22, r22
    8934:	77 1f       	adc	r23, r23
    8936:	88 1f       	adc	r24, r24
    8938:	da f7       	brpl	.-10     	; 0x8930 <__fp_mintl+0x22>
    893a:	88 0f       	add	r24, r24
    893c:	96 95       	lsr	r25
    893e:	87 95       	ror	r24
    8940:	97 f9       	bld	r25, 7
    8942:	08 95       	ret

00008944 <__fp_mpack>:
    8944:	9f 3f       	cpi	r25, 0xFF	; 255
    8946:	31 f0       	breq	.+12     	; 0x8954 <__fp_mpack_finite+0xc>

00008948 <__fp_mpack_finite>:
    8948:	91 50       	subi	r25, 0x01	; 1
    894a:	20 f4       	brcc	.+8      	; 0x8954 <__fp_mpack_finite+0xc>
    894c:	87 95       	ror	r24
    894e:	77 95       	ror	r23
    8950:	67 95       	ror	r22
    8952:	b7 95       	ror	r27
    8954:	88 0f       	add	r24, r24
    8956:	91 1d       	adc	r25, r1
    8958:	96 95       	lsr	r25
    895a:	87 95       	ror	r24
    895c:	97 f9       	bld	r25, 7
    895e:	08 95       	ret

00008960 <__fp_nan>:
    8960:	9f ef       	ldi	r25, 0xFF	; 255
    8962:	80 ec       	ldi	r24, 0xC0	; 192
    8964:	08 95       	ret

00008966 <__fp_pscA>:
    8966:	00 24       	eor	r0, r0
    8968:	0a 94       	dec	r0
    896a:	16 16       	cp	r1, r22
    896c:	17 06       	cpc	r1, r23
    896e:	18 06       	cpc	r1, r24
    8970:	09 06       	cpc	r0, r25
    8972:	08 95       	ret

00008974 <__fp_pscB>:
    8974:	00 24       	eor	r0, r0
    8976:	0a 94       	dec	r0
    8978:	12 16       	cp	r1, r18
    897a:	13 06       	cpc	r1, r19
    897c:	14 06       	cpc	r1, r20
    897e:	05 06       	cpc	r0, r21
    8980:	08 95       	ret
    8982:	ee cf       	rjmp	.-36     	; 0x8960 <__fp_nan>

00008984 <__fp_rempio2>:
    8984:	50 d0       	rcall	.+160    	; 0x8a26 <__fp_splitA>
    8986:	e8 f3       	brcs	.-6      	; 0x8982 <__fp_pscB+0xe>
    8988:	e8 94       	clt
    898a:	e0 e0       	ldi	r30, 0x00	; 0
    898c:	bb 27       	eor	r27, r27
    898e:	9f 57       	subi	r25, 0x7F	; 127
    8990:	f0 f0       	brcs	.+60     	; 0x89ce <__fp_rempio2+0x4a>
    8992:	2a ed       	ldi	r18, 0xDA	; 218
    8994:	3f e0       	ldi	r19, 0x0F	; 15
    8996:	49 ec       	ldi	r20, 0xC9	; 201
    8998:	06 c0       	rjmp	.+12     	; 0x89a6 <__fp_rempio2+0x22>
    899a:	ee 0f       	add	r30, r30
    899c:	bb 0f       	add	r27, r27
    899e:	66 1f       	adc	r22, r22
    89a0:	77 1f       	adc	r23, r23
    89a2:	88 1f       	adc	r24, r24
    89a4:	28 f0       	brcs	.+10     	; 0x89b0 <__fp_rempio2+0x2c>
    89a6:	b2 3a       	cpi	r27, 0xA2	; 162
    89a8:	62 07       	cpc	r22, r18
    89aa:	73 07       	cpc	r23, r19
    89ac:	84 07       	cpc	r24, r20
    89ae:	28 f0       	brcs	.+10     	; 0x89ba <__fp_rempio2+0x36>
    89b0:	b2 5a       	subi	r27, 0xA2	; 162
    89b2:	62 0b       	sbc	r22, r18
    89b4:	73 0b       	sbc	r23, r19
    89b6:	84 0b       	sbc	r24, r20
    89b8:	e3 95       	inc	r30
    89ba:	9a 95       	dec	r25
    89bc:	72 f7       	brpl	.-36     	; 0x899a <__fp_rempio2+0x16>
    89be:	80 38       	cpi	r24, 0x80	; 128
    89c0:	30 f4       	brcc	.+12     	; 0x89ce <__fp_rempio2+0x4a>
    89c2:	9a 95       	dec	r25
    89c4:	bb 0f       	add	r27, r27
    89c6:	66 1f       	adc	r22, r22
    89c8:	77 1f       	adc	r23, r23
    89ca:	88 1f       	adc	r24, r24
    89cc:	d2 f7       	brpl	.-12     	; 0x89c2 <__fp_rempio2+0x3e>
    89ce:	90 48       	sbci	r25, 0x80	; 128
    89d0:	bb cf       	rjmp	.-138    	; 0x8948 <__fp_mpack_finite>

000089d2 <__fp_round>:
    89d2:	09 2e       	mov	r0, r25
    89d4:	03 94       	inc	r0
    89d6:	00 0c       	add	r0, r0
    89d8:	11 f4       	brne	.+4      	; 0x89de <__fp_round+0xc>
    89da:	88 23       	and	r24, r24
    89dc:	52 f0       	brmi	.+20     	; 0x89f2 <__fp_round+0x20>
    89de:	bb 0f       	add	r27, r27
    89e0:	40 f4       	brcc	.+16     	; 0x89f2 <__fp_round+0x20>
    89e2:	bf 2b       	or	r27, r31
    89e4:	11 f4       	brne	.+4      	; 0x89ea <__fp_round+0x18>
    89e6:	60 ff       	sbrs	r22, 0
    89e8:	04 c0       	rjmp	.+8      	; 0x89f2 <__fp_round+0x20>
    89ea:	6f 5f       	subi	r22, 0xFF	; 255
    89ec:	7f 4f       	sbci	r23, 0xFF	; 255
    89ee:	8f 4f       	sbci	r24, 0xFF	; 255
    89f0:	9f 4f       	sbci	r25, 0xFF	; 255
    89f2:	08 95       	ret

000089f4 <__fp_sinus>:
    89f4:	ef 93       	push	r30
    89f6:	e0 ff       	sbrs	r30, 0
    89f8:	06 c0       	rjmp	.+12     	; 0x8a06 <__fp_sinus+0x12>
    89fa:	a2 ea       	ldi	r26, 0xA2	; 162
    89fc:	2a ed       	ldi	r18, 0xDA	; 218
    89fe:	3f e0       	ldi	r19, 0x0F	; 15
    8a00:	49 ec       	ldi	r20, 0xC9	; 201
    8a02:	5f eb       	ldi	r21, 0xBF	; 191
    8a04:	17 de       	rcall	.-978    	; 0x8634 <__addsf3x>
    8a06:	e5 df       	rcall	.-54     	; 0x89d2 <__fp_round>
    8a08:	0f 90       	pop	r0
    8a0a:	03 94       	inc	r0
    8a0c:	01 fc       	sbrc	r0, 1
    8a0e:	90 58       	subi	r25, 0x80	; 128
    8a10:	e4 ee       	ldi	r30, 0xE4	; 228
    8a12:	f0 e0       	ldi	r31, 0x00	; 0
    8a14:	98 c1       	rjmp	.+816    	; 0x8d46 <__fp_powsodd>

00008a16 <__fp_split3>:
    8a16:	57 fd       	sbrc	r21, 7
    8a18:	90 58       	subi	r25, 0x80	; 128
    8a1a:	44 0f       	add	r20, r20
    8a1c:	55 1f       	adc	r21, r21
    8a1e:	59 f0       	breq	.+22     	; 0x8a36 <__fp_splitA+0x10>
    8a20:	5f 3f       	cpi	r21, 0xFF	; 255
    8a22:	71 f0       	breq	.+28     	; 0x8a40 <__fp_splitA+0x1a>
    8a24:	47 95       	ror	r20

00008a26 <__fp_splitA>:
    8a26:	88 0f       	add	r24, r24
    8a28:	97 fb       	bst	r25, 7
    8a2a:	99 1f       	adc	r25, r25
    8a2c:	61 f0       	breq	.+24     	; 0x8a46 <__fp_splitA+0x20>
    8a2e:	9f 3f       	cpi	r25, 0xFF	; 255
    8a30:	79 f0       	breq	.+30     	; 0x8a50 <__fp_splitA+0x2a>
    8a32:	87 95       	ror	r24
    8a34:	08 95       	ret
    8a36:	12 16       	cp	r1, r18
    8a38:	13 06       	cpc	r1, r19
    8a3a:	14 06       	cpc	r1, r20
    8a3c:	55 1f       	adc	r21, r21
    8a3e:	f2 cf       	rjmp	.-28     	; 0x8a24 <__fp_split3+0xe>
    8a40:	46 95       	lsr	r20
    8a42:	f1 df       	rcall	.-30     	; 0x8a26 <__fp_splitA>
    8a44:	08 c0       	rjmp	.+16     	; 0x8a56 <__fp_splitA+0x30>
    8a46:	16 16       	cp	r1, r22
    8a48:	17 06       	cpc	r1, r23
    8a4a:	18 06       	cpc	r1, r24
    8a4c:	99 1f       	adc	r25, r25
    8a4e:	f1 cf       	rjmp	.-30     	; 0x8a32 <__fp_splitA+0xc>
    8a50:	86 95       	lsr	r24
    8a52:	71 05       	cpc	r23, r1
    8a54:	61 05       	cpc	r22, r1
    8a56:	08 94       	sec
    8a58:	08 95       	ret

00008a5a <__fp_trunc>:
    8a5a:	e5 df       	rcall	.-54     	; 0x8a26 <__fp_splitA>
    8a5c:	a0 f0       	brcs	.+40     	; 0x8a86 <__fp_trunc+0x2c>
    8a5e:	be e7       	ldi	r27, 0x7E	; 126
    8a60:	b9 17       	cp	r27, r25
    8a62:	88 f4       	brcc	.+34     	; 0x8a86 <__fp_trunc+0x2c>
    8a64:	bb 27       	eor	r27, r27
    8a66:	9f 38       	cpi	r25, 0x8F	; 143
    8a68:	60 f4       	brcc	.+24     	; 0x8a82 <__fp_trunc+0x28>
    8a6a:	16 16       	cp	r1, r22
    8a6c:	b1 1d       	adc	r27, r1
    8a6e:	67 2f       	mov	r22, r23
    8a70:	78 2f       	mov	r23, r24
    8a72:	88 27       	eor	r24, r24
    8a74:	98 5f       	subi	r25, 0xF8	; 248
    8a76:	f7 cf       	rjmp	.-18     	; 0x8a66 <__fp_trunc+0xc>
    8a78:	86 95       	lsr	r24
    8a7a:	77 95       	ror	r23
    8a7c:	67 95       	ror	r22
    8a7e:	b1 1d       	adc	r27, r1
    8a80:	93 95       	inc	r25
    8a82:	96 39       	cpi	r25, 0x96	; 150
    8a84:	c8 f3       	brcs	.-14     	; 0x8a78 <__fp_trunc+0x1e>
    8a86:	08 95       	ret

00008a88 <__fp_zero>:
    8a88:	e8 94       	clt

00008a8a <__fp_szero>:
    8a8a:	bb 27       	eor	r27, r27
    8a8c:	66 27       	eor	r22, r22
    8a8e:	77 27       	eor	r23, r23
    8a90:	cb 01       	movw	r24, r22
    8a92:	97 f9       	bld	r25, 7
    8a94:	08 95       	ret

00008a96 <__gesf2>:
    8a96:	11 df       	rcall	.-478    	; 0x88ba <__fp_cmp>
    8a98:	08 f4       	brcc	.+2      	; 0x8a9c <__gesf2+0x6>
    8a9a:	8f ef       	ldi	r24, 0xFF	; 255
    8a9c:	08 95       	ret

00008a9e <__mulsf3>:
    8a9e:	0b d0       	rcall	.+22     	; 0x8ab6 <__mulsf3x>
    8aa0:	98 cf       	rjmp	.-208    	; 0x89d2 <__fp_round>
    8aa2:	61 df       	rcall	.-318    	; 0x8966 <__fp_pscA>
    8aa4:	28 f0       	brcs	.+10     	; 0x8ab0 <__mulsf3+0x12>
    8aa6:	66 df       	rcall	.-308    	; 0x8974 <__fp_pscB>
    8aa8:	18 f0       	brcs	.+6      	; 0x8ab0 <__mulsf3+0x12>
    8aaa:	95 23       	and	r25, r21
    8aac:	09 f0       	breq	.+2      	; 0x8ab0 <__mulsf3+0x12>
    8aae:	29 cf       	rjmp	.-430    	; 0x8902 <__fp_inf>
    8ab0:	57 cf       	rjmp	.-338    	; 0x8960 <__fp_nan>
    8ab2:	11 24       	eor	r1, r1
    8ab4:	ea cf       	rjmp	.-44     	; 0x8a8a <__fp_szero>

00008ab6 <__mulsf3x>:
    8ab6:	af df       	rcall	.-162    	; 0x8a16 <__fp_split3>
    8ab8:	a0 f3       	brcs	.-24     	; 0x8aa2 <__mulsf3+0x4>

00008aba <__mulsf3_pse>:
    8aba:	95 9f       	mul	r25, r21
    8abc:	d1 f3       	breq	.-12     	; 0x8ab2 <__mulsf3+0x14>
    8abe:	95 0f       	add	r25, r21
    8ac0:	50 e0       	ldi	r21, 0x00	; 0
    8ac2:	55 1f       	adc	r21, r21
    8ac4:	62 9f       	mul	r22, r18
    8ac6:	f0 01       	movw	r30, r0
    8ac8:	72 9f       	mul	r23, r18
    8aca:	bb 27       	eor	r27, r27
    8acc:	f0 0d       	add	r31, r0
    8ace:	b1 1d       	adc	r27, r1
    8ad0:	63 9f       	mul	r22, r19
    8ad2:	aa 27       	eor	r26, r26
    8ad4:	f0 0d       	add	r31, r0
    8ad6:	b1 1d       	adc	r27, r1
    8ad8:	aa 1f       	adc	r26, r26
    8ada:	64 9f       	mul	r22, r20
    8adc:	66 27       	eor	r22, r22
    8ade:	b0 0d       	add	r27, r0
    8ae0:	a1 1d       	adc	r26, r1
    8ae2:	66 1f       	adc	r22, r22
    8ae4:	82 9f       	mul	r24, r18
    8ae6:	22 27       	eor	r18, r18
    8ae8:	b0 0d       	add	r27, r0
    8aea:	a1 1d       	adc	r26, r1
    8aec:	62 1f       	adc	r22, r18
    8aee:	73 9f       	mul	r23, r19
    8af0:	b0 0d       	add	r27, r0
    8af2:	a1 1d       	adc	r26, r1
    8af4:	62 1f       	adc	r22, r18
    8af6:	83 9f       	mul	r24, r19
    8af8:	a0 0d       	add	r26, r0
    8afa:	61 1d       	adc	r22, r1
    8afc:	22 1f       	adc	r18, r18
    8afe:	74 9f       	mul	r23, r20
    8b00:	33 27       	eor	r19, r19
    8b02:	a0 0d       	add	r26, r0
    8b04:	61 1d       	adc	r22, r1
    8b06:	23 1f       	adc	r18, r19
    8b08:	84 9f       	mul	r24, r20
    8b0a:	60 0d       	add	r22, r0
    8b0c:	21 1d       	adc	r18, r1
    8b0e:	82 2f       	mov	r24, r18
    8b10:	76 2f       	mov	r23, r22
    8b12:	6a 2f       	mov	r22, r26
    8b14:	11 24       	eor	r1, r1
    8b16:	9f 57       	subi	r25, 0x7F	; 127
    8b18:	50 40       	sbci	r21, 0x00	; 0
    8b1a:	8a f0       	brmi	.+34     	; 0x8b3e <__mulsf3_pse+0x84>
    8b1c:	e1 f0       	breq	.+56     	; 0x8b56 <__mulsf3_pse+0x9c>
    8b1e:	88 23       	and	r24, r24
    8b20:	4a f0       	brmi	.+18     	; 0x8b34 <__mulsf3_pse+0x7a>
    8b22:	ee 0f       	add	r30, r30
    8b24:	ff 1f       	adc	r31, r31
    8b26:	bb 1f       	adc	r27, r27
    8b28:	66 1f       	adc	r22, r22
    8b2a:	77 1f       	adc	r23, r23
    8b2c:	88 1f       	adc	r24, r24
    8b2e:	91 50       	subi	r25, 0x01	; 1
    8b30:	50 40       	sbci	r21, 0x00	; 0
    8b32:	a9 f7       	brne	.-22     	; 0x8b1e <__mulsf3_pse+0x64>
    8b34:	9e 3f       	cpi	r25, 0xFE	; 254
    8b36:	51 05       	cpc	r21, r1
    8b38:	70 f0       	brcs	.+28     	; 0x8b56 <__mulsf3_pse+0x9c>
    8b3a:	e3 ce       	rjmp	.-570    	; 0x8902 <__fp_inf>
    8b3c:	a6 cf       	rjmp	.-180    	; 0x8a8a <__fp_szero>
    8b3e:	5f 3f       	cpi	r21, 0xFF	; 255
    8b40:	ec f3       	brlt	.-6      	; 0x8b3c <__mulsf3_pse+0x82>
    8b42:	98 3e       	cpi	r25, 0xE8	; 232
    8b44:	dc f3       	brlt	.-10     	; 0x8b3c <__mulsf3_pse+0x82>
    8b46:	86 95       	lsr	r24
    8b48:	77 95       	ror	r23
    8b4a:	67 95       	ror	r22
    8b4c:	b7 95       	ror	r27
    8b4e:	f7 95       	ror	r31
    8b50:	e7 95       	ror	r30
    8b52:	9f 5f       	subi	r25, 0xFF	; 255
    8b54:	c1 f7       	brne	.-16     	; 0x8b46 <__mulsf3_pse+0x8c>
    8b56:	fe 2b       	or	r31, r30
    8b58:	88 0f       	add	r24, r24
    8b5a:	91 1d       	adc	r25, r1
    8b5c:	96 95       	lsr	r25
    8b5e:	87 95       	ror	r24
    8b60:	97 f9       	bld	r25, 7
    8b62:	08 95       	ret

00008b64 <pow>:
    8b64:	fa 01       	movw	r30, r20
    8b66:	ee 0f       	add	r30, r30
    8b68:	ff 1f       	adc	r31, r31
    8b6a:	30 96       	adiw	r30, 0x00	; 0
    8b6c:	21 05       	cpc	r18, r1
    8b6e:	31 05       	cpc	r19, r1
    8b70:	99 f1       	breq	.+102    	; 0x8bd8 <pow+0x74>
    8b72:	61 15       	cp	r22, r1
    8b74:	71 05       	cpc	r23, r1
    8b76:	61 f4       	brne	.+24     	; 0x8b90 <pow+0x2c>
    8b78:	80 38       	cpi	r24, 0x80	; 128
    8b7a:	bf e3       	ldi	r27, 0x3F	; 63
    8b7c:	9b 07       	cpc	r25, r27
    8b7e:	49 f1       	breq	.+82     	; 0x8bd2 <pow+0x6e>
    8b80:	68 94       	set
    8b82:	90 38       	cpi	r25, 0x80	; 128
    8b84:	81 05       	cpc	r24, r1
    8b86:	61 f0       	breq	.+24     	; 0x8ba0 <pow+0x3c>
    8b88:	80 38       	cpi	r24, 0x80	; 128
    8b8a:	bf ef       	ldi	r27, 0xFF	; 255
    8b8c:	9b 07       	cpc	r25, r27
    8b8e:	41 f0       	breq	.+16     	; 0x8ba0 <pow+0x3c>
    8b90:	99 23       	and	r25, r25
    8b92:	42 f5       	brpl	.+80     	; 0x8be4 <pow+0x80>
    8b94:	ff 3f       	cpi	r31, 0xFF	; 255
    8b96:	e1 05       	cpc	r30, r1
    8b98:	31 05       	cpc	r19, r1
    8b9a:	21 05       	cpc	r18, r1
    8b9c:	11 f1       	breq	.+68     	; 0x8be2 <pow+0x7e>
    8b9e:	e8 94       	clt
    8ba0:	08 94       	sec
    8ba2:	e7 95       	ror	r30
    8ba4:	d9 01       	movw	r26, r18
    8ba6:	aa 23       	and	r26, r26
    8ba8:	29 f4       	brne	.+10     	; 0x8bb4 <pow+0x50>
    8baa:	ab 2f       	mov	r26, r27
    8bac:	be 2f       	mov	r27, r30
    8bae:	f8 5f       	subi	r31, 0xF8	; 248
    8bb0:	d0 f3       	brcs	.-12     	; 0x8ba6 <pow+0x42>
    8bb2:	10 c0       	rjmp	.+32     	; 0x8bd4 <pow+0x70>
    8bb4:	ff 5f       	subi	r31, 0xFF	; 255
    8bb6:	70 f4       	brcc	.+28     	; 0x8bd4 <pow+0x70>
    8bb8:	a6 95       	lsr	r26
    8bba:	e0 f7       	brcc	.-8      	; 0x8bb4 <pow+0x50>
    8bbc:	f7 39       	cpi	r31, 0x97	; 151
    8bbe:	50 f0       	brcs	.+20     	; 0x8bd4 <pow+0x70>
    8bc0:	19 f0       	breq	.+6      	; 0x8bc8 <pow+0x64>
    8bc2:	ff 3a       	cpi	r31, 0xAF	; 175
    8bc4:	38 f4       	brcc	.+14     	; 0x8bd4 <pow+0x70>
    8bc6:	9f 77       	andi	r25, 0x7F	; 127
    8bc8:	9f 93       	push	r25
    8bca:	0c d0       	rcall	.+24     	; 0x8be4 <pow+0x80>
    8bcc:	0f 90       	pop	r0
    8bce:	07 fc       	sbrc	r0, 7
    8bd0:	90 58       	subi	r25, 0x80	; 128
    8bd2:	08 95       	ret
    8bd4:	3e f0       	brts	.+14     	; 0x8be4 <pow+0x80>
    8bd6:	c4 ce       	rjmp	.-632    	; 0x8960 <__fp_nan>
    8bd8:	60 e0       	ldi	r22, 0x00	; 0
    8bda:	70 e0       	ldi	r23, 0x00	; 0
    8bdc:	80 e8       	ldi	r24, 0x80	; 128
    8bde:	9f e3       	ldi	r25, 0x3F	; 63
    8be0:	08 95       	ret
    8be2:	4f e7       	ldi	r20, 0x7F	; 127
    8be4:	9f 77       	andi	r25, 0x7F	; 127
    8be6:	5f 93       	push	r21
    8be8:	4f 93       	push	r20
    8bea:	3f 93       	push	r19
    8bec:	2f 93       	push	r18
    8bee:	fe d0       	rcall	.+508    	; 0x8dec <log>
    8bf0:	2f 91       	pop	r18
    8bf2:	3f 91       	pop	r19
    8bf4:	4f 91       	pop	r20
    8bf6:	5f 91       	pop	r21
    8bf8:	52 df       	rcall	.-348    	; 0x8a9e <__mulsf3>
    8bfa:	4d c0       	rjmp	.+154    	; 0x8c96 <exp>

00008bfc <sin>:
    8bfc:	9f 93       	push	r25
    8bfe:	c2 de       	rcall	.-636    	; 0x8984 <__fp_rempio2>
    8c00:	0f 90       	pop	r0
    8c02:	07 fc       	sbrc	r0, 7
    8c04:	ee 5f       	subi	r30, 0xFE	; 254
    8c06:	f6 ce       	rjmp	.-532    	; 0x89f4 <__fp_sinus>
    8c08:	11 f4       	brne	.+4      	; 0x8c0e <sin+0x12>
    8c0a:	0e f4       	brtc	.+2      	; 0x8c0e <sin+0x12>
    8c0c:	a9 ce       	rjmp	.-686    	; 0x8960 <__fp_nan>
    8c0e:	9a ce       	rjmp	.-716    	; 0x8944 <__fp_mpack>

00008c10 <sqrt>:
    8c10:	0a df       	rcall	.-492    	; 0x8a26 <__fp_splitA>
    8c12:	d0 f3       	brcs	.-12     	; 0x8c08 <sin+0xc>
    8c14:	99 23       	and	r25, r25
    8c16:	d9 f3       	breq	.-10     	; 0x8c0e <sin+0x12>
    8c18:	ce f3       	brts	.-14     	; 0x8c0c <sin+0x10>
    8c1a:	9f 57       	subi	r25, 0x7F	; 127
    8c1c:	55 0b       	sbc	r21, r21
    8c1e:	87 ff       	sbrs	r24, 7
    8c20:	66 d0       	rcall	.+204    	; 0x8cee <__fp_norm2>
    8c22:	00 24       	eor	r0, r0
    8c24:	a0 e6       	ldi	r26, 0x60	; 96
    8c26:	40 ea       	ldi	r20, 0xA0	; 160
    8c28:	90 01       	movw	r18, r0
    8c2a:	80 58       	subi	r24, 0x80	; 128
    8c2c:	56 95       	lsr	r21
    8c2e:	97 95       	ror	r25
    8c30:	28 f4       	brcc	.+10     	; 0x8c3c <sqrt+0x2c>
    8c32:	80 5c       	subi	r24, 0xC0	; 192
    8c34:	66 0f       	add	r22, r22
    8c36:	77 1f       	adc	r23, r23
    8c38:	88 1f       	adc	r24, r24
    8c3a:	20 f0       	brcs	.+8      	; 0x8c44 <sqrt+0x34>
    8c3c:	26 17       	cp	r18, r22
    8c3e:	37 07       	cpc	r19, r23
    8c40:	48 07       	cpc	r20, r24
    8c42:	30 f4       	brcc	.+12     	; 0x8c50 <sqrt+0x40>
    8c44:	62 1b       	sub	r22, r18
    8c46:	73 0b       	sbc	r23, r19
    8c48:	84 0b       	sbc	r24, r20
    8c4a:	20 29       	or	r18, r0
    8c4c:	31 29       	or	r19, r1
    8c4e:	4a 2b       	or	r20, r26
    8c50:	a6 95       	lsr	r26
    8c52:	17 94       	ror	r1
    8c54:	07 94       	ror	r0
    8c56:	20 25       	eor	r18, r0
    8c58:	31 25       	eor	r19, r1
    8c5a:	4a 27       	eor	r20, r26
    8c5c:	58 f7       	brcc	.-42     	; 0x8c34 <sqrt+0x24>
    8c5e:	66 0f       	add	r22, r22
    8c60:	77 1f       	adc	r23, r23
    8c62:	88 1f       	adc	r24, r24
    8c64:	20 f0       	brcs	.+8      	; 0x8c6e <sqrt+0x5e>
    8c66:	26 17       	cp	r18, r22
    8c68:	37 07       	cpc	r19, r23
    8c6a:	48 07       	cpc	r20, r24
    8c6c:	30 f4       	brcc	.+12     	; 0x8c7a <sqrt+0x6a>
    8c6e:	62 0b       	sbc	r22, r18
    8c70:	73 0b       	sbc	r23, r19
    8c72:	84 0b       	sbc	r24, r20
    8c74:	20 0d       	add	r18, r0
    8c76:	31 1d       	adc	r19, r1
    8c78:	41 1d       	adc	r20, r1
    8c7a:	a0 95       	com	r26
    8c7c:	81 f7       	brne	.-32     	; 0x8c5e <sqrt+0x4e>
    8c7e:	b9 01       	movw	r22, r18
    8c80:	84 2f       	mov	r24, r20
    8c82:	91 58       	subi	r25, 0x81	; 129
    8c84:	88 0f       	add	r24, r24
    8c86:	96 95       	lsr	r25
    8c88:	87 95       	ror	r24
    8c8a:	08 95       	ret
    8c8c:	19 f4       	brne	.+6      	; 0x8c94 <sqrt+0x84>
    8c8e:	0e f0       	brts	.+2      	; 0x8c92 <sqrt+0x82>
    8c90:	38 ce       	rjmp	.-912    	; 0x8902 <__fp_inf>
    8c92:	fa ce       	rjmp	.-524    	; 0x8a88 <__fp_zero>
    8c94:	65 ce       	rjmp	.-822    	; 0x8960 <__fp_nan>

00008c96 <exp>:
    8c96:	c7 de       	rcall	.-626    	; 0x8a26 <__fp_splitA>
    8c98:	c8 f3       	brcs	.-14     	; 0x8c8c <sqrt+0x7c>
    8c9a:	96 38       	cpi	r25, 0x86	; 134
    8c9c:	c0 f7       	brcc	.-16     	; 0x8c8e <sqrt+0x7e>
    8c9e:	07 f8       	bld	r0, 7
    8ca0:	0f 92       	push	r0
    8ca2:	e8 94       	clt
    8ca4:	2b e3       	ldi	r18, 0x3B	; 59
    8ca6:	3a ea       	ldi	r19, 0xAA	; 170
    8ca8:	48 eb       	ldi	r20, 0xB8	; 184
    8caa:	5f e7       	ldi	r21, 0x7F	; 127
    8cac:	06 df       	rcall	.-500    	; 0x8aba <__mulsf3_pse>
    8cae:	0f 92       	push	r0
    8cb0:	0f 92       	push	r0
    8cb2:	0f 92       	push	r0
    8cb4:	4d b7       	in	r20, 0x3d	; 61
    8cb6:	5e b7       	in	r21, 0x3e	; 62
    8cb8:	0f 92       	push	r0
    8cba:	d8 d0       	rcall	.+432    	; 0x8e6c <modf>
    8cbc:	e2 e0       	ldi	r30, 0x02	; 2
    8cbe:	f1 e0       	ldi	r31, 0x01	; 1
    8cc0:	1d d0       	rcall	.+58     	; 0x8cfc <__fp_powser>
    8cc2:	4f 91       	pop	r20
    8cc4:	5f 91       	pop	r21
    8cc6:	ef 91       	pop	r30
    8cc8:	ff 91       	pop	r31
    8cca:	e5 95       	asr	r30
    8ccc:	ee 1f       	adc	r30, r30
    8cce:	ff 1f       	adc	r31, r31
    8cd0:	49 f0       	breq	.+18     	; 0x8ce4 <exp+0x4e>
    8cd2:	fe 57       	subi	r31, 0x7E	; 126
    8cd4:	e0 68       	ori	r30, 0x80	; 128
    8cd6:	44 27       	eor	r20, r20
    8cd8:	ee 0f       	add	r30, r30
    8cda:	44 1f       	adc	r20, r20
    8cdc:	fa 95       	dec	r31
    8cde:	e1 f7       	brne	.-8      	; 0x8cd8 <exp+0x42>
    8ce0:	41 95       	neg	r20
    8ce2:	55 0b       	sbc	r21, r21
    8ce4:	4a d0       	rcall	.+148    	; 0x8d7a <ldexp>
    8ce6:	0f 90       	pop	r0
    8ce8:	07 fe       	sbrs	r0, 7
    8cea:	3e c0       	rjmp	.+124    	; 0x8d68 <inverse>
    8cec:	08 95       	ret

00008cee <__fp_norm2>:
    8cee:	91 50       	subi	r25, 0x01	; 1
    8cf0:	50 40       	sbci	r21, 0x00	; 0
    8cf2:	66 0f       	add	r22, r22
    8cf4:	77 1f       	adc	r23, r23
    8cf6:	88 1f       	adc	r24, r24
    8cf8:	d2 f7       	brpl	.-12     	; 0x8cee <__fp_norm2>
    8cfa:	08 95       	ret

00008cfc <__fp_powser>:
    8cfc:	df 93       	push	r29
    8cfe:	cf 93       	push	r28
    8d00:	1f 93       	push	r17
    8d02:	0f 93       	push	r16
    8d04:	ff 92       	push	r15
    8d06:	ef 92       	push	r14
    8d08:	df 92       	push	r13
    8d0a:	7b 01       	movw	r14, r22
    8d0c:	8c 01       	movw	r16, r24
    8d0e:	68 94       	set
    8d10:	05 c0       	rjmp	.+10     	; 0x8d1c <__fp_powser+0x20>
    8d12:	da 2e       	mov	r13, r26
    8d14:	ef 01       	movw	r28, r30
    8d16:	cf de       	rcall	.-610    	; 0x8ab6 <__mulsf3x>
    8d18:	fe 01       	movw	r30, r28
    8d1a:	e8 94       	clt
    8d1c:	a5 91       	lpm	r26, Z+
    8d1e:	25 91       	lpm	r18, Z+
    8d20:	35 91       	lpm	r19, Z+
    8d22:	45 91       	lpm	r20, Z+
    8d24:	55 91       	lpm	r21, Z+
    8d26:	ae f3       	brts	.-22     	; 0x8d12 <__fp_powser+0x16>
    8d28:	ef 01       	movw	r28, r30
    8d2a:	84 dc       	rcall	.-1784   	; 0x8634 <__addsf3x>
    8d2c:	fe 01       	movw	r30, r28
    8d2e:	97 01       	movw	r18, r14
    8d30:	a8 01       	movw	r20, r16
    8d32:	da 94       	dec	r13
    8d34:	79 f7       	brne	.-34     	; 0x8d14 <__fp_powser+0x18>
    8d36:	df 90       	pop	r13
    8d38:	ef 90       	pop	r14
    8d3a:	ff 90       	pop	r15
    8d3c:	0f 91       	pop	r16
    8d3e:	1f 91       	pop	r17
    8d40:	cf 91       	pop	r28
    8d42:	df 91       	pop	r29
    8d44:	08 95       	ret

00008d46 <__fp_powsodd>:
    8d46:	9f 93       	push	r25
    8d48:	8f 93       	push	r24
    8d4a:	7f 93       	push	r23
    8d4c:	6f 93       	push	r22
    8d4e:	ff 93       	push	r31
    8d50:	ef 93       	push	r30
    8d52:	9b 01       	movw	r18, r22
    8d54:	ac 01       	movw	r20, r24
    8d56:	a3 de       	rcall	.-698    	; 0x8a9e <__mulsf3>
    8d58:	ef 91       	pop	r30
    8d5a:	ff 91       	pop	r31
    8d5c:	cf df       	rcall	.-98     	; 0x8cfc <__fp_powser>
    8d5e:	2f 91       	pop	r18
    8d60:	3f 91       	pop	r19
    8d62:	4f 91       	pop	r20
    8d64:	5f 91       	pop	r21
    8d66:	9b ce       	rjmp	.-714    	; 0x8a9e <__mulsf3>

00008d68 <inverse>:
    8d68:	9b 01       	movw	r18, r22
    8d6a:	ac 01       	movw	r20, r24
    8d6c:	60 e0       	ldi	r22, 0x00	; 0
    8d6e:	70 e0       	ldi	r23, 0x00	; 0
    8d70:	80 e8       	ldi	r24, 0x80	; 128
    8d72:	9f e3       	ldi	r25, 0x3F	; 63
    8d74:	b9 cc       	rjmp	.-1678   	; 0x86e8 <__divsf3>
    8d76:	c5 cd       	rjmp	.-1142   	; 0x8902 <__fp_inf>
    8d78:	e5 cd       	rjmp	.-1078   	; 0x8944 <__fp_mpack>

00008d7a <ldexp>:
    8d7a:	55 de       	rcall	.-854    	; 0x8a26 <__fp_splitA>
    8d7c:	e8 f3       	brcs	.-6      	; 0x8d78 <inverse+0x10>
    8d7e:	99 23       	and	r25, r25
    8d80:	d9 f3       	breq	.-10     	; 0x8d78 <inverse+0x10>
    8d82:	94 0f       	add	r25, r20
    8d84:	51 1d       	adc	r21, r1
    8d86:	bb f3       	brvs	.-18     	; 0x8d76 <inverse+0xe>
    8d88:	91 50       	subi	r25, 0x01	; 1
    8d8a:	50 40       	sbci	r21, 0x00	; 0
    8d8c:	94 f0       	brlt	.+36     	; 0x8db2 <ldexp+0x38>
    8d8e:	59 f0       	breq	.+22     	; 0x8da6 <ldexp+0x2c>
    8d90:	88 23       	and	r24, r24
    8d92:	32 f0       	brmi	.+12     	; 0x8da0 <ldexp+0x26>
    8d94:	66 0f       	add	r22, r22
    8d96:	77 1f       	adc	r23, r23
    8d98:	88 1f       	adc	r24, r24
    8d9a:	91 50       	subi	r25, 0x01	; 1
    8d9c:	50 40       	sbci	r21, 0x00	; 0
    8d9e:	c1 f7       	brne	.-16     	; 0x8d90 <ldexp+0x16>
    8da0:	9e 3f       	cpi	r25, 0xFE	; 254
    8da2:	51 05       	cpc	r21, r1
    8da4:	44 f7       	brge	.-48     	; 0x8d76 <inverse+0xe>
    8da6:	88 0f       	add	r24, r24
    8da8:	91 1d       	adc	r25, r1
    8daa:	96 95       	lsr	r25
    8dac:	87 95       	ror	r24
    8dae:	97 f9       	bld	r25, 7
    8db0:	08 95       	ret
    8db2:	5f 3f       	cpi	r21, 0xFF	; 255
    8db4:	ac f0       	brlt	.+42     	; 0x8de0 <ldexp+0x66>
    8db6:	98 3e       	cpi	r25, 0xE8	; 232
    8db8:	9c f0       	brlt	.+38     	; 0x8de0 <ldexp+0x66>
    8dba:	bb 27       	eor	r27, r27
    8dbc:	86 95       	lsr	r24
    8dbe:	77 95       	ror	r23
    8dc0:	67 95       	ror	r22
    8dc2:	b7 95       	ror	r27
    8dc4:	08 f4       	brcc	.+2      	; 0x8dc8 <ldexp+0x4e>
    8dc6:	b1 60       	ori	r27, 0x01	; 1
    8dc8:	93 95       	inc	r25
    8dca:	c1 f7       	brne	.-16     	; 0x8dbc <ldexp+0x42>
    8dcc:	bb 0f       	add	r27, r27
    8dce:	58 f7       	brcc	.-42     	; 0x8da6 <ldexp+0x2c>
    8dd0:	11 f4       	brne	.+4      	; 0x8dd6 <ldexp+0x5c>
    8dd2:	60 ff       	sbrs	r22, 0
    8dd4:	e8 cf       	rjmp	.-48     	; 0x8da6 <ldexp+0x2c>
    8dd6:	6f 5f       	subi	r22, 0xFF	; 255
    8dd8:	7f 4f       	sbci	r23, 0xFF	; 255
    8dda:	8f 4f       	sbci	r24, 0xFF	; 255
    8ddc:	9f 4f       	sbci	r25, 0xFF	; 255
    8dde:	e3 cf       	rjmp	.-58     	; 0x8da6 <ldexp+0x2c>
    8de0:	54 ce       	rjmp	.-856    	; 0x8a8a <__fp_szero>
    8de2:	0e f0       	brts	.+2      	; 0x8de6 <ldexp+0x6c>
    8de4:	af cd       	rjmp	.-1186   	; 0x8944 <__fp_mpack>
    8de6:	bc cd       	rjmp	.-1160   	; 0x8960 <__fp_nan>
    8de8:	68 94       	set
    8dea:	8b cd       	rjmp	.-1258   	; 0x8902 <__fp_inf>

00008dec <log>:
    8dec:	1c de       	rcall	.-968    	; 0x8a26 <__fp_splitA>
    8dee:	c8 f3       	brcs	.-14     	; 0x8de2 <ldexp+0x68>
    8df0:	99 23       	and	r25, r25
    8df2:	d1 f3       	breq	.-12     	; 0x8de8 <ldexp+0x6e>
    8df4:	c6 f3       	brts	.-16     	; 0x8de6 <ldexp+0x6c>
    8df6:	df 93       	push	r29
    8df8:	cf 93       	push	r28
    8dfa:	1f 93       	push	r17
    8dfc:	0f 93       	push	r16
    8dfe:	ff 92       	push	r15
    8e00:	c9 2f       	mov	r28, r25
    8e02:	dd 27       	eor	r29, r29
    8e04:	88 23       	and	r24, r24
    8e06:	2a f0       	brmi	.+10     	; 0x8e12 <log+0x26>
    8e08:	21 97       	sbiw	r28, 0x01	; 1
    8e0a:	66 0f       	add	r22, r22
    8e0c:	77 1f       	adc	r23, r23
    8e0e:	88 1f       	adc	r24, r24
    8e10:	da f7       	brpl	.-10     	; 0x8e08 <log+0x1c>
    8e12:	20 e0       	ldi	r18, 0x00	; 0
    8e14:	30 e0       	ldi	r19, 0x00	; 0
    8e16:	40 e8       	ldi	r20, 0x80	; 128
    8e18:	5f eb       	ldi	r21, 0xBF	; 191
    8e1a:	9f e3       	ldi	r25, 0x3F	; 63
    8e1c:	88 39       	cpi	r24, 0x98	; 152
    8e1e:	20 f0       	brcs	.+8      	; 0x8e28 <log+0x3c>
    8e20:	80 3e       	cpi	r24, 0xE0	; 224
    8e22:	30 f0       	brcs	.+12     	; 0x8e30 <log+0x44>
    8e24:	21 96       	adiw	r28, 0x01	; 1
    8e26:	8f 77       	andi	r24, 0x7F	; 127
    8e28:	f4 db       	rcall	.-2072   	; 0x8612 <__addsf3>
    8e2a:	ea e2       	ldi	r30, 0x2A	; 42
    8e2c:	f1 e0       	ldi	r31, 0x01	; 1
    8e2e:	03 c0       	rjmp	.+6      	; 0x8e36 <log+0x4a>
    8e30:	f0 db       	rcall	.-2080   	; 0x8612 <__addsf3>
    8e32:	e7 e5       	ldi	r30, 0x57	; 87
    8e34:	f1 e0       	ldi	r31, 0x01	; 1
    8e36:	62 df       	rcall	.-316    	; 0x8cfc <__fp_powser>
    8e38:	8b 01       	movw	r16, r22
    8e3a:	be 01       	movw	r22, r28
    8e3c:	ec 01       	movw	r28, r24
    8e3e:	fb 2e       	mov	r15, r27
    8e40:	6f 57       	subi	r22, 0x7F	; 127
    8e42:	71 09       	sbc	r23, r1
    8e44:	75 95       	asr	r23
    8e46:	77 1f       	adc	r23, r23
    8e48:	88 0b       	sbc	r24, r24
    8e4a:	99 0b       	sbc	r25, r25
    8e4c:	e8 dc       	rcall	.-1584   	; 0x881e <__floatsisf>
    8e4e:	28 e1       	ldi	r18, 0x18	; 24
    8e50:	32 e7       	ldi	r19, 0x72	; 114
    8e52:	41 e3       	ldi	r20, 0x31	; 49
    8e54:	5f e3       	ldi	r21, 0x3F	; 63
    8e56:	2f de       	rcall	.-930    	; 0x8ab6 <__mulsf3x>
    8e58:	af 2d       	mov	r26, r15
    8e5a:	98 01       	movw	r18, r16
    8e5c:	ae 01       	movw	r20, r28
    8e5e:	ff 90       	pop	r15
    8e60:	0f 91       	pop	r16
    8e62:	1f 91       	pop	r17
    8e64:	cf 91       	pop	r28
    8e66:	df 91       	pop	r29
    8e68:	e5 db       	rcall	.-2102   	; 0x8634 <__addsf3x>
    8e6a:	b3 cd       	rjmp	.-1178   	; 0x89d2 <__fp_round>

00008e6c <modf>:
    8e6c:	fa 01       	movw	r30, r20
    8e6e:	dc 01       	movw	r26, r24
    8e70:	aa 0f       	add	r26, r26
    8e72:	bb 1f       	adc	r27, r27
    8e74:	9b 01       	movw	r18, r22
    8e76:	ac 01       	movw	r20, r24
    8e78:	bf 57       	subi	r27, 0x7F	; 127
    8e7a:	28 f4       	brcc	.+10     	; 0x8e86 <modf+0x1a>
    8e7c:	22 27       	eor	r18, r18
    8e7e:	33 27       	eor	r19, r19
    8e80:	44 27       	eor	r20, r20
    8e82:	50 78       	andi	r21, 0x80	; 128
    8e84:	1f c0       	rjmp	.+62     	; 0x8ec4 <modf+0x58>
    8e86:	b7 51       	subi	r27, 0x17	; 23
    8e88:	88 f4       	brcc	.+34     	; 0x8eac <modf+0x40>
    8e8a:	ab 2f       	mov	r26, r27
    8e8c:	00 24       	eor	r0, r0
    8e8e:	46 95       	lsr	r20
    8e90:	37 95       	ror	r19
    8e92:	27 95       	ror	r18
    8e94:	01 1c       	adc	r0, r1
    8e96:	a3 95       	inc	r26
    8e98:	d2 f3       	brmi	.-12     	; 0x8e8e <modf+0x22>
    8e9a:	00 20       	and	r0, r0
    8e9c:	69 f0       	breq	.+26     	; 0x8eb8 <modf+0x4c>
    8e9e:	22 0f       	add	r18, r18
    8ea0:	33 1f       	adc	r19, r19
    8ea2:	44 1f       	adc	r20, r20
    8ea4:	b3 95       	inc	r27
    8ea6:	da f3       	brmi	.-10     	; 0x8e9e <modf+0x32>
    8ea8:	0d d0       	rcall	.+26     	; 0x8ec4 <modf+0x58>
    8eaa:	b2 cb       	rjmp	.-2204   	; 0x8610 <__subsf3>
    8eac:	61 30       	cpi	r22, 0x01	; 1
    8eae:	71 05       	cpc	r23, r1
    8eb0:	a0 e8       	ldi	r26, 0x80	; 128
    8eb2:	8a 07       	cpc	r24, r26
    8eb4:	b9 46       	sbci	r27, 0x69	; 105
    8eb6:	30 f4       	brcc	.+12     	; 0x8ec4 <modf+0x58>
    8eb8:	9b 01       	movw	r18, r22
    8eba:	ac 01       	movw	r20, r24
    8ebc:	66 27       	eor	r22, r22
    8ebe:	77 27       	eor	r23, r23
    8ec0:	88 27       	eor	r24, r24
    8ec2:	90 78       	andi	r25, 0x80	; 128
    8ec4:	30 96       	adiw	r30, 0x00	; 0
    8ec6:	21 f0       	breq	.+8      	; 0x8ed0 <modf+0x64>
    8ec8:	20 83       	st	Z, r18
    8eca:	31 83       	std	Z+1, r19	; 0x01
    8ecc:	42 83       	std	Z+2, r20	; 0x02
    8ece:	53 83       	std	Z+3, r21	; 0x03
    8ed0:	08 95       	ret

00008ed2 <__divmodhi4>:
    8ed2:	97 fb       	bst	r25, 7
    8ed4:	07 2e       	mov	r0, r23
    8ed6:	16 f4       	brtc	.+4      	; 0x8edc <__divmodhi4+0xa>
    8ed8:	00 94       	com	r0
    8eda:	07 d0       	rcall	.+14     	; 0x8eea <__divmodhi4_neg1>
    8edc:	77 fd       	sbrc	r23, 7
    8ede:	09 d0       	rcall	.+18     	; 0x8ef2 <__divmodhi4_neg2>
    8ee0:	0e 94 9f 47 	call	0x8f3e	; 0x8f3e <__udivmodhi4>
    8ee4:	07 fc       	sbrc	r0, 7
    8ee6:	05 d0       	rcall	.+10     	; 0x8ef2 <__divmodhi4_neg2>
    8ee8:	3e f4       	brtc	.+14     	; 0x8ef8 <__divmodhi4_exit>

00008eea <__divmodhi4_neg1>:
    8eea:	90 95       	com	r25
    8eec:	81 95       	neg	r24
    8eee:	9f 4f       	sbci	r25, 0xFF	; 255
    8ef0:	08 95       	ret

00008ef2 <__divmodhi4_neg2>:
    8ef2:	70 95       	com	r23
    8ef4:	61 95       	neg	r22
    8ef6:	7f 4f       	sbci	r23, 0xFF	; 255

00008ef8 <__divmodhi4_exit>:
    8ef8:	08 95       	ret

00008efa <__udivmodsi4>:
    8efa:	a1 e2       	ldi	r26, 0x21	; 33
    8efc:	1a 2e       	mov	r1, r26
    8efe:	aa 1b       	sub	r26, r26
    8f00:	bb 1b       	sub	r27, r27
    8f02:	fd 01       	movw	r30, r26
    8f04:	0d c0       	rjmp	.+26     	; 0x8f20 <__udivmodsi4_ep>

00008f06 <__udivmodsi4_loop>:
    8f06:	aa 1f       	adc	r26, r26
    8f08:	bb 1f       	adc	r27, r27
    8f0a:	ee 1f       	adc	r30, r30
    8f0c:	ff 1f       	adc	r31, r31
    8f0e:	a2 17       	cp	r26, r18
    8f10:	b3 07       	cpc	r27, r19
    8f12:	e4 07       	cpc	r30, r20
    8f14:	f5 07       	cpc	r31, r21
    8f16:	20 f0       	brcs	.+8      	; 0x8f20 <__udivmodsi4_ep>
    8f18:	a2 1b       	sub	r26, r18
    8f1a:	b3 0b       	sbc	r27, r19
    8f1c:	e4 0b       	sbc	r30, r20
    8f1e:	f5 0b       	sbc	r31, r21

00008f20 <__udivmodsi4_ep>:
    8f20:	66 1f       	adc	r22, r22
    8f22:	77 1f       	adc	r23, r23
    8f24:	88 1f       	adc	r24, r24
    8f26:	99 1f       	adc	r25, r25
    8f28:	1a 94       	dec	r1
    8f2a:	69 f7       	brne	.-38     	; 0x8f06 <__udivmodsi4_loop>
    8f2c:	60 95       	com	r22
    8f2e:	70 95       	com	r23
    8f30:	80 95       	com	r24
    8f32:	90 95       	com	r25
    8f34:	9b 01       	movw	r18, r22
    8f36:	ac 01       	movw	r20, r24
    8f38:	bd 01       	movw	r22, r26
    8f3a:	cf 01       	movw	r24, r30
    8f3c:	08 95       	ret

00008f3e <__udivmodhi4>:
    8f3e:	aa 1b       	sub	r26, r26
    8f40:	bb 1b       	sub	r27, r27
    8f42:	51 e1       	ldi	r21, 0x11	; 17
    8f44:	07 c0       	rjmp	.+14     	; 0x8f54 <__udivmodhi4_ep>

00008f46 <__udivmodhi4_loop>:
    8f46:	aa 1f       	adc	r26, r26
    8f48:	bb 1f       	adc	r27, r27
    8f4a:	a6 17       	cp	r26, r22
    8f4c:	b7 07       	cpc	r27, r23
    8f4e:	10 f0       	brcs	.+4      	; 0x8f54 <__udivmodhi4_ep>
    8f50:	a6 1b       	sub	r26, r22
    8f52:	b7 0b       	sbc	r27, r23

00008f54 <__udivmodhi4_ep>:
    8f54:	88 1f       	adc	r24, r24
    8f56:	99 1f       	adc	r25, r25
    8f58:	5a 95       	dec	r21
    8f5a:	a9 f7       	brne	.-22     	; 0x8f46 <__udivmodhi4_loop>
    8f5c:	80 95       	com	r24
    8f5e:	90 95       	com	r25
    8f60:	bc 01       	movw	r22, r24
    8f62:	cd 01       	movw	r24, r26
    8f64:	08 95       	ret

00008f66 <malloc>:
    8f66:	0f 93       	push	r16
    8f68:	1f 93       	push	r17
    8f6a:	cf 93       	push	r28
    8f6c:	df 93       	push	r29
    8f6e:	82 30       	cpi	r24, 0x02	; 2
    8f70:	91 05       	cpc	r25, r1
    8f72:	10 f4       	brcc	.+4      	; 0x8f78 <malloc+0x12>
    8f74:	82 e0       	ldi	r24, 0x02	; 2
    8f76:	90 e0       	ldi	r25, 0x00	; 0
    8f78:	e0 91 9e 02 	lds	r30, 0x029E
    8f7c:	f0 91 9f 02 	lds	r31, 0x029F
    8f80:	20 e0       	ldi	r18, 0x00	; 0
    8f82:	30 e0       	ldi	r19, 0x00	; 0
    8f84:	c0 e0       	ldi	r28, 0x00	; 0
    8f86:	d0 e0       	ldi	r29, 0x00	; 0
    8f88:	23 c0       	rjmp	.+70     	; 0x8fd0 <malloc+0x6a>
    8f8a:	40 81       	ld	r20, Z
    8f8c:	51 81       	ldd	r21, Z+1	; 0x01
    8f8e:	48 17       	cp	r20, r24
    8f90:	59 07       	cpc	r21, r25
    8f92:	a8 f0       	brcs	.+42     	; 0x8fbe <malloc+0x58>
    8f94:	48 17       	cp	r20, r24
    8f96:	59 07       	cpc	r21, r25
    8f98:	61 f4       	brne	.+24     	; 0x8fb2 <malloc+0x4c>
    8f9a:	82 81       	ldd	r24, Z+2	; 0x02
    8f9c:	93 81       	ldd	r25, Z+3	; 0x03
    8f9e:	20 97       	sbiw	r28, 0x00	; 0
    8fa0:	19 f0       	breq	.+6      	; 0x8fa8 <malloc+0x42>
    8fa2:	9b 83       	std	Y+3, r25	; 0x03
    8fa4:	8a 83       	std	Y+2, r24	; 0x02
    8fa6:	2e c0       	rjmp	.+92     	; 0x9004 <malloc+0x9e>
    8fa8:	90 93 9f 02 	sts	0x029F, r25
    8fac:	80 93 9e 02 	sts	0x029E, r24
    8fb0:	29 c0       	rjmp	.+82     	; 0x9004 <malloc+0x9e>
    8fb2:	21 15       	cp	r18, r1
    8fb4:	31 05       	cpc	r19, r1
    8fb6:	29 f0       	breq	.+10     	; 0x8fc2 <malloc+0x5c>
    8fb8:	42 17       	cp	r20, r18
    8fba:	53 07       	cpc	r21, r19
    8fbc:	10 f0       	brcs	.+4      	; 0x8fc2 <malloc+0x5c>
    8fbe:	a9 01       	movw	r20, r18
    8fc0:	02 c0       	rjmp	.+4      	; 0x8fc6 <malloc+0x60>
    8fc2:	be 01       	movw	r22, r28
    8fc4:	df 01       	movw	r26, r30
    8fc6:	02 81       	ldd	r16, Z+2	; 0x02
    8fc8:	13 81       	ldd	r17, Z+3	; 0x03
    8fca:	ef 01       	movw	r28, r30
    8fcc:	9a 01       	movw	r18, r20
    8fce:	f8 01       	movw	r30, r16
    8fd0:	30 97       	sbiw	r30, 0x00	; 0
    8fd2:	d9 f6       	brne	.-74     	; 0x8f8a <malloc+0x24>
    8fd4:	21 15       	cp	r18, r1
    8fd6:	31 05       	cpc	r19, r1
    8fd8:	09 f1       	breq	.+66     	; 0x901c <malloc+0xb6>
    8fda:	28 1b       	sub	r18, r24
    8fdc:	39 0b       	sbc	r19, r25
    8fde:	24 30       	cpi	r18, 0x04	; 4
    8fe0:	31 05       	cpc	r19, r1
    8fe2:	90 f4       	brcc	.+36     	; 0x9008 <malloc+0xa2>
    8fe4:	12 96       	adiw	r26, 0x02	; 2
    8fe6:	8d 91       	ld	r24, X+
    8fe8:	9c 91       	ld	r25, X
    8fea:	13 97       	sbiw	r26, 0x03	; 3
    8fec:	61 15       	cp	r22, r1
    8fee:	71 05       	cpc	r23, r1
    8ff0:	21 f0       	breq	.+8      	; 0x8ffa <malloc+0x94>
    8ff2:	fb 01       	movw	r30, r22
    8ff4:	93 83       	std	Z+3, r25	; 0x03
    8ff6:	82 83       	std	Z+2, r24	; 0x02
    8ff8:	04 c0       	rjmp	.+8      	; 0x9002 <malloc+0x9c>
    8ffa:	90 93 9f 02 	sts	0x029F, r25
    8ffe:	80 93 9e 02 	sts	0x029E, r24
    9002:	fd 01       	movw	r30, r26
    9004:	32 96       	adiw	r30, 0x02	; 2
    9006:	44 c0       	rjmp	.+136    	; 0x9090 <malloc+0x12a>
    9008:	fd 01       	movw	r30, r26
    900a:	e2 0f       	add	r30, r18
    900c:	f3 1f       	adc	r31, r19
    900e:	81 93       	st	Z+, r24
    9010:	91 93       	st	Z+, r25
    9012:	22 50       	subi	r18, 0x02	; 2
    9014:	31 09       	sbc	r19, r1
    9016:	2d 93       	st	X+, r18
    9018:	3c 93       	st	X, r19
    901a:	3a c0       	rjmp	.+116    	; 0x9090 <malloc+0x12a>
    901c:	20 91 9c 02 	lds	r18, 0x029C
    9020:	30 91 9d 02 	lds	r19, 0x029D
    9024:	23 2b       	or	r18, r19
    9026:	41 f4       	brne	.+16     	; 0x9038 <malloc+0xd2>
    9028:	20 91 02 02 	lds	r18, 0x0202
    902c:	30 91 03 02 	lds	r19, 0x0203
    9030:	30 93 9d 02 	sts	0x029D, r19
    9034:	20 93 9c 02 	sts	0x029C, r18
    9038:	20 91 00 02 	lds	r18, 0x0200
    903c:	30 91 01 02 	lds	r19, 0x0201
    9040:	21 15       	cp	r18, r1
    9042:	31 05       	cpc	r19, r1
    9044:	41 f4       	brne	.+16     	; 0x9056 <malloc+0xf0>
    9046:	2d b7       	in	r18, 0x3d	; 61
    9048:	3e b7       	in	r19, 0x3e	; 62
    904a:	40 91 04 02 	lds	r20, 0x0204
    904e:	50 91 05 02 	lds	r21, 0x0205
    9052:	24 1b       	sub	r18, r20
    9054:	35 0b       	sbc	r19, r21
    9056:	e0 91 9c 02 	lds	r30, 0x029C
    905a:	f0 91 9d 02 	lds	r31, 0x029D
    905e:	e2 17       	cp	r30, r18
    9060:	f3 07       	cpc	r31, r19
    9062:	a0 f4       	brcc	.+40     	; 0x908c <malloc+0x126>
    9064:	2e 1b       	sub	r18, r30
    9066:	3f 0b       	sbc	r19, r31
    9068:	28 17       	cp	r18, r24
    906a:	39 07       	cpc	r19, r25
    906c:	78 f0       	brcs	.+30     	; 0x908c <malloc+0x126>
    906e:	ac 01       	movw	r20, r24
    9070:	4e 5f       	subi	r20, 0xFE	; 254
    9072:	5f 4f       	sbci	r21, 0xFF	; 255
    9074:	24 17       	cp	r18, r20
    9076:	35 07       	cpc	r19, r21
    9078:	48 f0       	brcs	.+18     	; 0x908c <malloc+0x126>
    907a:	4e 0f       	add	r20, r30
    907c:	5f 1f       	adc	r21, r31
    907e:	50 93 9d 02 	sts	0x029D, r21
    9082:	40 93 9c 02 	sts	0x029C, r20
    9086:	81 93       	st	Z+, r24
    9088:	91 93       	st	Z+, r25
    908a:	02 c0       	rjmp	.+4      	; 0x9090 <malloc+0x12a>
    908c:	e0 e0       	ldi	r30, 0x00	; 0
    908e:	f0 e0       	ldi	r31, 0x00	; 0
    9090:	cf 01       	movw	r24, r30
    9092:	df 91       	pop	r29
    9094:	cf 91       	pop	r28
    9096:	1f 91       	pop	r17
    9098:	0f 91       	pop	r16
    909a:	08 95       	ret

0000909c <free>:
    909c:	ef 92       	push	r14
    909e:	ff 92       	push	r15
    90a0:	0f 93       	push	r16
    90a2:	1f 93       	push	r17
    90a4:	cf 93       	push	r28
    90a6:	df 93       	push	r29
    90a8:	00 97       	sbiw	r24, 0x00	; 0
    90aa:	09 f4       	brne	.+2      	; 0x90ae <free+0x12>
    90ac:	8f c0       	rjmp	.+286    	; 0x91cc <free+0x130>
    90ae:	dc 01       	movw	r26, r24
    90b0:	12 97       	sbiw	r26, 0x02	; 2
    90b2:	13 96       	adiw	r26, 0x03	; 3
    90b4:	1c 92       	st	X, r1
    90b6:	1e 92       	st	-X, r1
    90b8:	12 97       	sbiw	r26, 0x02	; 2
    90ba:	e0 90 9e 02 	lds	r14, 0x029E
    90be:	f0 90 9f 02 	lds	r15, 0x029F
    90c2:	e1 14       	cp	r14, r1
    90c4:	f1 04       	cpc	r15, r1
    90c6:	89 f4       	brne	.+34     	; 0x90ea <free+0x4e>
    90c8:	2d 91       	ld	r18, X+
    90ca:	3c 91       	ld	r19, X
    90cc:	11 97       	sbiw	r26, 0x01	; 1
    90ce:	28 0f       	add	r18, r24
    90d0:	39 1f       	adc	r19, r25
    90d2:	80 91 9c 02 	lds	r24, 0x029C
    90d6:	90 91 9d 02 	lds	r25, 0x029D
    90da:	82 17       	cp	r24, r18
    90dc:	93 07       	cpc	r25, r19
    90de:	89 f5       	brne	.+98     	; 0x9142 <free+0xa6>
    90e0:	b0 93 9d 02 	sts	0x029D, r27
    90e4:	a0 93 9c 02 	sts	0x029C, r26
    90e8:	71 c0       	rjmp	.+226    	; 0x91cc <free+0x130>
    90ea:	e7 01       	movw	r28, r14
    90ec:	20 e0       	ldi	r18, 0x00	; 0
    90ee:	30 e0       	ldi	r19, 0x00	; 0
    90f0:	01 c0       	rjmp	.+2      	; 0x90f4 <free+0x58>
    90f2:	ea 01       	movw	r28, r20
    90f4:	ca 17       	cp	r28, r26
    90f6:	db 07       	cpc	r29, r27
    90f8:	38 f4       	brcc	.+14     	; 0x9108 <free+0x6c>
    90fa:	4a 81       	ldd	r20, Y+2	; 0x02
    90fc:	5b 81       	ldd	r21, Y+3	; 0x03
    90fe:	9e 01       	movw	r18, r28
    9100:	41 15       	cp	r20, r1
    9102:	51 05       	cpc	r21, r1
    9104:	b1 f7       	brne	.-20     	; 0x90f2 <free+0x56>
    9106:	22 c0       	rjmp	.+68     	; 0x914c <free+0xb0>
    9108:	bc 01       	movw	r22, r24
    910a:	62 50       	subi	r22, 0x02	; 2
    910c:	71 09       	sbc	r23, r1
    910e:	fb 01       	movw	r30, r22
    9110:	d3 83       	std	Z+3, r29	; 0x03
    9112:	c2 83       	std	Z+2, r28	; 0x02
    9114:	00 81       	ld	r16, Z
    9116:	11 81       	ldd	r17, Z+1	; 0x01
    9118:	ac 01       	movw	r20, r24
    911a:	40 0f       	add	r20, r16
    911c:	51 1f       	adc	r21, r17
    911e:	4c 17       	cp	r20, r28
    9120:	5d 07       	cpc	r21, r29
    9122:	61 f4       	brne	.+24     	; 0x913c <free+0xa0>
    9124:	48 81       	ld	r20, Y
    9126:	59 81       	ldd	r21, Y+1	; 0x01
    9128:	40 0f       	add	r20, r16
    912a:	51 1f       	adc	r21, r17
    912c:	4e 5f       	subi	r20, 0xFE	; 254
    912e:	5f 4f       	sbci	r21, 0xFF	; 255
    9130:	51 83       	std	Z+1, r21	; 0x01
    9132:	40 83       	st	Z, r20
    9134:	4a 81       	ldd	r20, Y+2	; 0x02
    9136:	5b 81       	ldd	r21, Y+3	; 0x03
    9138:	53 83       	std	Z+3, r21	; 0x03
    913a:	42 83       	std	Z+2, r20	; 0x02
    913c:	21 15       	cp	r18, r1
    913e:	31 05       	cpc	r19, r1
    9140:	29 f4       	brne	.+10     	; 0x914c <free+0xb0>
    9142:	b0 93 9f 02 	sts	0x029F, r27
    9146:	a0 93 9e 02 	sts	0x029E, r26
    914a:	40 c0       	rjmp	.+128    	; 0x91cc <free+0x130>
    914c:	f9 01       	movw	r30, r18
    914e:	b3 83       	std	Z+3, r27	; 0x03
    9150:	a2 83       	std	Z+2, r26	; 0x02
    9152:	e9 01       	movw	r28, r18
    9154:	69 91       	ld	r22, Y+
    9156:	79 91       	ld	r23, Y+
    9158:	c6 0f       	add	r28, r22
    915a:	d7 1f       	adc	r29, r23
    915c:	ac 17       	cp	r26, r28
    915e:	bd 07       	cpc	r27, r29
    9160:	79 f4       	brne	.+30     	; 0x9180 <free+0xe4>
    9162:	dc 01       	movw	r26, r24
    9164:	5e 91       	ld	r21, -X
    9166:	4e 91       	ld	r20, -X
    9168:	46 0f       	add	r20, r22
    916a:	57 1f       	adc	r21, r23
    916c:	4e 5f       	subi	r20, 0xFE	; 254
    916e:	5f 4f       	sbci	r21, 0xFF	; 255
    9170:	51 83       	std	Z+1, r21	; 0x01
    9172:	40 83       	st	Z, r20
    9174:	12 96       	adiw	r26, 0x02	; 2
    9176:	8d 91       	ld	r24, X+
    9178:	9c 91       	ld	r25, X
    917a:	13 97       	sbiw	r26, 0x03	; 3
    917c:	93 83       	std	Z+3, r25	; 0x03
    917e:	82 83       	std	Z+2, r24	; 0x02
    9180:	a0 e0       	ldi	r26, 0x00	; 0
    9182:	b0 e0       	ldi	r27, 0x00	; 0
    9184:	02 c0       	rjmp	.+4      	; 0x918a <free+0xee>
    9186:	d7 01       	movw	r26, r14
    9188:	7c 01       	movw	r14, r24
    918a:	f7 01       	movw	r30, r14
    918c:	82 81       	ldd	r24, Z+2	; 0x02
    918e:	93 81       	ldd	r25, Z+3	; 0x03
    9190:	00 97       	sbiw	r24, 0x00	; 0
    9192:	c9 f7       	brne	.-14     	; 0x9186 <free+0xea>
    9194:	c7 01       	movw	r24, r14
    9196:	02 96       	adiw	r24, 0x02	; 2
    9198:	20 81       	ld	r18, Z
    919a:	31 81       	ldd	r19, Z+1	; 0x01
    919c:	82 0f       	add	r24, r18
    919e:	93 1f       	adc	r25, r19
    91a0:	20 91 9c 02 	lds	r18, 0x029C
    91a4:	30 91 9d 02 	lds	r19, 0x029D
    91a8:	28 17       	cp	r18, r24
    91aa:	39 07       	cpc	r19, r25
    91ac:	79 f4       	brne	.+30     	; 0x91cc <free+0x130>
    91ae:	10 97       	sbiw	r26, 0x00	; 0
    91b0:	29 f4       	brne	.+10     	; 0x91bc <free+0x120>
    91b2:	10 92 9f 02 	sts	0x029F, r1
    91b6:	10 92 9e 02 	sts	0x029E, r1
    91ba:	04 c0       	rjmp	.+8      	; 0x91c4 <free+0x128>
    91bc:	13 96       	adiw	r26, 0x03	; 3
    91be:	1c 92       	st	X, r1
    91c0:	1e 92       	st	-X, r1
    91c2:	12 97       	sbiw	r26, 0x02	; 2
    91c4:	f0 92 9d 02 	sts	0x029D, r15
    91c8:	e0 92 9c 02 	sts	0x029C, r14
    91cc:	df 91       	pop	r29
    91ce:	cf 91       	pop	r28
    91d0:	1f 91       	pop	r17
    91d2:	0f 91       	pop	r16
    91d4:	ff 90       	pop	r15
    91d6:	ef 90       	pop	r14
    91d8:	08 95       	ret

000091da <memcpy>:
    91da:	fb 01       	movw	r30, r22
    91dc:	dc 01       	movw	r26, r24
    91de:	02 c0       	rjmp	.+4      	; 0x91e4 <memcpy+0xa>
    91e0:	01 90       	ld	r0, Z+
    91e2:	0d 92       	st	X+, r0
    91e4:	41 50       	subi	r20, 0x01	; 1
    91e6:	50 40       	sbci	r21, 0x00	; 0
    91e8:	d8 f7       	brcc	.-10     	; 0x91e0 <memcpy+0x6>
    91ea:	08 95       	ret

000091ec <_exit>:
    91ec:	f8 94       	cli

000091ee <__stop_program>:
    91ee:	ff cf       	rjmp	.-2      	; 0x91ee <__stop_program>
