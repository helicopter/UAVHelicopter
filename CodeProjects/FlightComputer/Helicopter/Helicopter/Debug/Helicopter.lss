
Helicopter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009a  00800200  0000a1ca  0000a25e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000a1ca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  0080029a  0080029a  0000a2f8  2**0
                  ALLOC
  3 .stab         0000444c  00000000  00000000  0000a2f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001231  00000000  00000000  0000e744  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000f975  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000e70  00000000  00000000  0000f9a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000173f6  00000000  00000000  00010814  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003508  00000000  00000000  00027c0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000034cd  00000000  00000000  0002b112  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00003884  00000000  00000000  0002e5e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00006dd2  00000000  00000000  00031e64  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000809f  00000000  00000000  00038c36  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000ce8  00000000  00000000  00040cd5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
	//TODO should this be delete[]?
	delete this->records;
}

void Buffer::enqueue(Record *record)
{
       0:	0c 94 14 01 	jmp	0x228	; 0x228 <__ctors_end>
       4:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
       8:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
       c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      10:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
	if (record != NULL)
      14:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      18:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      1c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
	{
		//Copy the record
		//TODO danger not deep copy. 
		Record *newRecord = record->Copy();
      20:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      24:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      28:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
		
		//Add the record to the linked list.
		if (this->records == NULL)
      2c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      30:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      34:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
		{
			records = newRecord;
      38:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      3c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      40:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      44:	0c 94 91 3c 	jmp	0x7922	; 0x7922 <__vector_17>
			firstRecord = newRecord;
      48:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      4c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      50:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
			lastRecord = newRecord;
      54:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      58:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      5c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      60:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
		}else
		{
			lastRecord->setNextRecord(newRecord);
      64:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      68:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      6c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      70:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      74:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
			newRecord->setPreviousRecord(lastRecord);
      78:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      7c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      80:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      84:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      88:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
			lastRecord = newRecord;
      8c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      90:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      94:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      98:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
		}
		
		bufferSize++;
      9c:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      a0:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      a4:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      a8:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      ac:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      b0:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
	}
}
      b4:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      b8:	0c 94 ef 26 	jmp	0x4dde	; 0x4dde <__vector_46>
      bc:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      c0:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      c4:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
 * This method uses Euler angle rotations.
 */
double MagnetometerSensor::getFRDY()
{
	return (rawMagX * (cos(theta)*sin(sai))) + (rawMagY * (sin(phi)*sin(theta)*sin(sai) + cos(phi)*cos(sai))) + (rawMagZ * (cos(phi)*sin(theta)*sin(sai) - sin(phi)*cos(sai)));
}
      c8:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      cc:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      d0:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      d4:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      d8:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      dc:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      e0:	0c 94 35 01 	jmp	0x26a	; 0x26a <__bad_interrupt>
      e4:	05 a8       	ldd	r0, Z+53	; 0x35
      e6:	4c cd       	rjmp	.-1384   	; 0xfffffb80 <__eeprom_end+0xff7efb80>
      e8:	b2 d4       	rcall	.+2404   	; 0xa4e <_ZN10helicopter5model11SystemModel25YLateralOuterLoopSetpointEf+0x32>
      ea:	4e b9       	out	0x0e, r20	; 14
      ec:	38 36       	cpi	r19, 0x68	; 104
      ee:	a9 02       	muls	r26, r25
      f0:	0c 50       	subi	r16, 0x0C	; 12
      f2:	b9 91       	ld	r27, Y+
      f4:	86 88       	ldd	r8, Z+22	; 0x16
      f6:	08 3c       	cpi	r16, 0xC8	; 200
      f8:	a6 aa       	std	Z+54, r10	; 0x36
      fa:	aa 2a       	or	r10, r26
      fc:	be 00       	.word	0x00be	; ????
      fe:	00 00       	nop
     100:	80 3f       	cpi	r24, 0xF0	; 240
     102:	07 63       	ori	r16, 0x37	; 55
     104:	42 36       	cpi	r20, 0x62	; 98
     106:	b7 9b       	sbis	0x16, 7	; 22
     108:	d8 a7       	std	Y+40, r29	; 0x28
     10a:	1a 39       	cpi	r17, 0x9A	; 154
     10c:	68 56       	subi	r22, 0x68	; 104
     10e:	18 ae       	std	Y+56, r1	; 0x38
     110:	ba ab       	std	Y+50, r27	; 0x32
     112:	55 8c       	ldd	r5, Z+29	; 0x1d
     114:	1d 3c       	cpi	r17, 0xCD	; 205
     116:	b7 cc       	rjmp	.-1682   	; 0xfffffa86 <__eeprom_end+0xff7efa86>
     118:	57 63       	ori	r21, 0x37	; 55
     11a:	bd 6d       	ori	r27, 0xDD	; 221
     11c:	ed fd       	.word	0xfded	; ????
     11e:	75 3e       	cpi	r23, 0xE5	; 229
     120:	f6 17       	cp	r31, r22
     122:	72 31       	cpi	r23, 0x12	; 18
     124:	bf 00       	.word	0x00bf	; ????
     126:	00 00       	nop
     128:	80 3f       	cpi	r24, 0xF0	; 240
     12a:	08 00       	.word	0x0008	; ????
     12c:	00 00       	nop
     12e:	be 92       	st	-X, r11
     130:	24 49       	sbci	r18, 0x94	; 148
     132:	12 3e       	cpi	r17, 0xE2	; 226
     134:	ab aa       	std	Y+51, r10	; 0x33
     136:	aa 2a       	or	r10, r26
     138:	be cd       	rjmp	.-1156   	; 0xfffffcb6 <__eeprom_end+0xff7efcb6>
     13a:	cc cc       	rjmp	.-1640   	; 0xfffffad4 <__eeprom_end+0xff7efad4>
     13c:	4c 3e       	cpi	r20, 0xEC	; 236
     13e:	00 00       	nop
     140:	00 80       	ld	r0, Z
     142:	be ab       	std	Y+54, r27	; 0x36
     144:	aa aa       	std	Y+50, r10	; 0x32
     146:	aa 3e       	cpi	r26, 0xEA	; 234
     148:	00 00       	nop
     14a:	00 00       	nop
     14c:	bf 00       	.word	0x00bf	; ????
     14e:	00 00       	nop
     150:	80 3f       	cpi	r24, 0xF0	; 240
     152:	00 00       	nop
     154:	00 00       	nop
     156:	00 08       	sbc	r0, r0
     158:	41 78       	andi	r20, 0x81	; 129
     15a:	d3 bb       	out	0x13, r29	; 19
     15c:	43 87       	std	Z+11, r20	; 0x0b
     15e:	d1 13       	cpse	r29, r17
     160:	3d 19       	sub	r19, r13
     162:	0e 3c       	cpi	r16, 0xCE	; 206
     164:	c3 bd       	out	0x23, r28	; 35
     166:	42 82       	std	Z+2, r4	; 0x02
     168:	ad 2b       	or	r26, r29
     16a:	3e 68       	ori	r19, 0x8E	; 142
     16c:	ec 82       	std	Y+4, r14	; 0x04
     16e:	76 be       	out	0x36, r7	; 54
     170:	d9 8f       	std	Y+25, r29	; 0x19
     172:	e1 a9       	ldd	r30, Z+49	; 0x31
     174:	3e 4c       	sbci	r19, 0xCE	; 206
     176:	80 ef       	ldi	r24, 0xF0	; 240
     178:	ff be       	out	0x3f, r15	; 63
     17a:	01 c4       	rjmp	.+2050   	; 0x97e <_ZN10helicopter5model11SystemModel14LateralControlEf+0x38>
     17c:	ff 7f       	andi	r31, 0xFF	; 255
     17e:	3f 00       	.word	0x003f	; ????
     180:	00 00       	nop
	...

00000184 <__trampolines_start>:
     184:	0c 94 29 15 	jmp	0x2a52	; 0x2a52 <_ZN10helicopter5tasks4TaskD0Ev>
     188:	0c 94 7c 3d 	jmp	0x7af8	; 0x7af8 <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>
     18c:	0c 94 98 15 	jmp	0x2b30	; 0x2b30 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv>
     190:	0c 94 2b 29 	jmp	0x5256	; 0x5256 <_ZN10helicopter8messages7Message12buildMessageEPh>
     194:	0c 94 7e 29 	jmp	0x52fc	; 0x52fc <_ZN10helicopter8messages11SyncMessageD1Ev>
     198:	0c 94 a0 29 	jmp	0x5340	; 0x5340 <_ZN10helicopter8messages11SyncMessageD0Ev>
     19c:	0c 94 2a 44 	jmp	0x8854	; 0x8854 <_ZN10helicopter5tasks4Task7runTaskEv>
     1a0:	0c 94 84 33 	jmp	0x6708	; 0x6708 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh>
     1a4:	0c 94 b8 43 	jmp	0x8770	; 0x8770 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>
     1a8:	0c 94 b4 14 	jmp	0x2968	; 0x2968 <_ZN10helicopter7drivers12SerialDriver11receiveByteERhPNS_4util5TimerE>
     1ac:	0c 94 d7 28 	jmp	0x51ae	; 0x51ae <_ZN10helicopter8messages7MessageD1Ev>
     1b0:	0c 94 84 44 	jmp	0x8908	; 0x8908 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv>
     1b4:	0c 94 9e 3d 	jmp	0x7b3c	; 0x7b3c <_ZN10helicopter5tasks16PIDInnerLoopTaskD0Ev>
     1b8:	0c 94 5b 22 	jmp	0x44b6	; 0x44b6 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>
     1bc:	0c 94 37 3f 	jmp	0x7e6e	; 0x7e6e <_ZN10helicopter5tasks20SensorProcessingTask11runTaskImplEv>
     1c0:	0c 94 d9 44 	jmp	0x89b2	; 0x89b2 <_ZN10helicopter5tasks21TransmitTelemetryTaskD0Ev>
     1c4:	0c 94 61 3d 	jmp	0x7ac2	; 0x7ac2 <_ZN10helicopter5tasks16PIDInnerLoopTask11runTaskImplEv>
     1c8:	0c 94 b7 44 	jmp	0x896e	; 0x896e <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>
     1cc:	0c 94 63 41 	jmp	0x82c6	; 0x82c6 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv>
     1d0:	0c 94 53 40 	jmp	0x80a6	; 0x80a6 <_ZN10helicopter5tasks20SensorProcessingTaskD0Ev>
     1d4:	0c 94 f5 28 	jmp	0x51ea	; 0x51ea <_ZN10helicopter8messages7MessageD0Ev>
     1d8:	0c 94 e5 3d 	jmp	0x7bca	; 0x7bca <_ZN10helicopter5tasks16PIDOuterLoopTask11runTaskImplEv>
     1dc:	0c 94 31 40 	jmp	0x8062	; 0x8062 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>
     1e0:	0c 94 53 30 	jmp	0x60a6	; 0x60a6 <_ZN10helicopter8messages22SystemTelemetryMessageD0Ev>
     1e4:	0c 94 b9 13 	jmp	0x2772	; 0x2772 <_ZN10helicopter7drivers12SerialDriver10initializeEv>
     1e8:	0c 94 1c 29 	jmp	0x5238	; 0x5238 <_ZN10helicopter8messages7Message8getBytesEv>
     1ec:	0c 94 7d 22 	jmp	0x44fa	; 0x44fa <_ZN10helicopter5tasks12FlashLEDTaskD0Ev>
     1f0:	0c 94 6f 14 	jmp	0x28de	; 0x28de <_ZN10helicopter7drivers12SerialDriver12transmitByteEhPNS_4util5TimerE>
     1f4:	0c 94 30 3e 	jmp	0x7c60	; 0x7c60 <_ZN10helicopter5tasks16PIDOuterLoopTaskD0Ev>
     1f8:	0c 94 31 30 	jmp	0x6062	; 0x6062 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>
     1fc:	0c 94 74 15 	jmp	0x2ae8	; 0x2ae8 <_ZN10helicopter5tasks12FlashLEDTask4initEv>
     200:	0c 94 b5 29 	jmp	0x536a	; 0x536a <_ZN10helicopter8messages11SyncMessage8getBytesEv>
     204:	0c 94 da 43 	jmp	0x87b4	; 0x87b4 <_ZN10helicopter5tasks16SimTelemetryTaskD0Ev>
     208:	0c 94 68 30 	jmp	0x60d0	; 0x60d0 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv>
     20c:	0c 94 ef 43 	jmp	0x87de	; 0x87de <_ZN10helicopter5tasks4Task11runTaskImplEv>
     210:	0c 94 da 29 	jmp	0x53b4	; 0x53b4 <_ZN10helicopter8messages11SyncMessage12buildMessageEPh>
     214:	0c 94 0e 3e 	jmp	0x7c1c	; 0x7c1c <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>
     218:	0c 94 86 13 	jmp	0x270c	; 0x270c <_ZN10helicopter7drivers12SerialDriverD1Ev>
     21c:	0c 94 a4 13 	jmp	0x2748	; 0x2748 <_ZN10helicopter7drivers12SerialDriverD0Ev>
     220:	0c 94 22 3d 	jmp	0x7a44	; 0x7a44 <_ZN10helicopter5tasks4Task4initEv>
     224:	0c 94 0b 15 	jmp	0x2a16	; 0x2a16 <_ZN10helicopter5tasks4TaskD1Ev>

00000228 <__ctors_end>:
     228:	11 24       	eor	r1, r1
     22a:	1f be       	out	0x3f, r1	; 63
     22c:	cf ef       	ldi	r28, 0xFF	; 255
     22e:	d1 e2       	ldi	r29, 0x21	; 33
     230:	de bf       	out	0x3e, r29	; 62
     232:	cd bf       	out	0x3d, r28	; 61
     234:	00 e0       	ldi	r16, 0x00	; 0
     236:	0c bf       	out	0x3c, r16	; 60

00000238 <__do_copy_data>:
     238:	12 e0       	ldi	r17, 0x02	; 2
     23a:	a0 e0       	ldi	r26, 0x00	; 0
     23c:	b2 e0       	ldi	r27, 0x02	; 2
     23e:	ea ec       	ldi	r30, 0xCA	; 202
     240:	f1 ea       	ldi	r31, 0xA1	; 161
     242:	00 e0       	ldi	r16, 0x00	; 0
     244:	0b bf       	out	0x3b, r16	; 59
     246:	02 c0       	rjmp	.+4      	; 0x24c <__do_copy_data+0x14>
     248:	07 90       	elpm	r0, Z+
     24a:	0d 92       	st	X+, r0
     24c:	aa 39       	cpi	r26, 0x9A	; 154
     24e:	b1 07       	cpc	r27, r17
     250:	d9 f7       	brne	.-10     	; 0x248 <__do_copy_data+0x10>

00000252 <__do_clear_bss>:
     252:	22 e0       	ldi	r18, 0x02	; 2
     254:	aa e9       	ldi	r26, 0x9A	; 154
     256:	b2 e0       	ldi	r27, 0x02	; 2
     258:	01 c0       	rjmp	.+2      	; 0x25c <.do_clear_bss_start>

0000025a <.do_clear_bss_loop>:
     25a:	1d 92       	st	X+, r1

0000025c <.do_clear_bss_start>:
     25c:	a2 3a       	cpi	r26, 0xA2	; 162
     25e:	b2 07       	cpc	r27, r18
     260:	e1 f7       	brne	.-8      	; 0x25a <.do_clear_bss_loop>
     262:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <main>
     266:	0c 94 e3 50 	jmp	0xa1c6	; 0xa1c6 <_exit>

0000026a <__bad_interrupt>:
     26a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000026e <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>:
			 * Y axis is pointing behind the FC
			 * Z axis is pointing up out of the FC
			 */
			

			float MagYawDegrees() const { return magYawDegrees; }
     26e:	cf 93       	push	r28
     270:	df 93       	push	r29
     272:	1f 92       	push	r1
     274:	1f 92       	push	r1
     276:	cd b7       	in	r28, 0x3d	; 61
     278:	de b7       	in	r29, 0x3e	; 62
     27a:	9a 83       	std	Y+2, r25	; 0x02
     27c:	89 83       	std	Y+1, r24	; 0x01
     27e:	89 81       	ldd	r24, Y+1	; 0x01
     280:	9a 81       	ldd	r25, Y+2	; 0x02
     282:	fc 01       	movw	r30, r24
     284:	81 81       	ldd	r24, Z+1	; 0x01
     286:	92 81       	ldd	r25, Z+2	; 0x02
     288:	a3 81       	ldd	r26, Z+3	; 0x03
     28a:	b4 81       	ldd	r27, Z+4	; 0x04
     28c:	bc 01       	movw	r22, r24
     28e:	cd 01       	movw	r24, r26
     290:	0f 90       	pop	r0
     292:	0f 90       	pop	r0
     294:	df 91       	pop	r29
     296:	cf 91       	pop	r28
     298:	08 95       	ret

0000029a <_ZNK10helicopter5model11SystemModel22ReferenceMagYawDegreesEv>:
			void MagYawDegrees(float val) { magYawDegrees = val; }	
				
				
				
			float ReferenceMagYawDegrees() const {return referenceMagYawDegrees;}
     29a:	cf 93       	push	r28
     29c:	df 93       	push	r29
     29e:	1f 92       	push	r1
     2a0:	1f 92       	push	r1
     2a2:	cd b7       	in	r28, 0x3d	; 61
     2a4:	de b7       	in	r29, 0x3e	; 62
     2a6:	9a 83       	std	Y+2, r25	; 0x02
     2a8:	89 83       	std	Y+1, r24	; 0x01
     2aa:	89 81       	ldd	r24, Y+1	; 0x01
     2ac:	9a 81       	ldd	r25, Y+2	; 0x02
     2ae:	fc 01       	movw	r30, r24
     2b0:	85 81       	ldd	r24, Z+5	; 0x05
     2b2:	96 81       	ldd	r25, Z+6	; 0x06
     2b4:	a7 81       	ldd	r26, Z+7	; 0x07
     2b6:	b0 85       	ldd	r27, Z+8	; 0x08
     2b8:	bc 01       	movw	r22, r24
     2ba:	cd 01       	movw	r24, r26
     2bc:	0f 90       	pop	r0
     2be:	0f 90       	pop	r0
     2c0:	df 91       	pop	r29
     2c2:	cf 91       	pop	r28
     2c4:	08 95       	ret

000002c6 <_ZNK10helicopter5model11SystemModel10YawControlEv>:
			void ReferenceMagYawDegrees(float val) { referenceMagYawDegrees = val;}
				
				
			float YawControl() const {return yawControl;}
     2c6:	cf 93       	push	r28
     2c8:	df 93       	push	r29
     2ca:	1f 92       	push	r1
     2cc:	1f 92       	push	r1
     2ce:	cd b7       	in	r28, 0x3d	; 61
     2d0:	de b7       	in	r29, 0x3e	; 62
     2d2:	9a 83       	std	Y+2, r25	; 0x02
     2d4:	89 83       	std	Y+1, r24	; 0x01
     2d6:	89 81       	ldd	r24, Y+1	; 0x01
     2d8:	9a 81       	ldd	r25, Y+2	; 0x02
     2da:	fc 01       	movw	r30, r24
     2dc:	81 85       	ldd	r24, Z+9	; 0x09
     2de:	92 85       	ldd	r25, Z+10	; 0x0a
     2e0:	a3 85       	ldd	r26, Z+11	; 0x0b
     2e2:	b4 85       	ldd	r27, Z+12	; 0x0c
     2e4:	bc 01       	movw	r22, r24
     2e6:	cd 01       	movw	r24, r26
     2e8:	0f 90       	pop	r0
     2ea:	0f 90       	pop	r0
     2ec:	df 91       	pop	r29
     2ee:	cf 91       	pop	r28
     2f0:	08 95       	ret

000002f2 <_ZN10helicopter5model11SystemModel10YawControlEf>:
			void YawControl(float val) { yawControl = val;}
     2f2:	cf 93       	push	r28
     2f4:	df 93       	push	r29
     2f6:	00 d0       	rcall	.+0      	; 0x2f8 <_ZN10helicopter5model11SystemModel10YawControlEf+0x6>
     2f8:	00 d0       	rcall	.+0      	; 0x2fa <_ZN10helicopter5model11SystemModel10YawControlEf+0x8>
     2fa:	cd b7       	in	r28, 0x3d	; 61
     2fc:	de b7       	in	r29, 0x3e	; 62
     2fe:	9a 83       	std	Y+2, r25	; 0x02
     300:	89 83       	std	Y+1, r24	; 0x01
     302:	4b 83       	std	Y+3, r20	; 0x03
     304:	5c 83       	std	Y+4, r21	; 0x04
     306:	6d 83       	std	Y+5, r22	; 0x05
     308:	7e 83       	std	Y+6, r23	; 0x06
     30a:	29 81       	ldd	r18, Y+1	; 0x01
     30c:	3a 81       	ldd	r19, Y+2	; 0x02
     30e:	8b 81       	ldd	r24, Y+3	; 0x03
     310:	9c 81       	ldd	r25, Y+4	; 0x04
     312:	ad 81       	ldd	r26, Y+5	; 0x05
     314:	be 81       	ldd	r27, Y+6	; 0x06
     316:	f9 01       	movw	r30, r18
     318:	81 87       	std	Z+9, r24	; 0x09
     31a:	92 87       	std	Z+10, r25	; 0x0a
     31c:	a3 87       	std	Z+11, r26	; 0x0b
     31e:	b4 87       	std	Z+12, r27	; 0x0c
     320:	26 96       	adiw	r28, 0x06	; 6
     322:	0f b6       	in	r0, 0x3f	; 63
     324:	f8 94       	cli
     326:	de bf       	out	0x3e, r29	; 62
     328:	0f be       	out	0x3f, r0	; 63
     32a:	cd bf       	out	0x3d, r28	; 61
     32c:	df 91       	pop	r29
     32e:	cf 91       	pop	r28
     330:	08 95       	ret

00000332 <_ZNK10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEv>:
				
			float YawControlBeforeServoLimitsAdjustment() const {return yawControlBeforeServoLimitsAdjustment;}
     332:	cf 93       	push	r28
     334:	df 93       	push	r29
     336:	1f 92       	push	r1
     338:	1f 92       	push	r1
     33a:	cd b7       	in	r28, 0x3d	; 61
     33c:	de b7       	in	r29, 0x3e	; 62
     33e:	9a 83       	std	Y+2, r25	; 0x02
     340:	89 83       	std	Y+1, r24	; 0x01
     342:	89 81       	ldd	r24, Y+1	; 0x01
     344:	9a 81       	ldd	r25, Y+2	; 0x02
     346:	fc 01       	movw	r30, r24
     348:	85 85       	ldd	r24, Z+13	; 0x0d
     34a:	96 85       	ldd	r25, Z+14	; 0x0e
     34c:	a7 85       	ldd	r26, Z+15	; 0x0f
     34e:	b0 89       	ldd	r27, Z+16	; 0x10
     350:	bc 01       	movw	r22, r24
     352:	cd 01       	movw	r24, r26
     354:	0f 90       	pop	r0
     356:	0f 90       	pop	r0
     358:	df 91       	pop	r29
     35a:	cf 91       	pop	r28
     35c:	08 95       	ret

0000035e <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf>:
			void YawControlBeforeServoLimitsAdjustment(float val) { yawControlBeforeServoLimitsAdjustment = val;}
     35e:	cf 93       	push	r28
     360:	df 93       	push	r29
     362:	00 d0       	rcall	.+0      	; 0x364 <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf+0x6>
     364:	00 d0       	rcall	.+0      	; 0x366 <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf+0x8>
     366:	cd b7       	in	r28, 0x3d	; 61
     368:	de b7       	in	r29, 0x3e	; 62
     36a:	9a 83       	std	Y+2, r25	; 0x02
     36c:	89 83       	std	Y+1, r24	; 0x01
     36e:	4b 83       	std	Y+3, r20	; 0x03
     370:	5c 83       	std	Y+4, r21	; 0x04
     372:	6d 83       	std	Y+5, r22	; 0x05
     374:	7e 83       	std	Y+6, r23	; 0x06
     376:	29 81       	ldd	r18, Y+1	; 0x01
     378:	3a 81       	ldd	r19, Y+2	; 0x02
     37a:	8b 81       	ldd	r24, Y+3	; 0x03
     37c:	9c 81       	ldd	r25, Y+4	; 0x04
     37e:	ad 81       	ldd	r26, Y+5	; 0x05
     380:	be 81       	ldd	r27, Y+6	; 0x06
     382:	f9 01       	movw	r30, r18
     384:	85 87       	std	Z+13, r24	; 0x0d
     386:	96 87       	std	Z+14, r25	; 0x0e
     388:	a7 87       	std	Z+15, r26	; 0x0f
     38a:	b0 8b       	std	Z+16, r27	; 0x10
     38c:	26 96       	adiw	r28, 0x06	; 6
     38e:	0f b6       	in	r0, 0x3f	; 63
     390:	f8 94       	cli
     392:	de bf       	out	0x3e, r29	; 62
     394:	0f be       	out	0x3f, r0	; 63
     396:	cd bf       	out	0x3d, r28	; 61
     398:	df 91       	pop	r29
     39a:	cf 91       	pop	r28
     39c:	08 95       	ret

0000039e <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>:
				
			float YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
     39e:	cf 93       	push	r28
     3a0:	df 93       	push	r29
     3a2:	1f 92       	push	r1
     3a4:	1f 92       	push	r1
     3a6:	cd b7       	in	r28, 0x3d	; 61
     3a8:	de b7       	in	r29, 0x3e	; 62
     3aa:	9a 83       	std	Y+2, r25	; 0x02
     3ac:	89 83       	std	Y+1, r24	; 0x01
     3ae:	89 81       	ldd	r24, Y+1	; 0x01
     3b0:	9a 81       	ldd	r25, Y+2	; 0x02
     3b2:	fc 01       	movw	r30, r24
     3b4:	81 89       	ldd	r24, Z+17	; 0x11
     3b6:	92 89       	ldd	r25, Z+18	; 0x12
     3b8:	a3 89       	ldd	r26, Z+19	; 0x13
     3ba:	b4 89       	ldd	r27, Z+20	; 0x14
     3bc:	bc 01       	movw	r22, r24
     3be:	cd 01       	movw	r24, r26
     3c0:	0f 90       	pop	r0
     3c2:	0f 90       	pop	r0
     3c4:	df 91       	pop	r29
     3c6:	cf 91       	pop	r28
     3c8:	08 95       	ret

000003ca <_ZNK10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEv>:
			void YawVelocityDegreesPerSecond(float val) { yawVelocityDegreesPerSecond = val;}
				
			float ReferenceYawVelocityDegreesPerSecond() const {return referenceYawVelocityDegreesPerSecond;}
     3ca:	cf 93       	push	r28
     3cc:	df 93       	push	r29
     3ce:	1f 92       	push	r1
     3d0:	1f 92       	push	r1
     3d2:	cd b7       	in	r28, 0x3d	; 61
     3d4:	de b7       	in	r29, 0x3e	; 62
     3d6:	9a 83       	std	Y+2, r25	; 0x02
     3d8:	89 83       	std	Y+1, r24	; 0x01
     3da:	89 81       	ldd	r24, Y+1	; 0x01
     3dc:	9a 81       	ldd	r25, Y+2	; 0x02
     3de:	fc 01       	movw	r30, r24
     3e0:	85 89       	ldd	r24, Z+21	; 0x15
     3e2:	96 89       	ldd	r25, Z+22	; 0x16
     3e4:	a7 89       	ldd	r26, Z+23	; 0x17
     3e6:	b0 8d       	ldd	r27, Z+24	; 0x18
     3e8:	bc 01       	movw	r22, r24
     3ea:	cd 01       	movw	r24, r26
     3ec:	0f 90       	pop	r0
     3ee:	0f 90       	pop	r0
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	08 95       	ret

000003f6 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>:
			void ReferenceYawVelocityDegreesPerSecond(float val) { referenceYawVelocityDegreesPerSecond = val;}
				
			float YawIntegral() const {return yawIntegral;}
     3f6:	cf 93       	push	r28
     3f8:	df 93       	push	r29
     3fa:	1f 92       	push	r1
     3fc:	1f 92       	push	r1
     3fe:	cd b7       	in	r28, 0x3d	; 61
     400:	de b7       	in	r29, 0x3e	; 62
     402:	9a 83       	std	Y+2, r25	; 0x02
     404:	89 83       	std	Y+1, r24	; 0x01
     406:	89 81       	ldd	r24, Y+1	; 0x01
     408:	9a 81       	ldd	r25, Y+2	; 0x02
     40a:	fc 01       	movw	r30, r24
     40c:	81 8d       	ldd	r24, Z+25	; 0x19
     40e:	92 8d       	ldd	r25, Z+26	; 0x1a
     410:	a3 8d       	ldd	r26, Z+27	; 0x1b
     412:	b4 8d       	ldd	r27, Z+28	; 0x1c
     414:	bc 01       	movw	r22, r24
     416:	cd 01       	movw	r24, r26
     418:	0f 90       	pop	r0
     41a:	0f 90       	pop	r0
     41c:	df 91       	pop	r29
     41e:	cf 91       	pop	r28
     420:	08 95       	ret

00000422 <_ZN10helicopter5model11SystemModel11YawIntegralEf>:
			void YawIntegral(float val) { yawIntegral = val;}
     422:	cf 93       	push	r28
     424:	df 93       	push	r29
     426:	00 d0       	rcall	.+0      	; 0x428 <_ZN10helicopter5model11SystemModel11YawIntegralEf+0x6>
     428:	00 d0       	rcall	.+0      	; 0x42a <_ZN10helicopter5model11SystemModel11YawIntegralEf+0x8>
     42a:	cd b7       	in	r28, 0x3d	; 61
     42c:	de b7       	in	r29, 0x3e	; 62
     42e:	9a 83       	std	Y+2, r25	; 0x02
     430:	89 83       	std	Y+1, r24	; 0x01
     432:	4b 83       	std	Y+3, r20	; 0x03
     434:	5c 83       	std	Y+4, r21	; 0x04
     436:	6d 83       	std	Y+5, r22	; 0x05
     438:	7e 83       	std	Y+6, r23	; 0x06
     43a:	29 81       	ldd	r18, Y+1	; 0x01
     43c:	3a 81       	ldd	r19, Y+2	; 0x02
     43e:	8b 81       	ldd	r24, Y+3	; 0x03
     440:	9c 81       	ldd	r25, Y+4	; 0x04
     442:	ad 81       	ldd	r26, Y+5	; 0x05
     444:	be 81       	ldd	r27, Y+6	; 0x06
     446:	f9 01       	movw	r30, r18
     448:	81 8f       	std	Z+25, r24	; 0x19
     44a:	92 8f       	std	Z+26, r25	; 0x1a
     44c:	a3 8f       	std	Z+27, r26	; 0x1b
     44e:	b4 8f       	std	Z+28, r27	; 0x1c
     450:	26 96       	adiw	r28, 0x06	; 6
     452:	0f b6       	in	r0, 0x3f	; 63
     454:	f8 94       	cli
     456:	de bf       	out	0x3e, r29	; 62
     458:	0f be       	out	0x3f, r0	; 63
     45a:	cd bf       	out	0x3d, r28	; 61
     45c:	df 91       	pop	r29
     45e:	cf 91       	pop	r28
     460:	08 95       	ret

00000462 <_ZN10helicopter5model11SystemModel15YawProportionalEf>:

			float YawProportional() const {return yawProportional;}
			void YawProportional(float val) { yawProportional = val;}
     462:	cf 93       	push	r28
     464:	df 93       	push	r29
     466:	00 d0       	rcall	.+0      	; 0x468 <_ZN10helicopter5model11SystemModel15YawProportionalEf+0x6>
     468:	00 d0       	rcall	.+0      	; 0x46a <_ZN10helicopter5model11SystemModel15YawProportionalEf+0x8>
     46a:	cd b7       	in	r28, 0x3d	; 61
     46c:	de b7       	in	r29, 0x3e	; 62
     46e:	9a 83       	std	Y+2, r25	; 0x02
     470:	89 83       	std	Y+1, r24	; 0x01
     472:	4b 83       	std	Y+3, r20	; 0x03
     474:	5c 83       	std	Y+4, r21	; 0x04
     476:	6d 83       	std	Y+5, r22	; 0x05
     478:	7e 83       	std	Y+6, r23	; 0x06
     47a:	29 81       	ldd	r18, Y+1	; 0x01
     47c:	3a 81       	ldd	r19, Y+2	; 0x02
     47e:	8b 81       	ldd	r24, Y+3	; 0x03
     480:	9c 81       	ldd	r25, Y+4	; 0x04
     482:	ad 81       	ldd	r26, Y+5	; 0x05
     484:	be 81       	ldd	r27, Y+6	; 0x06
     486:	f9 01       	movw	r30, r18
     488:	85 8f       	std	Z+29, r24	; 0x1d
     48a:	96 8f       	std	Z+30, r25	; 0x1e
     48c:	a7 8f       	std	Z+31, r26	; 0x1f
     48e:	b0 a3       	std	Z+32, r27	; 0x20
     490:	26 96       	adiw	r28, 0x06	; 6
     492:	0f b6       	in	r0, 0x3f	; 63
     494:	f8 94       	cli
     496:	de bf       	out	0x3e, r29	; 62
     498:	0f be       	out	0x3f, r0	; 63
     49a:	cd bf       	out	0x3d, r28	; 61
     49c:	df 91       	pop	r29
     49e:	cf 91       	pop	r28
     4a0:	08 95       	ret

000004a2 <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf>:

			float YawDerivativeError() const {return yawDerivativeError;}
			void YawDerivativeError(float val) { yawDerivativeError = val;}								
     4a2:	cf 93       	push	r28
     4a4:	df 93       	push	r29
     4a6:	00 d0       	rcall	.+0      	; 0x4a8 <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf+0x6>
     4a8:	00 d0       	rcall	.+0      	; 0x4aa <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf+0x8>
     4aa:	cd b7       	in	r28, 0x3d	; 61
     4ac:	de b7       	in	r29, 0x3e	; 62
     4ae:	9a 83       	std	Y+2, r25	; 0x02
     4b0:	89 83       	std	Y+1, r24	; 0x01
     4b2:	4b 83       	std	Y+3, r20	; 0x03
     4b4:	5c 83       	std	Y+4, r21	; 0x04
     4b6:	6d 83       	std	Y+5, r22	; 0x05
     4b8:	7e 83       	std	Y+6, r23	; 0x06
     4ba:	29 81       	ldd	r18, Y+1	; 0x01
     4bc:	3a 81       	ldd	r19, Y+2	; 0x02
     4be:	8b 81       	ldd	r24, Y+3	; 0x03
     4c0:	9c 81       	ldd	r25, Y+4	; 0x04
     4c2:	ad 81       	ldd	r26, Y+5	; 0x05
     4c4:	be 81       	ldd	r27, Y+6	; 0x06
     4c6:	f9 01       	movw	r30, r18
     4c8:	81 a3       	std	Z+33, r24	; 0x21
     4ca:	92 a3       	std	Z+34, r25	; 0x22
     4cc:	a3 a3       	std	Z+35, r26	; 0x23
     4ce:	b4 a3       	std	Z+36, r27	; 0x24
     4d0:	26 96       	adiw	r28, 0x06	; 6
     4d2:	0f b6       	in	r0, 0x3f	; 63
     4d4:	f8 94       	cli
     4d6:	de bf       	out	0x3e, r29	; 62
     4d8:	0f be       	out	0x3f, r0	; 63
     4da:	cd bf       	out	0x3d, r28	; 61
     4dc:	df 91       	pop	r29
     4de:	cf 91       	pop	r28
     4e0:	08 95       	ret

000004e2 <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>:
																							
		
		
		
			float XNEDBodyFrame() const {return xNEDBodyFrame;}
     4e2:	cf 93       	push	r28
     4e4:	df 93       	push	r29
     4e6:	1f 92       	push	r1
     4e8:	1f 92       	push	r1
     4ea:	cd b7       	in	r28, 0x3d	; 61
     4ec:	de b7       	in	r29, 0x3e	; 62
     4ee:	9a 83       	std	Y+2, r25	; 0x02
     4f0:	89 83       	std	Y+1, r24	; 0x01
     4f2:	89 81       	ldd	r24, Y+1	; 0x01
     4f4:	9a 81       	ldd	r25, Y+2	; 0x02
     4f6:	fc 01       	movw	r30, r24
     4f8:	85 a1       	ldd	r24, Z+37	; 0x25
     4fa:	96 a1       	ldd	r25, Z+38	; 0x26
     4fc:	a7 a1       	ldd	r26, Z+39	; 0x27
     4fe:	b0 a5       	ldd	r27, Z+40	; 0x28
     500:	bc 01       	movw	r22, r24
     502:	cd 01       	movw	r24, r26
     504:	0f 90       	pop	r0
     506:	0f 90       	pop	r0
     508:	df 91       	pop	r29
     50a:	cf 91       	pop	r28
     50c:	08 95       	ret

0000050e <_ZNK10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEv>:
			void XNEDBodyFrame(float val) { xNEDBodyFrame = val;}
						
			float ReferenceXNEDBodyFrame() const {return referenceXNEDBodyFrame;}
     50e:	cf 93       	push	r28
     510:	df 93       	push	r29
     512:	1f 92       	push	r1
     514:	1f 92       	push	r1
     516:	cd b7       	in	r28, 0x3d	; 61
     518:	de b7       	in	r29, 0x3e	; 62
     51a:	9a 83       	std	Y+2, r25	; 0x02
     51c:	89 83       	std	Y+1, r24	; 0x01
     51e:	89 81       	ldd	r24, Y+1	; 0x01
     520:	9a 81       	ldd	r25, Y+2	; 0x02
     522:	fc 01       	movw	r30, r24
     524:	81 a5       	ldd	r24, Z+41	; 0x29
     526:	92 a5       	ldd	r25, Z+42	; 0x2a
     528:	a3 a5       	ldd	r26, Z+43	; 0x2b
     52a:	b4 a5       	ldd	r27, Z+44	; 0x2c
     52c:	bc 01       	movw	r22, r24
     52e:	cd 01       	movw	r24, r26
     530:	0f 90       	pop	r0
     532:	0f 90       	pop	r0
     534:	df 91       	pop	r29
     536:	cf 91       	pop	r28
     538:	08 95       	ret

0000053a <_ZNK10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEv>:
			void ReferenceXNEDBodyFrame(float val) { referenceXNEDBodyFrame = val;}

			float LongitudeControlBeforeServoLimitsAdjustment() const {return longitudeControlBeforeServoLimitsAdjustment;}
     53a:	cf 93       	push	r28
     53c:	df 93       	push	r29
     53e:	1f 92       	push	r1
     540:	1f 92       	push	r1
     542:	cd b7       	in	r28, 0x3d	; 61
     544:	de b7       	in	r29, 0x3e	; 62
     546:	9a 83       	std	Y+2, r25	; 0x02
     548:	89 83       	std	Y+1, r24	; 0x01
     54a:	89 81       	ldd	r24, Y+1	; 0x01
     54c:	9a 81       	ldd	r25, Y+2	; 0x02
     54e:	fc 01       	movw	r30, r24
     550:	85 a5       	ldd	r24, Z+45	; 0x2d
     552:	96 a5       	ldd	r25, Z+46	; 0x2e
     554:	a7 a5       	ldd	r26, Z+47	; 0x2f
     556:	b0 a9       	ldd	r27, Z+48	; 0x30
     558:	bc 01       	movw	r22, r24
     55a:	cd 01       	movw	r24, r26
     55c:	0f 90       	pop	r0
     55e:	0f 90       	pop	r0
     560:	df 91       	pop	r29
     562:	cf 91       	pop	r28
     564:	08 95       	ret

00000566 <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf>:
			void LongitudeControlBeforeServoLimitsAdjustment(float val) { longitudeControlBeforeServoLimitsAdjustment = val;}
     566:	cf 93       	push	r28
     568:	df 93       	push	r29
     56a:	00 d0       	rcall	.+0      	; 0x56c <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf+0x6>
     56c:	00 d0       	rcall	.+0      	; 0x56e <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf+0x8>
     56e:	cd b7       	in	r28, 0x3d	; 61
     570:	de b7       	in	r29, 0x3e	; 62
     572:	9a 83       	std	Y+2, r25	; 0x02
     574:	89 83       	std	Y+1, r24	; 0x01
     576:	4b 83       	std	Y+3, r20	; 0x03
     578:	5c 83       	std	Y+4, r21	; 0x04
     57a:	6d 83       	std	Y+5, r22	; 0x05
     57c:	7e 83       	std	Y+6, r23	; 0x06
     57e:	29 81       	ldd	r18, Y+1	; 0x01
     580:	3a 81       	ldd	r19, Y+2	; 0x02
     582:	8b 81       	ldd	r24, Y+3	; 0x03
     584:	9c 81       	ldd	r25, Y+4	; 0x04
     586:	ad 81       	ldd	r26, Y+5	; 0x05
     588:	be 81       	ldd	r27, Y+6	; 0x06
     58a:	f9 01       	movw	r30, r18
     58c:	85 a7       	std	Z+45, r24	; 0x2d
     58e:	96 a7       	std	Z+46, r25	; 0x2e
     590:	a7 a7       	std	Z+47, r26	; 0x2f
     592:	b0 ab       	std	Z+48, r27	; 0x30
     594:	26 96       	adiw	r28, 0x06	; 6
     596:	0f b6       	in	r0, 0x3f	; 63
     598:	f8 94       	cli
     59a:	de bf       	out	0x3e, r29	; 62
     59c:	0f be       	out	0x3f, r0	; 63
     59e:	cd bf       	out	0x3d, r28	; 61
     5a0:	df 91       	pop	r29
     5a2:	cf 91       	pop	r28
     5a4:	08 95       	ret

000005a6 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>:

			float LongitudeControl() const {return longitudeControl;}
     5a6:	cf 93       	push	r28
     5a8:	df 93       	push	r29
     5aa:	1f 92       	push	r1
     5ac:	1f 92       	push	r1
     5ae:	cd b7       	in	r28, 0x3d	; 61
     5b0:	de b7       	in	r29, 0x3e	; 62
     5b2:	9a 83       	std	Y+2, r25	; 0x02
     5b4:	89 83       	std	Y+1, r24	; 0x01
     5b6:	89 81       	ldd	r24, Y+1	; 0x01
     5b8:	9a 81       	ldd	r25, Y+2	; 0x02
     5ba:	fc 01       	movw	r30, r24
     5bc:	81 a9       	ldd	r24, Z+49	; 0x31
     5be:	92 a9       	ldd	r25, Z+50	; 0x32
     5c0:	a3 a9       	ldd	r26, Z+51	; 0x33
     5c2:	b4 a9       	ldd	r27, Z+52	; 0x34
     5c4:	bc 01       	movw	r22, r24
     5c6:	cd 01       	movw	r24, r26
     5c8:	0f 90       	pop	r0
     5ca:	0f 90       	pop	r0
     5cc:	df 91       	pop	r29
     5ce:	cf 91       	pop	r28
     5d0:	08 95       	ret

000005d2 <_ZN10helicopter5model11SystemModel16LongitudeControlEf>:
			void LongitudeControl(float val) { longitudeControl = val;}
     5d2:	cf 93       	push	r28
     5d4:	df 93       	push	r29
     5d6:	00 d0       	rcall	.+0      	; 0x5d8 <_ZN10helicopter5model11SystemModel16LongitudeControlEf+0x6>
     5d8:	00 d0       	rcall	.+0      	; 0x5da <_ZN10helicopter5model11SystemModel16LongitudeControlEf+0x8>
     5da:	cd b7       	in	r28, 0x3d	; 61
     5dc:	de b7       	in	r29, 0x3e	; 62
     5de:	9a 83       	std	Y+2, r25	; 0x02
     5e0:	89 83       	std	Y+1, r24	; 0x01
     5e2:	4b 83       	std	Y+3, r20	; 0x03
     5e4:	5c 83       	std	Y+4, r21	; 0x04
     5e6:	6d 83       	std	Y+5, r22	; 0x05
     5e8:	7e 83       	std	Y+6, r23	; 0x06
     5ea:	29 81       	ldd	r18, Y+1	; 0x01
     5ec:	3a 81       	ldd	r19, Y+2	; 0x02
     5ee:	8b 81       	ldd	r24, Y+3	; 0x03
     5f0:	9c 81       	ldd	r25, Y+4	; 0x04
     5f2:	ad 81       	ldd	r26, Y+5	; 0x05
     5f4:	be 81       	ldd	r27, Y+6	; 0x06
     5f6:	f9 01       	movw	r30, r18
     5f8:	81 ab       	std	Z+49, r24	; 0x31
     5fa:	92 ab       	std	Z+50, r25	; 0x32
     5fc:	a3 ab       	std	Z+51, r26	; 0x33
     5fe:	b4 ab       	std	Z+52, r27	; 0x34
     600:	26 96       	adiw	r28, 0x06	; 6
     602:	0f b6       	in	r0, 0x3f	; 63
     604:	f8 94       	cli
     606:	de bf       	out	0x3e, r29	; 62
     608:	0f be       	out	0x3f, r0	; 63
     60a:	cd bf       	out	0x3d, r28	; 61
     60c:	df 91       	pop	r29
     60e:	cf 91       	pop	r28
     610:	08 95       	ret

00000612 <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>:
				
			float XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
     612:	cf 93       	push	r28
     614:	df 93       	push	r29
     616:	1f 92       	push	r1
     618:	1f 92       	push	r1
     61a:	cd b7       	in	r28, 0x3d	; 61
     61c:	de b7       	in	r29, 0x3e	; 62
     61e:	9a 83       	std	Y+2, r25	; 0x02
     620:	89 83       	std	Y+1, r24	; 0x01
     622:	89 81       	ldd	r24, Y+1	; 0x01
     624:	9a 81       	ldd	r25, Y+2	; 0x02
     626:	fc 01       	movw	r30, r24
     628:	85 a9       	ldd	r24, Z+53	; 0x35
     62a:	96 a9       	ldd	r25, Z+54	; 0x36
     62c:	a7 a9       	ldd	r26, Z+55	; 0x37
     62e:	b0 ad       	ldd	r27, Z+56	; 0x38
     630:	bc 01       	movw	r22, r24
     632:	cd 01       	movw	r24, r26
     634:	0f 90       	pop	r0
     636:	0f 90       	pop	r0
     638:	df 91       	pop	r29
     63a:	cf 91       	pop	r28
     63c:	08 95       	ret

0000063e <_ZNK10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEv>:
			void XVelocityMetersPerSecond(float val) { xVelocityMetersPerSecond = val;}
				
			float ReferenceXVelocityMetersPerSecond() const {return referenceXVelocityMetersPerSecond;}
     63e:	cf 93       	push	r28
     640:	df 93       	push	r29
     642:	1f 92       	push	r1
     644:	1f 92       	push	r1
     646:	cd b7       	in	r28, 0x3d	; 61
     648:	de b7       	in	r29, 0x3e	; 62
     64a:	9a 83       	std	Y+2, r25	; 0x02
     64c:	89 83       	std	Y+1, r24	; 0x01
     64e:	89 81       	ldd	r24, Y+1	; 0x01
     650:	9a 81       	ldd	r25, Y+2	; 0x02
     652:	fc 01       	movw	r30, r24
     654:	81 ad       	ldd	r24, Z+57	; 0x39
     656:	92 ad       	ldd	r25, Z+58	; 0x3a
     658:	a3 ad       	ldd	r26, Z+59	; 0x3b
     65a:	b4 ad       	ldd	r27, Z+60	; 0x3c
     65c:	bc 01       	movw	r22, r24
     65e:	cd 01       	movw	r24, r26
     660:	0f 90       	pop	r0
     662:	0f 90       	pop	r0
     664:	df 91       	pop	r29
     666:	cf 91       	pop	r28
     668:	08 95       	ret

0000066a <_ZNK10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEv>:
			void ReferenceXVelocityMetersPerSecond(float val) { referenceXVelocityMetersPerSecond = val;}
				
			float XLongitudeOuterLoopSetpoint() const {return xLongitudeOuterLoopSetpoint;}
     66a:	cf 93       	push	r28
     66c:	df 93       	push	r29
     66e:	1f 92       	push	r1
     670:	1f 92       	push	r1
     672:	cd b7       	in	r28, 0x3d	; 61
     674:	de b7       	in	r29, 0x3e	; 62
     676:	9a 83       	std	Y+2, r25	; 0x02
     678:	89 83       	std	Y+1, r24	; 0x01
     67a:	89 81       	ldd	r24, Y+1	; 0x01
     67c:	9a 81       	ldd	r25, Y+2	; 0x02
     67e:	cd 96       	adiw	r24, 0x3d	; 61
     680:	fc 01       	movw	r30, r24
     682:	80 81       	ld	r24, Z
     684:	91 81       	ldd	r25, Z+1	; 0x01
     686:	a2 81       	ldd	r26, Z+2	; 0x02
     688:	b3 81       	ldd	r27, Z+3	; 0x03
     68a:	bc 01       	movw	r22, r24
     68c:	cd 01       	movw	r24, r26
     68e:	0f 90       	pop	r0
     690:	0f 90       	pop	r0
     692:	df 91       	pop	r29
     694:	cf 91       	pop	r28
     696:	08 95       	ret

00000698 <_ZN10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEf>:
			void XLongitudeOuterLoopSetpoint(float val) { xLongitudeOuterLoopSetpoint = val;}
     698:	cf 93       	push	r28
     69a:	df 93       	push	r29
     69c:	00 d0       	rcall	.+0      	; 0x69e <_ZN10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEf+0x6>
     69e:	00 d0       	rcall	.+0      	; 0x6a0 <_ZN10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEf+0x8>
     6a0:	cd b7       	in	r28, 0x3d	; 61
     6a2:	de b7       	in	r29, 0x3e	; 62
     6a4:	9a 83       	std	Y+2, r25	; 0x02
     6a6:	89 83       	std	Y+1, r24	; 0x01
     6a8:	4b 83       	std	Y+3, r20	; 0x03
     6aa:	5c 83       	std	Y+4, r21	; 0x04
     6ac:	6d 83       	std	Y+5, r22	; 0x05
     6ae:	7e 83       	std	Y+6, r23	; 0x06
     6b0:	89 81       	ldd	r24, Y+1	; 0x01
     6b2:	9a 81       	ldd	r25, Y+2	; 0x02
     6b4:	9c 01       	movw	r18, r24
     6b6:	23 5c       	subi	r18, 0xC3	; 195
     6b8:	3f 4f       	sbci	r19, 0xFF	; 255
     6ba:	8b 81       	ldd	r24, Y+3	; 0x03
     6bc:	9c 81       	ldd	r25, Y+4	; 0x04
     6be:	ad 81       	ldd	r26, Y+5	; 0x05
     6c0:	be 81       	ldd	r27, Y+6	; 0x06
     6c2:	f9 01       	movw	r30, r18
     6c4:	80 83       	st	Z, r24
     6c6:	91 83       	std	Z+1, r25	; 0x01
     6c8:	a2 83       	std	Z+2, r26	; 0x02
     6ca:	b3 83       	std	Z+3, r27	; 0x03
     6cc:	26 96       	adiw	r28, 0x06	; 6
     6ce:	0f b6       	in	r0, 0x3f	; 63
     6d0:	f8 94       	cli
     6d2:	de bf       	out	0x3e, r29	; 62
     6d4:	0f be       	out	0x3f, r0	; 63
     6d6:	cd bf       	out	0x3d, r28	; 61
     6d8:	df 91       	pop	r29
     6da:	cf 91       	pop	r28
     6dc:	08 95       	ret

000006de <_ZN10helicopter5model11SystemModel13XProportionalEf>:
				
			float XProportional() const {return xProportional;}
			void XProportional(float val) { xProportional = val;}
     6de:	cf 93       	push	r28
     6e0:	df 93       	push	r29
     6e2:	00 d0       	rcall	.+0      	; 0x6e4 <_ZN10helicopter5model11SystemModel13XProportionalEf+0x6>
     6e4:	00 d0       	rcall	.+0      	; 0x6e6 <_ZN10helicopter5model11SystemModel13XProportionalEf+0x8>
     6e6:	cd b7       	in	r28, 0x3d	; 61
     6e8:	de b7       	in	r29, 0x3e	; 62
     6ea:	9a 83       	std	Y+2, r25	; 0x02
     6ec:	89 83       	std	Y+1, r24	; 0x01
     6ee:	4b 83       	std	Y+3, r20	; 0x03
     6f0:	5c 83       	std	Y+4, r21	; 0x04
     6f2:	6d 83       	std	Y+5, r22	; 0x05
     6f4:	7e 83       	std	Y+6, r23	; 0x06
     6f6:	89 81       	ldd	r24, Y+1	; 0x01
     6f8:	9a 81       	ldd	r25, Y+2	; 0x02
     6fa:	9c 01       	movw	r18, r24
     6fc:	2f 5b       	subi	r18, 0xBF	; 191
     6fe:	3f 4f       	sbci	r19, 0xFF	; 255
     700:	8b 81       	ldd	r24, Y+3	; 0x03
     702:	9c 81       	ldd	r25, Y+4	; 0x04
     704:	ad 81       	ldd	r26, Y+5	; 0x05
     706:	be 81       	ldd	r27, Y+6	; 0x06
     708:	f9 01       	movw	r30, r18
     70a:	80 83       	st	Z, r24
     70c:	91 83       	std	Z+1, r25	; 0x01
     70e:	a2 83       	std	Z+2, r26	; 0x02
     710:	b3 83       	std	Z+3, r27	; 0x03
     712:	26 96       	adiw	r28, 0x06	; 6
     714:	0f b6       	in	r0, 0x3f	; 63
     716:	f8 94       	cli
     718:	de bf       	out	0x3e, r29	; 62
     71a:	0f be       	out	0x3f, r0	; 63
     71c:	cd bf       	out	0x3d, r28	; 61
     71e:	df 91       	pop	r29
     720:	cf 91       	pop	r28
     722:	08 95       	ret

00000724 <_ZNK10helicopter5model11SystemModel9XIntegralEv>:
				
			float XIntegral() const {return xIntegral;}
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
     728:	1f 92       	push	r1
     72a:	1f 92       	push	r1
     72c:	cd b7       	in	r28, 0x3d	; 61
     72e:	de b7       	in	r29, 0x3e	; 62
     730:	9a 83       	std	Y+2, r25	; 0x02
     732:	89 83       	std	Y+1, r24	; 0x01
     734:	89 81       	ldd	r24, Y+1	; 0x01
     736:	9a 81       	ldd	r25, Y+2	; 0x02
     738:	8b 5b       	subi	r24, 0xBB	; 187
     73a:	9f 4f       	sbci	r25, 0xFF	; 255
     73c:	fc 01       	movw	r30, r24
     73e:	80 81       	ld	r24, Z
     740:	91 81       	ldd	r25, Z+1	; 0x01
     742:	a2 81       	ldd	r26, Z+2	; 0x02
     744:	b3 81       	ldd	r27, Z+3	; 0x03
     746:	bc 01       	movw	r22, r24
     748:	cd 01       	movw	r24, r26
     74a:	0f 90       	pop	r0
     74c:	0f 90       	pop	r0
     74e:	df 91       	pop	r29
     750:	cf 91       	pop	r28
     752:	08 95       	ret

00000754 <_ZN10helicopter5model11SystemModel9XIntegralEf>:
			void XIntegral(float val) { xIntegral = val;}
     754:	cf 93       	push	r28
     756:	df 93       	push	r29
     758:	00 d0       	rcall	.+0      	; 0x75a <_ZN10helicopter5model11SystemModel9XIntegralEf+0x6>
     75a:	00 d0       	rcall	.+0      	; 0x75c <_ZN10helicopter5model11SystemModel9XIntegralEf+0x8>
     75c:	cd b7       	in	r28, 0x3d	; 61
     75e:	de b7       	in	r29, 0x3e	; 62
     760:	9a 83       	std	Y+2, r25	; 0x02
     762:	89 83       	std	Y+1, r24	; 0x01
     764:	4b 83       	std	Y+3, r20	; 0x03
     766:	5c 83       	std	Y+4, r21	; 0x04
     768:	6d 83       	std	Y+5, r22	; 0x05
     76a:	7e 83       	std	Y+6, r23	; 0x06
     76c:	89 81       	ldd	r24, Y+1	; 0x01
     76e:	9a 81       	ldd	r25, Y+2	; 0x02
     770:	9c 01       	movw	r18, r24
     772:	2b 5b       	subi	r18, 0xBB	; 187
     774:	3f 4f       	sbci	r19, 0xFF	; 255
     776:	8b 81       	ldd	r24, Y+3	; 0x03
     778:	9c 81       	ldd	r25, Y+4	; 0x04
     77a:	ad 81       	ldd	r26, Y+5	; 0x05
     77c:	be 81       	ldd	r27, Y+6	; 0x06
     77e:	f9 01       	movw	r30, r18
     780:	80 83       	st	Z, r24
     782:	91 83       	std	Z+1, r25	; 0x01
     784:	a2 83       	std	Z+2, r26	; 0x02
     786:	b3 83       	std	Z+3, r27	; 0x03
     788:	26 96       	adiw	r28, 0x06	; 6
     78a:	0f b6       	in	r0, 0x3f	; 63
     78c:	f8 94       	cli
     78e:	de bf       	out	0x3e, r29	; 62
     790:	0f be       	out	0x3f, r0	; 63
     792:	cd bf       	out	0x3d, r28	; 61
     794:	df 91       	pop	r29
     796:	cf 91       	pop	r28
     798:	08 95       	ret

0000079a <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf>:
				
			float XDerivativeError() const {return xDerivativeError;}
			void XDerivativeError(float val) { xDerivativeError = val;}
     79a:	cf 93       	push	r28
     79c:	df 93       	push	r29
     79e:	00 d0       	rcall	.+0      	; 0x7a0 <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf+0x6>
     7a0:	00 d0       	rcall	.+0      	; 0x7a2 <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf+0x8>
     7a2:	cd b7       	in	r28, 0x3d	; 61
     7a4:	de b7       	in	r29, 0x3e	; 62
     7a6:	9a 83       	std	Y+2, r25	; 0x02
     7a8:	89 83       	std	Y+1, r24	; 0x01
     7aa:	4b 83       	std	Y+3, r20	; 0x03
     7ac:	5c 83       	std	Y+4, r21	; 0x04
     7ae:	6d 83       	std	Y+5, r22	; 0x05
     7b0:	7e 83       	std	Y+6, r23	; 0x06
     7b2:	89 81       	ldd	r24, Y+1	; 0x01
     7b4:	9a 81       	ldd	r25, Y+2	; 0x02
     7b6:	9c 01       	movw	r18, r24
     7b8:	27 5b       	subi	r18, 0xB7	; 183
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	8b 81       	ldd	r24, Y+3	; 0x03
     7be:	9c 81       	ldd	r25, Y+4	; 0x04
     7c0:	ad 81       	ldd	r26, Y+5	; 0x05
     7c2:	be 81       	ldd	r27, Y+6	; 0x06
     7c4:	f9 01       	movw	r30, r18
     7c6:	80 83       	st	Z, r24
     7c8:	91 83       	std	Z+1, r25	; 0x01
     7ca:	a2 83       	std	Z+2, r26	; 0x02
     7cc:	b3 83       	std	Z+3, r27	; 0x03
     7ce:	26 96       	adiw	r28, 0x06	; 6
     7d0:	0f b6       	in	r0, 0x3f	; 63
     7d2:	f8 94       	cli
     7d4:	de bf       	out	0x3e, r29	; 62
     7d6:	0f be       	out	0x3f, r0	; 63
     7d8:	cd bf       	out	0x3d, r28	; 61
     7da:	df 91       	pop	r29
     7dc:	cf 91       	pop	r28
     7de:	08 95       	ret

000007e0 <_ZNK10helicopter5model11SystemModel17ThetaPitchDegreesEv>:
				
		
			float ThetaPitchDegrees() const {return thetaPitchDegrees;}
     7e0:	cf 93       	push	r28
     7e2:	df 93       	push	r29
     7e4:	1f 92       	push	r1
     7e6:	1f 92       	push	r1
     7e8:	cd b7       	in	r28, 0x3d	; 61
     7ea:	de b7       	in	r29, 0x3e	; 62
     7ec:	9a 83       	std	Y+2, r25	; 0x02
     7ee:	89 83       	std	Y+1, r24	; 0x01
     7f0:	89 81       	ldd	r24, Y+1	; 0x01
     7f2:	9a 81       	ldd	r25, Y+2	; 0x02
     7f4:	83 5b       	subi	r24, 0xB3	; 179
     7f6:	9f 4f       	sbci	r25, 0xFF	; 255
     7f8:	fc 01       	movw	r30, r24
     7fa:	80 81       	ld	r24, Z
     7fc:	91 81       	ldd	r25, Z+1	; 0x01
     7fe:	a2 81       	ldd	r26, Z+2	; 0x02
     800:	b3 81       	ldd	r27, Z+3	; 0x03
     802:	bc 01       	movw	r22, r24
     804:	cd 01       	movw	r24, r26
     806:	0f 90       	pop	r0
     808:	0f 90       	pop	r0
     80a:	df 91       	pop	r29
     80c:	cf 91       	pop	r28
     80e:	08 95       	ret

00000810 <_ZNK10helicopter5model11SystemModel33PitchAngularVelocityRadsPerSecondEv>:
			void ThetaPitchDegrees(float val) {thetaPitchDegrees = val;}
		
			float PitchAngularVelocityRadsPerSecond() const {return pitchAngularVelocityRadsPerSecond;}
     810:	cf 93       	push	r28
     812:	df 93       	push	r29
     814:	1f 92       	push	r1
     816:	1f 92       	push	r1
     818:	cd b7       	in	r28, 0x3d	; 61
     81a:	de b7       	in	r29, 0x3e	; 62
     81c:	9a 83       	std	Y+2, r25	; 0x02
     81e:	89 83       	std	Y+1, r24	; 0x01
     820:	89 81       	ldd	r24, Y+1	; 0x01
     822:	9a 81       	ldd	r25, Y+2	; 0x02
     824:	8f 5a       	subi	r24, 0xAF	; 175
     826:	9f 4f       	sbci	r25, 0xFF	; 255
     828:	fc 01       	movw	r30, r24
     82a:	80 81       	ld	r24, Z
     82c:	91 81       	ldd	r25, Z+1	; 0x01
     82e:	a2 81       	ldd	r26, Z+2	; 0x02
     830:	b3 81       	ldd	r27, Z+3	; 0x03
     832:	bc 01       	movw	r22, r24
     834:	cd 01       	movw	r24, r26
     836:	0f 90       	pop	r0
     838:	0f 90       	pop	r0
     83a:	df 91       	pop	r29
     83c:	cf 91       	pop	r28
     83e:	08 95       	ret

00000840 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>:
						
						
						


			float YNEDBodyFrame() const {return yNEDBodyFrame;}
     840:	cf 93       	push	r28
     842:	df 93       	push	r29
     844:	1f 92       	push	r1
     846:	1f 92       	push	r1
     848:	cd b7       	in	r28, 0x3d	; 61
     84a:	de b7       	in	r29, 0x3e	; 62
     84c:	9a 83       	std	Y+2, r25	; 0x02
     84e:	89 83       	std	Y+1, r24	; 0x01
     850:	89 81       	ldd	r24, Y+1	; 0x01
     852:	9a 81       	ldd	r25, Y+2	; 0x02
     854:	8b 5a       	subi	r24, 0xAB	; 171
     856:	9f 4f       	sbci	r25, 0xFF	; 255
     858:	fc 01       	movw	r30, r24
     85a:	80 81       	ld	r24, Z
     85c:	91 81       	ldd	r25, Z+1	; 0x01
     85e:	a2 81       	ldd	r26, Z+2	; 0x02
     860:	b3 81       	ldd	r27, Z+3	; 0x03
     862:	bc 01       	movw	r22, r24
     864:	cd 01       	movw	r24, r26
     866:	0f 90       	pop	r0
     868:	0f 90       	pop	r0
     86a:	df 91       	pop	r29
     86c:	cf 91       	pop	r28
     86e:	08 95       	ret

00000870 <_ZNK10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEv>:
			void YNEDBodyFrame(float val) { yNEDBodyFrame = val;}

			float ReferenceYNEDBodyFrame() const {return referenceYNEDBodyFrame;}
     870:	cf 93       	push	r28
     872:	df 93       	push	r29
     874:	1f 92       	push	r1
     876:	1f 92       	push	r1
     878:	cd b7       	in	r28, 0x3d	; 61
     87a:	de b7       	in	r29, 0x3e	; 62
     87c:	9a 83       	std	Y+2, r25	; 0x02
     87e:	89 83       	std	Y+1, r24	; 0x01
     880:	89 81       	ldd	r24, Y+1	; 0x01
     882:	9a 81       	ldd	r25, Y+2	; 0x02
     884:	87 5a       	subi	r24, 0xA7	; 167
     886:	9f 4f       	sbci	r25, 0xFF	; 255
     888:	fc 01       	movw	r30, r24
     88a:	80 81       	ld	r24, Z
     88c:	91 81       	ldd	r25, Z+1	; 0x01
     88e:	a2 81       	ldd	r26, Z+2	; 0x02
     890:	b3 81       	ldd	r27, Z+3	; 0x03
     892:	bc 01       	movw	r22, r24
     894:	cd 01       	movw	r24, r26
     896:	0f 90       	pop	r0
     898:	0f 90       	pop	r0
     89a:	df 91       	pop	r29
     89c:	cf 91       	pop	r28
     89e:	08 95       	ret

000008a0 <_ZNK10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEv>:
			void ReferenceYNEDBodyFrame(float val) { referenceYNEDBodyFrame = val;}

			float LateralControlBeforeServoLimitsAdjustment() const {return lateralControlBeforeServoLimitsAdjustment;}
     8a0:	cf 93       	push	r28
     8a2:	df 93       	push	r29
     8a4:	1f 92       	push	r1
     8a6:	1f 92       	push	r1
     8a8:	cd b7       	in	r28, 0x3d	; 61
     8aa:	de b7       	in	r29, 0x3e	; 62
     8ac:	9a 83       	std	Y+2, r25	; 0x02
     8ae:	89 83       	std	Y+1, r24	; 0x01
     8b0:	89 81       	ldd	r24, Y+1	; 0x01
     8b2:	9a 81       	ldd	r25, Y+2	; 0x02
     8b4:	83 5a       	subi	r24, 0xA3	; 163
     8b6:	9f 4f       	sbci	r25, 0xFF	; 255
     8b8:	fc 01       	movw	r30, r24
     8ba:	80 81       	ld	r24, Z
     8bc:	91 81       	ldd	r25, Z+1	; 0x01
     8be:	a2 81       	ldd	r26, Z+2	; 0x02
     8c0:	b3 81       	ldd	r27, Z+3	; 0x03
     8c2:	bc 01       	movw	r22, r24
     8c4:	cd 01       	movw	r24, r26
     8c6:	0f 90       	pop	r0
     8c8:	0f 90       	pop	r0
     8ca:	df 91       	pop	r29
     8cc:	cf 91       	pop	r28
     8ce:	08 95       	ret

000008d0 <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf>:
			void LateralControlBeforeServoLimitsAdjustment(float val) { lateralControlBeforeServoLimitsAdjustment = val;}
     8d0:	cf 93       	push	r28
     8d2:	df 93       	push	r29
     8d4:	00 d0       	rcall	.+0      	; 0x8d6 <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf+0x6>
     8d6:	00 d0       	rcall	.+0      	; 0x8d8 <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf+0x8>
     8d8:	cd b7       	in	r28, 0x3d	; 61
     8da:	de b7       	in	r29, 0x3e	; 62
     8dc:	9a 83       	std	Y+2, r25	; 0x02
     8de:	89 83       	std	Y+1, r24	; 0x01
     8e0:	4b 83       	std	Y+3, r20	; 0x03
     8e2:	5c 83       	std	Y+4, r21	; 0x04
     8e4:	6d 83       	std	Y+5, r22	; 0x05
     8e6:	7e 83       	std	Y+6, r23	; 0x06
     8e8:	89 81       	ldd	r24, Y+1	; 0x01
     8ea:	9a 81       	ldd	r25, Y+2	; 0x02
     8ec:	9c 01       	movw	r18, r24
     8ee:	23 5a       	subi	r18, 0xA3	; 163
     8f0:	3f 4f       	sbci	r19, 0xFF	; 255
     8f2:	8b 81       	ldd	r24, Y+3	; 0x03
     8f4:	9c 81       	ldd	r25, Y+4	; 0x04
     8f6:	ad 81       	ldd	r26, Y+5	; 0x05
     8f8:	be 81       	ldd	r27, Y+6	; 0x06
     8fa:	f9 01       	movw	r30, r18
     8fc:	80 83       	st	Z, r24
     8fe:	91 83       	std	Z+1, r25	; 0x01
     900:	a2 83       	std	Z+2, r26	; 0x02
     902:	b3 83       	std	Z+3, r27	; 0x03
     904:	26 96       	adiw	r28, 0x06	; 6
     906:	0f b6       	in	r0, 0x3f	; 63
     908:	f8 94       	cli
     90a:	de bf       	out	0x3e, r29	; 62
     90c:	0f be       	out	0x3f, r0	; 63
     90e:	cd bf       	out	0x3d, r28	; 61
     910:	df 91       	pop	r29
     912:	cf 91       	pop	r28
     914:	08 95       	ret

00000916 <_ZNK10helicopter5model11SystemModel14LateralControlEv>:

			float LateralControl() const {return lateralControl;}
     916:	cf 93       	push	r28
     918:	df 93       	push	r29
     91a:	1f 92       	push	r1
     91c:	1f 92       	push	r1
     91e:	cd b7       	in	r28, 0x3d	; 61
     920:	de b7       	in	r29, 0x3e	; 62
     922:	9a 83       	std	Y+2, r25	; 0x02
     924:	89 83       	std	Y+1, r24	; 0x01
     926:	89 81       	ldd	r24, Y+1	; 0x01
     928:	9a 81       	ldd	r25, Y+2	; 0x02
     92a:	8f 59       	subi	r24, 0x9F	; 159
     92c:	9f 4f       	sbci	r25, 0xFF	; 255
     92e:	fc 01       	movw	r30, r24
     930:	80 81       	ld	r24, Z
     932:	91 81       	ldd	r25, Z+1	; 0x01
     934:	a2 81       	ldd	r26, Z+2	; 0x02
     936:	b3 81       	ldd	r27, Z+3	; 0x03
     938:	bc 01       	movw	r22, r24
     93a:	cd 01       	movw	r24, r26
     93c:	0f 90       	pop	r0
     93e:	0f 90       	pop	r0
     940:	df 91       	pop	r29
     942:	cf 91       	pop	r28
     944:	08 95       	ret

00000946 <_ZN10helicopter5model11SystemModel14LateralControlEf>:
			void LateralControl(float val) { lateralControl = val;}
     946:	cf 93       	push	r28
     948:	df 93       	push	r29
     94a:	00 d0       	rcall	.+0      	; 0x94c <_ZN10helicopter5model11SystemModel14LateralControlEf+0x6>
     94c:	00 d0       	rcall	.+0      	; 0x94e <_ZN10helicopter5model11SystemModel14LateralControlEf+0x8>
     94e:	cd b7       	in	r28, 0x3d	; 61
     950:	de b7       	in	r29, 0x3e	; 62
     952:	9a 83       	std	Y+2, r25	; 0x02
     954:	89 83       	std	Y+1, r24	; 0x01
     956:	4b 83       	std	Y+3, r20	; 0x03
     958:	5c 83       	std	Y+4, r21	; 0x04
     95a:	6d 83       	std	Y+5, r22	; 0x05
     95c:	7e 83       	std	Y+6, r23	; 0x06
     95e:	89 81       	ldd	r24, Y+1	; 0x01
     960:	9a 81       	ldd	r25, Y+2	; 0x02
     962:	9c 01       	movw	r18, r24
     964:	2f 59       	subi	r18, 0x9F	; 159
     966:	3f 4f       	sbci	r19, 0xFF	; 255
     968:	8b 81       	ldd	r24, Y+3	; 0x03
     96a:	9c 81       	ldd	r25, Y+4	; 0x04
     96c:	ad 81       	ldd	r26, Y+5	; 0x05
     96e:	be 81       	ldd	r27, Y+6	; 0x06
     970:	f9 01       	movw	r30, r18
     972:	80 83       	st	Z, r24
     974:	91 83       	std	Z+1, r25	; 0x01
     976:	a2 83       	std	Z+2, r26	; 0x02
     978:	b3 83       	std	Z+3, r27	; 0x03
     97a:	26 96       	adiw	r28, 0x06	; 6
     97c:	0f b6       	in	r0, 0x3f	; 63
     97e:	f8 94       	cli
     980:	de bf       	out	0x3e, r29	; 62
     982:	0f be       	out	0x3f, r0	; 63
     984:	cd bf       	out	0x3d, r28	; 61
     986:	df 91       	pop	r29
     988:	cf 91       	pop	r28
     98a:	08 95       	ret

0000098c <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>:

			float YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
     98c:	cf 93       	push	r28
     98e:	df 93       	push	r29
     990:	1f 92       	push	r1
     992:	1f 92       	push	r1
     994:	cd b7       	in	r28, 0x3d	; 61
     996:	de b7       	in	r29, 0x3e	; 62
     998:	9a 83       	std	Y+2, r25	; 0x02
     99a:	89 83       	std	Y+1, r24	; 0x01
     99c:	89 81       	ldd	r24, Y+1	; 0x01
     99e:	9a 81       	ldd	r25, Y+2	; 0x02
     9a0:	8b 59       	subi	r24, 0x9B	; 155
     9a2:	9f 4f       	sbci	r25, 0xFF	; 255
     9a4:	fc 01       	movw	r30, r24
     9a6:	80 81       	ld	r24, Z
     9a8:	91 81       	ldd	r25, Z+1	; 0x01
     9aa:	a2 81       	ldd	r26, Z+2	; 0x02
     9ac:	b3 81       	ldd	r27, Z+3	; 0x03
     9ae:	bc 01       	movw	r22, r24
     9b0:	cd 01       	movw	r24, r26
     9b2:	0f 90       	pop	r0
     9b4:	0f 90       	pop	r0
     9b6:	df 91       	pop	r29
     9b8:	cf 91       	pop	r28
     9ba:	08 95       	ret

000009bc <_ZNK10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEv>:
			void YVelocityMetersPerSecond(float val) { yVelocityMetersPerSecond = val;}

			float ReferenceYVelocityMetersPerSecond() const {return referenceYVelocityMetersPerSecond;}
     9bc:	cf 93       	push	r28
     9be:	df 93       	push	r29
     9c0:	1f 92       	push	r1
     9c2:	1f 92       	push	r1
     9c4:	cd b7       	in	r28, 0x3d	; 61
     9c6:	de b7       	in	r29, 0x3e	; 62
     9c8:	9a 83       	std	Y+2, r25	; 0x02
     9ca:	89 83       	std	Y+1, r24	; 0x01
     9cc:	89 81       	ldd	r24, Y+1	; 0x01
     9ce:	9a 81       	ldd	r25, Y+2	; 0x02
     9d0:	87 59       	subi	r24, 0x97	; 151
     9d2:	9f 4f       	sbci	r25, 0xFF	; 255
     9d4:	fc 01       	movw	r30, r24
     9d6:	80 81       	ld	r24, Z
     9d8:	91 81       	ldd	r25, Z+1	; 0x01
     9da:	a2 81       	ldd	r26, Z+2	; 0x02
     9dc:	b3 81       	ldd	r27, Z+3	; 0x03
     9de:	bc 01       	movw	r22, r24
     9e0:	cd 01       	movw	r24, r26
     9e2:	0f 90       	pop	r0
     9e4:	0f 90       	pop	r0
     9e6:	df 91       	pop	r29
     9e8:	cf 91       	pop	r28
     9ea:	08 95       	ret

000009ec <_ZNK10helicopter5model11SystemModel25YLateralOuterLoopSetpointEv>:
			void ReferenceYVelocityMetersPerSecond(float val) { referenceYVelocityMetersPerSecond = val;}

			float YLateralOuterLoopSetpoint() const {return yLateralOuterLoopSetpoint;}
     9ec:	cf 93       	push	r28
     9ee:	df 93       	push	r29
     9f0:	1f 92       	push	r1
     9f2:	1f 92       	push	r1
     9f4:	cd b7       	in	r28, 0x3d	; 61
     9f6:	de b7       	in	r29, 0x3e	; 62
     9f8:	9a 83       	std	Y+2, r25	; 0x02
     9fa:	89 83       	std	Y+1, r24	; 0x01
     9fc:	89 81       	ldd	r24, Y+1	; 0x01
     9fe:	9a 81       	ldd	r25, Y+2	; 0x02
     a00:	83 59       	subi	r24, 0x93	; 147
     a02:	9f 4f       	sbci	r25, 0xFF	; 255
     a04:	fc 01       	movw	r30, r24
     a06:	80 81       	ld	r24, Z
     a08:	91 81       	ldd	r25, Z+1	; 0x01
     a0a:	a2 81       	ldd	r26, Z+2	; 0x02
     a0c:	b3 81       	ldd	r27, Z+3	; 0x03
     a0e:	bc 01       	movw	r22, r24
     a10:	cd 01       	movw	r24, r26
     a12:	0f 90       	pop	r0
     a14:	0f 90       	pop	r0
     a16:	df 91       	pop	r29
     a18:	cf 91       	pop	r28
     a1a:	08 95       	ret

00000a1c <_ZN10helicopter5model11SystemModel25YLateralOuterLoopSetpointEf>:
			void YLateralOuterLoopSetpoint(float val) { yLateralOuterLoopSetpoint = val;}
     a1c:	cf 93       	push	r28
     a1e:	df 93       	push	r29
     a20:	00 d0       	rcall	.+0      	; 0xa22 <_ZN10helicopter5model11SystemModel25YLateralOuterLoopSetpointEf+0x6>
     a22:	00 d0       	rcall	.+0      	; 0xa24 <_ZN10helicopter5model11SystemModel25YLateralOuterLoopSetpointEf+0x8>
     a24:	cd b7       	in	r28, 0x3d	; 61
     a26:	de b7       	in	r29, 0x3e	; 62
     a28:	9a 83       	std	Y+2, r25	; 0x02
     a2a:	89 83       	std	Y+1, r24	; 0x01
     a2c:	4b 83       	std	Y+3, r20	; 0x03
     a2e:	5c 83       	std	Y+4, r21	; 0x04
     a30:	6d 83       	std	Y+5, r22	; 0x05
     a32:	7e 83       	std	Y+6, r23	; 0x06
     a34:	89 81       	ldd	r24, Y+1	; 0x01
     a36:	9a 81       	ldd	r25, Y+2	; 0x02
     a38:	9c 01       	movw	r18, r24
     a3a:	23 59       	subi	r18, 0x93	; 147
     a3c:	3f 4f       	sbci	r19, 0xFF	; 255
     a3e:	8b 81       	ldd	r24, Y+3	; 0x03
     a40:	9c 81       	ldd	r25, Y+4	; 0x04
     a42:	ad 81       	ldd	r26, Y+5	; 0x05
     a44:	be 81       	ldd	r27, Y+6	; 0x06
     a46:	f9 01       	movw	r30, r18
     a48:	80 83       	st	Z, r24
     a4a:	91 83       	std	Z+1, r25	; 0x01
     a4c:	a2 83       	std	Z+2, r26	; 0x02
     a4e:	b3 83       	std	Z+3, r27	; 0x03
     a50:	26 96       	adiw	r28, 0x06	; 6
     a52:	0f b6       	in	r0, 0x3f	; 63
     a54:	f8 94       	cli
     a56:	de bf       	out	0x3e, r29	; 62
     a58:	0f be       	out	0x3f, r0	; 63
     a5a:	cd bf       	out	0x3d, r28	; 61
     a5c:	df 91       	pop	r29
     a5e:	cf 91       	pop	r28
     a60:	08 95       	ret

00000a62 <_ZN10helicopter5model11SystemModel13YProportionalEf>:

			float YProportional() const {return yProportional;}
			void YProportional(float val) { yProportional = val;}
     a62:	cf 93       	push	r28
     a64:	df 93       	push	r29
     a66:	00 d0       	rcall	.+0      	; 0xa68 <_ZN10helicopter5model11SystemModel13YProportionalEf+0x6>
     a68:	00 d0       	rcall	.+0      	; 0xa6a <_ZN10helicopter5model11SystemModel13YProportionalEf+0x8>
     a6a:	cd b7       	in	r28, 0x3d	; 61
     a6c:	de b7       	in	r29, 0x3e	; 62
     a6e:	9a 83       	std	Y+2, r25	; 0x02
     a70:	89 83       	std	Y+1, r24	; 0x01
     a72:	4b 83       	std	Y+3, r20	; 0x03
     a74:	5c 83       	std	Y+4, r21	; 0x04
     a76:	6d 83       	std	Y+5, r22	; 0x05
     a78:	7e 83       	std	Y+6, r23	; 0x06
     a7a:	89 81       	ldd	r24, Y+1	; 0x01
     a7c:	9a 81       	ldd	r25, Y+2	; 0x02
     a7e:	9c 01       	movw	r18, r24
     a80:	2f 58       	subi	r18, 0x8F	; 143
     a82:	3f 4f       	sbci	r19, 0xFF	; 255
     a84:	8b 81       	ldd	r24, Y+3	; 0x03
     a86:	9c 81       	ldd	r25, Y+4	; 0x04
     a88:	ad 81       	ldd	r26, Y+5	; 0x05
     a8a:	be 81       	ldd	r27, Y+6	; 0x06
     a8c:	f9 01       	movw	r30, r18
     a8e:	80 83       	st	Z, r24
     a90:	91 83       	std	Z+1, r25	; 0x01
     a92:	a2 83       	std	Z+2, r26	; 0x02
     a94:	b3 83       	std	Z+3, r27	; 0x03
     a96:	26 96       	adiw	r28, 0x06	; 6
     a98:	0f b6       	in	r0, 0x3f	; 63
     a9a:	f8 94       	cli
     a9c:	de bf       	out	0x3e, r29	; 62
     a9e:	0f be       	out	0x3f, r0	; 63
     aa0:	cd bf       	out	0x3d, r28	; 61
     aa2:	df 91       	pop	r29
     aa4:	cf 91       	pop	r28
     aa6:	08 95       	ret

00000aa8 <_ZNK10helicopter5model11SystemModel9YIntegralEv>:

			float YIntegral() const {return yIntegral;}
     aa8:	cf 93       	push	r28
     aaa:	df 93       	push	r29
     aac:	1f 92       	push	r1
     aae:	1f 92       	push	r1
     ab0:	cd b7       	in	r28, 0x3d	; 61
     ab2:	de b7       	in	r29, 0x3e	; 62
     ab4:	9a 83       	std	Y+2, r25	; 0x02
     ab6:	89 83       	std	Y+1, r24	; 0x01
     ab8:	89 81       	ldd	r24, Y+1	; 0x01
     aba:	9a 81       	ldd	r25, Y+2	; 0x02
     abc:	8b 58       	subi	r24, 0x8B	; 139
     abe:	9f 4f       	sbci	r25, 0xFF	; 255
     ac0:	fc 01       	movw	r30, r24
     ac2:	80 81       	ld	r24, Z
     ac4:	91 81       	ldd	r25, Z+1	; 0x01
     ac6:	a2 81       	ldd	r26, Z+2	; 0x02
     ac8:	b3 81       	ldd	r27, Z+3	; 0x03
     aca:	bc 01       	movw	r22, r24
     acc:	cd 01       	movw	r24, r26
     ace:	0f 90       	pop	r0
     ad0:	0f 90       	pop	r0
     ad2:	df 91       	pop	r29
     ad4:	cf 91       	pop	r28
     ad6:	08 95       	ret

00000ad8 <_ZN10helicopter5model11SystemModel9YIntegralEf>:
			void YIntegral(float val) { yIntegral = val;}
     ad8:	cf 93       	push	r28
     ada:	df 93       	push	r29
     adc:	00 d0       	rcall	.+0      	; 0xade <_ZN10helicopter5model11SystemModel9YIntegralEf+0x6>
     ade:	00 d0       	rcall	.+0      	; 0xae0 <_ZN10helicopter5model11SystemModel9YIntegralEf+0x8>
     ae0:	cd b7       	in	r28, 0x3d	; 61
     ae2:	de b7       	in	r29, 0x3e	; 62
     ae4:	9a 83       	std	Y+2, r25	; 0x02
     ae6:	89 83       	std	Y+1, r24	; 0x01
     ae8:	4b 83       	std	Y+3, r20	; 0x03
     aea:	5c 83       	std	Y+4, r21	; 0x04
     aec:	6d 83       	std	Y+5, r22	; 0x05
     aee:	7e 83       	std	Y+6, r23	; 0x06
     af0:	89 81       	ldd	r24, Y+1	; 0x01
     af2:	9a 81       	ldd	r25, Y+2	; 0x02
     af4:	9c 01       	movw	r18, r24
     af6:	2b 58       	subi	r18, 0x8B	; 139
     af8:	3f 4f       	sbci	r19, 0xFF	; 255
     afa:	8b 81       	ldd	r24, Y+3	; 0x03
     afc:	9c 81       	ldd	r25, Y+4	; 0x04
     afe:	ad 81       	ldd	r26, Y+5	; 0x05
     b00:	be 81       	ldd	r27, Y+6	; 0x06
     b02:	f9 01       	movw	r30, r18
     b04:	80 83       	st	Z, r24
     b06:	91 83       	std	Z+1, r25	; 0x01
     b08:	a2 83       	std	Z+2, r26	; 0x02
     b0a:	b3 83       	std	Z+3, r27	; 0x03
     b0c:	26 96       	adiw	r28, 0x06	; 6
     b0e:	0f b6       	in	r0, 0x3f	; 63
     b10:	f8 94       	cli
     b12:	de bf       	out	0x3e, r29	; 62
     b14:	0f be       	out	0x3f, r0	; 63
     b16:	cd bf       	out	0x3d, r28	; 61
     b18:	df 91       	pop	r29
     b1a:	cf 91       	pop	r28
     b1c:	08 95       	ret

00000b1e <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf>:

			float YDerivativeError() const {return yDerivativeError;}
			void YDerivativeError(float val) { yDerivativeError = val;}
     b1e:	cf 93       	push	r28
     b20:	df 93       	push	r29
     b22:	00 d0       	rcall	.+0      	; 0xb24 <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf+0x6>
     b24:	00 d0       	rcall	.+0      	; 0xb26 <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf+0x8>
     b26:	cd b7       	in	r28, 0x3d	; 61
     b28:	de b7       	in	r29, 0x3e	; 62
     b2a:	9a 83       	std	Y+2, r25	; 0x02
     b2c:	89 83       	std	Y+1, r24	; 0x01
     b2e:	4b 83       	std	Y+3, r20	; 0x03
     b30:	5c 83       	std	Y+4, r21	; 0x04
     b32:	6d 83       	std	Y+5, r22	; 0x05
     b34:	7e 83       	std	Y+6, r23	; 0x06
     b36:	89 81       	ldd	r24, Y+1	; 0x01
     b38:	9a 81       	ldd	r25, Y+2	; 0x02
     b3a:	9c 01       	movw	r18, r24
     b3c:	27 58       	subi	r18, 0x87	; 135
     b3e:	3f 4f       	sbci	r19, 0xFF	; 255
     b40:	8b 81       	ldd	r24, Y+3	; 0x03
     b42:	9c 81       	ldd	r25, Y+4	; 0x04
     b44:	ad 81       	ldd	r26, Y+5	; 0x05
     b46:	be 81       	ldd	r27, Y+6	; 0x06
     b48:	f9 01       	movw	r30, r18
     b4a:	80 83       	st	Z, r24
     b4c:	91 83       	std	Z+1, r25	; 0x01
     b4e:	a2 83       	std	Z+2, r26	; 0x02
     b50:	b3 83       	std	Z+3, r27	; 0x03
     b52:	26 96       	adiw	r28, 0x06	; 6
     b54:	0f b6       	in	r0, 0x3f	; 63
     b56:	f8 94       	cli
     b58:	de bf       	out	0x3e, r29	; 62
     b5a:	0f be       	out	0x3f, r0	; 63
     b5c:	cd bf       	out	0x3d, r28	; 61
     b5e:	df 91       	pop	r29
     b60:	cf 91       	pop	r28
     b62:	08 95       	ret

00000b64 <_ZNK10helicopter5model11SystemModel14PhiRollDegreesEv>:


			float PhiRollDegrees() const {return phiRollDegrees;}
     b64:	cf 93       	push	r28
     b66:	df 93       	push	r29
     b68:	1f 92       	push	r1
     b6a:	1f 92       	push	r1
     b6c:	cd b7       	in	r28, 0x3d	; 61
     b6e:	de b7       	in	r29, 0x3e	; 62
     b70:	9a 83       	std	Y+2, r25	; 0x02
     b72:	89 83       	std	Y+1, r24	; 0x01
     b74:	89 81       	ldd	r24, Y+1	; 0x01
     b76:	9a 81       	ldd	r25, Y+2	; 0x02
     b78:	83 58       	subi	r24, 0x83	; 131
     b7a:	9f 4f       	sbci	r25, 0xFF	; 255
     b7c:	fc 01       	movw	r30, r24
     b7e:	80 81       	ld	r24, Z
     b80:	91 81       	ldd	r25, Z+1	; 0x01
     b82:	a2 81       	ldd	r26, Z+2	; 0x02
     b84:	b3 81       	ldd	r27, Z+3	; 0x03
     b86:	bc 01       	movw	r22, r24
     b88:	cd 01       	movw	r24, r26
     b8a:	0f 90       	pop	r0
     b8c:	0f 90       	pop	r0
     b8e:	df 91       	pop	r29
     b90:	cf 91       	pop	r28
     b92:	08 95       	ret

00000b94 <_ZNK10helicopter5model11SystemModel32RollAngularVelocityRadsPerSecondEv>:
			void PhiRollDegrees(float val) {phiRollDegrees = val;}

			float RollAngularVelocityRadsPerSecond() const {return rollAngularVelocityRadsPerSecond;}
     b94:	cf 93       	push	r28
     b96:	df 93       	push	r29
     b98:	1f 92       	push	r1
     b9a:	1f 92       	push	r1
     b9c:	cd b7       	in	r28, 0x3d	; 61
     b9e:	de b7       	in	r29, 0x3e	; 62
     ba0:	9a 83       	std	Y+2, r25	; 0x02
     ba2:	89 83       	std	Y+1, r24	; 0x01
     ba4:	89 81       	ldd	r24, Y+1	; 0x01
     ba6:	9a 81       	ldd	r25, Y+2	; 0x02
     ba8:	8f 57       	subi	r24, 0x7F	; 127
     baa:	9f 4f       	sbci	r25, 0xFF	; 255
     bac:	fc 01       	movw	r30, r24
     bae:	80 81       	ld	r24, Z
     bb0:	91 81       	ldd	r25, Z+1	; 0x01
     bb2:	a2 81       	ldd	r26, Z+2	; 0x02
     bb4:	b3 81       	ldd	r27, Z+3	; 0x03
     bb6:	bc 01       	movw	r22, r24
     bb8:	cd 01       	movw	r24, r26
     bba:	0f 90       	pop	r0
     bbc:	0f 90       	pop	r0
     bbe:	df 91       	pop	r29
     bc0:	cf 91       	pop	r28
     bc2:	08 95       	ret

00000bc4 <_ZNK10helicopter5model11SystemModel13ZNEDBodyFrameEv>:
						

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
			void AltitudeFeetAgl(float val) { altitudeFeetAgl = val; }

			float ZNEDBodyFrame() const { return zNEDBodyFrame; }
     bc4:	cf 93       	push	r28
     bc6:	df 93       	push	r29
     bc8:	1f 92       	push	r1
     bca:	1f 92       	push	r1
     bcc:	cd b7       	in	r28, 0x3d	; 61
     bce:	de b7       	in	r29, 0x3e	; 62
     bd0:	9a 83       	std	Y+2, r25	; 0x02
     bd2:	89 83       	std	Y+1, r24	; 0x01
     bd4:	89 81       	ldd	r24, Y+1	; 0x01
     bd6:	9a 81       	ldd	r25, Y+2	; 0x02
     bd8:	87 57       	subi	r24, 0x77	; 119
     bda:	9f 4f       	sbci	r25, 0xFF	; 255
     bdc:	fc 01       	movw	r30, r24
     bde:	80 81       	ld	r24, Z
     be0:	91 81       	ldd	r25, Z+1	; 0x01
     be2:	a2 81       	ldd	r26, Z+2	; 0x02
     be4:	b3 81       	ldd	r27, Z+3	; 0x03
     be6:	bc 01       	movw	r22, r24
     be8:	cd 01       	movw	r24, r26
     bea:	0f 90       	pop	r0
     bec:	0f 90       	pop	r0
     bee:	df 91       	pop	r29
     bf0:	cf 91       	pop	r28
     bf2:	08 95       	ret

00000bf4 <_ZNK10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEv>:
			void ZNEDBodyFrame(float val) { zNEDBodyFrame = val; }


			float ReferenceZNEDBodyFrameFeet() const {return referenceAltitudeFeet;}
     bf4:	cf 93       	push	r28
     bf6:	df 93       	push	r29
     bf8:	1f 92       	push	r1
     bfa:	1f 92       	push	r1
     bfc:	cd b7       	in	r28, 0x3d	; 61
     bfe:	de b7       	in	r29, 0x3e	; 62
     c00:	9a 83       	std	Y+2, r25	; 0x02
     c02:	89 83       	std	Y+1, r24	; 0x01
     c04:	89 81       	ldd	r24, Y+1	; 0x01
     c06:	9a 81       	ldd	r25, Y+2	; 0x02
     c08:	83 57       	subi	r24, 0x73	; 115
     c0a:	9f 4f       	sbci	r25, 0xFF	; 255
     c0c:	fc 01       	movw	r30, r24
     c0e:	80 81       	ld	r24, Z
     c10:	91 81       	ldd	r25, Z+1	; 0x01
     c12:	a2 81       	ldd	r26, Z+2	; 0x02
     c14:	b3 81       	ldd	r27, Z+3	; 0x03
     c16:	bc 01       	movw	r22, r24
     c18:	cd 01       	movw	r24, r26
     c1a:	0f 90       	pop	r0
     c1c:	0f 90       	pop	r0
     c1e:	df 91       	pop	r29
     c20:	cf 91       	pop	r28
     c22:	08 95       	ret

00000c24 <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>:
			void ReferenceZNEDBodyFrameFeet(float val) { referenceAltitudeFeet = val;}


			float MainRotorCollectiveControl() const {return mainRotorControl;}
     c24:	cf 93       	push	r28
     c26:	df 93       	push	r29
     c28:	1f 92       	push	r1
     c2a:	1f 92       	push	r1
     c2c:	cd b7       	in	r28, 0x3d	; 61
     c2e:	de b7       	in	r29, 0x3e	; 62
     c30:	9a 83       	std	Y+2, r25	; 0x02
     c32:	89 83       	std	Y+1, r24	; 0x01
     c34:	89 81       	ldd	r24, Y+1	; 0x01
     c36:	9a 81       	ldd	r25, Y+2	; 0x02
     c38:	8f 56       	subi	r24, 0x6F	; 111
     c3a:	9f 4f       	sbci	r25, 0xFF	; 255
     c3c:	fc 01       	movw	r30, r24
     c3e:	80 81       	ld	r24, Z
     c40:	91 81       	ldd	r25, Z+1	; 0x01
     c42:	a2 81       	ldd	r26, Z+2	; 0x02
     c44:	b3 81       	ldd	r27, Z+3	; 0x03
     c46:	bc 01       	movw	r22, r24
     c48:	cd 01       	movw	r24, r26
     c4a:	0f 90       	pop	r0
     c4c:	0f 90       	pop	r0
     c4e:	df 91       	pop	r29
     c50:	cf 91       	pop	r28
     c52:	08 95       	ret

00000c54 <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf>:
			void MainRotorCollectiveControl(float val) { mainRotorControl = val;}
     c54:	cf 93       	push	r28
     c56:	df 93       	push	r29
     c58:	00 d0       	rcall	.+0      	; 0xc5a <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf+0x6>
     c5a:	00 d0       	rcall	.+0      	; 0xc5c <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf+0x8>
     c5c:	cd b7       	in	r28, 0x3d	; 61
     c5e:	de b7       	in	r29, 0x3e	; 62
     c60:	9a 83       	std	Y+2, r25	; 0x02
     c62:	89 83       	std	Y+1, r24	; 0x01
     c64:	4b 83       	std	Y+3, r20	; 0x03
     c66:	5c 83       	std	Y+4, r21	; 0x04
     c68:	6d 83       	std	Y+5, r22	; 0x05
     c6a:	7e 83       	std	Y+6, r23	; 0x06
     c6c:	89 81       	ldd	r24, Y+1	; 0x01
     c6e:	9a 81       	ldd	r25, Y+2	; 0x02
     c70:	9c 01       	movw	r18, r24
     c72:	2f 56       	subi	r18, 0x6F	; 111
     c74:	3f 4f       	sbci	r19, 0xFF	; 255
     c76:	8b 81       	ldd	r24, Y+3	; 0x03
     c78:	9c 81       	ldd	r25, Y+4	; 0x04
     c7a:	ad 81       	ldd	r26, Y+5	; 0x05
     c7c:	be 81       	ldd	r27, Y+6	; 0x06
     c7e:	f9 01       	movw	r30, r18
     c80:	80 83       	st	Z, r24
     c82:	91 83       	std	Z+1, r25	; 0x01
     c84:	a2 83       	std	Z+2, r26	; 0x02
     c86:	b3 83       	std	Z+3, r27	; 0x03
     c88:	26 96       	adiw	r28, 0x06	; 6
     c8a:	0f b6       	in	r0, 0x3f	; 63
     c8c:	f8 94       	cli
     c8e:	de bf       	out	0x3e, r29	; 62
     c90:	0f be       	out	0x3f, r0	; 63
     c92:	cd bf       	out	0x3d, r28	; 61
     c94:	df 91       	pop	r29
     c96:	cf 91       	pop	r28
     c98:	08 95       	ret

00000c9a <_ZNK10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEv>:

			float MainRotorControlBeforeServoLimitsAdjustment() const {return mainRotorControlBeforeServoLimitsAdjustment;}
     c9a:	cf 93       	push	r28
     c9c:	df 93       	push	r29
     c9e:	1f 92       	push	r1
     ca0:	1f 92       	push	r1
     ca2:	cd b7       	in	r28, 0x3d	; 61
     ca4:	de b7       	in	r29, 0x3e	; 62
     ca6:	9a 83       	std	Y+2, r25	; 0x02
     ca8:	89 83       	std	Y+1, r24	; 0x01
     caa:	89 81       	ldd	r24, Y+1	; 0x01
     cac:	9a 81       	ldd	r25, Y+2	; 0x02
     cae:	8b 56       	subi	r24, 0x6B	; 107
     cb0:	9f 4f       	sbci	r25, 0xFF	; 255
     cb2:	fc 01       	movw	r30, r24
     cb4:	80 81       	ld	r24, Z
     cb6:	91 81       	ldd	r25, Z+1	; 0x01
     cb8:	a2 81       	ldd	r26, Z+2	; 0x02
     cba:	b3 81       	ldd	r27, Z+3	; 0x03
     cbc:	bc 01       	movw	r22, r24
     cbe:	cd 01       	movw	r24, r26
     cc0:	0f 90       	pop	r0
     cc2:	0f 90       	pop	r0
     cc4:	df 91       	pop	r29
     cc6:	cf 91       	pop	r28
     cc8:	08 95       	ret

00000cca <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf>:
			void MainRotorControlBeforeServoLimitsAdjustment(float val) { mainRotorControlBeforeServoLimitsAdjustment = val;}
     cca:	cf 93       	push	r28
     ccc:	df 93       	push	r29
     cce:	00 d0       	rcall	.+0      	; 0xcd0 <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf+0x6>
     cd0:	00 d0       	rcall	.+0      	; 0xcd2 <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf+0x8>
     cd2:	cd b7       	in	r28, 0x3d	; 61
     cd4:	de b7       	in	r29, 0x3e	; 62
     cd6:	9a 83       	std	Y+2, r25	; 0x02
     cd8:	89 83       	std	Y+1, r24	; 0x01
     cda:	4b 83       	std	Y+3, r20	; 0x03
     cdc:	5c 83       	std	Y+4, r21	; 0x04
     cde:	6d 83       	std	Y+5, r22	; 0x05
     ce0:	7e 83       	std	Y+6, r23	; 0x06
     ce2:	89 81       	ldd	r24, Y+1	; 0x01
     ce4:	9a 81       	ldd	r25, Y+2	; 0x02
     ce6:	9c 01       	movw	r18, r24
     ce8:	2b 56       	subi	r18, 0x6B	; 107
     cea:	3f 4f       	sbci	r19, 0xFF	; 255
     cec:	8b 81       	ldd	r24, Y+3	; 0x03
     cee:	9c 81       	ldd	r25, Y+4	; 0x04
     cf0:	ad 81       	ldd	r26, Y+5	; 0x05
     cf2:	be 81       	ldd	r27, Y+6	; 0x06
     cf4:	f9 01       	movw	r30, r18
     cf6:	80 83       	st	Z, r24
     cf8:	91 83       	std	Z+1, r25	; 0x01
     cfa:	a2 83       	std	Z+2, r26	; 0x02
     cfc:	b3 83       	std	Z+3, r27	; 0x03
     cfe:	26 96       	adiw	r28, 0x06	; 6
     d00:	0f b6       	in	r0, 0x3f	; 63
     d02:	f8 94       	cli
     d04:	de bf       	out	0x3e, r29	; 62
     d06:	0f be       	out	0x3f, r0	; 63
     d08:	cd bf       	out	0x3d, r28	; 61
     d0a:	df 91       	pop	r29
     d0c:	cf 91       	pop	r28
     d0e:	08 95       	ret

00000d10 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>:

			float ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
     d10:	cf 93       	push	r28
     d12:	df 93       	push	r29
     d14:	1f 92       	push	r1
     d16:	1f 92       	push	r1
     d18:	cd b7       	in	r28, 0x3d	; 61
     d1a:	de b7       	in	r29, 0x3e	; 62
     d1c:	9a 83       	std	Y+2, r25	; 0x02
     d1e:	89 83       	std	Y+1, r24	; 0x01
     d20:	89 81       	ldd	r24, Y+1	; 0x01
     d22:	9a 81       	ldd	r25, Y+2	; 0x02
     d24:	87 56       	subi	r24, 0x67	; 103
     d26:	9f 4f       	sbci	r25, 0xFF	; 255
     d28:	fc 01       	movw	r30, r24
     d2a:	80 81       	ld	r24, Z
     d2c:	91 81       	ldd	r25, Z+1	; 0x01
     d2e:	a2 81       	ldd	r26, Z+2	; 0x02
     d30:	b3 81       	ldd	r27, Z+3	; 0x03
     d32:	bc 01       	movw	r22, r24
     d34:	cd 01       	movw	r24, r26
     d36:	0f 90       	pop	r0
     d38:	0f 90       	pop	r0
     d3a:	df 91       	pop	r29
     d3c:	cf 91       	pop	r28
     d3e:	08 95       	ret

00000d40 <_ZNK10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEv>:
			void ZVelocityFeetPerSecond(float val) { zVelocityFeetPerSecond = val;}

			float ReferenceZVelocityFeetPerSecond() const {return referenceZVelocityFeetPerSecond;}
     d40:	cf 93       	push	r28
     d42:	df 93       	push	r29
     d44:	1f 92       	push	r1
     d46:	1f 92       	push	r1
     d48:	cd b7       	in	r28, 0x3d	; 61
     d4a:	de b7       	in	r29, 0x3e	; 62
     d4c:	9a 83       	std	Y+2, r25	; 0x02
     d4e:	89 83       	std	Y+1, r24	; 0x01
     d50:	89 81       	ldd	r24, Y+1	; 0x01
     d52:	9a 81       	ldd	r25, Y+2	; 0x02
     d54:	83 56       	subi	r24, 0x63	; 99
     d56:	9f 4f       	sbci	r25, 0xFF	; 255
     d58:	fc 01       	movw	r30, r24
     d5a:	80 81       	ld	r24, Z
     d5c:	91 81       	ldd	r25, Z+1	; 0x01
     d5e:	a2 81       	ldd	r26, Z+2	; 0x02
     d60:	b3 81       	ldd	r27, Z+3	; 0x03
     d62:	bc 01       	movw	r22, r24
     d64:	cd 01       	movw	r24, r26
     d66:	0f 90       	pop	r0
     d68:	0f 90       	pop	r0
     d6a:	df 91       	pop	r29
     d6c:	cf 91       	pop	r28
     d6e:	08 95       	ret

00000d70 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>:
			void ReferenceZVelocityFeetPerSecond(float val) { referenceZVelocityFeetPerSecond = val;}

			float ZIntegral() const {return zIntegral;}
     d70:	cf 93       	push	r28
     d72:	df 93       	push	r29
     d74:	1f 92       	push	r1
     d76:	1f 92       	push	r1
     d78:	cd b7       	in	r28, 0x3d	; 61
     d7a:	de b7       	in	r29, 0x3e	; 62
     d7c:	9a 83       	std	Y+2, r25	; 0x02
     d7e:	89 83       	std	Y+1, r24	; 0x01
     d80:	89 81       	ldd	r24, Y+1	; 0x01
     d82:	9a 81       	ldd	r25, Y+2	; 0x02
     d84:	8f 55       	subi	r24, 0x5F	; 95
     d86:	9f 4f       	sbci	r25, 0xFF	; 255
     d88:	fc 01       	movw	r30, r24
     d8a:	80 81       	ld	r24, Z
     d8c:	91 81       	ldd	r25, Z+1	; 0x01
     d8e:	a2 81       	ldd	r26, Z+2	; 0x02
     d90:	b3 81       	ldd	r27, Z+3	; 0x03
     d92:	bc 01       	movw	r22, r24
     d94:	cd 01       	movw	r24, r26
     d96:	0f 90       	pop	r0
     d98:	0f 90       	pop	r0
     d9a:	df 91       	pop	r29
     d9c:	cf 91       	pop	r28
     d9e:	08 95       	ret

00000da0 <_ZN10helicopter5model11SystemModel9ZIntegralEf>:
			void ZIntegral(float val) { zIntegral = val;}
     da0:	cf 93       	push	r28
     da2:	df 93       	push	r29
     da4:	00 d0       	rcall	.+0      	; 0xda6 <_ZN10helicopter5model11SystemModel9ZIntegralEf+0x6>
     da6:	00 d0       	rcall	.+0      	; 0xda8 <_ZN10helicopter5model11SystemModel9ZIntegralEf+0x8>
     da8:	cd b7       	in	r28, 0x3d	; 61
     daa:	de b7       	in	r29, 0x3e	; 62
     dac:	9a 83       	std	Y+2, r25	; 0x02
     dae:	89 83       	std	Y+1, r24	; 0x01
     db0:	4b 83       	std	Y+3, r20	; 0x03
     db2:	5c 83       	std	Y+4, r21	; 0x04
     db4:	6d 83       	std	Y+5, r22	; 0x05
     db6:	7e 83       	std	Y+6, r23	; 0x06
     db8:	89 81       	ldd	r24, Y+1	; 0x01
     dba:	9a 81       	ldd	r25, Y+2	; 0x02
     dbc:	9c 01       	movw	r18, r24
     dbe:	2f 55       	subi	r18, 0x5F	; 95
     dc0:	3f 4f       	sbci	r19, 0xFF	; 255
     dc2:	8b 81       	ldd	r24, Y+3	; 0x03
     dc4:	9c 81       	ldd	r25, Y+4	; 0x04
     dc6:	ad 81       	ldd	r26, Y+5	; 0x05
     dc8:	be 81       	ldd	r27, Y+6	; 0x06
     dca:	f9 01       	movw	r30, r18
     dcc:	80 83       	st	Z, r24
     dce:	91 83       	std	Z+1, r25	; 0x01
     dd0:	a2 83       	std	Z+2, r26	; 0x02
     dd2:	b3 83       	std	Z+3, r27	; 0x03
     dd4:	26 96       	adiw	r28, 0x06	; 6
     dd6:	0f b6       	in	r0, 0x3f	; 63
     dd8:	f8 94       	cli
     dda:	de bf       	out	0x3e, r29	; 62
     ddc:	0f be       	out	0x3f, r0	; 63
     dde:	cd bf       	out	0x3d, r28	; 61
     de0:	df 91       	pop	r29
     de2:	cf 91       	pop	r28
     de4:	08 95       	ret

00000de6 <_ZN10helicopter5model11SystemModel13ZProportionalEf>:

			float ZProportional() const {return zProportional;}
			void ZProportional(float val) { zProportional = val;}
     de6:	cf 93       	push	r28
     de8:	df 93       	push	r29
     dea:	00 d0       	rcall	.+0      	; 0xdec <_ZN10helicopter5model11SystemModel13ZProportionalEf+0x6>
     dec:	00 d0       	rcall	.+0      	; 0xdee <_ZN10helicopter5model11SystemModel13ZProportionalEf+0x8>
     dee:	cd b7       	in	r28, 0x3d	; 61
     df0:	de b7       	in	r29, 0x3e	; 62
     df2:	9a 83       	std	Y+2, r25	; 0x02
     df4:	89 83       	std	Y+1, r24	; 0x01
     df6:	4b 83       	std	Y+3, r20	; 0x03
     df8:	5c 83       	std	Y+4, r21	; 0x04
     dfa:	6d 83       	std	Y+5, r22	; 0x05
     dfc:	7e 83       	std	Y+6, r23	; 0x06
     dfe:	89 81       	ldd	r24, Y+1	; 0x01
     e00:	9a 81       	ldd	r25, Y+2	; 0x02
     e02:	9c 01       	movw	r18, r24
     e04:	2b 55       	subi	r18, 0x5B	; 91
     e06:	3f 4f       	sbci	r19, 0xFF	; 255
     e08:	8b 81       	ldd	r24, Y+3	; 0x03
     e0a:	9c 81       	ldd	r25, Y+4	; 0x04
     e0c:	ad 81       	ldd	r26, Y+5	; 0x05
     e0e:	be 81       	ldd	r27, Y+6	; 0x06
     e10:	f9 01       	movw	r30, r18
     e12:	80 83       	st	Z, r24
     e14:	91 83       	std	Z+1, r25	; 0x01
     e16:	a2 83       	std	Z+2, r26	; 0x02
     e18:	b3 83       	std	Z+3, r27	; 0x03
     e1a:	26 96       	adiw	r28, 0x06	; 6
     e1c:	0f b6       	in	r0, 0x3f	; 63
     e1e:	f8 94       	cli
     e20:	de bf       	out	0x3e, r29	; 62
     e22:	0f be       	out	0x3f, r0	; 63
     e24:	cd bf       	out	0x3d, r28	; 61
     e26:	df 91       	pop	r29
     e28:	cf 91       	pop	r28
     e2a:	08 95       	ret

00000e2c <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf>:

			float ZDerivativeError() const {return zDerivativeError;}
			void ZDerivativeError(float val) { zDerivativeError = val;}						
     e2c:	cf 93       	push	r28
     e2e:	df 93       	push	r29
     e30:	00 d0       	rcall	.+0      	; 0xe32 <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf+0x6>
     e32:	00 d0       	rcall	.+0      	; 0xe34 <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf+0x8>
     e34:	cd b7       	in	r28, 0x3d	; 61
     e36:	de b7       	in	r29, 0x3e	; 62
     e38:	9a 83       	std	Y+2, r25	; 0x02
     e3a:	89 83       	std	Y+1, r24	; 0x01
     e3c:	4b 83       	std	Y+3, r20	; 0x03
     e3e:	5c 83       	std	Y+4, r21	; 0x04
     e40:	6d 83       	std	Y+5, r22	; 0x05
     e42:	7e 83       	std	Y+6, r23	; 0x06
     e44:	89 81       	ldd	r24, Y+1	; 0x01
     e46:	9a 81       	ldd	r25, Y+2	; 0x02
     e48:	9c 01       	movw	r18, r24
     e4a:	27 55       	subi	r18, 0x57	; 87
     e4c:	3f 4f       	sbci	r19, 0xFF	; 255
     e4e:	8b 81       	ldd	r24, Y+3	; 0x03
     e50:	9c 81       	ldd	r25, Y+4	; 0x04
     e52:	ad 81       	ldd	r26, Y+5	; 0x05
     e54:	be 81       	ldd	r27, Y+6	; 0x06
     e56:	f9 01       	movw	r30, r18
     e58:	80 83       	st	Z, r24
     e5a:	91 83       	std	Z+1, r25	; 0x01
     e5c:	a2 83       	std	Z+2, r26	; 0x02
     e5e:	b3 83       	std	Z+3, r27	; 0x03
     e60:	26 96       	adiw	r28, 0x06	; 6
     e62:	0f b6       	in	r0, 0x3f	; 63
     e64:	f8 94       	cli
     e66:	de bf       	out	0x3e, r29	; 62
     e68:	0f be       	out	0x3f, r0	; 63
     e6a:	cd bf       	out	0x3d, r28	; 61
     e6c:	df 91       	pop	r29
     e6e:	cf 91       	pop	r28
     e70:	08 95       	ret

00000e72 <_ZNK10helicopter5model11SystemModel11BlownFramesEv>:
			void UnrecognizedMsgTypes(long val) { unrecognizedMsgTypes = val; }
			
			long ChecksumErrors() const {return checksumErrors; }
			void ChecksumErrors(long val) { checksumErrors = val; }
			
			long BlownFrames() const {return numOfFramesBlown;}
     e72:	cf 93       	push	r28
     e74:	df 93       	push	r29
     e76:	1f 92       	push	r1
     e78:	1f 92       	push	r1
     e7a:	cd b7       	in	r28, 0x3d	; 61
     e7c:	de b7       	in	r29, 0x3e	; 62
     e7e:	9a 83       	std	Y+2, r25	; 0x02
     e80:	89 83       	std	Y+1, r24	; 0x01
     e82:	89 81       	ldd	r24, Y+1	; 0x01
     e84:	9a 81       	ldd	r25, Y+2	; 0x02
     e86:	8f 53       	subi	r24, 0x3F	; 63
     e88:	9f 4f       	sbci	r25, 0xFF	; 255
     e8a:	fc 01       	movw	r30, r24
     e8c:	80 81       	ld	r24, Z
     e8e:	91 81       	ldd	r25, Z+1	; 0x01
     e90:	a2 81       	ldd	r26, Z+2	; 0x02
     e92:	b3 81       	ldd	r27, Z+3	; 0x03
     e94:	bc 01       	movw	r22, r24
     e96:	cd 01       	movw	r24, r26
     e98:	0f 90       	pop	r0
     e9a:	0f 90       	pop	r0
     e9c:	df 91       	pop	r29
     e9e:	cf 91       	pop	r28
     ea0:	08 95       	ret

00000ea2 <_ZN10helicopter5model11SystemModel11BlownFramesEl>:
			void BlownFrames( long val ) { numOfFramesBlown = val;}
     ea2:	cf 93       	push	r28
     ea4:	df 93       	push	r29
     ea6:	00 d0       	rcall	.+0      	; 0xea8 <_ZN10helicopter5model11SystemModel11BlownFramesEl+0x6>
     ea8:	00 d0       	rcall	.+0      	; 0xeaa <_ZN10helicopter5model11SystemModel11BlownFramesEl+0x8>
     eaa:	cd b7       	in	r28, 0x3d	; 61
     eac:	de b7       	in	r29, 0x3e	; 62
     eae:	9a 83       	std	Y+2, r25	; 0x02
     eb0:	89 83       	std	Y+1, r24	; 0x01
     eb2:	4b 83       	std	Y+3, r20	; 0x03
     eb4:	5c 83       	std	Y+4, r21	; 0x04
     eb6:	6d 83       	std	Y+5, r22	; 0x05
     eb8:	7e 83       	std	Y+6, r23	; 0x06
     eba:	89 81       	ldd	r24, Y+1	; 0x01
     ebc:	9a 81       	ldd	r25, Y+2	; 0x02
     ebe:	9c 01       	movw	r18, r24
     ec0:	2f 53       	subi	r18, 0x3F	; 63
     ec2:	3f 4f       	sbci	r19, 0xFF	; 255
     ec4:	8b 81       	ldd	r24, Y+3	; 0x03
     ec6:	9c 81       	ldd	r25, Y+4	; 0x04
     ec8:	ad 81       	ldd	r26, Y+5	; 0x05
     eca:	be 81       	ldd	r27, Y+6	; 0x06
     ecc:	f9 01       	movw	r30, r18
     ece:	80 83       	st	Z, r24
     ed0:	91 83       	std	Z+1, r25	; 0x01
     ed2:	a2 83       	std	Z+2, r26	; 0x02
     ed4:	b3 83       	std	Z+3, r27	; 0x03
     ed6:	26 96       	adiw	r28, 0x06	; 6
     ed8:	0f b6       	in	r0, 0x3f	; 63
     eda:	f8 94       	cli
     edc:	de bf       	out	0x3e, r29	; 62
     ede:	0f be       	out	0x3f, r0	; 63
     ee0:	cd bf       	out	0x3d, r28	; 61
     ee2:	df 91       	pop	r29
     ee4:	cf 91       	pop	r28
     ee6:	08 95       	ret

00000ee8 <_ZNK10helicopter5model11SystemModel16OperationalStateEv>:
			void InitialZPositionEcef( long val ) { initialZPositionEcef = val;}			
			/*
			float **  EcefToLocalNEDRotationMatrix() const {return ecefToLocalNEDRotationMatrix;}
			void EcefToLocalNEDRotationMatrix( long val ) { ecefToLocalNEDRotationMatrix = val;}*/
				
			OperatingState  OperationalState() const {return operationalState;}
     ee8:	cf 93       	push	r28
     eea:	df 93       	push	r29
     eec:	1f 92       	push	r1
     eee:	1f 92       	push	r1
     ef0:	cd b7       	in	r28, 0x3d	; 61
     ef2:	de b7       	in	r29, 0x3e	; 62
     ef4:	9a 83       	std	Y+2, r25	; 0x02
     ef6:	89 83       	std	Y+1, r24	; 0x01
     ef8:	89 81       	ldd	r24, Y+1	; 0x01
     efa:	9a 81       	ldd	r25, Y+2	; 0x02
     efc:	fc 01       	movw	r30, r24
     efe:	80 81       	ld	r24, Z
     f00:	0f 90       	pop	r0
     f02:	0f 90       	pop	r0
     f04:	df 91       	pop	r29
     f06:	cf 91       	pop	r28
     f08:	08 95       	ret

00000f0a <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelE>:

#include "PIDController.h"

using namespace helicopter::controller;

PIDController::PIDController(SystemModel *model): 
     f0a:	cf 93       	push	r28
     f0c:	df 93       	push	r29
     f0e:	00 d0       	rcall	.+0      	; 0xf10 <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelE+0x6>
     f10:	1f 92       	push	r1
     f12:	cd b7       	in	r28, 0x3d	; 61
     f14:	de b7       	in	r29, 0x3e	; 62
     f16:	9a 83       	std	Y+2, r25	; 0x02
     f18:	89 83       	std	Y+1, r24	; 0x01
     f1a:	7c 83       	std	Y+4, r23	; 0x04
     f1c:	6b 83       	std	Y+3, r22	; 0x03
minMainRotorServoControlValue(0),
maxMainRotorServoControlValue(0),

intervalPeriodSecs(0),
controlMaxValue(0),
controlMinValue(0)
     f1e:	89 81       	ldd	r24, Y+1	; 0x01
     f20:	9a 81       	ldd	r25, Y+2	; 0x02
     f22:	2b 81       	ldd	r18, Y+3	; 0x03
     f24:	3c 81       	ldd	r19, Y+4	; 0x04
     f26:	fc 01       	movw	r30, r24
     f28:	31 83       	std	Z+1, r19	; 0x01
     f2a:	20 83       	st	Z, r18
     f2c:	89 81       	ldd	r24, Y+1	; 0x01
     f2e:	9a 81       	ldd	r25, Y+2	; 0x02
     f30:	fc 01       	movw	r30, r24
     f32:	12 82       	std	Z+2, r1	; 0x02
     f34:	13 82       	std	Z+3, r1	; 0x03
     f36:	14 82       	std	Z+4, r1	; 0x04
     f38:	15 82       	std	Z+5, r1	; 0x05
     f3a:	89 81       	ldd	r24, Y+1	; 0x01
     f3c:	9a 81       	ldd	r25, Y+2	; 0x02
     f3e:	fc 01       	movw	r30, r24
     f40:	16 82       	std	Z+6, r1	; 0x06
     f42:	17 82       	std	Z+7, r1	; 0x07
     f44:	10 86       	std	Z+8, r1	; 0x08
     f46:	11 86       	std	Z+9, r1	; 0x09
     f48:	89 81       	ldd	r24, Y+1	; 0x01
     f4a:	9a 81       	ldd	r25, Y+2	; 0x02
     f4c:	fc 01       	movw	r30, r24
     f4e:	12 86       	std	Z+10, r1	; 0x0a
     f50:	13 86       	std	Z+11, r1	; 0x0b
     f52:	14 86       	std	Z+12, r1	; 0x0c
     f54:	15 86       	std	Z+13, r1	; 0x0d
     f56:	89 81       	ldd	r24, Y+1	; 0x01
     f58:	9a 81       	ldd	r25, Y+2	; 0x02
     f5a:	fc 01       	movw	r30, r24
     f5c:	16 86       	std	Z+14, r1	; 0x0e
     f5e:	17 86       	std	Z+15, r1	; 0x0f
     f60:	10 8a       	std	Z+16, r1	; 0x10
     f62:	11 8a       	std	Z+17, r1	; 0x11
     f64:	89 81       	ldd	r24, Y+1	; 0x01
     f66:	9a 81       	ldd	r25, Y+2	; 0x02
     f68:	fc 01       	movw	r30, r24
     f6a:	12 8a       	std	Z+18, r1	; 0x12
     f6c:	13 8a       	std	Z+19, r1	; 0x13
     f6e:	14 8a       	std	Z+20, r1	; 0x14
     f70:	15 8a       	std	Z+21, r1	; 0x15
     f72:	89 81       	ldd	r24, Y+1	; 0x01
     f74:	9a 81       	ldd	r25, Y+2	; 0x02
     f76:	fc 01       	movw	r30, r24
     f78:	16 8a       	std	Z+22, r1	; 0x16
     f7a:	17 8a       	std	Z+23, r1	; 0x17
     f7c:	10 8e       	std	Z+24, r1	; 0x18
     f7e:	11 8e       	std	Z+25, r1	; 0x19
     f80:	89 81       	ldd	r24, Y+1	; 0x01
     f82:	9a 81       	ldd	r25, Y+2	; 0x02
     f84:	fc 01       	movw	r30, r24
     f86:	12 8e       	std	Z+26, r1	; 0x1a
     f88:	13 8e       	std	Z+27, r1	; 0x1b
     f8a:	14 8e       	std	Z+28, r1	; 0x1c
     f8c:	15 8e       	std	Z+29, r1	; 0x1d
     f8e:	89 81       	ldd	r24, Y+1	; 0x01
     f90:	9a 81       	ldd	r25, Y+2	; 0x02
     f92:	fc 01       	movw	r30, r24
     f94:	16 8e       	std	Z+30, r1	; 0x1e
     f96:	17 8e       	std	Z+31, r1	; 0x1f
     f98:	10 a2       	std	Z+32, r1	; 0x20
     f9a:	11 a2       	std	Z+33, r1	; 0x21
     f9c:	89 81       	ldd	r24, Y+1	; 0x01
     f9e:	9a 81       	ldd	r25, Y+2	; 0x02
     fa0:	fc 01       	movw	r30, r24
     fa2:	12 a2       	std	Z+34, r1	; 0x22
     fa4:	13 a2       	std	Z+35, r1	; 0x23
     fa6:	14 a2       	std	Z+36, r1	; 0x24
     fa8:	15 a2       	std	Z+37, r1	; 0x25
     faa:	89 81       	ldd	r24, Y+1	; 0x01
     fac:	9a 81       	ldd	r25, Y+2	; 0x02
     fae:	fc 01       	movw	r30, r24
     fb0:	12 a6       	std	Z+42, r1	; 0x2a
     fb2:	13 a6       	std	Z+43, r1	; 0x2b
     fb4:	14 a6       	std	Z+44, r1	; 0x2c
     fb6:	15 a6       	std	Z+45, r1	; 0x2d
     fb8:	89 81       	ldd	r24, Y+1	; 0x01
     fba:	9a 81       	ldd	r25, Y+2	; 0x02
     fbc:	fc 01       	movw	r30, r24
     fbe:	16 a6       	std	Z+46, r1	; 0x2e
     fc0:	17 a6       	std	Z+47, r1	; 0x2f
     fc2:	10 aa       	std	Z+48, r1	; 0x30
     fc4:	11 aa       	std	Z+49, r1	; 0x31
     fc6:	89 81       	ldd	r24, Y+1	; 0x01
     fc8:	9a 81       	ldd	r25, Y+2	; 0x02
     fca:	fc 01       	movw	r30, r24
     fcc:	12 aa       	std	Z+50, r1	; 0x32
     fce:	13 aa       	std	Z+51, r1	; 0x33
     fd0:	14 aa       	std	Z+52, r1	; 0x34
     fd2:	15 aa       	std	Z+53, r1	; 0x35
     fd4:	89 81       	ldd	r24, Y+1	; 0x01
     fd6:	9a 81       	ldd	r25, Y+2	; 0x02
     fd8:	fc 01       	movw	r30, r24
     fda:	16 aa       	std	Z+54, r1	; 0x36
     fdc:	17 aa       	std	Z+55, r1	; 0x37
     fde:	10 ae       	std	Z+56, r1	; 0x38
     fe0:	11 ae       	std	Z+57, r1	; 0x39
     fe2:	89 81       	ldd	r24, Y+1	; 0x01
     fe4:	9a 81       	ldd	r25, Y+2	; 0x02
     fe6:	fc 01       	movw	r30, r24
     fe8:	12 ae       	std	Z+58, r1	; 0x3a
     fea:	13 ae       	std	Z+59, r1	; 0x3b
     fec:	14 ae       	std	Z+60, r1	; 0x3c
     fee:	15 ae       	std	Z+61, r1	; 0x3d
     ff0:	89 81       	ldd	r24, Y+1	; 0x01
     ff2:	9a 81       	ldd	r25, Y+2	; 0x02
     ff4:	8e 5b       	subi	r24, 0xBE	; 190
     ff6:	9f 4f       	sbci	r25, 0xFF	; 255
     ff8:	fc 01       	movw	r30, r24
     ffa:	10 82       	st	Z, r1
     ffc:	11 82       	std	Z+1, r1	; 0x01
     ffe:	12 82       	std	Z+2, r1	; 0x02
    1000:	13 82       	std	Z+3, r1	; 0x03
    1002:	89 81       	ldd	r24, Y+1	; 0x01
    1004:	9a 81       	ldd	r25, Y+2	; 0x02
    1006:	8a 5b       	subi	r24, 0xBA	; 186
    1008:	9f 4f       	sbci	r25, 0xFF	; 255
    100a:	fc 01       	movw	r30, r24
    100c:	10 82       	st	Z, r1
    100e:	11 82       	std	Z+1, r1	; 0x01
    1010:	12 82       	std	Z+2, r1	; 0x02
    1012:	13 82       	std	Z+3, r1	; 0x03
    1014:	89 81       	ldd	r24, Y+1	; 0x01
    1016:	9a 81       	ldd	r25, Y+2	; 0x02
    1018:	86 5b       	subi	r24, 0xB6	; 182
    101a:	9f 4f       	sbci	r25, 0xFF	; 255
    101c:	fc 01       	movw	r30, r24
    101e:	10 82       	st	Z, r1
    1020:	11 82       	std	Z+1, r1	; 0x01
    1022:	12 82       	std	Z+2, r1	; 0x02
    1024:	13 82       	std	Z+3, r1	; 0x03
    1026:	89 81       	ldd	r24, Y+1	; 0x01
    1028:	9a 81       	ldd	r25, Y+2	; 0x02
    102a:	82 5b       	subi	r24, 0xB2	; 178
    102c:	9f 4f       	sbci	r25, 0xFF	; 255
    102e:	fc 01       	movw	r30, r24
    1030:	10 82       	st	Z, r1
    1032:	11 82       	std	Z+1, r1	; 0x01
    1034:	12 82       	std	Z+2, r1	; 0x02
    1036:	13 82       	std	Z+3, r1	; 0x03
    1038:	89 81       	ldd	r24, Y+1	; 0x01
    103a:	9a 81       	ldd	r25, Y+2	; 0x02
    103c:	8e 5a       	subi	r24, 0xAE	; 174
    103e:	9f 4f       	sbci	r25, 0xFF	; 255
    1040:	fc 01       	movw	r30, r24
    1042:	10 82       	st	Z, r1
    1044:	11 82       	std	Z+1, r1	; 0x01
    1046:	12 82       	std	Z+2, r1	; 0x02
    1048:	13 82       	std	Z+3, r1	; 0x03
    104a:	89 81       	ldd	r24, Y+1	; 0x01
    104c:	9a 81       	ldd	r25, Y+2	; 0x02
    104e:	8a 5a       	subi	r24, 0xAA	; 170
    1050:	9f 4f       	sbci	r25, 0xFF	; 255
    1052:	fc 01       	movw	r30, r24
    1054:	10 82       	st	Z, r1
    1056:	11 82       	std	Z+1, r1	; 0x01
    1058:	12 82       	std	Z+2, r1	; 0x02
    105a:	13 82       	std	Z+3, r1	; 0x03
    105c:	89 81       	ldd	r24, Y+1	; 0x01
    105e:	9a 81       	ldd	r25, Y+2	; 0x02
    1060:	86 5a       	subi	r24, 0xA6	; 166
    1062:	9f 4f       	sbci	r25, 0xFF	; 255
    1064:	fc 01       	movw	r30, r24
    1066:	10 82       	st	Z, r1
    1068:	11 82       	std	Z+1, r1	; 0x01
    106a:	12 82       	std	Z+2, r1	; 0x02
    106c:	13 82       	std	Z+3, r1	; 0x03
    106e:	89 81       	ldd	r24, Y+1	; 0x01
    1070:	9a 81       	ldd	r25, Y+2	; 0x02
    1072:	82 5a       	subi	r24, 0xA2	; 162
    1074:	9f 4f       	sbci	r25, 0xFF	; 255
    1076:	fc 01       	movw	r30, r24
    1078:	10 82       	st	Z, r1
    107a:	11 82       	std	Z+1, r1	; 0x01
    107c:	12 82       	std	Z+2, r1	; 0x02
    107e:	13 82       	std	Z+3, r1	; 0x03
    1080:	89 81       	ldd	r24, Y+1	; 0x01
    1082:	9a 81       	ldd	r25, Y+2	; 0x02
    1084:	8e 59       	subi	r24, 0x9E	; 158
    1086:	9f 4f       	sbci	r25, 0xFF	; 255
    1088:	fc 01       	movw	r30, r24
    108a:	10 82       	st	Z, r1
    108c:	11 82       	std	Z+1, r1	; 0x01
    108e:	12 82       	std	Z+2, r1	; 0x02
    1090:	13 82       	std	Z+3, r1	; 0x03
    1092:	89 81       	ldd	r24, Y+1	; 0x01
    1094:	9a 81       	ldd	r25, Y+2	; 0x02
    1096:	8a 59       	subi	r24, 0x9A	; 154
    1098:	9f 4f       	sbci	r25, 0xFF	; 255
    109a:	fc 01       	movw	r30, r24
    109c:	10 82       	st	Z, r1
    109e:	11 82       	std	Z+1, r1	; 0x01
    10a0:	12 82       	std	Z+2, r1	; 0x02
    10a2:	13 82       	std	Z+3, r1	; 0x03
    10a4:	89 81       	ldd	r24, Y+1	; 0x01
    10a6:	9a 81       	ldd	r25, Y+2	; 0x02
    10a8:	86 59       	subi	r24, 0x96	; 150
    10aa:	9f 4f       	sbci	r25, 0xFF	; 255
    10ac:	fc 01       	movw	r30, r24
    10ae:	10 82       	st	Z, r1
    10b0:	11 82       	std	Z+1, r1	; 0x01
    10b2:	12 82       	std	Z+2, r1	; 0x02
    10b4:	13 82       	std	Z+3, r1	; 0x03
    10b6:	89 81       	ldd	r24, Y+1	; 0x01
    10b8:	9a 81       	ldd	r25, Y+2	; 0x02
    10ba:	82 59       	subi	r24, 0x92	; 146
    10bc:	9f 4f       	sbci	r25, 0xFF	; 255
    10be:	fc 01       	movw	r30, r24
    10c0:	10 82       	st	Z, r1
    10c2:	11 82       	std	Z+1, r1	; 0x01
    10c4:	12 82       	std	Z+2, r1	; 0x02
    10c6:	13 82       	std	Z+3, r1	; 0x03
    10c8:	89 81       	ldd	r24, Y+1	; 0x01
    10ca:	9a 81       	ldd	r25, Y+2	; 0x02
    10cc:	8e 57       	subi	r24, 0x7E	; 126
    10ce:	9f 4f       	sbci	r25, 0xFF	; 255
    10d0:	fc 01       	movw	r30, r24
    10d2:	10 82       	st	Z, r1
    10d4:	11 82       	std	Z+1, r1	; 0x01
    10d6:	12 82       	std	Z+2, r1	; 0x02
    10d8:	13 82       	std	Z+3, r1	; 0x03
    10da:	89 81       	ldd	r24, Y+1	; 0x01
    10dc:	9a 81       	ldd	r25, Y+2	; 0x02
    10de:	8a 57       	subi	r24, 0x7A	; 122
    10e0:	9f 4f       	sbci	r25, 0xFF	; 255
    10e2:	fc 01       	movw	r30, r24
    10e4:	10 82       	st	Z, r1
    10e6:	11 82       	std	Z+1, r1	; 0x01
    10e8:	12 82       	std	Z+2, r1	; 0x02
    10ea:	13 82       	std	Z+3, r1	; 0x03
    10ec:	89 81       	ldd	r24, Y+1	; 0x01
    10ee:	9a 81       	ldd	r25, Y+2	; 0x02
    10f0:	86 57       	subi	r24, 0x76	; 118
    10f2:	9f 4f       	sbci	r25, 0xFF	; 255
    10f4:	fc 01       	movw	r30, r24
    10f6:	10 82       	st	Z, r1
    10f8:	11 82       	std	Z+1, r1	; 0x01
    10fa:	12 82       	std	Z+2, r1	; 0x02
    10fc:	13 82       	std	Z+3, r1	; 0x03
{
	
}
    10fe:	0f 90       	pop	r0
    1100:	0f 90       	pop	r0
    1102:	0f 90       	pop	r0
    1104:	0f 90       	pop	r0
    1106:	df 91       	pop	r29
    1108:	cf 91       	pop	r28
    110a:	08 95       	ret

0000110c <_ZN10helicopter10controller13PIDController21calculateProportionalEff>:
{
	delete model;
}

float PIDController::calculateProportional(float currentValue, float referenceValue)
{
    110c:	0f 93       	push	r16
    110e:	1f 93       	push	r17
    1110:	cf 93       	push	r28
    1112:	df 93       	push	r29
    1114:	cd b7       	in	r28, 0x3d	; 61
    1116:	de b7       	in	r29, 0x3e	; 62
    1118:	2a 97       	sbiw	r28, 0x0a	; 10
    111a:	0f b6       	in	r0, 0x3f	; 63
    111c:	f8 94       	cli
    111e:	de bf       	out	0x3e, r29	; 62
    1120:	0f be       	out	0x3f, r0	; 63
    1122:	cd bf       	out	0x3d, r28	; 61
    1124:	9a 83       	std	Y+2, r25	; 0x02
    1126:	89 83       	std	Y+1, r24	; 0x01
    1128:	4b 83       	std	Y+3, r20	; 0x03
    112a:	5c 83       	std	Y+4, r21	; 0x04
    112c:	6d 83       	std	Y+5, r22	; 0x05
    112e:	7e 83       	std	Y+6, r23	; 0x06
    1130:	0f 83       	std	Y+7, r16	; 0x07
    1132:	18 87       	std	Y+8, r17	; 0x08
    1134:	29 87       	std	Y+9, r18	; 0x09
    1136:	3a 87       	std	Y+10, r19	; 0x0a
	return currentValue - referenceValue;
    1138:	2f 81       	ldd	r18, Y+7	; 0x07
    113a:	38 85       	ldd	r19, Y+8	; 0x08
    113c:	49 85       	ldd	r20, Y+9	; 0x09
    113e:	5a 85       	ldd	r21, Y+10	; 0x0a
    1140:	6b 81       	ldd	r22, Y+3	; 0x03
    1142:	7c 81       	ldd	r23, Y+4	; 0x04
    1144:	8d 81       	ldd	r24, Y+5	; 0x05
    1146:	9e 81       	ldd	r25, Y+6	; 0x06
    1148:	0e 94 ee 4a 	call	0x95dc	; 0x95dc <__subsf3>
    114c:	dc 01       	movw	r26, r24
    114e:	cb 01       	movw	r24, r22
}
    1150:	bc 01       	movw	r22, r24
    1152:	cd 01       	movw	r24, r26
    1154:	2a 96       	adiw	r28, 0x0a	; 10
    1156:	0f b6       	in	r0, 0x3f	; 63
    1158:	f8 94       	cli
    115a:	de bf       	out	0x3e, r29	; 62
    115c:	0f be       	out	0x3f, r0	; 63
    115e:	cd bf       	out	0x3d, r28	; 61
    1160:	df 91       	pop	r29
    1162:	cf 91       	pop	r28
    1164:	1f 91       	pop	r17
    1166:	0f 91       	pop	r16
    1168:	08 95       	ret

0000116a <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>:

//TODO refactor to make this common for all PID calculations. I'll want to include the specific
//variables max values as parameters so I can 'generalize' it.
float PIDController::calculateIntegralAntiWindup(float oldControlPreServoAdj, float oldControl, float antiWindupGain)
{
    116a:	cf 92       	push	r12
    116c:	df 92       	push	r13
    116e:	ef 92       	push	r14
    1170:	ff 92       	push	r15
    1172:	0f 93       	push	r16
    1174:	1f 93       	push	r17
    1176:	cf 93       	push	r28
    1178:	df 93       	push	r29
    117a:	cd b7       	in	r28, 0x3d	; 61
    117c:	de b7       	in	r29, 0x3e	; 62
    117e:	62 97       	sbiw	r28, 0x12	; 18
    1180:	0f b6       	in	r0, 0x3f	; 63
    1182:	f8 94       	cli
    1184:	de bf       	out	0x3e, r29	; 62
    1186:	0f be       	out	0x3f, r0	; 63
    1188:	cd bf       	out	0x3d, r28	; 61
    118a:	9e 83       	std	Y+6, r25	; 0x06
    118c:	8d 83       	std	Y+5, r24	; 0x05
    118e:	4f 83       	std	Y+7, r20	; 0x07
    1190:	58 87       	std	Y+8, r21	; 0x08
    1192:	69 87       	std	Y+9, r22	; 0x09
    1194:	7a 87       	std	Y+10, r23	; 0x0a
    1196:	0b 87       	std	Y+11, r16	; 0x0b
    1198:	1c 87       	std	Y+12, r17	; 0x0c
    119a:	2d 87       	std	Y+13, r18	; 0x0d
    119c:	3e 87       	std	Y+14, r19	; 0x0e
    119e:	cf 86       	std	Y+15, r12	; 0x0f
    11a0:	d8 8a       	std	Y+16, r13	; 0x10
    11a2:	e9 8a       	std	Y+17, r14	; 0x11
    11a4:	fa 8a       	std	Y+18, r15	; 0x12
	float antiWindup = 0;
    11a6:	19 82       	std	Y+1, r1	; 0x01
    11a8:	1a 82       	std	Y+2, r1	; 0x02
    11aa:	1b 82       	std	Y+3, r1	; 0x03
    11ac:	1c 82       	std	Y+4, r1	; 0x04
	
	antiWindup = antiWindupGain * (oldControlPreServoAdj - oldControl);
    11ae:	2b 85       	ldd	r18, Y+11	; 0x0b
    11b0:	3c 85       	ldd	r19, Y+12	; 0x0c
    11b2:	4d 85       	ldd	r20, Y+13	; 0x0d
    11b4:	5e 85       	ldd	r21, Y+14	; 0x0e
    11b6:	6f 81       	ldd	r22, Y+7	; 0x07
    11b8:	78 85       	ldd	r23, Y+8	; 0x08
    11ba:	89 85       	ldd	r24, Y+9	; 0x09
    11bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    11be:	0e 94 ee 4a 	call	0x95dc	; 0x95dc <__subsf3>
    11c2:	dc 01       	movw	r26, r24
    11c4:	cb 01       	movw	r24, r22
    11c6:	2f 85       	ldd	r18, Y+15	; 0x0f
    11c8:	38 89       	ldd	r19, Y+16	; 0x10
    11ca:	49 89       	ldd	r20, Y+17	; 0x11
    11cc:	5a 89       	ldd	r21, Y+18	; 0x12
    11ce:	bc 01       	movw	r22, r24
    11d0:	cd 01       	movw	r24, r26
    11d2:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    11d6:	dc 01       	movw	r26, r24
    11d8:	cb 01       	movw	r24, r22
    11da:	89 83       	std	Y+1, r24	; 0x01
    11dc:	9a 83       	std	Y+2, r25	; 0x02
    11de:	ab 83       	std	Y+3, r26	; 0x03
    11e0:	bc 83       	std	Y+4, r27	; 0x04
	
	return antiWindup;
    11e2:	89 81       	ldd	r24, Y+1	; 0x01
    11e4:	9a 81       	ldd	r25, Y+2	; 0x02
    11e6:	ab 81       	ldd	r26, Y+3	; 0x03
    11e8:	bc 81       	ldd	r27, Y+4	; 0x04
}
    11ea:	bc 01       	movw	r22, r24
    11ec:	cd 01       	movw	r24, r26
    11ee:	62 96       	adiw	r28, 0x12	; 18
    11f0:	0f b6       	in	r0, 0x3f	; 63
    11f2:	f8 94       	cli
    11f4:	de bf       	out	0x3e, r29	; 62
    11f6:	0f be       	out	0x3f, r0	; 63
    11f8:	cd bf       	out	0x3d, r28	; 61
    11fa:	df 91       	pop	r29
    11fc:	cf 91       	pop	r28
    11fe:	1f 91       	pop	r17
    1200:	0f 91       	pop	r16
    1202:	ff 90       	pop	r15
    1204:	ef 90       	pop	r14
    1206:	df 90       	pop	r13
    1208:	cf 90       	pop	r12
    120a:	08 95       	ret

0000120c <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>:

/**
 * Anti-windup algorithm provided by Control Systems Design by Karl Johan Astrom 2002. chapter 6
 */
float PIDController::calculateIntegral(float proportional, float oldIntegral, float antiWindup, float integralGain)
{
    120c:	8f 92       	push	r8
    120e:	9f 92       	push	r9
    1210:	af 92       	push	r10
    1212:	bf 92       	push	r11
    1214:	cf 92       	push	r12
    1216:	df 92       	push	r13
    1218:	ef 92       	push	r14
    121a:	ff 92       	push	r15
    121c:	0f 93       	push	r16
    121e:	1f 93       	push	r17
    1220:	cf 93       	push	r28
    1222:	df 93       	push	r29
    1224:	cd b7       	in	r28, 0x3d	; 61
    1226:	de b7       	in	r29, 0x3e	; 62
    1228:	66 97       	sbiw	r28, 0x16	; 22
    122a:	0f b6       	in	r0, 0x3f	; 63
    122c:	f8 94       	cli
    122e:	de bf       	out	0x3e, r29	; 62
    1230:	0f be       	out	0x3f, r0	; 63
    1232:	cd bf       	out	0x3d, r28	; 61
    1234:	9e 83       	std	Y+6, r25	; 0x06
    1236:	8d 83       	std	Y+5, r24	; 0x05
    1238:	4f 83       	std	Y+7, r20	; 0x07
    123a:	58 87       	std	Y+8, r21	; 0x08
    123c:	69 87       	std	Y+9, r22	; 0x09
    123e:	7a 87       	std	Y+10, r23	; 0x0a
    1240:	0b 87       	std	Y+11, r16	; 0x0b
    1242:	1c 87       	std	Y+12, r17	; 0x0c
    1244:	2d 87       	std	Y+13, r18	; 0x0d
    1246:	3e 87       	std	Y+14, r19	; 0x0e
    1248:	cf 86       	std	Y+15, r12	; 0x0f
    124a:	d8 8a       	std	Y+16, r13	; 0x10
    124c:	e9 8a       	std	Y+17, r14	; 0x11
    124e:	fa 8a       	std	Y+18, r15	; 0x12
    1250:	8b 8a       	std	Y+19, r8	; 0x13
    1252:	9c 8a       	std	Y+20, r9	; 0x14
    1254:	ad 8a       	std	Y+21, r10	; 0x15
    1256:	be 8a       	std	Y+22, r11	; 0x16
	
	float workingIntegral = 0;
    1258:	19 82       	std	Y+1, r1	; 0x01
    125a:	1a 82       	std	Y+2, r1	; 0x02
    125c:	1b 82       	std	Y+3, r1	; 0x03
    125e:	1c 82       	std	Y+4, r1	; 0x04
	
	workingIntegral = proportional * intervalPeriodSecs * integralGain;
    1260:	8d 81       	ldd	r24, Y+5	; 0x05
    1262:	9e 81       	ldd	r25, Y+6	; 0x06
    1264:	8e 57       	subi	r24, 0x7E	; 126
    1266:	9f 4f       	sbci	r25, 0xFF	; 255
    1268:	fc 01       	movw	r30, r24
    126a:	80 81       	ld	r24, Z
    126c:	91 81       	ldd	r25, Z+1	; 0x01
    126e:	a2 81       	ldd	r26, Z+2	; 0x02
    1270:	b3 81       	ldd	r27, Z+3	; 0x03
    1272:	2f 81       	ldd	r18, Y+7	; 0x07
    1274:	38 85       	ldd	r19, Y+8	; 0x08
    1276:	49 85       	ldd	r20, Y+9	; 0x09
    1278:	5a 85       	ldd	r21, Y+10	; 0x0a
    127a:	bc 01       	movw	r22, r24
    127c:	cd 01       	movw	r24, r26
    127e:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    1282:	dc 01       	movw	r26, r24
    1284:	cb 01       	movw	r24, r22
    1286:	2b 89       	ldd	r18, Y+19	; 0x13
    1288:	3c 89       	ldd	r19, Y+20	; 0x14
    128a:	4d 89       	ldd	r20, Y+21	; 0x15
    128c:	5e 89       	ldd	r21, Y+22	; 0x16
    128e:	bc 01       	movw	r22, r24
    1290:	cd 01       	movw	r24, r26
    1292:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    1296:	dc 01       	movw	r26, r24
    1298:	cb 01       	movw	r24, r22
    129a:	89 83       	std	Y+1, r24	; 0x01
    129c:	9a 83       	std	Y+2, r25	; 0x02
    129e:	ab 83       	std	Y+3, r26	; 0x03
    12a0:	bc 83       	std	Y+4, r27	; 0x04
	//Integrate (i.e. sum this working value with the current integral value).
	//Note: i'm going out of order from what is defined in the book referenced above.
	//I am summing before subtracting the antiwindup value to make it easier.
	//I also find it odd that the integral 'gain' is being applied before 
	//accounting for the anti-windup. But this could be to compensate for large errors.
	workingIntegral = workingIntegral + oldIntegral;
    12a2:	2b 85       	ldd	r18, Y+11	; 0x0b
    12a4:	3c 85       	ldd	r19, Y+12	; 0x0c
    12a6:	4d 85       	ldd	r20, Y+13	; 0x0d
    12a8:	5e 85       	ldd	r21, Y+14	; 0x0e
    12aa:	69 81       	ldd	r22, Y+1	; 0x01
    12ac:	7a 81       	ldd	r23, Y+2	; 0x02
    12ae:	8b 81       	ldd	r24, Y+3	; 0x03
    12b0:	9c 81       	ldd	r25, Y+4	; 0x04
    12b2:	0e 94 ef 4a 	call	0x95de	; 0x95de <__addsf3>
    12b6:	dc 01       	movw	r26, r24
    12b8:	cb 01       	movw	r24, r22
    12ba:	89 83       	std	Y+1, r24	; 0x01
    12bc:	9a 83       	std	Y+2, r25	; 0x02
    12be:	ab 83       	std	Y+3, r26	; 0x03
    12c0:	bc 83       	std	Y+4, r27	; 0x04
	
	if (antiWindup != 0)
    12c2:	20 e0       	ldi	r18, 0x00	; 0
    12c4:	30 e0       	ldi	r19, 0x00	; 0
    12c6:	a9 01       	movw	r20, r18
    12c8:	6f 85       	ldd	r22, Y+15	; 0x0f
    12ca:	78 89       	ldd	r23, Y+16	; 0x10
    12cc:	89 89       	ldd	r24, Y+17	; 0x11
    12ce:	9a 89       	ldd	r25, Y+18	; 0x12
    12d0:	0e 94 53 4b 	call	0x96a6	; 0x96a6 <__cmpsf2>
    12d4:	88 23       	and	r24, r24
    12d6:	09 f4       	brne	.+2      	; 0x12da <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0xce>
    12d8:	52 c0       	rjmp	.+164    	; 0x137e <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x172>
	{
		//We want to know if the integral is greater than 0 or less than 0 so that when we subtract
		//the antiwindup value, we get closer to 0, and don't exceed 0.
		if (workingIntegral > 0 && antiWindup > workingIntegral)
    12da:	20 e0       	ldi	r18, 0x00	; 0
    12dc:	30 e0       	ldi	r19, 0x00	; 0
    12de:	a9 01       	movw	r20, r18
    12e0:	69 81       	ldd	r22, Y+1	; 0x01
    12e2:	7a 81       	ldd	r23, Y+2	; 0x02
    12e4:	8b 81       	ldd	r24, Y+3	; 0x03
    12e6:	9c 81       	ldd	r25, Y+4	; 0x04
    12e8:	0e 94 31 4d 	call	0x9a62	; 0x9a62 <__gesf2>
    12ec:	18 16       	cp	r1, r24
    12ee:	8c f4       	brge	.+34     	; 0x1312 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x106>
    12f0:	29 81       	ldd	r18, Y+1	; 0x01
    12f2:	3a 81       	ldd	r19, Y+2	; 0x02
    12f4:	4b 81       	ldd	r20, Y+3	; 0x03
    12f6:	5c 81       	ldd	r21, Y+4	; 0x04
    12f8:	6f 85       	ldd	r22, Y+15	; 0x0f
    12fa:	78 89       	ldd	r23, Y+16	; 0x10
    12fc:	89 89       	ldd	r24, Y+17	; 0x11
    12fe:	9a 89       	ldd	r25, Y+18	; 0x12
    1300:	0e 94 31 4d 	call	0x9a62	; 0x9a62 <__gesf2>
    1304:	18 16       	cp	r1, r24
    1306:	2c f4       	brge	.+10     	; 0x1312 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x106>
		{
			workingIntegral = 0;
    1308:	19 82       	std	Y+1, r1	; 0x01
    130a:	1a 82       	std	Y+2, r1	; 0x02
    130c:	1b 82       	std	Y+3, r1	; 0x03
    130e:	1c 82       	std	Y+4, r1	; 0x04
    1310:	1b c0       	rjmp	.+54     	; 0x1348 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x13c>
		}else if (workingIntegral < 0 && antiWindup < workingIntegral)
    1312:	20 e0       	ldi	r18, 0x00	; 0
    1314:	30 e0       	ldi	r19, 0x00	; 0
    1316:	a9 01       	movw	r20, r18
    1318:	69 81       	ldd	r22, Y+1	; 0x01
    131a:	7a 81       	ldd	r23, Y+2	; 0x02
    131c:	8b 81       	ldd	r24, Y+3	; 0x03
    131e:	9c 81       	ldd	r25, Y+4	; 0x04
    1320:	0e 94 53 4b 	call	0x96a6	; 0x96a6 <__cmpsf2>
    1324:	88 23       	and	r24, r24
    1326:	84 f4       	brge	.+32     	; 0x1348 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x13c>
    1328:	29 81       	ldd	r18, Y+1	; 0x01
    132a:	3a 81       	ldd	r19, Y+2	; 0x02
    132c:	4b 81       	ldd	r20, Y+3	; 0x03
    132e:	5c 81       	ldd	r21, Y+4	; 0x04
    1330:	6f 85       	ldd	r22, Y+15	; 0x0f
    1332:	78 89       	ldd	r23, Y+16	; 0x10
    1334:	89 89       	ldd	r24, Y+17	; 0x11
    1336:	9a 89       	ldd	r25, Y+18	; 0x12
    1338:	0e 94 53 4b 	call	0x96a6	; 0x96a6 <__cmpsf2>
    133c:	88 23       	and	r24, r24
    133e:	24 f4       	brge	.+8      	; 0x1348 <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x13c>
		{
			workingIntegral = 0;
    1340:	19 82       	std	Y+1, r1	; 0x01
    1342:	1a 82       	std	Y+2, r1	; 0x02
    1344:	1b 82       	std	Y+3, r1	; 0x03
    1346:	1c 82       	std	Y+4, r1	; 0x04
		}
		
		if (workingIntegral != 0)
    1348:	20 e0       	ldi	r18, 0x00	; 0
    134a:	30 e0       	ldi	r19, 0x00	; 0
    134c:	a9 01       	movw	r20, r18
    134e:	69 81       	ldd	r22, Y+1	; 0x01
    1350:	7a 81       	ldd	r23, Y+2	; 0x02
    1352:	8b 81       	ldd	r24, Y+3	; 0x03
    1354:	9c 81       	ldd	r25, Y+4	; 0x04
    1356:	0e 94 53 4b 	call	0x96a6	; 0x96a6 <__cmpsf2>
    135a:	88 23       	and	r24, r24
    135c:	81 f0       	breq	.+32     	; 0x137e <_ZN10helicopter10controller13PIDController17calculateIntegralEffff+0x172>
		{
				//Subtract the anti-windup value from the working integral. 
			workingIntegral = workingIntegral - antiWindup;
    135e:	2f 85       	ldd	r18, Y+15	; 0x0f
    1360:	38 89       	ldd	r19, Y+16	; 0x10
    1362:	49 89       	ldd	r20, Y+17	; 0x11
    1364:	5a 89       	ldd	r21, Y+18	; 0x12
    1366:	69 81       	ldd	r22, Y+1	; 0x01
    1368:	7a 81       	ldd	r23, Y+2	; 0x02
    136a:	8b 81       	ldd	r24, Y+3	; 0x03
    136c:	9c 81       	ldd	r25, Y+4	; 0x04
    136e:	0e 94 ee 4a 	call	0x95dc	; 0x95dc <__subsf3>
    1372:	dc 01       	movw	r26, r24
    1374:	cb 01       	movw	r24, r22
    1376:	89 83       	std	Y+1, r24	; 0x01
    1378:	9a 83       	std	Y+2, r25	; 0x02
    137a:	ab 83       	std	Y+3, r26	; 0x03
    137c:	bc 83       	std	Y+4, r27	; 0x04
		}
	}
	
	return workingIntegral;
    137e:	89 81       	ldd	r24, Y+1	; 0x01
    1380:	9a 81       	ldd	r25, Y+2	; 0x02
    1382:	ab 81       	ldd	r26, Y+3	; 0x03
    1384:	bc 81       	ldd	r27, Y+4	; 0x04
}
    1386:	bc 01       	movw	r22, r24
    1388:	cd 01       	movw	r24, r26
    138a:	66 96       	adiw	r28, 0x16	; 22
    138c:	0f b6       	in	r0, 0x3f	; 63
    138e:	f8 94       	cli
    1390:	de bf       	out	0x3e, r29	; 62
    1392:	0f be       	out	0x3f, r0	; 63
    1394:	cd bf       	out	0x3d, r28	; 61
    1396:	df 91       	pop	r29
    1398:	cf 91       	pop	r28
    139a:	1f 91       	pop	r17
    139c:	0f 91       	pop	r16
    139e:	ff 90       	pop	r15
    13a0:	ef 90       	pop	r14
    13a2:	df 90       	pop	r13
    13a4:	cf 90       	pop	r12
    13a6:	bf 90       	pop	r11
    13a8:	af 90       	pop	r10
    13aa:	9f 90       	pop	r9
    13ac:	8f 90       	pop	r8
    13ae:	08 95       	ret

000013b0 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>:
	//return integral;
//}


float PIDController::calculateVelocityError(float currentVelocity, float referenceVelocity)
{
    13b0:	0f 93       	push	r16
    13b2:	1f 93       	push	r17
    13b4:	cf 93       	push	r28
    13b6:	df 93       	push	r29
    13b8:	cd b7       	in	r28, 0x3d	; 61
    13ba:	de b7       	in	r29, 0x3e	; 62
    13bc:	2a 97       	sbiw	r28, 0x0a	; 10
    13be:	0f b6       	in	r0, 0x3f	; 63
    13c0:	f8 94       	cli
    13c2:	de bf       	out	0x3e, r29	; 62
    13c4:	0f be       	out	0x3f, r0	; 63
    13c6:	cd bf       	out	0x3d, r28	; 61
    13c8:	9a 83       	std	Y+2, r25	; 0x02
    13ca:	89 83       	std	Y+1, r24	; 0x01
    13cc:	4b 83       	std	Y+3, r20	; 0x03
    13ce:	5c 83       	std	Y+4, r21	; 0x04
    13d0:	6d 83       	std	Y+5, r22	; 0x05
    13d2:	7e 83       	std	Y+6, r23	; 0x06
    13d4:	0f 83       	std	Y+7, r16	; 0x07
    13d6:	18 87       	std	Y+8, r17	; 0x08
    13d8:	29 87       	std	Y+9, r18	; 0x09
    13da:	3a 87       	std	Y+10, r19	; 0x0a
	return currentVelocity - referenceVelocity;
    13dc:	2f 81       	ldd	r18, Y+7	; 0x07
    13de:	38 85       	ldd	r19, Y+8	; 0x08
    13e0:	49 85       	ldd	r20, Y+9	; 0x09
    13e2:	5a 85       	ldd	r21, Y+10	; 0x0a
    13e4:	6b 81       	ldd	r22, Y+3	; 0x03
    13e6:	7c 81       	ldd	r23, Y+4	; 0x04
    13e8:	8d 81       	ldd	r24, Y+5	; 0x05
    13ea:	9e 81       	ldd	r25, Y+6	; 0x06
    13ec:	0e 94 ee 4a 	call	0x95dc	; 0x95dc <__subsf3>
    13f0:	dc 01       	movw	r26, r24
    13f2:	cb 01       	movw	r24, r22
}
    13f4:	bc 01       	movw	r22, r24
    13f6:	cd 01       	movw	r24, r26
    13f8:	2a 96       	adiw	r28, 0x0a	; 10
    13fa:	0f b6       	in	r0, 0x3f	; 63
    13fc:	f8 94       	cli
    13fe:	de bf       	out	0x3e, r29	; 62
    1400:	0f be       	out	0x3f, r0	; 63
    1402:	cd bf       	out	0x3d, r28	; 61
    1404:	df 91       	pop	r29
    1406:	cf 91       	pop	r28
    1408:	1f 91       	pop	r17
    140a:	0f 91       	pop	r16
    140c:	08 95       	ret

0000140e <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffffi>:

float PIDController::calculateOuterLoopControlValue(float proportionalError, float velocityError, float integral, float proportionalGain, float derivativeGain, int directionFactor)
{
    140e:	8f 92       	push	r8
    1410:	9f 92       	push	r9
    1412:	af 92       	push	r10
    1414:	bf 92       	push	r11
    1416:	cf 92       	push	r12
    1418:	df 92       	push	r13
    141a:	ef 92       	push	r14
    141c:	ff 92       	push	r15
    141e:	0f 93       	push	r16
    1420:	1f 93       	push	r17
    1422:	cf 93       	push	r28
    1424:	df 93       	push	r29
    1426:	cd b7       	in	r28, 0x3d	; 61
    1428:	de b7       	in	r29, 0x3e	; 62
    142a:	66 97       	sbiw	r28, 0x16	; 22
    142c:	0f b6       	in	r0, 0x3f	; 63
    142e:	f8 94       	cli
    1430:	de bf       	out	0x3e, r29	; 62
    1432:	0f be       	out	0x3f, r0	; 63
    1434:	cd bf       	out	0x3d, r28	; 61
    1436:	9e 83       	std	Y+6, r25	; 0x06
    1438:	8d 83       	std	Y+5, r24	; 0x05
    143a:	4f 83       	std	Y+7, r20	; 0x07
    143c:	58 87       	std	Y+8, r21	; 0x08
    143e:	69 87       	std	Y+9, r22	; 0x09
    1440:	7a 87       	std	Y+10, r23	; 0x0a
    1442:	0b 87       	std	Y+11, r16	; 0x0b
    1444:	1c 87       	std	Y+12, r17	; 0x0c
    1446:	2d 87       	std	Y+13, r18	; 0x0d
    1448:	3e 87       	std	Y+14, r19	; 0x0e
    144a:	cf 86       	std	Y+15, r12	; 0x0f
    144c:	d8 8a       	std	Y+16, r13	; 0x10
    144e:	e9 8a       	std	Y+17, r14	; 0x11
    1450:	fa 8a       	std	Y+18, r15	; 0x12
    1452:	8b 8a       	std	Y+19, r8	; 0x13
    1454:	9c 8a       	std	Y+20, r9	; 0x14
    1456:	ad 8a       	std	Y+21, r10	; 0x15
    1458:	be 8a       	std	Y+22, r11	; 0x16
	float controlValue = 0;
    145a:	19 82       	std	Y+1, r1	; 0x01
    145c:	1a 82       	std	Y+2, r1	; 0x02
    145e:	1b 82       	std	Y+3, r1	; 0x03
    1460:	1c 82       	std	Y+4, r1	; 0x04
	
	controlValue = directionFactor * (integral  + proportionalError * proportionalGain + velocityError * derivativeGain);
    1462:	8a a5       	ldd	r24, Y+42	; 0x2a
    1464:	9b a5       	ldd	r25, Y+43	; 0x2b
    1466:	aa 27       	eor	r26, r26
    1468:	97 fd       	sbrc	r25, 7
    146a:	a0 95       	com	r26
    146c:	ba 2f       	mov	r27, r26
    146e:	bc 01       	movw	r22, r24
    1470:	cd 01       	movw	r24, r26
    1472:	0e 94 f5 4b 	call	0x97ea	; 0x97ea <__floatsisf>
    1476:	6b 01       	movw	r12, r22
    1478:	7c 01       	movw	r14, r24
    147a:	2b 89       	ldd	r18, Y+19	; 0x13
    147c:	3c 89       	ldd	r19, Y+20	; 0x14
    147e:	4d 89       	ldd	r20, Y+21	; 0x15
    1480:	5e 89       	ldd	r21, Y+22	; 0x16
    1482:	6f 81       	ldd	r22, Y+7	; 0x07
    1484:	78 85       	ldd	r23, Y+8	; 0x08
    1486:	89 85       	ldd	r24, Y+9	; 0x09
    1488:	9a 85       	ldd	r25, Y+10	; 0x0a
    148a:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    148e:	dc 01       	movw	r26, r24
    1490:	cb 01       	movw	r24, r22
    1492:	2f 85       	ldd	r18, Y+15	; 0x0f
    1494:	38 89       	ldd	r19, Y+16	; 0x10
    1496:	49 89       	ldd	r20, Y+17	; 0x11
    1498:	5a 89       	ldd	r21, Y+18	; 0x12
    149a:	bc 01       	movw	r22, r24
    149c:	cd 01       	movw	r24, r26
    149e:	0e 94 ef 4a 	call	0x95de	; 0x95de <__addsf3>
    14a2:	dc 01       	movw	r26, r24
    14a4:	cb 01       	movw	r24, r22
    14a6:	4c 01       	movw	r8, r24
    14a8:	5d 01       	movw	r10, r26
    14aa:	2e a1       	ldd	r18, Y+38	; 0x26
    14ac:	3f a1       	ldd	r19, Y+39	; 0x27
    14ae:	48 a5       	ldd	r20, Y+40	; 0x28
    14b0:	59 a5       	ldd	r21, Y+41	; 0x29
    14b2:	6b 85       	ldd	r22, Y+11	; 0x0b
    14b4:	7c 85       	ldd	r23, Y+12	; 0x0c
    14b6:	8d 85       	ldd	r24, Y+13	; 0x0d
    14b8:	9e 85       	ldd	r25, Y+14	; 0x0e
    14ba:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    14be:	dc 01       	movw	r26, r24
    14c0:	cb 01       	movw	r24, r22
    14c2:	9c 01       	movw	r18, r24
    14c4:	ad 01       	movw	r20, r26
    14c6:	c5 01       	movw	r24, r10
    14c8:	b4 01       	movw	r22, r8
    14ca:	0e 94 ef 4a 	call	0x95de	; 0x95de <__addsf3>
    14ce:	dc 01       	movw	r26, r24
    14d0:	cb 01       	movw	r24, r22
    14d2:	9c 01       	movw	r18, r24
    14d4:	ad 01       	movw	r20, r26
    14d6:	c7 01       	movw	r24, r14
    14d8:	b6 01       	movw	r22, r12
    14da:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    14de:	dc 01       	movw	r26, r24
    14e0:	cb 01       	movw	r24, r22
    14e2:	89 83       	std	Y+1, r24	; 0x01
    14e4:	9a 83       	std	Y+2, r25	; 0x02
    14e6:	ab 83       	std	Y+3, r26	; 0x03
    14e8:	bc 83       	std	Y+4, r27	; 0x04
	
	return controlValue;
    14ea:	89 81       	ldd	r24, Y+1	; 0x01
    14ec:	9a 81       	ldd	r25, Y+2	; 0x02
    14ee:	ab 81       	ldd	r26, Y+3	; 0x03
    14f0:	bc 81       	ldd	r27, Y+4	; 0x04
}
    14f2:	bc 01       	movw	r22, r24
    14f4:	cd 01       	movw	r24, r26
    14f6:	66 96       	adiw	r28, 0x16	; 22
    14f8:	0f b6       	in	r0, 0x3f	; 63
    14fa:	f8 94       	cli
    14fc:	de bf       	out	0x3e, r29	; 62
    14fe:	0f be       	out	0x3f, r0	; 63
    1500:	cd bf       	out	0x3d, r28	; 61
    1502:	df 91       	pop	r29
    1504:	cf 91       	pop	r28
    1506:	1f 91       	pop	r17
    1508:	0f 91       	pop	r16
    150a:	ff 90       	pop	r15
    150c:	ef 90       	pop	r14
    150e:	df 90       	pop	r13
    1510:	cf 90       	pop	r12
    1512:	bf 90       	pop	r11
    1514:	af 90       	pop	r10
    1516:	9f 90       	pop	r9
    1518:	8f 90       	pop	r8
    151a:	08 95       	ret

0000151c <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>:


float PIDController::adjustControlForServoLimits( float controlValueToAdjust, float minServoControlValue, float maxServoControlValue )
{
    151c:	cf 92       	push	r12
    151e:	df 92       	push	r13
    1520:	ef 92       	push	r14
    1522:	ff 92       	push	r15
    1524:	0f 93       	push	r16
    1526:	1f 93       	push	r17
    1528:	cf 93       	push	r28
    152a:	df 93       	push	r29
    152c:	cd b7       	in	r28, 0x3d	; 61
    152e:	de b7       	in	r29, 0x3e	; 62
    1530:	2e 97       	sbiw	r28, 0x0e	; 14
    1532:	0f b6       	in	r0, 0x3f	; 63
    1534:	f8 94       	cli
    1536:	de bf       	out	0x3e, r29	; 62
    1538:	0f be       	out	0x3f, r0	; 63
    153a:	cd bf       	out	0x3d, r28	; 61
    153c:	9a 83       	std	Y+2, r25	; 0x02
    153e:	89 83       	std	Y+1, r24	; 0x01
    1540:	4b 83       	std	Y+3, r20	; 0x03
    1542:	5c 83       	std	Y+4, r21	; 0x04
    1544:	6d 83       	std	Y+5, r22	; 0x05
    1546:	7e 83       	std	Y+6, r23	; 0x06
    1548:	0f 83       	std	Y+7, r16	; 0x07
    154a:	18 87       	std	Y+8, r17	; 0x08
    154c:	29 87       	std	Y+9, r18	; 0x09
    154e:	3a 87       	std	Y+10, r19	; 0x0a
    1550:	cb 86       	std	Y+11, r12	; 0x0b
    1552:	dc 86       	std	Y+12, r13	; 0x0c
    1554:	ed 86       	std	Y+13, r14	; 0x0d
    1556:	fe 86       	std	Y+14, r15	; 0x0e

	//TODO: when generalizing ensure to change this value. 
	//Todo revisit including trim.
	//controlValue += yawServoTrim;
	
	if (controlValueToAdjust > maxServoControlValue)
    1558:	2b 85       	ldd	r18, Y+11	; 0x0b
    155a:	3c 85       	ldd	r19, Y+12	; 0x0c
    155c:	4d 85       	ldd	r20, Y+13	; 0x0d
    155e:	5e 85       	ldd	r21, Y+14	; 0x0e
    1560:	6b 81       	ldd	r22, Y+3	; 0x03
    1562:	7c 81       	ldd	r23, Y+4	; 0x04
    1564:	8d 81       	ldd	r24, Y+5	; 0x05
    1566:	9e 81       	ldd	r25, Y+6	; 0x06
    1568:	0e 94 31 4d 	call	0x9a62	; 0x9a62 <__gesf2>
    156c:	18 16       	cp	r1, r24
    156e:	4c f4       	brge	.+18     	; 0x1582 <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff+0x66>
	{
		controlValueToAdjust = maxServoControlValue;
    1570:	8b 85       	ldd	r24, Y+11	; 0x0b
    1572:	9c 85       	ldd	r25, Y+12	; 0x0c
    1574:	ad 85       	ldd	r26, Y+13	; 0x0d
    1576:	be 85       	ldd	r27, Y+14	; 0x0e
    1578:	8b 83       	std	Y+3, r24	; 0x03
    157a:	9c 83       	std	Y+4, r25	; 0x04
    157c:	ad 83       	std	Y+5, r26	; 0x05
    157e:	be 83       	std	Y+6, r27	; 0x06
    1580:	14 c0       	rjmp	.+40     	; 0x15aa <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff+0x8e>
	}else if (controlValueToAdjust < minServoControlValue)
    1582:	2f 81       	ldd	r18, Y+7	; 0x07
    1584:	38 85       	ldd	r19, Y+8	; 0x08
    1586:	49 85       	ldd	r20, Y+9	; 0x09
    1588:	5a 85       	ldd	r21, Y+10	; 0x0a
    158a:	6b 81       	ldd	r22, Y+3	; 0x03
    158c:	7c 81       	ldd	r23, Y+4	; 0x04
    158e:	8d 81       	ldd	r24, Y+5	; 0x05
    1590:	9e 81       	ldd	r25, Y+6	; 0x06
    1592:	0e 94 53 4b 	call	0x96a6	; 0x96a6 <__cmpsf2>
    1596:	88 23       	and	r24, r24
    1598:	44 f4       	brge	.+16     	; 0x15aa <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff+0x8e>
	{
		controlValueToAdjust = minServoControlValue;
    159a:	8f 81       	ldd	r24, Y+7	; 0x07
    159c:	98 85       	ldd	r25, Y+8	; 0x08
    159e:	a9 85       	ldd	r26, Y+9	; 0x09
    15a0:	ba 85       	ldd	r27, Y+10	; 0x0a
    15a2:	8b 83       	std	Y+3, r24	; 0x03
    15a4:	9c 83       	std	Y+4, r25	; 0x04
    15a6:	ad 83       	std	Y+5, r26	; 0x05
    15a8:	be 83       	std	Y+6, r27	; 0x06
	}
	
	return controlValueToAdjust;
    15aa:	8b 81       	ldd	r24, Y+3	; 0x03
    15ac:	9c 81       	ldd	r25, Y+4	; 0x04
    15ae:	ad 81       	ldd	r26, Y+5	; 0x05
    15b0:	be 81       	ldd	r27, Y+6	; 0x06
}
    15b2:	bc 01       	movw	r22, r24
    15b4:	cd 01       	movw	r24, r26
    15b6:	2e 96       	adiw	r28, 0x0e	; 14
    15b8:	0f b6       	in	r0, 0x3f	; 63
    15ba:	f8 94       	cli
    15bc:	de bf       	out	0x3e, r29	; 62
    15be:	0f be       	out	0x3f, r0	; 63
    15c0:	cd bf       	out	0x3d, r28	; 61
    15c2:	df 91       	pop	r29
    15c4:	cf 91       	pop	r28
    15c6:	1f 91       	pop	r17
    15c8:	0f 91       	pop	r16
    15ca:	ff 90       	pop	r15
    15cc:	ef 90       	pop	r14
    15ce:	df 90       	pop	r13
    15d0:	cf 90       	pop	r12
    15d2:	08 95       	ret

000015d4 <_Z30calculateInnerLoopControlValuefffff>:


float calculateInnerLoopControlValue( float outerLoopSetpoint, float measuredValue, float gain, float angularVelocity, float angularVelocityGain )
{
    15d4:	af 92       	push	r10
    15d6:	bf 92       	push	r11
    15d8:	cf 92       	push	r12
    15da:	df 92       	push	r13
    15dc:	ef 92       	push	r14
    15de:	ff 92       	push	r15
    15e0:	0f 93       	push	r16
    15e2:	1f 93       	push	r17
    15e4:	cf 93       	push	r28
    15e6:	df 93       	push	r29
    15e8:	cd b7       	in	r28, 0x3d	; 61
    15ea:	de b7       	in	r29, 0x3e	; 62
    15ec:	60 97       	sbiw	r28, 0x10	; 16
    15ee:	0f b6       	in	r0, 0x3f	; 63
    15f0:	f8 94       	cli
    15f2:	de bf       	out	0x3e, r29	; 62
    15f4:	0f be       	out	0x3f, r0	; 63
    15f6:	cd bf       	out	0x3d, r28	; 61
    15f8:	69 83       	std	Y+1, r22	; 0x01
    15fa:	7a 83       	std	Y+2, r23	; 0x02
    15fc:	8b 83       	std	Y+3, r24	; 0x03
    15fe:	9c 83       	std	Y+4, r25	; 0x04
    1600:	2d 83       	std	Y+5, r18	; 0x05
    1602:	3e 83       	std	Y+6, r19	; 0x06
    1604:	4f 83       	std	Y+7, r20	; 0x07
    1606:	58 87       	std	Y+8, r21	; 0x08
    1608:	e9 86       	std	Y+9, r14	; 0x09
    160a:	fa 86       	std	Y+10, r15	; 0x0a
    160c:	0b 87       	std	Y+11, r16	; 0x0b
    160e:	1c 87       	std	Y+12, r17	; 0x0c
    1610:	ad 86       	std	Y+13, r10	; 0x0d
    1612:	be 86       	std	Y+14, r11	; 0x0e
    1614:	cf 86       	std	Y+15, r12	; 0x0f
    1616:	d8 8a       	std	Y+16, r13	; 0x10
	return (gain * (outerLoopSetpoint - measuredValue)) - (angularVelocity * angularVelocityGain);
    1618:	2d 81       	ldd	r18, Y+5	; 0x05
    161a:	3e 81       	ldd	r19, Y+6	; 0x06
    161c:	4f 81       	ldd	r20, Y+7	; 0x07
    161e:	58 85       	ldd	r21, Y+8	; 0x08
    1620:	69 81       	ldd	r22, Y+1	; 0x01
    1622:	7a 81       	ldd	r23, Y+2	; 0x02
    1624:	8b 81       	ldd	r24, Y+3	; 0x03
    1626:	9c 81       	ldd	r25, Y+4	; 0x04
    1628:	0e 94 ee 4a 	call	0x95dc	; 0x95dc <__subsf3>
    162c:	dc 01       	movw	r26, r24
    162e:	cb 01       	movw	r24, r22
    1630:	29 85       	ldd	r18, Y+9	; 0x09
    1632:	3a 85       	ldd	r19, Y+10	; 0x0a
    1634:	4b 85       	ldd	r20, Y+11	; 0x0b
    1636:	5c 85       	ldd	r21, Y+12	; 0x0c
    1638:	bc 01       	movw	r22, r24
    163a:	cd 01       	movw	r24, r26
    163c:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    1640:	dc 01       	movw	r26, r24
    1642:	cb 01       	movw	r24, r22
    1644:	6c 01       	movw	r12, r24
    1646:	7d 01       	movw	r14, r26
    1648:	2e 8d       	ldd	r18, Y+30	; 0x1e
    164a:	3f 8d       	ldd	r19, Y+31	; 0x1f
    164c:	48 a1       	ldd	r20, Y+32	; 0x20
    164e:	59 a1       	ldd	r21, Y+33	; 0x21
    1650:	6d 85       	ldd	r22, Y+13	; 0x0d
    1652:	7e 85       	ldd	r23, Y+14	; 0x0e
    1654:	8f 85       	ldd	r24, Y+15	; 0x0f
    1656:	98 89       	ldd	r25, Y+16	; 0x10
    1658:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    165c:	dc 01       	movw	r26, r24
    165e:	cb 01       	movw	r24, r22
    1660:	9c 01       	movw	r18, r24
    1662:	ad 01       	movw	r20, r26
    1664:	c7 01       	movw	r24, r14
    1666:	b6 01       	movw	r22, r12
    1668:	0e 94 ee 4a 	call	0x95dc	; 0x95dc <__subsf3>
    166c:	dc 01       	movw	r26, r24
    166e:	cb 01       	movw	r24, r22
}
    1670:	bc 01       	movw	r22, r24
    1672:	cd 01       	movw	r24, r26
    1674:	60 96       	adiw	r28, 0x10	; 16
    1676:	0f b6       	in	r0, 0x3f	; 63
    1678:	f8 94       	cli
    167a:	de bf       	out	0x3e, r29	; 62
    167c:	0f be       	out	0x3f, r0	; 63
    167e:	cd bf       	out	0x3d, r28	; 61
    1680:	df 91       	pop	r29
    1682:	cf 91       	pop	r28
    1684:	1f 91       	pop	r17
    1686:	0f 91       	pop	r16
    1688:	ff 90       	pop	r15
    168a:	ef 90       	pop	r14
    168c:	df 90       	pop	r13
    168e:	cf 90       	pop	r12
    1690:	bf 90       	pop	r11
    1692:	af 90       	pop	r10
    1694:	08 95       	ret

00001696 <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff>:


float PIDController::adjustForSetpointLimits( float outerLoopControlSetpoint, float minSetpointLimitDegrees, float maxSetpointLimitDegrees )
{
    1696:	cf 92       	push	r12
    1698:	df 92       	push	r13
    169a:	ef 92       	push	r14
    169c:	ff 92       	push	r15
    169e:	0f 93       	push	r16
    16a0:	1f 93       	push	r17
    16a2:	cf 93       	push	r28
    16a4:	df 93       	push	r29
    16a6:	cd b7       	in	r28, 0x3d	; 61
    16a8:	de b7       	in	r29, 0x3e	; 62
    16aa:	2e 97       	sbiw	r28, 0x0e	; 14
    16ac:	0f b6       	in	r0, 0x3f	; 63
    16ae:	f8 94       	cli
    16b0:	de bf       	out	0x3e, r29	; 62
    16b2:	0f be       	out	0x3f, r0	; 63
    16b4:	cd bf       	out	0x3d, r28	; 61
    16b6:	9a 83       	std	Y+2, r25	; 0x02
    16b8:	89 83       	std	Y+1, r24	; 0x01
    16ba:	4b 83       	std	Y+3, r20	; 0x03
    16bc:	5c 83       	std	Y+4, r21	; 0x04
    16be:	6d 83       	std	Y+5, r22	; 0x05
    16c0:	7e 83       	std	Y+6, r23	; 0x06
    16c2:	0f 83       	std	Y+7, r16	; 0x07
    16c4:	18 87       	std	Y+8, r17	; 0x08
    16c6:	29 87       	std	Y+9, r18	; 0x09
    16c8:	3a 87       	std	Y+10, r19	; 0x0a
    16ca:	cb 86       	std	Y+11, r12	; 0x0b
    16cc:	dc 86       	std	Y+12, r13	; 0x0c
    16ce:	ed 86       	std	Y+13, r14	; 0x0d
    16d0:	fe 86       	std	Y+14, r15	; 0x0e
	if (outerLoopControlSetpoint < minSetpointLimitDegrees)
    16d2:	2f 81       	ldd	r18, Y+7	; 0x07
    16d4:	38 85       	ldd	r19, Y+8	; 0x08
    16d6:	49 85       	ldd	r20, Y+9	; 0x09
    16d8:	5a 85       	ldd	r21, Y+10	; 0x0a
    16da:	6b 81       	ldd	r22, Y+3	; 0x03
    16dc:	7c 81       	ldd	r23, Y+4	; 0x04
    16de:	8d 81       	ldd	r24, Y+5	; 0x05
    16e0:	9e 81       	ldd	r25, Y+6	; 0x06
    16e2:	0e 94 53 4b 	call	0x96a6	; 0x96a6 <__cmpsf2>
    16e6:	88 23       	and	r24, r24
    16e8:	4c f4       	brge	.+18     	; 0x16fc <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff+0x66>
	{
		outerLoopControlSetpoint = minSetpointLimitDegrees;
    16ea:	8f 81       	ldd	r24, Y+7	; 0x07
    16ec:	98 85       	ldd	r25, Y+8	; 0x08
    16ee:	a9 85       	ldd	r26, Y+9	; 0x09
    16f0:	ba 85       	ldd	r27, Y+10	; 0x0a
    16f2:	8b 83       	std	Y+3, r24	; 0x03
    16f4:	9c 83       	std	Y+4, r25	; 0x04
    16f6:	ad 83       	std	Y+5, r26	; 0x05
    16f8:	be 83       	std	Y+6, r27	; 0x06
    16fa:	14 c0       	rjmp	.+40     	; 0x1724 <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff+0x8e>
	}else if (outerLoopControlSetpoint > maxSetpointLimitDegrees)
    16fc:	2b 85       	ldd	r18, Y+11	; 0x0b
    16fe:	3c 85       	ldd	r19, Y+12	; 0x0c
    1700:	4d 85       	ldd	r20, Y+13	; 0x0d
    1702:	5e 85       	ldd	r21, Y+14	; 0x0e
    1704:	6b 81       	ldd	r22, Y+3	; 0x03
    1706:	7c 81       	ldd	r23, Y+4	; 0x04
    1708:	8d 81       	ldd	r24, Y+5	; 0x05
    170a:	9e 81       	ldd	r25, Y+6	; 0x06
    170c:	0e 94 31 4d 	call	0x9a62	; 0x9a62 <__gesf2>
    1710:	18 16       	cp	r1, r24
    1712:	44 f4       	brge	.+16     	; 0x1724 <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff+0x8e>
	{
		outerLoopControlSetpoint = maxSetpointLimitDegrees;
    1714:	8b 85       	ldd	r24, Y+11	; 0x0b
    1716:	9c 85       	ldd	r25, Y+12	; 0x0c
    1718:	ad 85       	ldd	r26, Y+13	; 0x0d
    171a:	be 85       	ldd	r27, Y+14	; 0x0e
    171c:	8b 83       	std	Y+3, r24	; 0x03
    171e:	9c 83       	std	Y+4, r25	; 0x04
    1720:	ad 83       	std	Y+5, r26	; 0x05
    1722:	be 83       	std	Y+6, r27	; 0x06
	}
	
	return outerLoopControlSetpoint;
    1724:	8b 81       	ldd	r24, Y+3	; 0x03
    1726:	9c 81       	ldd	r25, Y+4	; 0x04
    1728:	ad 81       	ldd	r26, Y+5	; 0x05
    172a:	be 81       	ldd	r27, Y+6	; 0x06
}
    172c:	bc 01       	movw	r22, r24
    172e:	cd 01       	movw	r24, r26
    1730:	2e 96       	adiw	r28, 0x0e	; 14
    1732:	0f b6       	in	r0, 0x3f	; 63
    1734:	f8 94       	cli
    1736:	de bf       	out	0x3e, r29	; 62
    1738:	0f be       	out	0x3f, r0	; 63
    173a:	cd bf       	out	0x3d, r28	; 61
    173c:	df 91       	pop	r29
    173e:	cf 91       	pop	r28
    1740:	1f 91       	pop	r17
    1742:	0f 91       	pop	r16
    1744:	ff 90       	pop	r15
    1746:	ef 90       	pop	r14
    1748:	df 90       	pop	r13
    174a:	cf 90       	pop	r12
    174c:	08 95       	ret

0000174e <_ZN10helicopter10controller13PIDController13addBlownFrameEv>:



//TODO WTF IS THIS DOING HERE?? THIS IS THE WRONG CONTROLLER!!
void PIDController::addBlownFrame()
{
    174e:	cf 93       	push	r28
    1750:	df 93       	push	r29
    1752:	1f 92       	push	r1
    1754:	1f 92       	push	r1
    1756:	cd b7       	in	r28, 0x3d	; 61
    1758:	de b7       	in	r29, 0x3e	; 62
    175a:	9a 83       	std	Y+2, r25	; 0x02
    175c:	89 83       	std	Y+1, r24	; 0x01
	model->BlownFrames(model->BlownFrames() + 1);
    175e:	89 81       	ldd	r24, Y+1	; 0x01
    1760:	9a 81       	ldd	r25, Y+2	; 0x02
    1762:	fc 01       	movw	r30, r24
    1764:	80 81       	ld	r24, Z
    1766:	91 81       	ldd	r25, Z+1	; 0x01
    1768:	0e 94 39 07 	call	0xe72	; 0xe72 <_ZNK10helicopter5model11SystemModel11BlownFramesEv>
    176c:	dc 01       	movw	r26, r24
    176e:	cb 01       	movw	r24, r22
    1770:	01 96       	adiw	r24, 0x01	; 1
    1772:	a1 1d       	adc	r26, r1
    1774:	b1 1d       	adc	r27, r1
    1776:	29 81       	ldd	r18, Y+1	; 0x01
    1778:	3a 81       	ldd	r19, Y+2	; 0x02
    177a:	f9 01       	movw	r30, r18
    177c:	20 81       	ld	r18, Z
    177e:	31 81       	ldd	r19, Z+1	; 0x01
    1780:	ac 01       	movw	r20, r24
    1782:	bd 01       	movw	r22, r26
    1784:	c9 01       	movw	r24, r18
    1786:	0e 94 51 07 	call	0xea2	; 0xea2 <_ZN10helicopter5model11SystemModel11BlownFramesEl>
}
    178a:	0f 90       	pop	r0
    178c:	0f 90       	pop	r0
    178e:	df 91       	pop	r29
    1790:	cf 91       	pop	r28
    1792:	08 95       	ret

00001794 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef>:

float PIDController::convertYawErrorFrom360to180( float yawError )
{
    1794:	cf 93       	push	r28
    1796:	df 93       	push	r29
    1798:	00 d0       	rcall	.+0      	; 0x179a <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x6>
    179a:	00 d0       	rcall	.+0      	; 0x179c <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x8>
    179c:	cd b7       	in	r28, 0x3d	; 61
    179e:	de b7       	in	r29, 0x3e	; 62
    17a0:	9a 83       	std	Y+2, r25	; 0x02
    17a2:	89 83       	std	Y+1, r24	; 0x01
    17a4:	4b 83       	std	Y+3, r20	; 0x03
    17a6:	5c 83       	std	Y+4, r21	; 0x04
    17a8:	6d 83       	std	Y+5, r22	; 0x05
    17aa:	7e 83       	std	Y+6, r23	; 0x06
	if (yawError >= 180)
    17ac:	20 e0       	ldi	r18, 0x00	; 0
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	44 e3       	ldi	r20, 0x34	; 52
    17b2:	53 e4       	ldi	r21, 0x43	; 67
    17b4:	6b 81       	ldd	r22, Y+3	; 0x03
    17b6:	7c 81       	ldd	r23, Y+4	; 0x04
    17b8:	8d 81       	ldd	r24, Y+5	; 0x05
    17ba:	9e 81       	ldd	r25, Y+6	; 0x06
    17bc:	0e 94 31 4d 	call	0x9a62	; 0x9a62 <__gesf2>
    17c0:	88 23       	and	r24, r24
    17c2:	8c f0       	brlt	.+34     	; 0x17e6 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x52>
	{
		yawError = yawError - 360;
    17c4:	20 e0       	ldi	r18, 0x00	; 0
    17c6:	30 e0       	ldi	r19, 0x00	; 0
    17c8:	44 eb       	ldi	r20, 0xB4	; 180
    17ca:	53 e4       	ldi	r21, 0x43	; 67
    17cc:	6b 81       	ldd	r22, Y+3	; 0x03
    17ce:	7c 81       	ldd	r23, Y+4	; 0x04
    17d0:	8d 81       	ldd	r24, Y+5	; 0x05
    17d2:	9e 81       	ldd	r25, Y+6	; 0x06
    17d4:	0e 94 ee 4a 	call	0x95dc	; 0x95dc <__subsf3>
    17d8:	dc 01       	movw	r26, r24
    17da:	cb 01       	movw	r24, r22
    17dc:	8b 83       	std	Y+3, r24	; 0x03
    17de:	9c 83       	std	Y+4, r25	; 0x04
    17e0:	ad 83       	std	Y+5, r26	; 0x05
    17e2:	be 83       	std	Y+6, r27	; 0x06
    17e4:	1c c0       	rjmp	.+56     	; 0x181e <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x8a>
	}
	else if (yawError < -180)
    17e6:	20 e0       	ldi	r18, 0x00	; 0
    17e8:	30 e0       	ldi	r19, 0x00	; 0
    17ea:	44 e3       	ldi	r20, 0x34	; 52
    17ec:	53 ec       	ldi	r21, 0xC3	; 195
    17ee:	6b 81       	ldd	r22, Y+3	; 0x03
    17f0:	7c 81       	ldd	r23, Y+4	; 0x04
    17f2:	8d 81       	ldd	r24, Y+5	; 0x05
    17f4:	9e 81       	ldd	r25, Y+6	; 0x06
    17f6:	0e 94 53 4b 	call	0x96a6	; 0x96a6 <__cmpsf2>
    17fa:	88 23       	and	r24, r24
    17fc:	84 f4       	brge	.+32     	; 0x181e <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef+0x8a>
	{
		yawError = yawError + 360;
    17fe:	20 e0       	ldi	r18, 0x00	; 0
    1800:	30 e0       	ldi	r19, 0x00	; 0
    1802:	44 eb       	ldi	r20, 0xB4	; 180
    1804:	53 e4       	ldi	r21, 0x43	; 67
    1806:	6b 81       	ldd	r22, Y+3	; 0x03
    1808:	7c 81       	ldd	r23, Y+4	; 0x04
    180a:	8d 81       	ldd	r24, Y+5	; 0x05
    180c:	9e 81       	ldd	r25, Y+6	; 0x06
    180e:	0e 94 ef 4a 	call	0x95de	; 0x95de <__addsf3>
    1812:	dc 01       	movw	r26, r24
    1814:	cb 01       	movw	r24, r22
    1816:	8b 83       	std	Y+3, r24	; 0x03
    1818:	9c 83       	std	Y+4, r25	; 0x04
    181a:	ad 83       	std	Y+5, r26	; 0x05
    181c:	be 83       	std	Y+6, r27	; 0x06
	}
	
	return yawError;
    181e:	8b 81       	ldd	r24, Y+3	; 0x03
    1820:	9c 81       	ldd	r25, Y+4	; 0x04
    1822:	ad 81       	ldd	r26, Y+5	; 0x05
    1824:	be 81       	ldd	r27, Y+6	; 0x06
}
    1826:	bc 01       	movw	r22, r24
    1828:	cd 01       	movw	r24, r26
    182a:	26 96       	adiw	r28, 0x06	; 6
    182c:	0f b6       	in	r0, 0x3f	; 63
    182e:	f8 94       	cli
    1830:	de bf       	out	0x3e, r29	; 62
    1832:	0f be       	out	0x3f, r0	; 63
    1834:	cd bf       	out	0x3d, r28	; 61
    1836:	df 91       	pop	r29
    1838:	cf 91       	pop	r28
    183a:	08 95       	ret

0000183c <_ZN10helicopter10controller13PIDController34tailRotorCollectiveOuterLoopUpdateEv>:


void PIDController::tailRotorCollectiveOuterLoopUpdate()
{
    183c:	7f 92       	push	r7
    183e:	8f 92       	push	r8
    1840:	9f 92       	push	r9
    1842:	af 92       	push	r10
    1844:	bf 92       	push	r11
    1846:	cf 92       	push	r12
    1848:	df 92       	push	r13
    184a:	ef 92       	push	r14
    184c:	ff 92       	push	r15
    184e:	0f 93       	push	r16
    1850:	1f 93       	push	r17
    1852:	cf 93       	push	r28
    1854:	df 93       	push	r29
    1856:	cd b7       	in	r28, 0x3d	; 61
    1858:	de b7       	in	r29, 0x3e	; 62
    185a:	6a 97       	sbiw	r28, 0x1a	; 26
    185c:	0f b6       	in	r0, 0x3f	; 63
    185e:	f8 94       	cli
    1860:	de bf       	out	0x3e, r29	; 62
    1862:	0f be       	out	0x3f, r0	; 63
    1864:	cd bf       	out	0x3d, r28	; 61
    1866:	9a 8f       	std	Y+26, r25	; 0x1a
    1868:	89 8f       	std	Y+25, r24	; 0x19
	if (model->OperationalState() == SystemModel::AutoPilot)
    186a:	89 8d       	ldd	r24, Y+25	; 0x19
    186c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    186e:	fc 01       	movw	r30, r24
    1870:	80 81       	ld	r24, Z
    1872:	91 81       	ldd	r25, Z+1	; 0x01
    1874:	0e 94 74 07 	call	0xee8	; 0xee8 <_ZNK10helicopter5model11SystemModel16OperationalStateEv>
    1878:	98 2f       	mov	r25, r24
    187a:	81 e0       	ldi	r24, 0x01	; 1
    187c:	91 30       	cpi	r25, 0x01	; 1
    187e:	09 f0       	breq	.+2      	; 0x1882 <_ZN10helicopter10controller13PIDController34tailRotorCollectiveOuterLoopUpdateEv+0x46>
    1880:	80 e0       	ldi	r24, 0x00	; 0
    1882:	88 23       	and	r24, r24
    1884:	09 f4       	brne	.+2      	; 0x1888 <_ZN10helicopter10controller13PIDController34tailRotorCollectiveOuterLoopUpdateEv+0x4c>
    1886:	49 c1       	rjmp	.+658    	; 0x1b1a <_ZN10helicopter10controller13PIDController34tailRotorCollectiveOuterLoopUpdateEv+0x2de>
	{
		float yawProportional = calculateProportional(model->MagYawDegrees(), model->ReferenceMagYawDegrees());
    1888:	89 8d       	ldd	r24, Y+25	; 0x19
    188a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    188c:	fc 01       	movw	r30, r24
    188e:	80 81       	ld	r24, Z
    1890:	91 81       	ldd	r25, Z+1	; 0x01
    1892:	0e 94 4d 01 	call	0x29a	; 0x29a <_ZNK10helicopter5model11SystemModel22ReferenceMagYawDegreesEv>
    1896:	6b 01       	movw	r12, r22
    1898:	7c 01       	movw	r14, r24
    189a:	89 8d       	ldd	r24, Y+25	; 0x19
    189c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    189e:	fc 01       	movw	r30, r24
    18a0:	80 81       	ld	r24, Z
    18a2:	91 81       	ldd	r25, Z+1	; 0x01
    18a4:	0e 94 37 01 	call	0x26e	; 0x26e <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>
    18a8:	dc 01       	movw	r26, r24
    18aa:	cb 01       	movw	r24, r22
    18ac:	e9 8d       	ldd	r30, Y+25	; 0x19
    18ae:	fa 8d       	ldd	r31, Y+26	; 0x1a
    18b0:	97 01       	movw	r18, r14
    18b2:	86 01       	movw	r16, r12
    18b4:	ac 01       	movw	r20, r24
    18b6:	bd 01       	movw	r22, r26
    18b8:	cf 01       	movw	r24, r30
    18ba:	0e 94 86 08 	call	0x110c	; 0x110c <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    18be:	dc 01       	movw	r26, r24
    18c0:	cb 01       	movw	r24, r22
    18c2:	89 83       	std	Y+1, r24	; 0x01
    18c4:	9a 83       	std	Y+2, r25	; 0x02
    18c6:	ab 83       	std	Y+3, r26	; 0x03
    18c8:	bc 83       	std	Y+4, r27	; 0x04
		
		yawProportional = convertYawErrorFrom360to180(yawProportional);
    18ca:	89 81       	ldd	r24, Y+1	; 0x01
    18cc:	9a 81       	ldd	r25, Y+2	; 0x02
    18ce:	ab 81       	ldd	r26, Y+3	; 0x03
    18d0:	bc 81       	ldd	r27, Y+4	; 0x04
    18d2:	29 8d       	ldd	r18, Y+25	; 0x19
    18d4:	3a 8d       	ldd	r19, Y+26	; 0x1a
    18d6:	ac 01       	movw	r20, r24
    18d8:	bd 01       	movw	r22, r26
    18da:	c9 01       	movw	r24, r18
    18dc:	0e 94 ca 0b 	call	0x1794	; 0x1794 <_ZN10helicopter10controller13PIDController27convertYawErrorFrom360to180Ef>
    18e0:	dc 01       	movw	r26, r24
    18e2:	cb 01       	movw	r24, r22
    18e4:	89 83       	std	Y+1, r24	; 0x01
    18e6:	9a 83       	std	Y+2, r25	; 0x02
    18e8:	ab 83       	std	Y+3, r26	; 0x03
    18ea:	bc 83       	std	Y+4, r27	; 0x04
		
		float yawIntegralAntiWindup = calculateIntegralAntiWindup(model->YawControlBeforeServoLimitsAdjustment(), model->YawControl(), yawAntiWindupGain);
    18ec:	89 8d       	ldd	r24, Y+25	; 0x19
    18ee:	9a 8d       	ldd	r25, Y+26	; 0x1a
    18f0:	fc 01       	movw	r30, r24
    18f2:	c6 84       	ldd	r12, Z+14	; 0x0e
    18f4:	d7 84       	ldd	r13, Z+15	; 0x0f
    18f6:	e0 88       	ldd	r14, Z+16	; 0x10
    18f8:	f1 88       	ldd	r15, Z+17	; 0x11
    18fa:	89 8d       	ldd	r24, Y+25	; 0x19
    18fc:	9a 8d       	ldd	r25, Y+26	; 0x1a
    18fe:	fc 01       	movw	r30, r24
    1900:	80 81       	ld	r24, Z
    1902:	91 81       	ldd	r25, Z+1	; 0x01
    1904:	0e 94 63 01 	call	0x2c6	; 0x2c6 <_ZNK10helicopter5model11SystemModel10YawControlEv>
    1908:	4b 01       	movw	r8, r22
    190a:	5c 01       	movw	r10, r24
    190c:	89 8d       	ldd	r24, Y+25	; 0x19
    190e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1910:	fc 01       	movw	r30, r24
    1912:	80 81       	ld	r24, Z
    1914:	91 81       	ldd	r25, Z+1	; 0x01
    1916:	0e 94 99 01 	call	0x332	; 0x332 <_ZNK10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEv>
    191a:	dc 01       	movw	r26, r24
    191c:	cb 01       	movw	r24, r22
    191e:	e9 8d       	ldd	r30, Y+25	; 0x19
    1920:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1922:	95 01       	movw	r18, r10
    1924:	84 01       	movw	r16, r8
    1926:	ac 01       	movw	r20, r24
    1928:	bd 01       	movw	r22, r26
    192a:	cf 01       	movw	r24, r30
    192c:	0e 94 b5 08 	call	0x116a	; 0x116a <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    1930:	dc 01       	movw	r26, r24
    1932:	cb 01       	movw	r24, r22
    1934:	8d 83       	std	Y+5, r24	; 0x05
    1936:	9e 83       	std	Y+6, r25	; 0x06
    1938:	af 83       	std	Y+7, r26	; 0x07
    193a:	b8 87       	std	Y+8, r27	; 0x08
		float weightedYawIntegral = calculateIntegral(yawProportional, model->YawIntegral(), yawIntegralAntiWindup, yawIntegralGain);
    193c:	89 8d       	ldd	r24, Y+25	; 0x19
    193e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1940:	fc 01       	movw	r30, r24
    1942:	a2 80       	ldd	r10, Z+2	; 0x02
    1944:	b3 80       	ldd	r11, Z+3	; 0x03
    1946:	c4 80       	ldd	r12, Z+4	; 0x04
    1948:	d5 80       	ldd	r13, Z+5	; 0x05
    194a:	89 8d       	ldd	r24, Y+25	; 0x19
    194c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    194e:	fc 01       	movw	r30, r24
    1950:	80 81       	ld	r24, Z
    1952:	91 81       	ldd	r25, Z+1	; 0x01
    1954:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>
    1958:	9b 01       	movw	r18, r22
    195a:	ac 01       	movw	r20, r24
    195c:	ed 80       	ldd	r14, Y+5	; 0x05
    195e:	fe 80       	ldd	r15, Y+6	; 0x06
    1960:	0f 81       	ldd	r16, Y+7	; 0x07
    1962:	18 85       	ldd	r17, Y+8	; 0x08
    1964:	89 81       	ldd	r24, Y+1	; 0x01
    1966:	9a 81       	ldd	r25, Y+2	; 0x02
    1968:	ab 81       	ldd	r26, Y+3	; 0x03
    196a:	bc 81       	ldd	r27, Y+4	; 0x04
    196c:	e9 8d       	ldd	r30, Y+25	; 0x19
    196e:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1970:	45 01       	movw	r8, r10
    1972:	56 01       	movw	r10, r12
    1974:	67 01       	movw	r12, r14
    1976:	78 01       	movw	r14, r16
    1978:	89 01       	movw	r16, r18
    197a:	9a 01       	movw	r18, r20
    197c:	ac 01       	movw	r20, r24
    197e:	bd 01       	movw	r22, r26
    1980:	cf 01       	movw	r24, r30
    1982:	0e 94 06 09 	call	0x120c	; 0x120c <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    1986:	dc 01       	movw	r26, r24
    1988:	cb 01       	movw	r24, r22
    198a:	89 87       	std	Y+9, r24	; 0x09
    198c:	9a 87       	std	Y+10, r25	; 0x0a
    198e:	ab 87       	std	Y+11, r26	; 0x0b
    1990:	bc 87       	std	Y+12, r27	; 0x0c
		float yawDerivativeError = calculateVelocityError(model->YawVelocityDegreesPerSecond(), model->ReferenceYawVelocityDegreesPerSecond());
    1992:	89 8d       	ldd	r24, Y+25	; 0x19
    1994:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1996:	fc 01       	movw	r30, r24
    1998:	80 81       	ld	r24, Z
    199a:	91 81       	ldd	r25, Z+1	; 0x01
    199c:	0e 94 e5 01 	call	0x3ca	; 0x3ca <_ZNK10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEv>
    19a0:	6b 01       	movw	r12, r22
    19a2:	7c 01       	movw	r14, r24
    19a4:	89 8d       	ldd	r24, Y+25	; 0x19
    19a6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    19a8:	fc 01       	movw	r30, r24
    19aa:	80 81       	ld	r24, Z
    19ac:	91 81       	ldd	r25, Z+1	; 0x01
    19ae:	0e 94 cf 01 	call	0x39e	; 0x39e <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>
    19b2:	dc 01       	movw	r26, r24
    19b4:	cb 01       	movw	r24, r22
    19b6:	e9 8d       	ldd	r30, Y+25	; 0x19
    19b8:	fa 8d       	ldd	r31, Y+26	; 0x1a
    19ba:	97 01       	movw	r18, r14
    19bc:	86 01       	movw	r16, r12
    19be:	ac 01       	movw	r20, r24
    19c0:	bd 01       	movw	r22, r26
    19c2:	cf 01       	movw	r24, r30
    19c4:	0e 94 d8 09 	call	0x13b0	; 0x13b0 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    19c8:	dc 01       	movw	r26, r24
    19ca:	cb 01       	movw	r24, r22
    19cc:	8d 87       	std	Y+13, r24	; 0x0d
    19ce:	9e 87       	std	Y+14, r25	; 0x0e
    19d0:	af 87       	std	Y+15, r26	; 0x0f
    19d2:	b8 8b       	std	Y+16, r27	; 0x10
		float yawControlBeforeServoLimitsAdjustment = calculateOuterLoopControlValue(yawProportional, yawDerivativeError, weightedYawIntegral, yawProportionalGain, yawDerivativeGain, 1);
    19d4:	89 8d       	ldd	r24, Y+25	; 0x19
    19d6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    19d8:	fc 01       	movw	r30, r24
    19da:	86 81       	ldd	r24, Z+6	; 0x06
    19dc:	97 81       	ldd	r25, Z+7	; 0x07
    19de:	a0 85       	ldd	r26, Z+8	; 0x08
    19e0:	b1 85       	ldd	r27, Z+9	; 0x09
    19e2:	29 8d       	ldd	r18, Y+25	; 0x19
    19e4:	3a 8d       	ldd	r19, Y+26	; 0x1a
    19e6:	f9 01       	movw	r30, r18
    19e8:	82 84       	ldd	r8, Z+10	; 0x0a
    19ea:	93 84       	ldd	r9, Z+11	; 0x0b
    19ec:	a4 84       	ldd	r10, Z+12	; 0x0c
    19ee:	b5 84       	ldd	r11, Z+13	; 0x0d
    19f0:	c9 84       	ldd	r12, Y+9	; 0x09
    19f2:	da 84       	ldd	r13, Y+10	; 0x0a
    19f4:	eb 84       	ldd	r14, Y+11	; 0x0b
    19f6:	fc 84       	ldd	r15, Y+12	; 0x0c
    19f8:	0d 85       	ldd	r16, Y+13	; 0x0d
    19fa:	1e 85       	ldd	r17, Y+14	; 0x0e
    19fc:	2f 85       	ldd	r18, Y+15	; 0x0f
    19fe:	38 89       	ldd	r19, Y+16	; 0x10
    1a00:	49 81       	ldd	r20, Y+1	; 0x01
    1a02:	5a 81       	ldd	r21, Y+2	; 0x02
    1a04:	6b 81       	ldd	r22, Y+3	; 0x03
    1a06:	7c 81       	ldd	r23, Y+4	; 0x04
    1a08:	e9 8d       	ldd	r30, Y+25	; 0x19
    1a0a:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1a0c:	1f 92       	push	r1
    1a0e:	77 24       	eor	r7, r7
    1a10:	73 94       	inc	r7
    1a12:	7f 92       	push	r7
    1a14:	7b 2e       	mov	r7, r27
    1a16:	7f 92       	push	r7
    1a18:	7a 2e       	mov	r7, r26
    1a1a:	7f 92       	push	r7
    1a1c:	79 2e       	mov	r7, r25
    1a1e:	7f 92       	push	r7
    1a20:	8f 93       	push	r24
    1a22:	cf 01       	movw	r24, r30
    1a24:	0e 94 07 0a 	call	0x140e	; 0x140e <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffffi>
    1a28:	0f 90       	pop	r0
    1a2a:	0f 90       	pop	r0
    1a2c:	0f 90       	pop	r0
    1a2e:	0f 90       	pop	r0
    1a30:	0f 90       	pop	r0
    1a32:	0f 90       	pop	r0
    1a34:	dc 01       	movw	r26, r24
    1a36:	cb 01       	movw	r24, r22
    1a38:	89 8b       	std	Y+17, r24	; 0x11
    1a3a:	9a 8b       	std	Y+18, r25	; 0x12
    1a3c:	ab 8b       	std	Y+19, r26	; 0x13
    1a3e:	bc 8b       	std	Y+20, r27	; 0x14
		float yawControl = adjustControlForServoLimits(yawControlBeforeServoLimitsAdjustment, minYawServoControlValue, maxYawServoControlValue);
    1a40:	89 8d       	ldd	r24, Y+25	; 0x19
    1a42:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a44:	8a 5a       	subi	r24, 0xAA	; 170
    1a46:	9f 4f       	sbci	r25, 0xFF	; 255
    1a48:	fc 01       	movw	r30, r24
    1a4a:	e0 80       	ld	r14, Z
    1a4c:	f1 80       	ldd	r15, Z+1	; 0x01
    1a4e:	02 81       	ldd	r16, Z+2	; 0x02
    1a50:	13 81       	ldd	r17, Z+3	; 0x03
    1a52:	89 8d       	ldd	r24, Y+25	; 0x19
    1a54:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a56:	8e 5a       	subi	r24, 0xAE	; 174
    1a58:	9f 4f       	sbci	r25, 0xFF	; 255
    1a5a:	fc 01       	movw	r30, r24
    1a5c:	20 81       	ld	r18, Z
    1a5e:	31 81       	ldd	r19, Z+1	; 0x01
    1a60:	42 81       	ldd	r20, Z+2	; 0x02
    1a62:	53 81       	ldd	r21, Z+3	; 0x03
    1a64:	89 89       	ldd	r24, Y+17	; 0x11
    1a66:	9a 89       	ldd	r25, Y+18	; 0x12
    1a68:	ab 89       	ldd	r26, Y+19	; 0x13
    1a6a:	bc 89       	ldd	r27, Y+20	; 0x14
    1a6c:	e9 8d       	ldd	r30, Y+25	; 0x19
    1a6e:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1a70:	67 01       	movw	r12, r14
    1a72:	78 01       	movw	r14, r16
    1a74:	89 01       	movw	r16, r18
    1a76:	9a 01       	movw	r18, r20
    1a78:	ac 01       	movw	r20, r24
    1a7a:	bd 01       	movw	r22, r26
    1a7c:	cf 01       	movw	r24, r30
    1a7e:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    1a82:	dc 01       	movw	r26, r24
    1a84:	cb 01       	movw	r24, r22
    1a86:	8d 8b       	std	Y+21, r24	; 0x15
    1a88:	9e 8b       	std	Y+22, r25	; 0x16
    1a8a:	af 8b       	std	Y+23, r26	; 0x17
    1a8c:	b8 8f       	std	Y+24, r27	; 0x18
		
		model->YawControl(yawControl);
    1a8e:	89 8d       	ldd	r24, Y+25	; 0x19
    1a90:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1a92:	fc 01       	movw	r30, r24
    1a94:	20 81       	ld	r18, Z
    1a96:	31 81       	ldd	r19, Z+1	; 0x01
    1a98:	8d 89       	ldd	r24, Y+21	; 0x15
    1a9a:	9e 89       	ldd	r25, Y+22	; 0x16
    1a9c:	af 89       	ldd	r26, Y+23	; 0x17
    1a9e:	b8 8d       	ldd	r27, Y+24	; 0x18
    1aa0:	ac 01       	movw	r20, r24
    1aa2:	bd 01       	movw	r22, r26
    1aa4:	c9 01       	movw	r24, r18
    1aa6:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_ZN10helicopter5model11SystemModel10YawControlEf>
		model->YawControlBeforeServoLimitsAdjustment(yawControlBeforeServoLimitsAdjustment);
    1aaa:	89 8d       	ldd	r24, Y+25	; 0x19
    1aac:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1aae:	fc 01       	movw	r30, r24
    1ab0:	20 81       	ld	r18, Z
    1ab2:	31 81       	ldd	r19, Z+1	; 0x01
    1ab4:	89 89       	ldd	r24, Y+17	; 0x11
    1ab6:	9a 89       	ldd	r25, Y+18	; 0x12
    1ab8:	ab 89       	ldd	r26, Y+19	; 0x13
    1aba:	bc 89       	ldd	r27, Y+20	; 0x14
    1abc:	ac 01       	movw	r20, r24
    1abe:	bd 01       	movw	r22, r26
    1ac0:	c9 01       	movw	r24, r18
    1ac2:	0e 94 af 01 	call	0x35e	; 0x35e <_ZN10helicopter5model11SystemModel37YawControlBeforeServoLimitsAdjustmentEf>
		model->YawIntegral(weightedYawIntegral);
    1ac6:	89 8d       	ldd	r24, Y+25	; 0x19
    1ac8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1aca:	fc 01       	movw	r30, r24
    1acc:	20 81       	ld	r18, Z
    1ace:	31 81       	ldd	r19, Z+1	; 0x01
    1ad0:	89 85       	ldd	r24, Y+9	; 0x09
    1ad2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ad4:	ab 85       	ldd	r26, Y+11	; 0x0b
    1ad6:	bc 85       	ldd	r27, Y+12	; 0x0c
    1ad8:	ac 01       	movw	r20, r24
    1ada:	bd 01       	movw	r22, r26
    1adc:	c9 01       	movw	r24, r18
    1ade:	0e 94 11 02 	call	0x422	; 0x422 <_ZN10helicopter5model11SystemModel11YawIntegralEf>
		model->YawProportional(yawProportional);
    1ae2:	89 8d       	ldd	r24, Y+25	; 0x19
    1ae4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1ae6:	fc 01       	movw	r30, r24
    1ae8:	20 81       	ld	r18, Z
    1aea:	31 81       	ldd	r19, Z+1	; 0x01
    1aec:	89 81       	ldd	r24, Y+1	; 0x01
    1aee:	9a 81       	ldd	r25, Y+2	; 0x02
    1af0:	ab 81       	ldd	r26, Y+3	; 0x03
    1af2:	bc 81       	ldd	r27, Y+4	; 0x04
    1af4:	ac 01       	movw	r20, r24
    1af6:	bd 01       	movw	r22, r26
    1af8:	c9 01       	movw	r24, r18
    1afa:	0e 94 31 02 	call	0x462	; 0x462 <_ZN10helicopter5model11SystemModel15YawProportionalEf>
		model->YawDerivativeError(yawDerivativeError);
    1afe:	89 8d       	ldd	r24, Y+25	; 0x19
    1b00:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1b02:	fc 01       	movw	r30, r24
    1b04:	20 81       	ld	r18, Z
    1b06:	31 81       	ldd	r19, Z+1	; 0x01
    1b08:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b0a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b0c:	af 85       	ldd	r26, Y+15	; 0x0f
    1b0e:	b8 89       	ldd	r27, Y+16	; 0x10
    1b10:	ac 01       	movw	r20, r24
    1b12:	bd 01       	movw	r22, r26
    1b14:	c9 01       	movw	r24, r18
    1b16:	0e 94 51 02 	call	0x4a2	; 0x4a2 <_ZN10helicopter5model11SystemModel18YawDerivativeErrorEf>
	}
}
    1b1a:	6a 96       	adiw	r28, 0x1a	; 26
    1b1c:	0f b6       	in	r0, 0x3f	; 63
    1b1e:	f8 94       	cli
    1b20:	de bf       	out	0x3e, r29	; 62
    1b22:	0f be       	out	0x3f, r0	; 63
    1b24:	cd bf       	out	0x3d, r28	; 61
    1b26:	df 91       	pop	r29
    1b28:	cf 91       	pop	r28
    1b2a:	1f 91       	pop	r17
    1b2c:	0f 91       	pop	r16
    1b2e:	ff 90       	pop	r15
    1b30:	ef 90       	pop	r14
    1b32:	df 90       	pop	r13
    1b34:	cf 90       	pop	r12
    1b36:	bf 90       	pop	r11
    1b38:	af 90       	pop	r10
    1b3a:	9f 90       	pop	r9
    1b3c:	8f 90       	pop	r8
    1b3e:	7f 90       	pop	r7
    1b40:	08 95       	ret

00001b42 <_ZN10helicopter10controller13PIDController34mainRotorCollectiveOuterLoopUpdateEv>:

void PIDController::mainRotorCollectiveOuterLoopUpdate()
{
    1b42:	7f 92       	push	r7
    1b44:	8f 92       	push	r8
    1b46:	9f 92       	push	r9
    1b48:	af 92       	push	r10
    1b4a:	bf 92       	push	r11
    1b4c:	cf 92       	push	r12
    1b4e:	df 92       	push	r13
    1b50:	ef 92       	push	r14
    1b52:	ff 92       	push	r15
    1b54:	0f 93       	push	r16
    1b56:	1f 93       	push	r17
    1b58:	cf 93       	push	r28
    1b5a:	df 93       	push	r29
    1b5c:	cd b7       	in	r28, 0x3d	; 61
    1b5e:	de b7       	in	r29, 0x3e	; 62
    1b60:	6a 97       	sbiw	r28, 0x1a	; 26
    1b62:	0f b6       	in	r0, 0x3f	; 63
    1b64:	f8 94       	cli
    1b66:	de bf       	out	0x3e, r29	; 62
    1b68:	0f be       	out	0x3f, r0	; 63
    1b6a:	cd bf       	out	0x3d, r28	; 61
    1b6c:	9a 8f       	std	Y+26, r25	; 0x1a
    1b6e:	89 8f       	std	Y+25, r24	; 0x19
	if (model->OperationalState() == SystemModel::AutoPilot)
    1b70:	89 8d       	ldd	r24, Y+25	; 0x19
    1b72:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1b74:	fc 01       	movw	r30, r24
    1b76:	80 81       	ld	r24, Z
    1b78:	91 81       	ldd	r25, Z+1	; 0x01
    1b7a:	0e 94 74 07 	call	0xee8	; 0xee8 <_ZNK10helicopter5model11SystemModel16OperationalStateEv>
    1b7e:	98 2f       	mov	r25, r24
    1b80:	81 e0       	ldi	r24, 0x01	; 1
    1b82:	91 30       	cpi	r25, 0x01	; 1
    1b84:	09 f0       	breq	.+2      	; 0x1b88 <_ZN10helicopter10controller13PIDController34mainRotorCollectiveOuterLoopUpdateEv+0x46>
    1b86:	80 e0       	ldi	r24, 0x00	; 0
    1b88:	88 23       	and	r24, r24
    1b8a:	09 f4       	brne	.+2      	; 0x1b8e <_ZN10helicopter10controller13PIDController34mainRotorCollectiveOuterLoopUpdateEv+0x4c>
    1b8c:	40 c1       	rjmp	.+640    	; 0x1e0e <_ZN10helicopter10controller13PIDController34mainRotorCollectiveOuterLoopUpdateEv+0x2cc>
	{
		float zProportional = calculateProportional(model->ZNEDBodyFrame(), model->ReferenceZNEDBodyFrameFeet());
    1b8e:	89 8d       	ldd	r24, Y+25	; 0x19
    1b90:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1b92:	fc 01       	movw	r30, r24
    1b94:	80 81       	ld	r24, Z
    1b96:	91 81       	ldd	r25, Z+1	; 0x01
    1b98:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <_ZNK10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEv>
    1b9c:	6b 01       	movw	r12, r22
    1b9e:	7c 01       	movw	r14, r24
    1ba0:	89 8d       	ldd	r24, Y+25	; 0x19
    1ba2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1ba4:	fc 01       	movw	r30, r24
    1ba6:	80 81       	ld	r24, Z
    1ba8:	91 81       	ldd	r25, Z+1	; 0x01
    1baa:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <_ZNK10helicopter5model11SystemModel13ZNEDBodyFrameEv>
    1bae:	dc 01       	movw	r26, r24
    1bb0:	cb 01       	movw	r24, r22
    1bb2:	e9 8d       	ldd	r30, Y+25	; 0x19
    1bb4:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1bb6:	97 01       	movw	r18, r14
    1bb8:	86 01       	movw	r16, r12
    1bba:	ac 01       	movw	r20, r24
    1bbc:	bd 01       	movw	r22, r26
    1bbe:	cf 01       	movw	r24, r30
    1bc0:	0e 94 86 08 	call	0x110c	; 0x110c <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    1bc4:	dc 01       	movw	r26, r24
    1bc6:	cb 01       	movw	r24, r22
    1bc8:	89 83       	std	Y+1, r24	; 0x01
    1bca:	9a 83       	std	Y+2, r25	; 0x02
    1bcc:	ab 83       	std	Y+3, r26	; 0x03
    1bce:	bc 83       	std	Y+4, r27	; 0x04
	
		float zIntegralAntiWindup = calculateIntegralAntiWindup(model->MainRotorControlBeforeServoLimitsAdjustment(), model->MainRotorCollectiveControl(), zAntiWindupGain);
    1bd0:	89 8d       	ldd	r24, Y+25	; 0x19
    1bd2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1bd4:	82 5b       	subi	r24, 0xB2	; 178
    1bd6:	9f 4f       	sbci	r25, 0xFF	; 255
    1bd8:	fc 01       	movw	r30, r24
    1bda:	c0 80       	ld	r12, Z
    1bdc:	d1 80       	ldd	r13, Z+1	; 0x01
    1bde:	e2 80       	ldd	r14, Z+2	; 0x02
    1be0:	f3 80       	ldd	r15, Z+3	; 0x03
    1be2:	89 8d       	ldd	r24, Y+25	; 0x19
    1be4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1be6:	fc 01       	movw	r30, r24
    1be8:	80 81       	ld	r24, Z
    1bea:	91 81       	ldd	r25, Z+1	; 0x01
    1bec:	0e 94 12 06 	call	0xc24	; 0xc24 <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>
    1bf0:	4b 01       	movw	r8, r22
    1bf2:	5c 01       	movw	r10, r24
    1bf4:	89 8d       	ldd	r24, Y+25	; 0x19
    1bf6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1bf8:	fc 01       	movw	r30, r24
    1bfa:	80 81       	ld	r24, Z
    1bfc:	91 81       	ldd	r25, Z+1	; 0x01
    1bfe:	0e 94 4d 06 	call	0xc9a	; 0xc9a <_ZNK10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEv>
    1c02:	dc 01       	movw	r26, r24
    1c04:	cb 01       	movw	r24, r22
    1c06:	e9 8d       	ldd	r30, Y+25	; 0x19
    1c08:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1c0a:	95 01       	movw	r18, r10
    1c0c:	84 01       	movw	r16, r8
    1c0e:	ac 01       	movw	r20, r24
    1c10:	bd 01       	movw	r22, r26
    1c12:	cf 01       	movw	r24, r30
    1c14:	0e 94 b5 08 	call	0x116a	; 0x116a <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    1c18:	dc 01       	movw	r26, r24
    1c1a:	cb 01       	movw	r24, r22
    1c1c:	8d 83       	std	Y+5, r24	; 0x05
    1c1e:	9e 83       	std	Y+6, r25	; 0x06
    1c20:	af 83       	std	Y+7, r26	; 0x07
    1c22:	b8 87       	std	Y+8, r27	; 0x08
		float weightedZIntegral = calculateIntegral(zProportional, model->ZIntegral(), zIntegralAntiWindup, zIntegralGain);
    1c24:	89 8d       	ldd	r24, Y+25	; 0x19
    1c26:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c28:	8e 5b       	subi	r24, 0xBE	; 190
    1c2a:	9f 4f       	sbci	r25, 0xFF	; 255
    1c2c:	fc 01       	movw	r30, r24
    1c2e:	a0 80       	ld	r10, Z
    1c30:	b1 80       	ldd	r11, Z+1	; 0x01
    1c32:	c2 80       	ldd	r12, Z+2	; 0x02
    1c34:	d3 80       	ldd	r13, Z+3	; 0x03
    1c36:	89 8d       	ldd	r24, Y+25	; 0x19
    1c38:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c3a:	fc 01       	movw	r30, r24
    1c3c:	80 81       	ld	r24, Z
    1c3e:	91 81       	ldd	r25, Z+1	; 0x01
    1c40:	0e 94 b8 06 	call	0xd70	; 0xd70 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>
    1c44:	9b 01       	movw	r18, r22
    1c46:	ac 01       	movw	r20, r24
    1c48:	ed 80       	ldd	r14, Y+5	; 0x05
    1c4a:	fe 80       	ldd	r15, Y+6	; 0x06
    1c4c:	0f 81       	ldd	r16, Y+7	; 0x07
    1c4e:	18 85       	ldd	r17, Y+8	; 0x08
    1c50:	89 81       	ldd	r24, Y+1	; 0x01
    1c52:	9a 81       	ldd	r25, Y+2	; 0x02
    1c54:	ab 81       	ldd	r26, Y+3	; 0x03
    1c56:	bc 81       	ldd	r27, Y+4	; 0x04
    1c58:	e9 8d       	ldd	r30, Y+25	; 0x19
    1c5a:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1c5c:	45 01       	movw	r8, r10
    1c5e:	56 01       	movw	r10, r12
    1c60:	67 01       	movw	r12, r14
    1c62:	78 01       	movw	r14, r16
    1c64:	89 01       	movw	r16, r18
    1c66:	9a 01       	movw	r18, r20
    1c68:	ac 01       	movw	r20, r24
    1c6a:	bd 01       	movw	r22, r26
    1c6c:	cf 01       	movw	r24, r30
    1c6e:	0e 94 06 09 	call	0x120c	; 0x120c <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    1c72:	dc 01       	movw	r26, r24
    1c74:	cb 01       	movw	r24, r22
    1c76:	89 87       	std	Y+9, r24	; 0x09
    1c78:	9a 87       	std	Y+10, r25	; 0x0a
    1c7a:	ab 87       	std	Y+11, r26	; 0x0b
    1c7c:	bc 87       	std	Y+12, r27	; 0x0c
		float zDerivativeError = calculateVelocityError(model->ZVelocityFeetPerSecond(), model->ReferenceZVelocityFeetPerSecond());
    1c7e:	89 8d       	ldd	r24, Y+25	; 0x19
    1c80:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c82:	fc 01       	movw	r30, r24
    1c84:	80 81       	ld	r24, Z
    1c86:	91 81       	ldd	r25, Z+1	; 0x01
    1c88:	0e 94 a0 06 	call	0xd40	; 0xd40 <_ZNK10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEv>
    1c8c:	6b 01       	movw	r12, r22
    1c8e:	7c 01       	movw	r14, r24
    1c90:	89 8d       	ldd	r24, Y+25	; 0x19
    1c92:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1c94:	fc 01       	movw	r30, r24
    1c96:	80 81       	ld	r24, Z
    1c98:	91 81       	ldd	r25, Z+1	; 0x01
    1c9a:	0e 94 88 06 	call	0xd10	; 0xd10 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>
    1c9e:	dc 01       	movw	r26, r24
    1ca0:	cb 01       	movw	r24, r22
    1ca2:	e9 8d       	ldd	r30, Y+25	; 0x19
    1ca4:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1ca6:	97 01       	movw	r18, r14
    1ca8:	86 01       	movw	r16, r12
    1caa:	ac 01       	movw	r20, r24
    1cac:	bd 01       	movw	r22, r26
    1cae:	cf 01       	movw	r24, r30
    1cb0:	0e 94 d8 09 	call	0x13b0	; 0x13b0 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    1cb4:	dc 01       	movw	r26, r24
    1cb6:	cb 01       	movw	r24, r22
    1cb8:	8d 87       	std	Y+13, r24	; 0x0d
    1cba:	9e 87       	std	Y+14, r25	; 0x0e
    1cbc:	af 87       	std	Y+15, r26	; 0x0f
    1cbe:	b8 8b       	std	Y+16, r27	; 0x10
		float mainRotorControlBeforeServoLimitsAdjustment = calculateOuterLoopControlValue(zProportional, zDerivativeError, weightedZIntegral, zProportionalGain, zDerivativeGain, 1);
    1cc0:	89 8d       	ldd	r24, Y+25	; 0x19
    1cc2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1cc4:	8a 5b       	subi	r24, 0xBA	; 186
    1cc6:	9f 4f       	sbci	r25, 0xFF	; 255
    1cc8:	fc 01       	movw	r30, r24
    1cca:	80 81       	ld	r24, Z
    1ccc:	91 81       	ldd	r25, Z+1	; 0x01
    1cce:	a2 81       	ldd	r26, Z+2	; 0x02
    1cd0:	b3 81       	ldd	r27, Z+3	; 0x03
    1cd2:	29 8d       	ldd	r18, Y+25	; 0x19
    1cd4:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1cd6:	26 5b       	subi	r18, 0xB6	; 182
    1cd8:	3f 4f       	sbci	r19, 0xFF	; 255
    1cda:	f9 01       	movw	r30, r18
    1cdc:	80 80       	ld	r8, Z
    1cde:	91 80       	ldd	r9, Z+1	; 0x01
    1ce0:	a2 80       	ldd	r10, Z+2	; 0x02
    1ce2:	b3 80       	ldd	r11, Z+3	; 0x03
    1ce4:	c9 84       	ldd	r12, Y+9	; 0x09
    1ce6:	da 84       	ldd	r13, Y+10	; 0x0a
    1ce8:	eb 84       	ldd	r14, Y+11	; 0x0b
    1cea:	fc 84       	ldd	r15, Y+12	; 0x0c
    1cec:	0d 85       	ldd	r16, Y+13	; 0x0d
    1cee:	1e 85       	ldd	r17, Y+14	; 0x0e
    1cf0:	2f 85       	ldd	r18, Y+15	; 0x0f
    1cf2:	38 89       	ldd	r19, Y+16	; 0x10
    1cf4:	49 81       	ldd	r20, Y+1	; 0x01
    1cf6:	5a 81       	ldd	r21, Y+2	; 0x02
    1cf8:	6b 81       	ldd	r22, Y+3	; 0x03
    1cfa:	7c 81       	ldd	r23, Y+4	; 0x04
    1cfc:	e9 8d       	ldd	r30, Y+25	; 0x19
    1cfe:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1d00:	1f 92       	push	r1
    1d02:	77 24       	eor	r7, r7
    1d04:	73 94       	inc	r7
    1d06:	7f 92       	push	r7
    1d08:	7b 2e       	mov	r7, r27
    1d0a:	7f 92       	push	r7
    1d0c:	7a 2e       	mov	r7, r26
    1d0e:	7f 92       	push	r7
    1d10:	79 2e       	mov	r7, r25
    1d12:	7f 92       	push	r7
    1d14:	8f 93       	push	r24
    1d16:	cf 01       	movw	r24, r30
    1d18:	0e 94 07 0a 	call	0x140e	; 0x140e <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffffi>
    1d1c:	0f 90       	pop	r0
    1d1e:	0f 90       	pop	r0
    1d20:	0f 90       	pop	r0
    1d22:	0f 90       	pop	r0
    1d24:	0f 90       	pop	r0
    1d26:	0f 90       	pop	r0
    1d28:	dc 01       	movw	r26, r24
    1d2a:	cb 01       	movw	r24, r22
    1d2c:	89 8b       	std	Y+17, r24	; 0x11
    1d2e:	9a 8b       	std	Y+18, r25	; 0x12
    1d30:	ab 8b       	std	Y+19, r26	; 0x13
    1d32:	bc 8b       	std	Y+20, r27	; 0x14
		float mainRotorControl = adjustControlForServoLimits(mainRotorControlBeforeServoLimitsAdjustment, minMainRotorServoControlValue, maxMainRotorServoControlValue);
    1d34:	89 8d       	ldd	r24, Y+25	; 0x19
    1d36:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1d38:	82 59       	subi	r24, 0x92	; 146
    1d3a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d3c:	fc 01       	movw	r30, r24
    1d3e:	e0 80       	ld	r14, Z
    1d40:	f1 80       	ldd	r15, Z+1	; 0x01
    1d42:	02 81       	ldd	r16, Z+2	; 0x02
    1d44:	13 81       	ldd	r17, Z+3	; 0x03
    1d46:	89 8d       	ldd	r24, Y+25	; 0x19
    1d48:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1d4a:	86 59       	subi	r24, 0x96	; 150
    1d4c:	9f 4f       	sbci	r25, 0xFF	; 255
    1d4e:	fc 01       	movw	r30, r24
    1d50:	20 81       	ld	r18, Z
    1d52:	31 81       	ldd	r19, Z+1	; 0x01
    1d54:	42 81       	ldd	r20, Z+2	; 0x02
    1d56:	53 81       	ldd	r21, Z+3	; 0x03
    1d58:	89 89       	ldd	r24, Y+17	; 0x11
    1d5a:	9a 89       	ldd	r25, Y+18	; 0x12
    1d5c:	ab 89       	ldd	r26, Y+19	; 0x13
    1d5e:	bc 89       	ldd	r27, Y+20	; 0x14
    1d60:	e9 8d       	ldd	r30, Y+25	; 0x19
    1d62:	fa 8d       	ldd	r31, Y+26	; 0x1a
    1d64:	67 01       	movw	r12, r14
    1d66:	78 01       	movw	r14, r16
    1d68:	89 01       	movw	r16, r18
    1d6a:	9a 01       	movw	r18, r20
    1d6c:	ac 01       	movw	r20, r24
    1d6e:	bd 01       	movw	r22, r26
    1d70:	cf 01       	movw	r24, r30
    1d72:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    1d76:	dc 01       	movw	r26, r24
    1d78:	cb 01       	movw	r24, r22
    1d7a:	8d 8b       	std	Y+21, r24	; 0x15
    1d7c:	9e 8b       	std	Y+22, r25	; 0x16
    1d7e:	af 8b       	std	Y+23, r26	; 0x17
    1d80:	b8 8f       	std	Y+24, r27	; 0x18
	
		model->MainRotorCollectiveControl(mainRotorControl);
    1d82:	89 8d       	ldd	r24, Y+25	; 0x19
    1d84:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1d86:	fc 01       	movw	r30, r24
    1d88:	20 81       	ld	r18, Z
    1d8a:	31 81       	ldd	r19, Z+1	; 0x01
    1d8c:	8d 89       	ldd	r24, Y+21	; 0x15
    1d8e:	9e 89       	ldd	r25, Y+22	; 0x16
    1d90:	af 89       	ldd	r26, Y+23	; 0x17
    1d92:	b8 8d       	ldd	r27, Y+24	; 0x18
    1d94:	ac 01       	movw	r20, r24
    1d96:	bd 01       	movw	r22, r26
    1d98:	c9 01       	movw	r24, r18
    1d9a:	0e 94 2a 06 	call	0xc54	; 0xc54 <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf>
		model->MainRotorControlBeforeServoLimitsAdjustment(mainRotorControlBeforeServoLimitsAdjustment);
    1d9e:	89 8d       	ldd	r24, Y+25	; 0x19
    1da0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1da2:	fc 01       	movw	r30, r24
    1da4:	20 81       	ld	r18, Z
    1da6:	31 81       	ldd	r19, Z+1	; 0x01
    1da8:	89 89       	ldd	r24, Y+17	; 0x11
    1daa:	9a 89       	ldd	r25, Y+18	; 0x12
    1dac:	ab 89       	ldd	r26, Y+19	; 0x13
    1dae:	bc 89       	ldd	r27, Y+20	; 0x14
    1db0:	ac 01       	movw	r20, r24
    1db2:	bd 01       	movw	r22, r26
    1db4:	c9 01       	movw	r24, r18
    1db6:	0e 94 65 06 	call	0xcca	; 0xcca <_ZN10helicopter5model11SystemModel43MainRotorControlBeforeServoLimitsAdjustmentEf>
		model->ZIntegral(weightedZIntegral);
    1dba:	89 8d       	ldd	r24, Y+25	; 0x19
    1dbc:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1dbe:	fc 01       	movw	r30, r24
    1dc0:	20 81       	ld	r18, Z
    1dc2:	31 81       	ldd	r19, Z+1	; 0x01
    1dc4:	89 85       	ldd	r24, Y+9	; 0x09
    1dc6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dc8:	ab 85       	ldd	r26, Y+11	; 0x0b
    1dca:	bc 85       	ldd	r27, Y+12	; 0x0c
    1dcc:	ac 01       	movw	r20, r24
    1dce:	bd 01       	movw	r22, r26
    1dd0:	c9 01       	movw	r24, r18
    1dd2:	0e 94 d0 06 	call	0xda0	; 0xda0 <_ZN10helicopter5model11SystemModel9ZIntegralEf>
		model->ZProportional(zProportional);
    1dd6:	89 8d       	ldd	r24, Y+25	; 0x19
    1dd8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1dda:	fc 01       	movw	r30, r24
    1ddc:	20 81       	ld	r18, Z
    1dde:	31 81       	ldd	r19, Z+1	; 0x01
    1de0:	89 81       	ldd	r24, Y+1	; 0x01
    1de2:	9a 81       	ldd	r25, Y+2	; 0x02
    1de4:	ab 81       	ldd	r26, Y+3	; 0x03
    1de6:	bc 81       	ldd	r27, Y+4	; 0x04
    1de8:	ac 01       	movw	r20, r24
    1dea:	bd 01       	movw	r22, r26
    1dec:	c9 01       	movw	r24, r18
    1dee:	0e 94 f3 06 	call	0xde6	; 0xde6 <_ZN10helicopter5model11SystemModel13ZProportionalEf>
		model->ZDerivativeError(zDerivativeError);
    1df2:	89 8d       	ldd	r24, Y+25	; 0x19
    1df4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1df6:	fc 01       	movw	r30, r24
    1df8:	20 81       	ld	r18, Z
    1dfa:	31 81       	ldd	r19, Z+1	; 0x01
    1dfc:	8d 85       	ldd	r24, Y+13	; 0x0d
    1dfe:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e00:	af 85       	ldd	r26, Y+15	; 0x0f
    1e02:	b8 89       	ldd	r27, Y+16	; 0x10
    1e04:	ac 01       	movw	r20, r24
    1e06:	bd 01       	movw	r22, r26
    1e08:	c9 01       	movw	r24, r18
    1e0a:	0e 94 16 07 	call	0xe2c	; 0xe2c <_ZN10helicopter5model11SystemModel16ZDerivativeErrorEf>
	}
}
    1e0e:	6a 96       	adiw	r28, 0x1a	; 26
    1e10:	0f b6       	in	r0, 0x3f	; 63
    1e12:	f8 94       	cli
    1e14:	de bf       	out	0x3e, r29	; 62
    1e16:	0f be       	out	0x3f, r0	; 63
    1e18:	cd bf       	out	0x3d, r28	; 61
    1e1a:	df 91       	pop	r29
    1e1c:	cf 91       	pop	r28
    1e1e:	1f 91       	pop	r17
    1e20:	0f 91       	pop	r16
    1e22:	ff 90       	pop	r15
    1e24:	ef 90       	pop	r14
    1e26:	df 90       	pop	r13
    1e28:	cf 90       	pop	r12
    1e2a:	bf 90       	pop	r11
    1e2c:	af 90       	pop	r10
    1e2e:	9f 90       	pop	r9
    1e30:	8f 90       	pop	r8
    1e32:	7f 90       	pop	r7
    1e34:	08 95       	ret

00001e36 <_ZN10helicopter10controller13PIDController30cyclicLongitudeOuterLoopUpdateEv>:

void PIDController::cyclicLongitudeOuterLoopUpdate()
{
    1e36:	7f 92       	push	r7
    1e38:	8f 92       	push	r8
    1e3a:	9f 92       	push	r9
    1e3c:	af 92       	push	r10
    1e3e:	bf 92       	push	r11
    1e40:	cf 92       	push	r12
    1e42:	df 92       	push	r13
    1e44:	ef 92       	push	r14
    1e46:	ff 92       	push	r15
    1e48:	0f 93       	push	r16
    1e4a:	1f 93       	push	r17
    1e4c:	cf 93       	push	r28
    1e4e:	df 93       	push	r29
    1e50:	cd b7       	in	r28, 0x3d	; 61
    1e52:	de b7       	in	r29, 0x3e	; 62
    1e54:	66 97       	sbiw	r28, 0x16	; 22
    1e56:	0f b6       	in	r0, 0x3f	; 63
    1e58:	f8 94       	cli
    1e5a:	de bf       	out	0x3e, r29	; 62
    1e5c:	0f be       	out	0x3f, r0	; 63
    1e5e:	cd bf       	out	0x3d, r28	; 61
    1e60:	9e 8b       	std	Y+22, r25	; 0x16
    1e62:	8d 8b       	std	Y+21, r24	; 0x15
	if (model->OperationalState() == SystemModel::AutoPilot)
    1e64:	8d 89       	ldd	r24, Y+21	; 0x15
    1e66:	9e 89       	ldd	r25, Y+22	; 0x16
    1e68:	fc 01       	movw	r30, r24
    1e6a:	80 81       	ld	r24, Z
    1e6c:	91 81       	ldd	r25, Z+1	; 0x01
    1e6e:	0e 94 74 07 	call	0xee8	; 0xee8 <_ZNK10helicopter5model11SystemModel16OperationalStateEv>
    1e72:	98 2f       	mov	r25, r24
    1e74:	81 e0       	ldi	r24, 0x01	; 1
    1e76:	91 30       	cpi	r25, 0x01	; 1
    1e78:	09 f0       	breq	.+2      	; 0x1e7c <_ZN10helicopter10controller13PIDController30cyclicLongitudeOuterLoopUpdateEv+0x46>
    1e7a:	80 e0       	ldi	r24, 0x00	; 0
    1e7c:	88 23       	and	r24, r24
    1e7e:	09 f4       	brne	.+2      	; 0x1e82 <_ZN10helicopter10controller13PIDController30cyclicLongitudeOuterLoopUpdateEv+0x4c>
    1e80:	2a c1       	rjmp	.+596    	; 0x20d6 <_ZN10helicopter10controller13PIDController30cyclicLongitudeOuterLoopUpdateEv+0x2a0>
	{
		float xProportional = calculateProportional(model->XNEDBodyFrame(), model->ReferenceXNEDBodyFrame());
    1e82:	8d 89       	ldd	r24, Y+21	; 0x15
    1e84:	9e 89       	ldd	r25, Y+22	; 0x16
    1e86:	fc 01       	movw	r30, r24
    1e88:	80 81       	ld	r24, Z
    1e8a:	91 81       	ldd	r25, Z+1	; 0x01
    1e8c:	0e 94 87 02 	call	0x50e	; 0x50e <_ZNK10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEv>
    1e90:	6b 01       	movw	r12, r22
    1e92:	7c 01       	movw	r14, r24
    1e94:	8d 89       	ldd	r24, Y+21	; 0x15
    1e96:	9e 89       	ldd	r25, Y+22	; 0x16
    1e98:	fc 01       	movw	r30, r24
    1e9a:	80 81       	ld	r24, Z
    1e9c:	91 81       	ldd	r25, Z+1	; 0x01
    1e9e:	0e 94 71 02 	call	0x4e2	; 0x4e2 <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>
    1ea2:	dc 01       	movw	r26, r24
    1ea4:	cb 01       	movw	r24, r22
    1ea6:	ed 89       	ldd	r30, Y+21	; 0x15
    1ea8:	fe 89       	ldd	r31, Y+22	; 0x16
    1eaa:	97 01       	movw	r18, r14
    1eac:	86 01       	movw	r16, r12
    1eae:	ac 01       	movw	r20, r24
    1eb0:	bd 01       	movw	r22, r26
    1eb2:	cf 01       	movw	r24, r30
    1eb4:	0e 94 86 08 	call	0x110c	; 0x110c <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    1eb8:	dc 01       	movw	r26, r24
    1eba:	cb 01       	movw	r24, r22
    1ebc:	89 83       	std	Y+1, r24	; 0x01
    1ebe:	9a 83       	std	Y+2, r25	; 0x02
    1ec0:	ab 83       	std	Y+3, r26	; 0x03
    1ec2:	bc 83       	std	Y+4, r27	; 0x04
		float xIntegralAntiWindup = calculateIntegralAntiWindup(model->LongitudeControlBeforeServoLimitsAdjustment(), model->LongitudeControl(), xAntiWindupGain);
    1ec4:	8d 89       	ldd	r24, Y+21	; 0x15
    1ec6:	9e 89       	ldd	r25, Y+22	; 0x16
    1ec8:	fc 01       	movw	r30, r24
    1eca:	c6 8c       	ldd	r12, Z+30	; 0x1e
    1ecc:	d7 8c       	ldd	r13, Z+31	; 0x1f
    1ece:	e0 a0       	ldd	r14, Z+32	; 0x20
    1ed0:	f1 a0       	ldd	r15, Z+33	; 0x21
    1ed2:	8d 89       	ldd	r24, Y+21	; 0x15
    1ed4:	9e 89       	ldd	r25, Y+22	; 0x16
    1ed6:	fc 01       	movw	r30, r24
    1ed8:	80 81       	ld	r24, Z
    1eda:	91 81       	ldd	r25, Z+1	; 0x01
    1edc:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>
    1ee0:	4b 01       	movw	r8, r22
    1ee2:	5c 01       	movw	r10, r24
    1ee4:	8d 89       	ldd	r24, Y+21	; 0x15
    1ee6:	9e 89       	ldd	r25, Y+22	; 0x16
    1ee8:	fc 01       	movw	r30, r24
    1eea:	80 81       	ld	r24, Z
    1eec:	91 81       	ldd	r25, Z+1	; 0x01
    1eee:	0e 94 9d 02 	call	0x53a	; 0x53a <_ZNK10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEv>
    1ef2:	dc 01       	movw	r26, r24
    1ef4:	cb 01       	movw	r24, r22
    1ef6:	ed 89       	ldd	r30, Y+21	; 0x15
    1ef8:	fe 89       	ldd	r31, Y+22	; 0x16
    1efa:	95 01       	movw	r18, r10
    1efc:	84 01       	movw	r16, r8
    1efe:	ac 01       	movw	r20, r24
    1f00:	bd 01       	movw	r22, r26
    1f02:	cf 01       	movw	r24, r30
    1f04:	0e 94 b5 08 	call	0x116a	; 0x116a <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    1f08:	dc 01       	movw	r26, r24
    1f0a:	cb 01       	movw	r24, r22
    1f0c:	8d 83       	std	Y+5, r24	; 0x05
    1f0e:	9e 83       	std	Y+6, r25	; 0x06
    1f10:	af 83       	std	Y+7, r26	; 0x07
    1f12:	b8 87       	std	Y+8, r27	; 0x08
		float weightedXIntegral = calculateIntegral(xProportional, model->XIntegral(), xIntegralAntiWindup, xIntegralGain);
    1f14:	8d 89       	ldd	r24, Y+21	; 0x15
    1f16:	9e 89       	ldd	r25, Y+22	; 0x16
    1f18:	fc 01       	movw	r30, r24
    1f1a:	a2 88       	ldd	r10, Z+18	; 0x12
    1f1c:	b3 88       	ldd	r11, Z+19	; 0x13
    1f1e:	c4 88       	ldd	r12, Z+20	; 0x14
    1f20:	d5 88       	ldd	r13, Z+21	; 0x15
    1f22:	8d 89       	ldd	r24, Y+21	; 0x15
    1f24:	9e 89       	ldd	r25, Y+22	; 0x16
    1f26:	fc 01       	movw	r30, r24
    1f28:	80 81       	ld	r24, Z
    1f2a:	91 81       	ldd	r25, Z+1	; 0x01
    1f2c:	0e 94 92 03 	call	0x724	; 0x724 <_ZNK10helicopter5model11SystemModel9XIntegralEv>
    1f30:	9b 01       	movw	r18, r22
    1f32:	ac 01       	movw	r20, r24
    1f34:	ed 80       	ldd	r14, Y+5	; 0x05
    1f36:	fe 80       	ldd	r15, Y+6	; 0x06
    1f38:	0f 81       	ldd	r16, Y+7	; 0x07
    1f3a:	18 85       	ldd	r17, Y+8	; 0x08
    1f3c:	89 81       	ldd	r24, Y+1	; 0x01
    1f3e:	9a 81       	ldd	r25, Y+2	; 0x02
    1f40:	ab 81       	ldd	r26, Y+3	; 0x03
    1f42:	bc 81       	ldd	r27, Y+4	; 0x04
    1f44:	ed 89       	ldd	r30, Y+21	; 0x15
    1f46:	fe 89       	ldd	r31, Y+22	; 0x16
    1f48:	45 01       	movw	r8, r10
    1f4a:	56 01       	movw	r10, r12
    1f4c:	67 01       	movw	r12, r14
    1f4e:	78 01       	movw	r14, r16
    1f50:	89 01       	movw	r16, r18
    1f52:	9a 01       	movw	r18, r20
    1f54:	ac 01       	movw	r20, r24
    1f56:	bd 01       	movw	r22, r26
    1f58:	cf 01       	movw	r24, r30
    1f5a:	0e 94 06 09 	call	0x120c	; 0x120c <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    1f5e:	dc 01       	movw	r26, r24
    1f60:	cb 01       	movw	r24, r22
    1f62:	89 87       	std	Y+9, r24	; 0x09
    1f64:	9a 87       	std	Y+10, r25	; 0x0a
    1f66:	ab 87       	std	Y+11, r26	; 0x0b
    1f68:	bc 87       	std	Y+12, r27	; 0x0c
		float xDerivativeError = calculateVelocityError(model->XVelocityMetersPerSecond(), model->ReferenceXVelocityMetersPerSecond());
    1f6a:	8d 89       	ldd	r24, Y+21	; 0x15
    1f6c:	9e 89       	ldd	r25, Y+22	; 0x16
    1f6e:	fc 01       	movw	r30, r24
    1f70:	80 81       	ld	r24, Z
    1f72:	91 81       	ldd	r25, Z+1	; 0x01
    1f74:	0e 94 1f 03 	call	0x63e	; 0x63e <_ZNK10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEv>
    1f78:	6b 01       	movw	r12, r22
    1f7a:	7c 01       	movw	r14, r24
    1f7c:	8d 89       	ldd	r24, Y+21	; 0x15
    1f7e:	9e 89       	ldd	r25, Y+22	; 0x16
    1f80:	fc 01       	movw	r30, r24
    1f82:	80 81       	ld	r24, Z
    1f84:	91 81       	ldd	r25, Z+1	; 0x01
    1f86:	0e 94 09 03 	call	0x612	; 0x612 <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>
    1f8a:	dc 01       	movw	r26, r24
    1f8c:	cb 01       	movw	r24, r22
    1f8e:	ed 89       	ldd	r30, Y+21	; 0x15
    1f90:	fe 89       	ldd	r31, Y+22	; 0x16
    1f92:	97 01       	movw	r18, r14
    1f94:	86 01       	movw	r16, r12
    1f96:	ac 01       	movw	r20, r24
    1f98:	bd 01       	movw	r22, r26
    1f9a:	cf 01       	movw	r24, r30
    1f9c:	0e 94 d8 09 	call	0x13b0	; 0x13b0 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    1fa0:	dc 01       	movw	r26, r24
    1fa2:	cb 01       	movw	r24, r22
    1fa4:	8d 87       	std	Y+13, r24	; 0x0d
    1fa6:	9e 87       	std	Y+14, r25	; 0x0e
    1fa8:	af 87       	std	Y+15, r26	; 0x0f
    1faa:	b8 8b       	std	Y+16, r27	; 0x10
		float xLongitudinalOuterLoopSetpoint = calculateOuterLoopControlValue(xProportional, xDerivativeError, weightedXIntegral, xProportionalGain, xDerivativeGain, 1);
    1fac:	8d 89       	ldd	r24, Y+21	; 0x15
    1fae:	9e 89       	ldd	r25, Y+22	; 0x16
    1fb0:	fc 01       	movw	r30, r24
    1fb2:	86 89       	ldd	r24, Z+22	; 0x16
    1fb4:	97 89       	ldd	r25, Z+23	; 0x17
    1fb6:	a0 8d       	ldd	r26, Z+24	; 0x18
    1fb8:	b1 8d       	ldd	r27, Z+25	; 0x19
    1fba:	2d 89       	ldd	r18, Y+21	; 0x15
    1fbc:	3e 89       	ldd	r19, Y+22	; 0x16
    1fbe:	f9 01       	movw	r30, r18
    1fc0:	82 8c       	ldd	r8, Z+26	; 0x1a
    1fc2:	93 8c       	ldd	r9, Z+27	; 0x1b
    1fc4:	a4 8c       	ldd	r10, Z+28	; 0x1c
    1fc6:	b5 8c       	ldd	r11, Z+29	; 0x1d
    1fc8:	c9 84       	ldd	r12, Y+9	; 0x09
    1fca:	da 84       	ldd	r13, Y+10	; 0x0a
    1fcc:	eb 84       	ldd	r14, Y+11	; 0x0b
    1fce:	fc 84       	ldd	r15, Y+12	; 0x0c
    1fd0:	0d 85       	ldd	r16, Y+13	; 0x0d
    1fd2:	1e 85       	ldd	r17, Y+14	; 0x0e
    1fd4:	2f 85       	ldd	r18, Y+15	; 0x0f
    1fd6:	38 89       	ldd	r19, Y+16	; 0x10
    1fd8:	49 81       	ldd	r20, Y+1	; 0x01
    1fda:	5a 81       	ldd	r21, Y+2	; 0x02
    1fdc:	6b 81       	ldd	r22, Y+3	; 0x03
    1fde:	7c 81       	ldd	r23, Y+4	; 0x04
    1fe0:	ed 89       	ldd	r30, Y+21	; 0x15
    1fe2:	fe 89       	ldd	r31, Y+22	; 0x16
    1fe4:	1f 92       	push	r1
    1fe6:	77 24       	eor	r7, r7
    1fe8:	73 94       	inc	r7
    1fea:	7f 92       	push	r7
    1fec:	7b 2e       	mov	r7, r27
    1fee:	7f 92       	push	r7
    1ff0:	7a 2e       	mov	r7, r26
    1ff2:	7f 92       	push	r7
    1ff4:	79 2e       	mov	r7, r25
    1ff6:	7f 92       	push	r7
    1ff8:	8f 93       	push	r24
    1ffa:	cf 01       	movw	r24, r30
    1ffc:	0e 94 07 0a 	call	0x140e	; 0x140e <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffffi>
    2000:	0f 90       	pop	r0
    2002:	0f 90       	pop	r0
    2004:	0f 90       	pop	r0
    2006:	0f 90       	pop	r0
    2008:	0f 90       	pop	r0
    200a:	0f 90       	pop	r0
    200c:	dc 01       	movw	r26, r24
    200e:	cb 01       	movw	r24, r22
    2010:	89 8b       	std	Y+17, r24	; 0x11
    2012:	9a 8b       	std	Y+18, r25	; 0x12
    2014:	ab 8b       	std	Y+19, r26	; 0x13
    2016:	bc 8b       	std	Y+20, r27	; 0x14
	
		xLongitudinalOuterLoopSetpoint = adjustForSetpointLimits(xLongitudinalOuterLoopSetpoint, minPitchSetpointDegrees, maxPitchSetpointDegrees);
    2018:	8d 89       	ldd	r24, Y+21	; 0x15
    201a:	9e 89       	ldd	r25, Y+22	; 0x16
    201c:	8a 58       	subi	r24, 0x8A	; 138
    201e:	9f 4f       	sbci	r25, 0xFF	; 255
    2020:	fc 01       	movw	r30, r24
    2022:	e0 80       	ld	r14, Z
    2024:	f1 80       	ldd	r15, Z+1	; 0x01
    2026:	02 81       	ldd	r16, Z+2	; 0x02
    2028:	13 81       	ldd	r17, Z+3	; 0x03
    202a:	8d 89       	ldd	r24, Y+21	; 0x15
    202c:	9e 89       	ldd	r25, Y+22	; 0x16
    202e:	8e 58       	subi	r24, 0x8E	; 142
    2030:	9f 4f       	sbci	r25, 0xFF	; 255
    2032:	fc 01       	movw	r30, r24
    2034:	20 81       	ld	r18, Z
    2036:	31 81       	ldd	r19, Z+1	; 0x01
    2038:	42 81       	ldd	r20, Z+2	; 0x02
    203a:	53 81       	ldd	r21, Z+3	; 0x03
    203c:	89 89       	ldd	r24, Y+17	; 0x11
    203e:	9a 89       	ldd	r25, Y+18	; 0x12
    2040:	ab 89       	ldd	r26, Y+19	; 0x13
    2042:	bc 89       	ldd	r27, Y+20	; 0x14
    2044:	ed 89       	ldd	r30, Y+21	; 0x15
    2046:	fe 89       	ldd	r31, Y+22	; 0x16
    2048:	67 01       	movw	r12, r14
    204a:	78 01       	movw	r14, r16
    204c:	89 01       	movw	r16, r18
    204e:	9a 01       	movw	r18, r20
    2050:	ac 01       	movw	r20, r24
    2052:	bd 01       	movw	r22, r26
    2054:	cf 01       	movw	r24, r30
    2056:	0e 94 4b 0b 	call	0x1696	; 0x1696 <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff>
    205a:	dc 01       	movw	r26, r24
    205c:	cb 01       	movw	r24, r22
    205e:	89 8b       	std	Y+17, r24	; 0x11
    2060:	9a 8b       	std	Y+18, r25	; 0x12
    2062:	ab 8b       	std	Y+19, r26	; 0x13
    2064:	bc 8b       	std	Y+20, r27	; 0x14

		model->XLongitudeOuterLoopSetpoint(xLongitudinalOuterLoopSetpoint);
    2066:	8d 89       	ldd	r24, Y+21	; 0x15
    2068:	9e 89       	ldd	r25, Y+22	; 0x16
    206a:	fc 01       	movw	r30, r24
    206c:	20 81       	ld	r18, Z
    206e:	31 81       	ldd	r19, Z+1	; 0x01
    2070:	89 89       	ldd	r24, Y+17	; 0x11
    2072:	9a 89       	ldd	r25, Y+18	; 0x12
    2074:	ab 89       	ldd	r26, Y+19	; 0x13
    2076:	bc 89       	ldd	r27, Y+20	; 0x14
    2078:	ac 01       	movw	r20, r24
    207a:	bd 01       	movw	r22, r26
    207c:	c9 01       	movw	r24, r18
    207e:	0e 94 4c 03 	call	0x698	; 0x698 <_ZN10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEf>
		model->XIntegral(weightedXIntegral);
    2082:	8d 89       	ldd	r24, Y+21	; 0x15
    2084:	9e 89       	ldd	r25, Y+22	; 0x16
    2086:	fc 01       	movw	r30, r24
    2088:	20 81       	ld	r18, Z
    208a:	31 81       	ldd	r19, Z+1	; 0x01
    208c:	89 85       	ldd	r24, Y+9	; 0x09
    208e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2090:	ab 85       	ldd	r26, Y+11	; 0x0b
    2092:	bc 85       	ldd	r27, Y+12	; 0x0c
    2094:	ac 01       	movw	r20, r24
    2096:	bd 01       	movw	r22, r26
    2098:	c9 01       	movw	r24, r18
    209a:	0e 94 aa 03 	call	0x754	; 0x754 <_ZN10helicopter5model11SystemModel9XIntegralEf>
		model->XProportional(xProportional);
    209e:	8d 89       	ldd	r24, Y+21	; 0x15
    20a0:	9e 89       	ldd	r25, Y+22	; 0x16
    20a2:	fc 01       	movw	r30, r24
    20a4:	20 81       	ld	r18, Z
    20a6:	31 81       	ldd	r19, Z+1	; 0x01
    20a8:	89 81       	ldd	r24, Y+1	; 0x01
    20aa:	9a 81       	ldd	r25, Y+2	; 0x02
    20ac:	ab 81       	ldd	r26, Y+3	; 0x03
    20ae:	bc 81       	ldd	r27, Y+4	; 0x04
    20b0:	ac 01       	movw	r20, r24
    20b2:	bd 01       	movw	r22, r26
    20b4:	c9 01       	movw	r24, r18
    20b6:	0e 94 6f 03 	call	0x6de	; 0x6de <_ZN10helicopter5model11SystemModel13XProportionalEf>
		model->XDerivativeError(xDerivativeError);
    20ba:	8d 89       	ldd	r24, Y+21	; 0x15
    20bc:	9e 89       	ldd	r25, Y+22	; 0x16
    20be:	fc 01       	movw	r30, r24
    20c0:	20 81       	ld	r18, Z
    20c2:	31 81       	ldd	r19, Z+1	; 0x01
    20c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    20c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    20c8:	af 85       	ldd	r26, Y+15	; 0x0f
    20ca:	b8 89       	ldd	r27, Y+16	; 0x10
    20cc:	ac 01       	movw	r20, r24
    20ce:	bd 01       	movw	r22, r26
    20d0:	c9 01       	movw	r24, r18
    20d2:	0e 94 cd 03 	call	0x79a	; 0x79a <_ZN10helicopter5model11SystemModel16XDerivativeErrorEf>
	}
}
    20d6:	66 96       	adiw	r28, 0x16	; 22
    20d8:	0f b6       	in	r0, 0x3f	; 63
    20da:	f8 94       	cli
    20dc:	de bf       	out	0x3e, r29	; 62
    20de:	0f be       	out	0x3f, r0	; 63
    20e0:	cd bf       	out	0x3d, r28	; 61
    20e2:	df 91       	pop	r29
    20e4:	cf 91       	pop	r28
    20e6:	1f 91       	pop	r17
    20e8:	0f 91       	pop	r16
    20ea:	ff 90       	pop	r15
    20ec:	ef 90       	pop	r14
    20ee:	df 90       	pop	r13
    20f0:	cf 90       	pop	r12
    20f2:	bf 90       	pop	r11
    20f4:	af 90       	pop	r10
    20f6:	9f 90       	pop	r9
    20f8:	8f 90       	pop	r8
    20fa:	7f 90       	pop	r7
    20fc:	08 95       	ret

000020fe <_ZN10helicopter10controller13PIDController28cyclicLateralOuterLoopUpdateEv>:

void PIDController::cyclicLateralOuterLoopUpdate()
{
    20fe:	7f 92       	push	r7
    2100:	8f 92       	push	r8
    2102:	9f 92       	push	r9
    2104:	af 92       	push	r10
    2106:	bf 92       	push	r11
    2108:	cf 92       	push	r12
    210a:	df 92       	push	r13
    210c:	ef 92       	push	r14
    210e:	ff 92       	push	r15
    2110:	0f 93       	push	r16
    2112:	1f 93       	push	r17
    2114:	cf 93       	push	r28
    2116:	df 93       	push	r29
    2118:	cd b7       	in	r28, 0x3d	; 61
    211a:	de b7       	in	r29, 0x3e	; 62
    211c:	66 97       	sbiw	r28, 0x16	; 22
    211e:	0f b6       	in	r0, 0x3f	; 63
    2120:	f8 94       	cli
    2122:	de bf       	out	0x3e, r29	; 62
    2124:	0f be       	out	0x3f, r0	; 63
    2126:	cd bf       	out	0x3d, r28	; 61
    2128:	9e 8b       	std	Y+22, r25	; 0x16
    212a:	8d 8b       	std	Y+21, r24	; 0x15
	if (model->OperationalState() == SystemModel::AutoPilot)
    212c:	8d 89       	ldd	r24, Y+21	; 0x15
    212e:	9e 89       	ldd	r25, Y+22	; 0x16
    2130:	fc 01       	movw	r30, r24
    2132:	80 81       	ld	r24, Z
    2134:	91 81       	ldd	r25, Z+1	; 0x01
    2136:	0e 94 74 07 	call	0xee8	; 0xee8 <_ZNK10helicopter5model11SystemModel16OperationalStateEv>
    213a:	98 2f       	mov	r25, r24
    213c:	81 e0       	ldi	r24, 0x01	; 1
    213e:	91 30       	cpi	r25, 0x01	; 1
    2140:	09 f0       	breq	.+2      	; 0x2144 <_ZN10helicopter10controller13PIDController28cyclicLateralOuterLoopUpdateEv+0x46>
    2142:	80 e0       	ldi	r24, 0x00	; 0
    2144:	88 23       	and	r24, r24
    2146:	09 f4       	brne	.+2      	; 0x214a <_ZN10helicopter10controller13PIDController28cyclicLateralOuterLoopUpdateEv+0x4c>
    2148:	2c c1       	rjmp	.+600    	; 0x23a2 <__stack+0x1a3>
	{
		float yProportional = calculateProportional(model->YNEDBodyFrame(), model->ReferenceYNEDBodyFrame());
    214a:	8d 89       	ldd	r24, Y+21	; 0x15
    214c:	9e 89       	ldd	r25, Y+22	; 0x16
    214e:	fc 01       	movw	r30, r24
    2150:	80 81       	ld	r24, Z
    2152:	91 81       	ldd	r25, Z+1	; 0x01
    2154:	0e 94 38 04 	call	0x870	; 0x870 <_ZNK10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEv>
    2158:	6b 01       	movw	r12, r22
    215a:	7c 01       	movw	r14, r24
    215c:	8d 89       	ldd	r24, Y+21	; 0x15
    215e:	9e 89       	ldd	r25, Y+22	; 0x16
    2160:	fc 01       	movw	r30, r24
    2162:	80 81       	ld	r24, Z
    2164:	91 81       	ldd	r25, Z+1	; 0x01
    2166:	0e 94 20 04 	call	0x840	; 0x840 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>
    216a:	dc 01       	movw	r26, r24
    216c:	cb 01       	movw	r24, r22
    216e:	ed 89       	ldd	r30, Y+21	; 0x15
    2170:	fe 89       	ldd	r31, Y+22	; 0x16
    2172:	97 01       	movw	r18, r14
    2174:	86 01       	movw	r16, r12
    2176:	ac 01       	movw	r20, r24
    2178:	bd 01       	movw	r22, r26
    217a:	cf 01       	movw	r24, r30
    217c:	0e 94 86 08 	call	0x110c	; 0x110c <_ZN10helicopter10controller13PIDController21calculateProportionalEff>
    2180:	dc 01       	movw	r26, r24
    2182:	cb 01       	movw	r24, r22
    2184:	89 83       	std	Y+1, r24	; 0x01
    2186:	9a 83       	std	Y+2, r25	; 0x02
    2188:	ab 83       	std	Y+3, r26	; 0x03
    218a:	bc 83       	std	Y+4, r27	; 0x04
		float yIntegralAntiWindup = calculateIntegralAntiWindup(model->LateralControlBeforeServoLimitsAdjustment(), model->LateralControl(), yAntiWindupGain);
    218c:	8d 89       	ldd	r24, Y+21	; 0x15
    218e:	9e 89       	ldd	r25, Y+22	; 0x16
    2190:	fc 01       	movw	r30, r24
    2192:	c6 a8       	ldd	r12, Z+54	; 0x36
    2194:	d7 a8       	ldd	r13, Z+55	; 0x37
    2196:	e0 ac       	ldd	r14, Z+56	; 0x38
    2198:	f1 ac       	ldd	r15, Z+57	; 0x39
    219a:	8d 89       	ldd	r24, Y+21	; 0x15
    219c:	9e 89       	ldd	r25, Y+22	; 0x16
    219e:	fc 01       	movw	r30, r24
    21a0:	80 81       	ld	r24, Z
    21a2:	91 81       	ldd	r25, Z+1	; 0x01
    21a4:	0e 94 8b 04 	call	0x916	; 0x916 <_ZNK10helicopter5model11SystemModel14LateralControlEv>
    21a8:	4b 01       	movw	r8, r22
    21aa:	5c 01       	movw	r10, r24
    21ac:	8d 89       	ldd	r24, Y+21	; 0x15
    21ae:	9e 89       	ldd	r25, Y+22	; 0x16
    21b0:	fc 01       	movw	r30, r24
    21b2:	80 81       	ld	r24, Z
    21b4:	91 81       	ldd	r25, Z+1	; 0x01
    21b6:	0e 94 50 04 	call	0x8a0	; 0x8a0 <_ZNK10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEv>
    21ba:	dc 01       	movw	r26, r24
    21bc:	cb 01       	movw	r24, r22
    21be:	ed 89       	ldd	r30, Y+21	; 0x15
    21c0:	fe 89       	ldd	r31, Y+22	; 0x16
    21c2:	95 01       	movw	r18, r10
    21c4:	84 01       	movw	r16, r8
    21c6:	ac 01       	movw	r20, r24
    21c8:	bd 01       	movw	r22, r26
    21ca:	cf 01       	movw	r24, r30
    21cc:	0e 94 b5 08 	call	0x116a	; 0x116a <_ZN10helicopter10controller13PIDController27calculateIntegralAntiWindupEfff>
    21d0:	dc 01       	movw	r26, r24
    21d2:	cb 01       	movw	r24, r22
    21d4:	8d 83       	std	Y+5, r24	; 0x05
    21d6:	9e 83       	std	Y+6, r25	; 0x06
    21d8:	af 83       	std	Y+7, r26	; 0x07
    21da:	b8 87       	std	Y+8, r27	; 0x08
		float weightedYIntegral = calculateIntegral(yProportional, model->YIntegral(), yIntegralAntiWindup, yIntegralGain);
    21dc:	8d 89       	ldd	r24, Y+21	; 0x15
    21de:	9e 89       	ldd	r25, Y+22	; 0x16
    21e0:	fc 01       	movw	r30, r24
    21e2:	a2 a4       	ldd	r10, Z+42	; 0x2a
    21e4:	b3 a4       	ldd	r11, Z+43	; 0x2b
    21e6:	c4 a4       	ldd	r12, Z+44	; 0x2c
    21e8:	d5 a4       	ldd	r13, Z+45	; 0x2d
    21ea:	8d 89       	ldd	r24, Y+21	; 0x15
    21ec:	9e 89       	ldd	r25, Y+22	; 0x16
    21ee:	fc 01       	movw	r30, r24
    21f0:	80 81       	ld	r24, Z
    21f2:	91 81       	ldd	r25, Z+1	; 0x01
    21f4:	0e 94 54 05 	call	0xaa8	; 0xaa8 <_ZNK10helicopter5model11SystemModel9YIntegralEv>
    21f8:	9b 01       	movw	r18, r22
    21fa:	ac 01       	movw	r20, r24
    21fc:	ed 80       	ldd	r14, Y+5	; 0x05
    21fe:	fe 80       	ldd	r15, Y+6	; 0x06
    2200:	0f 81       	ldd	r16, Y+7	; 0x07
    2202:	18 85       	ldd	r17, Y+8	; 0x08
    2204:	89 81       	ldd	r24, Y+1	; 0x01
    2206:	9a 81       	ldd	r25, Y+2	; 0x02
    2208:	ab 81       	ldd	r26, Y+3	; 0x03
    220a:	bc 81       	ldd	r27, Y+4	; 0x04
    220c:	ed 89       	ldd	r30, Y+21	; 0x15
    220e:	fe 89       	ldd	r31, Y+22	; 0x16
    2210:	45 01       	movw	r8, r10
    2212:	56 01       	movw	r10, r12
    2214:	67 01       	movw	r12, r14
    2216:	78 01       	movw	r14, r16
    2218:	89 01       	movw	r16, r18
    221a:	9a 01       	movw	r18, r20
    221c:	ac 01       	movw	r20, r24
    221e:	bd 01       	movw	r22, r26
    2220:	cf 01       	movw	r24, r30
    2222:	0e 94 06 09 	call	0x120c	; 0x120c <_ZN10helicopter10controller13PIDController17calculateIntegralEffff>
    2226:	dc 01       	movw	r26, r24
    2228:	cb 01       	movw	r24, r22
    222a:	89 87       	std	Y+9, r24	; 0x09
    222c:	9a 87       	std	Y+10, r25	; 0x0a
    222e:	ab 87       	std	Y+11, r26	; 0x0b
    2230:	bc 87       	std	Y+12, r27	; 0x0c
		float yDerivativeError = calculateVelocityError(model->YVelocityMetersPerSecond(), model->ReferenceYVelocityMetersPerSecond());
    2232:	8d 89       	ldd	r24, Y+21	; 0x15
    2234:	9e 89       	ldd	r25, Y+22	; 0x16
    2236:	fc 01       	movw	r30, r24
    2238:	80 81       	ld	r24, Z
    223a:	91 81       	ldd	r25, Z+1	; 0x01
    223c:	0e 94 de 04 	call	0x9bc	; 0x9bc <_ZNK10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEv>
    2240:	6b 01       	movw	r12, r22
    2242:	7c 01       	movw	r14, r24
    2244:	8d 89       	ldd	r24, Y+21	; 0x15
    2246:	9e 89       	ldd	r25, Y+22	; 0x16
    2248:	fc 01       	movw	r30, r24
    224a:	80 81       	ld	r24, Z
    224c:	91 81       	ldd	r25, Z+1	; 0x01
    224e:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>
    2252:	dc 01       	movw	r26, r24
    2254:	cb 01       	movw	r24, r22
    2256:	ed 89       	ldd	r30, Y+21	; 0x15
    2258:	fe 89       	ldd	r31, Y+22	; 0x16
    225a:	97 01       	movw	r18, r14
    225c:	86 01       	movw	r16, r12
    225e:	ac 01       	movw	r20, r24
    2260:	bd 01       	movw	r22, r26
    2262:	cf 01       	movw	r24, r30
    2264:	0e 94 d8 09 	call	0x13b0	; 0x13b0 <_ZN10helicopter10controller13PIDController22calculateVelocityErrorEff>
    2268:	dc 01       	movw	r26, r24
    226a:	cb 01       	movw	r24, r22
    226c:	8d 87       	std	Y+13, r24	; 0x0d
    226e:	9e 87       	std	Y+14, r25	; 0x0e
    2270:	af 87       	std	Y+15, r26	; 0x0f
    2272:	b8 8b       	std	Y+16, r27	; 0x10
		//we use a -1 direction factor because unlike other controls, if we have a positive proportional error, we actually need a 'negative' desired 
		//roll setpoint in order for the helicopter to track back towards the desired position. So if the helicopter is directly 'east' of the desired position,
		//the proportional error will correctly be positive (in a North-east-down coordinate system), but the helicopter will have to roll counter clockwise
		//to return to the desired position. This differs from if the helicopter was directly north of the desired position. The x proportional would be positive
		//(in NED), but it would take a positive pitch angle setpoint to get the helicopter to return to the desired position.
		float yLateralOuterLoopSetpoint = calculateOuterLoopControlValue(yProportional, yDerivativeError, weightedYIntegral, yProportionalGain, yDerivativeGain, -1);
    2274:	8d 89       	ldd	r24, Y+21	; 0x15
    2276:	9e 89       	ldd	r25, Y+22	; 0x16
    2278:	fc 01       	movw	r30, r24
    227a:	86 a5       	ldd	r24, Z+46	; 0x2e
    227c:	97 a5       	ldd	r25, Z+47	; 0x2f
    227e:	a0 a9       	ldd	r26, Z+48	; 0x30
    2280:	b1 a9       	ldd	r27, Z+49	; 0x31
    2282:	2d 89       	ldd	r18, Y+21	; 0x15
    2284:	3e 89       	ldd	r19, Y+22	; 0x16
    2286:	f9 01       	movw	r30, r18
    2288:	82 a8       	ldd	r8, Z+50	; 0x32
    228a:	93 a8       	ldd	r9, Z+51	; 0x33
    228c:	a4 a8       	ldd	r10, Z+52	; 0x34
    228e:	b5 a8       	ldd	r11, Z+53	; 0x35
    2290:	c9 84       	ldd	r12, Y+9	; 0x09
    2292:	da 84       	ldd	r13, Y+10	; 0x0a
    2294:	eb 84       	ldd	r14, Y+11	; 0x0b
    2296:	fc 84       	ldd	r15, Y+12	; 0x0c
    2298:	0d 85       	ldd	r16, Y+13	; 0x0d
    229a:	1e 85       	ldd	r17, Y+14	; 0x0e
    229c:	2f 85       	ldd	r18, Y+15	; 0x0f
    229e:	38 89       	ldd	r19, Y+16	; 0x10
    22a0:	49 81       	ldd	r20, Y+1	; 0x01
    22a2:	5a 81       	ldd	r21, Y+2	; 0x02
    22a4:	6b 81       	ldd	r22, Y+3	; 0x03
    22a6:	7c 81       	ldd	r23, Y+4	; 0x04
    22a8:	ed 89       	ldd	r30, Y+21	; 0x15
    22aa:	fe 89       	ldd	r31, Y+22	; 0x16
    22ac:	77 24       	eor	r7, r7
    22ae:	7a 94       	dec	r7
    22b0:	7f 92       	push	r7
    22b2:	77 24       	eor	r7, r7
    22b4:	7a 94       	dec	r7
    22b6:	7f 92       	push	r7
    22b8:	7b 2e       	mov	r7, r27
    22ba:	7f 92       	push	r7
    22bc:	7a 2e       	mov	r7, r26
    22be:	7f 92       	push	r7
    22c0:	79 2e       	mov	r7, r25
    22c2:	7f 92       	push	r7
    22c4:	8f 93       	push	r24
    22c6:	cf 01       	movw	r24, r30
    22c8:	0e 94 07 0a 	call	0x140e	; 0x140e <_ZN10helicopter10controller13PIDController30calculateOuterLoopControlValueEfffffi>
    22cc:	0f 90       	pop	r0
    22ce:	0f 90       	pop	r0
    22d0:	0f 90       	pop	r0
    22d2:	0f 90       	pop	r0
    22d4:	0f 90       	pop	r0
    22d6:	0f 90       	pop	r0
    22d8:	dc 01       	movw	r26, r24
    22da:	cb 01       	movw	r24, r22
    22dc:	89 8b       	std	Y+17, r24	; 0x11
    22de:	9a 8b       	std	Y+18, r25	; 0x12
    22e0:	ab 8b       	std	Y+19, r26	; 0x13
    22e2:	bc 8b       	std	Y+20, r27	; 0x14

		yLateralOuterLoopSetpoint = adjustForSetpointLimits(yLateralOuterLoopSetpoint, minRollSetpointDegrees, maxRollSetpointDegrees);
    22e4:	8d 89       	ldd	r24, Y+21	; 0x15
    22e6:	9e 89       	ldd	r25, Y+22	; 0x16
    22e8:	82 58       	subi	r24, 0x82	; 130
    22ea:	9f 4f       	sbci	r25, 0xFF	; 255
    22ec:	fc 01       	movw	r30, r24
    22ee:	e0 80       	ld	r14, Z
    22f0:	f1 80       	ldd	r15, Z+1	; 0x01
    22f2:	02 81       	ldd	r16, Z+2	; 0x02
    22f4:	13 81       	ldd	r17, Z+3	; 0x03
    22f6:	8d 89       	ldd	r24, Y+21	; 0x15
    22f8:	9e 89       	ldd	r25, Y+22	; 0x16
    22fa:	86 58       	subi	r24, 0x86	; 134
    22fc:	9f 4f       	sbci	r25, 0xFF	; 255
    22fe:	fc 01       	movw	r30, r24
    2300:	20 81       	ld	r18, Z
    2302:	31 81       	ldd	r19, Z+1	; 0x01
    2304:	42 81       	ldd	r20, Z+2	; 0x02
    2306:	53 81       	ldd	r21, Z+3	; 0x03
    2308:	89 89       	ldd	r24, Y+17	; 0x11
    230a:	9a 89       	ldd	r25, Y+18	; 0x12
    230c:	ab 89       	ldd	r26, Y+19	; 0x13
    230e:	bc 89       	ldd	r27, Y+20	; 0x14
    2310:	ed 89       	ldd	r30, Y+21	; 0x15
    2312:	fe 89       	ldd	r31, Y+22	; 0x16
    2314:	67 01       	movw	r12, r14
    2316:	78 01       	movw	r14, r16
    2318:	89 01       	movw	r16, r18
    231a:	9a 01       	movw	r18, r20
    231c:	ac 01       	movw	r20, r24
    231e:	bd 01       	movw	r22, r26
    2320:	cf 01       	movw	r24, r30
    2322:	0e 94 4b 0b 	call	0x1696	; 0x1696 <_ZN10helicopter10controller13PIDController23adjustForSetpointLimitsEfff>
    2326:	dc 01       	movw	r26, r24
    2328:	cb 01       	movw	r24, r22
    232a:	89 8b       	std	Y+17, r24	; 0x11
    232c:	9a 8b       	std	Y+18, r25	; 0x12
    232e:	ab 8b       	std	Y+19, r26	; 0x13
    2330:	bc 8b       	std	Y+20, r27	; 0x14
	
		model->YLateralOuterLoopSetpoint(yLateralOuterLoopSetpoint);
    2332:	8d 89       	ldd	r24, Y+21	; 0x15
    2334:	9e 89       	ldd	r25, Y+22	; 0x16
    2336:	fc 01       	movw	r30, r24
    2338:	20 81       	ld	r18, Z
    233a:	31 81       	ldd	r19, Z+1	; 0x01
    233c:	89 89       	ldd	r24, Y+17	; 0x11
    233e:	9a 89       	ldd	r25, Y+18	; 0x12
    2340:	ab 89       	ldd	r26, Y+19	; 0x13
    2342:	bc 89       	ldd	r27, Y+20	; 0x14
    2344:	ac 01       	movw	r20, r24
    2346:	bd 01       	movw	r22, r26
    2348:	c9 01       	movw	r24, r18
    234a:	0e 94 0e 05 	call	0xa1c	; 0xa1c <_ZN10helicopter5model11SystemModel25YLateralOuterLoopSetpointEf>
		model->YIntegral(weightedYIntegral);
    234e:	8d 89       	ldd	r24, Y+21	; 0x15
    2350:	9e 89       	ldd	r25, Y+22	; 0x16
    2352:	fc 01       	movw	r30, r24
    2354:	20 81       	ld	r18, Z
    2356:	31 81       	ldd	r19, Z+1	; 0x01
    2358:	89 85       	ldd	r24, Y+9	; 0x09
    235a:	9a 85       	ldd	r25, Y+10	; 0x0a
    235c:	ab 85       	ldd	r26, Y+11	; 0x0b
    235e:	bc 85       	ldd	r27, Y+12	; 0x0c
    2360:	ac 01       	movw	r20, r24
    2362:	bd 01       	movw	r22, r26
    2364:	c9 01       	movw	r24, r18
    2366:	0e 94 6c 05 	call	0xad8	; 0xad8 <_ZN10helicopter5model11SystemModel9YIntegralEf>
		model->YProportional(yProportional);
    236a:	8d 89       	ldd	r24, Y+21	; 0x15
    236c:	9e 89       	ldd	r25, Y+22	; 0x16
    236e:	fc 01       	movw	r30, r24
    2370:	20 81       	ld	r18, Z
    2372:	31 81       	ldd	r19, Z+1	; 0x01
    2374:	89 81       	ldd	r24, Y+1	; 0x01
    2376:	9a 81       	ldd	r25, Y+2	; 0x02
    2378:	ab 81       	ldd	r26, Y+3	; 0x03
    237a:	bc 81       	ldd	r27, Y+4	; 0x04
    237c:	ac 01       	movw	r20, r24
    237e:	bd 01       	movw	r22, r26
    2380:	c9 01       	movw	r24, r18
    2382:	0e 94 31 05 	call	0xa62	; 0xa62 <_ZN10helicopter5model11SystemModel13YProportionalEf>
		model->YDerivativeError(yDerivativeError);
    2386:	8d 89       	ldd	r24, Y+21	; 0x15
    2388:	9e 89       	ldd	r25, Y+22	; 0x16
    238a:	fc 01       	movw	r30, r24
    238c:	20 81       	ld	r18, Z
    238e:	31 81       	ldd	r19, Z+1	; 0x01
    2390:	8d 85       	ldd	r24, Y+13	; 0x0d
    2392:	9e 85       	ldd	r25, Y+14	; 0x0e
    2394:	af 85       	ldd	r26, Y+15	; 0x0f
    2396:	b8 89       	ldd	r27, Y+16	; 0x10
    2398:	ac 01       	movw	r20, r24
    239a:	bd 01       	movw	r22, r26
    239c:	c9 01       	movw	r24, r18
    239e:	0e 94 8f 05 	call	0xb1e	; 0xb1e <_ZN10helicopter5model11SystemModel16YDerivativeErrorEf>
	}
}
    23a2:	66 96       	adiw	r28, 0x16	; 22
    23a4:	0f b6       	in	r0, 0x3f	; 63
    23a6:	f8 94       	cli
    23a8:	de bf       	out	0x3e, r29	; 62
    23aa:	0f be       	out	0x3f, r0	; 63
    23ac:	cd bf       	out	0x3d, r28	; 61
    23ae:	df 91       	pop	r29
    23b0:	cf 91       	pop	r28
    23b2:	1f 91       	pop	r17
    23b4:	0f 91       	pop	r16
    23b6:	ff 90       	pop	r15
    23b8:	ef 90       	pop	r14
    23ba:	df 90       	pop	r13
    23bc:	cf 90       	pop	r12
    23be:	bf 90       	pop	r11
    23c0:	af 90       	pop	r10
    23c2:	9f 90       	pop	r9
    23c4:	8f 90       	pop	r8
    23c6:	7f 90       	pop	r7
    23c8:	08 95       	ret

000023ca <_ZN10helicopter10controller13PIDController30cyclicLongitudeInnerLoopUpdateEv>:

void PIDController::cyclicLongitudeInnerLoopUpdate()
{
    23ca:	2f 92       	push	r2
    23cc:	3f 92       	push	r3
    23ce:	4f 92       	push	r4
    23d0:	5f 92       	push	r5
    23d2:	6f 92       	push	r6
    23d4:	7f 92       	push	r7
    23d6:	8f 92       	push	r8
    23d8:	9f 92       	push	r9
    23da:	af 92       	push	r10
    23dc:	bf 92       	push	r11
    23de:	cf 92       	push	r12
    23e0:	df 92       	push	r13
    23e2:	ef 92       	push	r14
    23e4:	ff 92       	push	r15
    23e6:	0f 93       	push	r16
    23e8:	1f 93       	push	r17
    23ea:	cf 93       	push	r28
    23ec:	df 93       	push	r29
    23ee:	cd b7       	in	r28, 0x3d	; 61
    23f0:	de b7       	in	r29, 0x3e	; 62
    23f2:	2e 97       	sbiw	r28, 0x0e	; 14
    23f4:	0f b6       	in	r0, 0x3f	; 63
    23f6:	f8 94       	cli
    23f8:	de bf       	out	0x3e, r29	; 62
    23fa:	0f be       	out	0x3f, r0	; 63
    23fc:	cd bf       	out	0x3d, r28	; 61
    23fe:	9a 87       	std	Y+10, r25	; 0x0a
    2400:	89 87       	std	Y+9, r24	; 0x09
	if (model->OperationalState() == SystemModel::AutoPilot)
    2402:	89 85       	ldd	r24, Y+9	; 0x09
    2404:	9a 85       	ldd	r25, Y+10	; 0x0a
    2406:	fc 01       	movw	r30, r24
    2408:	80 81       	ld	r24, Z
    240a:	91 81       	ldd	r25, Z+1	; 0x01
    240c:	0e 94 74 07 	call	0xee8	; 0xee8 <_ZNK10helicopter5model11SystemModel16OperationalStateEv>
    2410:	98 2f       	mov	r25, r24
    2412:	81 e0       	ldi	r24, 0x01	; 1
    2414:	91 30       	cpi	r25, 0x01	; 1
    2416:	09 f0       	breq	.+2      	; 0x241a <_ZN10helicopter10controller13PIDController30cyclicLongitudeInnerLoopUpdateEv+0x50>
    2418:	80 e0       	ldi	r24, 0x00	; 0
    241a:	88 23       	and	r24, r24
    241c:	09 f4       	brne	.+2      	; 0x2420 <_ZN10helicopter10controller13PIDController30cyclicLongitudeInnerLoopUpdateEv+0x56>
    241e:	8c c0       	rjmp	.+280    	; 0x2538 <_ZN10helicopter10controller13PIDController30cyclicLongitudeInnerLoopUpdateEv+0x16e>
	{
		float xLongitudinalInnerLoopControlBeforeServoLimits = calculateInnerLoopControlValue(model->XLongitudeOuterLoopSetpoint(), model->ThetaPitchDegrees(), longitudeInnerLoopGain, model->PitchAngularVelocityRadsPerSecond(), pitchAngularVelocityGain);
    2420:	89 85       	ldd	r24, Y+9	; 0x09
    2422:	9a 85       	ldd	r25, Y+10	; 0x0a
    2424:	fc 01       	movw	r30, r24
    2426:	c6 a0       	ldd	r12, Z+38	; 0x26
    2428:	d7 a0       	ldd	r13, Z+39	; 0x27
    242a:	e0 a4       	ldd	r14, Z+40	; 0x28
    242c:	f1 a4       	ldd	r15, Z+41	; 0x29
    242e:	89 85       	ldd	r24, Y+9	; 0x09
    2430:	9a 85       	ldd	r25, Y+10	; 0x0a
    2432:	fc 01       	movw	r30, r24
    2434:	80 81       	ld	r24, Z
    2436:	91 81       	ldd	r25, Z+1	; 0x01
    2438:	0e 94 08 04 	call	0x810	; 0x810 <_ZNK10helicopter5model11SystemModel33PitchAngularVelocityRadsPerSecondEv>
    243c:	6b 87       	std	Y+11, r22	; 0x0b
    243e:	7c 87       	std	Y+12, r23	; 0x0c
    2440:	8d 87       	std	Y+13, r24	; 0x0d
    2442:	9e 87       	std	Y+14, r25	; 0x0e
    2444:	89 85       	ldd	r24, Y+9	; 0x09
    2446:	9a 85       	ldd	r25, Y+10	; 0x0a
    2448:	fc 01       	movw	r30, r24
    244a:	22 a0       	ldd	r2, Z+34	; 0x22
    244c:	33 a0       	ldd	r3, Z+35	; 0x23
    244e:	44 a0       	ldd	r4, Z+36	; 0x24
    2450:	55 a0       	ldd	r5, Z+37	; 0x25
    2452:	89 85       	ldd	r24, Y+9	; 0x09
    2454:	9a 85       	ldd	r25, Y+10	; 0x0a
    2456:	fc 01       	movw	r30, r24
    2458:	80 81       	ld	r24, Z
    245a:	91 81       	ldd	r25, Z+1	; 0x01
    245c:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <_ZNK10helicopter5model11SystemModel17ThetaPitchDegreesEv>
    2460:	3b 01       	movw	r6, r22
    2462:	4c 01       	movw	r8, r24
    2464:	89 85       	ldd	r24, Y+9	; 0x09
    2466:	9a 85       	ldd	r25, Y+10	; 0x0a
    2468:	fc 01       	movw	r30, r24
    246a:	80 81       	ld	r24, Z
    246c:	91 81       	ldd	r25, Z+1	; 0x01
    246e:	0e 94 35 03 	call	0x66a	; 0x66a <_ZNK10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEv>
    2472:	dc 01       	movw	r26, r24
    2474:	cb 01       	movw	r24, r22
    2476:	2f 2d       	mov	r18, r15
    2478:	2f 93       	push	r18
    247a:	2e 2d       	mov	r18, r14
    247c:	2f 93       	push	r18
    247e:	2d 2d       	mov	r18, r13
    2480:	2f 93       	push	r18
    2482:	2c 2d       	mov	r18, r12
    2484:	2f 93       	push	r18
    2486:	ab 84       	ldd	r10, Y+11	; 0x0b
    2488:	bc 84       	ldd	r11, Y+12	; 0x0c
    248a:	cd 84       	ldd	r12, Y+13	; 0x0d
    248c:	de 84       	ldd	r13, Y+14	; 0x0e
    248e:	82 01       	movw	r16, r4
    2490:	71 01       	movw	r14, r2
    2492:	a4 01       	movw	r20, r8
    2494:	93 01       	movw	r18, r6
    2496:	bc 01       	movw	r22, r24
    2498:	cd 01       	movw	r24, r26
    249a:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <_Z30calculateInnerLoopControlValuefffff>
    249e:	0f 90       	pop	r0
    24a0:	0f 90       	pop	r0
    24a2:	0f 90       	pop	r0
    24a4:	0f 90       	pop	r0
    24a6:	dc 01       	movw	r26, r24
    24a8:	cb 01       	movw	r24, r22
    24aa:	89 83       	std	Y+1, r24	; 0x01
    24ac:	9a 83       	std	Y+2, r25	; 0x02
    24ae:	ab 83       	std	Y+3, r26	; 0x03
    24b0:	bc 83       	std	Y+4, r27	; 0x04
	
		float xLongitudinalInnerLoopControl = adjustControlForServoLimits(xLongitudinalInnerLoopControlBeforeServoLimits, minLongitudeServoControlValue, maxLongitudeServoControlValue);
    24b2:	89 85       	ldd	r24, Y+9	; 0x09
    24b4:	9a 85       	ldd	r25, Y+10	; 0x0a
    24b6:	82 5a       	subi	r24, 0xA2	; 162
    24b8:	9f 4f       	sbci	r25, 0xFF	; 255
    24ba:	fc 01       	movw	r30, r24
    24bc:	e0 80       	ld	r14, Z
    24be:	f1 80       	ldd	r15, Z+1	; 0x01
    24c0:	02 81       	ldd	r16, Z+2	; 0x02
    24c2:	13 81       	ldd	r17, Z+3	; 0x03
    24c4:	89 85       	ldd	r24, Y+9	; 0x09
    24c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    24c8:	86 5a       	subi	r24, 0xA6	; 166
    24ca:	9f 4f       	sbci	r25, 0xFF	; 255
    24cc:	fc 01       	movw	r30, r24
    24ce:	20 81       	ld	r18, Z
    24d0:	31 81       	ldd	r19, Z+1	; 0x01
    24d2:	42 81       	ldd	r20, Z+2	; 0x02
    24d4:	53 81       	ldd	r21, Z+3	; 0x03
    24d6:	89 81       	ldd	r24, Y+1	; 0x01
    24d8:	9a 81       	ldd	r25, Y+2	; 0x02
    24da:	ab 81       	ldd	r26, Y+3	; 0x03
    24dc:	bc 81       	ldd	r27, Y+4	; 0x04
    24de:	e9 85       	ldd	r30, Y+9	; 0x09
    24e0:	fa 85       	ldd	r31, Y+10	; 0x0a
    24e2:	67 01       	movw	r12, r14
    24e4:	78 01       	movw	r14, r16
    24e6:	89 01       	movw	r16, r18
    24e8:	9a 01       	movw	r18, r20
    24ea:	ac 01       	movw	r20, r24
    24ec:	bd 01       	movw	r22, r26
    24ee:	cf 01       	movw	r24, r30
    24f0:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    24f4:	dc 01       	movw	r26, r24
    24f6:	cb 01       	movw	r24, r22
    24f8:	8d 83       	std	Y+5, r24	; 0x05
    24fa:	9e 83       	std	Y+6, r25	; 0x06
    24fc:	af 83       	std	Y+7, r26	; 0x07
    24fe:	b8 87       	std	Y+8, r27	; 0x08
	
		model->LongitudeControlBeforeServoLimitsAdjustment(xLongitudinalInnerLoopControlBeforeServoLimits);
    2500:	89 85       	ldd	r24, Y+9	; 0x09
    2502:	9a 85       	ldd	r25, Y+10	; 0x0a
    2504:	fc 01       	movw	r30, r24
    2506:	20 81       	ld	r18, Z
    2508:	31 81       	ldd	r19, Z+1	; 0x01
    250a:	89 81       	ldd	r24, Y+1	; 0x01
    250c:	9a 81       	ldd	r25, Y+2	; 0x02
    250e:	ab 81       	ldd	r26, Y+3	; 0x03
    2510:	bc 81       	ldd	r27, Y+4	; 0x04
    2512:	ac 01       	movw	r20, r24
    2514:	bd 01       	movw	r22, r26
    2516:	c9 01       	movw	r24, r18
    2518:	0e 94 b3 02 	call	0x566	; 0x566 <_ZN10helicopter5model11SystemModel43LongitudeControlBeforeServoLimitsAdjustmentEf>
	
		model->LongitudeControl(xLongitudinalInnerLoopControl);
    251c:	89 85       	ldd	r24, Y+9	; 0x09
    251e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2520:	fc 01       	movw	r30, r24
    2522:	20 81       	ld	r18, Z
    2524:	31 81       	ldd	r19, Z+1	; 0x01
    2526:	8d 81       	ldd	r24, Y+5	; 0x05
    2528:	9e 81       	ldd	r25, Y+6	; 0x06
    252a:	af 81       	ldd	r26, Y+7	; 0x07
    252c:	b8 85       	ldd	r27, Y+8	; 0x08
    252e:	ac 01       	movw	r20, r24
    2530:	bd 01       	movw	r22, r26
    2532:	c9 01       	movw	r24, r18
    2534:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <_ZN10helicopter5model11SystemModel16LongitudeControlEf>
	}
}
    2538:	2e 96       	adiw	r28, 0x0e	; 14
    253a:	0f b6       	in	r0, 0x3f	; 63
    253c:	f8 94       	cli
    253e:	de bf       	out	0x3e, r29	; 62
    2540:	0f be       	out	0x3f, r0	; 63
    2542:	cd bf       	out	0x3d, r28	; 61
    2544:	df 91       	pop	r29
    2546:	cf 91       	pop	r28
    2548:	1f 91       	pop	r17
    254a:	0f 91       	pop	r16
    254c:	ff 90       	pop	r15
    254e:	ef 90       	pop	r14
    2550:	df 90       	pop	r13
    2552:	cf 90       	pop	r12
    2554:	bf 90       	pop	r11
    2556:	af 90       	pop	r10
    2558:	9f 90       	pop	r9
    255a:	8f 90       	pop	r8
    255c:	7f 90       	pop	r7
    255e:	6f 90       	pop	r6
    2560:	5f 90       	pop	r5
    2562:	4f 90       	pop	r4
    2564:	3f 90       	pop	r3
    2566:	2f 90       	pop	r2
    2568:	08 95       	ret

0000256a <_ZN10helicopter10controller13PIDController28cyclicLateralInnerLoopUpdateEv>:

void PIDController::cyclicLateralInnerLoopUpdate()
{
    256a:	2f 92       	push	r2
    256c:	3f 92       	push	r3
    256e:	4f 92       	push	r4
    2570:	5f 92       	push	r5
    2572:	6f 92       	push	r6
    2574:	7f 92       	push	r7
    2576:	8f 92       	push	r8
    2578:	9f 92       	push	r9
    257a:	af 92       	push	r10
    257c:	bf 92       	push	r11
    257e:	cf 92       	push	r12
    2580:	df 92       	push	r13
    2582:	ef 92       	push	r14
    2584:	ff 92       	push	r15
    2586:	0f 93       	push	r16
    2588:	1f 93       	push	r17
    258a:	cf 93       	push	r28
    258c:	df 93       	push	r29
    258e:	cd b7       	in	r28, 0x3d	; 61
    2590:	de b7       	in	r29, 0x3e	; 62
    2592:	2e 97       	sbiw	r28, 0x0e	; 14
    2594:	0f b6       	in	r0, 0x3f	; 63
    2596:	f8 94       	cli
    2598:	de bf       	out	0x3e, r29	; 62
    259a:	0f be       	out	0x3f, r0	; 63
    259c:	cd bf       	out	0x3d, r28	; 61
    259e:	9a 87       	std	Y+10, r25	; 0x0a
    25a0:	89 87       	std	Y+9, r24	; 0x09
	if (model->OperationalState() == SystemModel::AutoPilot)
    25a2:	89 85       	ldd	r24, Y+9	; 0x09
    25a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    25a6:	fc 01       	movw	r30, r24
    25a8:	80 81       	ld	r24, Z
    25aa:	91 81       	ldd	r25, Z+1	; 0x01
    25ac:	0e 94 74 07 	call	0xee8	; 0xee8 <_ZNK10helicopter5model11SystemModel16OperationalStateEv>
    25b0:	98 2f       	mov	r25, r24
    25b2:	81 e0       	ldi	r24, 0x01	; 1
    25b4:	91 30       	cpi	r25, 0x01	; 1
    25b6:	09 f0       	breq	.+2      	; 0x25ba <_ZN10helicopter10controller13PIDController28cyclicLateralInnerLoopUpdateEv+0x50>
    25b8:	80 e0       	ldi	r24, 0x00	; 0
    25ba:	88 23       	and	r24, r24
    25bc:	09 f4       	brne	.+2      	; 0x25c0 <_ZN10helicopter10controller13PIDController28cyclicLateralInnerLoopUpdateEv+0x56>
    25be:	8d c0       	rjmp	.+282    	; 0x26da <_ZN10helicopter10controller13PIDController28cyclicLateralInnerLoopUpdateEv+0x170>
	{
		float yLateralInnerLoopControlBeforeServoLimits = calculateInnerLoopControlValue(model->YLateralOuterLoopSetpoint(), model->PhiRollDegrees(), lateralInnerLoopGain, model->RollAngularVelocityRadsPerSecond(), rollAngularVelocityGain);
    25c0:	89 85       	ldd	r24, Y+9	; 0x09
    25c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    25c4:	ce 96       	adiw	r24, 0x3e	; 62
    25c6:	fc 01       	movw	r30, r24
    25c8:	c0 80       	ld	r12, Z
    25ca:	d1 80       	ldd	r13, Z+1	; 0x01
    25cc:	e2 80       	ldd	r14, Z+2	; 0x02
    25ce:	f3 80       	ldd	r15, Z+3	; 0x03
    25d0:	89 85       	ldd	r24, Y+9	; 0x09
    25d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    25d4:	fc 01       	movw	r30, r24
    25d6:	80 81       	ld	r24, Z
    25d8:	91 81       	ldd	r25, Z+1	; 0x01
    25da:	0e 94 ca 05 	call	0xb94	; 0xb94 <_ZNK10helicopter5model11SystemModel32RollAngularVelocityRadsPerSecondEv>
    25de:	6b 87       	std	Y+11, r22	; 0x0b
    25e0:	7c 87       	std	Y+12, r23	; 0x0c
    25e2:	8d 87       	std	Y+13, r24	; 0x0d
    25e4:	9e 87       	std	Y+14, r25	; 0x0e
    25e6:	89 85       	ldd	r24, Y+9	; 0x09
    25e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    25ea:	fc 01       	movw	r30, r24
    25ec:	22 ac       	ldd	r2, Z+58	; 0x3a
    25ee:	33 ac       	ldd	r3, Z+59	; 0x3b
    25f0:	44 ac       	ldd	r4, Z+60	; 0x3c
    25f2:	55 ac       	ldd	r5, Z+61	; 0x3d
    25f4:	89 85       	ldd	r24, Y+9	; 0x09
    25f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    25f8:	fc 01       	movw	r30, r24
    25fa:	80 81       	ld	r24, Z
    25fc:	91 81       	ldd	r25, Z+1	; 0x01
    25fe:	0e 94 b2 05 	call	0xb64	; 0xb64 <_ZNK10helicopter5model11SystemModel14PhiRollDegreesEv>
    2602:	3b 01       	movw	r6, r22
    2604:	4c 01       	movw	r8, r24
    2606:	89 85       	ldd	r24, Y+9	; 0x09
    2608:	9a 85       	ldd	r25, Y+10	; 0x0a
    260a:	fc 01       	movw	r30, r24
    260c:	80 81       	ld	r24, Z
    260e:	91 81       	ldd	r25, Z+1	; 0x01
    2610:	0e 94 f6 04 	call	0x9ec	; 0x9ec <_ZNK10helicopter5model11SystemModel25YLateralOuterLoopSetpointEv>
    2614:	dc 01       	movw	r26, r24
    2616:	cb 01       	movw	r24, r22
    2618:	2f 2d       	mov	r18, r15
    261a:	2f 93       	push	r18
    261c:	2e 2d       	mov	r18, r14
    261e:	2f 93       	push	r18
    2620:	2d 2d       	mov	r18, r13
    2622:	2f 93       	push	r18
    2624:	2c 2d       	mov	r18, r12
    2626:	2f 93       	push	r18
    2628:	ab 84       	ldd	r10, Y+11	; 0x0b
    262a:	bc 84       	ldd	r11, Y+12	; 0x0c
    262c:	cd 84       	ldd	r12, Y+13	; 0x0d
    262e:	de 84       	ldd	r13, Y+14	; 0x0e
    2630:	82 01       	movw	r16, r4
    2632:	71 01       	movw	r14, r2
    2634:	a4 01       	movw	r20, r8
    2636:	93 01       	movw	r18, r6
    2638:	bc 01       	movw	r22, r24
    263a:	cd 01       	movw	r24, r26
    263c:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <_Z30calculateInnerLoopControlValuefffff>
    2640:	0f 90       	pop	r0
    2642:	0f 90       	pop	r0
    2644:	0f 90       	pop	r0
    2646:	0f 90       	pop	r0
    2648:	dc 01       	movw	r26, r24
    264a:	cb 01       	movw	r24, r22
    264c:	89 83       	std	Y+1, r24	; 0x01
    264e:	9a 83       	std	Y+2, r25	; 0x02
    2650:	ab 83       	std	Y+3, r26	; 0x03
    2652:	bc 83       	std	Y+4, r27	; 0x04
		
		float yLateralInnerLoopControl = adjustControlForServoLimits(yLateralInnerLoopControlBeforeServoLimits, minLateralServoControlValue, maxLateralServoControlValue);
    2654:	89 85       	ldd	r24, Y+9	; 0x09
    2656:	9a 85       	ldd	r25, Y+10	; 0x0a
    2658:	8a 59       	subi	r24, 0x9A	; 154
    265a:	9f 4f       	sbci	r25, 0xFF	; 255
    265c:	fc 01       	movw	r30, r24
    265e:	e0 80       	ld	r14, Z
    2660:	f1 80       	ldd	r15, Z+1	; 0x01
    2662:	02 81       	ldd	r16, Z+2	; 0x02
    2664:	13 81       	ldd	r17, Z+3	; 0x03
    2666:	89 85       	ldd	r24, Y+9	; 0x09
    2668:	9a 85       	ldd	r25, Y+10	; 0x0a
    266a:	8e 59       	subi	r24, 0x9E	; 158
    266c:	9f 4f       	sbci	r25, 0xFF	; 255
    266e:	fc 01       	movw	r30, r24
    2670:	20 81       	ld	r18, Z
    2672:	31 81       	ldd	r19, Z+1	; 0x01
    2674:	42 81       	ldd	r20, Z+2	; 0x02
    2676:	53 81       	ldd	r21, Z+3	; 0x03
    2678:	89 81       	ldd	r24, Y+1	; 0x01
    267a:	9a 81       	ldd	r25, Y+2	; 0x02
    267c:	ab 81       	ldd	r26, Y+3	; 0x03
    267e:	bc 81       	ldd	r27, Y+4	; 0x04
    2680:	e9 85       	ldd	r30, Y+9	; 0x09
    2682:	fa 85       	ldd	r31, Y+10	; 0x0a
    2684:	67 01       	movw	r12, r14
    2686:	78 01       	movw	r14, r16
    2688:	89 01       	movw	r16, r18
    268a:	9a 01       	movw	r18, r20
    268c:	ac 01       	movw	r20, r24
    268e:	bd 01       	movw	r22, r26
    2690:	cf 01       	movw	r24, r30
    2692:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN10helicopter10controller13PIDController27adjustControlForServoLimitsEfff>
    2696:	dc 01       	movw	r26, r24
    2698:	cb 01       	movw	r24, r22
    269a:	8d 83       	std	Y+5, r24	; 0x05
    269c:	9e 83       	std	Y+6, r25	; 0x06
    269e:	af 83       	std	Y+7, r26	; 0x07
    26a0:	b8 87       	std	Y+8, r27	; 0x08
		
		model->LateralControlBeforeServoLimitsAdjustment(yLateralInnerLoopControlBeforeServoLimits);
    26a2:	89 85       	ldd	r24, Y+9	; 0x09
    26a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    26a6:	fc 01       	movw	r30, r24
    26a8:	20 81       	ld	r18, Z
    26aa:	31 81       	ldd	r19, Z+1	; 0x01
    26ac:	89 81       	ldd	r24, Y+1	; 0x01
    26ae:	9a 81       	ldd	r25, Y+2	; 0x02
    26b0:	ab 81       	ldd	r26, Y+3	; 0x03
    26b2:	bc 81       	ldd	r27, Y+4	; 0x04
    26b4:	ac 01       	movw	r20, r24
    26b6:	bd 01       	movw	r22, r26
    26b8:	c9 01       	movw	r24, r18
    26ba:	0e 94 68 04 	call	0x8d0	; 0x8d0 <_ZN10helicopter5model11SystemModel41LateralControlBeforeServoLimitsAdjustmentEf>
		
		model->LateralControl(yLateralInnerLoopControl);		
    26be:	89 85       	ldd	r24, Y+9	; 0x09
    26c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    26c2:	fc 01       	movw	r30, r24
    26c4:	20 81       	ld	r18, Z
    26c6:	31 81       	ldd	r19, Z+1	; 0x01
    26c8:	8d 81       	ldd	r24, Y+5	; 0x05
    26ca:	9e 81       	ldd	r25, Y+6	; 0x06
    26cc:	af 81       	ldd	r26, Y+7	; 0x07
    26ce:	b8 85       	ldd	r27, Y+8	; 0x08
    26d0:	ac 01       	movw	r20, r24
    26d2:	bd 01       	movw	r22, r26
    26d4:	c9 01       	movw	r24, r18
    26d6:	0e 94 a3 04 	call	0x946	; 0x946 <_ZN10helicopter5model11SystemModel14LateralControlEf>
	}
}
    26da:	2e 96       	adiw	r28, 0x0e	; 14
    26dc:	0f b6       	in	r0, 0x3f	; 63
    26de:	f8 94       	cli
    26e0:	de bf       	out	0x3e, r29	; 62
    26e2:	0f be       	out	0x3f, r0	; 63
    26e4:	cd bf       	out	0x3d, r28	; 61
    26e6:	df 91       	pop	r29
    26e8:	cf 91       	pop	r28
    26ea:	1f 91       	pop	r17
    26ec:	0f 91       	pop	r16
    26ee:	ff 90       	pop	r15
    26f0:	ef 90       	pop	r14
    26f2:	df 90       	pop	r13
    26f4:	cf 90       	pop	r12
    26f6:	bf 90       	pop	r11
    26f8:	af 90       	pop	r10
    26fa:	9f 90       	pop	r9
    26fc:	8f 90       	pop	r8
    26fe:	7f 90       	pop	r7
    2700:	6f 90       	pop	r6
    2702:	5f 90       	pop	r5
    2704:	4f 90       	pop	r4
    2706:	3f 90       	pop	r3
    2708:	2f 90       	pop	r2
    270a:	08 95       	ret

0000270c <_ZN10helicopter7drivers12SerialDriverD1Ev>:
				useDoubleSpeedMode(useDoubleSpeedMode)
				{
					
				}
						
				virtual ~SerialDriver()
    270c:	cf 93       	push	r28
    270e:	df 93       	push	r29
    2710:	1f 92       	push	r1
    2712:	1f 92       	push	r1
    2714:	cd b7       	in	r28, 0x3d	; 61
    2716:	de b7       	in	r29, 0x3e	; 62
    2718:	9a 83       	std	Y+2, r25	; 0x02
    271a:	89 83       	std	Y+1, r24	; 0x01
				{
    271c:	89 81       	ldd	r24, Y+1	; 0x01
    271e:	9a 81       	ldd	r25, Y+2	; 0x02
    2720:	2a e0       	ldi	r18, 0x0A	; 10
    2722:	32 e0       	ldi	r19, 0x02	; 2
    2724:	fc 01       	movw	r30, r24
    2726:	31 83       	std	Z+1, r19	; 0x01
    2728:	20 83       	st	Z, r18
					
				}
    272a:	80 e0       	ldi	r24, 0x00	; 0
    272c:	90 e0       	ldi	r25, 0x00	; 0
    272e:	81 70       	andi	r24, 0x01	; 1
    2730:	99 27       	eor	r25, r25
    2732:	00 97       	sbiw	r24, 0x00	; 0
    2734:	21 f0       	breq	.+8      	; 0x273e <_ZN10helicopter7drivers12SerialDriverD1Ev+0x32>
    2736:	89 81       	ldd	r24, Y+1	; 0x01
    2738:	9a 81       	ldd	r25, Y+2	; 0x02
    273a:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    273e:	0f 90       	pop	r0
    2740:	0f 90       	pop	r0
    2742:	df 91       	pop	r29
    2744:	cf 91       	pop	r28
    2746:	08 95       	ret

00002748 <_ZN10helicopter7drivers12SerialDriverD0Ev>:
				useDoubleSpeedMode(useDoubleSpeedMode)
				{
					
				}
						
				virtual ~SerialDriver()
    2748:	cf 93       	push	r28
    274a:	df 93       	push	r29
    274c:	1f 92       	push	r1
    274e:	1f 92       	push	r1
    2750:	cd b7       	in	r28, 0x3d	; 61
    2752:	de b7       	in	r29, 0x3e	; 62
    2754:	9a 83       	std	Y+2, r25	; 0x02
    2756:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    2758:	89 81       	ldd	r24, Y+1	; 0x01
    275a:	9a 81       	ldd	r25, Y+2	; 0x02
    275c:	0e 94 86 13 	call	0x270c	; 0x270c <_ZN10helicopter7drivers12SerialDriverD1Ev>
    2760:	89 81       	ldd	r24, Y+1	; 0x01
    2762:	9a 81       	ldd	r25, Y+2	; 0x02
    2764:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    2768:	0f 90       	pop	r0
    276a:	0f 90       	pop	r0
    276c:	df 91       	pop	r29
    276e:	cf 91       	pop	r28
    2770:	08 95       	ret

00002772 <_ZN10helicopter7drivers12SerialDriver10initializeEv>:
#include "CommonHeader.h"

using namespace helicopter::drivers;

void SerialDriver::initialize()
{
    2772:	cf 93       	push	r28
    2774:	df 93       	push	r29
    2776:	00 d0       	rcall	.+0      	; 0x2778 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x6>
    2778:	1f 92       	push	r1
    277a:	cd b7       	in	r28, 0x3d	; 61
    277c:	de b7       	in	r29, 0x3e	; 62
    277e:	9c 83       	std	Y+4, r25	; 0x04
    2780:	8b 83       	std	Y+3, r24	; 0x03
	unsigned int baudPrescaller = 0;
    2782:	1a 82       	std	Y+2, r1	; 0x02
    2784:	19 82       	std	Y+1, r1	; 0x01
	
	if (useDoubleSpeedMode)
    2786:	8b 81       	ldd	r24, Y+3	; 0x03
    2788:	9c 81       	ldd	r25, Y+4	; 0x04
    278a:	fc 01       	movw	r30, r24
    278c:	87 81       	ldd	r24, Z+7	; 0x07
    278e:	88 23       	and	r24, r24
    2790:	b9 f1       	breq	.+110    	; 0x2800 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x8e>
	{
		baudPrescaller = floor((((F_CPU / (baudRate * 8UL))) - 1UL));
    2792:	8b 81       	ldd	r24, Y+3	; 0x03
    2794:	9c 81       	ldd	r25, Y+4	; 0x04
    2796:	fc 01       	movw	r30, r24
    2798:	82 81       	ldd	r24, Z+2	; 0x02
    279a:	93 81       	ldd	r25, Z+3	; 0x03
    279c:	a4 81       	ldd	r26, Z+4	; 0x04
    279e:	b5 81       	ldd	r27, Z+5	; 0x05
    27a0:	88 0f       	add	r24, r24
    27a2:	99 1f       	adc	r25, r25
    27a4:	aa 1f       	adc	r26, r26
    27a6:	bb 1f       	adc	r27, r27
    27a8:	88 0f       	add	r24, r24
    27aa:	99 1f       	adc	r25, r25
    27ac:	aa 1f       	adc	r26, r26
    27ae:	bb 1f       	adc	r27, r27
    27b0:	88 0f       	add	r24, r24
    27b2:	99 1f       	adc	r25, r25
    27b4:	aa 1f       	adc	r26, r26
    27b6:	bb 1f       	adc	r27, r27
    27b8:	9c 01       	movw	r18, r24
    27ba:	ad 01       	movw	r20, r26
    27bc:	80 e0       	ldi	r24, 0x00	; 0
    27be:	94 e2       	ldi	r25, 0x24	; 36
    27c0:	a4 ef       	ldi	r26, 0xF4	; 244
    27c2:	b0 e0       	ldi	r27, 0x00	; 0
    27c4:	bc 01       	movw	r22, r24
    27c6:	cd 01       	movw	r24, r26
    27c8:	0e 94 63 4f 	call	0x9ec6	; 0x9ec6 <__udivmodsi4>
    27cc:	da 01       	movw	r26, r20
    27ce:	c9 01       	movw	r24, r18
    27d0:	01 97       	sbiw	r24, 0x01	; 1
    27d2:	a1 09       	sbc	r26, r1
    27d4:	b1 09       	sbc	r27, r1
    27d6:	bc 01       	movw	r22, r24
    27d8:	cd 01       	movw	r24, r26
    27da:	0e 94 f3 4b 	call	0x97e6	; 0x97e6 <__floatunsisf>
    27de:	dc 01       	movw	r26, r24
    27e0:	cb 01       	movw	r24, r22
    27e2:	bc 01       	movw	r22, r24
    27e4:	cd 01       	movw	r24, r26
    27e6:	0e 94 30 4c 	call	0x9860	; 0x9860 <floor>
    27ea:	dc 01       	movw	r26, r24
    27ec:	cb 01       	movw	r24, r22
    27ee:	bc 01       	movw	r22, r24
    27f0:	cd 01       	movw	r24, r26
    27f2:	0e 94 c7 4b 	call	0x978e	; 0x978e <__fixunssfsi>
    27f6:	dc 01       	movw	r26, r24
    27f8:	cb 01       	movw	r24, r22
    27fa:	9a 83       	std	Y+2, r25	; 0x02
    27fc:	89 83       	std	Y+1, r24	; 0x01
    27fe:	3a c0       	rjmp	.+116    	; 0x2874 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x102>
	}else
	{
		//Calculation for the baud prescaller 
		baudPrescaller = floor((((F_CPU / (baudRate * 16UL))) - 1UL));
    2800:	8b 81       	ldd	r24, Y+3	; 0x03
    2802:	9c 81       	ldd	r25, Y+4	; 0x04
    2804:	fc 01       	movw	r30, r24
    2806:	82 81       	ldd	r24, Z+2	; 0x02
    2808:	93 81       	ldd	r25, Z+3	; 0x03
    280a:	a4 81       	ldd	r26, Z+4	; 0x04
    280c:	b5 81       	ldd	r27, Z+5	; 0x05
    280e:	88 0f       	add	r24, r24
    2810:	99 1f       	adc	r25, r25
    2812:	aa 1f       	adc	r26, r26
    2814:	bb 1f       	adc	r27, r27
    2816:	88 0f       	add	r24, r24
    2818:	99 1f       	adc	r25, r25
    281a:	aa 1f       	adc	r26, r26
    281c:	bb 1f       	adc	r27, r27
    281e:	88 0f       	add	r24, r24
    2820:	99 1f       	adc	r25, r25
    2822:	aa 1f       	adc	r26, r26
    2824:	bb 1f       	adc	r27, r27
    2826:	88 0f       	add	r24, r24
    2828:	99 1f       	adc	r25, r25
    282a:	aa 1f       	adc	r26, r26
    282c:	bb 1f       	adc	r27, r27
    282e:	9c 01       	movw	r18, r24
    2830:	ad 01       	movw	r20, r26
    2832:	80 e0       	ldi	r24, 0x00	; 0
    2834:	94 e2       	ldi	r25, 0x24	; 36
    2836:	a4 ef       	ldi	r26, 0xF4	; 244
    2838:	b0 e0       	ldi	r27, 0x00	; 0
    283a:	bc 01       	movw	r22, r24
    283c:	cd 01       	movw	r24, r26
    283e:	0e 94 63 4f 	call	0x9ec6	; 0x9ec6 <__udivmodsi4>
    2842:	da 01       	movw	r26, r20
    2844:	c9 01       	movw	r24, r18
    2846:	01 97       	sbiw	r24, 0x01	; 1
    2848:	a1 09       	sbc	r26, r1
    284a:	b1 09       	sbc	r27, r1
    284c:	bc 01       	movw	r22, r24
    284e:	cd 01       	movw	r24, r26
    2850:	0e 94 f3 4b 	call	0x97e6	; 0x97e6 <__floatunsisf>
    2854:	dc 01       	movw	r26, r24
    2856:	cb 01       	movw	r24, r22
    2858:	bc 01       	movw	r22, r24
    285a:	cd 01       	movw	r24, r26
    285c:	0e 94 30 4c 	call	0x9860	; 0x9860 <floor>
    2860:	dc 01       	movw	r26, r24
    2862:	cb 01       	movw	r24, r22
    2864:	bc 01       	movw	r22, r24
    2866:	cd 01       	movw	r24, r26
    2868:	0e 94 c7 4b 	call	0x978e	; 0x978e <__fixunssfsi>
    286c:	dc 01       	movw	r26, r24
    286e:	cb 01       	movw	r24, r22
    2870:	9a 83       	std	Y+2, r25	; 0x02
    2872:	89 83       	std	Y+1, r24	; 0x01
	}
	
	
	if (uartPort == Zero)
    2874:	8b 81       	ldd	r24, Y+3	; 0x03
    2876:	9c 81       	ldd	r25, Y+4	; 0x04
    2878:	fc 01       	movw	r30, r24
    287a:	86 81       	ldd	r24, Z+6	; 0x06
    287c:	88 23       	and	r24, r24
    287e:	41 f5       	brne	.+80     	; 0x28d0 <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x15e>
	{
		/* Set baud rate */
		UBRR0 = baudPrescaller;
    2880:	84 ec       	ldi	r24, 0xC4	; 196
    2882:	90 e0       	ldi	r25, 0x00	; 0
    2884:	29 81       	ldd	r18, Y+1	; 0x01
    2886:	3a 81       	ldd	r19, Y+2	; 0x02
    2888:	fc 01       	movw	r30, r24
    288a:	31 83       	std	Z+1, r19	; 0x01
    288c:	20 83       	st	Z, r18
		
		/* Set frame format: asynchronous usart, no parity 1stop bit, 8 bits of data, */
		UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);
    288e:	82 ec       	ldi	r24, 0xC2	; 194
    2890:	90 e0       	ldi	r25, 0x00	; 0
    2892:	22 ec       	ldi	r18, 0xC2	; 194
    2894:	30 e0       	ldi	r19, 0x00	; 0
    2896:	f9 01       	movw	r30, r18
    2898:	20 81       	ld	r18, Z
    289a:	26 60       	ori	r18, 0x06	; 6
    289c:	fc 01       	movw	r30, r24
    289e:	20 83       	st	Z, r18
		
		//If double speed mode flag was set, set the U2X0 flag to enable double speed mode.
		if (useDoubleSpeedMode)
    28a0:	8b 81       	ldd	r24, Y+3	; 0x03
    28a2:	9c 81       	ldd	r25, Y+4	; 0x04
    28a4:	fc 01       	movw	r30, r24
    28a6:	87 81       	ldd	r24, Z+7	; 0x07
    28a8:	88 23       	and	r24, r24
    28aa:	49 f0       	breq	.+18     	; 0x28be <_ZN10helicopter7drivers12SerialDriver10initializeEv+0x14c>
		{
			UCSR0A |= (1<<U2X0);
    28ac:	80 ec       	ldi	r24, 0xC0	; 192
    28ae:	90 e0       	ldi	r25, 0x00	; 0
    28b0:	20 ec       	ldi	r18, 0xC0	; 192
    28b2:	30 e0       	ldi	r19, 0x00	; 0
    28b4:	f9 01       	movw	r30, r18
    28b6:	20 81       	ld	r18, Z
    28b8:	22 60       	ori	r18, 0x02	; 2
    28ba:	fc 01       	movw	r30, r24
    28bc:	20 83       	st	Z, r18
		}
		
			
			
		/* Enable receiver and transmitter */
		UCSR0B |= (1<<RXEN0) | (1<<TXEN0);
    28be:	81 ec       	ldi	r24, 0xC1	; 193
    28c0:	90 e0       	ldi	r25, 0x00	; 0
    28c2:	21 ec       	ldi	r18, 0xC1	; 193
    28c4:	30 e0       	ldi	r19, 0x00	; 0
    28c6:	f9 01       	movw	r30, r18
    28c8:	20 81       	ld	r18, Z
    28ca:	28 61       	ori	r18, 0x18	; 24
    28cc:	fc 01       	movw	r30, r24
    28ce:	20 83       	st	Z, r18
	}
}
    28d0:	0f 90       	pop	r0
    28d2:	0f 90       	pop	r0
    28d4:	0f 90       	pop	r0
    28d6:	0f 90       	pop	r0
    28d8:	df 91       	pop	r29
    28da:	cf 91       	pop	r28
    28dc:	08 95       	ret

000028de <_ZN10helicopter7drivers12SerialDriver12transmitByteEhPNS_4util5TimerE>:

int SerialDriver::transmitByte(byte byteToSend, Timer *timer)
{
    28de:	cf 93       	push	r28
    28e0:	df 93       	push	r29
    28e2:	cd b7       	in	r28, 0x3d	; 61
    28e4:	de b7       	in	r29, 0x3e	; 62
    28e6:	27 97       	sbiw	r28, 0x07	; 7
    28e8:	0f b6       	in	r0, 0x3f	; 63
    28ea:	f8 94       	cli
    28ec:	de bf       	out	0x3e, r29	; 62
    28ee:	0f be       	out	0x3f, r0	; 63
    28f0:	cd bf       	out	0x3d, r28	; 61
    28f2:	9c 83       	std	Y+4, r25	; 0x04
    28f4:	8b 83       	std	Y+3, r24	; 0x03
    28f6:	6d 83       	std	Y+5, r22	; 0x05
    28f8:	5f 83       	std	Y+7, r21	; 0x07
    28fa:	4e 83       	std	Y+6, r20	; 0x06
	int status = 0;
    28fc:	1a 82       	std	Y+2, r1	; 0x02
    28fe:	19 82       	std	Y+1, r1	; 0x01
	
	if (uartPort == Zero)
    2900:	8b 81       	ldd	r24, Y+3	; 0x03
    2902:	9c 81       	ldd	r25, Y+4	; 0x04
    2904:	fc 01       	movw	r30, r24
    2906:	86 81       	ldd	r24, Z+6	; 0x06
    2908:	88 23       	and	r24, r24
    290a:	19 f5       	brne	.+70     	; 0x2952 <_ZN10helicopter7drivers12SerialDriver12transmitByteEhPNS_4util5TimerE+0x74>
	{

		/* Wait for empty transmit buffer */
		while ( !( UCSR0A & (1<<UDRE0)) )
    290c:	0b c0       	rjmp	.+22     	; 0x2924 <_ZN10helicopter7drivers12SerialDriver12transmitByteEhPNS_4util5TimerE+0x46>
		{
			//Check for timeout
			if (timer->hasTimedout())
    290e:	8e 81       	ldd	r24, Y+6	; 0x06
    2910:	9f 81       	ldd	r25, Y+7	; 0x07
    2912:	0e 94 b5 4a 	call	0x956a	; 0x956a <_ZN10helicopter4util5Timer11hasTimedoutEv>
    2916:	88 23       	and	r24, r24
    2918:	29 f0       	breq	.+10     	; 0x2924 <_ZN10helicopter7drivers12SerialDriver12transmitByteEhPNS_4util5TimerE+0x46>
			{
				status = -1;
    291a:	8f ef       	ldi	r24, 0xFF	; 255
    291c:	9f ef       	ldi	r25, 0xFF	; 255
    291e:	9a 83       	std	Y+2, r25	; 0x02
    2920:	89 83       	std	Y+1, r24	; 0x01
				break;
    2922:	0e c0       	rjmp	.+28     	; 0x2940 <_ZN10helicopter7drivers12SerialDriver12transmitByteEhPNS_4util5TimerE+0x62>
	
	if (uartPort == Zero)
	{

		/* Wait for empty transmit buffer */
		while ( !( UCSR0A & (1<<UDRE0)) )
    2924:	80 ec       	ldi	r24, 0xC0	; 192
    2926:	90 e0       	ldi	r25, 0x00	; 0
    2928:	fc 01       	movw	r30, r24
    292a:	80 81       	ld	r24, Z
    292c:	88 2f       	mov	r24, r24
    292e:	90 e0       	ldi	r25, 0x00	; 0
    2930:	80 72       	andi	r24, 0x20	; 32
    2932:	99 27       	eor	r25, r25
    2934:	21 e0       	ldi	r18, 0x01	; 1
    2936:	00 97       	sbiw	r24, 0x00	; 0
    2938:	09 f0       	breq	.+2      	; 0x293c <_ZN10helicopter7drivers12SerialDriver12transmitByteEhPNS_4util5TimerE+0x5e>
    293a:	20 e0       	ldi	r18, 0x00	; 0
    293c:	22 23       	and	r18, r18
    293e:	39 f7       	brne	.-50     	; 0x290e <_ZN10helicopter7drivers12SerialDriver12transmitByteEhPNS_4util5TimerE+0x30>
				status = -1;
				break;
			}
		}
				
		if (status == 0)
    2940:	89 81       	ldd	r24, Y+1	; 0x01
    2942:	9a 81       	ldd	r25, Y+2	; 0x02
    2944:	00 97       	sbiw	r24, 0x00	; 0
    2946:	29 f4       	brne	.+10     	; 0x2952 <_ZN10helicopter7drivers12SerialDriver12transmitByteEhPNS_4util5TimerE+0x74>
		{
			/* Put data into buffer, sends the data */
			UDR0 = byteToSend;			
    2948:	86 ec       	ldi	r24, 0xC6	; 198
    294a:	90 e0       	ldi	r25, 0x00	; 0
    294c:	2d 81       	ldd	r18, Y+5	; 0x05
    294e:	fc 01       	movw	r30, r24
    2950:	20 83       	st	Z, r18
		}

	}
	
	return status;
    2952:	89 81       	ldd	r24, Y+1	; 0x01
    2954:	9a 81       	ldd	r25, Y+2	; 0x02
}
    2956:	27 96       	adiw	r28, 0x07	; 7
    2958:	0f b6       	in	r0, 0x3f	; 63
    295a:	f8 94       	cli
    295c:	de bf       	out	0x3e, r29	; 62
    295e:	0f be       	out	0x3f, r0	; 63
    2960:	cd bf       	out	0x3d, r28	; 61
    2962:	df 91       	pop	r29
    2964:	cf 91       	pop	r28
    2966:	08 95       	ret

00002968 <_ZN10helicopter7drivers12SerialDriver11receiveByteERhPNS_4util5TimerE>:

int SerialDriver::receiveByte(byte &receivedByte, Timer *timer)
{
    2968:	cf 93       	push	r28
    296a:	df 93       	push	r29
    296c:	cd b7       	in	r28, 0x3d	; 61
    296e:	de b7       	in	r29, 0x3e	; 62
    2970:	28 97       	sbiw	r28, 0x08	; 8
    2972:	0f b6       	in	r0, 0x3f	; 63
    2974:	f8 94       	cli
    2976:	de bf       	out	0x3e, r29	; 62
    2978:	0f be       	out	0x3f, r0	; 63
    297a:	cd bf       	out	0x3d, r28	; 61
    297c:	9c 83       	std	Y+4, r25	; 0x04
    297e:	8b 83       	std	Y+3, r24	; 0x03
    2980:	7e 83       	std	Y+6, r23	; 0x06
    2982:	6d 83       	std	Y+5, r22	; 0x05
    2984:	58 87       	std	Y+8, r21	; 0x08
    2986:	4f 83       	std	Y+7, r20	; 0x07
	int status = 0;
    2988:	1a 82       	std	Y+2, r1	; 0x02
    298a:	19 82       	std	Y+1, r1	; 0x01
	
	if (uartPort == Zero)
    298c:	8b 81       	ldd	r24, Y+3	; 0x03
    298e:	9c 81       	ldd	r25, Y+4	; 0x04
    2990:	fc 01       	movw	r30, r24
    2992:	86 81       	ldd	r24, Z+6	; 0x06
    2994:	88 23       	and	r24, r24
    2996:	a1 f5       	brne	.+104    	; 0x2a00 <_ZN10helicopter7drivers12SerialDriver11receiveByteERhPNS_4util5TimerE+0x98>
	{
		
		/* Wait for data on the receive buffer */
		while ( !(UCSR0A & (1<<RXC0)))
    2998:	0b c0       	rjmp	.+22     	; 0x29b0 <_ZN10helicopter7drivers12SerialDriver11receiveByteERhPNS_4util5TimerE+0x48>
		{
			if (timer->hasTimedout())
    299a:	8f 81       	ldd	r24, Y+7	; 0x07
    299c:	98 85       	ldd	r25, Y+8	; 0x08
    299e:	0e 94 b5 4a 	call	0x956a	; 0x956a <_ZN10helicopter4util5Timer11hasTimedoutEv>
    29a2:	88 23       	and	r24, r24
    29a4:	29 f0       	breq	.+10     	; 0x29b0 <_ZN10helicopter7drivers12SerialDriver11receiveByteERhPNS_4util5TimerE+0x48>
			{
				status = -1;
    29a6:	8f ef       	ldi	r24, 0xFF	; 255
    29a8:	9f ef       	ldi	r25, 0xFF	; 255
    29aa:	9a 83       	std	Y+2, r25	; 0x02
    29ac:	89 83       	std	Y+1, r24	; 0x01
				break;
    29ae:	0a c0       	rjmp	.+20     	; 0x29c4 <_ZN10helicopter7drivers12SerialDriver11receiveByteERhPNS_4util5TimerE+0x5c>
	
	if (uartPort == Zero)
	{
		
		/* Wait for data on the receive buffer */
		while ( !(UCSR0A & (1<<RXC0)))
    29b0:	80 ec       	ldi	r24, 0xC0	; 192
    29b2:	90 e0       	ldi	r25, 0x00	; 0
    29b4:	fc 01       	movw	r30, r24
    29b6:	80 81       	ld	r24, Z
    29b8:	80 95       	com	r24
    29ba:	88 1f       	adc	r24, r24
    29bc:	88 27       	eor	r24, r24
    29be:	88 1f       	adc	r24, r24
    29c0:	88 23       	and	r24, r24
    29c2:	59 f7       	brne	.-42     	; 0x299a <_ZN10helicopter7drivers12SerialDriver11receiveByteERhPNS_4util5TimerE+0x32>
				status = -1;
				break;
			}
		}
		
		if (status == 0)
    29c4:	89 81       	ldd	r24, Y+1	; 0x01
    29c6:	9a 81       	ldd	r25, Y+2	; 0x02
    29c8:	00 97       	sbiw	r24, 0x00	; 0
    29ca:	d1 f4       	brne	.+52     	; 0x2a00 <_ZN10helicopter7drivers12SerialDriver11receiveByteERhPNS_4util5TimerE+0x98>
		{
			//determine if there has been a data overrun.
			if ((UCSR0A & (1 << DOR0)) != 0)
    29cc:	80 ec       	ldi	r24, 0xC0	; 192
    29ce:	90 e0       	ldi	r25, 0x00	; 0
    29d0:	fc 01       	movw	r30, r24
    29d2:	80 81       	ld	r24, Z
    29d4:	88 2f       	mov	r24, r24
    29d6:	90 e0       	ldi	r25, 0x00	; 0
    29d8:	88 70       	andi	r24, 0x08	; 8
    29da:	99 27       	eor	r25, r25
    29dc:	21 e0       	ldi	r18, 0x01	; 1
    29de:	00 97       	sbiw	r24, 0x00	; 0
    29e0:	09 f4       	brne	.+2      	; 0x29e4 <_ZN10helicopter7drivers12SerialDriver11receiveByteERhPNS_4util5TimerE+0x7c>
    29e2:	20 e0       	ldi	r18, 0x00	; 0
    29e4:	22 23       	and	r18, r18
    29e6:	21 f0       	breq	.+8      	; 0x29f0 <_ZN10helicopter7drivers12SerialDriver11receiveByteERhPNS_4util5TimerE+0x88>
			{
				status = -2;
    29e8:	8e ef       	ldi	r24, 0xFE	; 254
    29ea:	9f ef       	ldi	r25, 0xFF	; 255
    29ec:	9a 83       	std	Y+2, r25	; 0x02
    29ee:	89 83       	std	Y+1, r24	; 0x01
			}
		
			/* Read the data from the serial port buffer, even if the buffer was overrun */
			receivedByte = UDR0;
    29f0:	86 ec       	ldi	r24, 0xC6	; 198
    29f2:	90 e0       	ldi	r25, 0x00	; 0
    29f4:	fc 01       	movw	r30, r24
    29f6:	20 81       	ld	r18, Z
    29f8:	8d 81       	ldd	r24, Y+5	; 0x05
    29fa:	9e 81       	ldd	r25, Y+6	; 0x06
    29fc:	fc 01       	movw	r30, r24
    29fe:	20 83       	st	Z, r18
		}
	}

	return status;
    2a00:	89 81       	ldd	r24, Y+1	; 0x01
    2a02:	9a 81       	ldd	r25, Y+2	; 0x02
    2a04:	28 96       	adiw	r28, 0x08	; 8
    2a06:	0f b6       	in	r0, 0x3f	; 63
    2a08:	f8 94       	cli
    2a0a:	de bf       	out	0x3e, r29	; 62
    2a0c:	0f be       	out	0x3f, r0	; 63
    2a0e:	cd bf       	out	0x3d, r28	; 61
    2a10:	df 91       	pop	r29
    2a12:	cf 91       	pop	r28
    2a14:	08 95       	ret

00002a16 <_ZN10helicopter5tasks4TaskD1Ev>:
				 * @param period The number of scheduler 'ticks' to be executed before
				 * this task is ready to run.
				 */
				Task (int delay, int period);
				
				virtual ~Task(){}
    2a16:	cf 93       	push	r28
    2a18:	df 93       	push	r29
    2a1a:	1f 92       	push	r1
    2a1c:	1f 92       	push	r1
    2a1e:	cd b7       	in	r28, 0x3d	; 61
    2a20:	de b7       	in	r29, 0x3e	; 62
    2a22:	9a 83       	std	Y+2, r25	; 0x02
    2a24:	89 83       	std	Y+1, r24	; 0x01
    2a26:	89 81       	ldd	r24, Y+1	; 0x01
    2a28:	9a 81       	ldd	r25, Y+2	; 0x02
    2a2a:	22 e8       	ldi	r18, 0x82	; 130
    2a2c:	32 e0       	ldi	r19, 0x02	; 2
    2a2e:	fc 01       	movw	r30, r24
    2a30:	31 83       	std	Z+1, r19	; 0x01
    2a32:	20 83       	st	Z, r18
    2a34:	80 e0       	ldi	r24, 0x00	; 0
    2a36:	90 e0       	ldi	r25, 0x00	; 0
    2a38:	81 70       	andi	r24, 0x01	; 1
    2a3a:	99 27       	eor	r25, r25
    2a3c:	00 97       	sbiw	r24, 0x00	; 0
    2a3e:	21 f0       	breq	.+8      	; 0x2a48 <_ZN10helicopter5tasks4TaskD1Ev+0x32>
    2a40:	89 81       	ldd	r24, Y+1	; 0x01
    2a42:	9a 81       	ldd	r25, Y+2	; 0x02
    2a44:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    2a48:	0f 90       	pop	r0
    2a4a:	0f 90       	pop	r0
    2a4c:	df 91       	pop	r29
    2a4e:	cf 91       	pop	r28
    2a50:	08 95       	ret

00002a52 <_ZN10helicopter5tasks4TaskD0Ev>:
    2a52:	cf 93       	push	r28
    2a54:	df 93       	push	r29
    2a56:	1f 92       	push	r1
    2a58:	1f 92       	push	r1
    2a5a:	cd b7       	in	r28, 0x3d	; 61
    2a5c:	de b7       	in	r29, 0x3e	; 62
    2a5e:	9a 83       	std	Y+2, r25	; 0x02
    2a60:	89 83       	std	Y+1, r24	; 0x01
    2a62:	89 81       	ldd	r24, Y+1	; 0x01
    2a64:	9a 81       	ldd	r25, Y+2	; 0x02
    2a66:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <_ZN10helicopter5tasks4TaskD1Ev>
    2a6a:	89 81       	ldd	r24, Y+1	; 0x01
    2a6c:	9a 81       	ldd	r25, Y+2	; 0x02
    2a6e:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    2a72:	0f 90       	pop	r0
    2a74:	0f 90       	pop	r0
    2a76:	df 91       	pop	r29
    2a78:	cf 91       	pop	r28
    2a7a:	08 95       	ret

00002a7c <_ZN10helicopter5tasks12FlashLEDTaskC1Eiii>:
					
				int ledToBlink;
				
			public:

			FlashLEDTask (int delay, int period, int ledToBlink = BLUELED) : 
    2a7c:	cf 93       	push	r28
    2a7e:	df 93       	push	r29
    2a80:	cd b7       	in	r28, 0x3d	; 61
    2a82:	de b7       	in	r29, 0x3e	; 62
    2a84:	28 97       	sbiw	r28, 0x08	; 8
    2a86:	0f b6       	in	r0, 0x3f	; 63
    2a88:	f8 94       	cli
    2a8a:	de bf       	out	0x3e, r29	; 62
    2a8c:	0f be       	out	0x3f, r0	; 63
    2a8e:	cd bf       	out	0x3d, r28	; 61
    2a90:	9a 83       	std	Y+2, r25	; 0x02
    2a92:	89 83       	std	Y+1, r24	; 0x01
    2a94:	7c 83       	std	Y+4, r23	; 0x04
    2a96:	6b 83       	std	Y+3, r22	; 0x03
    2a98:	5e 83       	std	Y+6, r21	; 0x06
    2a9a:	4d 83       	std	Y+5, r20	; 0x05
    2a9c:	38 87       	std	Y+8, r19	; 0x08
    2a9e:	2f 83       	std	Y+7, r18	; 0x07
				Task(delay, period),
				isOff(false),
				ledToBlink(ledToBlink)
    2aa0:	89 81       	ldd	r24, Y+1	; 0x01
    2aa2:	9a 81       	ldd	r25, Y+2	; 0x02
    2aa4:	4d 81       	ldd	r20, Y+5	; 0x05
    2aa6:	5e 81       	ldd	r21, Y+6	; 0x06
    2aa8:	2b 81       	ldd	r18, Y+3	; 0x03
    2aaa:	3c 81       	ldd	r19, Y+4	; 0x04
    2aac:	b9 01       	movw	r22, r18
    2aae:	0e 94 fc 43 	call	0x87f8	; 0x87f8 <_ZN10helicopter5tasks4TaskC1Eii>
    2ab2:	89 81       	ldd	r24, Y+1	; 0x01
    2ab4:	9a 81       	ldd	r25, Y+2	; 0x02
    2ab6:	28 e1       	ldi	r18, 0x18	; 24
    2ab8:	32 e0       	ldi	r19, 0x02	; 2
    2aba:	fc 01       	movw	r30, r24
    2abc:	31 83       	std	Z+1, r19	; 0x01
    2abe:	20 83       	st	Z, r18
    2ac0:	89 81       	ldd	r24, Y+1	; 0x01
    2ac2:	9a 81       	ldd	r25, Y+2	; 0x02
    2ac4:	fc 01       	movw	r30, r24
    2ac6:	17 82       	std	Z+7, r1	; 0x07
    2ac8:	89 81       	ldd	r24, Y+1	; 0x01
    2aca:	9a 81       	ldd	r25, Y+2	; 0x02
    2acc:	2f 81       	ldd	r18, Y+7	; 0x07
    2ace:	38 85       	ldd	r19, Y+8	; 0x08
    2ad0:	fc 01       	movw	r30, r24
    2ad2:	31 87       	std	Z+9, r19	; 0x09
    2ad4:	20 87       	std	Z+8, r18	; 0x08
			{
					
			}
    2ad6:	28 96       	adiw	r28, 0x08	; 8
    2ad8:	0f b6       	in	r0, 0x3f	; 63
    2ada:	f8 94       	cli
    2adc:	de bf       	out	0x3e, r29	; 62
    2ade:	0f be       	out	0x3f, r0	; 63
    2ae0:	cd bf       	out	0x3d, r28	; 61
    2ae2:	df 91       	pop	r29
    2ae4:	cf 91       	pop	r28
    2ae6:	08 95       	ret

00002ae8 <_ZN10helicopter5tasks12FlashLEDTask4initEv>:
	
			void init()
    2ae8:	cf 93       	push	r28
    2aea:	df 93       	push	r29
    2aec:	1f 92       	push	r1
    2aee:	1f 92       	push	r1
    2af0:	cd b7       	in	r28, 0x3d	; 61
    2af2:	de b7       	in	r29, 0x3e	; 62
    2af4:	9a 83       	std	Y+2, r25	; 0x02
    2af6:	89 83       	std	Y+1, r24	; 0x01
			{
				DDRA |= (1<<ledToBlink);
    2af8:	81 e2       	ldi	r24, 0x21	; 33
    2afa:	90 e0       	ldi	r25, 0x00	; 0
    2afc:	21 e2       	ldi	r18, 0x21	; 33
    2afe:	30 e0       	ldi	r19, 0x00	; 0
    2b00:	f9 01       	movw	r30, r18
    2b02:	20 81       	ld	r18, Z
    2b04:	62 2f       	mov	r22, r18
    2b06:	29 81       	ldd	r18, Y+1	; 0x01
    2b08:	3a 81       	ldd	r19, Y+2	; 0x02
    2b0a:	f9 01       	movw	r30, r18
    2b0c:	40 85       	ldd	r20, Z+8	; 0x08
    2b0e:	51 85       	ldd	r21, Z+9	; 0x09
    2b10:	21 e0       	ldi	r18, 0x01	; 1
    2b12:	30 e0       	ldi	r19, 0x00	; 0
    2b14:	04 2e       	mov	r0, r20
    2b16:	02 c0       	rjmp	.+4      	; 0x2b1c <_ZN10helicopter5tasks12FlashLEDTask4initEv+0x34>
    2b18:	22 0f       	add	r18, r18
    2b1a:	33 1f       	adc	r19, r19
    2b1c:	0a 94       	dec	r0
    2b1e:	e2 f7       	brpl	.-8      	; 0x2b18 <_ZN10helicopter5tasks12FlashLEDTask4initEv+0x30>
    2b20:	26 2b       	or	r18, r22
    2b22:	fc 01       	movw	r30, r24
    2b24:	20 83       	st	Z, r18
			}
    2b26:	0f 90       	pop	r0
    2b28:	0f 90       	pop	r0
    2b2a:	df 91       	pop	r29
    2b2c:	cf 91       	pop	r28
    2b2e:	08 95       	ret

00002b30 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv>:
	
			/**
				* Flashes the LED
				*/
			void runTaskImpl() {
    2b30:	cf 93       	push	r28
    2b32:	df 93       	push	r29
    2b34:	1f 92       	push	r1
    2b36:	1f 92       	push	r1
    2b38:	cd b7       	in	r28, 0x3d	; 61
    2b3a:	de b7       	in	r29, 0x3e	; 62
    2b3c:	9a 83       	std	Y+2, r25	; 0x02
    2b3e:	89 83       	std	Y+1, r24	; 0x01
				if (isOff)
    2b40:	89 81       	ldd	r24, Y+1	; 0x01
    2b42:	9a 81       	ldd	r25, Y+2	; 0x02
    2b44:	fc 01       	movw	r30, r24
    2b46:	87 81       	ldd	r24, Z+7	; 0x07
    2b48:	88 23       	and	r24, r24
    2b4a:	e9 f0       	breq	.+58     	; 0x2b86 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x56>
				{
					//Turn On the LED
					PORTA &= ~(1<<ledToBlink);
    2b4c:	82 e2       	ldi	r24, 0x22	; 34
    2b4e:	90 e0       	ldi	r25, 0x00	; 0
    2b50:	22 e2       	ldi	r18, 0x22	; 34
    2b52:	30 e0       	ldi	r19, 0x00	; 0
    2b54:	f9 01       	movw	r30, r18
    2b56:	20 81       	ld	r18, Z
    2b58:	62 2f       	mov	r22, r18
    2b5a:	29 81       	ldd	r18, Y+1	; 0x01
    2b5c:	3a 81       	ldd	r19, Y+2	; 0x02
    2b5e:	f9 01       	movw	r30, r18
    2b60:	40 85       	ldd	r20, Z+8	; 0x08
    2b62:	51 85       	ldd	r21, Z+9	; 0x09
    2b64:	21 e0       	ldi	r18, 0x01	; 1
    2b66:	30 e0       	ldi	r19, 0x00	; 0
    2b68:	04 2e       	mov	r0, r20
    2b6a:	02 c0       	rjmp	.+4      	; 0x2b70 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x40>
    2b6c:	22 0f       	add	r18, r18
    2b6e:	33 1f       	adc	r19, r19
    2b70:	0a 94       	dec	r0
    2b72:	e2 f7       	brpl	.-8      	; 0x2b6c <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x3c>
    2b74:	20 95       	com	r18
    2b76:	26 23       	and	r18, r22
    2b78:	fc 01       	movw	r30, r24
    2b7a:	20 83       	st	Z, r18
					isOff = false;
    2b7c:	89 81       	ldd	r24, Y+1	; 0x01
    2b7e:	9a 81       	ldd	r25, Y+2	; 0x02
    2b80:	fc 01       	movw	r30, r24
    2b82:	17 82       	std	Z+7, r1	; 0x07
    2b84:	1c c0       	rjmp	.+56     	; 0x2bbe <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x8e>
				}else
				{
					//Turn Off the LED
					PORTA |= (1<<ledToBlink);
    2b86:	82 e2       	ldi	r24, 0x22	; 34
    2b88:	90 e0       	ldi	r25, 0x00	; 0
    2b8a:	22 e2       	ldi	r18, 0x22	; 34
    2b8c:	30 e0       	ldi	r19, 0x00	; 0
    2b8e:	f9 01       	movw	r30, r18
    2b90:	20 81       	ld	r18, Z
    2b92:	62 2f       	mov	r22, r18
    2b94:	29 81       	ldd	r18, Y+1	; 0x01
    2b96:	3a 81       	ldd	r19, Y+2	; 0x02
    2b98:	f9 01       	movw	r30, r18
    2b9a:	40 85       	ldd	r20, Z+8	; 0x08
    2b9c:	51 85       	ldd	r21, Z+9	; 0x09
    2b9e:	21 e0       	ldi	r18, 0x01	; 1
    2ba0:	30 e0       	ldi	r19, 0x00	; 0
    2ba2:	04 2e       	mov	r0, r20
    2ba4:	02 c0       	rjmp	.+4      	; 0x2baa <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x7a>
    2ba6:	22 0f       	add	r18, r18
    2ba8:	33 1f       	adc	r19, r19
    2baa:	0a 94       	dec	r0
    2bac:	e2 f7       	brpl	.-8      	; 0x2ba6 <_ZN10helicopter5tasks12FlashLEDTask11runTaskImplEv+0x76>
    2bae:	26 2b       	or	r18, r22
    2bb0:	fc 01       	movw	r30, r24
    2bb2:	20 83       	st	Z, r18
					isOff = true;
    2bb4:	89 81       	ldd	r24, Y+1	; 0x01
    2bb6:	9a 81       	ldd	r25, Y+2	; 0x02
    2bb8:	21 e0       	ldi	r18, 0x01	; 1
    2bba:	fc 01       	movw	r30, r24
    2bbc:	27 83       	std	Z+7, r18	; 0x07
				}
			}
    2bbe:	0f 90       	pop	r0
    2bc0:	0f 90       	pop	r0
    2bc2:	df 91       	pop	r29
    2bc4:	cf 91       	pop	r28
    2bc6:	08 95       	ret

00002bc8 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEv>:
				 * Detects if the processing was completed before the next scheduler triggered.
				 * @return True if the scheduler timer triggered again before the tasks were fully processes,
				 * False if all the tasks were finished processing (i.e. the dispatch method finished) before
				 * the timer triggered again.
				 */
				bool hasBlownFrame()
    2bc8:	cf 93       	push	r28
    2bca:	df 93       	push	r29
    2bcc:	1f 92       	push	r1
    2bce:	1f 92       	push	r1
    2bd0:	cd b7       	in	r28, 0x3d	; 61
    2bd2:	de b7       	in	r29, 0x3e	; 62
    2bd4:	9a 83       	std	Y+2, r25	; 0x02
    2bd6:	89 83       	std	Y+1, r24	; 0x01
				{
					return blowFrameDetected;
    2bd8:	89 81       	ldd	r24, Y+1	; 0x01
    2bda:	9a 81       	ldd	r25, Y+2	; 0x02
    2bdc:	fc 01       	movw	r30, r24
    2bde:	82 8d       	ldd	r24, Z+26	; 0x1a
				}
    2be0:	0f 90       	pop	r0
    2be2:	0f 90       	pop	r0
    2be4:	df 91       	pop	r29
    2be6:	cf 91       	pop	r28
    2be8:	08 95       	ret

00002bea <_ZN10helicopter4util5TimerC1Em9PRESCALERm>:
				 * @timeoutMilliseconds the milliseconds that should go by before the
				 * timer times out. This value must be under 1000.
				 * These variables will have to adhere to this equation:
				 * OCR = ((cpuSpeed /  timerPrescaler) / frequency)
				 */
				Timer (unsigned long cpuSpeed, PRESCALER timerPrescaler, unsigned long timeoutMilliseconds):
    2bea:	ef 92       	push	r14
    2bec:	ff 92       	push	r15
    2bee:	0f 93       	push	r16
    2bf0:	1f 93       	push	r17
    2bf2:	cf 93       	push	r28
    2bf4:	df 93       	push	r29
    2bf6:	cd b7       	in	r28, 0x3d	; 61
    2bf8:	de b7       	in	r29, 0x3e	; 62
    2bfa:	2c 97       	sbiw	r28, 0x0c	; 12
    2bfc:	0f b6       	in	r0, 0x3f	; 63
    2bfe:	f8 94       	cli
    2c00:	de bf       	out	0x3e, r29	; 62
    2c02:	0f be       	out	0x3f, r0	; 63
    2c04:	cd bf       	out	0x3d, r28	; 61
    2c06:	9a 83       	std	Y+2, r25	; 0x02
    2c08:	89 83       	std	Y+1, r24	; 0x01
    2c0a:	4b 83       	std	Y+3, r20	; 0x03
    2c0c:	5c 83       	std	Y+4, r21	; 0x04
    2c0e:	6d 83       	std	Y+5, r22	; 0x05
    2c10:	7e 83       	std	Y+6, r23	; 0x06
    2c12:	38 87       	std	Y+8, r19	; 0x08
    2c14:	2f 83       	std	Y+7, r18	; 0x07
    2c16:	e9 86       	std	Y+9, r14	; 0x09
    2c18:	fa 86       	std	Y+10, r15	; 0x0a
    2c1a:	0b 87       	std	Y+11, r16	; 0x0b
    2c1c:	1c 87       	std	Y+12, r17	; 0x0c
					cpuSpeed(cpuSpeed), timerPrescaler(timerPrescaler), timeoutMilliseconds(timeoutMilliseconds)
    2c1e:	29 81       	ldd	r18, Y+1	; 0x01
    2c20:	3a 81       	ldd	r19, Y+2	; 0x02
    2c22:	8b 81       	ldd	r24, Y+3	; 0x03
    2c24:	9c 81       	ldd	r25, Y+4	; 0x04
    2c26:	ad 81       	ldd	r26, Y+5	; 0x05
    2c28:	be 81       	ldd	r27, Y+6	; 0x06
    2c2a:	f9 01       	movw	r30, r18
    2c2c:	80 83       	st	Z, r24
    2c2e:	91 83       	std	Z+1, r25	; 0x01
    2c30:	a2 83       	std	Z+2, r26	; 0x02
    2c32:	b3 83       	std	Z+3, r27	; 0x03
    2c34:	89 81       	ldd	r24, Y+1	; 0x01
    2c36:	9a 81       	ldd	r25, Y+2	; 0x02
    2c38:	2f 81       	ldd	r18, Y+7	; 0x07
    2c3a:	38 85       	ldd	r19, Y+8	; 0x08
    2c3c:	fc 01       	movw	r30, r24
    2c3e:	35 83       	std	Z+5, r19	; 0x05
    2c40:	24 83       	std	Z+4, r18	; 0x04
    2c42:	29 85       	ldd	r18, Y+9	; 0x09
    2c44:	3a 85       	ldd	r19, Y+10	; 0x0a
    2c46:	89 81       	ldd	r24, Y+1	; 0x01
    2c48:	9a 81       	ldd	r25, Y+2	; 0x02
    2c4a:	fc 01       	movw	r30, r24
    2c4c:	37 83       	std	Z+7, r19	; 0x07
    2c4e:	26 83       	std	Z+6, r18	; 0x06
					{
						
					}
    2c50:	2c 96       	adiw	r28, 0x0c	; 12
    2c52:	0f b6       	in	r0, 0x3f	; 63
    2c54:	f8 94       	cli
    2c56:	de bf       	out	0x3e, r29	; 62
    2c58:	0f be       	out	0x3f, r0	; 63
    2c5a:	cd bf       	out	0x3d, r28	; 61
    2c5c:	df 91       	pop	r29
    2c5e:	cf 91       	pop	r28
    2c60:	1f 91       	pop	r17
    2c62:	0f 91       	pop	r16
    2c64:	ff 90       	pop	r15
    2c66:	ef 90       	pop	r14
    2c68:	08 95       	ret

00002c6a <_ZN10helicopter7drivers12SerialDriverC1EmNS1_8UartPortEb>:
				 * @param useDoubleSpeedMode A flag indicating if double speed mode should
				 * be used when calculating the baud rate configurations. This is useful for
				 * using the radio interface because it seems to have issues if double speed
				 * mode isn't set to true.
				 */		
				SerialDriver(
    2c6a:	0f 93       	push	r16
    2c6c:	cf 93       	push	r28
    2c6e:	df 93       	push	r29
    2c70:	cd b7       	in	r28, 0x3d	; 61
    2c72:	de b7       	in	r29, 0x3e	; 62
    2c74:	28 97       	sbiw	r28, 0x08	; 8
    2c76:	0f b6       	in	r0, 0x3f	; 63
    2c78:	f8 94       	cli
    2c7a:	de bf       	out	0x3e, r29	; 62
    2c7c:	0f be       	out	0x3f, r0	; 63
    2c7e:	cd bf       	out	0x3d, r28	; 61
    2c80:	9a 83       	std	Y+2, r25	; 0x02
    2c82:	89 83       	std	Y+1, r24	; 0x01
    2c84:	4b 83       	std	Y+3, r20	; 0x03
    2c86:	5c 83       	std	Y+4, r21	; 0x04
    2c88:	6d 83       	std	Y+5, r22	; 0x05
    2c8a:	7e 83       	std	Y+6, r23	; 0x06
    2c8c:	2f 83       	std	Y+7, r18	; 0x07
    2c8e:	08 87       	std	Y+8, r16	; 0x08
					unsigned long baudRate, 
					UartPort uartPort,
					bool useDoubleSpeedMode = true) :
				baudRate(baudRate),
				uartPort(uartPort),
				useDoubleSpeedMode(useDoubleSpeedMode)
    2c90:	89 81       	ldd	r24, Y+1	; 0x01
    2c92:	9a 81       	ldd	r25, Y+2	; 0x02
    2c94:	2a e0       	ldi	r18, 0x0A	; 10
    2c96:	32 e0       	ldi	r19, 0x02	; 2
    2c98:	fc 01       	movw	r30, r24
    2c9a:	31 83       	std	Z+1, r19	; 0x01
    2c9c:	20 83       	st	Z, r18
    2c9e:	29 81       	ldd	r18, Y+1	; 0x01
    2ca0:	3a 81       	ldd	r19, Y+2	; 0x02
    2ca2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ca4:	9c 81       	ldd	r25, Y+4	; 0x04
    2ca6:	ad 81       	ldd	r26, Y+5	; 0x05
    2ca8:	be 81       	ldd	r27, Y+6	; 0x06
    2caa:	f9 01       	movw	r30, r18
    2cac:	82 83       	std	Z+2, r24	; 0x02
    2cae:	93 83       	std	Z+3, r25	; 0x03
    2cb0:	a4 83       	std	Z+4, r26	; 0x04
    2cb2:	b5 83       	std	Z+5, r27	; 0x05
    2cb4:	89 81       	ldd	r24, Y+1	; 0x01
    2cb6:	9a 81       	ldd	r25, Y+2	; 0x02
    2cb8:	2f 81       	ldd	r18, Y+7	; 0x07
    2cba:	fc 01       	movw	r30, r24
    2cbc:	26 83       	std	Z+6, r18	; 0x06
    2cbe:	89 81       	ldd	r24, Y+1	; 0x01
    2cc0:	9a 81       	ldd	r25, Y+2	; 0x02
    2cc2:	28 85       	ldd	r18, Y+8	; 0x08
    2cc4:	fc 01       	movw	r30, r24
    2cc6:	27 83       	std	Z+7, r18	; 0x07
				{
					
				}
    2cc8:	28 96       	adiw	r28, 0x08	; 8
    2cca:	0f b6       	in	r0, 0x3f	; 63
    2ccc:	f8 94       	cli
    2cce:	de bf       	out	0x3e, r29	; 62
    2cd0:	0f be       	out	0x3f, r0	; 63
    2cd2:	cd bf       	out	0x3d, r28	; 61
    2cd4:	df 91       	pop	r29
    2cd6:	cf 91       	pop	r28
    2cd8:	0f 91       	pop	r16
    2cda:	08 95       	ret

00002cdc <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverEPNS_4util5TimerEb>:
				 * data or receiving data.
				 * @param enableTimeout A flag indicating if the timer should be used to determine if the system should
				 * timeout when sending and receiving data. If false, the system will wait indefiniately for data.
				 * if true, the system will only wait a short period of time (specified by the timer) before continuing on.
				 */
				GroundControlStationInterface(SerialDriver *serialDriver, Timer *timer, bool enableTimeout = true):
    2cdc:	cf 93       	push	r28
    2cde:	df 93       	push	r29
    2ce0:	cd b7       	in	r28, 0x3d	; 61
    2ce2:	de b7       	in	r29, 0x3e	; 62
    2ce4:	27 97       	sbiw	r28, 0x07	; 7
    2ce6:	0f b6       	in	r0, 0x3f	; 63
    2ce8:	f8 94       	cli
    2cea:	de bf       	out	0x3e, r29	; 62
    2cec:	0f be       	out	0x3f, r0	; 63
    2cee:	cd bf       	out	0x3d, r28	; 61
    2cf0:	9a 83       	std	Y+2, r25	; 0x02
    2cf2:	89 83       	std	Y+1, r24	; 0x01
    2cf4:	7c 83       	std	Y+4, r23	; 0x04
    2cf6:	6b 83       	std	Y+3, r22	; 0x03
    2cf8:	5e 83       	std	Y+6, r21	; 0x06
    2cfa:	4d 83       	std	Y+5, r20	; 0x05
    2cfc:	2f 83       	std	Y+7, r18	; 0x07
					serialDriver(serialDriver),
					timer(timer),
					enableTimeout(enableTimeout)
    2cfe:	89 81       	ldd	r24, Y+1	; 0x01
    2d00:	9a 81       	ldd	r25, Y+2	; 0x02
    2d02:	2b 81       	ldd	r18, Y+3	; 0x03
    2d04:	3c 81       	ldd	r19, Y+4	; 0x04
    2d06:	fc 01       	movw	r30, r24
    2d08:	31 83       	std	Z+1, r19	; 0x01
    2d0a:	20 83       	st	Z, r18
    2d0c:	89 81       	ldd	r24, Y+1	; 0x01
    2d0e:	9a 81       	ldd	r25, Y+2	; 0x02
    2d10:	2d 81       	ldd	r18, Y+5	; 0x05
    2d12:	3e 81       	ldd	r19, Y+6	; 0x06
    2d14:	fc 01       	movw	r30, r24
    2d16:	33 83       	std	Z+3, r19	; 0x03
    2d18:	22 83       	std	Z+2, r18	; 0x02
    2d1a:	89 81       	ldd	r24, Y+1	; 0x01
    2d1c:	9a 81       	ldd	r25, Y+2	; 0x02
    2d1e:	2f 81       	ldd	r18, Y+7	; 0x07
    2d20:	fc 01       	movw	r30, r24
    2d22:	24 83       	std	Z+4, r18	; 0x04
					{}
    2d24:	27 96       	adiw	r28, 0x07	; 7
    2d26:	0f b6       	in	r0, 0x3f	; 63
    2d28:	f8 94       	cli
    2d2a:	de bf       	out	0x3e, r29	; 62
    2d2c:	0f be       	out	0x3f, r0	; 63
    2d2e:	cd bf       	out	0x3d, r28	; 61
    2d30:	df 91       	pop	r29
    2d32:	cf 91       	pop	r28
    2d34:	08 95       	ret

00002d36 <_ZN10helicopter5model11SystemModelC1Ev>:
			
			public:
			
			float EcefToLocalNEDRotationMatrix[3][3];
			
			SystemModel():
    2d36:	cf 93       	push	r28
    2d38:	df 93       	push	r29
    2d3a:	1f 92       	push	r1
    2d3c:	1f 92       	push	r1
    2d3e:	cd b7       	in	r28, 0x3d	; 61
    2d40:	de b7       	in	r29, 0x3e	; 62
    2d42:	9a 83       	std	Y+2, r25	; 0x02
    2d44:	89 83       	std	Y+1, r24	; 0x01
				numOfFramesBlown(0),
				serialCommunicationBufferOverruns(0),
				
				initialXPositionEcef(0),
				initialYPositionEcef(0),
				initialZPositionEcef(0)
    2d46:	89 81       	ldd	r24, Y+1	; 0x01
    2d48:	9a 81       	ldd	r25, Y+2	; 0x02
    2d4a:	fc 01       	movw	r30, r24
    2d4c:	10 82       	st	Z, r1
    2d4e:	89 81       	ldd	r24, Y+1	; 0x01
    2d50:	9a 81       	ldd	r25, Y+2	; 0x02
    2d52:	fc 01       	movw	r30, r24
    2d54:	11 82       	std	Z+1, r1	; 0x01
    2d56:	12 82       	std	Z+2, r1	; 0x02
    2d58:	13 82       	std	Z+3, r1	; 0x03
    2d5a:	14 82       	std	Z+4, r1	; 0x04
    2d5c:	89 81       	ldd	r24, Y+1	; 0x01
    2d5e:	9a 81       	ldd	r25, Y+2	; 0x02
    2d60:	fc 01       	movw	r30, r24
    2d62:	15 82       	std	Z+5, r1	; 0x05
    2d64:	16 82       	std	Z+6, r1	; 0x06
    2d66:	17 82       	std	Z+7, r1	; 0x07
    2d68:	10 86       	std	Z+8, r1	; 0x08
    2d6a:	89 81       	ldd	r24, Y+1	; 0x01
    2d6c:	9a 81       	ldd	r25, Y+2	; 0x02
    2d6e:	fc 01       	movw	r30, r24
    2d70:	11 86       	std	Z+9, r1	; 0x09
    2d72:	12 86       	std	Z+10, r1	; 0x0a
    2d74:	13 86       	std	Z+11, r1	; 0x0b
    2d76:	14 86       	std	Z+12, r1	; 0x0c
    2d78:	89 81       	ldd	r24, Y+1	; 0x01
    2d7a:	9a 81       	ldd	r25, Y+2	; 0x02
    2d7c:	fc 01       	movw	r30, r24
    2d7e:	15 86       	std	Z+13, r1	; 0x0d
    2d80:	16 86       	std	Z+14, r1	; 0x0e
    2d82:	17 86       	std	Z+15, r1	; 0x0f
    2d84:	10 8a       	std	Z+16, r1	; 0x10
    2d86:	89 81       	ldd	r24, Y+1	; 0x01
    2d88:	9a 81       	ldd	r25, Y+2	; 0x02
    2d8a:	fc 01       	movw	r30, r24
    2d8c:	11 8a       	std	Z+17, r1	; 0x11
    2d8e:	12 8a       	std	Z+18, r1	; 0x12
    2d90:	13 8a       	std	Z+19, r1	; 0x13
    2d92:	14 8a       	std	Z+20, r1	; 0x14
    2d94:	89 81       	ldd	r24, Y+1	; 0x01
    2d96:	9a 81       	ldd	r25, Y+2	; 0x02
    2d98:	fc 01       	movw	r30, r24
    2d9a:	15 8a       	std	Z+21, r1	; 0x15
    2d9c:	16 8a       	std	Z+22, r1	; 0x16
    2d9e:	17 8a       	std	Z+23, r1	; 0x17
    2da0:	10 8e       	std	Z+24, r1	; 0x18
    2da2:	89 81       	ldd	r24, Y+1	; 0x01
    2da4:	9a 81       	ldd	r25, Y+2	; 0x02
    2da6:	fc 01       	movw	r30, r24
    2da8:	11 8e       	std	Z+25, r1	; 0x19
    2daa:	12 8e       	std	Z+26, r1	; 0x1a
    2dac:	13 8e       	std	Z+27, r1	; 0x1b
    2dae:	14 8e       	std	Z+28, r1	; 0x1c
    2db0:	89 81       	ldd	r24, Y+1	; 0x01
    2db2:	9a 81       	ldd	r25, Y+2	; 0x02
    2db4:	fc 01       	movw	r30, r24
    2db6:	15 8e       	std	Z+29, r1	; 0x1d
    2db8:	16 8e       	std	Z+30, r1	; 0x1e
    2dba:	17 8e       	std	Z+31, r1	; 0x1f
    2dbc:	10 a2       	std	Z+32, r1	; 0x20
    2dbe:	89 81       	ldd	r24, Y+1	; 0x01
    2dc0:	9a 81       	ldd	r25, Y+2	; 0x02
    2dc2:	fc 01       	movw	r30, r24
    2dc4:	11 a2       	std	Z+33, r1	; 0x21
    2dc6:	12 a2       	std	Z+34, r1	; 0x22
    2dc8:	13 a2       	std	Z+35, r1	; 0x23
    2dca:	14 a2       	std	Z+36, r1	; 0x24
    2dcc:	89 81       	ldd	r24, Y+1	; 0x01
    2dce:	9a 81       	ldd	r25, Y+2	; 0x02
    2dd0:	fc 01       	movw	r30, r24
    2dd2:	15 a2       	std	Z+37, r1	; 0x25
    2dd4:	16 a2       	std	Z+38, r1	; 0x26
    2dd6:	17 a2       	std	Z+39, r1	; 0x27
    2dd8:	10 a6       	std	Z+40, r1	; 0x28
    2dda:	89 81       	ldd	r24, Y+1	; 0x01
    2ddc:	9a 81       	ldd	r25, Y+2	; 0x02
    2dde:	fc 01       	movw	r30, r24
    2de0:	11 a6       	std	Z+41, r1	; 0x29
    2de2:	12 a6       	std	Z+42, r1	; 0x2a
    2de4:	13 a6       	std	Z+43, r1	; 0x2b
    2de6:	14 a6       	std	Z+44, r1	; 0x2c
    2de8:	89 81       	ldd	r24, Y+1	; 0x01
    2dea:	9a 81       	ldd	r25, Y+2	; 0x02
    2dec:	fc 01       	movw	r30, r24
    2dee:	15 a6       	std	Z+45, r1	; 0x2d
    2df0:	16 a6       	std	Z+46, r1	; 0x2e
    2df2:	17 a6       	std	Z+47, r1	; 0x2f
    2df4:	10 aa       	std	Z+48, r1	; 0x30
    2df6:	89 81       	ldd	r24, Y+1	; 0x01
    2df8:	9a 81       	ldd	r25, Y+2	; 0x02
    2dfa:	fc 01       	movw	r30, r24
    2dfc:	11 aa       	std	Z+49, r1	; 0x31
    2dfe:	12 aa       	std	Z+50, r1	; 0x32
    2e00:	13 aa       	std	Z+51, r1	; 0x33
    2e02:	14 aa       	std	Z+52, r1	; 0x34
    2e04:	89 81       	ldd	r24, Y+1	; 0x01
    2e06:	9a 81       	ldd	r25, Y+2	; 0x02
    2e08:	fc 01       	movw	r30, r24
    2e0a:	15 aa       	std	Z+53, r1	; 0x35
    2e0c:	16 aa       	std	Z+54, r1	; 0x36
    2e0e:	17 aa       	std	Z+55, r1	; 0x37
    2e10:	10 ae       	std	Z+56, r1	; 0x38
    2e12:	89 81       	ldd	r24, Y+1	; 0x01
    2e14:	9a 81       	ldd	r25, Y+2	; 0x02
    2e16:	fc 01       	movw	r30, r24
    2e18:	11 ae       	std	Z+57, r1	; 0x39
    2e1a:	12 ae       	std	Z+58, r1	; 0x3a
    2e1c:	13 ae       	std	Z+59, r1	; 0x3b
    2e1e:	14 ae       	std	Z+60, r1	; 0x3c
    2e20:	89 81       	ldd	r24, Y+1	; 0x01
    2e22:	9a 81       	ldd	r25, Y+2	; 0x02
    2e24:	cd 96       	adiw	r24, 0x3d	; 61
    2e26:	fc 01       	movw	r30, r24
    2e28:	10 82       	st	Z, r1
    2e2a:	11 82       	std	Z+1, r1	; 0x01
    2e2c:	12 82       	std	Z+2, r1	; 0x02
    2e2e:	13 82       	std	Z+3, r1	; 0x03
    2e30:	89 81       	ldd	r24, Y+1	; 0x01
    2e32:	9a 81       	ldd	r25, Y+2	; 0x02
    2e34:	8f 5b       	subi	r24, 0xBF	; 191
    2e36:	9f 4f       	sbci	r25, 0xFF	; 255
    2e38:	fc 01       	movw	r30, r24
    2e3a:	10 82       	st	Z, r1
    2e3c:	11 82       	std	Z+1, r1	; 0x01
    2e3e:	12 82       	std	Z+2, r1	; 0x02
    2e40:	13 82       	std	Z+3, r1	; 0x03
    2e42:	89 81       	ldd	r24, Y+1	; 0x01
    2e44:	9a 81       	ldd	r25, Y+2	; 0x02
    2e46:	8b 5b       	subi	r24, 0xBB	; 187
    2e48:	9f 4f       	sbci	r25, 0xFF	; 255
    2e4a:	fc 01       	movw	r30, r24
    2e4c:	10 82       	st	Z, r1
    2e4e:	11 82       	std	Z+1, r1	; 0x01
    2e50:	12 82       	std	Z+2, r1	; 0x02
    2e52:	13 82       	std	Z+3, r1	; 0x03
    2e54:	89 81       	ldd	r24, Y+1	; 0x01
    2e56:	9a 81       	ldd	r25, Y+2	; 0x02
    2e58:	87 5b       	subi	r24, 0xB7	; 183
    2e5a:	9f 4f       	sbci	r25, 0xFF	; 255
    2e5c:	fc 01       	movw	r30, r24
    2e5e:	10 82       	st	Z, r1
    2e60:	11 82       	std	Z+1, r1	; 0x01
    2e62:	12 82       	std	Z+2, r1	; 0x02
    2e64:	13 82       	std	Z+3, r1	; 0x03
    2e66:	89 81       	ldd	r24, Y+1	; 0x01
    2e68:	9a 81       	ldd	r25, Y+2	; 0x02
    2e6a:	83 5b       	subi	r24, 0xB3	; 179
    2e6c:	9f 4f       	sbci	r25, 0xFF	; 255
    2e6e:	fc 01       	movw	r30, r24
    2e70:	10 82       	st	Z, r1
    2e72:	11 82       	std	Z+1, r1	; 0x01
    2e74:	12 82       	std	Z+2, r1	; 0x02
    2e76:	13 82       	std	Z+3, r1	; 0x03
    2e78:	89 81       	ldd	r24, Y+1	; 0x01
    2e7a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e7c:	8f 5a       	subi	r24, 0xAF	; 175
    2e7e:	9f 4f       	sbci	r25, 0xFF	; 255
    2e80:	fc 01       	movw	r30, r24
    2e82:	10 82       	st	Z, r1
    2e84:	11 82       	std	Z+1, r1	; 0x01
    2e86:	12 82       	std	Z+2, r1	; 0x02
    2e88:	13 82       	std	Z+3, r1	; 0x03
    2e8a:	89 81       	ldd	r24, Y+1	; 0x01
    2e8c:	9a 81       	ldd	r25, Y+2	; 0x02
    2e8e:	8b 5a       	subi	r24, 0xAB	; 171
    2e90:	9f 4f       	sbci	r25, 0xFF	; 255
    2e92:	fc 01       	movw	r30, r24
    2e94:	10 82       	st	Z, r1
    2e96:	11 82       	std	Z+1, r1	; 0x01
    2e98:	12 82       	std	Z+2, r1	; 0x02
    2e9a:	13 82       	std	Z+3, r1	; 0x03
    2e9c:	89 81       	ldd	r24, Y+1	; 0x01
    2e9e:	9a 81       	ldd	r25, Y+2	; 0x02
    2ea0:	87 5a       	subi	r24, 0xA7	; 167
    2ea2:	9f 4f       	sbci	r25, 0xFF	; 255
    2ea4:	fc 01       	movw	r30, r24
    2ea6:	10 82       	st	Z, r1
    2ea8:	11 82       	std	Z+1, r1	; 0x01
    2eaa:	12 82       	std	Z+2, r1	; 0x02
    2eac:	13 82       	std	Z+3, r1	; 0x03
    2eae:	89 81       	ldd	r24, Y+1	; 0x01
    2eb0:	9a 81       	ldd	r25, Y+2	; 0x02
    2eb2:	83 5a       	subi	r24, 0xA3	; 163
    2eb4:	9f 4f       	sbci	r25, 0xFF	; 255
    2eb6:	fc 01       	movw	r30, r24
    2eb8:	10 82       	st	Z, r1
    2eba:	11 82       	std	Z+1, r1	; 0x01
    2ebc:	12 82       	std	Z+2, r1	; 0x02
    2ebe:	13 82       	std	Z+3, r1	; 0x03
    2ec0:	89 81       	ldd	r24, Y+1	; 0x01
    2ec2:	9a 81       	ldd	r25, Y+2	; 0x02
    2ec4:	8f 59       	subi	r24, 0x9F	; 159
    2ec6:	9f 4f       	sbci	r25, 0xFF	; 255
    2ec8:	fc 01       	movw	r30, r24
    2eca:	10 82       	st	Z, r1
    2ecc:	11 82       	std	Z+1, r1	; 0x01
    2ece:	12 82       	std	Z+2, r1	; 0x02
    2ed0:	13 82       	std	Z+3, r1	; 0x03
    2ed2:	89 81       	ldd	r24, Y+1	; 0x01
    2ed4:	9a 81       	ldd	r25, Y+2	; 0x02
    2ed6:	8b 59       	subi	r24, 0x9B	; 155
    2ed8:	9f 4f       	sbci	r25, 0xFF	; 255
    2eda:	fc 01       	movw	r30, r24
    2edc:	10 82       	st	Z, r1
    2ede:	11 82       	std	Z+1, r1	; 0x01
    2ee0:	12 82       	std	Z+2, r1	; 0x02
    2ee2:	13 82       	std	Z+3, r1	; 0x03
    2ee4:	89 81       	ldd	r24, Y+1	; 0x01
    2ee6:	9a 81       	ldd	r25, Y+2	; 0x02
    2ee8:	87 59       	subi	r24, 0x97	; 151
    2eea:	9f 4f       	sbci	r25, 0xFF	; 255
    2eec:	fc 01       	movw	r30, r24
    2eee:	10 82       	st	Z, r1
    2ef0:	11 82       	std	Z+1, r1	; 0x01
    2ef2:	12 82       	std	Z+2, r1	; 0x02
    2ef4:	13 82       	std	Z+3, r1	; 0x03
    2ef6:	89 81       	ldd	r24, Y+1	; 0x01
    2ef8:	9a 81       	ldd	r25, Y+2	; 0x02
    2efa:	83 59       	subi	r24, 0x93	; 147
    2efc:	9f 4f       	sbci	r25, 0xFF	; 255
    2efe:	fc 01       	movw	r30, r24
    2f00:	10 82       	st	Z, r1
    2f02:	11 82       	std	Z+1, r1	; 0x01
    2f04:	12 82       	std	Z+2, r1	; 0x02
    2f06:	13 82       	std	Z+3, r1	; 0x03
    2f08:	89 81       	ldd	r24, Y+1	; 0x01
    2f0a:	9a 81       	ldd	r25, Y+2	; 0x02
    2f0c:	8f 58       	subi	r24, 0x8F	; 143
    2f0e:	9f 4f       	sbci	r25, 0xFF	; 255
    2f10:	fc 01       	movw	r30, r24
    2f12:	10 82       	st	Z, r1
    2f14:	11 82       	std	Z+1, r1	; 0x01
    2f16:	12 82       	std	Z+2, r1	; 0x02
    2f18:	13 82       	std	Z+3, r1	; 0x03
    2f1a:	89 81       	ldd	r24, Y+1	; 0x01
    2f1c:	9a 81       	ldd	r25, Y+2	; 0x02
    2f1e:	8b 58       	subi	r24, 0x8B	; 139
    2f20:	9f 4f       	sbci	r25, 0xFF	; 255
    2f22:	fc 01       	movw	r30, r24
    2f24:	10 82       	st	Z, r1
    2f26:	11 82       	std	Z+1, r1	; 0x01
    2f28:	12 82       	std	Z+2, r1	; 0x02
    2f2a:	13 82       	std	Z+3, r1	; 0x03
    2f2c:	89 81       	ldd	r24, Y+1	; 0x01
    2f2e:	9a 81       	ldd	r25, Y+2	; 0x02
    2f30:	87 58       	subi	r24, 0x87	; 135
    2f32:	9f 4f       	sbci	r25, 0xFF	; 255
    2f34:	fc 01       	movw	r30, r24
    2f36:	10 82       	st	Z, r1
    2f38:	11 82       	std	Z+1, r1	; 0x01
    2f3a:	12 82       	std	Z+2, r1	; 0x02
    2f3c:	13 82       	std	Z+3, r1	; 0x03
    2f3e:	89 81       	ldd	r24, Y+1	; 0x01
    2f40:	9a 81       	ldd	r25, Y+2	; 0x02
    2f42:	83 58       	subi	r24, 0x83	; 131
    2f44:	9f 4f       	sbci	r25, 0xFF	; 255
    2f46:	fc 01       	movw	r30, r24
    2f48:	10 82       	st	Z, r1
    2f4a:	11 82       	std	Z+1, r1	; 0x01
    2f4c:	12 82       	std	Z+2, r1	; 0x02
    2f4e:	13 82       	std	Z+3, r1	; 0x03
    2f50:	89 81       	ldd	r24, Y+1	; 0x01
    2f52:	9a 81       	ldd	r25, Y+2	; 0x02
    2f54:	8f 57       	subi	r24, 0x7F	; 127
    2f56:	9f 4f       	sbci	r25, 0xFF	; 255
    2f58:	fc 01       	movw	r30, r24
    2f5a:	10 82       	st	Z, r1
    2f5c:	11 82       	std	Z+1, r1	; 0x01
    2f5e:	12 82       	std	Z+2, r1	; 0x02
    2f60:	13 82       	std	Z+3, r1	; 0x03
    2f62:	89 81       	ldd	r24, Y+1	; 0x01
    2f64:	9a 81       	ldd	r25, Y+2	; 0x02
    2f66:	8b 57       	subi	r24, 0x7B	; 123
    2f68:	9f 4f       	sbci	r25, 0xFF	; 255
    2f6a:	fc 01       	movw	r30, r24
    2f6c:	10 82       	st	Z, r1
    2f6e:	11 82       	std	Z+1, r1	; 0x01
    2f70:	12 82       	std	Z+2, r1	; 0x02
    2f72:	13 82       	std	Z+3, r1	; 0x03
    2f74:	89 81       	ldd	r24, Y+1	; 0x01
    2f76:	9a 81       	ldd	r25, Y+2	; 0x02
    2f78:	87 57       	subi	r24, 0x77	; 119
    2f7a:	9f 4f       	sbci	r25, 0xFF	; 255
    2f7c:	fc 01       	movw	r30, r24
    2f7e:	10 82       	st	Z, r1
    2f80:	11 82       	std	Z+1, r1	; 0x01
    2f82:	12 82       	std	Z+2, r1	; 0x02
    2f84:	13 82       	std	Z+3, r1	; 0x03
    2f86:	89 81       	ldd	r24, Y+1	; 0x01
    2f88:	9a 81       	ldd	r25, Y+2	; 0x02
    2f8a:	83 57       	subi	r24, 0x73	; 115
    2f8c:	9f 4f       	sbci	r25, 0xFF	; 255
    2f8e:	fc 01       	movw	r30, r24
    2f90:	10 82       	st	Z, r1
    2f92:	11 82       	std	Z+1, r1	; 0x01
    2f94:	12 82       	std	Z+2, r1	; 0x02
    2f96:	13 82       	std	Z+3, r1	; 0x03
    2f98:	89 81       	ldd	r24, Y+1	; 0x01
    2f9a:	9a 81       	ldd	r25, Y+2	; 0x02
    2f9c:	8f 56       	subi	r24, 0x6F	; 111
    2f9e:	9f 4f       	sbci	r25, 0xFF	; 255
    2fa0:	fc 01       	movw	r30, r24
    2fa2:	10 82       	st	Z, r1
    2fa4:	11 82       	std	Z+1, r1	; 0x01
    2fa6:	12 82       	std	Z+2, r1	; 0x02
    2fa8:	13 82       	std	Z+3, r1	; 0x03
    2faa:	89 81       	ldd	r24, Y+1	; 0x01
    2fac:	9a 81       	ldd	r25, Y+2	; 0x02
    2fae:	8b 56       	subi	r24, 0x6B	; 107
    2fb0:	9f 4f       	sbci	r25, 0xFF	; 255
    2fb2:	fc 01       	movw	r30, r24
    2fb4:	10 82       	st	Z, r1
    2fb6:	11 82       	std	Z+1, r1	; 0x01
    2fb8:	12 82       	std	Z+2, r1	; 0x02
    2fba:	13 82       	std	Z+3, r1	; 0x03
    2fbc:	89 81       	ldd	r24, Y+1	; 0x01
    2fbe:	9a 81       	ldd	r25, Y+2	; 0x02
    2fc0:	87 56       	subi	r24, 0x67	; 103
    2fc2:	9f 4f       	sbci	r25, 0xFF	; 255
    2fc4:	fc 01       	movw	r30, r24
    2fc6:	10 82       	st	Z, r1
    2fc8:	11 82       	std	Z+1, r1	; 0x01
    2fca:	12 82       	std	Z+2, r1	; 0x02
    2fcc:	13 82       	std	Z+3, r1	; 0x03
    2fce:	89 81       	ldd	r24, Y+1	; 0x01
    2fd0:	9a 81       	ldd	r25, Y+2	; 0x02
    2fd2:	83 56       	subi	r24, 0x63	; 99
    2fd4:	9f 4f       	sbci	r25, 0xFF	; 255
    2fd6:	fc 01       	movw	r30, r24
    2fd8:	10 82       	st	Z, r1
    2fda:	11 82       	std	Z+1, r1	; 0x01
    2fdc:	12 82       	std	Z+2, r1	; 0x02
    2fde:	13 82       	std	Z+3, r1	; 0x03
    2fe0:	89 81       	ldd	r24, Y+1	; 0x01
    2fe2:	9a 81       	ldd	r25, Y+2	; 0x02
    2fe4:	8f 55       	subi	r24, 0x5F	; 95
    2fe6:	9f 4f       	sbci	r25, 0xFF	; 255
    2fe8:	fc 01       	movw	r30, r24
    2fea:	10 82       	st	Z, r1
    2fec:	11 82       	std	Z+1, r1	; 0x01
    2fee:	12 82       	std	Z+2, r1	; 0x02
    2ff0:	13 82       	std	Z+3, r1	; 0x03
    2ff2:	89 81       	ldd	r24, Y+1	; 0x01
    2ff4:	9a 81       	ldd	r25, Y+2	; 0x02
    2ff6:	8b 55       	subi	r24, 0x5B	; 91
    2ff8:	9f 4f       	sbci	r25, 0xFF	; 255
    2ffa:	fc 01       	movw	r30, r24
    2ffc:	10 82       	st	Z, r1
    2ffe:	11 82       	std	Z+1, r1	; 0x01
    3000:	12 82       	std	Z+2, r1	; 0x02
    3002:	13 82       	std	Z+3, r1	; 0x03
    3004:	89 81       	ldd	r24, Y+1	; 0x01
    3006:	9a 81       	ldd	r25, Y+2	; 0x02
    3008:	87 55       	subi	r24, 0x57	; 87
    300a:	9f 4f       	sbci	r25, 0xFF	; 255
    300c:	fc 01       	movw	r30, r24
    300e:	10 82       	st	Z, r1
    3010:	11 82       	std	Z+1, r1	; 0x01
    3012:	12 82       	std	Z+2, r1	; 0x02
    3014:	13 82       	std	Z+3, r1	; 0x03
    3016:	89 81       	ldd	r24, Y+1	; 0x01
    3018:	9a 81       	ldd	r25, Y+2	; 0x02
    301a:	83 55       	subi	r24, 0x53	; 83
    301c:	9f 4f       	sbci	r25, 0xFF	; 255
    301e:	fc 01       	movw	r30, r24
    3020:	10 82       	st	Z, r1
    3022:	11 82       	std	Z+1, r1	; 0x01
    3024:	12 82       	std	Z+2, r1	; 0x02
    3026:	13 82       	std	Z+3, r1	; 0x03
    3028:	89 81       	ldd	r24, Y+1	; 0x01
    302a:	9a 81       	ldd	r25, Y+2	; 0x02
    302c:	8f 54       	subi	r24, 0x4F	; 79
    302e:	9f 4f       	sbci	r25, 0xFF	; 255
    3030:	fc 01       	movw	r30, r24
    3032:	10 82       	st	Z, r1
    3034:	11 82       	std	Z+1, r1	; 0x01
    3036:	12 82       	std	Z+2, r1	; 0x02
    3038:	13 82       	std	Z+3, r1	; 0x03
    303a:	89 81       	ldd	r24, Y+1	; 0x01
    303c:	9a 81       	ldd	r25, Y+2	; 0x02
    303e:	8b 54       	subi	r24, 0x4B	; 75
    3040:	9f 4f       	sbci	r25, 0xFF	; 255
    3042:	fc 01       	movw	r30, r24
    3044:	10 82       	st	Z, r1
    3046:	11 82       	std	Z+1, r1	; 0x01
    3048:	12 82       	std	Z+2, r1	; 0x02
    304a:	13 82       	std	Z+3, r1	; 0x03
    304c:	89 81       	ldd	r24, Y+1	; 0x01
    304e:	9a 81       	ldd	r25, Y+2	; 0x02
    3050:	87 54       	subi	r24, 0x47	; 71
    3052:	9f 4f       	sbci	r25, 0xFF	; 255
    3054:	fc 01       	movw	r30, r24
    3056:	10 82       	st	Z, r1
    3058:	11 82       	std	Z+1, r1	; 0x01
    305a:	12 82       	std	Z+2, r1	; 0x02
    305c:	13 82       	std	Z+3, r1	; 0x03
    305e:	89 81       	ldd	r24, Y+1	; 0x01
    3060:	9a 81       	ldd	r25, Y+2	; 0x02
    3062:	83 54       	subi	r24, 0x43	; 67
    3064:	9f 4f       	sbci	r25, 0xFF	; 255
    3066:	fc 01       	movw	r30, r24
    3068:	10 82       	st	Z, r1
    306a:	11 82       	std	Z+1, r1	; 0x01
    306c:	12 82       	std	Z+2, r1	; 0x02
    306e:	13 82       	std	Z+3, r1	; 0x03
    3070:	89 81       	ldd	r24, Y+1	; 0x01
    3072:	9a 81       	ldd	r25, Y+2	; 0x02
    3074:	8f 53       	subi	r24, 0x3F	; 63
    3076:	9f 4f       	sbci	r25, 0xFF	; 255
    3078:	fc 01       	movw	r30, r24
    307a:	10 82       	st	Z, r1
    307c:	11 82       	std	Z+1, r1	; 0x01
    307e:	12 82       	std	Z+2, r1	; 0x02
    3080:	13 82       	std	Z+3, r1	; 0x03
    3082:	89 81       	ldd	r24, Y+1	; 0x01
    3084:	9a 81       	ldd	r25, Y+2	; 0x02
    3086:	8b 53       	subi	r24, 0x3B	; 59
    3088:	9f 4f       	sbci	r25, 0xFF	; 255
    308a:	fc 01       	movw	r30, r24
    308c:	10 82       	st	Z, r1
    308e:	11 82       	std	Z+1, r1	; 0x01
    3090:	12 82       	std	Z+2, r1	; 0x02
    3092:	13 82       	std	Z+3, r1	; 0x03
    3094:	89 81       	ldd	r24, Y+1	; 0x01
    3096:	9a 81       	ldd	r25, Y+2	; 0x02
    3098:	87 53       	subi	r24, 0x37	; 55
    309a:	9f 4f       	sbci	r25, 0xFF	; 255
    309c:	fc 01       	movw	r30, r24
    309e:	10 82       	st	Z, r1
    30a0:	11 82       	std	Z+1, r1	; 0x01
    30a2:	12 82       	std	Z+2, r1	; 0x02
    30a4:	13 82       	std	Z+3, r1	; 0x03
    30a6:	89 81       	ldd	r24, Y+1	; 0x01
    30a8:	9a 81       	ldd	r25, Y+2	; 0x02
    30aa:	83 53       	subi	r24, 0x33	; 51
    30ac:	9f 4f       	sbci	r25, 0xFF	; 255
    30ae:	fc 01       	movw	r30, r24
    30b0:	10 82       	st	Z, r1
    30b2:	11 82       	std	Z+1, r1	; 0x01
    30b4:	12 82       	std	Z+2, r1	; 0x02
    30b6:	13 82       	std	Z+3, r1	; 0x03
    30b8:	89 81       	ldd	r24, Y+1	; 0x01
    30ba:	9a 81       	ldd	r25, Y+2	; 0x02
    30bc:	8f 52       	subi	r24, 0x2F	; 47
    30be:	9f 4f       	sbci	r25, 0xFF	; 255
    30c0:	fc 01       	movw	r30, r24
    30c2:	10 82       	st	Z, r1
    30c4:	11 82       	std	Z+1, r1	; 0x01
    30c6:	12 82       	std	Z+2, r1	; 0x02
    30c8:	13 82       	std	Z+3, r1	; 0x03
			{
				EcefToLocalNEDRotationMatrix[0][0] = 0;
    30ca:	89 81       	ldd	r24, Y+1	; 0x01
    30cc:	9a 81       	ldd	r25, Y+2	; 0x02
    30ce:	8b 52       	subi	r24, 0x2B	; 43
    30d0:	9f 4f       	sbci	r25, 0xFF	; 255
    30d2:	fc 01       	movw	r30, r24
    30d4:	10 82       	st	Z, r1
    30d6:	11 82       	std	Z+1, r1	; 0x01
    30d8:	12 82       	std	Z+2, r1	; 0x02
    30da:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[0][1] = 0;
    30dc:	89 81       	ldd	r24, Y+1	; 0x01
    30de:	9a 81       	ldd	r25, Y+2	; 0x02
    30e0:	87 52       	subi	r24, 0x27	; 39
    30e2:	9f 4f       	sbci	r25, 0xFF	; 255
    30e4:	fc 01       	movw	r30, r24
    30e6:	10 82       	st	Z, r1
    30e8:	11 82       	std	Z+1, r1	; 0x01
    30ea:	12 82       	std	Z+2, r1	; 0x02
    30ec:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[0][2] = 0;
    30ee:	89 81       	ldd	r24, Y+1	; 0x01
    30f0:	9a 81       	ldd	r25, Y+2	; 0x02
    30f2:	83 52       	subi	r24, 0x23	; 35
    30f4:	9f 4f       	sbci	r25, 0xFF	; 255
    30f6:	fc 01       	movw	r30, r24
    30f8:	10 82       	st	Z, r1
    30fa:	11 82       	std	Z+1, r1	; 0x01
    30fc:	12 82       	std	Z+2, r1	; 0x02
    30fe:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][0] = 0;
    3100:	89 81       	ldd	r24, Y+1	; 0x01
    3102:	9a 81       	ldd	r25, Y+2	; 0x02
    3104:	8f 51       	subi	r24, 0x1F	; 31
    3106:	9f 4f       	sbci	r25, 0xFF	; 255
    3108:	fc 01       	movw	r30, r24
    310a:	10 82       	st	Z, r1
    310c:	11 82       	std	Z+1, r1	; 0x01
    310e:	12 82       	std	Z+2, r1	; 0x02
    3110:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][1] = 0;
    3112:	89 81       	ldd	r24, Y+1	; 0x01
    3114:	9a 81       	ldd	r25, Y+2	; 0x02
    3116:	8b 51       	subi	r24, 0x1B	; 27
    3118:	9f 4f       	sbci	r25, 0xFF	; 255
    311a:	fc 01       	movw	r30, r24
    311c:	10 82       	st	Z, r1
    311e:	11 82       	std	Z+1, r1	; 0x01
    3120:	12 82       	std	Z+2, r1	; 0x02
    3122:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[1][2] = 0;
    3124:	89 81       	ldd	r24, Y+1	; 0x01
    3126:	9a 81       	ldd	r25, Y+2	; 0x02
    3128:	87 51       	subi	r24, 0x17	; 23
    312a:	9f 4f       	sbci	r25, 0xFF	; 255
    312c:	fc 01       	movw	r30, r24
    312e:	10 82       	st	Z, r1
    3130:	11 82       	std	Z+1, r1	; 0x01
    3132:	12 82       	std	Z+2, r1	; 0x02
    3134:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][0] = 0;
    3136:	89 81       	ldd	r24, Y+1	; 0x01
    3138:	9a 81       	ldd	r25, Y+2	; 0x02
    313a:	83 51       	subi	r24, 0x13	; 19
    313c:	9f 4f       	sbci	r25, 0xFF	; 255
    313e:	fc 01       	movw	r30, r24
    3140:	10 82       	st	Z, r1
    3142:	11 82       	std	Z+1, r1	; 0x01
    3144:	12 82       	std	Z+2, r1	; 0x02
    3146:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][1] = 0;
    3148:	89 81       	ldd	r24, Y+1	; 0x01
    314a:	9a 81       	ldd	r25, Y+2	; 0x02
    314c:	8f 50       	subi	r24, 0x0F	; 15
    314e:	9f 4f       	sbci	r25, 0xFF	; 255
    3150:	fc 01       	movw	r30, r24
    3152:	10 82       	st	Z, r1
    3154:	11 82       	std	Z+1, r1	; 0x01
    3156:	12 82       	std	Z+2, r1	; 0x02
    3158:	13 82       	std	Z+3, r1	; 0x03
				EcefToLocalNEDRotationMatrix[2][2] = 0;								
    315a:	89 81       	ldd	r24, Y+1	; 0x01
    315c:	9a 81       	ldd	r25, Y+2	; 0x02
    315e:	8b 50       	subi	r24, 0x0B	; 11
    3160:	9f 4f       	sbci	r25, 0xFF	; 255
    3162:	fc 01       	movw	r30, r24
    3164:	10 82       	st	Z, r1
    3166:	11 82       	std	Z+1, r1	; 0x01
    3168:	12 82       	std	Z+2, r1	; 0x02
    316a:	13 82       	std	Z+3, r1	; 0x03
			}
    316c:	0f 90       	pop	r0
    316e:	0f 90       	pop	r0
    3170:	df 91       	pop	r29
    3172:	cf 91       	pop	r28
    3174:	08 95       	ret

00003176 <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf>:
			void MagYawDegrees(float val) { magYawDegrees = val; }	
				
				
				
			float ReferenceMagYawDegrees() const {return referenceMagYawDegrees;}
			void ReferenceMagYawDegrees(float val) { referenceMagYawDegrees = val;}
    3176:	cf 93       	push	r28
    3178:	df 93       	push	r29
    317a:	00 d0       	rcall	.+0      	; 0x317c <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf+0x6>
    317c:	00 d0       	rcall	.+0      	; 0x317e <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf+0x8>
    317e:	cd b7       	in	r28, 0x3d	; 61
    3180:	de b7       	in	r29, 0x3e	; 62
    3182:	9a 83       	std	Y+2, r25	; 0x02
    3184:	89 83       	std	Y+1, r24	; 0x01
    3186:	4b 83       	std	Y+3, r20	; 0x03
    3188:	5c 83       	std	Y+4, r21	; 0x04
    318a:	6d 83       	std	Y+5, r22	; 0x05
    318c:	7e 83       	std	Y+6, r23	; 0x06
    318e:	29 81       	ldd	r18, Y+1	; 0x01
    3190:	3a 81       	ldd	r19, Y+2	; 0x02
    3192:	8b 81       	ldd	r24, Y+3	; 0x03
    3194:	9c 81       	ldd	r25, Y+4	; 0x04
    3196:	ad 81       	ldd	r26, Y+5	; 0x05
    3198:	be 81       	ldd	r27, Y+6	; 0x06
    319a:	f9 01       	movw	r30, r18
    319c:	85 83       	std	Z+5, r24	; 0x05
    319e:	96 83       	std	Z+6, r25	; 0x06
    31a0:	a7 83       	std	Z+7, r26	; 0x07
    31a2:	b0 87       	std	Z+8, r27	; 0x08
    31a4:	26 96       	adiw	r28, 0x06	; 6
    31a6:	0f b6       	in	r0, 0x3f	; 63
    31a8:	f8 94       	cli
    31aa:	de bf       	out	0x3e, r29	; 62
    31ac:	0f be       	out	0x3f, r0	; 63
    31ae:	cd bf       	out	0x3d, r28	; 61
    31b0:	df 91       	pop	r29
    31b2:	cf 91       	pop	r28
    31b4:	08 95       	ret

000031b6 <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf>:
				
			float YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
			void YawVelocityDegreesPerSecond(float val) { yawVelocityDegreesPerSecond = val;}
				
			float ReferenceYawVelocityDegreesPerSecond() const {return referenceYawVelocityDegreesPerSecond;}
			void ReferenceYawVelocityDegreesPerSecond(float val) { referenceYawVelocityDegreesPerSecond = val;}
    31b6:	cf 93       	push	r28
    31b8:	df 93       	push	r29
    31ba:	00 d0       	rcall	.+0      	; 0x31bc <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf+0x6>
    31bc:	00 d0       	rcall	.+0      	; 0x31be <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf+0x8>
    31be:	cd b7       	in	r28, 0x3d	; 61
    31c0:	de b7       	in	r29, 0x3e	; 62
    31c2:	9a 83       	std	Y+2, r25	; 0x02
    31c4:	89 83       	std	Y+1, r24	; 0x01
    31c6:	4b 83       	std	Y+3, r20	; 0x03
    31c8:	5c 83       	std	Y+4, r21	; 0x04
    31ca:	6d 83       	std	Y+5, r22	; 0x05
    31cc:	7e 83       	std	Y+6, r23	; 0x06
    31ce:	29 81       	ldd	r18, Y+1	; 0x01
    31d0:	3a 81       	ldd	r19, Y+2	; 0x02
    31d2:	8b 81       	ldd	r24, Y+3	; 0x03
    31d4:	9c 81       	ldd	r25, Y+4	; 0x04
    31d6:	ad 81       	ldd	r26, Y+5	; 0x05
    31d8:	be 81       	ldd	r27, Y+6	; 0x06
    31da:	f9 01       	movw	r30, r18
    31dc:	85 8b       	std	Z+21, r24	; 0x15
    31de:	96 8b       	std	Z+22, r25	; 0x16
    31e0:	a7 8b       	std	Z+23, r26	; 0x17
    31e2:	b0 8f       	std	Z+24, r27	; 0x18
    31e4:	26 96       	adiw	r28, 0x06	; 6
    31e6:	0f b6       	in	r0, 0x3f	; 63
    31e8:	f8 94       	cli
    31ea:	de bf       	out	0x3e, r29	; 62
    31ec:	0f be       	out	0x3f, r0	; 63
    31ee:	cd bf       	out	0x3d, r28	; 61
    31f0:	df 91       	pop	r29
    31f2:	cf 91       	pop	r28
    31f4:	08 95       	ret

000031f6 <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf>:
		
			float XNEDBodyFrame() const {return xNEDBodyFrame;}
			void XNEDBodyFrame(float val) { xNEDBodyFrame = val;}
						
			float ReferenceXNEDBodyFrame() const {return referenceXNEDBodyFrame;}
			void ReferenceXNEDBodyFrame(float val) { referenceXNEDBodyFrame = val;}
    31f6:	cf 93       	push	r28
    31f8:	df 93       	push	r29
    31fa:	00 d0       	rcall	.+0      	; 0x31fc <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf+0x6>
    31fc:	00 d0       	rcall	.+0      	; 0x31fe <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf+0x8>
    31fe:	cd b7       	in	r28, 0x3d	; 61
    3200:	de b7       	in	r29, 0x3e	; 62
    3202:	9a 83       	std	Y+2, r25	; 0x02
    3204:	89 83       	std	Y+1, r24	; 0x01
    3206:	4b 83       	std	Y+3, r20	; 0x03
    3208:	5c 83       	std	Y+4, r21	; 0x04
    320a:	6d 83       	std	Y+5, r22	; 0x05
    320c:	7e 83       	std	Y+6, r23	; 0x06
    320e:	29 81       	ldd	r18, Y+1	; 0x01
    3210:	3a 81       	ldd	r19, Y+2	; 0x02
    3212:	8b 81       	ldd	r24, Y+3	; 0x03
    3214:	9c 81       	ldd	r25, Y+4	; 0x04
    3216:	ad 81       	ldd	r26, Y+5	; 0x05
    3218:	be 81       	ldd	r27, Y+6	; 0x06
    321a:	f9 01       	movw	r30, r18
    321c:	81 a7       	std	Z+41, r24	; 0x29
    321e:	92 a7       	std	Z+42, r25	; 0x2a
    3220:	a3 a7       	std	Z+43, r26	; 0x2b
    3222:	b4 a7       	std	Z+44, r27	; 0x2c
    3224:	26 96       	adiw	r28, 0x06	; 6
    3226:	0f b6       	in	r0, 0x3f	; 63
    3228:	f8 94       	cli
    322a:	de bf       	out	0x3e, r29	; 62
    322c:	0f be       	out	0x3f, r0	; 63
    322e:	cd bf       	out	0x3d, r28	; 61
    3230:	df 91       	pop	r29
    3232:	cf 91       	pop	r28
    3234:	08 95       	ret

00003236 <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf>:
				
			float XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
			void XVelocityMetersPerSecond(float val) { xVelocityMetersPerSecond = val;}
				
			float ReferenceXVelocityMetersPerSecond() const {return referenceXVelocityMetersPerSecond;}
			void ReferenceXVelocityMetersPerSecond(float val) { referenceXVelocityMetersPerSecond = val;}
    3236:	cf 93       	push	r28
    3238:	df 93       	push	r29
    323a:	00 d0       	rcall	.+0      	; 0x323c <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf+0x6>
    323c:	00 d0       	rcall	.+0      	; 0x323e <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf+0x8>
    323e:	cd b7       	in	r28, 0x3d	; 61
    3240:	de b7       	in	r29, 0x3e	; 62
    3242:	9a 83       	std	Y+2, r25	; 0x02
    3244:	89 83       	std	Y+1, r24	; 0x01
    3246:	4b 83       	std	Y+3, r20	; 0x03
    3248:	5c 83       	std	Y+4, r21	; 0x04
    324a:	6d 83       	std	Y+5, r22	; 0x05
    324c:	7e 83       	std	Y+6, r23	; 0x06
    324e:	29 81       	ldd	r18, Y+1	; 0x01
    3250:	3a 81       	ldd	r19, Y+2	; 0x02
    3252:	8b 81       	ldd	r24, Y+3	; 0x03
    3254:	9c 81       	ldd	r25, Y+4	; 0x04
    3256:	ad 81       	ldd	r26, Y+5	; 0x05
    3258:	be 81       	ldd	r27, Y+6	; 0x06
    325a:	f9 01       	movw	r30, r18
    325c:	81 af       	std	Z+57, r24	; 0x39
    325e:	92 af       	std	Z+58, r25	; 0x3a
    3260:	a3 af       	std	Z+59, r26	; 0x3b
    3262:	b4 af       	std	Z+60, r27	; 0x3c
    3264:	26 96       	adiw	r28, 0x06	; 6
    3266:	0f b6       	in	r0, 0x3f	; 63
    3268:	f8 94       	cli
    326a:	de bf       	out	0x3e, r29	; 62
    326c:	0f be       	out	0x3f, r0	; 63
    326e:	cd bf       	out	0x3d, r28	; 61
    3270:	df 91       	pop	r29
    3272:	cf 91       	pop	r28
    3274:	08 95       	ret

00003276 <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf>:

			float YNEDBodyFrame() const {return yNEDBodyFrame;}
			void YNEDBodyFrame(float val) { yNEDBodyFrame = val;}

			float ReferenceYNEDBodyFrame() const {return referenceYNEDBodyFrame;}
			void ReferenceYNEDBodyFrame(float val) { referenceYNEDBodyFrame = val;}
    3276:	cf 93       	push	r28
    3278:	df 93       	push	r29
    327a:	00 d0       	rcall	.+0      	; 0x327c <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf+0x6>
    327c:	00 d0       	rcall	.+0      	; 0x327e <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf+0x8>
    327e:	cd b7       	in	r28, 0x3d	; 61
    3280:	de b7       	in	r29, 0x3e	; 62
    3282:	9a 83       	std	Y+2, r25	; 0x02
    3284:	89 83       	std	Y+1, r24	; 0x01
    3286:	4b 83       	std	Y+3, r20	; 0x03
    3288:	5c 83       	std	Y+4, r21	; 0x04
    328a:	6d 83       	std	Y+5, r22	; 0x05
    328c:	7e 83       	std	Y+6, r23	; 0x06
    328e:	89 81       	ldd	r24, Y+1	; 0x01
    3290:	9a 81       	ldd	r25, Y+2	; 0x02
    3292:	9c 01       	movw	r18, r24
    3294:	27 5a       	subi	r18, 0xA7	; 167
    3296:	3f 4f       	sbci	r19, 0xFF	; 255
    3298:	8b 81       	ldd	r24, Y+3	; 0x03
    329a:	9c 81       	ldd	r25, Y+4	; 0x04
    329c:	ad 81       	ldd	r26, Y+5	; 0x05
    329e:	be 81       	ldd	r27, Y+6	; 0x06
    32a0:	f9 01       	movw	r30, r18
    32a2:	80 83       	st	Z, r24
    32a4:	91 83       	std	Z+1, r25	; 0x01
    32a6:	a2 83       	std	Z+2, r26	; 0x02
    32a8:	b3 83       	std	Z+3, r27	; 0x03
    32aa:	26 96       	adiw	r28, 0x06	; 6
    32ac:	0f b6       	in	r0, 0x3f	; 63
    32ae:	f8 94       	cli
    32b0:	de bf       	out	0x3e, r29	; 62
    32b2:	0f be       	out	0x3f, r0	; 63
    32b4:	cd bf       	out	0x3d, r28	; 61
    32b6:	df 91       	pop	r29
    32b8:	cf 91       	pop	r28
    32ba:	08 95       	ret

000032bc <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf>:

			float YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
			void YVelocityMetersPerSecond(float val) { yVelocityMetersPerSecond = val;}

			float ReferenceYVelocityMetersPerSecond() const {return referenceYVelocityMetersPerSecond;}
			void ReferenceYVelocityMetersPerSecond(float val) { referenceYVelocityMetersPerSecond = val;}
    32bc:	cf 93       	push	r28
    32be:	df 93       	push	r29
    32c0:	00 d0       	rcall	.+0      	; 0x32c2 <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf+0x6>
    32c2:	00 d0       	rcall	.+0      	; 0x32c4 <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf+0x8>
    32c4:	cd b7       	in	r28, 0x3d	; 61
    32c6:	de b7       	in	r29, 0x3e	; 62
    32c8:	9a 83       	std	Y+2, r25	; 0x02
    32ca:	89 83       	std	Y+1, r24	; 0x01
    32cc:	4b 83       	std	Y+3, r20	; 0x03
    32ce:	5c 83       	std	Y+4, r21	; 0x04
    32d0:	6d 83       	std	Y+5, r22	; 0x05
    32d2:	7e 83       	std	Y+6, r23	; 0x06
    32d4:	89 81       	ldd	r24, Y+1	; 0x01
    32d6:	9a 81       	ldd	r25, Y+2	; 0x02
    32d8:	9c 01       	movw	r18, r24
    32da:	27 59       	subi	r18, 0x97	; 151
    32dc:	3f 4f       	sbci	r19, 0xFF	; 255
    32de:	8b 81       	ldd	r24, Y+3	; 0x03
    32e0:	9c 81       	ldd	r25, Y+4	; 0x04
    32e2:	ad 81       	ldd	r26, Y+5	; 0x05
    32e4:	be 81       	ldd	r27, Y+6	; 0x06
    32e6:	f9 01       	movw	r30, r18
    32e8:	80 83       	st	Z, r24
    32ea:	91 83       	std	Z+1, r25	; 0x01
    32ec:	a2 83       	std	Z+2, r26	; 0x02
    32ee:	b3 83       	std	Z+3, r27	; 0x03
    32f0:	26 96       	adiw	r28, 0x06	; 6
    32f2:	0f b6       	in	r0, 0x3f	; 63
    32f4:	f8 94       	cli
    32f6:	de bf       	out	0x3e, r29	; 62
    32f8:	0f be       	out	0x3f, r0	; 63
    32fa:	cd bf       	out	0x3d, r28	; 61
    32fc:	df 91       	pop	r29
    32fe:	cf 91       	pop	r28
    3300:	08 95       	ret

00003302 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>:
						
						
						
						

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
    3302:	cf 93       	push	r28
    3304:	df 93       	push	r29
    3306:	1f 92       	push	r1
    3308:	1f 92       	push	r1
    330a:	cd b7       	in	r28, 0x3d	; 61
    330c:	de b7       	in	r29, 0x3e	; 62
    330e:	9a 83       	std	Y+2, r25	; 0x02
    3310:	89 83       	std	Y+1, r24	; 0x01
    3312:	89 81       	ldd	r24, Y+1	; 0x01
    3314:	9a 81       	ldd	r25, Y+2	; 0x02
    3316:	8b 57       	subi	r24, 0x7B	; 123
    3318:	9f 4f       	sbci	r25, 0xFF	; 255
    331a:	fc 01       	movw	r30, r24
    331c:	80 81       	ld	r24, Z
    331e:	91 81       	ldd	r25, Z+1	; 0x01
    3320:	a2 81       	ldd	r26, Z+2	; 0x02
    3322:	b3 81       	ldd	r27, Z+3	; 0x03
    3324:	bc 01       	movw	r22, r24
    3326:	cd 01       	movw	r24, r26
    3328:	0f 90       	pop	r0
    332a:	0f 90       	pop	r0
    332c:	df 91       	pop	r29
    332e:	cf 91       	pop	r28
    3330:	08 95       	ret

00003332 <_ZN10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEf>:
			float ZNEDBodyFrame() const { return zNEDBodyFrame; }
			void ZNEDBodyFrame(float val) { zNEDBodyFrame = val; }


			float ReferenceZNEDBodyFrameFeet() const {return referenceAltitudeFeet;}
			void ReferenceZNEDBodyFrameFeet(float val) { referenceAltitudeFeet = val;}
    3332:	cf 93       	push	r28
    3334:	df 93       	push	r29
    3336:	00 d0       	rcall	.+0      	; 0x3338 <_ZN10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEf+0x6>
    3338:	00 d0       	rcall	.+0      	; 0x333a <_ZN10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEf+0x8>
    333a:	cd b7       	in	r28, 0x3d	; 61
    333c:	de b7       	in	r29, 0x3e	; 62
    333e:	9a 83       	std	Y+2, r25	; 0x02
    3340:	89 83       	std	Y+1, r24	; 0x01
    3342:	4b 83       	std	Y+3, r20	; 0x03
    3344:	5c 83       	std	Y+4, r21	; 0x04
    3346:	6d 83       	std	Y+5, r22	; 0x05
    3348:	7e 83       	std	Y+6, r23	; 0x06
    334a:	89 81       	ldd	r24, Y+1	; 0x01
    334c:	9a 81       	ldd	r25, Y+2	; 0x02
    334e:	9c 01       	movw	r18, r24
    3350:	23 57       	subi	r18, 0x73	; 115
    3352:	3f 4f       	sbci	r19, 0xFF	; 255
    3354:	8b 81       	ldd	r24, Y+3	; 0x03
    3356:	9c 81       	ldd	r25, Y+4	; 0x04
    3358:	ad 81       	ldd	r26, Y+5	; 0x05
    335a:	be 81       	ldd	r27, Y+6	; 0x06
    335c:	f9 01       	movw	r30, r18
    335e:	80 83       	st	Z, r24
    3360:	91 83       	std	Z+1, r25	; 0x01
    3362:	a2 83       	std	Z+2, r26	; 0x02
    3364:	b3 83       	std	Z+3, r27	; 0x03
    3366:	26 96       	adiw	r28, 0x06	; 6
    3368:	0f b6       	in	r0, 0x3f	; 63
    336a:	f8 94       	cli
    336c:	de bf       	out	0x3e, r29	; 62
    336e:	0f be       	out	0x3f, r0	; 63
    3370:	cd bf       	out	0x3d, r28	; 61
    3372:	df 91       	pop	r29
    3374:	cf 91       	pop	r28
    3376:	08 95       	ret

00003378 <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf>:

			float ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
			void ZVelocityFeetPerSecond(float val) { zVelocityFeetPerSecond = val;}

			float ReferenceZVelocityFeetPerSecond() const {return referenceZVelocityFeetPerSecond;}
			void ReferenceZVelocityFeetPerSecond(float val) { referenceZVelocityFeetPerSecond = val;}
    3378:	cf 93       	push	r28
    337a:	df 93       	push	r29
    337c:	00 d0       	rcall	.+0      	; 0x337e <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf+0x6>
    337e:	00 d0       	rcall	.+0      	; 0x3380 <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf+0x8>
    3380:	cd b7       	in	r28, 0x3d	; 61
    3382:	de b7       	in	r29, 0x3e	; 62
    3384:	9a 83       	std	Y+2, r25	; 0x02
    3386:	89 83       	std	Y+1, r24	; 0x01
    3388:	4b 83       	std	Y+3, r20	; 0x03
    338a:	5c 83       	std	Y+4, r21	; 0x04
    338c:	6d 83       	std	Y+5, r22	; 0x05
    338e:	7e 83       	std	Y+6, r23	; 0x06
    3390:	89 81       	ldd	r24, Y+1	; 0x01
    3392:	9a 81       	ldd	r25, Y+2	; 0x02
    3394:	9c 01       	movw	r18, r24
    3396:	23 56       	subi	r18, 0x63	; 99
    3398:	3f 4f       	sbci	r19, 0xFF	; 255
    339a:	8b 81       	ldd	r24, Y+3	; 0x03
    339c:	9c 81       	ldd	r25, Y+4	; 0x04
    339e:	ad 81       	ldd	r26, Y+5	; 0x05
    33a0:	be 81       	ldd	r27, Y+6	; 0x06
    33a2:	f9 01       	movw	r30, r18
    33a4:	80 83       	st	Z, r24
    33a6:	91 83       	std	Z+1, r25	; 0x01
    33a8:	a2 83       	std	Z+2, r26	; 0x02
    33aa:	b3 83       	std	Z+3, r27	; 0x03
    33ac:	26 96       	adiw	r28, 0x06	; 6
    33ae:	0f b6       	in	r0, 0x3f	; 63
    33b0:	f8 94       	cli
    33b2:	de bf       	out	0x3e, r29	; 62
    33b4:	0f be       	out	0x3f, r0	; 63
    33b6:	cd bf       	out	0x3d, r28	; 61
    33b8:	df 91       	pop	r29
    33ba:	cf 91       	pop	r28
    33bc:	08 95       	ret

000033be <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>:

			float ZDerivativeError() const {return zDerivativeError;}
			void ZDerivativeError(float val) { zDerivativeError = val;}						
						
						
			float LatitudeDegrees() const {return latitudeDegrees;}
    33be:	cf 93       	push	r28
    33c0:	df 93       	push	r29
    33c2:	1f 92       	push	r1
    33c4:	1f 92       	push	r1
    33c6:	cd b7       	in	r28, 0x3d	; 61
    33c8:	de b7       	in	r29, 0x3e	; 62
    33ca:	9a 83       	std	Y+2, r25	; 0x02
    33cc:	89 83       	std	Y+1, r24	; 0x01
    33ce:	89 81       	ldd	r24, Y+1	; 0x01
    33d0:	9a 81       	ldd	r25, Y+2	; 0x02
    33d2:	83 55       	subi	r24, 0x53	; 83
    33d4:	9f 4f       	sbci	r25, 0xFF	; 255
    33d6:	fc 01       	movw	r30, r24
    33d8:	80 81       	ld	r24, Z
    33da:	91 81       	ldd	r25, Z+1	; 0x01
    33dc:	a2 81       	ldd	r26, Z+2	; 0x02
    33de:	b3 81       	ldd	r27, Z+3	; 0x03
    33e0:	bc 01       	movw	r22, r24
    33e2:	cd 01       	movw	r24, r26
    33e4:	0f 90       	pop	r0
    33e6:	0f 90       	pop	r0
    33e8:	df 91       	pop	r29
    33ea:	cf 91       	pop	r28
    33ec:	08 95       	ret

000033ee <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>:
			void LatitudeDegrees(float val) { latitudeDegrees = val;}						

			float LongitudeDegrees() const {return longitudeDegrees;}
    33ee:	cf 93       	push	r28
    33f0:	df 93       	push	r29
    33f2:	1f 92       	push	r1
    33f4:	1f 92       	push	r1
    33f6:	cd b7       	in	r28, 0x3d	; 61
    33f8:	de b7       	in	r29, 0x3e	; 62
    33fa:	9a 83       	std	Y+2, r25	; 0x02
    33fc:	89 83       	std	Y+1, r24	; 0x01
    33fe:	89 81       	ldd	r24, Y+1	; 0x01
    3400:	9a 81       	ldd	r25, Y+2	; 0x02
    3402:	8f 54       	subi	r24, 0x4F	; 79
    3404:	9f 4f       	sbci	r25, 0xFF	; 255
    3406:	fc 01       	movw	r30, r24
    3408:	80 81       	ld	r24, Z
    340a:	91 81       	ldd	r25, Z+1	; 0x01
    340c:	a2 81       	ldd	r26, Z+2	; 0x02
    340e:	b3 81       	ldd	r27, Z+3	; 0x03
    3410:	bc 01       	movw	r22, r24
    3412:	cd 01       	movw	r24, r26
    3414:	0f 90       	pop	r0
    3416:	0f 90       	pop	r0
    3418:	df 91       	pop	r29
    341a:	cf 91       	pop	r28
    341c:	08 95       	ret

0000341e <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl>:
				
			long SerialCommunicationBufferOverruns() const {return serialCommunicationBufferOverruns;}
			void SerialCommunicationBufferOverruns( long val ) { serialCommunicationBufferOverruns = val;}				

			long  InitialXPositionEcef() const {return initialXPositionEcef;}
			void InitialXPositionEcef( long val ) { initialXPositionEcef = val;}			
    341e:	cf 93       	push	r28
    3420:	df 93       	push	r29
    3422:	00 d0       	rcall	.+0      	; 0x3424 <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl+0x6>
    3424:	00 d0       	rcall	.+0      	; 0x3426 <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl+0x8>
    3426:	cd b7       	in	r28, 0x3d	; 61
    3428:	de b7       	in	r29, 0x3e	; 62
    342a:	9a 83       	std	Y+2, r25	; 0x02
    342c:	89 83       	std	Y+1, r24	; 0x01
    342e:	4b 83       	std	Y+3, r20	; 0x03
    3430:	5c 83       	std	Y+4, r21	; 0x04
    3432:	6d 83       	std	Y+5, r22	; 0x05
    3434:	7e 83       	std	Y+6, r23	; 0x06
    3436:	6b 81       	ldd	r22, Y+3	; 0x03
    3438:	7c 81       	ldd	r23, Y+4	; 0x04
    343a:	8d 81       	ldd	r24, Y+5	; 0x05
    343c:	9e 81       	ldd	r25, Y+6	; 0x06
    343e:	0e 94 f5 4b 	call	0x97ea	; 0x97ea <__floatsisf>
    3442:	dc 01       	movw	r26, r24
    3444:	cb 01       	movw	r24, r22
    3446:	29 81       	ldd	r18, Y+1	; 0x01
    3448:	3a 81       	ldd	r19, Y+2	; 0x02
    344a:	27 53       	subi	r18, 0x37	; 55
    344c:	3f 4f       	sbci	r19, 0xFF	; 255
    344e:	f9 01       	movw	r30, r18
    3450:	80 83       	st	Z, r24
    3452:	91 83       	std	Z+1, r25	; 0x01
    3454:	a2 83       	std	Z+2, r26	; 0x02
    3456:	b3 83       	std	Z+3, r27	; 0x03
    3458:	26 96       	adiw	r28, 0x06	; 6
    345a:	0f b6       	in	r0, 0x3f	; 63
    345c:	f8 94       	cli
    345e:	de bf       	out	0x3e, r29	; 62
    3460:	0f be       	out	0x3f, r0	; 63
    3462:	cd bf       	out	0x3d, r28	; 61
    3464:	df 91       	pop	r29
    3466:	cf 91       	pop	r28
    3468:	08 95       	ret

0000346a <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl>:

			long  InitialYPositionEcef() const {return initialYPositionEcef;}
			void InitialYPositionEcef( long val ) { initialYPositionEcef = val;}
    346a:	cf 93       	push	r28
    346c:	df 93       	push	r29
    346e:	00 d0       	rcall	.+0      	; 0x3470 <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl+0x6>
    3470:	00 d0       	rcall	.+0      	; 0x3472 <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl+0x8>
    3472:	cd b7       	in	r28, 0x3d	; 61
    3474:	de b7       	in	r29, 0x3e	; 62
    3476:	9a 83       	std	Y+2, r25	; 0x02
    3478:	89 83       	std	Y+1, r24	; 0x01
    347a:	4b 83       	std	Y+3, r20	; 0x03
    347c:	5c 83       	std	Y+4, r21	; 0x04
    347e:	6d 83       	std	Y+5, r22	; 0x05
    3480:	7e 83       	std	Y+6, r23	; 0x06
    3482:	6b 81       	ldd	r22, Y+3	; 0x03
    3484:	7c 81       	ldd	r23, Y+4	; 0x04
    3486:	8d 81       	ldd	r24, Y+5	; 0x05
    3488:	9e 81       	ldd	r25, Y+6	; 0x06
    348a:	0e 94 f5 4b 	call	0x97ea	; 0x97ea <__floatsisf>
    348e:	dc 01       	movw	r26, r24
    3490:	cb 01       	movw	r24, r22
    3492:	29 81       	ldd	r18, Y+1	; 0x01
    3494:	3a 81       	ldd	r19, Y+2	; 0x02
    3496:	23 53       	subi	r18, 0x33	; 51
    3498:	3f 4f       	sbci	r19, 0xFF	; 255
    349a:	f9 01       	movw	r30, r18
    349c:	80 83       	st	Z, r24
    349e:	91 83       	std	Z+1, r25	; 0x01
    34a0:	a2 83       	std	Z+2, r26	; 0x02
    34a2:	b3 83       	std	Z+3, r27	; 0x03
    34a4:	26 96       	adiw	r28, 0x06	; 6
    34a6:	0f b6       	in	r0, 0x3f	; 63
    34a8:	f8 94       	cli
    34aa:	de bf       	out	0x3e, r29	; 62
    34ac:	0f be       	out	0x3f, r0	; 63
    34ae:	cd bf       	out	0x3d, r28	; 61
    34b0:	df 91       	pop	r29
    34b2:	cf 91       	pop	r28
    34b4:	08 95       	ret

000034b6 <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl>:

			long  InitialZPositionEcef() const {return initialZPositionEcef;}
			void InitialZPositionEcef( long val ) { initialZPositionEcef = val;}			
    34b6:	cf 93       	push	r28
    34b8:	df 93       	push	r29
    34ba:	00 d0       	rcall	.+0      	; 0x34bc <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl+0x6>
    34bc:	00 d0       	rcall	.+0      	; 0x34be <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl+0x8>
    34be:	cd b7       	in	r28, 0x3d	; 61
    34c0:	de b7       	in	r29, 0x3e	; 62
    34c2:	9a 83       	std	Y+2, r25	; 0x02
    34c4:	89 83       	std	Y+1, r24	; 0x01
    34c6:	4b 83       	std	Y+3, r20	; 0x03
    34c8:	5c 83       	std	Y+4, r21	; 0x04
    34ca:	6d 83       	std	Y+5, r22	; 0x05
    34cc:	7e 83       	std	Y+6, r23	; 0x06
    34ce:	6b 81       	ldd	r22, Y+3	; 0x03
    34d0:	7c 81       	ldd	r23, Y+4	; 0x04
    34d2:	8d 81       	ldd	r24, Y+5	; 0x05
    34d4:	9e 81       	ldd	r25, Y+6	; 0x06
    34d6:	0e 94 f5 4b 	call	0x97ea	; 0x97ea <__floatsisf>
    34da:	dc 01       	movw	r26, r24
    34dc:	cb 01       	movw	r24, r22
    34de:	29 81       	ldd	r18, Y+1	; 0x01
    34e0:	3a 81       	ldd	r19, Y+2	; 0x02
    34e2:	2f 52       	subi	r18, 0x2F	; 47
    34e4:	3f 4f       	sbci	r19, 0xFF	; 255
    34e6:	f9 01       	movw	r30, r18
    34e8:	80 83       	st	Z, r24
    34ea:	91 83       	std	Z+1, r25	; 0x01
    34ec:	a2 83       	std	Z+2, r26	; 0x02
    34ee:	b3 83       	std	Z+3, r27	; 0x03
    34f0:	26 96       	adiw	r28, 0x06	; 6
    34f2:	0f b6       	in	r0, 0x3f	; 63
    34f4:	f8 94       	cli
    34f6:	de bf       	out	0x3e, r29	; 62
    34f8:	0f be       	out	0x3f, r0	; 63
    34fa:	cd bf       	out	0x3d, r28	; 61
    34fc:	df 91       	pop	r29
    34fe:	cf 91       	pop	r28
    3500:	08 95       	ret

00003502 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf>:
			public:
				PIDController (SystemModel *model);
					
				~PIDController();
				
				void setXIntegralGain(float val)
    3502:	cf 93       	push	r28
    3504:	df 93       	push	r29
    3506:	00 d0       	rcall	.+0      	; 0x3508 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf+0x6>
    3508:	00 d0       	rcall	.+0      	; 0x350a <_ZN10helicopter10controller13PIDController16setXIntegralGainEf+0x8>
    350a:	cd b7       	in	r28, 0x3d	; 61
    350c:	de b7       	in	r29, 0x3e	; 62
    350e:	9a 83       	std	Y+2, r25	; 0x02
    3510:	89 83       	std	Y+1, r24	; 0x01
    3512:	4b 83       	std	Y+3, r20	; 0x03
    3514:	5c 83       	std	Y+4, r21	; 0x04
    3516:	6d 83       	std	Y+5, r22	; 0x05
    3518:	7e 83       	std	Y+6, r23	; 0x06
				{
					xIntegralGain = val;
    351a:	29 81       	ldd	r18, Y+1	; 0x01
    351c:	3a 81       	ldd	r19, Y+2	; 0x02
    351e:	8b 81       	ldd	r24, Y+3	; 0x03
    3520:	9c 81       	ldd	r25, Y+4	; 0x04
    3522:	ad 81       	ldd	r26, Y+5	; 0x05
    3524:	be 81       	ldd	r27, Y+6	; 0x06
    3526:	f9 01       	movw	r30, r18
    3528:	82 8b       	std	Z+18, r24	; 0x12
    352a:	93 8b       	std	Z+19, r25	; 0x13
    352c:	a4 8b       	std	Z+20, r26	; 0x14
    352e:	b5 8b       	std	Z+21, r27	; 0x15
				}
    3530:	26 96       	adiw	r28, 0x06	; 6
    3532:	0f b6       	in	r0, 0x3f	; 63
    3534:	f8 94       	cli
    3536:	de bf       	out	0x3e, r29	; 62
    3538:	0f be       	out	0x3f, r0	; 63
    353a:	cd bf       	out	0x3d, r28	; 61
    353c:	df 91       	pop	r29
    353e:	cf 91       	pop	r28
    3540:	08 95       	ret

00003542 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf>:
				
				void setXDerivativeGain(float val)
    3542:	cf 93       	push	r28
    3544:	df 93       	push	r29
    3546:	00 d0       	rcall	.+0      	; 0x3548 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf+0x6>
    3548:	00 d0       	rcall	.+0      	; 0x354a <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf+0x8>
    354a:	cd b7       	in	r28, 0x3d	; 61
    354c:	de b7       	in	r29, 0x3e	; 62
    354e:	9a 83       	std	Y+2, r25	; 0x02
    3550:	89 83       	std	Y+1, r24	; 0x01
    3552:	4b 83       	std	Y+3, r20	; 0x03
    3554:	5c 83       	std	Y+4, r21	; 0x04
    3556:	6d 83       	std	Y+5, r22	; 0x05
    3558:	7e 83       	std	Y+6, r23	; 0x06
				{
					xDerivativeGain = val;
    355a:	29 81       	ldd	r18, Y+1	; 0x01
    355c:	3a 81       	ldd	r19, Y+2	; 0x02
    355e:	8b 81       	ldd	r24, Y+3	; 0x03
    3560:	9c 81       	ldd	r25, Y+4	; 0x04
    3562:	ad 81       	ldd	r26, Y+5	; 0x05
    3564:	be 81       	ldd	r27, Y+6	; 0x06
    3566:	f9 01       	movw	r30, r18
    3568:	86 8b       	std	Z+22, r24	; 0x16
    356a:	97 8b       	std	Z+23, r25	; 0x17
    356c:	a0 8f       	std	Z+24, r26	; 0x18
    356e:	b1 8f       	std	Z+25, r27	; 0x19
				}
    3570:	26 96       	adiw	r28, 0x06	; 6
    3572:	0f b6       	in	r0, 0x3f	; 63
    3574:	f8 94       	cli
    3576:	de bf       	out	0x3e, r29	; 62
    3578:	0f be       	out	0x3f, r0	; 63
    357a:	cd bf       	out	0x3d, r28	; 61
    357c:	df 91       	pop	r29
    357e:	cf 91       	pop	r28
    3580:	08 95       	ret

00003582 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf>:
				
				void setXProportionalGain(float val)
    3582:	cf 93       	push	r28
    3584:	df 93       	push	r29
    3586:	00 d0       	rcall	.+0      	; 0x3588 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf+0x6>
    3588:	00 d0       	rcall	.+0      	; 0x358a <_ZN10helicopter10controller13PIDController20setXProportionalGainEf+0x8>
    358a:	cd b7       	in	r28, 0x3d	; 61
    358c:	de b7       	in	r29, 0x3e	; 62
    358e:	9a 83       	std	Y+2, r25	; 0x02
    3590:	89 83       	std	Y+1, r24	; 0x01
    3592:	4b 83       	std	Y+3, r20	; 0x03
    3594:	5c 83       	std	Y+4, r21	; 0x04
    3596:	6d 83       	std	Y+5, r22	; 0x05
    3598:	7e 83       	std	Y+6, r23	; 0x06
				{
					xProportionalGain = val;
    359a:	29 81       	ldd	r18, Y+1	; 0x01
    359c:	3a 81       	ldd	r19, Y+2	; 0x02
    359e:	8b 81       	ldd	r24, Y+3	; 0x03
    35a0:	9c 81       	ldd	r25, Y+4	; 0x04
    35a2:	ad 81       	ldd	r26, Y+5	; 0x05
    35a4:	be 81       	ldd	r27, Y+6	; 0x06
    35a6:	f9 01       	movw	r30, r18
    35a8:	82 8f       	std	Z+26, r24	; 0x1a
    35aa:	93 8f       	std	Z+27, r25	; 0x1b
    35ac:	a4 8f       	std	Z+28, r26	; 0x1c
    35ae:	b5 8f       	std	Z+29, r27	; 0x1d
				}
    35b0:	26 96       	adiw	r28, 0x06	; 6
    35b2:	0f b6       	in	r0, 0x3f	; 63
    35b4:	f8 94       	cli
    35b6:	de bf       	out	0x3e, r29	; 62
    35b8:	0f be       	out	0x3f, r0	; 63
    35ba:	cd bf       	out	0x3d, r28	; 61
    35bc:	df 91       	pop	r29
    35be:	cf 91       	pop	r28
    35c0:	08 95       	ret

000035c2 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf>:
				
				void setXAntiWindupGain(float val)
    35c2:	cf 93       	push	r28
    35c4:	df 93       	push	r29
    35c6:	00 d0       	rcall	.+0      	; 0x35c8 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf+0x6>
    35c8:	00 d0       	rcall	.+0      	; 0x35ca <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf+0x8>
    35ca:	cd b7       	in	r28, 0x3d	; 61
    35cc:	de b7       	in	r29, 0x3e	; 62
    35ce:	9a 83       	std	Y+2, r25	; 0x02
    35d0:	89 83       	std	Y+1, r24	; 0x01
    35d2:	4b 83       	std	Y+3, r20	; 0x03
    35d4:	5c 83       	std	Y+4, r21	; 0x04
    35d6:	6d 83       	std	Y+5, r22	; 0x05
    35d8:	7e 83       	std	Y+6, r23	; 0x06
				{
					xAntiWindupGain = val;
    35da:	29 81       	ldd	r18, Y+1	; 0x01
    35dc:	3a 81       	ldd	r19, Y+2	; 0x02
    35de:	8b 81       	ldd	r24, Y+3	; 0x03
    35e0:	9c 81       	ldd	r25, Y+4	; 0x04
    35e2:	ad 81       	ldd	r26, Y+5	; 0x05
    35e4:	be 81       	ldd	r27, Y+6	; 0x06
    35e6:	f9 01       	movw	r30, r18
    35e8:	86 8f       	std	Z+30, r24	; 0x1e
    35ea:	97 8f       	std	Z+31, r25	; 0x1f
    35ec:	a0 a3       	std	Z+32, r26	; 0x20
    35ee:	b1 a3       	std	Z+33, r27	; 0x21
				}
    35f0:	26 96       	adiw	r28, 0x06	; 6
    35f2:	0f b6       	in	r0, 0x3f	; 63
    35f4:	f8 94       	cli
    35f6:	de bf       	out	0x3e, r29	; 62
    35f8:	0f be       	out	0x3f, r0	; 63
    35fa:	cd bf       	out	0x3d, r28	; 61
    35fc:	df 91       	pop	r29
    35fe:	cf 91       	pop	r28
    3600:	08 95       	ret

00003602 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf>:
				
				void setLongitudeInnerLoopGain(float val)
    3602:	cf 93       	push	r28
    3604:	df 93       	push	r29
    3606:	00 d0       	rcall	.+0      	; 0x3608 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf+0x6>
    3608:	00 d0       	rcall	.+0      	; 0x360a <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf+0x8>
    360a:	cd b7       	in	r28, 0x3d	; 61
    360c:	de b7       	in	r29, 0x3e	; 62
    360e:	9a 83       	std	Y+2, r25	; 0x02
    3610:	89 83       	std	Y+1, r24	; 0x01
    3612:	4b 83       	std	Y+3, r20	; 0x03
    3614:	5c 83       	std	Y+4, r21	; 0x04
    3616:	6d 83       	std	Y+5, r22	; 0x05
    3618:	7e 83       	std	Y+6, r23	; 0x06
				{
					longitudeInnerLoopGain = val;
    361a:	29 81       	ldd	r18, Y+1	; 0x01
    361c:	3a 81       	ldd	r19, Y+2	; 0x02
    361e:	8b 81       	ldd	r24, Y+3	; 0x03
    3620:	9c 81       	ldd	r25, Y+4	; 0x04
    3622:	ad 81       	ldd	r26, Y+5	; 0x05
    3624:	be 81       	ldd	r27, Y+6	; 0x06
    3626:	f9 01       	movw	r30, r18
    3628:	82 a3       	std	Z+34, r24	; 0x22
    362a:	93 a3       	std	Z+35, r25	; 0x23
    362c:	a4 a3       	std	Z+36, r26	; 0x24
    362e:	b5 a3       	std	Z+37, r27	; 0x25
				}
    3630:	26 96       	adiw	r28, 0x06	; 6
    3632:	0f b6       	in	r0, 0x3f	; 63
    3634:	f8 94       	cli
    3636:	de bf       	out	0x3e, r29	; 62
    3638:	0f be       	out	0x3f, r0	; 63
    363a:	cd bf       	out	0x3d, r28	; 61
    363c:	df 91       	pop	r29
    363e:	cf 91       	pop	r28
    3640:	08 95       	ret

00003642 <_ZN10helicopter10controller13PIDController27setPitchAngularVelocityGainEf>:
				
				void setPitchAngularVelocityGain(float val)
    3642:	cf 93       	push	r28
    3644:	df 93       	push	r29
    3646:	00 d0       	rcall	.+0      	; 0x3648 <_ZN10helicopter10controller13PIDController27setPitchAngularVelocityGainEf+0x6>
    3648:	00 d0       	rcall	.+0      	; 0x364a <_ZN10helicopter10controller13PIDController27setPitchAngularVelocityGainEf+0x8>
    364a:	cd b7       	in	r28, 0x3d	; 61
    364c:	de b7       	in	r29, 0x3e	; 62
    364e:	9a 83       	std	Y+2, r25	; 0x02
    3650:	89 83       	std	Y+1, r24	; 0x01
    3652:	4b 83       	std	Y+3, r20	; 0x03
    3654:	5c 83       	std	Y+4, r21	; 0x04
    3656:	6d 83       	std	Y+5, r22	; 0x05
    3658:	7e 83       	std	Y+6, r23	; 0x06
				{
					pitchAngularVelocityGain = val;
    365a:	29 81       	ldd	r18, Y+1	; 0x01
    365c:	3a 81       	ldd	r19, Y+2	; 0x02
    365e:	8b 81       	ldd	r24, Y+3	; 0x03
    3660:	9c 81       	ldd	r25, Y+4	; 0x04
    3662:	ad 81       	ldd	r26, Y+5	; 0x05
    3664:	be 81       	ldd	r27, Y+6	; 0x06
    3666:	f9 01       	movw	r30, r18
    3668:	86 a3       	std	Z+38, r24	; 0x26
    366a:	97 a3       	std	Z+39, r25	; 0x27
    366c:	a0 a7       	std	Z+40, r26	; 0x28
    366e:	b1 a7       	std	Z+41, r27	; 0x29
				}
    3670:	26 96       	adiw	r28, 0x06	; 6
    3672:	0f b6       	in	r0, 0x3f	; 63
    3674:	f8 94       	cli
    3676:	de bf       	out	0x3e, r29	; 62
    3678:	0f be       	out	0x3f, r0	; 63
    367a:	cd bf       	out	0x3d, r28	; 61
    367c:	df 91       	pop	r29
    367e:	cf 91       	pop	r28
    3680:	08 95       	ret

00003682 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf>:
				
				void setMinLongitudeServoControlValue(float val)
    3682:	cf 93       	push	r28
    3684:	df 93       	push	r29
    3686:	00 d0       	rcall	.+0      	; 0x3688 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf+0x6>
    3688:	00 d0       	rcall	.+0      	; 0x368a <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf+0x8>
    368a:	cd b7       	in	r28, 0x3d	; 61
    368c:	de b7       	in	r29, 0x3e	; 62
    368e:	9a 83       	std	Y+2, r25	; 0x02
    3690:	89 83       	std	Y+1, r24	; 0x01
    3692:	4b 83       	std	Y+3, r20	; 0x03
    3694:	5c 83       	std	Y+4, r21	; 0x04
    3696:	6d 83       	std	Y+5, r22	; 0x05
    3698:	7e 83       	std	Y+6, r23	; 0x06
				{
					minLongitudeServoControlValue = val;
    369a:	89 81       	ldd	r24, Y+1	; 0x01
    369c:	9a 81       	ldd	r25, Y+2	; 0x02
    369e:	9c 01       	movw	r18, r24
    36a0:	26 5a       	subi	r18, 0xA6	; 166
    36a2:	3f 4f       	sbci	r19, 0xFF	; 255
    36a4:	8b 81       	ldd	r24, Y+3	; 0x03
    36a6:	9c 81       	ldd	r25, Y+4	; 0x04
    36a8:	ad 81       	ldd	r26, Y+5	; 0x05
    36aa:	be 81       	ldd	r27, Y+6	; 0x06
    36ac:	f9 01       	movw	r30, r18
    36ae:	80 83       	st	Z, r24
    36b0:	91 83       	std	Z+1, r25	; 0x01
    36b2:	a2 83       	std	Z+2, r26	; 0x02
    36b4:	b3 83       	std	Z+3, r27	; 0x03
				}
    36b6:	26 96       	adiw	r28, 0x06	; 6
    36b8:	0f b6       	in	r0, 0x3f	; 63
    36ba:	f8 94       	cli
    36bc:	de bf       	out	0x3e, r29	; 62
    36be:	0f be       	out	0x3f, r0	; 63
    36c0:	cd bf       	out	0x3d, r28	; 61
    36c2:	df 91       	pop	r29
    36c4:	cf 91       	pop	r28
    36c6:	08 95       	ret

000036c8 <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf>:
				
				void setMaxLongitudeServoControlValue(float val)
    36c8:	cf 93       	push	r28
    36ca:	df 93       	push	r29
    36cc:	00 d0       	rcall	.+0      	; 0x36ce <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf+0x6>
    36ce:	00 d0       	rcall	.+0      	; 0x36d0 <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf+0x8>
    36d0:	cd b7       	in	r28, 0x3d	; 61
    36d2:	de b7       	in	r29, 0x3e	; 62
    36d4:	9a 83       	std	Y+2, r25	; 0x02
    36d6:	89 83       	std	Y+1, r24	; 0x01
    36d8:	4b 83       	std	Y+3, r20	; 0x03
    36da:	5c 83       	std	Y+4, r21	; 0x04
    36dc:	6d 83       	std	Y+5, r22	; 0x05
    36de:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxLongitudeServoControlValue = val;
    36e0:	89 81       	ldd	r24, Y+1	; 0x01
    36e2:	9a 81       	ldd	r25, Y+2	; 0x02
    36e4:	9c 01       	movw	r18, r24
    36e6:	22 5a       	subi	r18, 0xA2	; 162
    36e8:	3f 4f       	sbci	r19, 0xFF	; 255
    36ea:	8b 81       	ldd	r24, Y+3	; 0x03
    36ec:	9c 81       	ldd	r25, Y+4	; 0x04
    36ee:	ad 81       	ldd	r26, Y+5	; 0x05
    36f0:	be 81       	ldd	r27, Y+6	; 0x06
    36f2:	f9 01       	movw	r30, r18
    36f4:	80 83       	st	Z, r24
    36f6:	91 83       	std	Z+1, r25	; 0x01
    36f8:	a2 83       	std	Z+2, r26	; 0x02
    36fa:	b3 83       	std	Z+3, r27	; 0x03
				}
    36fc:	26 96       	adiw	r28, 0x06	; 6
    36fe:	0f b6       	in	r0, 0x3f	; 63
    3700:	f8 94       	cli
    3702:	de bf       	out	0x3e, r29	; 62
    3704:	0f be       	out	0x3f, r0	; 63
    3706:	cd bf       	out	0x3d, r28	; 61
    3708:	df 91       	pop	r29
    370a:	cf 91       	pop	r28
    370c:	08 95       	ret

0000370e <_ZN10helicopter10controller13PIDController16setYIntegralGainEf>:
						
				
				
				
				
				void setYIntegralGain(float val)
    370e:	cf 93       	push	r28
    3710:	df 93       	push	r29
    3712:	00 d0       	rcall	.+0      	; 0x3714 <_ZN10helicopter10controller13PIDController16setYIntegralGainEf+0x6>
    3714:	00 d0       	rcall	.+0      	; 0x3716 <_ZN10helicopter10controller13PIDController16setYIntegralGainEf+0x8>
    3716:	cd b7       	in	r28, 0x3d	; 61
    3718:	de b7       	in	r29, 0x3e	; 62
    371a:	9a 83       	std	Y+2, r25	; 0x02
    371c:	89 83       	std	Y+1, r24	; 0x01
    371e:	4b 83       	std	Y+3, r20	; 0x03
    3720:	5c 83       	std	Y+4, r21	; 0x04
    3722:	6d 83       	std	Y+5, r22	; 0x05
    3724:	7e 83       	std	Y+6, r23	; 0x06
				{
					yIntegralGain = val;
    3726:	29 81       	ldd	r18, Y+1	; 0x01
    3728:	3a 81       	ldd	r19, Y+2	; 0x02
    372a:	8b 81       	ldd	r24, Y+3	; 0x03
    372c:	9c 81       	ldd	r25, Y+4	; 0x04
    372e:	ad 81       	ldd	r26, Y+5	; 0x05
    3730:	be 81       	ldd	r27, Y+6	; 0x06
    3732:	f9 01       	movw	r30, r18
    3734:	82 a7       	std	Z+42, r24	; 0x2a
    3736:	93 a7       	std	Z+43, r25	; 0x2b
    3738:	a4 a7       	std	Z+44, r26	; 0x2c
    373a:	b5 a7       	std	Z+45, r27	; 0x2d
				}
    373c:	26 96       	adiw	r28, 0x06	; 6
    373e:	0f b6       	in	r0, 0x3f	; 63
    3740:	f8 94       	cli
    3742:	de bf       	out	0x3e, r29	; 62
    3744:	0f be       	out	0x3f, r0	; 63
    3746:	cd bf       	out	0x3d, r28	; 61
    3748:	df 91       	pop	r29
    374a:	cf 91       	pop	r28
    374c:	08 95       	ret

0000374e <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf>:
				
				void setYDerivativeGain(float val)
    374e:	cf 93       	push	r28
    3750:	df 93       	push	r29
    3752:	00 d0       	rcall	.+0      	; 0x3754 <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf+0x6>
    3754:	00 d0       	rcall	.+0      	; 0x3756 <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf+0x8>
    3756:	cd b7       	in	r28, 0x3d	; 61
    3758:	de b7       	in	r29, 0x3e	; 62
    375a:	9a 83       	std	Y+2, r25	; 0x02
    375c:	89 83       	std	Y+1, r24	; 0x01
    375e:	4b 83       	std	Y+3, r20	; 0x03
    3760:	5c 83       	std	Y+4, r21	; 0x04
    3762:	6d 83       	std	Y+5, r22	; 0x05
    3764:	7e 83       	std	Y+6, r23	; 0x06
				{
					yDerivativeGain = val;
    3766:	29 81       	ldd	r18, Y+1	; 0x01
    3768:	3a 81       	ldd	r19, Y+2	; 0x02
    376a:	8b 81       	ldd	r24, Y+3	; 0x03
    376c:	9c 81       	ldd	r25, Y+4	; 0x04
    376e:	ad 81       	ldd	r26, Y+5	; 0x05
    3770:	be 81       	ldd	r27, Y+6	; 0x06
    3772:	f9 01       	movw	r30, r18
    3774:	86 a7       	std	Z+46, r24	; 0x2e
    3776:	97 a7       	std	Z+47, r25	; 0x2f
    3778:	a0 ab       	std	Z+48, r26	; 0x30
    377a:	b1 ab       	std	Z+49, r27	; 0x31
				}
    377c:	26 96       	adiw	r28, 0x06	; 6
    377e:	0f b6       	in	r0, 0x3f	; 63
    3780:	f8 94       	cli
    3782:	de bf       	out	0x3e, r29	; 62
    3784:	0f be       	out	0x3f, r0	; 63
    3786:	cd bf       	out	0x3d, r28	; 61
    3788:	df 91       	pop	r29
    378a:	cf 91       	pop	r28
    378c:	08 95       	ret

0000378e <_ZN10helicopter10controller13PIDController20setYProportionalGainEf>:
				
				void setYProportionalGain(float val)
    378e:	cf 93       	push	r28
    3790:	df 93       	push	r29
    3792:	00 d0       	rcall	.+0      	; 0x3794 <_ZN10helicopter10controller13PIDController20setYProportionalGainEf+0x6>
    3794:	00 d0       	rcall	.+0      	; 0x3796 <_ZN10helicopter10controller13PIDController20setYProportionalGainEf+0x8>
    3796:	cd b7       	in	r28, 0x3d	; 61
    3798:	de b7       	in	r29, 0x3e	; 62
    379a:	9a 83       	std	Y+2, r25	; 0x02
    379c:	89 83       	std	Y+1, r24	; 0x01
    379e:	4b 83       	std	Y+3, r20	; 0x03
    37a0:	5c 83       	std	Y+4, r21	; 0x04
    37a2:	6d 83       	std	Y+5, r22	; 0x05
    37a4:	7e 83       	std	Y+6, r23	; 0x06
				{
					yProportionalGain = val;
    37a6:	29 81       	ldd	r18, Y+1	; 0x01
    37a8:	3a 81       	ldd	r19, Y+2	; 0x02
    37aa:	8b 81       	ldd	r24, Y+3	; 0x03
    37ac:	9c 81       	ldd	r25, Y+4	; 0x04
    37ae:	ad 81       	ldd	r26, Y+5	; 0x05
    37b0:	be 81       	ldd	r27, Y+6	; 0x06
    37b2:	f9 01       	movw	r30, r18
    37b4:	82 ab       	std	Z+50, r24	; 0x32
    37b6:	93 ab       	std	Z+51, r25	; 0x33
    37b8:	a4 ab       	std	Z+52, r26	; 0x34
    37ba:	b5 ab       	std	Z+53, r27	; 0x35
				}
    37bc:	26 96       	adiw	r28, 0x06	; 6
    37be:	0f b6       	in	r0, 0x3f	; 63
    37c0:	f8 94       	cli
    37c2:	de bf       	out	0x3e, r29	; 62
    37c4:	0f be       	out	0x3f, r0	; 63
    37c6:	cd bf       	out	0x3d, r28	; 61
    37c8:	df 91       	pop	r29
    37ca:	cf 91       	pop	r28
    37cc:	08 95       	ret

000037ce <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf>:
				
				void setYAntiWindupGain(float val)
    37ce:	cf 93       	push	r28
    37d0:	df 93       	push	r29
    37d2:	00 d0       	rcall	.+0      	; 0x37d4 <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf+0x6>
    37d4:	00 d0       	rcall	.+0      	; 0x37d6 <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf+0x8>
    37d6:	cd b7       	in	r28, 0x3d	; 61
    37d8:	de b7       	in	r29, 0x3e	; 62
    37da:	9a 83       	std	Y+2, r25	; 0x02
    37dc:	89 83       	std	Y+1, r24	; 0x01
    37de:	4b 83       	std	Y+3, r20	; 0x03
    37e0:	5c 83       	std	Y+4, r21	; 0x04
    37e2:	6d 83       	std	Y+5, r22	; 0x05
    37e4:	7e 83       	std	Y+6, r23	; 0x06
				{
					yAntiWindupGain = val;
    37e6:	29 81       	ldd	r18, Y+1	; 0x01
    37e8:	3a 81       	ldd	r19, Y+2	; 0x02
    37ea:	8b 81       	ldd	r24, Y+3	; 0x03
    37ec:	9c 81       	ldd	r25, Y+4	; 0x04
    37ee:	ad 81       	ldd	r26, Y+5	; 0x05
    37f0:	be 81       	ldd	r27, Y+6	; 0x06
    37f2:	f9 01       	movw	r30, r18
    37f4:	86 ab       	std	Z+54, r24	; 0x36
    37f6:	97 ab       	std	Z+55, r25	; 0x37
    37f8:	a0 af       	std	Z+56, r26	; 0x38
    37fa:	b1 af       	std	Z+57, r27	; 0x39
				}
    37fc:	26 96       	adiw	r28, 0x06	; 6
    37fe:	0f b6       	in	r0, 0x3f	; 63
    3800:	f8 94       	cli
    3802:	de bf       	out	0x3e, r29	; 62
    3804:	0f be       	out	0x3f, r0	; 63
    3806:	cd bf       	out	0x3d, r28	; 61
    3808:	df 91       	pop	r29
    380a:	cf 91       	pop	r28
    380c:	08 95       	ret

0000380e <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf>:
				
				void setLateralInnerLoopGain(float val)
    380e:	cf 93       	push	r28
    3810:	df 93       	push	r29
    3812:	00 d0       	rcall	.+0      	; 0x3814 <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf+0x6>
    3814:	00 d0       	rcall	.+0      	; 0x3816 <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf+0x8>
    3816:	cd b7       	in	r28, 0x3d	; 61
    3818:	de b7       	in	r29, 0x3e	; 62
    381a:	9a 83       	std	Y+2, r25	; 0x02
    381c:	89 83       	std	Y+1, r24	; 0x01
    381e:	4b 83       	std	Y+3, r20	; 0x03
    3820:	5c 83       	std	Y+4, r21	; 0x04
    3822:	6d 83       	std	Y+5, r22	; 0x05
    3824:	7e 83       	std	Y+6, r23	; 0x06
				{
					lateralInnerLoopGain = val;
    3826:	29 81       	ldd	r18, Y+1	; 0x01
    3828:	3a 81       	ldd	r19, Y+2	; 0x02
    382a:	8b 81       	ldd	r24, Y+3	; 0x03
    382c:	9c 81       	ldd	r25, Y+4	; 0x04
    382e:	ad 81       	ldd	r26, Y+5	; 0x05
    3830:	be 81       	ldd	r27, Y+6	; 0x06
    3832:	f9 01       	movw	r30, r18
    3834:	82 af       	std	Z+58, r24	; 0x3a
    3836:	93 af       	std	Z+59, r25	; 0x3b
    3838:	a4 af       	std	Z+60, r26	; 0x3c
    383a:	b5 af       	std	Z+61, r27	; 0x3d
				}
    383c:	26 96       	adiw	r28, 0x06	; 6
    383e:	0f b6       	in	r0, 0x3f	; 63
    3840:	f8 94       	cli
    3842:	de bf       	out	0x3e, r29	; 62
    3844:	0f be       	out	0x3f, r0	; 63
    3846:	cd bf       	out	0x3d, r28	; 61
    3848:	df 91       	pop	r29
    384a:	cf 91       	pop	r28
    384c:	08 95       	ret

0000384e <_ZN10helicopter10controller13PIDController26setRollAngularVelocityGainEf>:
				
				void setRollAngularVelocityGain(float val)
    384e:	cf 93       	push	r28
    3850:	df 93       	push	r29
    3852:	00 d0       	rcall	.+0      	; 0x3854 <_ZN10helicopter10controller13PIDController26setRollAngularVelocityGainEf+0x6>
    3854:	00 d0       	rcall	.+0      	; 0x3856 <_ZN10helicopter10controller13PIDController26setRollAngularVelocityGainEf+0x8>
    3856:	cd b7       	in	r28, 0x3d	; 61
    3858:	de b7       	in	r29, 0x3e	; 62
    385a:	9a 83       	std	Y+2, r25	; 0x02
    385c:	89 83       	std	Y+1, r24	; 0x01
    385e:	4b 83       	std	Y+3, r20	; 0x03
    3860:	5c 83       	std	Y+4, r21	; 0x04
    3862:	6d 83       	std	Y+5, r22	; 0x05
    3864:	7e 83       	std	Y+6, r23	; 0x06
				{
					rollAngularVelocityGain = val;
    3866:	89 81       	ldd	r24, Y+1	; 0x01
    3868:	9a 81       	ldd	r25, Y+2	; 0x02
    386a:	9c 01       	movw	r18, r24
    386c:	22 5c       	subi	r18, 0xC2	; 194
    386e:	3f 4f       	sbci	r19, 0xFF	; 255
    3870:	8b 81       	ldd	r24, Y+3	; 0x03
    3872:	9c 81       	ldd	r25, Y+4	; 0x04
    3874:	ad 81       	ldd	r26, Y+5	; 0x05
    3876:	be 81       	ldd	r27, Y+6	; 0x06
    3878:	f9 01       	movw	r30, r18
    387a:	80 83       	st	Z, r24
    387c:	91 83       	std	Z+1, r25	; 0x01
    387e:	a2 83       	std	Z+2, r26	; 0x02
    3880:	b3 83       	std	Z+3, r27	; 0x03
				}
    3882:	26 96       	adiw	r28, 0x06	; 6
    3884:	0f b6       	in	r0, 0x3f	; 63
    3886:	f8 94       	cli
    3888:	de bf       	out	0x3e, r29	; 62
    388a:	0f be       	out	0x3f, r0	; 63
    388c:	cd bf       	out	0x3d, r28	; 61
    388e:	df 91       	pop	r29
    3890:	cf 91       	pop	r28
    3892:	08 95       	ret

00003894 <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf>:
				
				void setMinLateralServoControlValue(float val)
    3894:	cf 93       	push	r28
    3896:	df 93       	push	r29
    3898:	00 d0       	rcall	.+0      	; 0x389a <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf+0x6>
    389a:	00 d0       	rcall	.+0      	; 0x389c <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf+0x8>
    389c:	cd b7       	in	r28, 0x3d	; 61
    389e:	de b7       	in	r29, 0x3e	; 62
    38a0:	9a 83       	std	Y+2, r25	; 0x02
    38a2:	89 83       	std	Y+1, r24	; 0x01
    38a4:	4b 83       	std	Y+3, r20	; 0x03
    38a6:	5c 83       	std	Y+4, r21	; 0x04
    38a8:	6d 83       	std	Y+5, r22	; 0x05
    38aa:	7e 83       	std	Y+6, r23	; 0x06
				{
					minLateralServoControlValue = val;
    38ac:	89 81       	ldd	r24, Y+1	; 0x01
    38ae:	9a 81       	ldd	r25, Y+2	; 0x02
    38b0:	9c 01       	movw	r18, r24
    38b2:	2e 59       	subi	r18, 0x9E	; 158
    38b4:	3f 4f       	sbci	r19, 0xFF	; 255
    38b6:	8b 81       	ldd	r24, Y+3	; 0x03
    38b8:	9c 81       	ldd	r25, Y+4	; 0x04
    38ba:	ad 81       	ldd	r26, Y+5	; 0x05
    38bc:	be 81       	ldd	r27, Y+6	; 0x06
    38be:	f9 01       	movw	r30, r18
    38c0:	80 83       	st	Z, r24
    38c2:	91 83       	std	Z+1, r25	; 0x01
    38c4:	a2 83       	std	Z+2, r26	; 0x02
    38c6:	b3 83       	std	Z+3, r27	; 0x03
				}
    38c8:	26 96       	adiw	r28, 0x06	; 6
    38ca:	0f b6       	in	r0, 0x3f	; 63
    38cc:	f8 94       	cli
    38ce:	de bf       	out	0x3e, r29	; 62
    38d0:	0f be       	out	0x3f, r0	; 63
    38d2:	cd bf       	out	0x3d, r28	; 61
    38d4:	df 91       	pop	r29
    38d6:	cf 91       	pop	r28
    38d8:	08 95       	ret

000038da <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf>:
				
				void setMaxLateralServoControlValue(float val)
    38da:	cf 93       	push	r28
    38dc:	df 93       	push	r29
    38de:	00 d0       	rcall	.+0      	; 0x38e0 <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf+0x6>
    38e0:	00 d0       	rcall	.+0      	; 0x38e2 <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf+0x8>
    38e2:	cd b7       	in	r28, 0x3d	; 61
    38e4:	de b7       	in	r29, 0x3e	; 62
    38e6:	9a 83       	std	Y+2, r25	; 0x02
    38e8:	89 83       	std	Y+1, r24	; 0x01
    38ea:	4b 83       	std	Y+3, r20	; 0x03
    38ec:	5c 83       	std	Y+4, r21	; 0x04
    38ee:	6d 83       	std	Y+5, r22	; 0x05
    38f0:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxLateralServoControlValue = val;
    38f2:	89 81       	ldd	r24, Y+1	; 0x01
    38f4:	9a 81       	ldd	r25, Y+2	; 0x02
    38f6:	9c 01       	movw	r18, r24
    38f8:	2a 59       	subi	r18, 0x9A	; 154
    38fa:	3f 4f       	sbci	r19, 0xFF	; 255
    38fc:	8b 81       	ldd	r24, Y+3	; 0x03
    38fe:	9c 81       	ldd	r25, Y+4	; 0x04
    3900:	ad 81       	ldd	r26, Y+5	; 0x05
    3902:	be 81       	ldd	r27, Y+6	; 0x06
    3904:	f9 01       	movw	r30, r18
    3906:	80 83       	st	Z, r24
    3908:	91 83       	std	Z+1, r25	; 0x01
    390a:	a2 83       	std	Z+2, r26	; 0x02
    390c:	b3 83       	std	Z+3, r27	; 0x03
				}
    390e:	26 96       	adiw	r28, 0x06	; 6
    3910:	0f b6       	in	r0, 0x3f	; 63
    3912:	f8 94       	cli
    3914:	de bf       	out	0x3e, r29	; 62
    3916:	0f be       	out	0x3f, r0	; 63
    3918:	cd bf       	out	0x3d, r28	; 61
    391a:	df 91       	pop	r29
    391c:	cf 91       	pop	r28
    391e:	08 95       	ret

00003920 <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf>:
				void setZAntiWindupGain(float val)
				{
					zAntiWindupGain = val;
				}
				
				void setMinMainRotorServoControlValue(float val)
    3920:	cf 93       	push	r28
    3922:	df 93       	push	r29
    3924:	00 d0       	rcall	.+0      	; 0x3926 <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf+0x6>
    3926:	00 d0       	rcall	.+0      	; 0x3928 <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf+0x8>
    3928:	cd b7       	in	r28, 0x3d	; 61
    392a:	de b7       	in	r29, 0x3e	; 62
    392c:	9a 83       	std	Y+2, r25	; 0x02
    392e:	89 83       	std	Y+1, r24	; 0x01
    3930:	4b 83       	std	Y+3, r20	; 0x03
    3932:	5c 83       	std	Y+4, r21	; 0x04
    3934:	6d 83       	std	Y+5, r22	; 0x05
    3936:	7e 83       	std	Y+6, r23	; 0x06
				{
					minMainRotorServoControlValue = val;
    3938:	89 81       	ldd	r24, Y+1	; 0x01
    393a:	9a 81       	ldd	r25, Y+2	; 0x02
    393c:	9c 01       	movw	r18, r24
    393e:	26 59       	subi	r18, 0x96	; 150
    3940:	3f 4f       	sbci	r19, 0xFF	; 255
    3942:	8b 81       	ldd	r24, Y+3	; 0x03
    3944:	9c 81       	ldd	r25, Y+4	; 0x04
    3946:	ad 81       	ldd	r26, Y+5	; 0x05
    3948:	be 81       	ldd	r27, Y+6	; 0x06
    394a:	f9 01       	movw	r30, r18
    394c:	80 83       	st	Z, r24
    394e:	91 83       	std	Z+1, r25	; 0x01
    3950:	a2 83       	std	Z+2, r26	; 0x02
    3952:	b3 83       	std	Z+3, r27	; 0x03
				}
    3954:	26 96       	adiw	r28, 0x06	; 6
    3956:	0f b6       	in	r0, 0x3f	; 63
    3958:	f8 94       	cli
    395a:	de bf       	out	0x3e, r29	; 62
    395c:	0f be       	out	0x3f, r0	; 63
    395e:	cd bf       	out	0x3d, r28	; 61
    3960:	df 91       	pop	r29
    3962:	cf 91       	pop	r28
    3964:	08 95       	ret

00003966 <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf>:
				
				void setMaxMainRotorServoControlValue(float val)
    3966:	cf 93       	push	r28
    3968:	df 93       	push	r29
    396a:	00 d0       	rcall	.+0      	; 0x396c <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf+0x6>
    396c:	00 d0       	rcall	.+0      	; 0x396e <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf+0x8>
    396e:	cd b7       	in	r28, 0x3d	; 61
    3970:	de b7       	in	r29, 0x3e	; 62
    3972:	9a 83       	std	Y+2, r25	; 0x02
    3974:	89 83       	std	Y+1, r24	; 0x01
    3976:	4b 83       	std	Y+3, r20	; 0x03
    3978:	5c 83       	std	Y+4, r21	; 0x04
    397a:	6d 83       	std	Y+5, r22	; 0x05
    397c:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxMainRotorServoControlValue = val;
    397e:	89 81       	ldd	r24, Y+1	; 0x01
    3980:	9a 81       	ldd	r25, Y+2	; 0x02
    3982:	9c 01       	movw	r18, r24
    3984:	22 59       	subi	r18, 0x92	; 146
    3986:	3f 4f       	sbci	r19, 0xFF	; 255
    3988:	8b 81       	ldd	r24, Y+3	; 0x03
    398a:	9c 81       	ldd	r25, Y+4	; 0x04
    398c:	ad 81       	ldd	r26, Y+5	; 0x05
    398e:	be 81       	ldd	r27, Y+6	; 0x06
    3990:	f9 01       	movw	r30, r18
    3992:	80 83       	st	Z, r24
    3994:	91 83       	std	Z+1, r25	; 0x01
    3996:	a2 83       	std	Z+2, r26	; 0x02
    3998:	b3 83       	std	Z+3, r27	; 0x03
				}
    399a:	26 96       	adiw	r28, 0x06	; 6
    399c:	0f b6       	in	r0, 0x3f	; 63
    399e:	f8 94       	cli
    39a0:	de bf       	out	0x3e, r29	; 62
    39a2:	0f be       	out	0x3f, r0	; 63
    39a4:	cd bf       	out	0x3d, r28	; 61
    39a6:	df 91       	pop	r29
    39a8:	cf 91       	pop	r28
    39aa:	08 95       	ret

000039ac <_ZN10helicopter10controller13PIDController25setMaxRollSetpointDegreesEf>:


				void setMaxRollSetpointDegrees(float val)
    39ac:	cf 93       	push	r28
    39ae:	df 93       	push	r29
    39b0:	00 d0       	rcall	.+0      	; 0x39b2 <_ZN10helicopter10controller13PIDController25setMaxRollSetpointDegreesEf+0x6>
    39b2:	00 d0       	rcall	.+0      	; 0x39b4 <_ZN10helicopter10controller13PIDController25setMaxRollSetpointDegreesEf+0x8>
    39b4:	cd b7       	in	r28, 0x3d	; 61
    39b6:	de b7       	in	r29, 0x3e	; 62
    39b8:	9a 83       	std	Y+2, r25	; 0x02
    39ba:	89 83       	std	Y+1, r24	; 0x01
    39bc:	4b 83       	std	Y+3, r20	; 0x03
    39be:	5c 83       	std	Y+4, r21	; 0x04
    39c0:	6d 83       	std	Y+5, r22	; 0x05
    39c2:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxRollSetpointDegrees = val;
    39c4:	89 81       	ldd	r24, Y+1	; 0x01
    39c6:	9a 81       	ldd	r25, Y+2	; 0x02
    39c8:	9c 01       	movw	r18, r24
    39ca:	22 58       	subi	r18, 0x82	; 130
    39cc:	3f 4f       	sbci	r19, 0xFF	; 255
    39ce:	8b 81       	ldd	r24, Y+3	; 0x03
    39d0:	9c 81       	ldd	r25, Y+4	; 0x04
    39d2:	ad 81       	ldd	r26, Y+5	; 0x05
    39d4:	be 81       	ldd	r27, Y+6	; 0x06
    39d6:	f9 01       	movw	r30, r18
    39d8:	80 83       	st	Z, r24
    39da:	91 83       	std	Z+1, r25	; 0x01
    39dc:	a2 83       	std	Z+2, r26	; 0x02
    39de:	b3 83       	std	Z+3, r27	; 0x03
				}
    39e0:	26 96       	adiw	r28, 0x06	; 6
    39e2:	0f b6       	in	r0, 0x3f	; 63
    39e4:	f8 94       	cli
    39e6:	de bf       	out	0x3e, r29	; 62
    39e8:	0f be       	out	0x3f, r0	; 63
    39ea:	cd bf       	out	0x3d, r28	; 61
    39ec:	df 91       	pop	r29
    39ee:	cf 91       	pop	r28
    39f0:	08 95       	ret

000039f2 <_ZN10helicopter10controller13PIDController25setMinRollSetpointDegreesEf>:
				
				void setMinRollSetpointDegrees(float val)
    39f2:	cf 93       	push	r28
    39f4:	df 93       	push	r29
    39f6:	00 d0       	rcall	.+0      	; 0x39f8 <_ZN10helicopter10controller13PIDController25setMinRollSetpointDegreesEf+0x6>
    39f8:	00 d0       	rcall	.+0      	; 0x39fa <_ZN10helicopter10controller13PIDController25setMinRollSetpointDegreesEf+0x8>
    39fa:	cd b7       	in	r28, 0x3d	; 61
    39fc:	de b7       	in	r29, 0x3e	; 62
    39fe:	9a 83       	std	Y+2, r25	; 0x02
    3a00:	89 83       	std	Y+1, r24	; 0x01
    3a02:	4b 83       	std	Y+3, r20	; 0x03
    3a04:	5c 83       	std	Y+4, r21	; 0x04
    3a06:	6d 83       	std	Y+5, r22	; 0x05
    3a08:	7e 83       	std	Y+6, r23	; 0x06
				{
					minRollSetpointDegrees = val;
    3a0a:	89 81       	ldd	r24, Y+1	; 0x01
    3a0c:	9a 81       	ldd	r25, Y+2	; 0x02
    3a0e:	9c 01       	movw	r18, r24
    3a10:	26 58       	subi	r18, 0x86	; 134
    3a12:	3f 4f       	sbci	r19, 0xFF	; 255
    3a14:	8b 81       	ldd	r24, Y+3	; 0x03
    3a16:	9c 81       	ldd	r25, Y+4	; 0x04
    3a18:	ad 81       	ldd	r26, Y+5	; 0x05
    3a1a:	be 81       	ldd	r27, Y+6	; 0x06
    3a1c:	f9 01       	movw	r30, r18
    3a1e:	80 83       	st	Z, r24
    3a20:	91 83       	std	Z+1, r25	; 0x01
    3a22:	a2 83       	std	Z+2, r26	; 0x02
    3a24:	b3 83       	std	Z+3, r27	; 0x03
				}
    3a26:	26 96       	adiw	r28, 0x06	; 6
    3a28:	0f b6       	in	r0, 0x3f	; 63
    3a2a:	f8 94       	cli
    3a2c:	de bf       	out	0x3e, r29	; 62
    3a2e:	0f be       	out	0x3f, r0	; 63
    3a30:	cd bf       	out	0x3d, r28	; 61
    3a32:	df 91       	pop	r29
    3a34:	cf 91       	pop	r28
    3a36:	08 95       	ret

00003a38 <_ZN10helicopter10controller13PIDController26setMaxPitchSetpointDegreesEf>:
				
				void setMaxPitchSetpointDegrees(float val)
    3a38:	cf 93       	push	r28
    3a3a:	df 93       	push	r29
    3a3c:	00 d0       	rcall	.+0      	; 0x3a3e <_ZN10helicopter10controller13PIDController26setMaxPitchSetpointDegreesEf+0x6>
    3a3e:	00 d0       	rcall	.+0      	; 0x3a40 <_ZN10helicopter10controller13PIDController26setMaxPitchSetpointDegreesEf+0x8>
    3a40:	cd b7       	in	r28, 0x3d	; 61
    3a42:	de b7       	in	r29, 0x3e	; 62
    3a44:	9a 83       	std	Y+2, r25	; 0x02
    3a46:	89 83       	std	Y+1, r24	; 0x01
    3a48:	4b 83       	std	Y+3, r20	; 0x03
    3a4a:	5c 83       	std	Y+4, r21	; 0x04
    3a4c:	6d 83       	std	Y+5, r22	; 0x05
    3a4e:	7e 83       	std	Y+6, r23	; 0x06
				{
					maxPitchSetpointDegrees = val;
    3a50:	89 81       	ldd	r24, Y+1	; 0x01
    3a52:	9a 81       	ldd	r25, Y+2	; 0x02
    3a54:	9c 01       	movw	r18, r24
    3a56:	2a 58       	subi	r18, 0x8A	; 138
    3a58:	3f 4f       	sbci	r19, 0xFF	; 255
    3a5a:	8b 81       	ldd	r24, Y+3	; 0x03
    3a5c:	9c 81       	ldd	r25, Y+4	; 0x04
    3a5e:	ad 81       	ldd	r26, Y+5	; 0x05
    3a60:	be 81       	ldd	r27, Y+6	; 0x06
    3a62:	f9 01       	movw	r30, r18
    3a64:	80 83       	st	Z, r24
    3a66:	91 83       	std	Z+1, r25	; 0x01
    3a68:	a2 83       	std	Z+2, r26	; 0x02
    3a6a:	b3 83       	std	Z+3, r27	; 0x03
				}
    3a6c:	26 96       	adiw	r28, 0x06	; 6
    3a6e:	0f b6       	in	r0, 0x3f	; 63
    3a70:	f8 94       	cli
    3a72:	de bf       	out	0x3e, r29	; 62
    3a74:	0f be       	out	0x3f, r0	; 63
    3a76:	cd bf       	out	0x3d, r28	; 61
    3a78:	df 91       	pop	r29
    3a7a:	cf 91       	pop	r28
    3a7c:	08 95       	ret

00003a7e <_ZN10helicopter10controller13PIDController26setMinPitchSetpointDegreesEf>:
				
				void setMinPitchSetpointDegrees(float val)
    3a7e:	cf 93       	push	r28
    3a80:	df 93       	push	r29
    3a82:	00 d0       	rcall	.+0      	; 0x3a84 <_ZN10helicopter10controller13PIDController26setMinPitchSetpointDegreesEf+0x6>
    3a84:	00 d0       	rcall	.+0      	; 0x3a86 <_ZN10helicopter10controller13PIDController26setMinPitchSetpointDegreesEf+0x8>
    3a86:	cd b7       	in	r28, 0x3d	; 61
    3a88:	de b7       	in	r29, 0x3e	; 62
    3a8a:	9a 83       	std	Y+2, r25	; 0x02
    3a8c:	89 83       	std	Y+1, r24	; 0x01
    3a8e:	4b 83       	std	Y+3, r20	; 0x03
    3a90:	5c 83       	std	Y+4, r21	; 0x04
    3a92:	6d 83       	std	Y+5, r22	; 0x05
    3a94:	7e 83       	std	Y+6, r23	; 0x06
				{	
					minPitchSetpointDegrees = val;
    3a96:	89 81       	ldd	r24, Y+1	; 0x01
    3a98:	9a 81       	ldd	r25, Y+2	; 0x02
    3a9a:	9c 01       	movw	r18, r24
    3a9c:	2e 58       	subi	r18, 0x8E	; 142
    3a9e:	3f 4f       	sbci	r19, 0xFF	; 255
    3aa0:	8b 81       	ldd	r24, Y+3	; 0x03
    3aa2:	9c 81       	ldd	r25, Y+4	; 0x04
    3aa4:	ad 81       	ldd	r26, Y+5	; 0x05
    3aa6:	be 81       	ldd	r27, Y+6	; 0x06
    3aa8:	f9 01       	movw	r30, r18
    3aaa:	80 83       	st	Z, r24
    3aac:	91 83       	std	Z+1, r25	; 0x01
    3aae:	a2 83       	std	Z+2, r26	; 0x02
    3ab0:	b3 83       	std	Z+3, r27	; 0x03
				}				
    3ab2:	26 96       	adiw	r28, 0x06	; 6
    3ab4:	0f b6       	in	r0, 0x3f	; 63
    3ab6:	f8 94       	cli
    3ab8:	de bf       	out	0x3e, r29	; 62
    3aba:	0f be       	out	0x3f, r0	; 63
    3abc:	cd bf       	out	0x3d, r28	; 61
    3abe:	df 91       	pop	r29
    3ac0:	cf 91       	pop	r28
    3ac2:	08 95       	ret

00003ac4 <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf>:
				
				
				/**
				 * Gain value applied to the yaw proportional error
				 */
				void setYawProportionalGain(float yawProportionalGain)
    3ac4:	cf 93       	push	r28
    3ac6:	df 93       	push	r29
    3ac8:	00 d0       	rcall	.+0      	; 0x3aca <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf+0x6>
    3aca:	00 d0       	rcall	.+0      	; 0x3acc <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf+0x8>
    3acc:	cd b7       	in	r28, 0x3d	; 61
    3ace:	de b7       	in	r29, 0x3e	; 62
    3ad0:	9a 83       	std	Y+2, r25	; 0x02
    3ad2:	89 83       	std	Y+1, r24	; 0x01
    3ad4:	4b 83       	std	Y+3, r20	; 0x03
    3ad6:	5c 83       	std	Y+4, r21	; 0x04
    3ad8:	6d 83       	std	Y+5, r22	; 0x05
    3ada:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawProportionalGain = yawProportionalGain;
    3adc:	29 81       	ldd	r18, Y+1	; 0x01
    3ade:	3a 81       	ldd	r19, Y+2	; 0x02
    3ae0:	8b 81       	ldd	r24, Y+3	; 0x03
    3ae2:	9c 81       	ldd	r25, Y+4	; 0x04
    3ae4:	ad 81       	ldd	r26, Y+5	; 0x05
    3ae6:	be 81       	ldd	r27, Y+6	; 0x06
    3ae8:	f9 01       	movw	r30, r18
    3aea:	82 87       	std	Z+10, r24	; 0x0a
    3aec:	93 87       	std	Z+11, r25	; 0x0b
    3aee:	a4 87       	std	Z+12, r26	; 0x0c
    3af0:	b5 87       	std	Z+13, r27	; 0x0d
				}
    3af2:	26 96       	adiw	r28, 0x06	; 6
    3af4:	0f b6       	in	r0, 0x3f	; 63
    3af6:	f8 94       	cli
    3af8:	de bf       	out	0x3e, r29	; 62
    3afa:	0f be       	out	0x3f, r0	; 63
    3afc:	cd bf       	out	0x3d, r28	; 61
    3afe:	df 91       	pop	r29
    3b00:	cf 91       	pop	r28
    3b02:	08 95       	ret

00003b04 <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf>:
				
				/**
				 * Gain value applied to the yaw integral
				 */
				void setYawIntegralGain(float yawIntegralGain)
    3b04:	cf 93       	push	r28
    3b06:	df 93       	push	r29
    3b08:	00 d0       	rcall	.+0      	; 0x3b0a <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf+0x6>
    3b0a:	00 d0       	rcall	.+0      	; 0x3b0c <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf+0x8>
    3b0c:	cd b7       	in	r28, 0x3d	; 61
    3b0e:	de b7       	in	r29, 0x3e	; 62
    3b10:	9a 83       	std	Y+2, r25	; 0x02
    3b12:	89 83       	std	Y+1, r24	; 0x01
    3b14:	4b 83       	std	Y+3, r20	; 0x03
    3b16:	5c 83       	std	Y+4, r21	; 0x04
    3b18:	6d 83       	std	Y+5, r22	; 0x05
    3b1a:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawIntegralGain = yawIntegralGain;
    3b1c:	29 81       	ldd	r18, Y+1	; 0x01
    3b1e:	3a 81       	ldd	r19, Y+2	; 0x02
    3b20:	8b 81       	ldd	r24, Y+3	; 0x03
    3b22:	9c 81       	ldd	r25, Y+4	; 0x04
    3b24:	ad 81       	ldd	r26, Y+5	; 0x05
    3b26:	be 81       	ldd	r27, Y+6	; 0x06
    3b28:	f9 01       	movw	r30, r18
    3b2a:	82 83       	std	Z+2, r24	; 0x02
    3b2c:	93 83       	std	Z+3, r25	; 0x03
    3b2e:	a4 83       	std	Z+4, r26	; 0x04
    3b30:	b5 83       	std	Z+5, r27	; 0x05
				}
    3b32:	26 96       	adiw	r28, 0x06	; 6
    3b34:	0f b6       	in	r0, 0x3f	; 63
    3b36:	f8 94       	cli
    3b38:	de bf       	out	0x3e, r29	; 62
    3b3a:	0f be       	out	0x3f, r0	; 63
    3b3c:	cd bf       	out	0x3d, r28	; 61
    3b3e:	df 91       	pop	r29
    3b40:	cf 91       	pop	r28
    3b42:	08 95       	ret

00003b44 <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf>:
				
				/**
				 * Gain value applied to the derivative
				 */
				void setYawDerivativeGain(float yawDerivativeGain)
    3b44:	cf 93       	push	r28
    3b46:	df 93       	push	r29
    3b48:	00 d0       	rcall	.+0      	; 0x3b4a <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf+0x6>
    3b4a:	00 d0       	rcall	.+0      	; 0x3b4c <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf+0x8>
    3b4c:	cd b7       	in	r28, 0x3d	; 61
    3b4e:	de b7       	in	r29, 0x3e	; 62
    3b50:	9a 83       	std	Y+2, r25	; 0x02
    3b52:	89 83       	std	Y+1, r24	; 0x01
    3b54:	4b 83       	std	Y+3, r20	; 0x03
    3b56:	5c 83       	std	Y+4, r21	; 0x04
    3b58:	6d 83       	std	Y+5, r22	; 0x05
    3b5a:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawDerivativeGain = yawDerivativeGain;
    3b5c:	29 81       	ldd	r18, Y+1	; 0x01
    3b5e:	3a 81       	ldd	r19, Y+2	; 0x02
    3b60:	8b 81       	ldd	r24, Y+3	; 0x03
    3b62:	9c 81       	ldd	r25, Y+4	; 0x04
    3b64:	ad 81       	ldd	r26, Y+5	; 0x05
    3b66:	be 81       	ldd	r27, Y+6	; 0x06
    3b68:	f9 01       	movw	r30, r18
    3b6a:	86 83       	std	Z+6, r24	; 0x06
    3b6c:	97 83       	std	Z+7, r25	; 0x07
    3b6e:	a0 87       	std	Z+8, r26	; 0x08
    3b70:	b1 87       	std	Z+9, r27	; 0x09
				}
    3b72:	26 96       	adiw	r28, 0x06	; 6
    3b74:	0f b6       	in	r0, 0x3f	; 63
    3b76:	f8 94       	cli
    3b78:	de bf       	out	0x3e, r29	; 62
    3b7a:	0f be       	out	0x3f, r0	; 63
    3b7c:	cd bf       	out	0x3d, r28	; 61
    3b7e:	df 91       	pop	r29
    3b80:	cf 91       	pop	r28
    3b82:	08 95       	ret

00003b84 <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf>:
				
				/**
				 * The number of seconds between pid controller updates. This number
				 * should generally be less than 1. Like .05 for a 20 hz rate.
				 */
				void setIntervalPeriodSecs(float intervalPeriodSecs)
    3b84:	cf 93       	push	r28
    3b86:	df 93       	push	r29
    3b88:	00 d0       	rcall	.+0      	; 0x3b8a <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf+0x6>
    3b8a:	00 d0       	rcall	.+0      	; 0x3b8c <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf+0x8>
    3b8c:	cd b7       	in	r28, 0x3d	; 61
    3b8e:	de b7       	in	r29, 0x3e	; 62
    3b90:	9a 83       	std	Y+2, r25	; 0x02
    3b92:	89 83       	std	Y+1, r24	; 0x01
    3b94:	4b 83       	std	Y+3, r20	; 0x03
    3b96:	5c 83       	std	Y+4, r21	; 0x04
    3b98:	6d 83       	std	Y+5, r22	; 0x05
    3b9a:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->intervalPeriodSecs = intervalPeriodSecs;
    3b9c:	89 81       	ldd	r24, Y+1	; 0x01
    3b9e:	9a 81       	ldd	r25, Y+2	; 0x02
    3ba0:	9c 01       	movw	r18, r24
    3ba2:	2e 57       	subi	r18, 0x7E	; 126
    3ba4:	3f 4f       	sbci	r19, 0xFF	; 255
    3ba6:	8b 81       	ldd	r24, Y+3	; 0x03
    3ba8:	9c 81       	ldd	r25, Y+4	; 0x04
    3baa:	ad 81       	ldd	r26, Y+5	; 0x05
    3bac:	be 81       	ldd	r27, Y+6	; 0x06
    3bae:	f9 01       	movw	r30, r18
    3bb0:	80 83       	st	Z, r24
    3bb2:	91 83       	std	Z+1, r25	; 0x01
    3bb4:	a2 83       	std	Z+2, r26	; 0x02
    3bb6:	b3 83       	std	Z+3, r27	; 0x03
				}
    3bb8:	26 96       	adiw	r28, 0x06	; 6
    3bba:	0f b6       	in	r0, 0x3f	; 63
    3bbc:	f8 94       	cli
    3bbe:	de bf       	out	0x3e, r29	; 62
    3bc0:	0f be       	out	0x3f, r0	; 63
    3bc2:	cd bf       	out	0x3d, r28	; 61
    3bc4:	df 91       	pop	r29
    3bc6:	cf 91       	pop	r28
    3bc8:	08 95       	ret

00003bca <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf>:
				 * keeps increasing despite the helicopter already at the maximum possible control values.
				 * @param yawAntiWindupGain The gain value which represents how fast the integral will
				 * go back to 0 when the servos are saturated.
				 * Some simple rule that have been suggested for the tracking time are ~ Tt = TiTd and Tt = (Ti + Td)/2.
				 */
				void setYawAntiWindupGain(float yawAntiWindupGain)
    3bca:	cf 93       	push	r28
    3bcc:	df 93       	push	r29
    3bce:	00 d0       	rcall	.+0      	; 0x3bd0 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf+0x6>
    3bd0:	00 d0       	rcall	.+0      	; 0x3bd2 <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf+0x8>
    3bd2:	cd b7       	in	r28, 0x3d	; 61
    3bd4:	de b7       	in	r29, 0x3e	; 62
    3bd6:	9a 83       	std	Y+2, r25	; 0x02
    3bd8:	89 83       	std	Y+1, r24	; 0x01
    3bda:	4b 83       	std	Y+3, r20	; 0x03
    3bdc:	5c 83       	std	Y+4, r21	; 0x04
    3bde:	6d 83       	std	Y+5, r22	; 0x05
    3be0:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->yawAntiWindupGain = yawAntiWindupGain;
    3be2:	29 81       	ldd	r18, Y+1	; 0x01
    3be4:	3a 81       	ldd	r19, Y+2	; 0x02
    3be6:	8b 81       	ldd	r24, Y+3	; 0x03
    3be8:	9c 81       	ldd	r25, Y+4	; 0x04
    3bea:	ad 81       	ldd	r26, Y+5	; 0x05
    3bec:	be 81       	ldd	r27, Y+6	; 0x06
    3bee:	f9 01       	movw	r30, r18
    3bf0:	86 87       	std	Z+14, r24	; 0x0e
    3bf2:	97 87       	std	Z+15, r25	; 0x0f
    3bf4:	a0 8b       	std	Z+16, r26	; 0x10
    3bf6:	b1 8b       	std	Z+17, r27	; 0x11
				}
    3bf8:	26 96       	adiw	r28, 0x06	; 6
    3bfa:	0f b6       	in	r0, 0x3f	; 63
    3bfc:	f8 94       	cli
    3bfe:	de bf       	out	0x3e, r29	; 62
    3c00:	0f be       	out	0x3f, r0	; 63
    3c02:	cd bf       	out	0x3d, r28	; 61
    3c04:	df 91       	pop	r29
    3c06:	cf 91       	pop	r28
    3c08:	08 95       	ret

00003c0a <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf>:
				/**
				 * The minimum control value that the yaw actuators can be set too. This is used for 
				 * integral anti-windup to determine when the actuators would be saturated.
				 * The value should be no smaller than the controlMinValue (e.g. no less than -1)
				 */
				void setMinYawServoControl(float minYawServoControlValue)
    3c0a:	cf 93       	push	r28
    3c0c:	df 93       	push	r29
    3c0e:	00 d0       	rcall	.+0      	; 0x3c10 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf+0x6>
    3c10:	00 d0       	rcall	.+0      	; 0x3c12 <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf+0x8>
    3c12:	cd b7       	in	r28, 0x3d	; 61
    3c14:	de b7       	in	r29, 0x3e	; 62
    3c16:	9a 83       	std	Y+2, r25	; 0x02
    3c18:	89 83       	std	Y+1, r24	; 0x01
    3c1a:	4b 83       	std	Y+3, r20	; 0x03
    3c1c:	5c 83       	std	Y+4, r21	; 0x04
    3c1e:	6d 83       	std	Y+5, r22	; 0x05
    3c20:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->minYawServoControlValue = minYawServoControlValue;
    3c22:	89 81       	ldd	r24, Y+1	; 0x01
    3c24:	9a 81       	ldd	r25, Y+2	; 0x02
    3c26:	9c 01       	movw	r18, r24
    3c28:	2e 5a       	subi	r18, 0xAE	; 174
    3c2a:	3f 4f       	sbci	r19, 0xFF	; 255
    3c2c:	8b 81       	ldd	r24, Y+3	; 0x03
    3c2e:	9c 81       	ldd	r25, Y+4	; 0x04
    3c30:	ad 81       	ldd	r26, Y+5	; 0x05
    3c32:	be 81       	ldd	r27, Y+6	; 0x06
    3c34:	f9 01       	movw	r30, r18
    3c36:	80 83       	st	Z, r24
    3c38:	91 83       	std	Z+1, r25	; 0x01
    3c3a:	a2 83       	std	Z+2, r26	; 0x02
    3c3c:	b3 83       	std	Z+3, r27	; 0x03
				}
    3c3e:	26 96       	adiw	r28, 0x06	; 6
    3c40:	0f b6       	in	r0, 0x3f	; 63
    3c42:	f8 94       	cli
    3c44:	de bf       	out	0x3e, r29	; 62
    3c46:	0f be       	out	0x3f, r0	; 63
    3c48:	cd bf       	out	0x3d, r28	; 61
    3c4a:	df 91       	pop	r29
    3c4c:	cf 91       	pop	r28
    3c4e:	08 95       	ret

00003c50 <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf>:
				/**
				 * The maximum control value that the yaw actuators can be set too. This is used for 
				 * integral anti-windup to determine when the actuators would be saturated.
				 * The value should be no larger than the controlMaxValue (e.g. no greater than 1)
				 */
				void setMaxYawServoControl(float maxYawServoControlValue)
    3c50:	cf 93       	push	r28
    3c52:	df 93       	push	r29
    3c54:	00 d0       	rcall	.+0      	; 0x3c56 <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf+0x6>
    3c56:	00 d0       	rcall	.+0      	; 0x3c58 <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf+0x8>
    3c58:	cd b7       	in	r28, 0x3d	; 61
    3c5a:	de b7       	in	r29, 0x3e	; 62
    3c5c:	9a 83       	std	Y+2, r25	; 0x02
    3c5e:	89 83       	std	Y+1, r24	; 0x01
    3c60:	4b 83       	std	Y+3, r20	; 0x03
    3c62:	5c 83       	std	Y+4, r21	; 0x04
    3c64:	6d 83       	std	Y+5, r22	; 0x05
    3c66:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->maxYawServoControlValue = maxYawServoControlValue;
    3c68:	89 81       	ldd	r24, Y+1	; 0x01
    3c6a:	9a 81       	ldd	r25, Y+2	; 0x02
    3c6c:	9c 01       	movw	r18, r24
    3c6e:	2a 5a       	subi	r18, 0xAA	; 170
    3c70:	3f 4f       	sbci	r19, 0xFF	; 255
    3c72:	8b 81       	ldd	r24, Y+3	; 0x03
    3c74:	9c 81       	ldd	r25, Y+4	; 0x04
    3c76:	ad 81       	ldd	r26, Y+5	; 0x05
    3c78:	be 81       	ldd	r27, Y+6	; 0x06
    3c7a:	f9 01       	movw	r30, r18
    3c7c:	80 83       	st	Z, r24
    3c7e:	91 83       	std	Z+1, r25	; 0x01
    3c80:	a2 83       	std	Z+2, r26	; 0x02
    3c82:	b3 83       	std	Z+3, r27	; 0x03
				}
    3c84:	26 96       	adiw	r28, 0x06	; 6
    3c86:	0f b6       	in	r0, 0x3f	; 63
    3c88:	f8 94       	cli
    3c8a:	de bf       	out	0x3e, r29	; 62
    3c8c:	0f be       	out	0x3f, r0	; 63
    3c8e:	cd bf       	out	0x3d, r28	; 61
    3c90:	df 91       	pop	r29
    3c92:	cf 91       	pop	r28
    3c94:	08 95       	ret

00003c96 <_ZN10helicopter10controller13PIDController18setControlMaxValueEf>:
				
				/**
				 * This is the maximum possible output value for a control signal.
				 * Generally, this should be set to 1.
				 */
				void setControlMaxValue(float controlMaxValue)
    3c96:	cf 93       	push	r28
    3c98:	df 93       	push	r29
    3c9a:	00 d0       	rcall	.+0      	; 0x3c9c <_ZN10helicopter10controller13PIDController18setControlMaxValueEf+0x6>
    3c9c:	00 d0       	rcall	.+0      	; 0x3c9e <_ZN10helicopter10controller13PIDController18setControlMaxValueEf+0x8>
    3c9e:	cd b7       	in	r28, 0x3d	; 61
    3ca0:	de b7       	in	r29, 0x3e	; 62
    3ca2:	9a 83       	std	Y+2, r25	; 0x02
    3ca4:	89 83       	std	Y+1, r24	; 0x01
    3ca6:	4b 83       	std	Y+3, r20	; 0x03
    3ca8:	5c 83       	std	Y+4, r21	; 0x04
    3caa:	6d 83       	std	Y+5, r22	; 0x05
    3cac:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->controlMaxValue = controlMaxValue;
    3cae:	89 81       	ldd	r24, Y+1	; 0x01
    3cb0:	9a 81       	ldd	r25, Y+2	; 0x02
    3cb2:	9c 01       	movw	r18, r24
    3cb4:	2a 57       	subi	r18, 0x7A	; 122
    3cb6:	3f 4f       	sbci	r19, 0xFF	; 255
    3cb8:	8b 81       	ldd	r24, Y+3	; 0x03
    3cba:	9c 81       	ldd	r25, Y+4	; 0x04
    3cbc:	ad 81       	ldd	r26, Y+5	; 0x05
    3cbe:	be 81       	ldd	r27, Y+6	; 0x06
    3cc0:	f9 01       	movw	r30, r18
    3cc2:	80 83       	st	Z, r24
    3cc4:	91 83       	std	Z+1, r25	; 0x01
    3cc6:	a2 83       	std	Z+2, r26	; 0x02
    3cc8:	b3 83       	std	Z+3, r27	; 0x03
				}
    3cca:	26 96       	adiw	r28, 0x06	; 6
    3ccc:	0f b6       	in	r0, 0x3f	; 63
    3cce:	f8 94       	cli
    3cd0:	de bf       	out	0x3e, r29	; 62
    3cd2:	0f be       	out	0x3f, r0	; 63
    3cd4:	cd bf       	out	0x3d, r28	; 61
    3cd6:	df 91       	pop	r29
    3cd8:	cf 91       	pop	r28
    3cda:	08 95       	ret

00003cdc <_ZN10helicopter10controller13PIDController18setControlMinValueEf>:
				
				/**
				 * This is the minimum possible value for a control signal.
				 * Generally, this should be set to -1.
				 */
				void setControlMinValue(float controlMinValue)
    3cdc:	cf 93       	push	r28
    3cde:	df 93       	push	r29
    3ce0:	00 d0       	rcall	.+0      	; 0x3ce2 <_ZN10helicopter10controller13PIDController18setControlMinValueEf+0x6>
    3ce2:	00 d0       	rcall	.+0      	; 0x3ce4 <_ZN10helicopter10controller13PIDController18setControlMinValueEf+0x8>
    3ce4:	cd b7       	in	r28, 0x3d	; 61
    3ce6:	de b7       	in	r29, 0x3e	; 62
    3ce8:	9a 83       	std	Y+2, r25	; 0x02
    3cea:	89 83       	std	Y+1, r24	; 0x01
    3cec:	4b 83       	std	Y+3, r20	; 0x03
    3cee:	5c 83       	std	Y+4, r21	; 0x04
    3cf0:	6d 83       	std	Y+5, r22	; 0x05
    3cf2:	7e 83       	std	Y+6, r23	; 0x06
				{
					this->controlMinValue = controlMinValue;
    3cf4:	89 81       	ldd	r24, Y+1	; 0x01
    3cf6:	9a 81       	ldd	r25, Y+2	; 0x02
    3cf8:	9c 01       	movw	r18, r24
    3cfa:	26 57       	subi	r18, 0x76	; 118
    3cfc:	3f 4f       	sbci	r19, 0xFF	; 255
    3cfe:	8b 81       	ldd	r24, Y+3	; 0x03
    3d00:	9c 81       	ldd	r25, Y+4	; 0x04
    3d02:	ad 81       	ldd	r26, Y+5	; 0x05
    3d04:	be 81       	ldd	r27, Y+6	; 0x06
    3d06:	f9 01       	movw	r30, r18
    3d08:	80 83       	st	Z, r24
    3d0a:	91 83       	std	Z+1, r25	; 0x01
    3d0c:	a2 83       	std	Z+2, r26	; 0x02
    3d0e:	b3 83       	std	Z+3, r27	; 0x03
				}			
    3d10:	26 96       	adiw	r28, 0x06	; 6
    3d12:	0f b6       	in	r0, 0x3f	; 63
    3d14:	f8 94       	cli
    3d16:	de bf       	out	0x3e, r29	; 62
    3d18:	0f be       	out	0x3f, r0	; 63
    3d1a:	cd bf       	out	0x3d, r28	; 61
    3d1c:	df 91       	pop	r29
    3d1e:	cf 91       	pop	r28
    3d20:	08 95       	ret

00003d22 <_ZN10helicopter10interfaces24RadioControllerInterface14SetSystemModelEPNS_5model11SystemModelE>:
					
				int ServoChannelIndex() const { return servoChannelIndex; }
				void ServoChannelIndex(int val) { servoChannelIndex = val; }
					
				SystemModel * GetSystemModel() const { return systemModel; }
				void SetSystemModel(SystemModel *val) { systemModel = val; }		
    3d22:	cf 93       	push	r28
    3d24:	df 93       	push	r29
    3d26:	00 d0       	rcall	.+0      	; 0x3d28 <_ZN10helicopter10interfaces24RadioControllerInterface14SetSystemModelEPNS_5model11SystemModelE+0x6>
    3d28:	1f 92       	push	r1
    3d2a:	cd b7       	in	r28, 0x3d	; 61
    3d2c:	de b7       	in	r29, 0x3e	; 62
    3d2e:	9a 83       	std	Y+2, r25	; 0x02
    3d30:	89 83       	std	Y+1, r24	; 0x01
    3d32:	7c 83       	std	Y+4, r23	; 0x04
    3d34:	6b 83       	std	Y+3, r22	; 0x03
    3d36:	89 81       	ldd	r24, Y+1	; 0x01
    3d38:	9a 81       	ldd	r25, Y+2	; 0x02
    3d3a:	2b 81       	ldd	r18, Y+3	; 0x03
    3d3c:	3c 81       	ldd	r19, Y+4	; 0x04
    3d3e:	fc 01       	movw	r30, r24
    3d40:	37 83       	std	Z+7, r19	; 0x07
    3d42:	26 83       	std	Z+6, r18	; 0x06
    3d44:	0f 90       	pop	r0
    3d46:	0f 90       	pop	r0
    3d48:	0f 90       	pop	r0
    3d4a:	0f 90       	pop	r0
    3d4c:	df 91       	pop	r29
    3d4e:	cf 91       	pop	r28
    3d50:	08 95       	ret

00003d52 <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE>:
using namespace helicopter::model;
using namespace helicopter::controller;
using namespace helicopter::util;

void setupDefaultsandReferencePosition(SystemModel *model, PIDController *pidController)
{	
    3d52:	cf 93       	push	r28
    3d54:	df 93       	push	r29
    3d56:	00 d0       	rcall	.+0      	; 0x3d58 <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE+0x6>
    3d58:	1f 92       	push	r1
    3d5a:	cd b7       	in	r28, 0x3d	; 61
    3d5c:	de b7       	in	r29, 0x3e	; 62
    3d5e:	9a 83       	std	Y+2, r25	; 0x02
    3d60:	89 83       	std	Y+1, r24	; 0x01
    3d62:	7c 83       	std	Y+4, r23	; 0x04
    3d64:	6b 83       	std	Y+3, r22	; 0x03
	/**
	 * Set reference position of the helicopter.
	 * These are the setpoints that the helicopter to navigate/orient to.
	 * This includes the final location that the helicopter should travel to.
	 */
	model->ReferenceMagYawDegrees(0.0); //point north
    3d66:	89 81       	ldd	r24, Y+1	; 0x01
    3d68:	9a 81       	ldd	r25, Y+2	; 0x02
    3d6a:	40 e0       	ldi	r20, 0x00	; 0
    3d6c:	50 e0       	ldi	r21, 0x00	; 0
    3d6e:	ba 01       	movw	r22, r20
    3d70:	0e 94 bb 18 	call	0x3176	; 0x3176 <_ZN10helicopter5model11SystemModel22ReferenceMagYawDegreesEf>
	model->ReferenceYawVelocityDegreesPerSecond(0.0);
    3d74:	89 81       	ldd	r24, Y+1	; 0x01
    3d76:	9a 81       	ldd	r25, Y+2	; 0x02
    3d78:	40 e0       	ldi	r20, 0x00	; 0
    3d7a:	50 e0       	ldi	r21, 0x00	; 0
    3d7c:	ba 01       	movw	r22, r20
    3d7e:	0e 94 db 18 	call	0x31b6	; 0x31b6 <_ZN10helicopter5model11SystemModel36ReferenceYawVelocityDegreesPerSecondEf>
	
	//Negative values because positive values are 'down' in NED. So we want a negative altitude setpoint.
	model->ReferenceZNEDBodyFrameFeet(-100);
    3d82:	89 81       	ldd	r24, Y+1	; 0x01
    3d84:	9a 81       	ldd	r25, Y+2	; 0x02
    3d86:	40 e0       	ldi	r20, 0x00	; 0
    3d88:	50 e0       	ldi	r21, 0x00	; 0
    3d8a:	68 ec       	ldi	r22, 0xC8	; 200
    3d8c:	72 ec       	ldi	r23, 0xC2	; 194
    3d8e:	0e 94 99 19 	call	0x3332	; 0x3332 <_ZN10helicopter5model11SystemModel26ReferenceZNEDBodyFrameFeetEf>
	model->ReferenceZVelocityFeetPerSecond(0);
    3d92:	89 81       	ldd	r24, Y+1	; 0x01
    3d94:	9a 81       	ldd	r25, Y+2	; 0x02
    3d96:	40 e0       	ldi	r20, 0x00	; 0
    3d98:	50 e0       	ldi	r21, 0x00	; 0
    3d9a:	ba 01       	movw	r22, r20
    3d9c:	0e 94 bc 19 	call	0x3378	; 0x3378 <_ZN10helicopter5model11SystemModel31ReferenceZVelocityFeetPerSecondEf>
	model->ReferenceXNEDBodyFrame(0);
    3da0:	89 81       	ldd	r24, Y+1	; 0x01
    3da2:	9a 81       	ldd	r25, Y+2	; 0x02
    3da4:	40 e0       	ldi	r20, 0x00	; 0
    3da6:	50 e0       	ldi	r21, 0x00	; 0
    3da8:	ba 01       	movw	r22, r20
    3daa:	0e 94 fb 18 	call	0x31f6	; 0x31f6 <_ZN10helicopter5model11SystemModel22ReferenceXNEDBodyFrameEf>
	model->ReferenceXVelocityMetersPerSecond(0);
    3dae:	89 81       	ldd	r24, Y+1	; 0x01
    3db0:	9a 81       	ldd	r25, Y+2	; 0x02
    3db2:	40 e0       	ldi	r20, 0x00	; 0
    3db4:	50 e0       	ldi	r21, 0x00	; 0
    3db6:	ba 01       	movw	r22, r20
    3db8:	0e 94 1b 19 	call	0x3236	; 0x3236 <_ZN10helicopter5model11SystemModel33ReferenceXVelocityMetersPerSecondEf>
	model->ReferenceYNEDBodyFrame(0);
    3dbc:	89 81       	ldd	r24, Y+1	; 0x01
    3dbe:	9a 81       	ldd	r25, Y+2	; 0x02
    3dc0:	40 e0       	ldi	r20, 0x00	; 0
    3dc2:	50 e0       	ldi	r21, 0x00	; 0
    3dc4:	ba 01       	movw	r22, r20
    3dc6:	0e 94 3b 19 	call	0x3276	; 0x3276 <_ZN10helicopter5model11SystemModel22ReferenceYNEDBodyFrameEf>
	model->ReferenceYVelocityMetersPerSecond(0);
    3dca:	89 81       	ldd	r24, Y+1	; 0x01
    3dcc:	9a 81       	ldd	r25, Y+2	; 0x02
    3dce:	40 e0       	ldi	r20, 0x00	; 0
    3dd0:	50 e0       	ldi	r21, 0x00	; 0
    3dd2:	ba 01       	movw	r22, r20
    3dd4:	0e 94 5e 19 	call	0x32bc	; 0x32bc <_ZN10helicopter5model11SystemModel33ReferenceYVelocityMetersPerSecondEf>
	
	
	pidController->setYawProportionalGain(3.0);
    3dd8:	8b 81       	ldd	r24, Y+3	; 0x03
    3dda:	9c 81       	ldd	r25, Y+4	; 0x04
    3ddc:	40 e0       	ldi	r20, 0x00	; 0
    3dde:	50 e0       	ldi	r21, 0x00	; 0
    3de0:	60 e4       	ldi	r22, 0x40	; 64
    3de2:	70 e4       	ldi	r23, 0x40	; 64
    3de4:	0e 94 62 1d 	call	0x3ac4	; 0x3ac4 <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf>
	pidController->setYawIntegralGain(.008);
    3de8:	8b 81       	ldd	r24, Y+3	; 0x03
    3dea:	9c 81       	ldd	r25, Y+4	; 0x04
    3dec:	4f e6       	ldi	r20, 0x6F	; 111
    3dee:	52 e1       	ldi	r21, 0x12	; 18
    3df0:	63 e0       	ldi	r22, 0x03	; 3
    3df2:	7c e3       	ldi	r23, 0x3C	; 60
    3df4:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf>
	pidController->setYawDerivativeGain(.85);
    3df8:	8b 81       	ldd	r24, Y+3	; 0x03
    3dfa:	9c 81       	ldd	r25, Y+4	; 0x04
    3dfc:	4a e9       	ldi	r20, 0x9A	; 154
    3dfe:	59 e9       	ldi	r21, 0x99	; 153
    3e00:	69 e5       	ldi	r22, 0x59	; 89
    3e02:	7f e3       	ldi	r23, 0x3F	; 63
    3e04:	0e 94 a2 1d 	call	0x3b44	; 0x3b44 <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf>
	pidController->setYawAntiWindupGain(.1);
    3e08:	8b 81       	ldd	r24, Y+3	; 0x03
    3e0a:	9c 81       	ldd	r25, Y+4	; 0x04
    3e0c:	4d ec       	ldi	r20, 0xCD	; 205
    3e0e:	5c ec       	ldi	r21, 0xCC	; 204
    3e10:	6c ec       	ldi	r22, 0xCC	; 204
    3e12:	7d e3       	ldi	r23, 0x3D	; 61
    3e14:	0e 94 e5 1d 	call	0x3bca	; 0x3bca <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf>
	
	pidController->setXProportionalGain(.289);
    3e18:	8b 81       	ldd	r24, Y+3	; 0x03
    3e1a:	9c 81       	ldd	r25, Y+4	; 0x04
    3e1c:	4f ec       	ldi	r20, 0xCF	; 207
    3e1e:	57 ef       	ldi	r21, 0xF7	; 247
    3e20:	63 e9       	ldi	r22, 0x93	; 147
    3e22:	7e e3       	ldi	r23, 0x3E	; 62
    3e24:	0e 94 c1 1a 	call	0x3582	; 0x3582 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf>
	pidController->setXIntegralGain(0);
    3e28:	8b 81       	ldd	r24, Y+3	; 0x03
    3e2a:	9c 81       	ldd	r25, Y+4	; 0x04
    3e2c:	40 e0       	ldi	r20, 0x00	; 0
    3e2e:	50 e0       	ldi	r21, 0x00	; 0
    3e30:	ba 01       	movw	r22, r20
    3e32:	0e 94 81 1a 	call	0x3502	; 0x3502 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf>
	pidController->setXDerivativeGain(1.859);
    3e36:	8b 81       	ldd	r24, Y+3	; 0x03
    3e38:	9c 81       	ldd	r25, Y+4	; 0x04
    3e3a:	46 eb       	ldi	r20, 0xB6	; 182
    3e3c:	53 ef       	ldi	r21, 0xF3	; 243
    3e3e:	6d ee       	ldi	r22, 0xED	; 237
    3e40:	7f e3       	ldi	r23, 0x3F	; 63
    3e42:	0e 94 a1 1a 	call	0x3542	; 0x3542 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf>
	pidController->setXAntiWindupGain(0);
    3e46:	8b 81       	ldd	r24, Y+3	; 0x03
    3e48:	9c 81       	ldd	r25, Y+4	; 0x04
    3e4a:	40 e0       	ldi	r20, 0x00	; 0
    3e4c:	50 e0       	ldi	r21, 0x00	; 0
    3e4e:	ba 01       	movw	r22, r20
    3e50:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf>
	pidController->setLongitudeInnerLoopGain(.031);
    3e54:	8b 81       	ldd	r24, Y+3	; 0x03
    3e56:	9c 81       	ldd	r25, Y+4	; 0x04
    3e58:	46 eb       	ldi	r20, 0xB6	; 182
    3e5a:	53 ef       	ldi	r21, 0xF3	; 243
    3e5c:	6d ef       	ldi	r22, 0xFD	; 253
    3e5e:	7c e3       	ldi	r23, 0x3C	; 60
    3e60:	0e 94 01 1b 	call	0x3602	; 0x3602 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf>
	pidController->setPitchAngularVelocityGain(.03);
    3e64:	8b 81       	ldd	r24, Y+3	; 0x03
    3e66:	9c 81       	ldd	r25, Y+4	; 0x04
    3e68:	4f e8       	ldi	r20, 0x8F	; 143
    3e6a:	52 ec       	ldi	r21, 0xC2	; 194
    3e6c:	65 ef       	ldi	r22, 0xF5	; 245
    3e6e:	7c e3       	ldi	r23, 0x3C	; 60
    3e70:	0e 94 21 1b 	call	0x3642	; 0x3642 <_ZN10helicopter10controller13PIDController27setPitchAngularVelocityGainEf>
	
	pidController->setYProportionalGain(1.437);
    3e74:	8b 81       	ldd	r24, Y+3	; 0x03
    3e76:	9c 81       	ldd	r25, Y+4	; 0x04
    3e78:	4e e9       	ldi	r20, 0x9E	; 158
    3e7a:	5f ee       	ldi	r21, 0xEF	; 239
    3e7c:	67 eb       	ldi	r22, 0xB7	; 183
    3e7e:	7f e3       	ldi	r23, 0x3F	; 63
    3e80:	0e 94 c7 1b 	call	0x378e	; 0x378e <_ZN10helicopter10controller13PIDController20setYProportionalGainEf>
	pidController->setYIntegralGain(0);
    3e84:	8b 81       	ldd	r24, Y+3	; 0x03
    3e86:	9c 81       	ldd	r25, Y+4	; 0x04
    3e88:	40 e0       	ldi	r20, 0x00	; 0
    3e8a:	50 e0       	ldi	r21, 0x00	; 0
    3e8c:	ba 01       	movw	r22, r20
    3e8e:	0e 94 87 1b 	call	0x370e	; 0x370e <_ZN10helicopter10controller13PIDController16setYIntegralGainEf>
	pidController->setYDerivativeGain(2.8363);
    3e92:	8b 81       	ldd	r24, Y+3	; 0x03
    3e94:	9c 81       	ldd	r25, Y+4	; 0x04
    3e96:	40 ef       	ldi	r20, 0xF0	; 240
    3e98:	55 e8       	ldi	r21, 0x85	; 133
    3e9a:	65 e3       	ldi	r22, 0x35	; 53
    3e9c:	70 e4       	ldi	r23, 0x40	; 64
    3e9e:	0e 94 a7 1b 	call	0x374e	; 0x374e <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf>
	pidController->setYAntiWindupGain(0);
    3ea2:	8b 81       	ldd	r24, Y+3	; 0x03
    3ea4:	9c 81       	ldd	r25, Y+4	; 0x04
    3ea6:	40 e0       	ldi	r20, 0x00	; 0
    3ea8:	50 e0       	ldi	r21, 0x00	; 0
    3eaa:	ba 01       	movw	r22, r20
    3eac:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf>
	pidController->setLateralInnerLoopGain(.092);	
    3eb0:	8b 81       	ldd	r24, Y+3	; 0x03
    3eb2:	9c 81       	ldd	r25, Y+4	; 0x04
    3eb4:	4f e7       	ldi	r20, 0x7F	; 127
    3eb6:	5a e6       	ldi	r21, 0x6A	; 106
    3eb8:	6c eb       	ldi	r22, 0xBC	; 188
    3eba:	7d e3       	ldi	r23, 0x3D	; 61
    3ebc:	0e 94 07 1c 	call	0x380e	; 0x380e <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf>
	pidController->setRollAngularVelocityGain(.048);
    3ec0:	8b 81       	ldd	r24, Y+3	; 0x03
    3ec2:	9c 81       	ldd	r25, Y+4	; 0x04
    3ec4:	46 ea       	ldi	r20, 0xA6	; 166
    3ec6:	5b e9       	ldi	r21, 0x9B	; 155
    3ec8:	64 e4       	ldi	r22, 0x44	; 68
    3eca:	7d e3       	ldi	r23, 0x3D	; 61
    3ecc:	0e 94 27 1c 	call	0x384e	; 0x384e <_ZN10helicopter10controller13PIDController26setRollAngularVelocityGainEf>
	
	//TODO: Don't forget that there is a difference between how often the sensors
	//are read and how often the control algorithm runs. 
	pidController->setIntervalPeriodSecs(PID_OUTER_LOOP_PERIOD);
    3ed0:	8b 81       	ldd	r24, Y+3	; 0x03
    3ed2:	9c 81       	ldd	r25, Y+4	; 0x04
    3ed4:	4d ec       	ldi	r20, 0xCD	; 205
    3ed6:	5c ec       	ldi	r21, 0xCC	; 204
    3ed8:	6c e4       	ldi	r22, 0x4C	; 76
    3eda:	7d e3       	ldi	r23, 0x3D	; 61
    3edc:	0e 94 c2 1d 	call	0x3b84	; 0x3b84 <_ZN10helicopter10controller13PIDController21setIntervalPeriodSecsEf>
//pidController->setMinYawServoControl (-10);
//pidController->setMaxYawServoControl(10);



	pidController->setControlMaxValue(1.0d);
    3ee0:	8b 81       	ldd	r24, Y+3	; 0x03
    3ee2:	9c 81       	ldd	r25, Y+4	; 0x04
    3ee4:	40 e0       	ldi	r20, 0x00	; 0
    3ee6:	50 e0       	ldi	r21, 0x00	; 0
    3ee8:	60 e8       	ldi	r22, 0x80	; 128
    3eea:	7f e3       	ldi	r23, 0x3F	; 63
    3eec:	0e 94 4b 1e 	call	0x3c96	; 0x3c96 <_ZN10helicopter10controller13PIDController18setControlMaxValueEf>
	pidController->setControlMinValue(-1.0d);
    3ef0:	8b 81       	ldd	r24, Y+3	; 0x03
    3ef2:	9c 81       	ldd	r25, Y+4	; 0x04
    3ef4:	40 e0       	ldi	r20, 0x00	; 0
    3ef6:	50 e0       	ldi	r21, 0x00	; 0
    3ef8:	60 e8       	ldi	r22, 0x80	; 128
    3efa:	7f eb       	ldi	r23, 0xBF	; 191
    3efc:	0e 94 6e 1e 	call	0x3cdc	; 0x3cdc <_ZN10helicopter10controller13PIDController18setControlMinValueEf>
	
	pidController->setMinYawServoControl (-.96d);
    3f00:	8b 81       	ldd	r24, Y+3	; 0x03
    3f02:	9c 81       	ldd	r25, Y+4	; 0x04
    3f04:	4f e8       	ldi	r20, 0x8F	; 143
    3f06:	52 ec       	ldi	r21, 0xC2	; 194
    3f08:	65 e7       	ldi	r22, 0x75	; 117
    3f0a:	7f eb       	ldi	r23, 0xBF	; 191
    3f0c:	0e 94 05 1e 	call	0x3c0a	; 0x3c0a <_ZN10helicopter10controller13PIDController21setMinYawServoControlEf>
	pidController->setMaxYawServoControl (.96d);
    3f10:	8b 81       	ldd	r24, Y+3	; 0x03
    3f12:	9c 81       	ldd	r25, Y+4	; 0x04
    3f14:	4f e8       	ldi	r20, 0x8F	; 143
    3f16:	52 ec       	ldi	r21, 0xC2	; 194
    3f18:	65 e7       	ldi	r22, 0x75	; 117
    3f1a:	7f e3       	ldi	r23, 0x3F	; 63
    3f1c:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <_ZN10helicopter10controller13PIDController21setMaxYawServoControlEf>
	
	pidController->setMaxLongitudeServoControlValue(1.0d);
    3f20:	8b 81       	ldd	r24, Y+3	; 0x03
    3f22:	9c 81       	ldd	r25, Y+4	; 0x04
    3f24:	40 e0       	ldi	r20, 0x00	; 0
    3f26:	50 e0       	ldi	r21, 0x00	; 0
    3f28:	60 e8       	ldi	r22, 0x80	; 128
    3f2a:	7f e3       	ldi	r23, 0x3F	; 63
    3f2c:	0e 94 64 1b 	call	0x36c8	; 0x36c8 <_ZN10helicopter10controller13PIDController32setMaxLongitudeServoControlValueEf>
	pidController->setMinLongitudeServoControlValue(-1.0d);
    3f30:	8b 81       	ldd	r24, Y+3	; 0x03
    3f32:	9c 81       	ldd	r25, Y+4	; 0x04
    3f34:	40 e0       	ldi	r20, 0x00	; 0
    3f36:	50 e0       	ldi	r21, 0x00	; 0
    3f38:	60 e8       	ldi	r22, 0x80	; 128
    3f3a:	7f eb       	ldi	r23, 0xBF	; 191
    3f3c:	0e 94 41 1b 	call	0x3682	; 0x3682 <_ZN10helicopter10controller13PIDController32setMinLongitudeServoControlValueEf>
	
	pidController->setMaxLateralServoControlValue(1.0d);
    3f40:	8b 81       	ldd	r24, Y+3	; 0x03
    3f42:	9c 81       	ldd	r25, Y+4	; 0x04
    3f44:	40 e0       	ldi	r20, 0x00	; 0
    3f46:	50 e0       	ldi	r21, 0x00	; 0
    3f48:	60 e8       	ldi	r22, 0x80	; 128
    3f4a:	7f e3       	ldi	r23, 0x3F	; 63
    3f4c:	0e 94 6d 1c 	call	0x38da	; 0x38da <_ZN10helicopter10controller13PIDController30setMaxLateralServoControlValueEf>
	pidController->setMinLateralServoControlValue(-1.0d);
    3f50:	8b 81       	ldd	r24, Y+3	; 0x03
    3f52:	9c 81       	ldd	r25, Y+4	; 0x04
    3f54:	40 e0       	ldi	r20, 0x00	; 0
    3f56:	50 e0       	ldi	r21, 0x00	; 0
    3f58:	60 e8       	ldi	r22, 0x80	; 128
    3f5a:	7f eb       	ldi	r23, 0xBF	; 191
    3f5c:	0e 94 4a 1c 	call	0x3894	; 0x3894 <_ZN10helicopter10controller13PIDController30setMinLateralServoControlValueEf>
	
	//just changed
	pidController->setMaxMainRotorServoControlValue(.5d);
    3f60:	8b 81       	ldd	r24, Y+3	; 0x03
    3f62:	9c 81       	ldd	r25, Y+4	; 0x04
    3f64:	40 e0       	ldi	r20, 0x00	; 0
    3f66:	50 e0       	ldi	r21, 0x00	; 0
    3f68:	60 e0       	ldi	r22, 0x00	; 0
    3f6a:	7f e3       	ldi	r23, 0x3F	; 63
    3f6c:	0e 94 b3 1c 	call	0x3966	; 0x3966 <_ZN10helicopter10controller13PIDController32setMaxMainRotorServoControlValueEf>
	pidController->setMinMainRotorServoControlValue(0.0d);
    3f70:	8b 81       	ldd	r24, Y+3	; 0x03
    3f72:	9c 81       	ldd	r25, Y+4	; 0x04
    3f74:	40 e0       	ldi	r20, 0x00	; 0
    3f76:	50 e0       	ldi	r21, 0x00	; 0
    3f78:	ba 01       	movw	r22, r20
    3f7a:	0e 94 90 1c 	call	0x3920	; 0x3920 <_ZN10helicopter10controller13PIDController32setMinMainRotorServoControlValueEf>
	
	pidController->setMaxRollSetpointDegrees(5);
    3f7e:	8b 81       	ldd	r24, Y+3	; 0x03
    3f80:	9c 81       	ldd	r25, Y+4	; 0x04
    3f82:	40 e0       	ldi	r20, 0x00	; 0
    3f84:	50 e0       	ldi	r21, 0x00	; 0
    3f86:	60 ea       	ldi	r22, 0xA0	; 160
    3f88:	70 e4       	ldi	r23, 0x40	; 64
    3f8a:	0e 94 d6 1c 	call	0x39ac	; 0x39ac <_ZN10helicopter10controller13PIDController25setMaxRollSetpointDegreesEf>
	pidController->setMinRollSetpointDegrees(-5);
    3f8e:	8b 81       	ldd	r24, Y+3	; 0x03
    3f90:	9c 81       	ldd	r25, Y+4	; 0x04
    3f92:	40 e0       	ldi	r20, 0x00	; 0
    3f94:	50 e0       	ldi	r21, 0x00	; 0
    3f96:	60 ea       	ldi	r22, 0xA0	; 160
    3f98:	70 ec       	ldi	r23, 0xC0	; 192
    3f9a:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <_ZN10helicopter10controller13PIDController25setMinRollSetpointDegreesEf>
	
	pidController->setMaxPitchSetpointDegrees(13);
    3f9e:	8b 81       	ldd	r24, Y+3	; 0x03
    3fa0:	9c 81       	ldd	r25, Y+4	; 0x04
    3fa2:	40 e0       	ldi	r20, 0x00	; 0
    3fa4:	50 e0       	ldi	r21, 0x00	; 0
    3fa6:	60 e5       	ldi	r22, 0x50	; 80
    3fa8:	71 e4       	ldi	r23, 0x41	; 65
    3faa:	0e 94 1c 1d 	call	0x3a38	; 0x3a38 <_ZN10helicopter10controller13PIDController26setMaxPitchSetpointDegreesEf>
	pidController->setMinPitchSetpointDegrees(-13);
    3fae:	8b 81       	ldd	r24, Y+3	; 0x03
    3fb0:	9c 81       	ldd	r25, Y+4	; 0x04
    3fb2:	40 e0       	ldi	r20, 0x00	; 0
    3fb4:	50 e0       	ldi	r21, 0x00	; 0
    3fb6:	60 e5       	ldi	r22, 0x50	; 80
    3fb8:	71 ec       	ldi	r23, 0xC1	; 193
    3fba:	0e 94 3f 1d 	call	0x3a7e	; 0x3a7e <_ZN10helicopter10controller13PIDController26setMinPitchSetpointDegreesEf>
}
    3fbe:	0f 90       	pop	r0
    3fc0:	0f 90       	pop	r0
    3fc2:	0f 90       	pop	r0
    3fc4:	0f 90       	pop	r0
    3fc6:	df 91       	pop	r29
    3fc8:	cf 91       	pop	r28
    3fca:	08 95       	ret

00003fcc <main>:


int main(void)
{	
    3fcc:	4f 92       	push	r4
    3fce:	5f 92       	push	r5
    3fd0:	6f 92       	push	r6
    3fd2:	7f 92       	push	r7
    3fd4:	8f 92       	push	r8
    3fd6:	9f 92       	push	r9
    3fd8:	af 92       	push	r10
    3fda:	bf 92       	push	r11
    3fdc:	cf 92       	push	r12
    3fde:	df 92       	push	r13
    3fe0:	ef 92       	push	r14
    3fe2:	ff 92       	push	r15
    3fe4:	0f 93       	push	r16
    3fe6:	1f 93       	push	r17
    3fe8:	cf 93       	push	r28
    3fea:	df 93       	push	r29
    3fec:	cd b7       	in	r28, 0x3d	; 61
    3fee:	de b7       	in	r29, 0x3e	; 62
    3ff0:	e9 97       	sbiw	r28, 0x39	; 57
    3ff2:	0f b6       	in	r0, 0x3f	; 63
    3ff4:	f8 94       	cli
    3ff6:	de bf       	out	0x3e, r29	; 62
    3ff8:	0f be       	out	0x3f, r0	; 63
    3ffa:	cd bf       	out	0x3d, r28	; 61
	SystemModel *model = new SystemModel();
    3ffc:	89 ef       	ldi	r24, 0xF9	; 249
    3ffe:	90 e0       	ldi	r25, 0x00	; 0
    4000:	0e 94 ee 44 	call	0x89dc	; 0x89dc <_Znwj>
    4004:	8c 01       	movw	r16, r24
    4006:	c8 01       	movw	r24, r16
    4008:	0e 94 9b 16 	call	0x2d36	; 0x2d36 <_ZN10helicopter5model11SystemModelC1Ev>
    400c:	1b 83       	std	Y+3, r17	; 0x03
    400e:	0a 83       	std	Y+2, r16	; 0x02
	
	PIDController *pidController = new PIDController(model);
    4010:	8e e8       	ldi	r24, 0x8E	; 142
    4012:	90 e0       	ldi	r25, 0x00	; 0
    4014:	0e 94 ee 44 	call	0x89dc	; 0x89dc <_Znwj>
    4018:	8c 01       	movw	r16, r24
    401a:	8a 81       	ldd	r24, Y+2	; 0x02
    401c:	9b 81       	ldd	r25, Y+3	; 0x03
    401e:	bc 01       	movw	r22, r24
    4020:	c8 01       	movw	r24, r16
    4022:	0e 94 85 07 	call	0xf0a	; 0xf0a <_ZN10helicopter10controller13PIDControllerC1EPNS_5model11SystemModelE>
    4026:	1d 83       	std	Y+5, r17	; 0x05
    4028:	0c 83       	std	Y+4, r16	; 0x04
	
	
	
	setupDefaultsandReferencePosition(model, pidController);
    402a:	2c 81       	ldd	r18, Y+4	; 0x04
    402c:	3d 81       	ldd	r19, Y+5	; 0x05
    402e:	8a 81       	ldd	r24, Y+2	; 0x02
    4030:	9b 81       	ldd	r25, Y+3	; 0x03
    4032:	b9 01       	movw	r22, r18
    4034:	0e 94 a9 1e 	call	0x3d52	; 0x3d52 <_Z33setupDefaultsandReferencePositionPN10helicopter5model11SystemModelEPNS_10controller13PIDControllerE>
	
	//Timer *timer = new Timer(F_CPU,PRESCALE_BY_TENTWENTYFOUR,75); //Good timeout when using the radio
	Timer *timer = new Timer(F_CPU, PRESCALE_BY_TENTWENTYFOUR, 100); //Good timeout when using the USB
    4038:	88 e0       	ldi	r24, 0x08	; 8
    403a:	90 e0       	ldi	r25, 0x00	; 0
    403c:	0e 94 ee 44 	call	0x89dc	; 0x89dc <_Znwj>
    4040:	6c 01       	movw	r12, r24
    4042:	14 e6       	ldi	r17, 0x64	; 100
    4044:	e1 2e       	mov	r14, r17
    4046:	f1 2c       	mov	r15, r1
    4048:	00 e0       	ldi	r16, 0x00	; 0
    404a:	10 e0       	ldi	r17, 0x00	; 0
    404c:	20 e0       	ldi	r18, 0x00	; 0
    404e:	34 e0       	ldi	r19, 0x04	; 4
    4050:	40 e0       	ldi	r20, 0x00	; 0
    4052:	54 e2       	ldi	r21, 0x24	; 36
    4054:	64 ef       	ldi	r22, 0xF4	; 244
    4056:	70 e0       	ldi	r23, 0x00	; 0
    4058:	c6 01       	movw	r24, r12
    405a:	0e 94 f5 15 	call	0x2bea	; 0x2bea <_ZN10helicopter4util5TimerC1Em9PRESCALERm>
    405e:	df 82       	std	Y+7, r13	; 0x07
    4060:	ce 82       	std	Y+6, r12	; 0x06
	
	//Create a driver for communicating with the Ground Control Station (GCS).
	//SerialDriver *serialDriver = new SerialDriver(57600, SerialDriver::Zero, timer, true, true);  
	//SerialDriver *serialDriver = new SerialDriver(76800, SerialDriver::Zero, true);  
	SerialDriver *serialDriver = new SerialDriver(250000, SerialDriver::Zero, true);  
    4062:	88 e0       	ldi	r24, 0x08	; 8
    4064:	90 e0       	ldi	r25, 0x00	; 0
    4066:	0e 94 ee 44 	call	0x89dc	; 0x89dc <_Znwj>
    406a:	7c 01       	movw	r14, r24
    406c:	01 e0       	ldi	r16, 0x01	; 1
    406e:	20 e0       	ldi	r18, 0x00	; 0
    4070:	40 e9       	ldi	r20, 0x90	; 144
    4072:	50 ed       	ldi	r21, 0xD0	; 208
    4074:	63 e0       	ldi	r22, 0x03	; 3
    4076:	70 e0       	ldi	r23, 0x00	; 0
    4078:	c7 01       	movw	r24, r14
    407a:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <_ZN10helicopter7drivers12SerialDriverC1EmNS1_8UartPortEb>
    407e:	f9 86       	std	Y+9, r15	; 0x09
    4080:	e8 86       	std	Y+8, r14	; 0x08
	serialDriver->initialize();
    4082:	88 85       	ldd	r24, Y+8	; 0x08
    4084:	99 85       	ldd	r25, Y+9	; 0x09
    4086:	fc 01       	movw	r30, r24
    4088:	80 81       	ld	r24, Z
    408a:	91 81       	ldd	r25, Z+1	; 0x01
    408c:	04 96       	adiw	r24, 0x04	; 4
    408e:	fc 01       	movw	r30, r24
    4090:	20 81       	ld	r18, Z
    4092:	31 81       	ldd	r19, Z+1	; 0x01
    4094:	88 85       	ldd	r24, Y+8	; 0x08
    4096:	99 85       	ldd	r25, Y+9	; 0x09
    4098:	f9 01       	movw	r30, r18
    409a:	19 95       	eicall
	
	GroundControlStationInterface *gcsInterface = new GroundControlStationInterface(serialDriver, timer, true);
    409c:	85 e0       	ldi	r24, 0x05	; 5
    409e:	90 e0       	ldi	r25, 0x00	; 0
    40a0:	0e 94 ee 44 	call	0x89dc	; 0x89dc <_Znwj>
    40a4:	8c 01       	movw	r16, r24
    40a6:	4e 81       	ldd	r20, Y+6	; 0x06
    40a8:	5f 81       	ldd	r21, Y+7	; 0x07
    40aa:	88 85       	ldd	r24, Y+8	; 0x08
    40ac:	99 85       	ldd	r25, Y+9	; 0x09
    40ae:	21 e0       	ldi	r18, 0x01	; 1
    40b0:	bc 01       	movw	r22, r24
    40b2:	c8 01       	movw	r24, r16
    40b4:	0e 94 6e 16 	call	0x2cdc	; 0x2cdc <_ZN10helicopter10interfaces29GroundControlStationInterfaceC1EPNS_7drivers12SerialDriverEPNS_4util5TimerEb>
    40b8:	1b 87       	std	Y+11, r17	; 0x0b
    40ba:	0a 87       	std	Y+10, r16	; 0x0a
	//This frequency works well for radio.
//	SimTelemetryTask *simTelemTask = new SimTelemetryTask(radioInterface, model, 0, 10);//starting at tick 1, execute 20 times a second
//	TransmitTelemetryTask *transTelemTask = new TransmitTelemetryTask(radioInterface, model, 1, 10);//starting at tick 2, execute 20 times a second

	//this frequency works well for USB.
	SimTelemetryTask *simTelemTask = new SimTelemetryTask(gcsInterface, model, pidController,0, 4);//starting at tick 0, execute 50 times a second
    40bc:	8d e0       	ldi	r24, 0x0D	; 13
    40be:	90 e0       	ldi	r25, 0x00	; 0
    40c0:	0e 94 ee 44 	call	0x89dc	; 0x89dc <_Znwj>
    40c4:	6c 01       	movw	r12, r24
    40c6:	2c 81       	ldd	r18, Y+4	; 0x04
    40c8:	3d 81       	ldd	r19, Y+5	; 0x05
    40ca:	4a 81       	ldd	r20, Y+2	; 0x02
    40cc:	5b 81       	ldd	r21, Y+3	; 0x03
    40ce:	8a 85       	ldd	r24, Y+10	; 0x0a
    40d0:	9b 85       	ldd	r25, Y+11	; 0x0b
    40d2:	68 94       	set
    40d4:	ee 24       	eor	r14, r14
    40d6:	e2 f8       	bld	r14, 2
    40d8:	f1 2c       	mov	r15, r1
    40da:	00 e0       	ldi	r16, 0x00	; 0
    40dc:	10 e0       	ldi	r17, 0x00	; 0
    40de:	bc 01       	movw	r22, r24
    40e0:	c6 01       	movw	r24, r12
    40e2:	0e 94 17 41 	call	0x822e	; 0x822e <_ZN10helicopter5tasks16SimTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEPNS_10controller13PIDControllerEii>
    40e6:	dd 86       	std	Y+13, r13	; 0x0d
    40e8:	cc 86       	std	Y+12, r12	; 0x0c
	TransmitTelemetryTask *transTelemTask = new TransmitTelemetryTask(gcsInterface, model, 1, 4);//starting at tick 1, execute 50 times a second
    40ea:	8b e0       	ldi	r24, 0x0B	; 11
    40ec:	90 e0       	ldi	r25, 0x00	; 0
    40ee:	0e 94 ee 44 	call	0x89dc	; 0x89dc <_Znwj>
    40f2:	7c 01       	movw	r14, r24
    40f4:	4a 81       	ldd	r20, Y+2	; 0x02
    40f6:	5b 81       	ldd	r21, Y+3	; 0x03
    40f8:	8a 85       	ldd	r24, Y+10	; 0x0a
    40fa:	9b 85       	ldd	r25, Y+11	; 0x0b
    40fc:	04 e0       	ldi	r16, 0x04	; 4
    40fe:	10 e0       	ldi	r17, 0x00	; 0
    4100:	21 e0       	ldi	r18, 0x01	; 1
    4102:	30 e0       	ldi	r19, 0x00	; 0
    4104:	bc 01       	movw	r22, r24
    4106:	c7 01       	movw	r24, r14
    4108:	0e 94 45 44 	call	0x888a	; 0x888a <_ZN10helicopter5tasks21TransmitTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEii>
    410c:	ff 86       	std	Y+15, r15	; 0x0f
    410e:	ee 86       	std	Y+14, r14	; 0x0e
	
	FlashLEDTask *flashTask = new FlashLEDTask(2, SCHEDULER_TICK_FREQUENCY_HZ);//starting at tick 2, execute once a second
    4110:	8a e0       	ldi	r24, 0x0A	; 10
    4112:	90 e0       	ldi	r25, 0x00	; 0
    4114:	0e 94 ee 44 	call	0x89dc	; 0x89dc <_Znwj>
    4118:	8c 01       	movw	r16, r24
    411a:	23 e0       	ldi	r18, 0x03	; 3
    411c:	30 e0       	ldi	r19, 0x00	; 0
    411e:	46 e4       	ldi	r20, 0x46	; 70
    4120:	50 e0       	ldi	r21, 0x00	; 0
    4122:	62 e0       	ldi	r22, 0x02	; 2
    4124:	70 e0       	ldi	r23, 0x00	; 0
    4126:	c8 01       	movw	r24, r16
    4128:	0e 94 3e 15 	call	0x2a7c	; 0x2a7c <_ZN10helicopter5tasks12FlashLEDTaskC1Eiii>
    412c:	19 8b       	std	Y+17, r17	; 0x11
    412e:	08 8b       	std	Y+16, r16	; 0x10
		
		
	SensorProcessingTask *sensorProcessingTask = new SensorProcessingTask(model, 5, 4);
    4130:	89 e0       	ldi	r24, 0x09	; 9
    4132:	90 e0       	ldi	r25, 0x00	; 0
    4134:	0e 94 ee 44 	call	0x89dc	; 0x89dc <_Znwj>
    4138:	8c 01       	movw	r16, r24
    413a:	8a 81       	ldd	r24, Y+2	; 0x02
    413c:	9b 81       	ldd	r25, Y+3	; 0x03
    413e:	24 e0       	ldi	r18, 0x04	; 4
    4140:	30 e0       	ldi	r19, 0x00	; 0
    4142:	45 e0       	ldi	r20, 0x05	; 5
    4144:	50 e0       	ldi	r21, 0x00	; 0
    4146:	bc 01       	movw	r22, r24
    4148:	c8 01       	movw	r24, r16
    414a:	0e 94 05 3f 	call	0x7e0a	; 0x7e0a <_ZN10helicopter5tasks20SensorProcessingTaskC1EPNS_5model11SystemModelEii>
    414e:	1b 8b       	std	Y+19, r17	; 0x13
    4150:	0a 8b       	std	Y+18, r16	; 0x12
		
	//execute the pid outer loop at the PID_OUTER_LOOP_PERIOD rate. The division is to convert the period into ticks for the scheduler.
	PIDOuterLoopTask *pidOuterLoop = new PIDOuterLoopTask(pidController, 3, (SCHEDULER_TICK_FREQUENCY_HZ / (1/PID_OUTER_LOOP_PERIOD)));
    4152:	89 e0       	ldi	r24, 0x09	; 9
    4154:	90 e0       	ldi	r25, 0x00	; 0
    4156:	0e 94 ee 44 	call	0x89dc	; 0x89dc <_Znwj>
    415a:	8c 01       	movw	r16, r24
    415c:	8c 81       	ldd	r24, Y+4	; 0x04
    415e:	9d 81       	ldd	r25, Y+5	; 0x05
    4160:	23 e0       	ldi	r18, 0x03	; 3
    4162:	30 e0       	ldi	r19, 0x00	; 0
    4164:	43 e0       	ldi	r20, 0x03	; 3
    4166:	50 e0       	ldi	r21, 0x00	; 0
    4168:	bc 01       	movw	r22, r24
    416a:	c8 01       	movw	r24, r16
    416c:	0e 94 b3 3d 	call	0x7b66	; 0x7b66 <_ZN10helicopter5tasks16PIDOuterLoopTaskC1EPNS_10controller13PIDControllerEii>
    4170:	1d 8b       	std	Y+21, r17	; 0x15
    4172:	0c 8b       	std	Y+20, r16	; 0x14
	PIDInnerLoopTask *pidInnerLoop = new PIDInnerLoopTask(pidController, 4, (SCHEDULER_TICK_FREQUENCY_HZ / (1/PID_OUTER_LOOP_PERIOD)));
    4174:	89 e0       	ldi	r24, 0x09	; 9
    4176:	90 e0       	ldi	r25, 0x00	; 0
    4178:	0e 94 ee 44 	call	0x89dc	; 0x89dc <_Znwj>
    417c:	8c 01       	movw	r16, r24
    417e:	8c 81       	ldd	r24, Y+4	; 0x04
    4180:	9d 81       	ldd	r25, Y+5	; 0x05
    4182:	23 e0       	ldi	r18, 0x03	; 3
    4184:	30 e0       	ldi	r19, 0x00	; 0
    4186:	44 e0       	ldi	r20, 0x04	; 4
    4188:	50 e0       	ldi	r21, 0x00	; 0
    418a:	bc 01       	movw	r22, r24
    418c:	c8 01       	movw	r24, r16
    418e:	0e 94 2f 3d 	call	0x7a5e	; 0x7a5e <_ZN10helicopter5tasks16PIDInnerLoopTaskC1EPNS_10controller13PIDControllerEii>
    4192:	1f 8b       	std	Y+23, r17	; 0x17
    4194:	0e 8b       	std	Y+22, r16	; 0x16
	

	RadioControllerInterface *rcInterface = RadioControllerInterface::getRadioControllerInterface();
    4196:	0e 94 66 28 	call	0x50cc	; 0x50cc <_ZN10helicopter10interfaces24RadioControllerInterface27getRadioControllerInterfaceEv>
    419a:	99 8f       	std	Y+25, r25	; 0x19
    419c:	88 8f       	std	Y+24, r24	; 0x18
	
	rcInterface->SetSystemModel(model);
    419e:	2a 81       	ldd	r18, Y+2	; 0x02
    41a0:	3b 81       	ldd	r19, Y+3	; 0x03
    41a2:	88 8d       	ldd	r24, Y+24	; 0x18
    41a4:	99 8d       	ldd	r25, Y+25	; 0x19
    41a6:	b9 01       	movw	r22, r18
    41a8:	0e 94 91 1e 	call	0x3d22	; 0x3d22 <_ZN10helicopter10interfaces24RadioControllerInterface14SetSystemModelEPNS_5model11SystemModelE>


	Scheduler *scheduler = Scheduler::getScheduler();
    41ac:	0e 94 8b 3a 	call	0x7516	; 0x7516 <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>
    41b0:	9b 8f       	std	Y+27, r25	; 0x1b
    41b2:	8a 8f       	std	Y+26, r24	; 0x1a
	
	scheduler->addTask(flashTask);
    41b4:	28 89       	ldd	r18, Y+16	; 0x10
    41b6:	39 89       	ldd	r19, Y+17	; 0x11
    41b8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    41ba:	9b 8d       	ldd	r25, Y+27	; 0x1b
    41bc:	b9 01       	movw	r22, r18
    41be:	0e 94 1b 3b 	call	0x7636	; 0x7636 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(simTelemTask);
    41c2:	2c 85       	ldd	r18, Y+12	; 0x0c
    41c4:	3d 85       	ldd	r19, Y+13	; 0x0d
    41c6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    41c8:	9b 8d       	ldd	r25, Y+27	; 0x1b
    41ca:	b9 01       	movw	r22, r18
    41cc:	0e 94 1b 3b 	call	0x7636	; 0x7636 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(transTelemTask);
    41d0:	2e 85       	ldd	r18, Y+14	; 0x0e
    41d2:	3f 85       	ldd	r19, Y+15	; 0x0f
    41d4:	8a 8d       	ldd	r24, Y+26	; 0x1a
    41d6:	9b 8d       	ldd	r25, Y+27	; 0x1b
    41d8:	b9 01       	movw	r22, r18
    41da:	0e 94 1b 3b 	call	0x7636	; 0x7636 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(pidOuterLoop);
    41de:	2c 89       	ldd	r18, Y+20	; 0x14
    41e0:	3d 89       	ldd	r19, Y+21	; 0x15
    41e2:	8a 8d       	ldd	r24, Y+26	; 0x1a
    41e4:	9b 8d       	ldd	r25, Y+27	; 0x1b
    41e6:	b9 01       	movw	r22, r18
    41e8:	0e 94 1b 3b 	call	0x7636	; 0x7636 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(pidInnerLoop);
    41ec:	2e 89       	ldd	r18, Y+22	; 0x16
    41ee:	3f 89       	ldd	r19, Y+23	; 0x17
    41f0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    41f2:	9b 8d       	ldd	r25, Y+27	; 0x1b
    41f4:	b9 01       	movw	r22, r18
    41f6:	0e 94 1b 3b 	call	0x7636	; 0x7636 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	scheduler->addTask(sensorProcessingTask);
    41fa:	2a 89       	ldd	r18, Y+18	; 0x12
    41fc:	3b 89       	ldd	r19, Y+19	; 0x13
    41fe:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4200:	9b 8d       	ldd	r25, Y+27	; 0x1b
    4202:	b9 01       	movw	r22, r18
    4204:	0e 94 1b 3b 	call	0x7636	; 0x7636 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>
	
	
	//Wait until we receive location data before starting the scheduler
	//TODO rework this
	bool isInitialized = false;
    4208:	19 82       	std	Y+1, r1	; 0x01
	while (!isInitialized)
    420a:	2e c1       	rjmp	.+604    	; 0x4468 <main+0x49c>
	{
		simTelemTask->runTaskImpl();
    420c:	8c 85       	ldd	r24, Y+12	; 0x0c
    420e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4210:	fc 01       	movw	r30, r24
    4212:	80 81       	ld	r24, Z
    4214:	91 81       	ldd	r25, Z+1	; 0x01
    4216:	fc 01       	movw	r30, r24
    4218:	20 81       	ld	r18, Z
    421a:	31 81       	ldd	r19, Z+1	; 0x01
    421c:	8c 85       	ldd	r24, Y+12	; 0x0c
    421e:	9d 85       	ldd	r25, Y+13	; 0x0d
    4220:	f9 01       	movw	r30, r18
    4222:	19 95       	eicall
		
		if (model->LatitudeDegrees() != 0 && model->LongitudeDegrees() != 0)
    4224:	8a 81       	ldd	r24, Y+2	; 0x02
    4226:	9b 81       	ldd	r25, Y+3	; 0x03
    4228:	0e 94 df 19 	call	0x33be	; 0x33be <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    422c:	dc 01       	movw	r26, r24
    422e:	cb 01       	movw	r24, r22
    4230:	20 e0       	ldi	r18, 0x00	; 0
    4232:	30 e0       	ldi	r19, 0x00	; 0
    4234:	a9 01       	movw	r20, r18
    4236:	bc 01       	movw	r22, r24
    4238:	cd 01       	movw	r24, r26
    423a:	0e 94 53 4b 	call	0x96a6	; 0x96a6 <__cmpsf2>
    423e:	88 23       	and	r24, r24
    4240:	89 f0       	breq	.+34     	; 0x4264 <main+0x298>
    4242:	8a 81       	ldd	r24, Y+2	; 0x02
    4244:	9b 81       	ldd	r25, Y+3	; 0x03
    4246:	0e 94 f7 19 	call	0x33ee	; 0x33ee <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    424a:	dc 01       	movw	r26, r24
    424c:	cb 01       	movw	r24, r22
    424e:	20 e0       	ldi	r18, 0x00	; 0
    4250:	30 e0       	ldi	r19, 0x00	; 0
    4252:	a9 01       	movw	r20, r18
    4254:	bc 01       	movw	r22, r24
    4256:	cd 01       	movw	r24, r26
    4258:	0e 94 53 4b 	call	0x96a6	; 0x96a6 <__cmpsf2>
    425c:	88 23       	and	r24, r24
    425e:	11 f0       	breq	.+4      	; 0x4264 <main+0x298>
    4260:	81 e0       	ldi	r24, 0x01	; 1
    4262:	01 c0       	rjmp	.+2      	; 0x4266 <main+0x29a>
    4264:	80 e0       	ldi	r24, 0x00	; 0
    4266:	88 23       	and	r24, r24
    4268:	09 f4       	brne	.+2      	; 0x426c <main+0x2a0>
    426a:	82 c0       	rjmp	.+260    	; 0x4370 <main+0x3a4>
		{
			isInitialized = true;
    426c:	81 e0       	ldi	r24, 0x01	; 1
    426e:	89 83       	std	Y+1, r24	; 0x01
			
			//ecefReferenceX, ecefReferenceY, ecefReferenceZ,ecefToLocalNEDRotationMatrix,
			CoordinateUtil::CalculateECEFToLocalNEDRotationMatrix(model->LatitudeDegrees(), model->LongitudeDegrees(), model->EcefToLocalNEDRotationMatrix);
    4270:	8a 81       	ldd	r24, Y+2	; 0x02
    4272:	9b 81       	ldd	r25, Y+3	; 0x03
    4274:	8c 01       	movw	r16, r24
    4276:	0b 52       	subi	r16, 0x2B	; 43
    4278:	1f 4f       	sbci	r17, 0xFF	; 255
    427a:	8a 81       	ldd	r24, Y+2	; 0x02
    427c:	9b 81       	ldd	r25, Y+3	; 0x03
    427e:	0e 94 f7 19 	call	0x33ee	; 0x33ee <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    4282:	6b 01       	movw	r12, r22
    4284:	7c 01       	movw	r14, r24
    4286:	8a 81       	ldd	r24, Y+2	; 0x02
    4288:	9b 81       	ldd	r25, Y+3	; 0x03
    428a:	0e 94 df 19 	call	0x33be	; 0x33be <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    428e:	dc 01       	movw	r26, r24
    4290:	cb 01       	movw	r24, r22
    4292:	a7 01       	movw	r20, r14
    4294:	96 01       	movw	r18, r12
    4296:	bc 01       	movw	r22, r24
    4298:	cd 01       	movw	r24, r26
    429a:	0e 94 59 45 	call	0x8ab2	; 0x8ab2 <_ZN10helicopter4util14CoordinateUtil37CalculateECEFToLocalNEDRotationMatrixEffPA3_f>
	
			float initialXPositionEcef = 0;
    429e:	1a a6       	std	Y+42, r1	; 0x2a
    42a0:	1b a6       	std	Y+43, r1	; 0x2b
    42a2:	1c a6       	std	Y+44, r1	; 0x2c
    42a4:	1d a6       	std	Y+45, r1	; 0x2d
			float initialYPositionEcef = 0;
    42a6:	1e a6       	std	Y+46, r1	; 0x2e
    42a8:	1f a6       	std	Y+47, r1	; 0x2f
    42aa:	18 aa       	std	Y+48, r1	; 0x30
    42ac:	19 aa       	std	Y+49, r1	; 0x31
			float initialZPositionEcef = 0;
    42ae:	1a aa       	std	Y+50, r1	; 0x32
    42b0:	1b aa       	std	Y+51, r1	; 0x33
    42b2:	1c aa       	std	Y+52, r1	; 0x34
    42b4:	1d aa       	std	Y+53, r1	; 0x35
			CoordinateUtil::ConvertFromGeodeticToECEF(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), initialXPositionEcef, initialYPositionEcef, initialZPositionEcef);
    42b6:	8a 81       	ldd	r24, Y+2	; 0x02
    42b8:	9b 81       	ldd	r25, Y+3	; 0x03
    42ba:	0e 94 81 19 	call	0x3302	; 0x3302 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    42be:	6e ab       	std	Y+54, r22	; 0x36
    42c0:	7f ab       	std	Y+55, r23	; 0x37
    42c2:	88 af       	std	Y+56, r24	; 0x38
    42c4:	99 af       	std	Y+57, r25	; 0x39
    42c6:	8a 81       	ldd	r24, Y+2	; 0x02
    42c8:	9b 81       	ldd	r25, Y+3	; 0x03
    42ca:	0e 94 f7 19 	call	0x33ee	; 0x33ee <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    42ce:	2b 01       	movw	r4, r22
    42d0:	3c 01       	movw	r6, r24
    42d2:	8a 81       	ldd	r24, Y+2	; 0x02
    42d4:	9b 81       	ldd	r25, Y+3	; 0x03
    42d6:	0e 94 df 19 	call	0x33be	; 0x33be <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    42da:	dc 01       	movw	r26, r24
    42dc:	cb 01       	movw	r24, r22
    42de:	be 01       	movw	r22, r28
    42e0:	6e 5c       	subi	r22, 0xCE	; 206
    42e2:	7f 4f       	sbci	r23, 0xFF	; 255
    42e4:	ae 01       	movw	r20, r28
    42e6:	42 5d       	subi	r20, 0xD2	; 210
    42e8:	5f 4f       	sbci	r21, 0xFF	; 255
    42ea:	9e 01       	movw	r18, r28
    42ec:	26 5d       	subi	r18, 0xD6	; 214
    42ee:	3f 4f       	sbci	r19, 0xFF	; 255
    42f0:	4b 01       	movw	r8, r22
    42f2:	5a 01       	movw	r10, r20
    42f4:	69 01       	movw	r12, r18
    42f6:	ee a8       	ldd	r14, Y+54	; 0x36
    42f8:	ff a8       	ldd	r15, Y+55	; 0x37
    42fa:	08 ad       	ldd	r16, Y+56	; 0x38
    42fc:	19 ad       	ldd	r17, Y+57	; 0x39
    42fe:	a3 01       	movw	r20, r6
    4300:	92 01       	movw	r18, r4
    4302:	bc 01       	movw	r22, r24
    4304:	cd 01       	movw	r24, r26
    4306:	0e 94 08 47 	call	0x8e10	; 0x8e10 <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEfffRfS2_S2_>
			
			model->InitialXPositionEcef(initialXPositionEcef);
    430a:	8a a5       	ldd	r24, Y+42	; 0x2a
    430c:	9b a5       	ldd	r25, Y+43	; 0x2b
    430e:	ac a5       	ldd	r26, Y+44	; 0x2c
    4310:	bd a5       	ldd	r27, Y+45	; 0x2d
    4312:	bc 01       	movw	r22, r24
    4314:	cd 01       	movw	r24, r26
    4316:	0e 94 c2 4b 	call	0x9784	; 0x9784 <__fixsfsi>
    431a:	dc 01       	movw	r26, r24
    431c:	cb 01       	movw	r24, r22
    431e:	2a 81       	ldd	r18, Y+2	; 0x02
    4320:	3b 81       	ldd	r19, Y+3	; 0x03
    4322:	ac 01       	movw	r20, r24
    4324:	bd 01       	movw	r22, r26
    4326:	c9 01       	movw	r24, r18
    4328:	0e 94 0f 1a 	call	0x341e	; 0x341e <_ZN10helicopter5model11SystemModel20InitialXPositionEcefEl>
			model->InitialYPositionEcef(initialYPositionEcef);
    432c:	8e a5       	ldd	r24, Y+46	; 0x2e
    432e:	9f a5       	ldd	r25, Y+47	; 0x2f
    4330:	a8 a9       	ldd	r26, Y+48	; 0x30
    4332:	b9 a9       	ldd	r27, Y+49	; 0x31
    4334:	bc 01       	movw	r22, r24
    4336:	cd 01       	movw	r24, r26
    4338:	0e 94 c2 4b 	call	0x9784	; 0x9784 <__fixsfsi>
    433c:	dc 01       	movw	r26, r24
    433e:	cb 01       	movw	r24, r22
    4340:	2a 81       	ldd	r18, Y+2	; 0x02
    4342:	3b 81       	ldd	r19, Y+3	; 0x03
    4344:	ac 01       	movw	r20, r24
    4346:	bd 01       	movw	r22, r26
    4348:	c9 01       	movw	r24, r18
    434a:	0e 94 35 1a 	call	0x346a	; 0x346a <_ZN10helicopter5model11SystemModel20InitialYPositionEcefEl>
			model->InitialZPositionEcef(initialZPositionEcef);
    434e:	8a a9       	ldd	r24, Y+50	; 0x32
    4350:	9b a9       	ldd	r25, Y+51	; 0x33
    4352:	ac a9       	ldd	r26, Y+52	; 0x34
    4354:	bd a9       	ldd	r27, Y+53	; 0x35
    4356:	bc 01       	movw	r22, r24
    4358:	cd 01       	movw	r24, r26
    435a:	0e 94 c2 4b 	call	0x9784	; 0x9784 <__fixsfsi>
    435e:	dc 01       	movw	r26, r24
    4360:	cb 01       	movw	r24, r22
    4362:	2a 81       	ldd	r18, Y+2	; 0x02
    4364:	3b 81       	ldd	r19, Y+3	; 0x03
    4366:	ac 01       	movw	r20, r24
    4368:	bd 01       	movw	r22, r26
    436a:	c9 01       	movw	r24, r18
    436c:	0e 94 5b 1a 	call	0x34b6	; 0x34b6 <_ZN10helicopter5model11SystemModel20InitialZPositionEcefEl>
    4370:	80 e0       	ldi	r24, 0x00	; 0
    4372:	90 e0       	ldi	r25, 0x00	; 0
    4374:	a8 ec       	ldi	r26, 0xC8	; 200
    4376:	b2 e4       	ldi	r27, 0x42	; 66
    4378:	8c 8f       	std	Y+28, r24	; 0x1c
    437a:	9d 8f       	std	Y+29, r25	; 0x1d
    437c:	ae 8f       	std	Y+30, r26	; 0x1e
    437e:	bf 8f       	std	Y+31, r27	; 0x1f
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    4380:	20 e0       	ldi	r18, 0x00	; 0
    4382:	30 e0       	ldi	r19, 0x00	; 0
    4384:	4a e7       	ldi	r20, 0x7A	; 122
    4386:	55 e4       	ldi	r21, 0x45	; 69
    4388:	6c 8d       	ldd	r22, Y+28	; 0x1c
    438a:	7d 8d       	ldd	r23, Y+29	; 0x1d
    438c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    438e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    4390:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    4394:	dc 01       	movw	r26, r24
    4396:	cb 01       	movw	r24, r22
    4398:	88 a3       	std	Y+32, r24	; 0x20
    439a:	99 a3       	std	Y+33, r25	; 0x21
    439c:	aa a3       	std	Y+34, r26	; 0x22
    439e:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    43a0:	20 e0       	ldi	r18, 0x00	; 0
    43a2:	30 e0       	ldi	r19, 0x00	; 0
    43a4:	40 e8       	ldi	r20, 0x80	; 128
    43a6:	5f e3       	ldi	r21, 0x3F	; 63
    43a8:	68 a1       	ldd	r22, Y+32	; 0x20
    43aa:	79 a1       	ldd	r23, Y+33	; 0x21
    43ac:	8a a1       	ldd	r24, Y+34	; 0x22
    43ae:	9b a1       	ldd	r25, Y+35	; 0x23
    43b0:	0e 94 53 4b 	call	0x96a6	; 0x96a6 <__cmpsf2>
    43b4:	88 23       	and	r24, r24
    43b6:	2c f4       	brge	.+10     	; 0x43c2 <main+0x3f6>
		__ticks = 1;
    43b8:	81 e0       	ldi	r24, 0x01	; 1
    43ba:	90 e0       	ldi	r25, 0x00	; 0
    43bc:	9d a3       	std	Y+37, r25	; 0x25
    43be:	8c a3       	std	Y+36, r24	; 0x24
    43c0:	46 c0       	rjmp	.+140    	; 0x444e <main+0x482>
	else if (__tmp > 65535)
    43c2:	20 e0       	ldi	r18, 0x00	; 0
    43c4:	3f ef       	ldi	r19, 0xFF	; 255
    43c6:	4f e7       	ldi	r20, 0x7F	; 127
    43c8:	57 e4       	ldi	r21, 0x47	; 71
    43ca:	68 a1       	ldd	r22, Y+32	; 0x20
    43cc:	79 a1       	ldd	r23, Y+33	; 0x21
    43ce:	8a a1       	ldd	r24, Y+34	; 0x22
    43d0:	9b a1       	ldd	r25, Y+35	; 0x23
    43d2:	0e 94 31 4d 	call	0x9a62	; 0x9a62 <__gesf2>
    43d6:	18 16       	cp	r1, r24
    43d8:	84 f5       	brge	.+96     	; 0x443a <main+0x46e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    43da:	20 e0       	ldi	r18, 0x00	; 0
    43dc:	30 e0       	ldi	r19, 0x00	; 0
    43de:	40 e2       	ldi	r20, 0x20	; 32
    43e0:	51 e4       	ldi	r21, 0x41	; 65
    43e2:	6c 8d       	ldd	r22, Y+28	; 0x1c
    43e4:	7d 8d       	ldd	r23, Y+29	; 0x1d
    43e6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    43e8:	9f 8d       	ldd	r25, Y+31	; 0x1f
    43ea:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    43ee:	dc 01       	movw	r26, r24
    43f0:	cb 01       	movw	r24, r22
    43f2:	bc 01       	movw	r22, r24
    43f4:	cd 01       	movw	r24, r26
    43f6:	0e 94 c7 4b 	call	0x978e	; 0x978e <__fixunssfsi>
    43fa:	dc 01       	movw	r26, r24
    43fc:	cb 01       	movw	r24, r22
    43fe:	9d a3       	std	Y+37, r25	; 0x25
    4400:	8c a3       	std	Y+36, r24	; 0x24
    4402:	12 c0       	rjmp	.+36     	; 0x4428 <main+0x45c>
    4404:	80 e9       	ldi	r24, 0x90	; 144
    4406:	91 e0       	ldi	r25, 0x01	; 1
    4408:	9f a3       	std	Y+39, r25	; 0x27
    440a:	8e a3       	std	Y+38, r24	; 0x26
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    440c:	8e a1       	ldd	r24, Y+38	; 0x26
    440e:	9f a1       	ldd	r25, Y+39	; 0x27
    4410:	8c 01       	movw	r16, r24
    4412:	c8 01       	movw	r24, r16
    4414:	01 97       	sbiw	r24, 0x01	; 1
    4416:	f1 f7       	brne	.-4      	; 0x4414 <main+0x448>
    4418:	8c 01       	movw	r16, r24
    441a:	1f a3       	std	Y+39, r17	; 0x27
    441c:	0e a3       	std	Y+38, r16	; 0x26
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    441e:	8c a1       	ldd	r24, Y+36	; 0x24
    4420:	9d a1       	ldd	r25, Y+37	; 0x25
    4422:	01 97       	sbiw	r24, 0x01	; 1
    4424:	9d a3       	std	Y+37, r25	; 0x25
    4426:	8c a3       	std	Y+36, r24	; 0x24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4428:	21 e0       	ldi	r18, 0x01	; 1
    442a:	8c a1       	ldd	r24, Y+36	; 0x24
    442c:	9d a1       	ldd	r25, Y+37	; 0x25
    442e:	00 97       	sbiw	r24, 0x00	; 0
    4430:	09 f4       	brne	.+2      	; 0x4434 <main+0x468>
    4432:	20 e0       	ldi	r18, 0x00	; 0
    4434:	22 23       	and	r18, r18
    4436:	31 f7       	brne	.-52     	; 0x4404 <main+0x438>
    4438:	17 c0       	rjmp	.+46     	; 0x4468 <main+0x49c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    443a:	68 a1       	ldd	r22, Y+32	; 0x20
    443c:	79 a1       	ldd	r23, Y+33	; 0x21
    443e:	8a a1       	ldd	r24, Y+34	; 0x22
    4440:	9b a1       	ldd	r25, Y+35	; 0x23
    4442:	0e 94 c7 4b 	call	0x978e	; 0x978e <__fixunssfsi>
    4446:	dc 01       	movw	r26, r24
    4448:	cb 01       	movw	r24, r22
    444a:	9d a3       	std	Y+37, r25	; 0x25
    444c:	8c a3       	std	Y+36, r24	; 0x24
    444e:	8c a1       	ldd	r24, Y+36	; 0x24
    4450:	9d a1       	ldd	r25, Y+37	; 0x25
    4452:	99 a7       	std	Y+41, r25	; 0x29
    4454:	88 a7       	std	Y+40, r24	; 0x28
    4456:	88 a5       	ldd	r24, Y+40	; 0x28
    4458:	99 a5       	ldd	r25, Y+41	; 0x29
    445a:	8c 01       	movw	r16, r24
    445c:	f8 01       	movw	r30, r16
    445e:	31 97       	sbiw	r30, 0x01	; 1
    4460:	f1 f7       	brne	.-4      	; 0x445e <main+0x492>
    4462:	8f 01       	movw	r16, r30
    4464:	19 a7       	std	Y+41, r17	; 0x29
    4466:	08 a7       	std	Y+40, r16	; 0x28
	
	
	//Wait until we receive location data before starting the scheduler
	//TODO rework this
	bool isInitialized = false;
	while (!isInitialized)
    4468:	99 81       	ldd	r25, Y+1	; 0x01
    446a:	81 e0       	ldi	r24, 0x01	; 1
    446c:	89 27       	eor	r24, r25
    446e:	88 23       	and	r24, r24
    4470:	09 f0       	breq	.+2      	; 0x4474 <main+0x4a8>
    4472:	cc ce       	rjmp	.-616    	; 0x420c <main+0x240>
		_delay_ms(100);
	}
	
	
	
	scheduler->init(); //Sets up the timer registers, inits all tasks,
    4474:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4476:	9b 8d       	ldd	r25, Y+27	; 0x1b
    4478:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10helicopter9scheduler9Scheduler4initEv>
	
	scheduler->start();
    447c:	8a 8d       	ldd	r24, Y+26	; 0x1a
    447e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    4480:	0e 94 2e 3c 	call	0x785c	; 0x785c <_ZN10helicopter9scheduler9Scheduler5startEv>
	
	rcInterface->init();
    4484:	88 8d       	ldd	r24, Y+24	; 0x18
    4486:	99 8d       	ldd	r25, Y+25	; 0x19
    4488:	0e 94 87 28 	call	0x510e	; 0x510e <_ZN10helicopter10interfaces24RadioControllerInterface4initEv>
	
	rcInterface->start();
    448c:	88 8d       	ldd	r24, Y+24	; 0x18
    448e:	99 8d       	ldd	r25, Y+25	; 0x19
    4490:	0e 94 c1 28 	call	0x5182	; 0x5182 <_ZN10helicopter10interfaces24RadioControllerInterface5startEv>
    4494:	01 c0       	rjmp	.+2      	; 0x4498 <main+0x4cc>
	
	
	while(1)
    4496:	00 00       	nop
	{
		//Checks to see if any tasks are ready to run an executes them.
		//goes to sleep (until the next timer tick) after processing all available tasks.
		scheduler->dispatch();
    4498:	8a 8d       	ldd	r24, Y+26	; 0x1a
    449a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    449c:	0e 94 b7 3b 	call	0x776e	; 0x776e <_ZN10helicopter9scheduler9Scheduler8dispatchEv>
		
		/**
		 * Determine if the last processing frame was blown.
		 */
		if (scheduler->hasBlownFrame())
    44a0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    44a2:	9b 8d       	ldd	r25, Y+27	; 0x1b
    44a4:	0e 94 e4 15 	call	0x2bc8	; 0x2bc8 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEv>
    44a8:	88 23       	and	r24, r24
    44aa:	a9 f3       	breq	.-22     	; 0x4496 <main+0x4ca>
		{
			pidController->addBlownFrame();
    44ac:	8c 81       	ldd	r24, Y+4	; 0x04
    44ae:	9d 81       	ldd	r25, Y+5	; 0x05
    44b0:	0e 94 a7 0b 	call	0x174e	; 0x174e <_ZN10helicopter10controller13PIDController13addBlownFrameEv>
	rcInterface->init();
	
	rcInterface->start();
	
	
	while(1)
    44b4:	f0 cf       	rjmp	.-32     	; 0x4496 <main+0x4ca>

000044b6 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>:
	namespace tasks
	{
		/**
			* This task is used to periodically flash an LED on the flight computer.
			*/
		class FlashLEDTask : public Task
    44b6:	cf 93       	push	r28
    44b8:	df 93       	push	r29
    44ba:	1f 92       	push	r1
    44bc:	1f 92       	push	r1
    44be:	cd b7       	in	r28, 0x3d	; 61
    44c0:	de b7       	in	r29, 0x3e	; 62
    44c2:	9a 83       	std	Y+2, r25	; 0x02
    44c4:	89 83       	std	Y+1, r24	; 0x01
    44c6:	89 81       	ldd	r24, Y+1	; 0x01
    44c8:	9a 81       	ldd	r25, Y+2	; 0x02
    44ca:	28 e1       	ldi	r18, 0x18	; 24
    44cc:	32 e0       	ldi	r19, 0x02	; 2
    44ce:	fc 01       	movw	r30, r24
    44d0:	31 83       	std	Z+1, r19	; 0x01
    44d2:	20 83       	st	Z, r18
    44d4:	89 81       	ldd	r24, Y+1	; 0x01
    44d6:	9a 81       	ldd	r25, Y+2	; 0x02
    44d8:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <_ZN10helicopter5tasks4TaskD1Ev>
    44dc:	80 e0       	ldi	r24, 0x00	; 0
    44de:	90 e0       	ldi	r25, 0x00	; 0
    44e0:	81 70       	andi	r24, 0x01	; 1
    44e2:	99 27       	eor	r25, r25
    44e4:	00 97       	sbiw	r24, 0x00	; 0
    44e6:	21 f0       	breq	.+8      	; 0x44f0 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev+0x3a>
    44e8:	89 81       	ldd	r24, Y+1	; 0x01
    44ea:	9a 81       	ldd	r25, Y+2	; 0x02
    44ec:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    44f0:	0f 90       	pop	r0
    44f2:	0f 90       	pop	r0
    44f4:	df 91       	pop	r29
    44f6:	cf 91       	pop	r28
    44f8:	08 95       	ret

000044fa <_ZN10helicopter5tasks12FlashLEDTaskD0Ev>:
    44fa:	cf 93       	push	r28
    44fc:	df 93       	push	r29
    44fe:	1f 92       	push	r1
    4500:	1f 92       	push	r1
    4502:	cd b7       	in	r28, 0x3d	; 61
    4504:	de b7       	in	r29, 0x3e	; 62
    4506:	9a 83       	std	Y+2, r25	; 0x02
    4508:	89 83       	std	Y+1, r24	; 0x01
    450a:	89 81       	ldd	r24, Y+1	; 0x01
    450c:	9a 81       	ldd	r25, Y+2	; 0x02
    450e:	0e 94 5b 22 	call	0x44b6	; 0x44b6 <_ZN10helicopter5tasks12FlashLEDTaskD1Ev>
    4512:	89 81       	ldd	r24, Y+1	; 0x01
    4514:	9a 81       	ldd	r25, Y+2	; 0x02
    4516:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    451a:	0f 90       	pop	r0
    451c:	0f 90       	pop	r0
    451e:	df 91       	pop	r29
    4520:	cf 91       	pop	r28
    4522:	08 95       	ret

00004524 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>:

using namespace helicopter::util;
using namespace helicopter::interfaces;

void GroundControlStationInterface::calculateChecksum (byte *msgPayload, int payloadSize, byte &checksumA, byte &checksumB)
{
    4524:	0f 93       	push	r16
    4526:	1f 93       	push	r17
    4528:	cf 93       	push	r28
    452a:	df 93       	push	r29
    452c:	cd b7       	in	r28, 0x3d	; 61
    452e:	de b7       	in	r29, 0x3e	; 62
    4530:	2d 97       	sbiw	r28, 0x0d	; 13
    4532:	0f b6       	in	r0, 0x3f	; 63
    4534:	f8 94       	cli
    4536:	de bf       	out	0x3e, r29	; 62
    4538:	0f be       	out	0x3f, r0	; 63
    453a:	cd bf       	out	0x3d, r28	; 61
    453c:	9d 83       	std	Y+5, r25	; 0x05
    453e:	8c 83       	std	Y+4, r24	; 0x04
    4540:	7f 83       	std	Y+7, r23	; 0x07
    4542:	6e 83       	std	Y+6, r22	; 0x06
    4544:	59 87       	std	Y+9, r21	; 0x09
    4546:	48 87       	std	Y+8, r20	; 0x08
    4548:	3b 87       	std	Y+11, r19	; 0x0b
    454a:	2a 87       	std	Y+10, r18	; 0x0a
    454c:	1d 87       	std	Y+13, r17	; 0x0d
    454e:	0c 87       	std	Y+12, r16	; 0x0c
	for (int i = 0; i < payloadSize; i++)
    4550:	1a 82       	std	Y+2, r1	; 0x02
    4552:	19 82       	std	Y+1, r1	; 0x01
    4554:	26 c0       	rjmp	.+76     	; 0x45a2 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x7e>
	{
		byte b = msgPayload[i];
    4556:	89 81       	ldd	r24, Y+1	; 0x01
    4558:	9a 81       	ldd	r25, Y+2	; 0x02
    455a:	2e 81       	ldd	r18, Y+6	; 0x06
    455c:	3f 81       	ldd	r19, Y+7	; 0x07
    455e:	82 0f       	add	r24, r18
    4560:	93 1f       	adc	r25, r19
    4562:	fc 01       	movw	r30, r24
    4564:	80 81       	ld	r24, Z
    4566:	8b 83       	std	Y+3, r24	; 0x03
		
		//These fields can overflow, but that is intentional.
		checksumA = (byte) (checksumA + b);
    4568:	8a 85       	ldd	r24, Y+10	; 0x0a
    456a:	9b 85       	ldd	r25, Y+11	; 0x0b
    456c:	fc 01       	movw	r30, r24
    456e:	90 81       	ld	r25, Z
    4570:	8b 81       	ldd	r24, Y+3	; 0x03
    4572:	29 2f       	mov	r18, r25
    4574:	28 0f       	add	r18, r24
    4576:	8a 85       	ldd	r24, Y+10	; 0x0a
    4578:	9b 85       	ldd	r25, Y+11	; 0x0b
    457a:	fc 01       	movw	r30, r24
    457c:	20 83       	st	Z, r18
		checksumB = (byte) (checksumB + checksumA);
    457e:	8c 85       	ldd	r24, Y+12	; 0x0c
    4580:	9d 85       	ldd	r25, Y+13	; 0x0d
    4582:	fc 01       	movw	r30, r24
    4584:	20 81       	ld	r18, Z
    4586:	8a 85       	ldd	r24, Y+10	; 0x0a
    4588:	9b 85       	ldd	r25, Y+11	; 0x0b
    458a:	fc 01       	movw	r30, r24
    458c:	80 81       	ld	r24, Z
    458e:	28 0f       	add	r18, r24
    4590:	8c 85       	ldd	r24, Y+12	; 0x0c
    4592:	9d 85       	ldd	r25, Y+13	; 0x0d
    4594:	fc 01       	movw	r30, r24
    4596:	20 83       	st	Z, r18
using namespace helicopter::util;
using namespace helicopter::interfaces;

void GroundControlStationInterface::calculateChecksum (byte *msgPayload, int payloadSize, byte &checksumA, byte &checksumB)
{
	for (int i = 0; i < payloadSize; i++)
    4598:	89 81       	ldd	r24, Y+1	; 0x01
    459a:	9a 81       	ldd	r25, Y+2	; 0x02
    459c:	01 96       	adiw	r24, 0x01	; 1
    459e:	9a 83       	std	Y+2, r25	; 0x02
    45a0:	89 83       	std	Y+1, r24	; 0x01
    45a2:	41 e0       	ldi	r20, 0x01	; 1
    45a4:	29 81       	ldd	r18, Y+1	; 0x01
    45a6:	3a 81       	ldd	r19, Y+2	; 0x02
    45a8:	88 85       	ldd	r24, Y+8	; 0x08
    45aa:	99 85       	ldd	r25, Y+9	; 0x09
    45ac:	28 17       	cp	r18, r24
    45ae:	39 07       	cpc	r19, r25
    45b0:	0c f0       	brlt	.+2      	; 0x45b4 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x90>
    45b2:	40 e0       	ldi	r20, 0x00	; 0
    45b4:	44 23       	and	r20, r20
    45b6:	79 f6       	brne	.-98     	; 0x4556 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_+0x32>
		
		//These fields can overflow, but that is intentional.
		checksumA = (byte) (checksumA + b);
		checksumB = (byte) (checksumB + checksumA);
	}
}
    45b8:	2d 96       	adiw	r28, 0x0d	; 13
    45ba:	0f b6       	in	r0, 0x3f	; 63
    45bc:	f8 94       	cli
    45be:	de bf       	out	0x3e, r29	; 62
    45c0:	0f be       	out	0x3f, r0	; 63
    45c2:	cd bf       	out	0x3d, r28	; 61
    45c4:	df 91       	pop	r29
    45c6:	cf 91       	pop	r28
    45c8:	1f 91       	pop	r17
    45ca:	0f 91       	pop	r16
    45cc:	08 95       	ret

000045ce <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>:

int GroundControlStationInterface::transmit(Message *msgToSend)
{
    45ce:	cf 92       	push	r12
    45d0:	df 92       	push	r13
    45d2:	ef 92       	push	r14
    45d4:	ff 92       	push	r15
    45d6:	0f 93       	push	r16
    45d8:	1f 93       	push	r17
    45da:	cf 93       	push	r28
    45dc:	df 93       	push	r29
    45de:	cd b7       	in	r28, 0x3d	; 61
    45e0:	de b7       	in	r29, 0x3e	; 62
    45e2:	64 97       	sbiw	r28, 0x14	; 20
    45e4:	0f b6       	in	r0, 0x3f	; 63
    45e6:	f8 94       	cli
    45e8:	de bf       	out	0x3e, r29	; 62
    45ea:	0f be       	out	0x3f, r0	; 63
    45ec:	cd bf       	out	0x3d, r28	; 61
    45ee:	9a 8b       	std	Y+18, r25	; 0x12
    45f0:	89 8b       	std	Y+17, r24	; 0x11
    45f2:	7c 8b       	std	Y+20, r23	; 0x14
    45f4:	6b 8b       	std	Y+19, r22	; 0x13
		delete [] msgPayload;
		msgPayload = NULL;
	}
	
	return status;
}
    45f6:	ed b6       	in	r14, 0x3d	; 61
    45f8:	fe b6       	in	r15, 0x3e	; 62
	}
}

int GroundControlStationInterface::transmit(Message *msgToSend)
{
	int status = 0;
    45fa:	1a 82       	std	Y+2, r1	; 0x02
    45fc:	19 82       	std	Y+1, r1	; 0x01
	
	if (msgToSend != NULL)
    45fe:	8b 89       	ldd	r24, Y+19	; 0x13
    4600:	9c 89       	ldd	r25, Y+20	; 0x14
    4602:	00 97       	sbiw	r24, 0x00	; 0
    4604:	09 f4       	brne	.+2      	; 0x4608 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x3a>
    4606:	cb c0       	rjmp	.+406    	; 0x479e <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x1d0>
    4608:	8d b7       	in	r24, 0x3d	; 61
    460a:	9e b7       	in	r25, 0x3e	; 62
    460c:	6c 01       	movw	r12, r24
	{
		byte *msgPayload = msgToSend->getBytes();
    460e:	8b 89       	ldd	r24, Y+19	; 0x13
    4610:	9c 89       	ldd	r25, Y+20	; 0x14
    4612:	fc 01       	movw	r30, r24
    4614:	80 81       	ld	r24, Z
    4616:	91 81       	ldd	r25, Z+1	; 0x01
    4618:	04 96       	adiw	r24, 0x04	; 4
    461a:	fc 01       	movw	r30, r24
    461c:	20 81       	ld	r18, Z
    461e:	31 81       	ldd	r19, Z+1	; 0x01
    4620:	8b 89       	ldd	r24, Y+19	; 0x13
    4622:	9c 89       	ldd	r25, Y+20	; 0x14
    4624:	f9 01       	movw	r30, r18
    4626:	19 95       	eicall
    4628:	9e 83       	std	Y+6, r25	; 0x06
    462a:	8d 83       	std	Y+5, r24	; 0x05
		
		int payloadSize = msgToSend->getMessageSize();
    462c:	8b 89       	ldd	r24, Y+19	; 0x13
    462e:	9c 89       	ldd	r25, Y+20	; 0x14
    4630:	0e 94 0a 29 	call	0x5214	; 0x5214 <_ZN10helicopter8messages7Message14getMessageSizeEv>
    4634:	98 87       	std	Y+8, r25	; 0x08
    4636:	8f 83       	std	Y+7, r24	; 0x07
		
		int completeMsgSize = payloadSize + MsgHeaderFooterSize;;
    4638:	8f 81       	ldd	r24, Y+7	; 0x07
    463a:	98 85       	ldd	r25, Y+8	; 0x08
    463c:	05 96       	adiw	r24, 0x05	; 5
    463e:	9a 87       	std	Y+10, r25	; 0x0a
    4640:	89 87       	std	Y+9, r24	; 0x09

		byte completeMsg[completeMsgSize];
    4642:	89 85       	ldd	r24, Y+9	; 0x09
    4644:	9a 85       	ldd	r25, Y+10	; 0x0a
    4646:	01 97       	sbiw	r24, 0x01	; 1
    4648:	9c 87       	std	Y+12, r25	; 0x0c
    464a:	8b 87       	std	Y+11, r24	; 0x0b
    464c:	01 96       	adiw	r24, 0x01	; 1
    464e:	2d b7       	in	r18, 0x3d	; 61
    4650:	3e b7       	in	r19, 0x3e	; 62
    4652:	28 1b       	sub	r18, r24
    4654:	39 0b       	sbc	r19, r25
    4656:	0f b6       	in	r0, 0x3f	; 63
    4658:	f8 94       	cli
    465a:	3e bf       	out	0x3e, r19	; 62
    465c:	0f be       	out	0x3f, r0	; 63
    465e:	2d bf       	out	0x3d, r18	; 61
    4660:	8d b7       	in	r24, 0x3d	; 61
    4662:	9e b7       	in	r25, 0x3e	; 62
    4664:	01 96       	adiw	r24, 0x01	; 1
    4666:	9e 87       	std	Y+14, r25	; 0x0e
    4668:	8d 87       	std	Y+13, r24	; 0x0d
		
		completeMsg[0] = GroundControlStationInterface::SyncByte1;
    466a:	8d 85       	ldd	r24, Y+13	; 0x0d
    466c:	9e 85       	ldd	r25, Y+14	; 0x0e
    466e:	25 eb       	ldi	r18, 0xB5	; 181
    4670:	fc 01       	movw	r30, r24
    4672:	20 83       	st	Z, r18
		completeMsg[1] = GroundControlStationInterface::SyncByte2;
    4674:	8d 85       	ldd	r24, Y+13	; 0x0d
    4676:	9e 85       	ldd	r25, Y+14	; 0x0e
    4678:	22 e6       	ldi	r18, 0x62	; 98
    467a:	fc 01       	movw	r30, r24
    467c:	21 83       	std	Z+1, r18	; 0x01
		completeMsg[2] = GroundControlStationInterface::SyncByte3;
    467e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4680:	9e 85       	ldd	r25, Y+14	; 0x0e
    4682:	27 ed       	ldi	r18, 0xD7	; 215
    4684:	fc 01       	movw	r30, r24
    4686:	22 83       	std	Z+2, r18	; 0x02
		
		memcpy(&completeMsg[3], msgPayload, payloadSize);
    4688:	4f 81       	ldd	r20, Y+7	; 0x07
    468a:	58 85       	ldd	r21, Y+8	; 0x08
    468c:	8d 85       	ldd	r24, Y+13	; 0x0d
    468e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4690:	03 96       	adiw	r24, 0x03	; 3
    4692:	2d 81       	ldd	r18, Y+5	; 0x05
    4694:	3e 81       	ldd	r19, Y+6	; 0x06
    4696:	b9 01       	movw	r22, r18
    4698:	0e 94 d3 50 	call	0xa1a6	; 0xa1a6 <memcpy>
		
		byte checksumA = 0;
    469c:	1f 86       	std	Y+15, r1	; 0x0f
		byte checksumB = 0;
    469e:	18 8a       	std	Y+16, r1	; 0x10
		
		calculateChecksum(msgPayload, payloadSize, checksumA, checksumB);
    46a0:	fe 01       	movw	r30, r28
    46a2:	70 96       	adiw	r30, 0x10	; 16
    46a4:	9e 01       	movw	r18, r28
    46a6:	21 5f       	subi	r18, 0xF1	; 241
    46a8:	3f 4f       	sbci	r19, 0xFF	; 255
    46aa:	4f 81       	ldd	r20, Y+7	; 0x07
    46ac:	58 85       	ldd	r21, Y+8	; 0x08
    46ae:	6d 81       	ldd	r22, Y+5	; 0x05
    46b0:	7e 81       	ldd	r23, Y+6	; 0x06
    46b2:	89 89       	ldd	r24, Y+17	; 0x11
    46b4:	9a 89       	ldd	r25, Y+18	; 0x12
    46b6:	8f 01       	movw	r16, r30
    46b8:	0e 94 92 22 	call	0x4524	; 0x4524 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>
		
		completeMsg[completeMsgSize - 2] = checksumA;
    46bc:	89 85       	ldd	r24, Y+9	; 0x09
    46be:	9a 85       	ldd	r25, Y+10	; 0x0a
    46c0:	02 97       	sbiw	r24, 0x02	; 2
    46c2:	4f 85       	ldd	r20, Y+15	; 0x0f
    46c4:	2d 85       	ldd	r18, Y+13	; 0x0d
    46c6:	3e 85       	ldd	r19, Y+14	; 0x0e
    46c8:	82 0f       	add	r24, r18
    46ca:	93 1f       	adc	r25, r19
    46cc:	fc 01       	movw	r30, r24
    46ce:	40 83       	st	Z, r20
		completeMsg[completeMsgSize - 1] = checksumB;
    46d0:	89 85       	ldd	r24, Y+9	; 0x09
    46d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    46d4:	01 97       	sbiw	r24, 0x01	; 1
    46d6:	48 89       	ldd	r20, Y+16	; 0x10
    46d8:	2d 85       	ldd	r18, Y+13	; 0x0d
    46da:	3e 85       	ldd	r19, Y+14	; 0x0e
    46dc:	82 0f       	add	r24, r18
    46de:	93 1f       	adc	r25, r19
    46e0:	fc 01       	movw	r30, r24
    46e2:	40 83       	st	Z, r20
		
		if (enableTimeout)
    46e4:	89 89       	ldd	r24, Y+17	; 0x11
    46e6:	9a 89       	ldd	r25, Y+18	; 0x12
    46e8:	fc 01       	movw	r30, r24
    46ea:	84 81       	ldd	r24, Z+4	; 0x04
    46ec:	88 23       	and	r24, r24
    46ee:	39 f0       	breq	.+14     	; 0x46fe <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x130>
		{
			timer->startTimer();
    46f0:	89 89       	ldd	r24, Y+17	; 0x11
    46f2:	9a 89       	ldd	r25, Y+18	; 0x12
    46f4:	fc 01       	movw	r30, r24
    46f6:	82 81       	ldd	r24, Z+2	; 0x02
    46f8:	93 81       	ldd	r25, Z+3	; 0x03
    46fa:	0e 94 fb 49 	call	0x93f6	; 0x93f6 <_ZN10helicopter4util5Timer10startTimerEv>
		}
		
		//iterate over the bytes and transmit them, unless there was an error.
		for (int i = 0; i < completeMsgSize && status == 0; i++)
    46fe:	1c 82       	std	Y+4, r1	; 0x04
    4700:	1b 82       	std	Y+3, r1	; 0x03
    4702:	27 c0       	rjmp	.+78     	; 0x4752 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x184>
		{
			status = serialDriver->transmitByte(completeMsg[i], timer);
    4704:	89 89       	ldd	r24, Y+17	; 0x11
    4706:	9a 89       	ldd	r25, Y+18	; 0x12
    4708:	fc 01       	movw	r30, r24
    470a:	80 81       	ld	r24, Z
    470c:	91 81       	ldd	r25, Z+1	; 0x01
    470e:	fc 01       	movw	r30, r24
    4710:	80 81       	ld	r24, Z
    4712:	91 81       	ldd	r25, Z+1	; 0x01
    4714:	06 96       	adiw	r24, 0x06	; 6
    4716:	fc 01       	movw	r30, r24
    4718:	20 81       	ld	r18, Z
    471a:	31 81       	ldd	r19, Z+1	; 0x01
    471c:	89 89       	ldd	r24, Y+17	; 0x11
    471e:	9a 89       	ldd	r25, Y+18	; 0x12
    4720:	fc 01       	movw	r30, r24
    4722:	42 81       	ldd	r20, Z+2	; 0x02
    4724:	53 81       	ldd	r21, Z+3	; 0x03
    4726:	6d 85       	ldd	r22, Y+13	; 0x0d
    4728:	7e 85       	ldd	r23, Y+14	; 0x0e
    472a:	8b 81       	ldd	r24, Y+3	; 0x03
    472c:	9c 81       	ldd	r25, Y+4	; 0x04
    472e:	86 0f       	add	r24, r22
    4730:	97 1f       	adc	r25, r23
    4732:	fc 01       	movw	r30, r24
    4734:	60 81       	ld	r22, Z
    4736:	89 89       	ldd	r24, Y+17	; 0x11
    4738:	9a 89       	ldd	r25, Y+18	; 0x12
    473a:	fc 01       	movw	r30, r24
    473c:	80 81       	ld	r24, Z
    473e:	91 81       	ldd	r25, Z+1	; 0x01
    4740:	f9 01       	movw	r30, r18
    4742:	19 95       	eicall
    4744:	9a 83       	std	Y+2, r25	; 0x02
    4746:	89 83       	std	Y+1, r24	; 0x01
		{
			timer->startTimer();
		}
		
		//iterate over the bytes and transmit them, unless there was an error.
		for (int i = 0; i < completeMsgSize && status == 0; i++)
    4748:	8b 81       	ldd	r24, Y+3	; 0x03
    474a:	9c 81       	ldd	r25, Y+4	; 0x04
    474c:	01 96       	adiw	r24, 0x01	; 1
    474e:	9c 83       	std	Y+4, r25	; 0x04
    4750:	8b 83       	std	Y+3, r24	; 0x03
    4752:	2b 81       	ldd	r18, Y+3	; 0x03
    4754:	3c 81       	ldd	r19, Y+4	; 0x04
    4756:	89 85       	ldd	r24, Y+9	; 0x09
    4758:	9a 85       	ldd	r25, Y+10	; 0x0a
    475a:	28 17       	cp	r18, r24
    475c:	39 07       	cpc	r19, r25
    475e:	34 f4       	brge	.+12     	; 0x476c <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x19e>
    4760:	89 81       	ldd	r24, Y+1	; 0x01
    4762:	9a 81       	ldd	r25, Y+2	; 0x02
    4764:	00 97       	sbiw	r24, 0x00	; 0
    4766:	11 f4       	brne	.+4      	; 0x476c <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x19e>
    4768:	81 e0       	ldi	r24, 0x01	; 1
    476a:	01 c0       	rjmp	.+2      	; 0x476e <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x1a0>
    476c:	80 e0       	ldi	r24, 0x00	; 0
    476e:	88 23       	and	r24, r24
    4770:	49 f6       	brne	.-110    	; 0x4704 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x136>
		{
			status = serialDriver->transmitByte(completeMsg[i], timer);
		}
		
		timer->stopTimer();
    4772:	89 89       	ldd	r24, Y+17	; 0x11
    4774:	9a 89       	ldd	r25, Y+18	; 0x12
    4776:	fc 01       	movw	r30, r24
    4778:	82 81       	ldd	r24, Z+2	; 0x02
    477a:	93 81       	ldd	r25, Z+3	; 0x03
    477c:	0e 94 cf 4a 	call	0x959e	; 0x959e <_ZN10helicopter4util5Timer9stopTimerEv>
		
		delete [] msgPayload;
    4780:	8d 81       	ldd	r24, Y+5	; 0x05
    4782:	9e 81       	ldd	r25, Y+6	; 0x06
    4784:	00 97       	sbiw	r24, 0x00	; 0
    4786:	21 f0       	breq	.+8      	; 0x4790 <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE+0x1c2>
    4788:	8d 81       	ldd	r24, Y+5	; 0x05
    478a:	9e 81       	ldd	r25, Y+6	; 0x06
    478c:	0e 94 25 45 	call	0x8a4a	; 0x8a4a <_ZdaPv>
		msgPayload = NULL;
    4790:	1e 82       	std	Y+6, r1	; 0x06
    4792:	1d 82       	std	Y+5, r1	; 0x05
    4794:	0f b6       	in	r0, 0x3f	; 63
    4796:	f8 94       	cli
    4798:	de be       	out	0x3e, r13	; 62
    479a:	0f be       	out	0x3f, r0	; 63
    479c:	cd be       	out	0x3d, r12	; 61
	}
	
	return status;
    479e:	89 81       	ldd	r24, Y+1	; 0x01
    47a0:	9a 81       	ldd	r25, Y+2	; 0x02
}
    47a2:	0f b6       	in	r0, 0x3f	; 63
    47a4:	f8 94       	cli
    47a6:	fe be       	out	0x3e, r15	; 62
    47a8:	0f be       	out	0x3f, r0	; 63
    47aa:	ed be       	out	0x3d, r14	; 61
    47ac:	64 96       	adiw	r28, 0x14	; 20
    47ae:	0f b6       	in	r0, 0x3f	; 63
    47b0:	f8 94       	cli
    47b2:	de bf       	out	0x3e, r29	; 62
    47b4:	0f be       	out	0x3f, r0	; 63
    47b6:	cd bf       	out	0x3d, r28	; 61
    47b8:	df 91       	pop	r29
    47ba:	cf 91       	pop	r28
    47bc:	1f 91       	pop	r17
    47be:	0f 91       	pop	r16
    47c0:	ff 90       	pop	r15
    47c2:	ef 90       	pop	r14
    47c4:	df 90       	pop	r13
    47c6:	cf 90       	pop	r12
    47c8:	08 95       	ret

000047ca <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE>:
 * a lot of data is constantly received before that timeout, and none of the data
 * is a sync byte, then this method will never stop receiving bytes and will
 * lock up the rest of the system. 
 */
int GroundControlStationInterface::receive(Message * &receivedMessage)
{
    47ca:	cf 92       	push	r12
    47cc:	df 92       	push	r13
    47ce:	ef 92       	push	r14
    47d0:	ff 92       	push	r15
    47d2:	0f 93       	push	r16
    47d4:	1f 93       	push	r17
    47d6:	cf 93       	push	r28
    47d8:	df 93       	push	r29
    47da:	cd b7       	in	r28, 0x3d	; 61
    47dc:	de b7       	in	r29, 0x3e	; 62
    47de:	66 97       	sbiw	r28, 0x16	; 22
    47e0:	0f b6       	in	r0, 0x3f	; 63
    47e2:	f8 94       	cli
    47e4:	de bf       	out	0x3e, r29	; 62
    47e6:	0f be       	out	0x3f, r0	; 63
    47e8:	cd bf       	out	0x3d, r28	; 61
    47ea:	9c 8b       	std	Y+20, r25	; 0x14
    47ec:	8b 8b       	std	Y+19, r24	; 0x13
    47ee:	7e 8b       	std	Y+22, r23	; 0x16
    47f0:	6d 8b       	std	Y+21, r22	; 0x15
	}
	
	timer->stopTimer();
	
	return status;
    47f2:	ed b6       	in	r14, 0x3d	; 61
    47f4:	fe b6       	in	r15, 0x3e	; 62
 * is a sync byte, then this method will never stop receiving bytes and will
 * lock up the rest of the system. 
 */
int GroundControlStationInterface::receive(Message * &receivedMessage)
{
	int status = 0;
    47f6:	1a 82       	std	Y+2, r1	; 0x02
    47f8:	19 82       	std	Y+1, r1	; 0x01
	
    byte firstSyncByte = 0;
    47fa:	1b 82       	std	Y+3, r1	; 0x03
    byte secondSyncByte = 0;
    47fc:	1c 82       	std	Y+4, r1	; 0x04
    byte thirdSyncByte = 0;
    47fe:	1d 86       	std	Y+13, r1	; 0x0d
	
	if (enableTimeout)
    4800:	8b 89       	ldd	r24, Y+19	; 0x13
    4802:	9c 89       	ldd	r25, Y+20	; 0x14
    4804:	fc 01       	movw	r30, r24
    4806:	84 81       	ldd	r24, Z+4	; 0x04
    4808:	88 23       	and	r24, r24
    480a:	49 f1       	breq	.+82     	; 0x485e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x94>
	{
		timer->startTimer();
    480c:	8b 89       	ldd	r24, Y+19	; 0x13
    480e:	9c 89       	ldd	r25, Y+20	; 0x14
    4810:	fc 01       	movw	r30, r24
    4812:	82 81       	ldd	r24, Z+2	; 0x02
    4814:	93 81       	ldd	r25, Z+3	; 0x03
    4816:	0e 94 fb 49 	call	0x93f6	; 0x93f6 <_ZN10helicopter4util5Timer10startTimerEv>
	}

	//Read until the sync bytes are received or we time out.
	//Throw away any 'garbage' bytes.
	while(!(firstSyncByte == SyncByte1 && secondSyncByte == SyncByte2 && thirdSyncByte == SyncByte3) && status == 0)
    481a:	21 c0       	rjmp	.+66     	; 0x485e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x94>
	{
		firstSyncByte = secondSyncByte;
    481c:	8c 81       	ldd	r24, Y+4	; 0x04
    481e:	8b 83       	std	Y+3, r24	; 0x03
		secondSyncByte = thirdSyncByte;
    4820:	8d 85       	ldd	r24, Y+13	; 0x0d
    4822:	8c 83       	std	Y+4, r24	; 0x04
		status = serialDriver->receiveByte(thirdSyncByte, timer);
    4824:	8b 89       	ldd	r24, Y+19	; 0x13
    4826:	9c 89       	ldd	r25, Y+20	; 0x14
    4828:	fc 01       	movw	r30, r24
    482a:	80 81       	ld	r24, Z
    482c:	91 81       	ldd	r25, Z+1	; 0x01
    482e:	fc 01       	movw	r30, r24
    4830:	80 81       	ld	r24, Z
    4832:	91 81       	ldd	r25, Z+1	; 0x01
    4834:	08 96       	adiw	r24, 0x08	; 8
    4836:	fc 01       	movw	r30, r24
    4838:	20 81       	ld	r18, Z
    483a:	31 81       	ldd	r19, Z+1	; 0x01
    483c:	8b 89       	ldd	r24, Y+19	; 0x13
    483e:	9c 89       	ldd	r25, Y+20	; 0x14
    4840:	fc 01       	movw	r30, r24
    4842:	42 81       	ldd	r20, Z+2	; 0x02
    4844:	53 81       	ldd	r21, Z+3	; 0x03
    4846:	8b 89       	ldd	r24, Y+19	; 0x13
    4848:	9c 89       	ldd	r25, Y+20	; 0x14
    484a:	fc 01       	movw	r30, r24
    484c:	80 81       	ld	r24, Z
    484e:	91 81       	ldd	r25, Z+1	; 0x01
    4850:	be 01       	movw	r22, r28
    4852:	63 5f       	subi	r22, 0xF3	; 243
    4854:	7f 4f       	sbci	r23, 0xFF	; 255
    4856:	f9 01       	movw	r30, r18
    4858:	19 95       	eicall
    485a:	9a 83       	std	Y+2, r25	; 0x02
    485c:	89 83       	std	Y+1, r24	; 0x01
		timer->startTimer();
	}

	//Read until the sync bytes are received or we time out.
	//Throw away any 'garbage' bytes.
	while(!(firstSyncByte == SyncByte1 && secondSyncByte == SyncByte2 && thirdSyncByte == SyncByte3) && status == 0)
    485e:	8b 81       	ldd	r24, Y+3	; 0x03
    4860:	85 3b       	cpi	r24, 0xB5	; 181
    4862:	31 f4       	brne	.+12     	; 0x4870 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xa6>
    4864:	8c 81       	ldd	r24, Y+4	; 0x04
    4866:	82 36       	cpi	r24, 0x62	; 98
    4868:	19 f4       	brne	.+6      	; 0x4870 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xa6>
    486a:	8d 85       	ldd	r24, Y+13	; 0x0d
    486c:	87 3d       	cpi	r24, 0xD7	; 215
    486e:	31 f0       	breq	.+12     	; 0x487c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xb2>
    4870:	89 81       	ldd	r24, Y+1	; 0x01
    4872:	9a 81       	ldd	r25, Y+2	; 0x02
    4874:	00 97       	sbiw	r24, 0x00	; 0
    4876:	11 f4       	brne	.+4      	; 0x487c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xb2>
    4878:	81 e0       	ldi	r24, 0x01	; 1
    487a:	01 c0       	rjmp	.+2      	; 0x487e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xb4>
    487c:	80 e0       	ldi	r24, 0x00	; 0
    487e:	88 23       	and	r24, r24
    4880:	69 f6       	brne	.-102    	; 0x481c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x52>
		firstSyncByte = secondSyncByte;
		secondSyncByte = thirdSyncByte;
		status = serialDriver->receiveByte(thirdSyncByte, timer);
	}
	
	if (status == 0)
    4882:	89 81       	ldd	r24, Y+1	; 0x01
    4884:	9a 81       	ldd	r25, Y+2	; 0x02
    4886:	00 97       	sbiw	r24, 0x00	; 0
    4888:	09 f0       	breq	.+2      	; 0x488c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0xc2>
    488a:	09 c1       	rjmp	.+530    	; 0x4a9e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x2d4>
	{
		//once we have found a valid message, get the message ID
		byte msgType = 0;
    488c:	1e 86       	std	Y+14, r1	; 0x0e
		
		status = serialDriver->receiveByte(msgType, timer);
    488e:	8b 89       	ldd	r24, Y+19	; 0x13
    4890:	9c 89       	ldd	r25, Y+20	; 0x14
    4892:	fc 01       	movw	r30, r24
    4894:	80 81       	ld	r24, Z
    4896:	91 81       	ldd	r25, Z+1	; 0x01
    4898:	fc 01       	movw	r30, r24
    489a:	80 81       	ld	r24, Z
    489c:	91 81       	ldd	r25, Z+1	; 0x01
    489e:	08 96       	adiw	r24, 0x08	; 8
    48a0:	fc 01       	movw	r30, r24
    48a2:	20 81       	ld	r18, Z
    48a4:	31 81       	ldd	r19, Z+1	; 0x01
    48a6:	8b 89       	ldd	r24, Y+19	; 0x13
    48a8:	9c 89       	ldd	r25, Y+20	; 0x14
    48aa:	fc 01       	movw	r30, r24
    48ac:	42 81       	ldd	r20, Z+2	; 0x02
    48ae:	53 81       	ldd	r21, Z+3	; 0x03
    48b0:	8b 89       	ldd	r24, Y+19	; 0x13
    48b2:	9c 89       	ldd	r25, Y+20	; 0x14
    48b4:	fc 01       	movw	r30, r24
    48b6:	80 81       	ld	r24, Z
    48b8:	91 81       	ldd	r25, Z+1	; 0x01
    48ba:	be 01       	movw	r22, r28
    48bc:	62 5f       	subi	r22, 0xF2	; 242
    48be:	7f 4f       	sbci	r23, 0xFF	; 255
    48c0:	f9 01       	movw	r30, r18
    48c2:	19 95       	eicall
    48c4:	9a 83       	std	Y+2, r25	; 0x02
    48c6:	89 83       	std	Y+1, r24	; 0x01
		
		if (status == 0)
    48c8:	89 81       	ldd	r24, Y+1	; 0x01
    48ca:	9a 81       	ldd	r25, Y+2	; 0x02
    48cc:	00 97       	sbiw	r24, 0x00	; 0
    48ce:	09 f0       	breq	.+2      	; 0x48d2 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x108>
    48d0:	e6 c0       	rjmp	.+460    	; 0x4a9e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x2d4>
		{
			int msgSize = 0;
    48d2:	1e 82       	std	Y+6, r1	; 0x06
    48d4:	1d 82       	std	Y+5, r1	; 0x05
			
			switch(msgType)
    48d6:	8e 85       	ldd	r24, Y+14	; 0x0e
    48d8:	88 2f       	mov	r24, r24
    48da:	90 e0       	ldi	r25, 0x00	; 0
    48dc:	82 30       	cpi	r24, 0x02	; 2
    48de:	91 05       	cpc	r25, r1
    48e0:	29 f4       	brne	.+10     	; 0x48ec <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x122>
			{
				case SystemTelemetryMessage::MessageType:
					msgSize = SystemTelemetryMessage::MessageSize;
    48e2:	89 ee       	ldi	r24, 0xE9	; 233
    48e4:	90 e0       	ldi	r25, 0x00	; 0
    48e6:	9e 83       	std	Y+6, r25	; 0x06
    48e8:	8d 83       	std	Y+5, r24	; 0x05
					break;
    48ea:	05 c0       	rjmp	.+10     	; 0x48f6 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x12c>
				default:
					//unrecognized message type.
					status = -3;
    48ec:	8d ef       	ldi	r24, 0xFD	; 253
    48ee:	9f ef       	ldi	r25, 0xFF	; 255
    48f0:	9a 83       	std	Y+2, r25	; 0x02
    48f2:	89 83       	std	Y+1, r24	; 0x01
					break;
    48f4:	00 00       	nop
			}
			
			if (status == 0)
    48f6:	89 81       	ldd	r24, Y+1	; 0x01
    48f8:	9a 81       	ldd	r25, Y+2	; 0x02
    48fa:	00 97       	sbiw	r24, 0x00	; 0
    48fc:	09 f0       	breq	.+2      	; 0x4900 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x136>
    48fe:	cf c0       	rjmp	.+414    	; 0x4a9e <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x2d4>
    4900:	8d b7       	in	r24, 0x3d	; 61
    4902:	9e b7       	in	r25, 0x3e	; 62
    4904:	6c 01       	movw	r12, r24
			{
				byte messagePayload[msgSize];
    4906:	8d 81       	ldd	r24, Y+5	; 0x05
    4908:	9e 81       	ldd	r25, Y+6	; 0x06
    490a:	01 97       	sbiw	r24, 0x01	; 1
    490c:	9a 87       	std	Y+10, r25	; 0x0a
    490e:	89 87       	std	Y+9, r24	; 0x09
    4910:	01 96       	adiw	r24, 0x01	; 1
    4912:	2d b7       	in	r18, 0x3d	; 61
    4914:	3e b7       	in	r19, 0x3e	; 62
    4916:	28 1b       	sub	r18, r24
    4918:	39 0b       	sbc	r19, r25
    491a:	0f b6       	in	r0, 0x3f	; 63
    491c:	f8 94       	cli
    491e:	3e bf       	out	0x3e, r19	; 62
    4920:	0f be       	out	0x3f, r0	; 63
    4922:	2d bf       	out	0x3d, r18	; 61
    4924:	8d b7       	in	r24, 0x3d	; 61
    4926:	9e b7       	in	r25, 0x3e	; 62
    4928:	01 96       	adiw	r24, 0x01	; 1
    492a:	9c 87       	std	Y+12, r25	; 0x0c
    492c:	8b 87       	std	Y+11, r24	; 0x0b
							
				messagePayload[0] = msgType;
    492e:	2e 85       	ldd	r18, Y+14	; 0x0e
    4930:	8b 85       	ldd	r24, Y+11	; 0x0b
    4932:	9c 85       	ldd	r25, Y+12	; 0x0c
    4934:	fc 01       	movw	r30, r24
    4936:	20 83       	st	Z, r18
							
				//Read the bytes in the payload of the message.
				//skip the first position since thats where the message type is located.
				for (int i = 1; i < msgSize && status == 0; i++)
    4938:	81 e0       	ldi	r24, 0x01	; 1
    493a:	90 e0       	ldi	r25, 0x00	; 0
    493c:	98 87       	std	Y+8, r25	; 0x08
    493e:	8f 83       	std	Y+7, r24	; 0x07
    4940:	25 c0       	rjmp	.+74     	; 0x498c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1c2>
				{
					status = serialDriver->receiveByte(messagePayload[i], timer);
    4942:	8b 89       	ldd	r24, Y+19	; 0x13
    4944:	9c 89       	ldd	r25, Y+20	; 0x14
    4946:	fc 01       	movw	r30, r24
    4948:	80 81       	ld	r24, Z
    494a:	91 81       	ldd	r25, Z+1	; 0x01
    494c:	fc 01       	movw	r30, r24
    494e:	80 81       	ld	r24, Z
    4950:	91 81       	ldd	r25, Z+1	; 0x01
    4952:	08 96       	adiw	r24, 0x08	; 8
    4954:	fc 01       	movw	r30, r24
    4956:	20 81       	ld	r18, Z
    4958:	31 81       	ldd	r19, Z+1	; 0x01
    495a:	8b 89       	ldd	r24, Y+19	; 0x13
    495c:	9c 89       	ldd	r25, Y+20	; 0x14
    495e:	fc 01       	movw	r30, r24
    4960:	42 81       	ldd	r20, Z+2	; 0x02
    4962:	53 81       	ldd	r21, Z+3	; 0x03
    4964:	6b 85       	ldd	r22, Y+11	; 0x0b
    4966:	7c 85       	ldd	r23, Y+12	; 0x0c
    4968:	8f 81       	ldd	r24, Y+7	; 0x07
    496a:	98 85       	ldd	r25, Y+8	; 0x08
    496c:	68 0f       	add	r22, r24
    496e:	79 1f       	adc	r23, r25
    4970:	8b 89       	ldd	r24, Y+19	; 0x13
    4972:	9c 89       	ldd	r25, Y+20	; 0x14
    4974:	fc 01       	movw	r30, r24
    4976:	80 81       	ld	r24, Z
    4978:	91 81       	ldd	r25, Z+1	; 0x01
    497a:	f9 01       	movw	r30, r18
    497c:	19 95       	eicall
    497e:	9a 83       	std	Y+2, r25	; 0x02
    4980:	89 83       	std	Y+1, r24	; 0x01
							
				messagePayload[0] = msgType;
							
				//Read the bytes in the payload of the message.
				//skip the first position since thats where the message type is located.
				for (int i = 1; i < msgSize && status == 0; i++)
    4982:	8f 81       	ldd	r24, Y+7	; 0x07
    4984:	98 85       	ldd	r25, Y+8	; 0x08
    4986:	01 96       	adiw	r24, 0x01	; 1
    4988:	98 87       	std	Y+8, r25	; 0x08
    498a:	8f 83       	std	Y+7, r24	; 0x07
    498c:	2f 81       	ldd	r18, Y+7	; 0x07
    498e:	38 85       	ldd	r19, Y+8	; 0x08
    4990:	8d 81       	ldd	r24, Y+5	; 0x05
    4992:	9e 81       	ldd	r25, Y+6	; 0x06
    4994:	28 17       	cp	r18, r24
    4996:	39 07       	cpc	r19, r25
    4998:	34 f4       	brge	.+12     	; 0x49a6 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1dc>
    499a:	89 81       	ldd	r24, Y+1	; 0x01
    499c:	9a 81       	ldd	r25, Y+2	; 0x02
    499e:	00 97       	sbiw	r24, 0x00	; 0
    49a0:	11 f4       	brne	.+4      	; 0x49a6 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1dc>
    49a2:	81 e0       	ldi	r24, 0x01	; 1
    49a4:	01 c0       	rjmp	.+2      	; 0x49a8 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1de>
    49a6:	80 e0       	ldi	r24, 0x00	; 0
    49a8:	88 23       	and	r24, r24
    49aa:	59 f6       	brne	.-106    	; 0x4942 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x178>
				{
					status = serialDriver->receiveByte(messagePayload[i], timer);
				}
							
				if (status == 0)
    49ac:	89 81       	ldd	r24, Y+1	; 0x01
    49ae:	9a 81       	ldd	r25, Y+2	; 0x02
    49b0:	00 97       	sbiw	r24, 0x00	; 0
    49b2:	09 f0       	breq	.+2      	; 0x49b6 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x1ec>
    49b4:	6f c0       	rjmp	.+222    	; 0x4a94 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x2ca>
				{
					//Read the two checksum bytes
					byte messageChecksumA = 0;
    49b6:	1f 86       	std	Y+15, r1	; 0x0f
					byte messageChecksumB = 0;
    49b8:	18 8a       	std	Y+16, r1	; 0x10
					byte calculatedChecksumA = 0;
    49ba:	19 8a       	std	Y+17, r1	; 0x11
					byte calculatedChecksumB = 0;
    49bc:	1a 8a       	std	Y+18, r1	; 0x12
								
					status = serialDriver->receiveByte(messageChecksumA, timer);
    49be:	8b 89       	ldd	r24, Y+19	; 0x13
    49c0:	9c 89       	ldd	r25, Y+20	; 0x14
    49c2:	fc 01       	movw	r30, r24
    49c4:	80 81       	ld	r24, Z
    49c6:	91 81       	ldd	r25, Z+1	; 0x01
    49c8:	fc 01       	movw	r30, r24
    49ca:	80 81       	ld	r24, Z
    49cc:	91 81       	ldd	r25, Z+1	; 0x01
    49ce:	08 96       	adiw	r24, 0x08	; 8
    49d0:	fc 01       	movw	r30, r24
    49d2:	20 81       	ld	r18, Z
    49d4:	31 81       	ldd	r19, Z+1	; 0x01
    49d6:	8b 89       	ldd	r24, Y+19	; 0x13
    49d8:	9c 89       	ldd	r25, Y+20	; 0x14
    49da:	fc 01       	movw	r30, r24
    49dc:	42 81       	ldd	r20, Z+2	; 0x02
    49de:	53 81       	ldd	r21, Z+3	; 0x03
    49e0:	8b 89       	ldd	r24, Y+19	; 0x13
    49e2:	9c 89       	ldd	r25, Y+20	; 0x14
    49e4:	fc 01       	movw	r30, r24
    49e6:	80 81       	ld	r24, Z
    49e8:	91 81       	ldd	r25, Z+1	; 0x01
    49ea:	be 01       	movw	r22, r28
    49ec:	61 5f       	subi	r22, 0xF1	; 241
    49ee:	7f 4f       	sbci	r23, 0xFF	; 255
    49f0:	f9 01       	movw	r30, r18
    49f2:	19 95       	eicall
    49f4:	9a 83       	std	Y+2, r25	; 0x02
    49f6:	89 83       	std	Y+1, r24	; 0x01
					status = serialDriver->receiveByte(messageChecksumB, timer);
    49f8:	8b 89       	ldd	r24, Y+19	; 0x13
    49fa:	9c 89       	ldd	r25, Y+20	; 0x14
    49fc:	fc 01       	movw	r30, r24
    49fe:	80 81       	ld	r24, Z
    4a00:	91 81       	ldd	r25, Z+1	; 0x01
    4a02:	fc 01       	movw	r30, r24
    4a04:	80 81       	ld	r24, Z
    4a06:	91 81       	ldd	r25, Z+1	; 0x01
    4a08:	08 96       	adiw	r24, 0x08	; 8
    4a0a:	fc 01       	movw	r30, r24
    4a0c:	20 81       	ld	r18, Z
    4a0e:	31 81       	ldd	r19, Z+1	; 0x01
    4a10:	8b 89       	ldd	r24, Y+19	; 0x13
    4a12:	9c 89       	ldd	r25, Y+20	; 0x14
    4a14:	fc 01       	movw	r30, r24
    4a16:	42 81       	ldd	r20, Z+2	; 0x02
    4a18:	53 81       	ldd	r21, Z+3	; 0x03
    4a1a:	8b 89       	ldd	r24, Y+19	; 0x13
    4a1c:	9c 89       	ldd	r25, Y+20	; 0x14
    4a1e:	fc 01       	movw	r30, r24
    4a20:	80 81       	ld	r24, Z
    4a22:	91 81       	ldd	r25, Z+1	; 0x01
    4a24:	be 01       	movw	r22, r28
    4a26:	60 5f       	subi	r22, 0xF0	; 240
    4a28:	7f 4f       	sbci	r23, 0xFF	; 255
    4a2a:	f9 01       	movw	r30, r18
    4a2c:	19 95       	eicall
    4a2e:	9a 83       	std	Y+2, r25	; 0x02
    4a30:	89 83       	std	Y+1, r24	; 0x01
								
					//Generate checksum for the message			
					calculateChecksum(messagePayload, msgSize, calculatedChecksumA, calculatedChecksumB);
    4a32:	6b 85       	ldd	r22, Y+11	; 0x0b
    4a34:	7c 85       	ldd	r23, Y+12	; 0x0c
    4a36:	fe 01       	movw	r30, r28
    4a38:	72 96       	adiw	r30, 0x12	; 18
    4a3a:	9e 01       	movw	r18, r28
    4a3c:	2f 5e       	subi	r18, 0xEF	; 239
    4a3e:	3f 4f       	sbci	r19, 0xFF	; 255
    4a40:	4d 81       	ldd	r20, Y+5	; 0x05
    4a42:	5e 81       	ldd	r21, Y+6	; 0x06
    4a44:	8b 89       	ldd	r24, Y+19	; 0x13
    4a46:	9c 89       	ldd	r25, Y+20	; 0x14
    4a48:	8f 01       	movw	r16, r30
    4a4a:	0e 94 92 22 	call	0x4524	; 0x4524 <_ZN10helicopter10interfaces29GroundControlStationInterface17calculateChecksumEPhiRhS3_>
								
					//verify that the checksum is correct
					if (calculatedChecksumA == messageChecksumA && calculatedChecksumB == messageChecksumB)
    4a4e:	99 89       	ldd	r25, Y+17	; 0x11
    4a50:	8f 85       	ldd	r24, Y+15	; 0x0f
    4a52:	98 17       	cp	r25, r24
    4a54:	d9 f4       	brne	.+54     	; 0x4a8c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x2c2>
    4a56:	9a 89       	ldd	r25, Y+18	; 0x12
    4a58:	88 89       	ldd	r24, Y+16	; 0x10
    4a5a:	98 17       	cp	r25, r24
    4a5c:	b9 f4       	brne	.+46     	; 0x4a8c <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x2c2>
					{
						//build the message
						switch(msgType)
    4a5e:	8e 85       	ldd	r24, Y+14	; 0x0e
    4a60:	88 2f       	mov	r24, r24
    4a62:	90 e0       	ldi	r25, 0x00	; 0
    4a64:	82 30       	cpi	r24, 0x02	; 2
    4a66:	91 05       	cpc	r25, r1
    4a68:	59 f4       	brne	.+22     	; 0x4a80 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x2b6>
						{
							case SystemTelemetryMessage::MessageType:
								receivedMessage = SystemTelemetryMessage::buildMessageSt(messagePayload);
    4a6a:	8b 85       	ldd	r24, Y+11	; 0x0b
    4a6c:	9c 85       	ldd	r25, Y+12	; 0x0c
    4a6e:	0e 94 99 36 	call	0x6d32	; 0x6d32 <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh>
    4a72:	9c 01       	movw	r18, r24
    4a74:	8d 89       	ldd	r24, Y+21	; 0x15
    4a76:	9e 89       	ldd	r25, Y+22	; 0x16
    4a78:	fc 01       	movw	r30, r24
    4a7a:	31 83       	std	Z+1, r19	; 0x01
    4a7c:	20 83       	st	Z, r18
							break;
    4a7e:	05 c0       	rjmp	.+10     	; 0x4a8a <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x2c0>
							default:
								//unrecognized message type.
								status = -3;
    4a80:	8d ef       	ldi	r24, 0xFD	; 253
    4a82:	9f ef       	ldi	r25, 0xFF	; 255
    4a84:	9a 83       	std	Y+2, r25	; 0x02
    4a86:	89 83       	std	Y+1, r24	; 0x01
							break;
    4a88:	00 00       	nop
								
					//verify that the checksum is correct
					if (calculatedChecksumA == messageChecksumA && calculatedChecksumB == messageChecksumB)
					{
						//build the message
						switch(msgType)
    4a8a:	04 c0       	rjmp	.+8      	; 0x4a94 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x2ca>
							break;
						}
					}else
					{
						//checksum mismatch
						status = -4;
    4a8c:	8c ef       	ldi	r24, 0xFC	; 252
    4a8e:	9f ef       	ldi	r25, 0xFF	; 255
    4a90:	9a 83       	std	Y+2, r25	; 0x02
    4a92:	89 83       	std	Y+1, r24	; 0x01
    4a94:	0f b6       	in	r0, 0x3f	; 63
    4a96:	f8 94       	cli
    4a98:	de be       	out	0x3e, r13	; 62
    4a9a:	0f be       	out	0x3f, r0	; 63
    4a9c:	cd be       	out	0x3d, r12	; 61
				}
			}
		}
	}
	
	if (status != 0)
    4a9e:	89 81       	ldd	r24, Y+1	; 0x01
    4aa0:	9a 81       	ldd	r25, Y+2	; 0x02
    4aa2:	00 97       	sbiw	r24, 0x00	; 0
    4aa4:	29 f0       	breq	.+10     	; 0x4ab0 <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE+0x2e6>
	{
		receivedMessage = NULL;
    4aa6:	8d 89       	ldd	r24, Y+21	; 0x15
    4aa8:	9e 89       	ldd	r25, Y+22	; 0x16
    4aaa:	fc 01       	movw	r30, r24
    4aac:	11 82       	std	Z+1, r1	; 0x01
    4aae:	10 82       	st	Z, r1
	}
	
	timer->stopTimer();
    4ab0:	8b 89       	ldd	r24, Y+19	; 0x13
    4ab2:	9c 89       	ldd	r25, Y+20	; 0x14
    4ab4:	fc 01       	movw	r30, r24
    4ab6:	82 81       	ldd	r24, Z+2	; 0x02
    4ab8:	93 81       	ldd	r25, Z+3	; 0x03
    4aba:	0e 94 cf 4a 	call	0x959e	; 0x959e <_ZN10helicopter4util5Timer9stopTimerEv>
	
	return status;
    4abe:	89 81       	ldd	r24, Y+1	; 0x01
    4ac0:	9a 81       	ldd	r25, Y+2	; 0x02
    4ac2:	0f b6       	in	r0, 0x3f	; 63
    4ac4:	f8 94       	cli
    4ac6:	fe be       	out	0x3e, r15	; 62
    4ac8:	0f be       	out	0x3f, r0	; 63
    4aca:	ed be       	out	0x3d, r14	; 61
    4acc:	66 96       	adiw	r28, 0x16	; 22
    4ace:	0f b6       	in	r0, 0x3f	; 63
    4ad0:	f8 94       	cli
    4ad2:	de bf       	out	0x3e, r29	; 62
    4ad4:	0f be       	out	0x3f, r0	; 63
    4ad6:	cd bf       	out	0x3d, r28	; 61
    4ad8:	df 91       	pop	r29
    4ada:	cf 91       	pop	r28
    4adc:	1f 91       	pop	r17
    4ade:	0f 91       	pop	r16
    4ae0:	ff 90       	pop	r15
    4ae2:	ef 90       	pop	r14
    4ae4:	df 90       	pop	r13
    4ae6:	cf 90       	pop	r12
    4ae8:	08 95       	ret

00004aea <_ZN10helicopter5model11SystemModel16OperationalStateENS1_14OperatingStateE>:
			/*
			float **  EcefToLocalNEDRotationMatrix() const {return ecefToLocalNEDRotationMatrix;}
			void EcefToLocalNEDRotationMatrix( long val ) { ecefToLocalNEDRotationMatrix = val;}*/
				
			OperatingState  OperationalState() const {return operationalState;}
			void OperationalState( OperatingState val ) { operationalState = val;}
    4aea:	cf 93       	push	r28
    4aec:	df 93       	push	r29
    4aee:	00 d0       	rcall	.+0      	; 0x4af0 <_ZN10helicopter5model11SystemModel16OperationalStateENS1_14OperatingStateE+0x6>
    4af0:	cd b7       	in	r28, 0x3d	; 61
    4af2:	de b7       	in	r29, 0x3e	; 62
    4af4:	9a 83       	std	Y+2, r25	; 0x02
    4af6:	89 83       	std	Y+1, r24	; 0x01
    4af8:	6b 83       	std	Y+3, r22	; 0x03
    4afa:	89 81       	ldd	r24, Y+1	; 0x01
    4afc:	9a 81       	ldd	r25, Y+2	; 0x02
    4afe:	2b 81       	ldd	r18, Y+3	; 0x03
    4b00:	fc 01       	movw	r30, r24
    4b02:	20 83       	st	Z, r18
    4b04:	0f 90       	pop	r0
    4b06:	0f 90       	pop	r0
    4b08:	0f 90       	pop	r0
    4b0a:	df 91       	pop	r29
    4b0c:	cf 91       	pop	r28
    4b0e:	08 95       	ret

00004b10 <_ZN10helicopter10interfaces24RadioControllerInterfaceC1Ev>:
				 */
				float servoChannelValues[MAX_CHANNELS];

				static RadioControllerInterface *radioControllerInterface;
			
				RadioControllerInterface():
    4b10:	cf 93       	push	r28
    4b12:	df 93       	push	r29
    4b14:	1f 92       	push	r1
    4b16:	1f 92       	push	r1
    4b18:	cd b7       	in	r28, 0x3d	; 61
    4b1a:	de b7       	in	r29, 0x3e	; 62
    4b1c:	9a 83       	std	Y+2, r25	; 0x02
    4b1e:	89 83       	std	Y+1, r24	; 0x01
				systemModel (NULL)
    4b20:	89 81       	ldd	r24, Y+1	; 0x01
    4b22:	9a 81       	ldd	r25, Y+2	; 0x02
    4b24:	fc 01       	movw	r30, r24
    4b26:	17 82       	std	Z+7, r1	; 0x07
    4b28:	16 82       	std	Z+6, r1	; 0x06
				{
					memset(servoChannelValues, 0, sizeof(servoChannelValues));
    4b2a:	89 81       	ldd	r24, Y+1	; 0x01
    4b2c:	9a 81       	ldd	r25, Y+2	; 0x02
    4b2e:	08 96       	adiw	r24, 0x08	; 8
    4b30:	40 e2       	ldi	r20, 0x20	; 32
    4b32:	50 e0       	ldi	r21, 0x00	; 0
    4b34:	60 e0       	ldi	r22, 0x00	; 0
    4b36:	70 e0       	ldi	r23, 0x00	; 0
    4b38:	0e 94 dc 50 	call	0xa1b8	; 0xa1b8 <memset>
					
					previousInputCaptureRegisterValue = 0;
    4b3c:	89 81       	ldd	r24, Y+1	; 0x01
    4b3e:	9a 81       	ldd	r25, Y+2	; 0x02
    4b40:	fc 01       	movw	r30, r24
    4b42:	10 82       	st	Z, r1
    4b44:	11 82       	std	Z+1, r1	; 0x01
    4b46:	12 82       	std	Z+2, r1	; 0x02
    4b48:	13 82       	std	Z+3, r1	; 0x03
					
					servoChannelIndex = 0;
    4b4a:	89 81       	ldd	r24, Y+1	; 0x01
    4b4c:	9a 81       	ldd	r25, Y+2	; 0x02
    4b4e:	fc 01       	movw	r30, r24
    4b50:	15 82       	std	Z+5, r1	; 0x05
    4b52:	14 82       	std	Z+4, r1	; 0x04
				}
    4b54:	0f 90       	pop	r0
    4b56:	0f 90       	pop	r0
    4b58:	df 91       	pop	r29
    4b5a:	cf 91       	pop	r28
    4b5c:	08 95       	ret

00004b5e <_ZNK10helicopter10interfaces24RadioControllerInterface33PreviousInputCaptureRegisterValueEv>:
				 * the scope of this class, so the handlers need a static reference to
				 * this class.
				 */
				static RadioControllerInterface  *getRadioControllerInterface();
				
				long PreviousInputCaptureRegisterValue() const { return previousInputCaptureRegisterValue; }
    4b5e:	cf 93       	push	r28
    4b60:	df 93       	push	r29
    4b62:	1f 92       	push	r1
    4b64:	1f 92       	push	r1
    4b66:	cd b7       	in	r28, 0x3d	; 61
    4b68:	de b7       	in	r29, 0x3e	; 62
    4b6a:	9a 83       	std	Y+2, r25	; 0x02
    4b6c:	89 83       	std	Y+1, r24	; 0x01
    4b6e:	89 81       	ldd	r24, Y+1	; 0x01
    4b70:	9a 81       	ldd	r25, Y+2	; 0x02
    4b72:	fc 01       	movw	r30, r24
    4b74:	80 81       	ld	r24, Z
    4b76:	91 81       	ldd	r25, Z+1	; 0x01
    4b78:	a2 81       	ldd	r26, Z+2	; 0x02
    4b7a:	b3 81       	ldd	r27, Z+3	; 0x03
    4b7c:	bc 01       	movw	r22, r24
    4b7e:	cd 01       	movw	r24, r26
    4b80:	0f 90       	pop	r0
    4b82:	0f 90       	pop	r0
    4b84:	df 91       	pop	r29
    4b86:	cf 91       	pop	r28
    4b88:	08 95       	ret

00004b8a <_ZN10helicopter10interfaces24RadioControllerInterface33PreviousInputCaptureRegisterValueEl>:
				void PreviousInputCaptureRegisterValue(long val) { previousInputCaptureRegisterValue = val; }
    4b8a:	cf 93       	push	r28
    4b8c:	df 93       	push	r29
    4b8e:	00 d0       	rcall	.+0      	; 0x4b90 <_ZN10helicopter10interfaces24RadioControllerInterface33PreviousInputCaptureRegisterValueEl+0x6>
    4b90:	00 d0       	rcall	.+0      	; 0x4b92 <_ZN10helicopter10interfaces24RadioControllerInterface33PreviousInputCaptureRegisterValueEl+0x8>
    4b92:	cd b7       	in	r28, 0x3d	; 61
    4b94:	de b7       	in	r29, 0x3e	; 62
    4b96:	9a 83       	std	Y+2, r25	; 0x02
    4b98:	89 83       	std	Y+1, r24	; 0x01
    4b9a:	4b 83       	std	Y+3, r20	; 0x03
    4b9c:	5c 83       	std	Y+4, r21	; 0x04
    4b9e:	6d 83       	std	Y+5, r22	; 0x05
    4ba0:	7e 83       	std	Y+6, r23	; 0x06
    4ba2:	29 81       	ldd	r18, Y+1	; 0x01
    4ba4:	3a 81       	ldd	r19, Y+2	; 0x02
    4ba6:	8b 81       	ldd	r24, Y+3	; 0x03
    4ba8:	9c 81       	ldd	r25, Y+4	; 0x04
    4baa:	ad 81       	ldd	r26, Y+5	; 0x05
    4bac:	be 81       	ldd	r27, Y+6	; 0x06
    4bae:	f9 01       	movw	r30, r18
    4bb0:	80 83       	st	Z, r24
    4bb2:	91 83       	std	Z+1, r25	; 0x01
    4bb4:	a2 83       	std	Z+2, r26	; 0x02
    4bb6:	b3 83       	std	Z+3, r27	; 0x03
    4bb8:	26 96       	adiw	r28, 0x06	; 6
    4bba:	0f b6       	in	r0, 0x3f	; 63
    4bbc:	f8 94       	cli
    4bbe:	de bf       	out	0x3e, r29	; 62
    4bc0:	0f be       	out	0x3f, r0	; 63
    4bc2:	cd bf       	out	0x3d, r28	; 61
    4bc4:	df 91       	pop	r29
    4bc6:	cf 91       	pop	r28
    4bc8:	08 95       	ret

00004bca <_ZNK10helicopter10interfaces24RadioControllerInterface17ServoChannelIndexEv>:
					
				int ServoChannelIndex() const { return servoChannelIndex; }
    4bca:	cf 93       	push	r28
    4bcc:	df 93       	push	r29
    4bce:	1f 92       	push	r1
    4bd0:	1f 92       	push	r1
    4bd2:	cd b7       	in	r28, 0x3d	; 61
    4bd4:	de b7       	in	r29, 0x3e	; 62
    4bd6:	9a 83       	std	Y+2, r25	; 0x02
    4bd8:	89 83       	std	Y+1, r24	; 0x01
    4bda:	89 81       	ldd	r24, Y+1	; 0x01
    4bdc:	9a 81       	ldd	r25, Y+2	; 0x02
    4bde:	fc 01       	movw	r30, r24
    4be0:	84 81       	ldd	r24, Z+4	; 0x04
    4be2:	95 81       	ldd	r25, Z+5	; 0x05
    4be4:	0f 90       	pop	r0
    4be6:	0f 90       	pop	r0
    4be8:	df 91       	pop	r29
    4bea:	cf 91       	pop	r28
    4bec:	08 95       	ret

00004bee <_ZN10helicopter10interfaces24RadioControllerInterface17ServoChannelIndexEi>:
				void ServoChannelIndex(int val) { servoChannelIndex = val; }
    4bee:	cf 93       	push	r28
    4bf0:	df 93       	push	r29
    4bf2:	00 d0       	rcall	.+0      	; 0x4bf4 <_ZN10helicopter10interfaces24RadioControllerInterface17ServoChannelIndexEi+0x6>
    4bf4:	1f 92       	push	r1
    4bf6:	cd b7       	in	r28, 0x3d	; 61
    4bf8:	de b7       	in	r29, 0x3e	; 62
    4bfa:	9a 83       	std	Y+2, r25	; 0x02
    4bfc:	89 83       	std	Y+1, r24	; 0x01
    4bfe:	7c 83       	std	Y+4, r23	; 0x04
    4c00:	6b 83       	std	Y+3, r22	; 0x03
    4c02:	89 81       	ldd	r24, Y+1	; 0x01
    4c04:	9a 81       	ldd	r25, Y+2	; 0x02
    4c06:	2b 81       	ldd	r18, Y+3	; 0x03
    4c08:	3c 81       	ldd	r19, Y+4	; 0x04
    4c0a:	fc 01       	movw	r30, r24
    4c0c:	35 83       	std	Z+5, r19	; 0x05
    4c0e:	24 83       	std	Z+4, r18	; 0x04
    4c10:	0f 90       	pop	r0
    4c12:	0f 90       	pop	r0
    4c14:	0f 90       	pop	r0
    4c16:	0f 90       	pop	r0
    4c18:	df 91       	pop	r29
    4c1a:	cf 91       	pop	r28
    4c1c:	08 95       	ret

00004c1e <_ZNK10helicopter10interfaces24RadioControllerInterface14GetSystemModelEv>:
					
				SystemModel * GetSystemModel() const { return systemModel; }
    4c1e:	cf 93       	push	r28
    4c20:	df 93       	push	r29
    4c22:	1f 92       	push	r1
    4c24:	1f 92       	push	r1
    4c26:	cd b7       	in	r28, 0x3d	; 61
    4c28:	de b7       	in	r29, 0x3e	; 62
    4c2a:	9a 83       	std	Y+2, r25	; 0x02
    4c2c:	89 83       	std	Y+1, r24	; 0x01
    4c2e:	89 81       	ldd	r24, Y+1	; 0x01
    4c30:	9a 81       	ldd	r25, Y+2	; 0x02
    4c32:	fc 01       	movw	r30, r24
    4c34:	86 81       	ldd	r24, Z+6	; 0x06
    4c36:	97 81       	ldd	r25, Z+7	; 0x07
    4c38:	0f 90       	pop	r0
    4c3a:	0f 90       	pop	r0
    4c3c:	df 91       	pop	r29
    4c3e:	cf 91       	pop	r28
    4c40:	08 95       	ret

00004c42 <_ZN10helicopter10interfaces24RadioControllerInterface20SetServoChannelValueEif>:
				void SetSystemModel(SystemModel *val) { systemModel = val; }		
					
				void SetServoChannelValue(int index, float value) 
    4c42:	cf 93       	push	r28
    4c44:	df 93       	push	r29
    4c46:	cd b7       	in	r28, 0x3d	; 61
    4c48:	de b7       	in	r29, 0x3e	; 62
    4c4a:	28 97       	sbiw	r28, 0x08	; 8
    4c4c:	0f b6       	in	r0, 0x3f	; 63
    4c4e:	f8 94       	cli
    4c50:	de bf       	out	0x3e, r29	; 62
    4c52:	0f be       	out	0x3f, r0	; 63
    4c54:	cd bf       	out	0x3d, r28	; 61
    4c56:	9a 83       	std	Y+2, r25	; 0x02
    4c58:	89 83       	std	Y+1, r24	; 0x01
    4c5a:	7c 83       	std	Y+4, r23	; 0x04
    4c5c:	6b 83       	std	Y+3, r22	; 0x03
    4c5e:	2d 83       	std	Y+5, r18	; 0x05
    4c60:	3e 83       	std	Y+6, r19	; 0x06
    4c62:	4f 83       	std	Y+7, r20	; 0x07
    4c64:	58 87       	std	Y+8, r21	; 0x08
				{ 
					if (index < MAX_CHANNELS)
    4c66:	8b 81       	ldd	r24, Y+3	; 0x03
    4c68:	9c 81       	ldd	r25, Y+4	; 0x04
    4c6a:	88 30       	cpi	r24, 0x08	; 8
    4c6c:	91 05       	cpc	r25, r1
    4c6e:	a4 f4       	brge	.+40     	; 0x4c98 <_ZN10helicopter10interfaces24RadioControllerInterface20SetServoChannelValueEif+0x56>
					{
						servoChannelValues[index] = value;
    4c70:	29 81       	ldd	r18, Y+1	; 0x01
    4c72:	3a 81       	ldd	r19, Y+2	; 0x02
    4c74:	8b 81       	ldd	r24, Y+3	; 0x03
    4c76:	9c 81       	ldd	r25, Y+4	; 0x04
    4c78:	02 96       	adiw	r24, 0x02	; 2
    4c7a:	88 0f       	add	r24, r24
    4c7c:	99 1f       	adc	r25, r25
    4c7e:	88 0f       	add	r24, r24
    4c80:	99 1f       	adc	r25, r25
    4c82:	28 0f       	add	r18, r24
    4c84:	39 1f       	adc	r19, r25
    4c86:	8d 81       	ldd	r24, Y+5	; 0x05
    4c88:	9e 81       	ldd	r25, Y+6	; 0x06
    4c8a:	af 81       	ldd	r26, Y+7	; 0x07
    4c8c:	b8 85       	ldd	r27, Y+8	; 0x08
    4c8e:	f9 01       	movw	r30, r18
    4c90:	80 83       	st	Z, r24
    4c92:	91 83       	std	Z+1, r25	; 0x01
    4c94:	a2 83       	std	Z+2, r26	; 0x02
    4c96:	b3 83       	std	Z+3, r27	; 0x03
					}
				}		
    4c98:	28 96       	adiw	r28, 0x08	; 8
    4c9a:	0f b6       	in	r0, 0x3f	; 63
    4c9c:	f8 94       	cli
    4c9e:	de bf       	out	0x3e, r29	; 62
    4ca0:	0f be       	out	0x3f, r0	; 63
    4ca2:	cd bf       	out	0x3d, r28	; 61
    4ca4:	df 91       	pop	r29
    4ca6:	cf 91       	pop	r28
    4ca8:	08 95       	ret

00004caa <_ZNK10helicopter10interfaces24RadioControllerInterface20GetServoChannelValueEi>:
				
				float GetServoChannelValue(int index) const
    4caa:	cf 93       	push	r28
    4cac:	df 93       	push	r29
    4cae:	00 d0       	rcall	.+0      	; 0x4cb0 <_ZNK10helicopter10interfaces24RadioControllerInterface20GetServoChannelValueEi+0x6>
    4cb0:	1f 92       	push	r1
    4cb2:	cd b7       	in	r28, 0x3d	; 61
    4cb4:	de b7       	in	r29, 0x3e	; 62
    4cb6:	9a 83       	std	Y+2, r25	; 0x02
    4cb8:	89 83       	std	Y+1, r24	; 0x01
    4cba:	7c 83       	std	Y+4, r23	; 0x04
    4cbc:	6b 83       	std	Y+3, r22	; 0x03
				{
					if (index < MAX_CHANNELS)
    4cbe:	8b 81       	ldd	r24, Y+3	; 0x03
    4cc0:	9c 81       	ldd	r25, Y+4	; 0x04
    4cc2:	88 30       	cpi	r24, 0x08	; 8
    4cc4:	91 05       	cpc	r25, r1
    4cc6:	8c f4       	brge	.+34     	; 0x4cea <_ZNK10helicopter10interfaces24RadioControllerInterface20GetServoChannelValueEi+0x40>
					{
						return servoChannelValues[index];
    4cc8:	29 81       	ldd	r18, Y+1	; 0x01
    4cca:	3a 81       	ldd	r19, Y+2	; 0x02
    4ccc:	8b 81       	ldd	r24, Y+3	; 0x03
    4cce:	9c 81       	ldd	r25, Y+4	; 0x04
    4cd0:	02 96       	adiw	r24, 0x02	; 2
    4cd2:	88 0f       	add	r24, r24
    4cd4:	99 1f       	adc	r25, r25
    4cd6:	88 0f       	add	r24, r24
    4cd8:	99 1f       	adc	r25, r25
    4cda:	82 0f       	add	r24, r18
    4cdc:	93 1f       	adc	r25, r19
    4cde:	fc 01       	movw	r30, r24
    4ce0:	80 81       	ld	r24, Z
    4ce2:	91 81       	ldd	r25, Z+1	; 0x01
    4ce4:	a2 81       	ldd	r26, Z+2	; 0x02
    4ce6:	b3 81       	ldd	r27, Z+3	; 0x03
    4ce8:	03 c0       	rjmp	.+6      	; 0x4cf0 <_ZNK10helicopter10interfaces24RadioControllerInterface20GetServoChannelValueEi+0x46>
					}else
					{
						return 0;
    4cea:	80 e0       	ldi	r24, 0x00	; 0
    4cec:	90 e0       	ldi	r25, 0x00	; 0
    4cee:	dc 01       	movw	r26, r24
					}
				}						
    4cf0:	bc 01       	movw	r22, r24
    4cf2:	cd 01       	movw	r24, r26
    4cf4:	0f 90       	pop	r0
    4cf6:	0f 90       	pop	r0
    4cf8:	0f 90       	pop	r0
    4cfa:	0f 90       	pop	r0
    4cfc:	df 91       	pop	r29
    4cfe:	cf 91       	pop	r28
    4d00:	08 95       	ret

00004d02 <_Z10ScaleValuei>:

RadioControllerInterface* RadioControllerInterface::radioControllerInterface = NULL;


float ScaleValue(int servoChannelPulseWidth) 
{
    4d02:	cf 93       	push	r28
    4d04:	df 93       	push	r29
    4d06:	00 d0       	rcall	.+0      	; 0x4d08 <_Z10ScaleValuei+0x6>
    4d08:	00 d0       	rcall	.+0      	; 0x4d0a <_Z10ScaleValuei+0x8>
    4d0a:	cd b7       	in	r28, 0x3d	; 61
    4d0c:	de b7       	in	r29, 0x3e	; 62
    4d0e:	9e 83       	std	Y+6, r25	; 0x06
    4d10:	8d 83       	std	Y+5, r24	; 0x05
	float scaledValue = (1.0f - -1.0f) / (4000.0f - 2000.0f) * (servoChannelPulseWidth - 2000.0f) + -1.0f;
    4d12:	8d 81       	ldd	r24, Y+5	; 0x05
    4d14:	9e 81       	ldd	r25, Y+6	; 0x06
    4d16:	aa 27       	eor	r26, r26
    4d18:	97 fd       	sbrc	r25, 7
    4d1a:	a0 95       	com	r26
    4d1c:	ba 2f       	mov	r27, r26
    4d1e:	bc 01       	movw	r22, r24
    4d20:	cd 01       	movw	r24, r26
    4d22:	0e 94 f5 4b 	call	0x97ea	; 0x97ea <__floatsisf>
    4d26:	dc 01       	movw	r26, r24
    4d28:	cb 01       	movw	r24, r22
    4d2a:	20 e0       	ldi	r18, 0x00	; 0
    4d2c:	30 e0       	ldi	r19, 0x00	; 0
    4d2e:	4a ef       	ldi	r20, 0xFA	; 250
    4d30:	54 e4       	ldi	r21, 0x44	; 68
    4d32:	bc 01       	movw	r22, r24
    4d34:	cd 01       	movw	r24, r26
    4d36:	0e 94 ee 4a 	call	0x95dc	; 0x95dc <__subsf3>
    4d3a:	dc 01       	movw	r26, r24
    4d3c:	cb 01       	movw	r24, r22
    4d3e:	2f e6       	ldi	r18, 0x6F	; 111
    4d40:	32 e1       	ldi	r19, 0x12	; 18
    4d42:	43 e8       	ldi	r20, 0x83	; 131
    4d44:	5a e3       	ldi	r21, 0x3A	; 58
    4d46:	bc 01       	movw	r22, r24
    4d48:	cd 01       	movw	r24, r26
    4d4a:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    4d4e:	dc 01       	movw	r26, r24
    4d50:	cb 01       	movw	r24, r22
    4d52:	20 e0       	ldi	r18, 0x00	; 0
    4d54:	30 e0       	ldi	r19, 0x00	; 0
    4d56:	40 e8       	ldi	r20, 0x80	; 128
    4d58:	5f e3       	ldi	r21, 0x3F	; 63
    4d5a:	bc 01       	movw	r22, r24
    4d5c:	cd 01       	movw	r24, r26
    4d5e:	0e 94 ee 4a 	call	0x95dc	; 0x95dc <__subsf3>
    4d62:	dc 01       	movw	r26, r24
    4d64:	cb 01       	movw	r24, r22
    4d66:	89 83       	std	Y+1, r24	; 0x01
    4d68:	9a 83       	std	Y+2, r25	; 0x02
    4d6a:	ab 83       	std	Y+3, r26	; 0x03
    4d6c:	bc 83       	std	Y+4, r27	; 0x04
			
	if (scaledValue > 1.0f)
    4d6e:	20 e0       	ldi	r18, 0x00	; 0
    4d70:	30 e0       	ldi	r19, 0x00	; 0
    4d72:	40 e8       	ldi	r20, 0x80	; 128
    4d74:	5f e3       	ldi	r21, 0x3F	; 63
    4d76:	69 81       	ldd	r22, Y+1	; 0x01
    4d78:	7a 81       	ldd	r23, Y+2	; 0x02
    4d7a:	8b 81       	ldd	r24, Y+3	; 0x03
    4d7c:	9c 81       	ldd	r25, Y+4	; 0x04
    4d7e:	0e 94 31 4d 	call	0x9a62	; 0x9a62 <__gesf2>
    4d82:	18 16       	cp	r1, r24
    4d84:	4c f4       	brge	.+18     	; 0x4d98 <_Z10ScaleValuei+0x96>
	{
		scaledValue = 1.0f;
    4d86:	80 e0       	ldi	r24, 0x00	; 0
    4d88:	90 e0       	ldi	r25, 0x00	; 0
    4d8a:	a0 e8       	ldi	r26, 0x80	; 128
    4d8c:	bf e3       	ldi	r27, 0x3F	; 63
    4d8e:	89 83       	std	Y+1, r24	; 0x01
    4d90:	9a 83       	std	Y+2, r25	; 0x02
    4d92:	ab 83       	std	Y+3, r26	; 0x03
    4d94:	bc 83       	std	Y+4, r27	; 0x04
    4d96:	14 c0       	rjmp	.+40     	; 0x4dc0 <_Z10ScaleValuei+0xbe>
	}else if (scaledValue < -1.0f)
    4d98:	20 e0       	ldi	r18, 0x00	; 0
    4d9a:	30 e0       	ldi	r19, 0x00	; 0
    4d9c:	40 e8       	ldi	r20, 0x80	; 128
    4d9e:	5f eb       	ldi	r21, 0xBF	; 191
    4da0:	69 81       	ldd	r22, Y+1	; 0x01
    4da2:	7a 81       	ldd	r23, Y+2	; 0x02
    4da4:	8b 81       	ldd	r24, Y+3	; 0x03
    4da6:	9c 81       	ldd	r25, Y+4	; 0x04
    4da8:	0e 94 53 4b 	call	0x96a6	; 0x96a6 <__cmpsf2>
    4dac:	88 23       	and	r24, r24
    4dae:	44 f4       	brge	.+16     	; 0x4dc0 <_Z10ScaleValuei+0xbe>
	{
		scaledValue = -1.0f;
    4db0:	80 e0       	ldi	r24, 0x00	; 0
    4db2:	90 e0       	ldi	r25, 0x00	; 0
    4db4:	a0 e8       	ldi	r26, 0x80	; 128
    4db6:	bf eb       	ldi	r27, 0xBF	; 191
    4db8:	89 83       	std	Y+1, r24	; 0x01
    4dba:	9a 83       	std	Y+2, r25	; 0x02
    4dbc:	ab 83       	std	Y+3, r26	; 0x03
    4dbe:	bc 83       	std	Y+4, r27	; 0x04
	}
	
	return scaledValue;
    4dc0:	89 81       	ldd	r24, Y+1	; 0x01
    4dc2:	9a 81       	ldd	r25, Y+2	; 0x02
    4dc4:	ab 81       	ldd	r26, Y+3	; 0x03
    4dc6:	bc 81       	ldd	r27, Y+4	; 0x04
}
    4dc8:	bc 01       	movw	r22, r24
    4dca:	cd 01       	movw	r24, r26
    4dcc:	26 96       	adiw	r28, 0x06	; 6
    4dce:	0f b6       	in	r0, 0x3f	; 63
    4dd0:	f8 94       	cli
    4dd2:	de bf       	out	0x3e, r29	; 62
    4dd4:	0f be       	out	0x3f, r0	; 63
    4dd6:	cd bf       	out	0x3d, r28	; 61
    4dd8:	df 91       	pop	r29
    4dda:	cf 91       	pop	r28
    4ddc:	08 95       	ret

00004dde <__vector_46>:
/**
 * Interrupt service routine which is called when a PPM signal's rising edge is detected
 * on the PL1 pin.
 */
ISR(TIMER5_CAPT_vect)
{
    4dde:	1f 92       	push	r1
    4de0:	0f 92       	push	r0
    4de2:	00 90 5f 00 	lds	r0, 0x005F
    4de6:	0f 92       	push	r0
    4de8:	11 24       	eor	r1, r1
    4dea:	00 90 5b 00 	lds	r0, 0x005B
    4dee:	0f 92       	push	r0
    4df0:	ef 92       	push	r14
    4df2:	ff 92       	push	r15
    4df4:	0f 93       	push	r16
    4df6:	1f 93       	push	r17
    4df8:	2f 93       	push	r18
    4dfa:	3f 93       	push	r19
    4dfc:	4f 93       	push	r20
    4dfe:	5f 93       	push	r21
    4e00:	6f 93       	push	r22
    4e02:	7f 93       	push	r23
    4e04:	8f 93       	push	r24
    4e06:	9f 93       	push	r25
    4e08:	af 93       	push	r26
    4e0a:	bf 93       	push	r27
    4e0c:	ef 93       	push	r30
    4e0e:	ff 93       	push	r31
    4e10:	cf 93       	push	r28
    4e12:	df 93       	push	r29
    4e14:	cd b7       	in	r28, 0x3d	; 61
    4e16:	de b7       	in	r29, 0x3e	; 62
    4e18:	66 97       	sbiw	r28, 0x16	; 22
    4e1a:	de bf       	out	0x3e, r29	; 62
    4e1c:	cd bf       	out	0x3d, r28	; 61
	RadioControllerInterface *rcInterface = RadioControllerInterface::getRadioControllerInterface();
    4e1e:	0e 94 66 28 	call	0x50cc	; 0x50cc <_ZN10helicopter10interfaces24RadioControllerInterface27getRadioControllerInterfaceEv>
    4e22:	9e 83       	std	Y+6, r25	; 0x06
    4e24:	8d 83       	std	Y+5, r24	; 0x05
	
	//Disable interrupts while reading a 16 bit register to avoid
	//an interrupt happening inbetween reading the two bytes. 
	cli(); 
    4e26:	f8 94       	cli
	
	//The Input Capture Register is set to the value of the timer when the
	//input signal was received.
	long currentInputCaptureRegisterValue = ICR5;
    4e28:	86 e2       	ldi	r24, 0x26	; 38
    4e2a:	91 e0       	ldi	r25, 0x01	; 1
    4e2c:	fc 01       	movw	r30, r24
    4e2e:	80 81       	ld	r24, Z
    4e30:	91 81       	ldd	r25, Z+1	; 0x01
    4e32:	cc 01       	movw	r24, r24
    4e34:	a0 e0       	ldi	r26, 0x00	; 0
    4e36:	b0 e0       	ldi	r27, 0x00	; 0
    4e38:	8f 83       	std	Y+7, r24	; 0x07
    4e3a:	98 87       	std	Y+8, r25	; 0x08
    4e3c:	a9 87       	std	Y+9, r26	; 0x09
    4e3e:	ba 87       	std	Y+10, r27	; 0x0a
	
	sei();
    4e40:	78 94       	sei
	
	long servoChannelPulseWidth = 0;
    4e42:	19 82       	std	Y+1, r1	; 0x01
    4e44:	1a 82       	std	Y+2, r1	; 0x02
    4e46:	1b 82       	std	Y+3, r1	; 0x03
    4e48:	1c 82       	std	Y+4, r1	; 0x04
	
	long previousInputCaptureRegisterValue = rcInterface->PreviousInputCaptureRegisterValue();
    4e4a:	8d 81       	ldd	r24, Y+5	; 0x05
    4e4c:	9e 81       	ldd	r25, Y+6	; 0x06
    4e4e:	0e 94 af 25 	call	0x4b5e	; 0x4b5e <_ZNK10helicopter10interfaces24RadioControllerInterface33PreviousInputCaptureRegisterValueEv>
    4e52:	dc 01       	movw	r26, r24
    4e54:	cb 01       	movw	r24, r22
    4e56:	8b 87       	std	Y+11, r24	; 0x0b
    4e58:	9c 87       	std	Y+12, r25	; 0x0c
    4e5a:	ad 87       	std	Y+13, r26	; 0x0d
    4e5c:	be 87       	std	Y+14, r27	; 0x0e
	
	//If the current value was less, then the timer has overflowed since the last
	//time we received a pulse
	if (currentInputCaptureRegisterValue < previousInputCaptureRegisterValue)
    4e5e:	2f 81       	ldd	r18, Y+7	; 0x07
    4e60:	38 85       	ldd	r19, Y+8	; 0x08
    4e62:	49 85       	ldd	r20, Y+9	; 0x09
    4e64:	5a 85       	ldd	r21, Y+10	; 0x0a
    4e66:	8b 85       	ldd	r24, Y+11	; 0x0b
    4e68:	9c 85       	ldd	r25, Y+12	; 0x0c
    4e6a:	ad 85       	ldd	r26, Y+13	; 0x0d
    4e6c:	be 85       	ldd	r27, Y+14	; 0x0e
    4e6e:	28 17       	cp	r18, r24
    4e70:	39 07       	cpc	r19, r25
    4e72:	4a 07       	cpc	r20, r26
    4e74:	5b 07       	cpc	r21, r27
    4e76:	dc f4       	brge	.+54     	; 0x4eae <__vector_46+0xd0>
	{
		servoChannelPulseWidth = (currentInputCaptureRegisterValue + RadioControllerInterface::MAX_PPM_TIMER_VALUE) - previousInputCaptureRegisterValue;
    4e78:	8f 81       	ldd	r24, Y+7	; 0x07
    4e7a:	98 85       	ldd	r25, Y+8	; 0x08
    4e7c:	a9 85       	ldd	r26, Y+9	; 0x09
    4e7e:	ba 85       	ldd	r27, Y+10	; 0x0a
    4e80:	9c 01       	movw	r18, r24
    4e82:	ad 01       	movw	r20, r26
    4e84:	20 5c       	subi	r18, 0xC0	; 192
    4e86:	33 46       	sbci	r19, 0x63	; 99
    4e88:	4f 4f       	sbci	r20, 0xFF	; 255
    4e8a:	5f 4f       	sbci	r21, 0xFF	; 255
    4e8c:	8b 85       	ldd	r24, Y+11	; 0x0b
    4e8e:	9c 85       	ldd	r25, Y+12	; 0x0c
    4e90:	ad 85       	ldd	r26, Y+13	; 0x0d
    4e92:	be 85       	ldd	r27, Y+14	; 0x0e
    4e94:	79 01       	movw	r14, r18
    4e96:	8a 01       	movw	r16, r20
    4e98:	e8 1a       	sub	r14, r24
    4e9a:	f9 0a       	sbc	r15, r25
    4e9c:	0a 0b       	sbc	r16, r26
    4e9e:	1b 0b       	sbc	r17, r27
    4ea0:	d8 01       	movw	r26, r16
    4ea2:	c7 01       	movw	r24, r14
    4ea4:	89 83       	std	Y+1, r24	; 0x01
    4ea6:	9a 83       	std	Y+2, r25	; 0x02
    4ea8:	ab 83       	std	Y+3, r26	; 0x03
    4eaa:	bc 83       	std	Y+4, r27	; 0x04
    4eac:	14 c0       	rjmp	.+40     	; 0x4ed6 <__vector_46+0xf8>
	}else
	{
		//Calculate the width of the pulse.
		servoChannelPulseWidth = currentInputCaptureRegisterValue - previousInputCaptureRegisterValue;
    4eae:	2f 81       	ldd	r18, Y+7	; 0x07
    4eb0:	38 85       	ldd	r19, Y+8	; 0x08
    4eb2:	49 85       	ldd	r20, Y+9	; 0x09
    4eb4:	5a 85       	ldd	r21, Y+10	; 0x0a
    4eb6:	8b 85       	ldd	r24, Y+11	; 0x0b
    4eb8:	9c 85       	ldd	r25, Y+12	; 0x0c
    4eba:	ad 85       	ldd	r26, Y+13	; 0x0d
    4ebc:	be 85       	ldd	r27, Y+14	; 0x0e
    4ebe:	79 01       	movw	r14, r18
    4ec0:	8a 01       	movw	r16, r20
    4ec2:	e8 1a       	sub	r14, r24
    4ec4:	f9 0a       	sbc	r15, r25
    4ec6:	0a 0b       	sbc	r16, r26
    4ec8:	1b 0b       	sbc	r17, r27
    4eca:	d8 01       	movw	r26, r16
    4ecc:	c7 01       	movw	r24, r14
    4ece:	89 83       	std	Y+1, r24	; 0x01
    4ed0:	9a 83       	std	Y+2, r25	; 0x02
    4ed2:	ab 83       	std	Y+3, r26	; 0x03
    4ed4:	bc 83       	std	Y+4, r27	; 0x04
	}
	
	rcInterface->PreviousInputCaptureRegisterValue(currentInputCaptureRegisterValue);
    4ed6:	8f 81       	ldd	r24, Y+7	; 0x07
    4ed8:	98 85       	ldd	r25, Y+8	; 0x08
    4eda:	a9 85       	ldd	r26, Y+9	; 0x09
    4edc:	ba 85       	ldd	r27, Y+10	; 0x0a
    4ede:	2d 81       	ldd	r18, Y+5	; 0x05
    4ee0:	3e 81       	ldd	r19, Y+6	; 0x06
    4ee2:	ac 01       	movw	r20, r24
    4ee4:	bd 01       	movw	r22, r26
    4ee6:	c9 01       	movw	r24, r18
    4ee8:	0e 94 c5 25 	call	0x4b8a	; 0x4b8a <_ZN10helicopter10interfaces24RadioControllerInterface33PreviousInputCaptureRegisterValueEl>
	
	//Once all the servo channels values have been sent, a sync pulse is sent indicating
	//a restart back to the first channel.
	//Detect if it's a sync pulse and rest as appropriate
	if (servoChannelPulseWidth > RadioControllerInterface::SYNCH_PULSE_WIDTH)
    4eec:	89 81       	ldd	r24, Y+1	; 0x01
    4eee:	9a 81       	ldd	r25, Y+2	; 0x02
    4ef0:	ab 81       	ldd	r26, Y+3	; 0x03
    4ef2:	bc 81       	ldd	r27, Y+4	; 0x04
    4ef4:	81 34       	cpi	r24, 0x41	; 65
    4ef6:	0f e1       	ldi	r16, 0x1F	; 31
    4ef8:	90 07       	cpc	r25, r16
    4efa:	a1 05       	cpc	r26, r1
    4efc:	b1 05       	cpc	r27, r1
    4efe:	3c f0       	brlt	.+14     	; 0x4f0e <__vector_46+0x130>
	{
		rcInterface->ServoChannelIndex(0);
    4f00:	8d 81       	ldd	r24, Y+5	; 0x05
    4f02:	9e 81       	ldd	r25, Y+6	; 0x06
    4f04:	60 e0       	ldi	r22, 0x00	; 0
    4f06:	70 e0       	ldi	r23, 0x00	; 0
    4f08:	0e 94 f7 25 	call	0x4bee	; 0x4bee <_ZN10helicopter10interfaces24RadioControllerInterface17ServoChannelIndexEi>
    4f0c:	be c0       	rjmp	.+380    	; 0x508a <__vector_46+0x2ac>
	}else
	{
		if (servoChannelPulseWidth < RadioControllerInterface::MAX_USEABLE_PULSE_WIDTH && 
    4f0e:	89 81       	ldd	r24, Y+1	; 0x01
    4f10:	9a 81       	ldd	r25, Y+2	; 0x02
    4f12:	ab 81       	ldd	r26, Y+3	; 0x03
    4f14:	bc 81       	ldd	r27, Y+4	; 0x04
    4f16:	8a 3a       	cpi	r24, 0xAA	; 170
    4f18:	1f e0       	ldi	r17, 0x0F	; 15
    4f1a:	91 07       	cpc	r25, r17
    4f1c:	a1 05       	cpc	r26, r1
    4f1e:	b1 05       	cpc	r27, r1
    4f20:	0c f0       	brlt	.+2      	; 0x4f24 <__vector_46+0x146>
    4f22:	a7 c0       	rjmp	.+334    	; 0x5072 <__vector_46+0x294>
    4f24:	89 81       	ldd	r24, Y+1	; 0x01
    4f26:	9a 81       	ldd	r25, Y+2	; 0x02
    4f28:	ab 81       	ldd	r26, Y+3	; 0x03
    4f2a:	bc 81       	ldd	r27, Y+4	; 0x04
    4f2c:	87 3c       	cpi	r24, 0xC7	; 199
    4f2e:	27 e0       	ldi	r18, 0x07	; 7
    4f30:	92 07       	cpc	r25, r18
    4f32:	a1 05       	cpc	r26, r1
    4f34:	b1 05       	cpc	r27, r1
    4f36:	0c f4       	brge	.+2      	; 0x4f3a <__vector_46+0x15c>
    4f38:	9c c0       	rjmp	.+312    	; 0x5072 <__vector_46+0x294>
			servoChannelPulseWidth > RadioControllerInterface::MIN_USEABLE_PULSE_WIDTH)
		{
			int servoChannelIndex = rcInterface->ServoChannelIndex();
    4f3a:	8d 81       	ldd	r24, Y+5	; 0x05
    4f3c:	9e 81       	ldd	r25, Y+6	; 0x06
    4f3e:	0e 94 e5 25 	call	0x4bca	; 0x4bca <_ZNK10helicopter10interfaces24RadioControllerInterface17ServoChannelIndexEv>
    4f42:	98 8b       	std	Y+16, r25	; 0x10
    4f44:	8f 87       	std	Y+15, r24	; 0x0f
		
			if (servoChannelIndex < RadioControllerInterface::MAX_CHANNELS)
    4f46:	8f 85       	ldd	r24, Y+15	; 0x0f
    4f48:	98 89       	ldd	r25, Y+16	; 0x10
    4f4a:	88 30       	cpi	r24, 0x08	; 8
    4f4c:	91 05       	cpc	r25, r1
    4f4e:	0c f0       	brlt	.+2      	; 0x4f52 <__vector_46+0x174>
    4f50:	90 c0       	rjmp	.+288    	; 0x5072 <__vector_46+0x294>
			{
				SystemModel *model = rcInterface->GetSystemModel();
    4f52:	8d 81       	ldd	r24, Y+5	; 0x05
    4f54:	9e 81       	ldd	r25, Y+6	; 0x06
    4f56:	0e 94 0f 26 	call	0x4c1e	; 0x4c1e <_ZNK10helicopter10interfaces24RadioControllerInterface14GetSystemModelEv>
    4f5a:	9a 8b       	std	Y+18, r25	; 0x12
    4f5c:	89 8b       	std	Y+17, r24	; 0x11
				
				//Scale the servo channel pulse widths to between
				//-1, and 1 which is what the system uses for servo control.
				//-1 is 1.0 milliseconds, and 1 is 2.0 milliseconds (0 is 1.5 milliseconds)
				//new_v = (new_max - new_min) / (old_max - old_min) * (v - old_min) + new_min
				float servoControlValue = ScaleValue(servoChannelPulseWidth);
    4f5e:	89 81       	ldd	r24, Y+1	; 0x01
    4f60:	9a 81       	ldd	r25, Y+2	; 0x02
    4f62:	0e 94 81 26 	call	0x4d02	; 0x4d02 <_Z10ScaleValuei>
    4f66:	dc 01       	movw	r26, r24
    4f68:	cb 01       	movw	r24, r22
    4f6a:	8b 8b       	std	Y+19, r24	; 0x13
    4f6c:	9c 8b       	std	Y+20, r25	; 0x14
    4f6e:	ad 8b       	std	Y+21, r26	; 0x15
    4f70:	be 8b       	std	Y+22, r27	; 0x16

				rcInterface->SetServoChannelValue(servoChannelIndex, servoControlValue);
    4f72:	8b 89       	ldd	r24, Y+19	; 0x13
    4f74:	9c 89       	ldd	r25, Y+20	; 0x14
    4f76:	ad 89       	ldd	r26, Y+21	; 0x15
    4f78:	be 89       	ldd	r27, Y+22	; 0x16
    4f7a:	6f 85       	ldd	r22, Y+15	; 0x0f
    4f7c:	78 89       	ldd	r23, Y+16	; 0x10
    4f7e:	ed 81       	ldd	r30, Y+5	; 0x05
    4f80:	fe 81       	ldd	r31, Y+6	; 0x06
    4f82:	9c 01       	movw	r18, r24
    4f84:	ad 01       	movw	r20, r26
    4f86:	cf 01       	movw	r24, r30
    4f88:	0e 94 21 26 	call	0x4c42	; 0x4c42 <_ZN10helicopter10interfaces24RadioControllerInterface20SetServoChannelValueEif>
				 * there are some channels not plugged in, it will cause the 
				 * servo channel index to reset back to 0, and re-write the
				 * existing servo value. This could cause a servo control value
				 * to get sent to the wrong servo. 
				 */
				if (servoChannelIndex >= RadioControllerInterface::MIN_RECEIVED_CHANNELS)
    4f8c:	8f 85       	ldd	r24, Y+15	; 0x0f
    4f8e:	98 89       	ldd	r25, Y+16	; 0x10
    4f90:	85 30       	cpi	r24, 0x05	; 5
    4f92:	91 05       	cpc	r25, r1
    4f94:	0c f4       	brge	.+2      	; 0x4f98 <__vector_46+0x1ba>
    4f96:	6d c0       	rjmp	.+218    	; 0x5072 <__vector_46+0x294>
				{
					//Manual mode
					if (rcInterface->GetServoChannelValue(RadioControllerInterface::FLIGHT_MODE_AUX_CHANNEL)
    4f98:	8d 81       	ldd	r24, Y+5	; 0x05
    4f9a:	9e 81       	ldd	r25, Y+6	; 0x06
    4f9c:	64 e0       	ldi	r22, 0x04	; 4
    4f9e:	70 e0       	ldi	r23, 0x00	; 0
    4fa0:	0e 94 55 26 	call	0x4caa	; 0x4caa <_ZNK10helicopter10interfaces24RadioControllerInterface20GetServoChannelValueEi>
    4fa4:	dc 01       	movw	r26, r24
    4fa6:	cb 01       	movw	r24, r22
    4fa8:	11 e0       	ldi	r17, 0x01	; 1
    4faa:	20 e0       	ldi	r18, 0x00	; 0
    4fac:	30 e0       	ldi	r19, 0x00	; 0
    4fae:	a9 01       	movw	r20, r18
    4fb0:	bc 01       	movw	r22, r24
    4fb2:	cd 01       	movw	r24, r26
    4fb4:	0e 94 53 4b 	call	0x96a6	; 0x96a6 <__cmpsf2>
    4fb8:	88 23       	and	r24, r24
    4fba:	0c f0       	brlt	.+2      	; 0x4fbe <__vector_46+0x1e0>
    4fbc:	10 e0       	ldi	r17, 0x00	; 0
    4fbe:	11 23       	and	r17, r17
    4fc0:	31 f0       	breq	.+12     	; 0x4fce <__vector_46+0x1f0>
						 < RadioControllerInterface::MANUAL_MODE_THRESHOLD)
					{
						model->OperationalState(SystemModel::ManualControl);
    4fc2:	89 89       	ldd	r24, Y+17	; 0x11
    4fc4:	9a 89       	ldd	r25, Y+18	; 0x12
    4fc6:	60 e0       	ldi	r22, 0x00	; 0
    4fc8:	0e 94 75 25 	call	0x4aea	; 0x4aea <_ZN10helicopter5model11SystemModel16OperationalStateENS1_14OperatingStateE>
    4fcc:	05 c0       	rjmp	.+10     	; 0x4fd8 <__vector_46+0x1fa>
					}else
					{
						model->OperationalState(SystemModel::AutoPilot);
    4fce:	89 89       	ldd	r24, Y+17	; 0x11
    4fd0:	9a 89       	ldd	r25, Y+18	; 0x12
    4fd2:	61 e0       	ldi	r22, 0x01	; 1
    4fd4:	0e 94 75 25 	call	0x4aea	; 0x4aea <_ZN10helicopter5model11SystemModel16OperationalStateENS1_14OperatingStateE>
					}

					//If in Manual Control, set the servo control values.
					if (model->OperationalState() == SystemModel::ManualControl)
    4fd8:	89 89       	ldd	r24, Y+17	; 0x11
    4fda:	9a 89       	ldd	r25, Y+18	; 0x12
    4fdc:	0e 94 74 07 	call	0xee8	; 0xee8 <_ZNK10helicopter5model11SystemModel16OperationalStateEv>
    4fe0:	98 2f       	mov	r25, r24
    4fe2:	81 e0       	ldi	r24, 0x01	; 1
    4fe4:	99 23       	and	r25, r25
    4fe6:	09 f0       	breq	.+2      	; 0x4fea <__vector_46+0x20c>
    4fe8:	80 e0       	ldi	r24, 0x00	; 0
    4fea:	88 23       	and	r24, r24
    4fec:	e1 f1       	breq	.+120    	; 0x5066 <__vector_46+0x288>
					{
						model->LateralControl(rcInterface->GetServoChannelValue(RadioControllerInterface::AILERON_CHANNEL));
    4fee:	8d 81       	ldd	r24, Y+5	; 0x05
    4ff0:	9e 81       	ldd	r25, Y+6	; 0x06
    4ff2:	60 e0       	ldi	r22, 0x00	; 0
    4ff4:	70 e0       	ldi	r23, 0x00	; 0
    4ff6:	0e 94 55 26 	call	0x4caa	; 0x4caa <_ZNK10helicopter10interfaces24RadioControllerInterface20GetServoChannelValueEi>
    4ffa:	dc 01       	movw	r26, r24
    4ffc:	cb 01       	movw	r24, r22
    4ffe:	29 89       	ldd	r18, Y+17	; 0x11
    5000:	3a 89       	ldd	r19, Y+18	; 0x12
    5002:	ac 01       	movw	r20, r24
    5004:	bd 01       	movw	r22, r26
    5006:	c9 01       	movw	r24, r18
    5008:	0e 94 a3 04 	call	0x946	; 0x946 <_ZN10helicopter5model11SystemModel14LateralControlEf>
						model->LongitudeControl(rcInterface->GetServoChannelValue(RadioControllerInterface::ELEVATOR_CHANNEL));
    500c:	8d 81       	ldd	r24, Y+5	; 0x05
    500e:	9e 81       	ldd	r25, Y+6	; 0x06
    5010:	61 e0       	ldi	r22, 0x01	; 1
    5012:	70 e0       	ldi	r23, 0x00	; 0
    5014:	0e 94 55 26 	call	0x4caa	; 0x4caa <_ZNK10helicopter10interfaces24RadioControllerInterface20GetServoChannelValueEi>
    5018:	dc 01       	movw	r26, r24
    501a:	cb 01       	movw	r24, r22
    501c:	29 89       	ldd	r18, Y+17	; 0x11
    501e:	3a 89       	ldd	r19, Y+18	; 0x12
    5020:	ac 01       	movw	r20, r24
    5022:	bd 01       	movw	r22, r26
    5024:	c9 01       	movw	r24, r18
    5026:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <_ZN10helicopter5model11SystemModel16LongitudeControlEf>
						model->MainRotorCollectiveControl(rcInterface->GetServoChannelValue(RadioControllerInterface::THROTTLE_CHANNEL));
    502a:	8d 81       	ldd	r24, Y+5	; 0x05
    502c:	9e 81       	ldd	r25, Y+6	; 0x06
    502e:	62 e0       	ldi	r22, 0x02	; 2
    5030:	70 e0       	ldi	r23, 0x00	; 0
    5032:	0e 94 55 26 	call	0x4caa	; 0x4caa <_ZNK10helicopter10interfaces24RadioControllerInterface20GetServoChannelValueEi>
    5036:	dc 01       	movw	r26, r24
    5038:	cb 01       	movw	r24, r22
    503a:	29 89       	ldd	r18, Y+17	; 0x11
    503c:	3a 89       	ldd	r19, Y+18	; 0x12
    503e:	ac 01       	movw	r20, r24
    5040:	bd 01       	movw	r22, r26
    5042:	c9 01       	movw	r24, r18
    5044:	0e 94 2a 06 	call	0xc54	; 0xc54 <_ZN10helicopter5model11SystemModel26MainRotorCollectiveControlEf>
						model->YawControl(rcInterface->GetServoChannelValue(RadioControllerInterface::RUDDER_CHANNEL));
    5048:	8d 81       	ldd	r24, Y+5	; 0x05
    504a:	9e 81       	ldd	r25, Y+6	; 0x06
    504c:	63 e0       	ldi	r22, 0x03	; 3
    504e:	70 e0       	ldi	r23, 0x00	; 0
    5050:	0e 94 55 26 	call	0x4caa	; 0x4caa <_ZNK10helicopter10interfaces24RadioControllerInterface20GetServoChannelValueEi>
    5054:	dc 01       	movw	r26, r24
    5056:	cb 01       	movw	r24, r22
    5058:	29 89       	ldd	r18, Y+17	; 0x11
    505a:	3a 89       	ldd	r19, Y+18	; 0x12
    505c:	ac 01       	movw	r20, r24
    505e:	bd 01       	movw	r22, r26
    5060:	c9 01       	movw	r24, r18
    5062:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_ZN10helicopter5model11SystemModel10YawControlEf>
					}
					
					rcInterface->ServoChannelIndex(0);
    5066:	8d 81       	ldd	r24, Y+5	; 0x05
    5068:	9e 81       	ldd	r25, Y+6	; 0x06
    506a:	60 e0       	ldi	r22, 0x00	; 0
    506c:	70 e0       	ldi	r23, 0x00	; 0
    506e:	0e 94 f7 25 	call	0x4bee	; 0x4bee <_ZN10helicopter10interfaces24RadioControllerInterface17ServoChannelIndexEi>
				}			
			}
		}

		rcInterface->ServoChannelIndex(rcInterface->ServoChannelIndex() + 1);
    5072:	8d 81       	ldd	r24, Y+5	; 0x05
    5074:	9e 81       	ldd	r25, Y+6	; 0x06
    5076:	0e 94 e5 25 	call	0x4bca	; 0x4bca <_ZNK10helicopter10interfaces24RadioControllerInterface17ServoChannelIndexEv>
    507a:	9c 01       	movw	r18, r24
    507c:	2f 5f       	subi	r18, 0xFF	; 255
    507e:	3f 4f       	sbci	r19, 0xFF	; 255
    5080:	8d 81       	ldd	r24, Y+5	; 0x05
    5082:	9e 81       	ldd	r25, Y+6	; 0x06
    5084:	b9 01       	movw	r22, r18
    5086:	0e 94 f7 25 	call	0x4bee	; 0x4bee <_ZN10helicopter10interfaces24RadioControllerInterface17ServoChannelIndexEi>
	}
	
}
    508a:	66 96       	adiw	r28, 0x16	; 22
    508c:	0f b6       	in	r0, 0x3f	; 63
    508e:	f8 94       	cli
    5090:	de bf       	out	0x3e, r29	; 62
    5092:	0f be       	out	0x3f, r0	; 63
    5094:	cd bf       	out	0x3d, r28	; 61
    5096:	df 91       	pop	r29
    5098:	cf 91       	pop	r28
    509a:	ff 91       	pop	r31
    509c:	ef 91       	pop	r30
    509e:	bf 91       	pop	r27
    50a0:	af 91       	pop	r26
    50a2:	9f 91       	pop	r25
    50a4:	8f 91       	pop	r24
    50a6:	7f 91       	pop	r23
    50a8:	6f 91       	pop	r22
    50aa:	5f 91       	pop	r21
    50ac:	4f 91       	pop	r20
    50ae:	3f 91       	pop	r19
    50b0:	2f 91       	pop	r18
    50b2:	1f 91       	pop	r17
    50b4:	0f 91       	pop	r16
    50b6:	ff 90       	pop	r15
    50b8:	ef 90       	pop	r14
    50ba:	0f 90       	pop	r0
    50bc:	00 92 5b 00 	sts	0x005B, r0
    50c0:	0f 90       	pop	r0
    50c2:	00 92 5f 00 	sts	0x005F, r0
    50c6:	0f 90       	pop	r0
    50c8:	1f 90       	pop	r1
    50ca:	18 95       	reti

000050cc <_ZN10helicopter10interfaces24RadioControllerInterface27getRadioControllerInterfaceEv>:



RadioControllerInterface* RadioControllerInterface::getRadioControllerInterface()
{
    50cc:	0f 93       	push	r16
    50ce:	1f 93       	push	r17
    50d0:	cf 93       	push	r28
    50d2:	df 93       	push	r29
    50d4:	cd b7       	in	r28, 0x3d	; 61
    50d6:	de b7       	in	r29, 0x3e	; 62
	if (radioControllerInterface == NULL)
    50d8:	80 91 9a 02 	lds	r24, 0x029A
    50dc:	90 91 9b 02 	lds	r25, 0x029B
    50e0:	00 97       	sbiw	r24, 0x00	; 0
    50e2:	61 f4       	brne	.+24     	; 0x50fc <_ZN10helicopter10interfaces24RadioControllerInterface27getRadioControllerInterfaceEv+0x30>
	{
		radioControllerInterface = new RadioControllerInterface();
    50e4:	88 e2       	ldi	r24, 0x28	; 40
    50e6:	90 e0       	ldi	r25, 0x00	; 0
    50e8:	0e 94 ee 44 	call	0x89dc	; 0x89dc <_Znwj>
    50ec:	8c 01       	movw	r16, r24
    50ee:	c8 01       	movw	r24, r16
    50f0:	0e 94 88 25 	call	0x4b10	; 0x4b10 <_ZN10helicopter10interfaces24RadioControllerInterfaceC1Ev>
    50f4:	10 93 9b 02 	sts	0x029B, r17
    50f8:	00 93 9a 02 	sts	0x029A, r16
	}

	return radioControllerInterface;
    50fc:	80 91 9a 02 	lds	r24, 0x029A
    5100:	90 91 9b 02 	lds	r25, 0x029B
}
    5104:	df 91       	pop	r29
    5106:	cf 91       	pop	r28
    5108:	1f 91       	pop	r17
    510a:	0f 91       	pop	r16
    510c:	08 95       	ret

0000510e <_ZN10helicopter10interfaces24RadioControllerInterface4initEv>:
 * This counter will be used to measure the time intervals between the PPM pulses
 * to calculate the value of the control signal from the radio being sent to the servos.
 * See page 148 of atmelAVR2560_datasheet.pdf
 */
void RadioControllerInterface::init()
{
    510e:	cf 93       	push	r28
    5110:	df 93       	push	r29
    5112:	1f 92       	push	r1
    5114:	1f 92       	push	r1
    5116:	cd b7       	in	r28, 0x3d	; 61
    5118:	de b7       	in	r29, 0x3e	; 62
    511a:	9a 83       	std	Y+2, r25	; 0x02
    511c:	89 83       	std	Y+1, r24	; 0x01
	//set PL1 pin to input. This will receive the
	//pulse position modulation signal from the pwm-ppm encoder
	DDRL &= ~(1<<PL1);
    511e:	8a e0       	ldi	r24, 0x0A	; 10
    5120:	91 e0       	ldi	r25, 0x01	; 1
    5122:	2a e0       	ldi	r18, 0x0A	; 10
    5124:	31 e0       	ldi	r19, 0x01	; 1
    5126:	f9 01       	movw	r30, r18
    5128:	20 81       	ld	r18, Z
    512a:	2d 7f       	andi	r18, 0xFD	; 253
    512c:	fc 01       	movw	r30, r24
    512e:	20 83       	st	Z, r18
	//Setup timer for Fast Pulse Width Modulation where the top
	//of the timer (when the timer resets) is set to the 
	//value given to the OCR5A register.
	//Timer Counter Overflow (TOV) flag is set when the timer reaches the TOP
	//
	TCCR5A = (1<<WGM50)|(1<<WGM51);
    5130:	80 e2       	ldi	r24, 0x20	; 32
    5132:	91 e0       	ldi	r25, 0x01	; 1
    5134:	23 e0       	ldi	r18, 0x03	; 3
    5136:	fc 01       	movw	r30, r24
    5138:	20 83       	st	Z, r18
	TCCR5B = (1<<WGM52)|(1<<WGM53);
    513a:	81 e2       	ldi	r24, 0x21	; 33
    513c:	91 e0       	ldi	r25, 0x01	; 1
    513e:	28 e1       	ldi	r18, 0x18	; 24
    5140:	fc 01       	movw	r30, r24
    5142:	20 83       	st	Z, r18
	
	//ICES5 is the input capture edge select pin. when set to 1, it triggers a capture event on a rising edge.
	TCCR5B |= (1<<ICES5); 
    5144:	81 e2       	ldi	r24, 0x21	; 33
    5146:	91 e0       	ldi	r25, 0x01	; 1
    5148:	21 e2       	ldi	r18, 0x21	; 33
    514a:	31 e0       	ldi	r19, 0x01	; 1
    514c:	f9 01       	movw	r30, r18
    514e:	20 81       	ld	r18, Z
    5150:	20 64       	ori	r18, 0x40	; 64
    5152:	fc 01       	movw	r30, r24
    5154:	20 83       	st	Z, r18
	
	//Setup the timer to reset once it reaches the MAX_PPM_TIMER_VALUE value 
	// (i.e. the timer will reset 50 times a second because the timer will reach 40,000 in 1/50th of a second)
	OCR5A = MAX_PPM_TIMER_VALUE; 
    5156:	88 e2       	ldi	r24, 0x28	; 40
    5158:	91 e0       	ldi	r25, 0x01	; 1
    515a:	20 e4       	ldi	r18, 0x40	; 64
    515c:	3c e9       	ldi	r19, 0x9C	; 156
    515e:	fc 01       	movw	r30, r24
    5160:	31 83       	std	Z+1, r19	; 0x01
    5162:	20 83       	st	Z, r18

	//Enable global interrupts
	sei();
    5164:	78 94       	sei
	
	// Enable Input Capture interrupt so the interrupt will fire when a PPM signal is received.
	TIMSK5 |= (1<<ICIE5);
    5166:	83 e7       	ldi	r24, 0x73	; 115
    5168:	90 e0       	ldi	r25, 0x00	; 0
    516a:	23 e7       	ldi	r18, 0x73	; 115
    516c:	30 e0       	ldi	r19, 0x00	; 0
    516e:	f9 01       	movw	r30, r18
    5170:	20 81       	ld	r18, Z
    5172:	20 62       	ori	r18, 0x20	; 32
    5174:	fc 01       	movw	r30, r24
    5176:	20 83       	st	Z, r18
}
    5178:	0f 90       	pop	r0
    517a:	0f 90       	pop	r0
    517c:	df 91       	pop	r29
    517e:	cf 91       	pop	r28
    5180:	08 95       	ret

00005182 <_ZN10helicopter10interfaces24RadioControllerInterface5startEv>:

void RadioControllerInterface::start()
{
    5182:	cf 93       	push	r28
    5184:	df 93       	push	r29
    5186:	1f 92       	push	r1
    5188:	1f 92       	push	r1
    518a:	cd b7       	in	r28, 0x3d	; 61
    518c:	de b7       	in	r29, 0x3e	; 62
    518e:	9a 83       	std	Y+2, r25	; 0x02
    5190:	89 83       	std	Y+1, r24	; 0x01
	//Set the timer prescaler to 8. (CS = Clock Select) which starts the timer.
	TCCR5B |= (1<<CS51);	
    5192:	81 e2       	ldi	r24, 0x21	; 33
    5194:	91 e0       	ldi	r25, 0x01	; 1
    5196:	21 e2       	ldi	r18, 0x21	; 33
    5198:	31 e0       	ldi	r19, 0x01	; 1
    519a:	f9 01       	movw	r30, r18
    519c:	20 81       	ld	r18, Z
    519e:	22 60       	ori	r18, 0x02	; 2
    51a0:	fc 01       	movw	r30, r24
    51a2:	20 83       	st	Z, r18
}
    51a4:	0f 90       	pop	r0
    51a6:	0f 90       	pop	r0
    51a8:	df 91       	pop	r29
    51aa:	cf 91       	pop	r28
    51ac:	08 95       	ret

000051ae <_ZN10helicopter8messages7MessageD1Ev>:
					msgType(msgType), msgSize(msgSize)
				{
					
				}
				
				virtual ~Message()
    51ae:	cf 93       	push	r28
    51b0:	df 93       	push	r29
    51b2:	1f 92       	push	r1
    51b4:	1f 92       	push	r1
    51b6:	cd b7       	in	r28, 0x3d	; 61
    51b8:	de b7       	in	r29, 0x3e	; 62
    51ba:	9a 83       	std	Y+2, r25	; 0x02
    51bc:	89 83       	std	Y+1, r24	; 0x01
				{
    51be:	89 81       	ldd	r24, Y+1	; 0x01
    51c0:	9a 81       	ldd	r25, Y+2	; 0x02
    51c2:	26 e2       	ldi	r18, 0x26	; 38
    51c4:	32 e0       	ldi	r19, 0x02	; 2
    51c6:	fc 01       	movw	r30, r24
    51c8:	31 83       	std	Z+1, r19	; 0x01
    51ca:	20 83       	st	Z, r18
					
				}
    51cc:	80 e0       	ldi	r24, 0x00	; 0
    51ce:	90 e0       	ldi	r25, 0x00	; 0
    51d0:	81 70       	andi	r24, 0x01	; 1
    51d2:	99 27       	eor	r25, r25
    51d4:	00 97       	sbiw	r24, 0x00	; 0
    51d6:	21 f0       	breq	.+8      	; 0x51e0 <_ZN10helicopter8messages7MessageD1Ev+0x32>
    51d8:	89 81       	ldd	r24, Y+1	; 0x01
    51da:	9a 81       	ldd	r25, Y+2	; 0x02
    51dc:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    51e0:	0f 90       	pop	r0
    51e2:	0f 90       	pop	r0
    51e4:	df 91       	pop	r29
    51e6:	cf 91       	pop	r28
    51e8:	08 95       	ret

000051ea <_ZN10helicopter8messages7MessageD0Ev>:
					msgType(msgType), msgSize(msgSize)
				{
					
				}
				
				virtual ~Message()
    51ea:	cf 93       	push	r28
    51ec:	df 93       	push	r29
    51ee:	1f 92       	push	r1
    51f0:	1f 92       	push	r1
    51f2:	cd b7       	in	r28, 0x3d	; 61
    51f4:	de b7       	in	r29, 0x3e	; 62
    51f6:	9a 83       	std	Y+2, r25	; 0x02
    51f8:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    51fa:	89 81       	ldd	r24, Y+1	; 0x01
    51fc:	9a 81       	ldd	r25, Y+2	; 0x02
    51fe:	0e 94 d7 28 	call	0x51ae	; 0x51ae <_ZN10helicopter8messages7MessageD1Ev>
    5202:	89 81       	ldd	r24, Y+1	; 0x01
    5204:	9a 81       	ldd	r25, Y+2	; 0x02
    5206:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    520a:	0f 90       	pop	r0
    520c:	0f 90       	pop	r0
    520e:	df 91       	pop	r29
    5210:	cf 91       	pop	r28
    5212:	08 95       	ret

00005214 <_ZN10helicopter8messages7Message14getMessageSizeEv>:
	* Returns the number of bytes in this message. This should
	* be the payload of the message, and not underlying protocol
	* information (sync bytes and checksum bytes)
	*/
int Message::getMessageSize()
{
    5214:	cf 93       	push	r28
    5216:	df 93       	push	r29
    5218:	1f 92       	push	r1
    521a:	1f 92       	push	r1
    521c:	cd b7       	in	r28, 0x3d	; 61
    521e:	de b7       	in	r29, 0x3e	; 62
    5220:	9a 83       	std	Y+2, r25	; 0x02
    5222:	89 83       	std	Y+1, r24	; 0x01
	return msgSize;
    5224:	89 81       	ldd	r24, Y+1	; 0x01
    5226:	9a 81       	ldd	r25, Y+2	; 0x02
    5228:	fc 01       	movw	r30, r24
    522a:	83 81       	ldd	r24, Z+3	; 0x03
    522c:	94 81       	ldd	r25, Z+4	; 0x04
}
    522e:	0f 90       	pop	r0
    5230:	0f 90       	pop	r0
    5232:	df 91       	pop	r29
    5234:	cf 91       	pop	r28
    5236:	08 95       	ret

00005238 <_ZN10helicopter8messages7Message8getBytesEv>:
				
/**
	* Returns the data in this message in raw byte format for transmission.
	*/
byte *Message::getBytes()
{
    5238:	cf 93       	push	r28
    523a:	df 93       	push	r29
    523c:	1f 92       	push	r1
    523e:	1f 92       	push	r1
    5240:	cd b7       	in	r28, 0x3d	; 61
    5242:	de b7       	in	r29, 0x3e	; 62
    5244:	9a 83       	std	Y+2, r25	; 0x02
    5246:	89 83       	std	Y+1, r24	; 0x01
	return NULL;
    5248:	80 e0       	ldi	r24, 0x00	; 0
    524a:	90 e0       	ldi	r25, 0x00	; 0
}
    524c:	0f 90       	pop	r0
    524e:	0f 90       	pop	r0
    5250:	df 91       	pop	r29
    5252:	cf 91       	pop	r28
    5254:	08 95       	ret

00005256 <_ZN10helicopter8messages7Message12buildMessageEPh>:
	* for creating a message object given a stream of bytes.
	* @param message The bytes in the payload of the message which should be used
	* to construct a message object.
	*/
void Message::buildMessage(byte *message)
{
    5256:	cf 93       	push	r28
    5258:	df 93       	push	r29
    525a:	00 d0       	rcall	.+0      	; 0x525c <_ZN10helicopter8messages7Message12buildMessageEPh+0x6>
    525c:	1f 92       	push	r1
    525e:	cd b7       	in	r28, 0x3d	; 61
    5260:	de b7       	in	r29, 0x3e	; 62
    5262:	9a 83       	std	Y+2, r25	; 0x02
    5264:	89 83       	std	Y+1, r24	; 0x01
    5266:	7c 83       	std	Y+4, r23	; 0x04
    5268:	6b 83       	std	Y+3, r22	; 0x03
	//noop. subclass should implement this.
    526a:	0f 90       	pop	r0
    526c:	0f 90       	pop	r0
    526e:	0f 90       	pop	r0
    5270:	0f 90       	pop	r0
    5272:	df 91       	pop	r29
    5274:	cf 91       	pop	r28
    5276:	08 95       	ret

00005278 <_ZN10helicopter8messages7MessageC1Ehi>:
			
				/**
				 * @param msgType The identifier of this message
				 * @param msgSize The size in bytes of this message
				 */
				Message (byte msgType, int msgSize):
    5278:	cf 93       	push	r28
    527a:	df 93       	push	r29
    527c:	00 d0       	rcall	.+0      	; 0x527e <_ZN10helicopter8messages7MessageC1Ehi+0x6>
    527e:	1f 92       	push	r1
    5280:	1f 92       	push	r1
    5282:	cd b7       	in	r28, 0x3d	; 61
    5284:	de b7       	in	r29, 0x3e	; 62
    5286:	9a 83       	std	Y+2, r25	; 0x02
    5288:	89 83       	std	Y+1, r24	; 0x01
    528a:	6b 83       	std	Y+3, r22	; 0x03
    528c:	5d 83       	std	Y+5, r21	; 0x05
    528e:	4c 83       	std	Y+4, r20	; 0x04
					msgType(msgType), msgSize(msgSize)
    5290:	89 81       	ldd	r24, Y+1	; 0x01
    5292:	9a 81       	ldd	r25, Y+2	; 0x02
    5294:	26 e2       	ldi	r18, 0x26	; 38
    5296:	32 e0       	ldi	r19, 0x02	; 2
    5298:	fc 01       	movw	r30, r24
    529a:	31 83       	std	Z+1, r19	; 0x01
    529c:	20 83       	st	Z, r18
    529e:	89 81       	ldd	r24, Y+1	; 0x01
    52a0:	9a 81       	ldd	r25, Y+2	; 0x02
    52a2:	2b 81       	ldd	r18, Y+3	; 0x03
    52a4:	fc 01       	movw	r30, r24
    52a6:	22 83       	std	Z+2, r18	; 0x02
    52a8:	89 81       	ldd	r24, Y+1	; 0x01
    52aa:	9a 81       	ldd	r25, Y+2	; 0x02
    52ac:	2c 81       	ldd	r18, Y+4	; 0x04
    52ae:	3d 81       	ldd	r19, Y+5	; 0x05
    52b0:	fc 01       	movw	r30, r24
    52b2:	34 83       	std	Z+4, r19	; 0x04
    52b4:	23 83       	std	Z+3, r18	; 0x03
				{
					
				}
    52b6:	0f 90       	pop	r0
    52b8:	0f 90       	pop	r0
    52ba:	0f 90       	pop	r0
    52bc:	0f 90       	pop	r0
    52be:	0f 90       	pop	r0
    52c0:	df 91       	pop	r29
    52c2:	cf 91       	pop	r28
    52c4:	08 95       	ret

000052c6 <_ZN10helicopter8messages11SyncMessageC1Ev>:
				static const byte MessageType = 3;
							
				static const byte MessageSize =
					sizeof(msgType);
							
				SyncMessage(): Message(MessageType,MessageSize)
    52c6:	cf 93       	push	r28
    52c8:	df 93       	push	r29
    52ca:	1f 92       	push	r1
    52cc:	1f 92       	push	r1
    52ce:	cd b7       	in	r28, 0x3d	; 61
    52d0:	de b7       	in	r29, 0x3e	; 62
    52d2:	9a 83       	std	Y+2, r25	; 0x02
    52d4:	89 83       	std	Y+1, r24	; 0x01
    52d6:	89 81       	ldd	r24, Y+1	; 0x01
    52d8:	9a 81       	ldd	r25, Y+2	; 0x02
    52da:	41 e0       	ldi	r20, 0x01	; 1
    52dc:	50 e0       	ldi	r21, 0x00	; 0
    52de:	63 e0       	ldi	r22, 0x03	; 3
    52e0:	0e 94 3c 29 	call	0x5278	; 0x5278 <_ZN10helicopter8messages7MessageC1Ehi>
    52e4:	89 81       	ldd	r24, Y+1	; 0x01
    52e6:	9a 81       	ldd	r25, Y+2	; 0x02
    52e8:	22 e3       	ldi	r18, 0x32	; 50
    52ea:	32 e0       	ldi	r19, 0x02	; 2
    52ec:	fc 01       	movw	r30, r24
    52ee:	31 83       	std	Z+1, r19	; 0x01
    52f0:	20 83       	st	Z, r18
				{
								
				}
    52f2:	0f 90       	pop	r0
    52f4:	0f 90       	pop	r0
    52f6:	df 91       	pop	r29
    52f8:	cf 91       	pop	r28
    52fa:	08 95       	ret

000052fc <_ZN10helicopter8messages11SyncMessageD1Ev>:
				
				~SyncMessage()
    52fc:	cf 93       	push	r28
    52fe:	df 93       	push	r29
    5300:	1f 92       	push	r1
    5302:	1f 92       	push	r1
    5304:	cd b7       	in	r28, 0x3d	; 61
    5306:	de b7       	in	r29, 0x3e	; 62
    5308:	9a 83       	std	Y+2, r25	; 0x02
    530a:	89 83       	std	Y+1, r24	; 0x01
				{
    530c:	89 81       	ldd	r24, Y+1	; 0x01
    530e:	9a 81       	ldd	r25, Y+2	; 0x02
    5310:	22 e3       	ldi	r18, 0x32	; 50
    5312:	32 e0       	ldi	r19, 0x02	; 2
    5314:	fc 01       	movw	r30, r24
    5316:	31 83       	std	Z+1, r19	; 0x01
    5318:	20 83       	st	Z, r18
    531a:	89 81       	ldd	r24, Y+1	; 0x01
    531c:	9a 81       	ldd	r25, Y+2	; 0x02
    531e:	0e 94 d7 28 	call	0x51ae	; 0x51ae <_ZN10helicopter8messages7MessageD1Ev>
					
				}
    5322:	80 e0       	ldi	r24, 0x00	; 0
    5324:	90 e0       	ldi	r25, 0x00	; 0
    5326:	81 70       	andi	r24, 0x01	; 1
    5328:	99 27       	eor	r25, r25
    532a:	00 97       	sbiw	r24, 0x00	; 0
    532c:	21 f0       	breq	.+8      	; 0x5336 <_ZN10helicopter8messages11SyncMessageD1Ev+0x3a>
    532e:	89 81       	ldd	r24, Y+1	; 0x01
    5330:	9a 81       	ldd	r25, Y+2	; 0x02
    5332:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    5336:	0f 90       	pop	r0
    5338:	0f 90       	pop	r0
    533a:	df 91       	pop	r29
    533c:	cf 91       	pop	r28
    533e:	08 95       	ret

00005340 <_ZN10helicopter8messages11SyncMessageD0Ev>:
				SyncMessage(): Message(MessageType,MessageSize)
				{
								
				}
				
				~SyncMessage()
    5340:	cf 93       	push	r28
    5342:	df 93       	push	r29
    5344:	1f 92       	push	r1
    5346:	1f 92       	push	r1
    5348:	cd b7       	in	r28, 0x3d	; 61
    534a:	de b7       	in	r29, 0x3e	; 62
    534c:	9a 83       	std	Y+2, r25	; 0x02
    534e:	89 83       	std	Y+1, r24	; 0x01
				{
					
				}
    5350:	89 81       	ldd	r24, Y+1	; 0x01
    5352:	9a 81       	ldd	r25, Y+2	; 0x02
    5354:	0e 94 7e 29 	call	0x52fc	; 0x52fc <_ZN10helicopter8messages11SyncMessageD1Ev>
    5358:	89 81       	ldd	r24, Y+1	; 0x01
    535a:	9a 81       	ldd	r25, Y+2	; 0x02
    535c:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    5360:	0f 90       	pop	r0
    5362:	0f 90       	pop	r0
    5364:	df 91       	pop	r29
    5366:	cf 91       	pop	r28
    5368:	08 95       	ret

0000536a <_ZN10helicopter8messages11SyncMessage8getBytesEv>:

using namespace helicopter::messages;


byte *SyncMessage::getBytes()
{
    536a:	cf 93       	push	r28
    536c:	df 93       	push	r29
    536e:	00 d0       	rcall	.+0      	; 0x5370 <_ZN10helicopter8messages11SyncMessage8getBytesEv+0x6>
    5370:	00 d0       	rcall	.+0      	; 0x5372 <_ZN10helicopter8messages11SyncMessage8getBytesEv+0x8>
    5372:	cd b7       	in	r28, 0x3d	; 61
    5374:	de b7       	in	r29, 0x3e	; 62
    5376:	9e 83       	std	Y+6, r25	; 0x06
    5378:	8d 83       	std	Y+5, r24	; 0x05
	byte *msg = new byte[MessageSize];
    537a:	81 e0       	ldi	r24, 0x01	; 1
    537c:	90 e0       	ldi	r25, 0x00	; 0
    537e:	0e 94 14 45 	call	0x8a28	; 0x8a28 <_Znaj>
    5382:	9a 83       	std	Y+2, r25	; 0x02
    5384:	89 83       	std	Y+1, r24	; 0x01
	byte *msgPtr = msg;
    5386:	89 81       	ldd	r24, Y+1	; 0x01
    5388:	9a 81       	ldd	r25, Y+2	; 0x02
    538a:	9c 83       	std	Y+4, r25	; 0x04
    538c:	8b 83       	std	Y+3, r24	; 0x03
	msgPtr[0] = this->msgType;
    538e:	8d 81       	ldd	r24, Y+5	; 0x05
    5390:	9e 81       	ldd	r25, Y+6	; 0x06
    5392:	fc 01       	movw	r30, r24
    5394:	22 81       	ldd	r18, Z+2	; 0x02
    5396:	8b 81       	ldd	r24, Y+3	; 0x03
    5398:	9c 81       	ldd	r25, Y+4	; 0x04
    539a:	fc 01       	movw	r30, r24
    539c:	20 83       	st	Z, r18
	
	return msg;
    539e:	89 81       	ldd	r24, Y+1	; 0x01
    53a0:	9a 81       	ldd	r25, Y+2	; 0x02
}
    53a2:	26 96       	adiw	r28, 0x06	; 6
    53a4:	0f b6       	in	r0, 0x3f	; 63
    53a6:	f8 94       	cli
    53a8:	de bf       	out	0x3e, r29	; 62
    53aa:	0f be       	out	0x3f, r0	; 63
    53ac:	cd bf       	out	0x3d, r28	; 61
    53ae:	df 91       	pop	r29
    53b0:	cf 91       	pop	r28
    53b2:	08 95       	ret

000053b4 <_ZN10helicopter8messages11SyncMessage12buildMessageEPh>:

void SyncMessage::buildMessage(byte *message)
{
    53b4:	cf 93       	push	r28
    53b6:	df 93       	push	r29
    53b8:	00 d0       	rcall	.+0      	; 0x53ba <_ZN10helicopter8messages11SyncMessage12buildMessageEPh+0x6>
    53ba:	1f 92       	push	r1
    53bc:	cd b7       	in	r28, 0x3d	; 61
    53be:	de b7       	in	r29, 0x3e	; 62
    53c0:	9a 83       	std	Y+2, r25	; 0x02
    53c2:	89 83       	std	Y+1, r24	; 0x01
    53c4:	7c 83       	std	Y+4, r23	; 0x04
    53c6:	6b 83       	std	Y+3, r22	; 0x03
	if (message != NULL)
    53c8:	8b 81       	ldd	r24, Y+3	; 0x03
    53ca:	9c 81       	ldd	r25, Y+4	; 0x04
    53cc:	00 97       	sbiw	r24, 0x00	; 0
    53ce:	41 f0       	breq	.+16     	; 0x53e0 <_ZN10helicopter8messages11SyncMessage12buildMessageEPh+0x2c>
	{
		msgType = message[0];
    53d0:	8b 81       	ldd	r24, Y+3	; 0x03
    53d2:	9c 81       	ldd	r25, Y+4	; 0x04
    53d4:	fc 01       	movw	r30, r24
    53d6:	20 81       	ld	r18, Z
    53d8:	89 81       	ldd	r24, Y+1	; 0x01
    53da:	9a 81       	ldd	r25, Y+2	; 0x02
    53dc:	fc 01       	movw	r30, r24
    53de:	22 83       	std	Z+2, r18	; 0x02
	}
}
    53e0:	0f 90       	pop	r0
    53e2:	0f 90       	pop	r0
    53e4:	0f 90       	pop	r0
    53e6:	0f 90       	pop	r0
    53e8:	df 91       	pop	r29
    53ea:	cf 91       	pop	r28
    53ec:	08 95       	ret

000053ee <_ZN10helicopter8messages7Message6encodeERPhRl>:
				
				/**
				 * Mem copies the value into the buffer pointer then increments
				 * the pointer location by the size of the value copied.
				 */
				void encode (byte *&buffPtr, long &val)
    53ee:	cf 93       	push	r28
    53f0:	df 93       	push	r29
    53f2:	00 d0       	rcall	.+0      	; 0x53f4 <_ZN10helicopter8messages7Message6encodeERPhRl+0x6>
    53f4:	00 d0       	rcall	.+0      	; 0x53f6 <_ZN10helicopter8messages7Message6encodeERPhRl+0x8>
    53f6:	cd b7       	in	r28, 0x3d	; 61
    53f8:	de b7       	in	r29, 0x3e	; 62
    53fa:	9a 83       	std	Y+2, r25	; 0x02
    53fc:	89 83       	std	Y+1, r24	; 0x01
    53fe:	7c 83       	std	Y+4, r23	; 0x04
    5400:	6b 83       	std	Y+3, r22	; 0x03
    5402:	5e 83       	std	Y+6, r21	; 0x06
    5404:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(buffPtr, &val, sizeof(val));
    5406:	8b 81       	ldd	r24, Y+3	; 0x03
    5408:	9c 81       	ldd	r25, Y+4	; 0x04
    540a:	fc 01       	movw	r30, r24
    540c:	80 81       	ld	r24, Z
    540e:	91 81       	ldd	r25, Z+1	; 0x01
    5410:	2d 81       	ldd	r18, Y+5	; 0x05
    5412:	3e 81       	ldd	r19, Y+6	; 0x06
    5414:	44 e0       	ldi	r20, 0x04	; 4
    5416:	50 e0       	ldi	r21, 0x00	; 0
    5418:	b9 01       	movw	r22, r18
    541a:	0e 94 d3 50 	call	0xa1a6	; 0xa1a6 <memcpy>
					buffPtr += sizeof(val);
    541e:	8b 81       	ldd	r24, Y+3	; 0x03
    5420:	9c 81       	ldd	r25, Y+4	; 0x04
    5422:	fc 01       	movw	r30, r24
    5424:	80 81       	ld	r24, Z
    5426:	91 81       	ldd	r25, Z+1	; 0x01
    5428:	9c 01       	movw	r18, r24
    542a:	2c 5f       	subi	r18, 0xFC	; 252
    542c:	3f 4f       	sbci	r19, 0xFF	; 255
    542e:	8b 81       	ldd	r24, Y+3	; 0x03
    5430:	9c 81       	ldd	r25, Y+4	; 0x04
    5432:	fc 01       	movw	r30, r24
    5434:	31 83       	std	Z+1, r19	; 0x01
    5436:	20 83       	st	Z, r18
				}
    5438:	26 96       	adiw	r28, 0x06	; 6
    543a:	0f b6       	in	r0, 0x3f	; 63
    543c:	f8 94       	cli
    543e:	de bf       	out	0x3e, r29	; 62
    5440:	0f be       	out	0x3f, r0	; 63
    5442:	cd bf       	out	0x3d, r28	; 61
    5444:	df 91       	pop	r29
    5446:	cf 91       	pop	r28
    5448:	08 95       	ret

0000544a <_ZN10helicopter8messages7Message6encodeERPhRf>:
				
				void encode (byte *&buffPtr, float &val)
    544a:	cf 93       	push	r28
    544c:	df 93       	push	r29
    544e:	00 d0       	rcall	.+0      	; 0x5450 <_ZN10helicopter8messages7Message6encodeERPhRf+0x6>
    5450:	00 d0       	rcall	.+0      	; 0x5452 <_ZN10helicopter8messages7Message6encodeERPhRf+0x8>
    5452:	cd b7       	in	r28, 0x3d	; 61
    5454:	de b7       	in	r29, 0x3e	; 62
    5456:	9a 83       	std	Y+2, r25	; 0x02
    5458:	89 83       	std	Y+1, r24	; 0x01
    545a:	7c 83       	std	Y+4, r23	; 0x04
    545c:	6b 83       	std	Y+3, r22	; 0x03
    545e:	5e 83       	std	Y+6, r21	; 0x06
    5460:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(buffPtr, &val, sizeof(val));
    5462:	8b 81       	ldd	r24, Y+3	; 0x03
    5464:	9c 81       	ldd	r25, Y+4	; 0x04
    5466:	fc 01       	movw	r30, r24
    5468:	80 81       	ld	r24, Z
    546a:	91 81       	ldd	r25, Z+1	; 0x01
    546c:	2d 81       	ldd	r18, Y+5	; 0x05
    546e:	3e 81       	ldd	r19, Y+6	; 0x06
    5470:	44 e0       	ldi	r20, 0x04	; 4
    5472:	50 e0       	ldi	r21, 0x00	; 0
    5474:	b9 01       	movw	r22, r18
    5476:	0e 94 d3 50 	call	0xa1a6	; 0xa1a6 <memcpy>
					buffPtr += sizeof(val);
    547a:	8b 81       	ldd	r24, Y+3	; 0x03
    547c:	9c 81       	ldd	r25, Y+4	; 0x04
    547e:	fc 01       	movw	r30, r24
    5480:	80 81       	ld	r24, Z
    5482:	91 81       	ldd	r25, Z+1	; 0x01
    5484:	9c 01       	movw	r18, r24
    5486:	2c 5f       	subi	r18, 0xFC	; 252
    5488:	3f 4f       	sbci	r19, 0xFF	; 255
    548a:	8b 81       	ldd	r24, Y+3	; 0x03
    548c:	9c 81       	ldd	r25, Y+4	; 0x04
    548e:	fc 01       	movw	r30, r24
    5490:	31 83       	std	Z+1, r19	; 0x01
    5492:	20 83       	st	Z, r18
				}				
    5494:	26 96       	adiw	r28, 0x06	; 6
    5496:	0f b6       	in	r0, 0x3f	; 63
    5498:	f8 94       	cli
    549a:	de bf       	out	0x3e, r29	; 62
    549c:	0f be       	out	0x3f, r0	; 63
    549e:	cd bf       	out	0x3d, r28	; 61
    54a0:	df 91       	pop	r29
    54a2:	cf 91       	pop	r28
    54a4:	08 95       	ret

000054a6 <_ZN10helicopter8messages7Message6encodeERPhRh>:
				{
					memcpy(buffPtr, &val, sizeof(val));
					buffPtr += sizeof(val);
				}		
				
				void encode (byte *&buffPtr, byte &val)
    54a6:	cf 93       	push	r28
    54a8:	df 93       	push	r29
    54aa:	00 d0       	rcall	.+0      	; 0x54ac <_ZN10helicopter8messages7Message6encodeERPhRh+0x6>
    54ac:	00 d0       	rcall	.+0      	; 0x54ae <_ZN10helicopter8messages7Message6encodeERPhRh+0x8>
    54ae:	cd b7       	in	r28, 0x3d	; 61
    54b0:	de b7       	in	r29, 0x3e	; 62
    54b2:	9a 83       	std	Y+2, r25	; 0x02
    54b4:	89 83       	std	Y+1, r24	; 0x01
    54b6:	7c 83       	std	Y+4, r23	; 0x04
    54b8:	6b 83       	std	Y+3, r22	; 0x03
    54ba:	5e 83       	std	Y+6, r21	; 0x06
    54bc:	4d 83       	std	Y+5, r20	; 0x05
				{
					*buffPtr = val;
    54be:	8b 81       	ldd	r24, Y+3	; 0x03
    54c0:	9c 81       	ldd	r25, Y+4	; 0x04
    54c2:	fc 01       	movw	r30, r24
    54c4:	80 81       	ld	r24, Z
    54c6:	91 81       	ldd	r25, Z+1	; 0x01
    54c8:	2d 81       	ldd	r18, Y+5	; 0x05
    54ca:	3e 81       	ldd	r19, Y+6	; 0x06
    54cc:	f9 01       	movw	r30, r18
    54ce:	20 81       	ld	r18, Z
    54d0:	fc 01       	movw	r30, r24
    54d2:	20 83       	st	Z, r18
					buffPtr += sizeof(val);
    54d4:	8b 81       	ldd	r24, Y+3	; 0x03
    54d6:	9c 81       	ldd	r25, Y+4	; 0x04
    54d8:	fc 01       	movw	r30, r24
    54da:	80 81       	ld	r24, Z
    54dc:	91 81       	ldd	r25, Z+1	; 0x01
    54de:	9c 01       	movw	r18, r24
    54e0:	2f 5f       	subi	r18, 0xFF	; 255
    54e2:	3f 4f       	sbci	r19, 0xFF	; 255
    54e4:	8b 81       	ldd	r24, Y+3	; 0x03
    54e6:	9c 81       	ldd	r25, Y+4	; 0x04
    54e8:	fc 01       	movw	r30, r24
    54ea:	31 83       	std	Z+1, r19	; 0x01
    54ec:	20 83       	st	Z, r18
				}
    54ee:	26 96       	adiw	r28, 0x06	; 6
    54f0:	0f b6       	in	r0, 0x3f	; 63
    54f2:	f8 94       	cli
    54f4:	de bf       	out	0x3e, r29	; 62
    54f6:	0f be       	out	0x3f, r0	; 63
    54f8:	cd bf       	out	0x3d, r28	; 61
    54fa:	df 91       	pop	r29
    54fc:	cf 91       	pop	r28
    54fe:	08 95       	ret

00005500 <_ZN10helicopter8messages7Message6decodeERPhRh>:
				
				/**
				 * Copies the the value at the buff pointer location into the given val parameter and
				 * increments the buffer by the sizeof(val)
				 */
				void decode (byte *&buffPtr, byte &val)
    5500:	cf 93       	push	r28
    5502:	df 93       	push	r29
    5504:	00 d0       	rcall	.+0      	; 0x5506 <_ZN10helicopter8messages7Message6decodeERPhRh+0x6>
    5506:	00 d0       	rcall	.+0      	; 0x5508 <_ZN10helicopter8messages7Message6decodeERPhRh+0x8>
    5508:	cd b7       	in	r28, 0x3d	; 61
    550a:	de b7       	in	r29, 0x3e	; 62
    550c:	9a 83       	std	Y+2, r25	; 0x02
    550e:	89 83       	std	Y+1, r24	; 0x01
    5510:	7c 83       	std	Y+4, r23	; 0x04
    5512:	6b 83       	std	Y+3, r22	; 0x03
    5514:	5e 83       	std	Y+6, r21	; 0x06
    5516:	4d 83       	std	Y+5, r20	; 0x05
				{
					val = *buffPtr;
    5518:	8b 81       	ldd	r24, Y+3	; 0x03
    551a:	9c 81       	ldd	r25, Y+4	; 0x04
    551c:	fc 01       	movw	r30, r24
    551e:	80 81       	ld	r24, Z
    5520:	91 81       	ldd	r25, Z+1	; 0x01
    5522:	fc 01       	movw	r30, r24
    5524:	20 81       	ld	r18, Z
    5526:	8d 81       	ldd	r24, Y+5	; 0x05
    5528:	9e 81       	ldd	r25, Y+6	; 0x06
    552a:	fc 01       	movw	r30, r24
    552c:	20 83       	st	Z, r18
					buffPtr += sizeof(val);
    552e:	8b 81       	ldd	r24, Y+3	; 0x03
    5530:	9c 81       	ldd	r25, Y+4	; 0x04
    5532:	fc 01       	movw	r30, r24
    5534:	80 81       	ld	r24, Z
    5536:	91 81       	ldd	r25, Z+1	; 0x01
    5538:	9c 01       	movw	r18, r24
    553a:	2f 5f       	subi	r18, 0xFF	; 255
    553c:	3f 4f       	sbci	r19, 0xFF	; 255
    553e:	8b 81       	ldd	r24, Y+3	; 0x03
    5540:	9c 81       	ldd	r25, Y+4	; 0x04
    5542:	fc 01       	movw	r30, r24
    5544:	31 83       	std	Z+1, r19	; 0x01
    5546:	20 83       	st	Z, r18
				}
    5548:	26 96       	adiw	r28, 0x06	; 6
    554a:	0f b6       	in	r0, 0x3f	; 63
    554c:	f8 94       	cli
    554e:	de bf       	out	0x3e, r29	; 62
    5550:	0f be       	out	0x3f, r0	; 63
    5552:	cd bf       	out	0x3d, r28	; 61
    5554:	df 91       	pop	r29
    5556:	cf 91       	pop	r28
    5558:	08 95       	ret

0000555a <_ZN10helicopter8messages7Message6decodeERPhRl>:
				
				void decode (byte *&buffPtr, long &val)
    555a:	cf 93       	push	r28
    555c:	df 93       	push	r29
    555e:	00 d0       	rcall	.+0      	; 0x5560 <_ZN10helicopter8messages7Message6decodeERPhRl+0x6>
    5560:	00 d0       	rcall	.+0      	; 0x5562 <_ZN10helicopter8messages7Message6decodeERPhRl+0x8>
    5562:	cd b7       	in	r28, 0x3d	; 61
    5564:	de b7       	in	r29, 0x3e	; 62
    5566:	9a 83       	std	Y+2, r25	; 0x02
    5568:	89 83       	std	Y+1, r24	; 0x01
    556a:	7c 83       	std	Y+4, r23	; 0x04
    556c:	6b 83       	std	Y+3, r22	; 0x03
    556e:	5e 83       	std	Y+6, r21	; 0x06
    5570:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(&val, buffPtr, sizeof(val));
    5572:	8b 81       	ldd	r24, Y+3	; 0x03
    5574:	9c 81       	ldd	r25, Y+4	; 0x04
    5576:	fc 01       	movw	r30, r24
    5578:	20 81       	ld	r18, Z
    557a:	31 81       	ldd	r19, Z+1	; 0x01
    557c:	8d 81       	ldd	r24, Y+5	; 0x05
    557e:	9e 81       	ldd	r25, Y+6	; 0x06
    5580:	44 e0       	ldi	r20, 0x04	; 4
    5582:	50 e0       	ldi	r21, 0x00	; 0
    5584:	b9 01       	movw	r22, r18
    5586:	0e 94 d3 50 	call	0xa1a6	; 0xa1a6 <memcpy>
					buffPtr += sizeof(val);
    558a:	8b 81       	ldd	r24, Y+3	; 0x03
    558c:	9c 81       	ldd	r25, Y+4	; 0x04
    558e:	fc 01       	movw	r30, r24
    5590:	80 81       	ld	r24, Z
    5592:	91 81       	ldd	r25, Z+1	; 0x01
    5594:	9c 01       	movw	r18, r24
    5596:	2c 5f       	subi	r18, 0xFC	; 252
    5598:	3f 4f       	sbci	r19, 0xFF	; 255
    559a:	8b 81       	ldd	r24, Y+3	; 0x03
    559c:	9c 81       	ldd	r25, Y+4	; 0x04
    559e:	fc 01       	movw	r30, r24
    55a0:	31 83       	std	Z+1, r19	; 0x01
    55a2:	20 83       	st	Z, r18
				}
    55a4:	26 96       	adiw	r28, 0x06	; 6
    55a6:	0f b6       	in	r0, 0x3f	; 63
    55a8:	f8 94       	cli
    55aa:	de bf       	out	0x3e, r29	; 62
    55ac:	0f be       	out	0x3f, r0	; 63
    55ae:	cd bf       	out	0x3d, r28	; 61
    55b0:	df 91       	pop	r29
    55b2:	cf 91       	pop	r28
    55b4:	08 95       	ret

000055b6 <_ZN10helicopter8messages7Message6decodeERPhRf>:
				
				void decode (byte *&buffPtr, float &val)
    55b6:	cf 93       	push	r28
    55b8:	df 93       	push	r29
    55ba:	00 d0       	rcall	.+0      	; 0x55bc <_ZN10helicopter8messages7Message6decodeERPhRf+0x6>
    55bc:	00 d0       	rcall	.+0      	; 0x55be <_ZN10helicopter8messages7Message6decodeERPhRf+0x8>
    55be:	cd b7       	in	r28, 0x3d	; 61
    55c0:	de b7       	in	r29, 0x3e	; 62
    55c2:	9a 83       	std	Y+2, r25	; 0x02
    55c4:	89 83       	std	Y+1, r24	; 0x01
    55c6:	7c 83       	std	Y+4, r23	; 0x04
    55c8:	6b 83       	std	Y+3, r22	; 0x03
    55ca:	5e 83       	std	Y+6, r21	; 0x06
    55cc:	4d 83       	std	Y+5, r20	; 0x05
				{
					memcpy(&val, buffPtr, sizeof(val));
    55ce:	8b 81       	ldd	r24, Y+3	; 0x03
    55d0:	9c 81       	ldd	r25, Y+4	; 0x04
    55d2:	fc 01       	movw	r30, r24
    55d4:	20 81       	ld	r18, Z
    55d6:	31 81       	ldd	r19, Z+1	; 0x01
    55d8:	8d 81       	ldd	r24, Y+5	; 0x05
    55da:	9e 81       	ldd	r25, Y+6	; 0x06
    55dc:	44 e0       	ldi	r20, 0x04	; 4
    55de:	50 e0       	ldi	r21, 0x00	; 0
    55e0:	b9 01       	movw	r22, r18
    55e2:	0e 94 d3 50 	call	0xa1a6	; 0xa1a6 <memcpy>
					buffPtr += sizeof(val);
    55e6:	8b 81       	ldd	r24, Y+3	; 0x03
    55e8:	9c 81       	ldd	r25, Y+4	; 0x04
    55ea:	fc 01       	movw	r30, r24
    55ec:	80 81       	ld	r24, Z
    55ee:	91 81       	ldd	r25, Z+1	; 0x01
    55f0:	9c 01       	movw	r18, r24
    55f2:	2c 5f       	subi	r18, 0xFC	; 252
    55f4:	3f 4f       	sbci	r19, 0xFF	; 255
    55f6:	8b 81       	ldd	r24, Y+3	; 0x03
    55f8:	9c 81       	ldd	r25, Y+4	; 0x04
    55fa:	fc 01       	movw	r30, r24
    55fc:	31 83       	std	Z+1, r19	; 0x01
    55fe:	20 83       	st	Z, r18
				}
    5600:	26 96       	adiw	r28, 0x06	; 6
    5602:	0f b6       	in	r0, 0x3f	; 63
    5604:	f8 94       	cli
    5606:	de bf       	out	0x3e, r29	; 62
    5608:	0f be       	out	0x3f, r0	; 63
    560a:	cd bf       	out	0x3d, r28	; 61
    560c:	df 91       	pop	r29
    560e:	cf 91       	pop	r28
    5610:	08 95       	ret

00005612 <_ZN10helicopter5model11SystemModel13MagYawDegreesEf>:
			 * Z axis is pointing up out of the FC
			 */
			

			float MagYawDegrees() const { return magYawDegrees; }
			void MagYawDegrees(float val) { magYawDegrees = val; }	
    5612:	cf 93       	push	r28
    5614:	df 93       	push	r29
    5616:	00 d0       	rcall	.+0      	; 0x5618 <_ZN10helicopter5model11SystemModel13MagYawDegreesEf+0x6>
    5618:	00 d0       	rcall	.+0      	; 0x561a <_ZN10helicopter5model11SystemModel13MagYawDegreesEf+0x8>
    561a:	cd b7       	in	r28, 0x3d	; 61
    561c:	de b7       	in	r29, 0x3e	; 62
    561e:	9a 83       	std	Y+2, r25	; 0x02
    5620:	89 83       	std	Y+1, r24	; 0x01
    5622:	4b 83       	std	Y+3, r20	; 0x03
    5624:	5c 83       	std	Y+4, r21	; 0x04
    5626:	6d 83       	std	Y+5, r22	; 0x05
    5628:	7e 83       	std	Y+6, r23	; 0x06
    562a:	29 81       	ldd	r18, Y+1	; 0x01
    562c:	3a 81       	ldd	r19, Y+2	; 0x02
    562e:	8b 81       	ldd	r24, Y+3	; 0x03
    5630:	9c 81       	ldd	r25, Y+4	; 0x04
    5632:	ad 81       	ldd	r26, Y+5	; 0x05
    5634:	be 81       	ldd	r27, Y+6	; 0x06
    5636:	f9 01       	movw	r30, r18
    5638:	81 83       	std	Z+1, r24	; 0x01
    563a:	92 83       	std	Z+2, r25	; 0x02
    563c:	a3 83       	std	Z+3, r26	; 0x03
    563e:	b4 83       	std	Z+4, r27	; 0x04
    5640:	26 96       	adiw	r28, 0x06	; 6
    5642:	0f b6       	in	r0, 0x3f	; 63
    5644:	f8 94       	cli
    5646:	de bf       	out	0x3e, r29	; 62
    5648:	0f be       	out	0x3f, r0	; 63
    564a:	cd bf       	out	0x3d, r28	; 61
    564c:	df 91       	pop	r29
    564e:	cf 91       	pop	r28
    5650:	08 95       	ret

00005652 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf>:
				
			float YawControlBeforeServoLimitsAdjustment() const {return yawControlBeforeServoLimitsAdjustment;}
			void YawControlBeforeServoLimitsAdjustment(float val) { yawControlBeforeServoLimitsAdjustment = val;}
				
			float YawVelocityDegreesPerSecond() const {return yawVelocityDegreesPerSecond;}
			void YawVelocityDegreesPerSecond(float val) { yawVelocityDegreesPerSecond = val;}
    5652:	cf 93       	push	r28
    5654:	df 93       	push	r29
    5656:	00 d0       	rcall	.+0      	; 0x5658 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf+0x6>
    5658:	00 d0       	rcall	.+0      	; 0x565a <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf+0x8>
    565a:	cd b7       	in	r28, 0x3d	; 61
    565c:	de b7       	in	r29, 0x3e	; 62
    565e:	9a 83       	std	Y+2, r25	; 0x02
    5660:	89 83       	std	Y+1, r24	; 0x01
    5662:	4b 83       	std	Y+3, r20	; 0x03
    5664:	5c 83       	std	Y+4, r21	; 0x04
    5666:	6d 83       	std	Y+5, r22	; 0x05
    5668:	7e 83       	std	Y+6, r23	; 0x06
    566a:	29 81       	ldd	r18, Y+1	; 0x01
    566c:	3a 81       	ldd	r19, Y+2	; 0x02
    566e:	8b 81       	ldd	r24, Y+3	; 0x03
    5670:	9c 81       	ldd	r25, Y+4	; 0x04
    5672:	ad 81       	ldd	r26, Y+5	; 0x05
    5674:	be 81       	ldd	r27, Y+6	; 0x06
    5676:	f9 01       	movw	r30, r18
    5678:	81 8b       	std	Z+17, r24	; 0x11
    567a:	92 8b       	std	Z+18, r25	; 0x12
    567c:	a3 8b       	std	Z+19, r26	; 0x13
    567e:	b4 8b       	std	Z+20, r27	; 0x14
    5680:	26 96       	adiw	r28, 0x06	; 6
    5682:	0f b6       	in	r0, 0x3f	; 63
    5684:	f8 94       	cli
    5686:	de bf       	out	0x3e, r29	; 62
    5688:	0f be       	out	0x3f, r0	; 63
    568a:	cd bf       	out	0x3d, r28	; 61
    568c:	df 91       	pop	r29
    568e:	cf 91       	pop	r28
    5690:	08 95       	ret

00005692 <_ZNK10helicopter5model11SystemModel15YawProportionalEv>:
			void ReferenceYawVelocityDegreesPerSecond(float val) { referenceYawVelocityDegreesPerSecond = val;}
				
			float YawIntegral() const {return yawIntegral;}
			void YawIntegral(float val) { yawIntegral = val;}

			float YawProportional() const {return yawProportional;}
    5692:	cf 93       	push	r28
    5694:	df 93       	push	r29
    5696:	1f 92       	push	r1
    5698:	1f 92       	push	r1
    569a:	cd b7       	in	r28, 0x3d	; 61
    569c:	de b7       	in	r29, 0x3e	; 62
    569e:	9a 83       	std	Y+2, r25	; 0x02
    56a0:	89 83       	std	Y+1, r24	; 0x01
    56a2:	89 81       	ldd	r24, Y+1	; 0x01
    56a4:	9a 81       	ldd	r25, Y+2	; 0x02
    56a6:	fc 01       	movw	r30, r24
    56a8:	85 8d       	ldd	r24, Z+29	; 0x1d
    56aa:	96 8d       	ldd	r25, Z+30	; 0x1e
    56ac:	a7 8d       	ldd	r26, Z+31	; 0x1f
    56ae:	b0 a1       	ldd	r27, Z+32	; 0x20
    56b0:	bc 01       	movw	r22, r24
    56b2:	cd 01       	movw	r24, r26
    56b4:	0f 90       	pop	r0
    56b6:	0f 90       	pop	r0
    56b8:	df 91       	pop	r29
    56ba:	cf 91       	pop	r28
    56bc:	08 95       	ret

000056be <_ZNK10helicopter5model11SystemModel18YawDerivativeErrorEv>:
			void YawProportional(float val) { yawProportional = val;}

			float YawDerivativeError() const {return yawDerivativeError;}
    56be:	cf 93       	push	r28
    56c0:	df 93       	push	r29
    56c2:	1f 92       	push	r1
    56c4:	1f 92       	push	r1
    56c6:	cd b7       	in	r28, 0x3d	; 61
    56c8:	de b7       	in	r29, 0x3e	; 62
    56ca:	9a 83       	std	Y+2, r25	; 0x02
    56cc:	89 83       	std	Y+1, r24	; 0x01
    56ce:	89 81       	ldd	r24, Y+1	; 0x01
    56d0:	9a 81       	ldd	r25, Y+2	; 0x02
    56d2:	fc 01       	movw	r30, r24
    56d4:	81 a1       	ldd	r24, Z+33	; 0x21
    56d6:	92 a1       	ldd	r25, Z+34	; 0x22
    56d8:	a3 a1       	ldd	r26, Z+35	; 0x23
    56da:	b4 a1       	ldd	r27, Z+36	; 0x24
    56dc:	bc 01       	movw	r22, r24
    56de:	cd 01       	movw	r24, r26
    56e0:	0f 90       	pop	r0
    56e2:	0f 90       	pop	r0
    56e4:	df 91       	pop	r29
    56e6:	cf 91       	pop	r28
    56e8:	08 95       	ret

000056ea <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf>:

			float LongitudeControl() const {return longitudeControl;}
			void LongitudeControl(float val) { longitudeControl = val;}
				
			float XVelocityMetersPerSecond() const {return xVelocityMetersPerSecond;}
			void XVelocityMetersPerSecond(float val) { xVelocityMetersPerSecond = val;}
    56ea:	cf 93       	push	r28
    56ec:	df 93       	push	r29
    56ee:	00 d0       	rcall	.+0      	; 0x56f0 <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf+0x6>
    56f0:	00 d0       	rcall	.+0      	; 0x56f2 <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf+0x8>
    56f2:	cd b7       	in	r28, 0x3d	; 61
    56f4:	de b7       	in	r29, 0x3e	; 62
    56f6:	9a 83       	std	Y+2, r25	; 0x02
    56f8:	89 83       	std	Y+1, r24	; 0x01
    56fa:	4b 83       	std	Y+3, r20	; 0x03
    56fc:	5c 83       	std	Y+4, r21	; 0x04
    56fe:	6d 83       	std	Y+5, r22	; 0x05
    5700:	7e 83       	std	Y+6, r23	; 0x06
    5702:	29 81       	ldd	r18, Y+1	; 0x01
    5704:	3a 81       	ldd	r19, Y+2	; 0x02
    5706:	8b 81       	ldd	r24, Y+3	; 0x03
    5708:	9c 81       	ldd	r25, Y+4	; 0x04
    570a:	ad 81       	ldd	r26, Y+5	; 0x05
    570c:	be 81       	ldd	r27, Y+6	; 0x06
    570e:	f9 01       	movw	r30, r18
    5710:	85 ab       	std	Z+53, r24	; 0x35
    5712:	96 ab       	std	Z+54, r25	; 0x36
    5714:	a7 ab       	std	Z+55, r26	; 0x37
    5716:	b0 af       	std	Z+56, r27	; 0x38
    5718:	26 96       	adiw	r28, 0x06	; 6
    571a:	0f b6       	in	r0, 0x3f	; 63
    571c:	f8 94       	cli
    571e:	de bf       	out	0x3e, r29	; 62
    5720:	0f be       	out	0x3f, r0	; 63
    5722:	cd bf       	out	0x3d, r28	; 61
    5724:	df 91       	pop	r29
    5726:	cf 91       	pop	r28
    5728:	08 95       	ret

0000572a <_ZNK10helicopter5model11SystemModel13XProportionalEv>:
			void ReferenceXVelocityMetersPerSecond(float val) { referenceXVelocityMetersPerSecond = val;}
				
			float XLongitudeOuterLoopSetpoint() const {return xLongitudeOuterLoopSetpoint;}
			void XLongitudeOuterLoopSetpoint(float val) { xLongitudeOuterLoopSetpoint = val;}
				
			float XProportional() const {return xProportional;}
    572a:	cf 93       	push	r28
    572c:	df 93       	push	r29
    572e:	1f 92       	push	r1
    5730:	1f 92       	push	r1
    5732:	cd b7       	in	r28, 0x3d	; 61
    5734:	de b7       	in	r29, 0x3e	; 62
    5736:	9a 83       	std	Y+2, r25	; 0x02
    5738:	89 83       	std	Y+1, r24	; 0x01
    573a:	89 81       	ldd	r24, Y+1	; 0x01
    573c:	9a 81       	ldd	r25, Y+2	; 0x02
    573e:	8f 5b       	subi	r24, 0xBF	; 191
    5740:	9f 4f       	sbci	r25, 0xFF	; 255
    5742:	fc 01       	movw	r30, r24
    5744:	80 81       	ld	r24, Z
    5746:	91 81       	ldd	r25, Z+1	; 0x01
    5748:	a2 81       	ldd	r26, Z+2	; 0x02
    574a:	b3 81       	ldd	r27, Z+3	; 0x03
    574c:	bc 01       	movw	r22, r24
    574e:	cd 01       	movw	r24, r26
    5750:	0f 90       	pop	r0
    5752:	0f 90       	pop	r0
    5754:	df 91       	pop	r29
    5756:	cf 91       	pop	r28
    5758:	08 95       	ret

0000575a <_ZNK10helicopter5model11SystemModel16XDerivativeErrorEv>:
			void XProportional(float val) { xProportional = val;}
				
			float XIntegral() const {return xIntegral;}
			void XIntegral(float val) { xIntegral = val;}
				
			float XDerivativeError() const {return xDerivativeError;}
    575a:	cf 93       	push	r28
    575c:	df 93       	push	r29
    575e:	1f 92       	push	r1
    5760:	1f 92       	push	r1
    5762:	cd b7       	in	r28, 0x3d	; 61
    5764:	de b7       	in	r29, 0x3e	; 62
    5766:	9a 83       	std	Y+2, r25	; 0x02
    5768:	89 83       	std	Y+1, r24	; 0x01
    576a:	89 81       	ldd	r24, Y+1	; 0x01
    576c:	9a 81       	ldd	r25, Y+2	; 0x02
    576e:	87 5b       	subi	r24, 0xB7	; 183
    5770:	9f 4f       	sbci	r25, 0xFF	; 255
    5772:	fc 01       	movw	r30, r24
    5774:	80 81       	ld	r24, Z
    5776:	91 81       	ldd	r25, Z+1	; 0x01
    5778:	a2 81       	ldd	r26, Z+2	; 0x02
    577a:	b3 81       	ldd	r27, Z+3	; 0x03
    577c:	bc 01       	movw	r22, r24
    577e:	cd 01       	movw	r24, r26
    5780:	0f 90       	pop	r0
    5782:	0f 90       	pop	r0
    5784:	df 91       	pop	r29
    5786:	cf 91       	pop	r28
    5788:	08 95       	ret

0000578a <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf>:
			void XDerivativeError(float val) { xDerivativeError = val;}
				
		
			float ThetaPitchDegrees() const {return thetaPitchDegrees;}
			void ThetaPitchDegrees(float val) {thetaPitchDegrees = val;}
    578a:	cf 93       	push	r28
    578c:	df 93       	push	r29
    578e:	00 d0       	rcall	.+0      	; 0x5790 <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf+0x6>
    5790:	00 d0       	rcall	.+0      	; 0x5792 <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf+0x8>
    5792:	cd b7       	in	r28, 0x3d	; 61
    5794:	de b7       	in	r29, 0x3e	; 62
    5796:	9a 83       	std	Y+2, r25	; 0x02
    5798:	89 83       	std	Y+1, r24	; 0x01
    579a:	4b 83       	std	Y+3, r20	; 0x03
    579c:	5c 83       	std	Y+4, r21	; 0x04
    579e:	6d 83       	std	Y+5, r22	; 0x05
    57a0:	7e 83       	std	Y+6, r23	; 0x06
    57a2:	89 81       	ldd	r24, Y+1	; 0x01
    57a4:	9a 81       	ldd	r25, Y+2	; 0x02
    57a6:	9c 01       	movw	r18, r24
    57a8:	23 5b       	subi	r18, 0xB3	; 179
    57aa:	3f 4f       	sbci	r19, 0xFF	; 255
    57ac:	8b 81       	ldd	r24, Y+3	; 0x03
    57ae:	9c 81       	ldd	r25, Y+4	; 0x04
    57b0:	ad 81       	ldd	r26, Y+5	; 0x05
    57b2:	be 81       	ldd	r27, Y+6	; 0x06
    57b4:	f9 01       	movw	r30, r18
    57b6:	80 83       	st	Z, r24
    57b8:	91 83       	std	Z+1, r25	; 0x01
    57ba:	a2 83       	std	Z+2, r26	; 0x02
    57bc:	b3 83       	std	Z+3, r27	; 0x03
    57be:	26 96       	adiw	r28, 0x06	; 6
    57c0:	0f b6       	in	r0, 0x3f	; 63
    57c2:	f8 94       	cli
    57c4:	de bf       	out	0x3e, r29	; 62
    57c6:	0f be       	out	0x3f, r0	; 63
    57c8:	cd bf       	out	0x3d, r28	; 61
    57ca:	df 91       	pop	r29
    57cc:	cf 91       	pop	r28
    57ce:	08 95       	ret

000057d0 <_ZN10helicopter5model11SystemModel33PitchAngularVelocityRadsPerSecondEf>:
		
			float PitchAngularVelocityRadsPerSecond() const {return pitchAngularVelocityRadsPerSecond;}
			void PitchAngularVelocityRadsPerSecond(float val) {pitchAngularVelocityRadsPerSecond = val;}
    57d0:	cf 93       	push	r28
    57d2:	df 93       	push	r29
    57d4:	00 d0       	rcall	.+0      	; 0x57d6 <_ZN10helicopter5model11SystemModel33PitchAngularVelocityRadsPerSecondEf+0x6>
    57d6:	00 d0       	rcall	.+0      	; 0x57d8 <_ZN10helicopter5model11SystemModel33PitchAngularVelocityRadsPerSecondEf+0x8>
    57d8:	cd b7       	in	r28, 0x3d	; 61
    57da:	de b7       	in	r29, 0x3e	; 62
    57dc:	9a 83       	std	Y+2, r25	; 0x02
    57de:	89 83       	std	Y+1, r24	; 0x01
    57e0:	4b 83       	std	Y+3, r20	; 0x03
    57e2:	5c 83       	std	Y+4, r21	; 0x04
    57e4:	6d 83       	std	Y+5, r22	; 0x05
    57e6:	7e 83       	std	Y+6, r23	; 0x06
    57e8:	89 81       	ldd	r24, Y+1	; 0x01
    57ea:	9a 81       	ldd	r25, Y+2	; 0x02
    57ec:	9c 01       	movw	r18, r24
    57ee:	2f 5a       	subi	r18, 0xAF	; 175
    57f0:	3f 4f       	sbci	r19, 0xFF	; 255
    57f2:	8b 81       	ldd	r24, Y+3	; 0x03
    57f4:	9c 81       	ldd	r25, Y+4	; 0x04
    57f6:	ad 81       	ldd	r26, Y+5	; 0x05
    57f8:	be 81       	ldd	r27, Y+6	; 0x06
    57fa:	f9 01       	movw	r30, r18
    57fc:	80 83       	st	Z, r24
    57fe:	91 83       	std	Z+1, r25	; 0x01
    5800:	a2 83       	std	Z+2, r26	; 0x02
    5802:	b3 83       	std	Z+3, r27	; 0x03
    5804:	26 96       	adiw	r28, 0x06	; 6
    5806:	0f b6       	in	r0, 0x3f	; 63
    5808:	f8 94       	cli
    580a:	de bf       	out	0x3e, r29	; 62
    580c:	0f be       	out	0x3f, r0	; 63
    580e:	cd bf       	out	0x3d, r28	; 61
    5810:	df 91       	pop	r29
    5812:	cf 91       	pop	r28
    5814:	08 95       	ret

00005816 <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf>:

			float LateralControl() const {return lateralControl;}
			void LateralControl(float val) { lateralControl = val;}

			float YVelocityMetersPerSecond() const {return yVelocityMetersPerSecond;}
			void YVelocityMetersPerSecond(float val) { yVelocityMetersPerSecond = val;}
    5816:	cf 93       	push	r28
    5818:	df 93       	push	r29
    581a:	00 d0       	rcall	.+0      	; 0x581c <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf+0x6>
    581c:	00 d0       	rcall	.+0      	; 0x581e <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf+0x8>
    581e:	cd b7       	in	r28, 0x3d	; 61
    5820:	de b7       	in	r29, 0x3e	; 62
    5822:	9a 83       	std	Y+2, r25	; 0x02
    5824:	89 83       	std	Y+1, r24	; 0x01
    5826:	4b 83       	std	Y+3, r20	; 0x03
    5828:	5c 83       	std	Y+4, r21	; 0x04
    582a:	6d 83       	std	Y+5, r22	; 0x05
    582c:	7e 83       	std	Y+6, r23	; 0x06
    582e:	89 81       	ldd	r24, Y+1	; 0x01
    5830:	9a 81       	ldd	r25, Y+2	; 0x02
    5832:	9c 01       	movw	r18, r24
    5834:	2b 59       	subi	r18, 0x9B	; 155
    5836:	3f 4f       	sbci	r19, 0xFF	; 255
    5838:	8b 81       	ldd	r24, Y+3	; 0x03
    583a:	9c 81       	ldd	r25, Y+4	; 0x04
    583c:	ad 81       	ldd	r26, Y+5	; 0x05
    583e:	be 81       	ldd	r27, Y+6	; 0x06
    5840:	f9 01       	movw	r30, r18
    5842:	80 83       	st	Z, r24
    5844:	91 83       	std	Z+1, r25	; 0x01
    5846:	a2 83       	std	Z+2, r26	; 0x02
    5848:	b3 83       	std	Z+3, r27	; 0x03
    584a:	26 96       	adiw	r28, 0x06	; 6
    584c:	0f b6       	in	r0, 0x3f	; 63
    584e:	f8 94       	cli
    5850:	de bf       	out	0x3e, r29	; 62
    5852:	0f be       	out	0x3f, r0	; 63
    5854:	cd bf       	out	0x3d, r28	; 61
    5856:	df 91       	pop	r29
    5858:	cf 91       	pop	r28
    585a:	08 95       	ret

0000585c <_ZNK10helicopter5model11SystemModel13YProportionalEv>:
			void ReferenceYVelocityMetersPerSecond(float val) { referenceYVelocityMetersPerSecond = val;}

			float YLateralOuterLoopSetpoint() const {return yLateralOuterLoopSetpoint;}
			void YLateralOuterLoopSetpoint(float val) { yLateralOuterLoopSetpoint = val;}

			float YProportional() const {return yProportional;}
    585c:	cf 93       	push	r28
    585e:	df 93       	push	r29
    5860:	1f 92       	push	r1
    5862:	1f 92       	push	r1
    5864:	cd b7       	in	r28, 0x3d	; 61
    5866:	de b7       	in	r29, 0x3e	; 62
    5868:	9a 83       	std	Y+2, r25	; 0x02
    586a:	89 83       	std	Y+1, r24	; 0x01
    586c:	89 81       	ldd	r24, Y+1	; 0x01
    586e:	9a 81       	ldd	r25, Y+2	; 0x02
    5870:	8f 58       	subi	r24, 0x8F	; 143
    5872:	9f 4f       	sbci	r25, 0xFF	; 255
    5874:	fc 01       	movw	r30, r24
    5876:	80 81       	ld	r24, Z
    5878:	91 81       	ldd	r25, Z+1	; 0x01
    587a:	a2 81       	ldd	r26, Z+2	; 0x02
    587c:	b3 81       	ldd	r27, Z+3	; 0x03
    587e:	bc 01       	movw	r22, r24
    5880:	cd 01       	movw	r24, r26
    5882:	0f 90       	pop	r0
    5884:	0f 90       	pop	r0
    5886:	df 91       	pop	r29
    5888:	cf 91       	pop	r28
    588a:	08 95       	ret

0000588c <_ZNK10helicopter5model11SystemModel16YDerivativeErrorEv>:
			void YProportional(float val) { yProportional = val;}

			float YIntegral() const {return yIntegral;}
			void YIntegral(float val) { yIntegral = val;}

			float YDerivativeError() const {return yDerivativeError;}
    588c:	cf 93       	push	r28
    588e:	df 93       	push	r29
    5890:	1f 92       	push	r1
    5892:	1f 92       	push	r1
    5894:	cd b7       	in	r28, 0x3d	; 61
    5896:	de b7       	in	r29, 0x3e	; 62
    5898:	9a 83       	std	Y+2, r25	; 0x02
    589a:	89 83       	std	Y+1, r24	; 0x01
    589c:	89 81       	ldd	r24, Y+1	; 0x01
    589e:	9a 81       	ldd	r25, Y+2	; 0x02
    58a0:	87 58       	subi	r24, 0x87	; 135
    58a2:	9f 4f       	sbci	r25, 0xFF	; 255
    58a4:	fc 01       	movw	r30, r24
    58a6:	80 81       	ld	r24, Z
    58a8:	91 81       	ldd	r25, Z+1	; 0x01
    58aa:	a2 81       	ldd	r26, Z+2	; 0x02
    58ac:	b3 81       	ldd	r27, Z+3	; 0x03
    58ae:	bc 01       	movw	r22, r24
    58b0:	cd 01       	movw	r24, r26
    58b2:	0f 90       	pop	r0
    58b4:	0f 90       	pop	r0
    58b6:	df 91       	pop	r29
    58b8:	cf 91       	pop	r28
    58ba:	08 95       	ret

000058bc <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf>:
			void YDerivativeError(float val) { yDerivativeError = val;}


			float PhiRollDegrees() const {return phiRollDegrees;}
			void PhiRollDegrees(float val) {phiRollDegrees = val;}
    58bc:	cf 93       	push	r28
    58be:	df 93       	push	r29
    58c0:	00 d0       	rcall	.+0      	; 0x58c2 <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf+0x6>
    58c2:	00 d0       	rcall	.+0      	; 0x58c4 <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf+0x8>
    58c4:	cd b7       	in	r28, 0x3d	; 61
    58c6:	de b7       	in	r29, 0x3e	; 62
    58c8:	9a 83       	std	Y+2, r25	; 0x02
    58ca:	89 83       	std	Y+1, r24	; 0x01
    58cc:	4b 83       	std	Y+3, r20	; 0x03
    58ce:	5c 83       	std	Y+4, r21	; 0x04
    58d0:	6d 83       	std	Y+5, r22	; 0x05
    58d2:	7e 83       	std	Y+6, r23	; 0x06
    58d4:	89 81       	ldd	r24, Y+1	; 0x01
    58d6:	9a 81       	ldd	r25, Y+2	; 0x02
    58d8:	9c 01       	movw	r18, r24
    58da:	23 58       	subi	r18, 0x83	; 131
    58dc:	3f 4f       	sbci	r19, 0xFF	; 255
    58de:	8b 81       	ldd	r24, Y+3	; 0x03
    58e0:	9c 81       	ldd	r25, Y+4	; 0x04
    58e2:	ad 81       	ldd	r26, Y+5	; 0x05
    58e4:	be 81       	ldd	r27, Y+6	; 0x06
    58e6:	f9 01       	movw	r30, r18
    58e8:	80 83       	st	Z, r24
    58ea:	91 83       	std	Z+1, r25	; 0x01
    58ec:	a2 83       	std	Z+2, r26	; 0x02
    58ee:	b3 83       	std	Z+3, r27	; 0x03
    58f0:	26 96       	adiw	r28, 0x06	; 6
    58f2:	0f b6       	in	r0, 0x3f	; 63
    58f4:	f8 94       	cli
    58f6:	de bf       	out	0x3e, r29	; 62
    58f8:	0f be       	out	0x3f, r0	; 63
    58fa:	cd bf       	out	0x3d, r28	; 61
    58fc:	df 91       	pop	r29
    58fe:	cf 91       	pop	r28
    5900:	08 95       	ret

00005902 <_ZN10helicopter5model11SystemModel32RollAngularVelocityRadsPerSecondEf>:

			float RollAngularVelocityRadsPerSecond() const {return rollAngularVelocityRadsPerSecond;}
			void RollAngularVelocityRadsPerSecond(float val) {rollAngularVelocityRadsPerSecond = val;}
    5902:	cf 93       	push	r28
    5904:	df 93       	push	r29
    5906:	00 d0       	rcall	.+0      	; 0x5908 <_ZN10helicopter5model11SystemModel32RollAngularVelocityRadsPerSecondEf+0x6>
    5908:	00 d0       	rcall	.+0      	; 0x590a <_ZN10helicopter5model11SystemModel32RollAngularVelocityRadsPerSecondEf+0x8>
    590a:	cd b7       	in	r28, 0x3d	; 61
    590c:	de b7       	in	r29, 0x3e	; 62
    590e:	9a 83       	std	Y+2, r25	; 0x02
    5910:	89 83       	std	Y+1, r24	; 0x01
    5912:	4b 83       	std	Y+3, r20	; 0x03
    5914:	5c 83       	std	Y+4, r21	; 0x04
    5916:	6d 83       	std	Y+5, r22	; 0x05
    5918:	7e 83       	std	Y+6, r23	; 0x06
    591a:	89 81       	ldd	r24, Y+1	; 0x01
    591c:	9a 81       	ldd	r25, Y+2	; 0x02
    591e:	9c 01       	movw	r18, r24
    5920:	2f 57       	subi	r18, 0x7F	; 127
    5922:	3f 4f       	sbci	r19, 0xFF	; 255
    5924:	8b 81       	ldd	r24, Y+3	; 0x03
    5926:	9c 81       	ldd	r25, Y+4	; 0x04
    5928:	ad 81       	ldd	r26, Y+5	; 0x05
    592a:	be 81       	ldd	r27, Y+6	; 0x06
    592c:	f9 01       	movw	r30, r18
    592e:	80 83       	st	Z, r24
    5930:	91 83       	std	Z+1, r25	; 0x01
    5932:	a2 83       	std	Z+2, r26	; 0x02
    5934:	b3 83       	std	Z+3, r27	; 0x03
    5936:	26 96       	adiw	r28, 0x06	; 6
    5938:	0f b6       	in	r0, 0x3f	; 63
    593a:	f8 94       	cli
    593c:	de bf       	out	0x3e, r29	; 62
    593e:	0f be       	out	0x3f, r0	; 63
    5940:	cd bf       	out	0x3d, r28	; 61
    5942:	df 91       	pop	r29
    5944:	cf 91       	pop	r28
    5946:	08 95       	ret

00005948 <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf>:
						
						
						

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
			void AltitudeFeetAgl(float val) { altitudeFeetAgl = val; }
    5948:	cf 93       	push	r28
    594a:	df 93       	push	r29
    594c:	00 d0       	rcall	.+0      	; 0x594e <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf+0x6>
    594e:	00 d0       	rcall	.+0      	; 0x5950 <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf+0x8>
    5950:	cd b7       	in	r28, 0x3d	; 61
    5952:	de b7       	in	r29, 0x3e	; 62
    5954:	9a 83       	std	Y+2, r25	; 0x02
    5956:	89 83       	std	Y+1, r24	; 0x01
    5958:	4b 83       	std	Y+3, r20	; 0x03
    595a:	5c 83       	std	Y+4, r21	; 0x04
    595c:	6d 83       	std	Y+5, r22	; 0x05
    595e:	7e 83       	std	Y+6, r23	; 0x06
    5960:	89 81       	ldd	r24, Y+1	; 0x01
    5962:	9a 81       	ldd	r25, Y+2	; 0x02
    5964:	9c 01       	movw	r18, r24
    5966:	2b 57       	subi	r18, 0x7B	; 123
    5968:	3f 4f       	sbci	r19, 0xFF	; 255
    596a:	8b 81       	ldd	r24, Y+3	; 0x03
    596c:	9c 81       	ldd	r25, Y+4	; 0x04
    596e:	ad 81       	ldd	r26, Y+5	; 0x05
    5970:	be 81       	ldd	r27, Y+6	; 0x06
    5972:	f9 01       	movw	r30, r18
    5974:	80 83       	st	Z, r24
    5976:	91 83       	std	Z+1, r25	; 0x01
    5978:	a2 83       	std	Z+2, r26	; 0x02
    597a:	b3 83       	std	Z+3, r27	; 0x03
    597c:	26 96       	adiw	r28, 0x06	; 6
    597e:	0f b6       	in	r0, 0x3f	; 63
    5980:	f8 94       	cli
    5982:	de bf       	out	0x3e, r29	; 62
    5984:	0f be       	out	0x3f, r0	; 63
    5986:	cd bf       	out	0x3d, r28	; 61
    5988:	df 91       	pop	r29
    598a:	cf 91       	pop	r28
    598c:	08 95       	ret

0000598e <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf>:

			float MainRotorControlBeforeServoLimitsAdjustment() const {return mainRotorControlBeforeServoLimitsAdjustment;}
			void MainRotorControlBeforeServoLimitsAdjustment(float val) { mainRotorControlBeforeServoLimitsAdjustment = val;}

			float ZVelocityFeetPerSecond() const {return zVelocityFeetPerSecond;}
			void ZVelocityFeetPerSecond(float val) { zVelocityFeetPerSecond = val;}
    598e:	cf 93       	push	r28
    5990:	df 93       	push	r29
    5992:	00 d0       	rcall	.+0      	; 0x5994 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf+0x6>
    5994:	00 d0       	rcall	.+0      	; 0x5996 <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf+0x8>
    5996:	cd b7       	in	r28, 0x3d	; 61
    5998:	de b7       	in	r29, 0x3e	; 62
    599a:	9a 83       	std	Y+2, r25	; 0x02
    599c:	89 83       	std	Y+1, r24	; 0x01
    599e:	4b 83       	std	Y+3, r20	; 0x03
    59a0:	5c 83       	std	Y+4, r21	; 0x04
    59a2:	6d 83       	std	Y+5, r22	; 0x05
    59a4:	7e 83       	std	Y+6, r23	; 0x06
    59a6:	89 81       	ldd	r24, Y+1	; 0x01
    59a8:	9a 81       	ldd	r25, Y+2	; 0x02
    59aa:	9c 01       	movw	r18, r24
    59ac:	27 56       	subi	r18, 0x67	; 103
    59ae:	3f 4f       	sbci	r19, 0xFF	; 255
    59b0:	8b 81       	ldd	r24, Y+3	; 0x03
    59b2:	9c 81       	ldd	r25, Y+4	; 0x04
    59b4:	ad 81       	ldd	r26, Y+5	; 0x05
    59b6:	be 81       	ldd	r27, Y+6	; 0x06
    59b8:	f9 01       	movw	r30, r18
    59ba:	80 83       	st	Z, r24
    59bc:	91 83       	std	Z+1, r25	; 0x01
    59be:	a2 83       	std	Z+2, r26	; 0x02
    59c0:	b3 83       	std	Z+3, r27	; 0x03
    59c2:	26 96       	adiw	r28, 0x06	; 6
    59c4:	0f b6       	in	r0, 0x3f	; 63
    59c6:	f8 94       	cli
    59c8:	de bf       	out	0x3e, r29	; 62
    59ca:	0f be       	out	0x3f, r0	; 63
    59cc:	cd bf       	out	0x3d, r28	; 61
    59ce:	df 91       	pop	r29
    59d0:	cf 91       	pop	r28
    59d2:	08 95       	ret

000059d4 <_ZNK10helicopter5model11SystemModel13ZProportionalEv>:
			void ReferenceZVelocityFeetPerSecond(float val) { referenceZVelocityFeetPerSecond = val;}

			float ZIntegral() const {return zIntegral;}
			void ZIntegral(float val) { zIntegral = val;}

			float ZProportional() const {return zProportional;}
    59d4:	cf 93       	push	r28
    59d6:	df 93       	push	r29
    59d8:	1f 92       	push	r1
    59da:	1f 92       	push	r1
    59dc:	cd b7       	in	r28, 0x3d	; 61
    59de:	de b7       	in	r29, 0x3e	; 62
    59e0:	9a 83       	std	Y+2, r25	; 0x02
    59e2:	89 83       	std	Y+1, r24	; 0x01
    59e4:	89 81       	ldd	r24, Y+1	; 0x01
    59e6:	9a 81       	ldd	r25, Y+2	; 0x02
    59e8:	8b 55       	subi	r24, 0x5B	; 91
    59ea:	9f 4f       	sbci	r25, 0xFF	; 255
    59ec:	fc 01       	movw	r30, r24
    59ee:	80 81       	ld	r24, Z
    59f0:	91 81       	ldd	r25, Z+1	; 0x01
    59f2:	a2 81       	ldd	r26, Z+2	; 0x02
    59f4:	b3 81       	ldd	r27, Z+3	; 0x03
    59f6:	bc 01       	movw	r22, r24
    59f8:	cd 01       	movw	r24, r26
    59fa:	0f 90       	pop	r0
    59fc:	0f 90       	pop	r0
    59fe:	df 91       	pop	r29
    5a00:	cf 91       	pop	r28
    5a02:	08 95       	ret

00005a04 <_ZNK10helicopter5model11SystemModel16ZDerivativeErrorEv>:
			void ZProportional(float val) { zProportional = val;}

			float ZDerivativeError() const {return zDerivativeError;}
    5a04:	cf 93       	push	r28
    5a06:	df 93       	push	r29
    5a08:	1f 92       	push	r1
    5a0a:	1f 92       	push	r1
    5a0c:	cd b7       	in	r28, 0x3d	; 61
    5a0e:	de b7       	in	r29, 0x3e	; 62
    5a10:	9a 83       	std	Y+2, r25	; 0x02
    5a12:	89 83       	std	Y+1, r24	; 0x01
    5a14:	89 81       	ldd	r24, Y+1	; 0x01
    5a16:	9a 81       	ldd	r25, Y+2	; 0x02
    5a18:	87 55       	subi	r24, 0x57	; 87
    5a1a:	9f 4f       	sbci	r25, 0xFF	; 255
    5a1c:	fc 01       	movw	r30, r24
    5a1e:	80 81       	ld	r24, Z
    5a20:	91 81       	ldd	r25, Z+1	; 0x01
    5a22:	a2 81       	ldd	r26, Z+2	; 0x02
    5a24:	b3 81       	ldd	r27, Z+3	; 0x03
    5a26:	bc 01       	movw	r22, r24
    5a28:	cd 01       	movw	r24, r26
    5a2a:	0f 90       	pop	r0
    5a2c:	0f 90       	pop	r0
    5a2e:	df 91       	pop	r29
    5a30:	cf 91       	pop	r28
    5a32:	08 95       	ret

00005a34 <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf>:
			void ZDerivativeError(float val) { zDerivativeError = val;}						
						
						
			float LatitudeDegrees() const {return latitudeDegrees;}
			void LatitudeDegrees(float val) { latitudeDegrees = val;}						
    5a34:	cf 93       	push	r28
    5a36:	df 93       	push	r29
    5a38:	00 d0       	rcall	.+0      	; 0x5a3a <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf+0x6>
    5a3a:	00 d0       	rcall	.+0      	; 0x5a3c <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf+0x8>
    5a3c:	cd b7       	in	r28, 0x3d	; 61
    5a3e:	de b7       	in	r29, 0x3e	; 62
    5a40:	9a 83       	std	Y+2, r25	; 0x02
    5a42:	89 83       	std	Y+1, r24	; 0x01
    5a44:	4b 83       	std	Y+3, r20	; 0x03
    5a46:	5c 83       	std	Y+4, r21	; 0x04
    5a48:	6d 83       	std	Y+5, r22	; 0x05
    5a4a:	7e 83       	std	Y+6, r23	; 0x06
    5a4c:	89 81       	ldd	r24, Y+1	; 0x01
    5a4e:	9a 81       	ldd	r25, Y+2	; 0x02
    5a50:	9c 01       	movw	r18, r24
    5a52:	23 55       	subi	r18, 0x53	; 83
    5a54:	3f 4f       	sbci	r19, 0xFF	; 255
    5a56:	8b 81       	ldd	r24, Y+3	; 0x03
    5a58:	9c 81       	ldd	r25, Y+4	; 0x04
    5a5a:	ad 81       	ldd	r26, Y+5	; 0x05
    5a5c:	be 81       	ldd	r27, Y+6	; 0x06
    5a5e:	f9 01       	movw	r30, r18
    5a60:	80 83       	st	Z, r24
    5a62:	91 83       	std	Z+1, r25	; 0x01
    5a64:	a2 83       	std	Z+2, r26	; 0x02
    5a66:	b3 83       	std	Z+3, r27	; 0x03
    5a68:	26 96       	adiw	r28, 0x06	; 6
    5a6a:	0f b6       	in	r0, 0x3f	; 63
    5a6c:	f8 94       	cli
    5a6e:	de bf       	out	0x3e, r29	; 62
    5a70:	0f be       	out	0x3f, r0	; 63
    5a72:	cd bf       	out	0x3d, r28	; 61
    5a74:	df 91       	pop	r29
    5a76:	cf 91       	pop	r28
    5a78:	08 95       	ret

00005a7a <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf>:

			float LongitudeDegrees() const {return longitudeDegrees;}
			void LongitudeDegrees(float val) { longitudeDegrees = val;}						
    5a7a:	cf 93       	push	r28
    5a7c:	df 93       	push	r29
    5a7e:	00 d0       	rcall	.+0      	; 0x5a80 <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf+0x6>
    5a80:	00 d0       	rcall	.+0      	; 0x5a82 <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf+0x8>
    5a82:	cd b7       	in	r28, 0x3d	; 61
    5a84:	de b7       	in	r29, 0x3e	; 62
    5a86:	9a 83       	std	Y+2, r25	; 0x02
    5a88:	89 83       	std	Y+1, r24	; 0x01
    5a8a:	4b 83       	std	Y+3, r20	; 0x03
    5a8c:	5c 83       	std	Y+4, r21	; 0x04
    5a8e:	6d 83       	std	Y+5, r22	; 0x05
    5a90:	7e 83       	std	Y+6, r23	; 0x06
    5a92:	89 81       	ldd	r24, Y+1	; 0x01
    5a94:	9a 81       	ldd	r25, Y+2	; 0x02
    5a96:	9c 01       	movw	r18, r24
    5a98:	2f 54       	subi	r18, 0x4F	; 79
    5a9a:	3f 4f       	sbci	r19, 0xFF	; 255
    5a9c:	8b 81       	ldd	r24, Y+3	; 0x03
    5a9e:	9c 81       	ldd	r25, Y+4	; 0x04
    5aa0:	ad 81       	ldd	r26, Y+5	; 0x05
    5aa2:	be 81       	ldd	r27, Y+6	; 0x06
    5aa4:	f9 01       	movw	r30, r18
    5aa6:	80 83       	st	Z, r24
    5aa8:	91 83       	std	Z+1, r25	; 0x01
    5aaa:	a2 83       	std	Z+2, r26	; 0x02
    5aac:	b3 83       	std	Z+3, r27	; 0x03
    5aae:	26 96       	adiw	r28, 0x06	; 6
    5ab0:	0f b6       	in	r0, 0x3f	; 63
    5ab2:	f8 94       	cli
    5ab4:	de bf       	out	0x3e, r29	; 62
    5ab6:	0f be       	out	0x3f, r0	; 63
    5ab8:	cd bf       	out	0x3d, r28	; 61
    5aba:	df 91       	pop	r29
    5abc:	cf 91       	pop	r28
    5abe:	08 95       	ret

00005ac0 <_ZNK10helicopter5model11SystemModel8TimeoutsEv>:
						
						
			long Timeouts() const {return timeouts; }
    5ac0:	cf 93       	push	r28
    5ac2:	df 93       	push	r29
    5ac4:	1f 92       	push	r1
    5ac6:	1f 92       	push	r1
    5ac8:	cd b7       	in	r28, 0x3d	; 61
    5aca:	de b7       	in	r29, 0x3e	; 62
    5acc:	9a 83       	std	Y+2, r25	; 0x02
    5ace:	89 83       	std	Y+1, r24	; 0x01
    5ad0:	89 81       	ldd	r24, Y+1	; 0x01
    5ad2:	9a 81       	ldd	r25, Y+2	; 0x02
    5ad4:	8b 54       	subi	r24, 0x4B	; 75
    5ad6:	9f 4f       	sbci	r25, 0xFF	; 255
    5ad8:	fc 01       	movw	r30, r24
    5ada:	80 81       	ld	r24, Z
    5adc:	91 81       	ldd	r25, Z+1	; 0x01
    5ade:	a2 81       	ldd	r26, Z+2	; 0x02
    5ae0:	b3 81       	ldd	r27, Z+3	; 0x03
    5ae2:	bc 01       	movw	r22, r24
    5ae4:	cd 01       	movw	r24, r26
    5ae6:	0f 90       	pop	r0
    5ae8:	0f 90       	pop	r0
    5aea:	df 91       	pop	r29
    5aec:	cf 91       	pop	r28
    5aee:	08 95       	ret

00005af0 <_ZN10helicopter5model11SystemModel8TimeoutsEl>:
			void Timeouts(long val) { timeouts = val; }
    5af0:	cf 93       	push	r28
    5af2:	df 93       	push	r29
    5af4:	00 d0       	rcall	.+0      	; 0x5af6 <_ZN10helicopter5model11SystemModel8TimeoutsEl+0x6>
    5af6:	00 d0       	rcall	.+0      	; 0x5af8 <_ZN10helicopter5model11SystemModel8TimeoutsEl+0x8>
    5af8:	cd b7       	in	r28, 0x3d	; 61
    5afa:	de b7       	in	r29, 0x3e	; 62
    5afc:	9a 83       	std	Y+2, r25	; 0x02
    5afe:	89 83       	std	Y+1, r24	; 0x01
    5b00:	4b 83       	std	Y+3, r20	; 0x03
    5b02:	5c 83       	std	Y+4, r21	; 0x04
    5b04:	6d 83       	std	Y+5, r22	; 0x05
    5b06:	7e 83       	std	Y+6, r23	; 0x06
    5b08:	89 81       	ldd	r24, Y+1	; 0x01
    5b0a:	9a 81       	ldd	r25, Y+2	; 0x02
    5b0c:	9c 01       	movw	r18, r24
    5b0e:	2b 54       	subi	r18, 0x4B	; 75
    5b10:	3f 4f       	sbci	r19, 0xFF	; 255
    5b12:	8b 81       	ldd	r24, Y+3	; 0x03
    5b14:	9c 81       	ldd	r25, Y+4	; 0x04
    5b16:	ad 81       	ldd	r26, Y+5	; 0x05
    5b18:	be 81       	ldd	r27, Y+6	; 0x06
    5b1a:	f9 01       	movw	r30, r18
    5b1c:	80 83       	st	Z, r24
    5b1e:	91 83       	std	Z+1, r25	; 0x01
    5b20:	a2 83       	std	Z+2, r26	; 0x02
    5b22:	b3 83       	std	Z+3, r27	; 0x03
    5b24:	26 96       	adiw	r28, 0x06	; 6
    5b26:	0f b6       	in	r0, 0x3f	; 63
    5b28:	f8 94       	cli
    5b2a:	de bf       	out	0x3e, r29	; 62
    5b2c:	0f be       	out	0x3f, r0	; 63
    5b2e:	cd bf       	out	0x3d, r28	; 61
    5b30:	df 91       	pop	r29
    5b32:	cf 91       	pop	r28
    5b34:	08 95       	ret

00005b36 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>:
			
			long UnrecognizedMsgTypes() const {return unrecognizedMsgTypes; }
    5b36:	cf 93       	push	r28
    5b38:	df 93       	push	r29
    5b3a:	1f 92       	push	r1
    5b3c:	1f 92       	push	r1
    5b3e:	cd b7       	in	r28, 0x3d	; 61
    5b40:	de b7       	in	r29, 0x3e	; 62
    5b42:	9a 83       	std	Y+2, r25	; 0x02
    5b44:	89 83       	std	Y+1, r24	; 0x01
    5b46:	89 81       	ldd	r24, Y+1	; 0x01
    5b48:	9a 81       	ldd	r25, Y+2	; 0x02
    5b4a:	87 54       	subi	r24, 0x47	; 71
    5b4c:	9f 4f       	sbci	r25, 0xFF	; 255
    5b4e:	fc 01       	movw	r30, r24
    5b50:	80 81       	ld	r24, Z
    5b52:	91 81       	ldd	r25, Z+1	; 0x01
    5b54:	a2 81       	ldd	r26, Z+2	; 0x02
    5b56:	b3 81       	ldd	r27, Z+3	; 0x03
    5b58:	bc 01       	movw	r22, r24
    5b5a:	cd 01       	movw	r24, r26
    5b5c:	0f 90       	pop	r0
    5b5e:	0f 90       	pop	r0
    5b60:	df 91       	pop	r29
    5b62:	cf 91       	pop	r28
    5b64:	08 95       	ret

00005b66 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl>:
			void UnrecognizedMsgTypes(long val) { unrecognizedMsgTypes = val; }
    5b66:	cf 93       	push	r28
    5b68:	df 93       	push	r29
    5b6a:	00 d0       	rcall	.+0      	; 0x5b6c <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl+0x6>
    5b6c:	00 d0       	rcall	.+0      	; 0x5b6e <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl+0x8>
    5b6e:	cd b7       	in	r28, 0x3d	; 61
    5b70:	de b7       	in	r29, 0x3e	; 62
    5b72:	9a 83       	std	Y+2, r25	; 0x02
    5b74:	89 83       	std	Y+1, r24	; 0x01
    5b76:	4b 83       	std	Y+3, r20	; 0x03
    5b78:	5c 83       	std	Y+4, r21	; 0x04
    5b7a:	6d 83       	std	Y+5, r22	; 0x05
    5b7c:	7e 83       	std	Y+6, r23	; 0x06
    5b7e:	89 81       	ldd	r24, Y+1	; 0x01
    5b80:	9a 81       	ldd	r25, Y+2	; 0x02
    5b82:	9c 01       	movw	r18, r24
    5b84:	27 54       	subi	r18, 0x47	; 71
    5b86:	3f 4f       	sbci	r19, 0xFF	; 255
    5b88:	8b 81       	ldd	r24, Y+3	; 0x03
    5b8a:	9c 81       	ldd	r25, Y+4	; 0x04
    5b8c:	ad 81       	ldd	r26, Y+5	; 0x05
    5b8e:	be 81       	ldd	r27, Y+6	; 0x06
    5b90:	f9 01       	movw	r30, r18
    5b92:	80 83       	st	Z, r24
    5b94:	91 83       	std	Z+1, r25	; 0x01
    5b96:	a2 83       	std	Z+2, r26	; 0x02
    5b98:	b3 83       	std	Z+3, r27	; 0x03
    5b9a:	26 96       	adiw	r28, 0x06	; 6
    5b9c:	0f b6       	in	r0, 0x3f	; 63
    5b9e:	f8 94       	cli
    5ba0:	de bf       	out	0x3e, r29	; 62
    5ba2:	0f be       	out	0x3f, r0	; 63
    5ba4:	cd bf       	out	0x3d, r28	; 61
    5ba6:	df 91       	pop	r29
    5ba8:	cf 91       	pop	r28
    5baa:	08 95       	ret

00005bac <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>:
			
			long ChecksumErrors() const {return checksumErrors; }
    5bac:	cf 93       	push	r28
    5bae:	df 93       	push	r29
    5bb0:	1f 92       	push	r1
    5bb2:	1f 92       	push	r1
    5bb4:	cd b7       	in	r28, 0x3d	; 61
    5bb6:	de b7       	in	r29, 0x3e	; 62
    5bb8:	9a 83       	std	Y+2, r25	; 0x02
    5bba:	89 83       	std	Y+1, r24	; 0x01
    5bbc:	89 81       	ldd	r24, Y+1	; 0x01
    5bbe:	9a 81       	ldd	r25, Y+2	; 0x02
    5bc0:	83 54       	subi	r24, 0x43	; 67
    5bc2:	9f 4f       	sbci	r25, 0xFF	; 255
    5bc4:	fc 01       	movw	r30, r24
    5bc6:	80 81       	ld	r24, Z
    5bc8:	91 81       	ldd	r25, Z+1	; 0x01
    5bca:	a2 81       	ldd	r26, Z+2	; 0x02
    5bcc:	b3 81       	ldd	r27, Z+3	; 0x03
    5bce:	bc 01       	movw	r22, r24
    5bd0:	cd 01       	movw	r24, r26
    5bd2:	0f 90       	pop	r0
    5bd4:	0f 90       	pop	r0
    5bd6:	df 91       	pop	r29
    5bd8:	cf 91       	pop	r28
    5bda:	08 95       	ret

00005bdc <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl>:
			void ChecksumErrors(long val) { checksumErrors = val; }
    5bdc:	cf 93       	push	r28
    5bde:	df 93       	push	r29
    5be0:	00 d0       	rcall	.+0      	; 0x5be2 <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl+0x6>
    5be2:	00 d0       	rcall	.+0      	; 0x5be4 <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl+0x8>
    5be4:	cd b7       	in	r28, 0x3d	; 61
    5be6:	de b7       	in	r29, 0x3e	; 62
    5be8:	9a 83       	std	Y+2, r25	; 0x02
    5bea:	89 83       	std	Y+1, r24	; 0x01
    5bec:	4b 83       	std	Y+3, r20	; 0x03
    5bee:	5c 83       	std	Y+4, r21	; 0x04
    5bf0:	6d 83       	std	Y+5, r22	; 0x05
    5bf2:	7e 83       	std	Y+6, r23	; 0x06
    5bf4:	89 81       	ldd	r24, Y+1	; 0x01
    5bf6:	9a 81       	ldd	r25, Y+2	; 0x02
    5bf8:	9c 01       	movw	r18, r24
    5bfa:	23 54       	subi	r18, 0x43	; 67
    5bfc:	3f 4f       	sbci	r19, 0xFF	; 255
    5bfe:	8b 81       	ldd	r24, Y+3	; 0x03
    5c00:	9c 81       	ldd	r25, Y+4	; 0x04
    5c02:	ad 81       	ldd	r26, Y+5	; 0x05
    5c04:	be 81       	ldd	r27, Y+6	; 0x06
    5c06:	f9 01       	movw	r30, r18
    5c08:	80 83       	st	Z, r24
    5c0a:	91 83       	std	Z+1, r25	; 0x01
    5c0c:	a2 83       	std	Z+2, r26	; 0x02
    5c0e:	b3 83       	std	Z+3, r27	; 0x03
    5c10:	26 96       	adiw	r28, 0x06	; 6
    5c12:	0f b6       	in	r0, 0x3f	; 63
    5c14:	f8 94       	cli
    5c16:	de bf       	out	0x3e, r29	; 62
    5c18:	0f be       	out	0x3f, r0	; 63
    5c1a:	cd bf       	out	0x3d, r28	; 61
    5c1c:	df 91       	pop	r29
    5c1e:	cf 91       	pop	r28
    5c20:	08 95       	ret

00005c22 <_ZNK10helicopter5model11SystemModel33SerialCommunicationBufferOverrunsEv>:
			
			long BlownFrames() const {return numOfFramesBlown;}
			void BlownFrames( long val ) { numOfFramesBlown = val;}
				
			long SerialCommunicationBufferOverruns() const {return serialCommunicationBufferOverruns;}
    5c22:	cf 93       	push	r28
    5c24:	df 93       	push	r29
    5c26:	1f 92       	push	r1
    5c28:	1f 92       	push	r1
    5c2a:	cd b7       	in	r28, 0x3d	; 61
    5c2c:	de b7       	in	r29, 0x3e	; 62
    5c2e:	9a 83       	std	Y+2, r25	; 0x02
    5c30:	89 83       	std	Y+1, r24	; 0x01
    5c32:	89 81       	ldd	r24, Y+1	; 0x01
    5c34:	9a 81       	ldd	r25, Y+2	; 0x02
    5c36:	8b 53       	subi	r24, 0x3B	; 59
    5c38:	9f 4f       	sbci	r25, 0xFF	; 255
    5c3a:	fc 01       	movw	r30, r24
    5c3c:	80 81       	ld	r24, Z
    5c3e:	91 81       	ldd	r25, Z+1	; 0x01
    5c40:	a2 81       	ldd	r26, Z+2	; 0x02
    5c42:	b3 81       	ldd	r27, Z+3	; 0x03
    5c44:	bc 01       	movw	r22, r24
    5c46:	cd 01       	movw	r24, r26
    5c48:	0f 90       	pop	r0
    5c4a:	0f 90       	pop	r0
    5c4c:	df 91       	pop	r29
    5c4e:	cf 91       	pop	r28
    5c50:	08 95       	ret

00005c52 <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>:
				sizeof(ChecksumErrors) + 
				sizeof(NumOfBlownFrames) + 
				sizeof(SerialCommunicationBufferOverruns);

			
				SystemTelemetryMessage(): Message(MessageType,MessageSize),
    5c52:	cf 93       	push	r28
    5c54:	df 93       	push	r29
    5c56:	1f 92       	push	r1
    5c58:	1f 92       	push	r1
    5c5a:	cd b7       	in	r28, 0x3d	; 61
    5c5c:	de b7       	in	r29, 0x3e	; 62
    5c5e:	9a 83       	std	Y+2, r25	; 0x02
    5c60:	89 83       	std	Y+1, r24	; 0x01
														
					Timeouts(0),
					UnrecognizedMsgTypes(0),
					ChecksumErrors(0),
					NumOfBlownFrames(0), 
					SerialCommunicationBufferOverruns(0)
    5c62:	89 81       	ldd	r24, Y+1	; 0x01
    5c64:	9a 81       	ldd	r25, Y+2	; 0x02
    5c66:	49 ee       	ldi	r20, 0xE9	; 233
    5c68:	50 e0       	ldi	r21, 0x00	; 0
    5c6a:	62 e0       	ldi	r22, 0x02	; 2
    5c6c:	0e 94 3c 29 	call	0x5278	; 0x5278 <_ZN10helicopter8messages7MessageC1Ehi>
    5c70:	89 81       	ldd	r24, Y+1	; 0x01
    5c72:	9a 81       	ldd	r25, Y+2	; 0x02
    5c74:	2e e3       	ldi	r18, 0x3E	; 62
    5c76:	32 e0       	ldi	r19, 0x02	; 2
    5c78:	fc 01       	movw	r30, r24
    5c7a:	31 83       	std	Z+1, r19	; 0x01
    5c7c:	20 83       	st	Z, r18
    5c7e:	89 81       	ldd	r24, Y+1	; 0x01
    5c80:	9a 81       	ldd	r25, Y+2	; 0x02
    5c82:	fc 01       	movw	r30, r24
    5c84:	15 82       	std	Z+5, r1	; 0x05
    5c86:	16 82       	std	Z+6, r1	; 0x06
    5c88:	17 82       	std	Z+7, r1	; 0x07
    5c8a:	10 86       	std	Z+8, r1	; 0x08
    5c8c:	89 81       	ldd	r24, Y+1	; 0x01
    5c8e:	9a 81       	ldd	r25, Y+2	; 0x02
    5c90:	fc 01       	movw	r30, r24
    5c92:	11 86       	std	Z+9, r1	; 0x09
    5c94:	12 86       	std	Z+10, r1	; 0x0a
    5c96:	13 86       	std	Z+11, r1	; 0x0b
    5c98:	14 86       	std	Z+12, r1	; 0x0c
    5c9a:	89 81       	ldd	r24, Y+1	; 0x01
    5c9c:	9a 81       	ldd	r25, Y+2	; 0x02
    5c9e:	fc 01       	movw	r30, r24
    5ca0:	15 86       	std	Z+13, r1	; 0x0d
    5ca2:	16 86       	std	Z+14, r1	; 0x0e
    5ca4:	17 86       	std	Z+15, r1	; 0x0f
    5ca6:	10 8a       	std	Z+16, r1	; 0x10
    5ca8:	89 81       	ldd	r24, Y+1	; 0x01
    5caa:	9a 81       	ldd	r25, Y+2	; 0x02
    5cac:	fc 01       	movw	r30, r24
    5cae:	11 8a       	std	Z+17, r1	; 0x11
    5cb0:	12 8a       	std	Z+18, r1	; 0x12
    5cb2:	13 8a       	std	Z+19, r1	; 0x13
    5cb4:	14 8a       	std	Z+20, r1	; 0x14
    5cb6:	89 81       	ldd	r24, Y+1	; 0x01
    5cb8:	9a 81       	ldd	r25, Y+2	; 0x02
    5cba:	fc 01       	movw	r30, r24
    5cbc:	15 8a       	std	Z+21, r1	; 0x15
    5cbe:	16 8a       	std	Z+22, r1	; 0x16
    5cc0:	17 8a       	std	Z+23, r1	; 0x17
    5cc2:	10 8e       	std	Z+24, r1	; 0x18
    5cc4:	89 81       	ldd	r24, Y+1	; 0x01
    5cc6:	9a 81       	ldd	r25, Y+2	; 0x02
    5cc8:	fc 01       	movw	r30, r24
    5cca:	11 8e       	std	Z+25, r1	; 0x19
    5ccc:	12 8e       	std	Z+26, r1	; 0x1a
    5cce:	13 8e       	std	Z+27, r1	; 0x1b
    5cd0:	14 8e       	std	Z+28, r1	; 0x1c
    5cd2:	89 81       	ldd	r24, Y+1	; 0x01
    5cd4:	9a 81       	ldd	r25, Y+2	; 0x02
    5cd6:	fc 01       	movw	r30, r24
    5cd8:	15 8e       	std	Z+29, r1	; 0x1d
    5cda:	16 8e       	std	Z+30, r1	; 0x1e
    5cdc:	17 8e       	std	Z+31, r1	; 0x1f
    5cde:	10 a2       	std	Z+32, r1	; 0x20
    5ce0:	89 81       	ldd	r24, Y+1	; 0x01
    5ce2:	9a 81       	ldd	r25, Y+2	; 0x02
    5ce4:	fc 01       	movw	r30, r24
    5ce6:	11 a2       	std	Z+33, r1	; 0x21
    5ce8:	12 a2       	std	Z+34, r1	; 0x22
    5cea:	13 a2       	std	Z+35, r1	; 0x23
    5cec:	14 a2       	std	Z+36, r1	; 0x24
    5cee:	89 81       	ldd	r24, Y+1	; 0x01
    5cf0:	9a 81       	ldd	r25, Y+2	; 0x02
    5cf2:	fc 01       	movw	r30, r24
    5cf4:	15 a2       	std	Z+37, r1	; 0x25
    5cf6:	16 a2       	std	Z+38, r1	; 0x26
    5cf8:	17 a2       	std	Z+39, r1	; 0x27
    5cfa:	10 a6       	std	Z+40, r1	; 0x28
    5cfc:	89 81       	ldd	r24, Y+1	; 0x01
    5cfe:	9a 81       	ldd	r25, Y+2	; 0x02
    5d00:	fc 01       	movw	r30, r24
    5d02:	11 a6       	std	Z+41, r1	; 0x29
    5d04:	12 a6       	std	Z+42, r1	; 0x2a
    5d06:	13 a6       	std	Z+43, r1	; 0x2b
    5d08:	14 a6       	std	Z+44, r1	; 0x2c
    5d0a:	89 81       	ldd	r24, Y+1	; 0x01
    5d0c:	9a 81       	ldd	r25, Y+2	; 0x02
    5d0e:	fc 01       	movw	r30, r24
    5d10:	15 a6       	std	Z+45, r1	; 0x2d
    5d12:	16 a6       	std	Z+46, r1	; 0x2e
    5d14:	17 a6       	std	Z+47, r1	; 0x2f
    5d16:	10 aa       	std	Z+48, r1	; 0x30
    5d18:	89 81       	ldd	r24, Y+1	; 0x01
    5d1a:	9a 81       	ldd	r25, Y+2	; 0x02
    5d1c:	fc 01       	movw	r30, r24
    5d1e:	11 aa       	std	Z+49, r1	; 0x31
    5d20:	12 aa       	std	Z+50, r1	; 0x32
    5d22:	13 aa       	std	Z+51, r1	; 0x33
    5d24:	14 aa       	std	Z+52, r1	; 0x34
    5d26:	89 81       	ldd	r24, Y+1	; 0x01
    5d28:	9a 81       	ldd	r25, Y+2	; 0x02
    5d2a:	fc 01       	movw	r30, r24
    5d2c:	15 aa       	std	Z+53, r1	; 0x35
    5d2e:	16 aa       	std	Z+54, r1	; 0x36
    5d30:	17 aa       	std	Z+55, r1	; 0x37
    5d32:	10 ae       	std	Z+56, r1	; 0x38
    5d34:	89 81       	ldd	r24, Y+1	; 0x01
    5d36:	9a 81       	ldd	r25, Y+2	; 0x02
    5d38:	fc 01       	movw	r30, r24
    5d3a:	11 ae       	std	Z+57, r1	; 0x39
    5d3c:	12 ae       	std	Z+58, r1	; 0x3a
    5d3e:	13 ae       	std	Z+59, r1	; 0x3b
    5d40:	14 ae       	std	Z+60, r1	; 0x3c
    5d42:	89 81       	ldd	r24, Y+1	; 0x01
    5d44:	9a 81       	ldd	r25, Y+2	; 0x02
    5d46:	cd 96       	adiw	r24, 0x3d	; 61
    5d48:	fc 01       	movw	r30, r24
    5d4a:	10 82       	st	Z, r1
    5d4c:	11 82       	std	Z+1, r1	; 0x01
    5d4e:	12 82       	std	Z+2, r1	; 0x02
    5d50:	13 82       	std	Z+3, r1	; 0x03
    5d52:	89 81       	ldd	r24, Y+1	; 0x01
    5d54:	9a 81       	ldd	r25, Y+2	; 0x02
    5d56:	8f 5b       	subi	r24, 0xBF	; 191
    5d58:	9f 4f       	sbci	r25, 0xFF	; 255
    5d5a:	fc 01       	movw	r30, r24
    5d5c:	10 82       	st	Z, r1
    5d5e:	11 82       	std	Z+1, r1	; 0x01
    5d60:	12 82       	std	Z+2, r1	; 0x02
    5d62:	13 82       	std	Z+3, r1	; 0x03
    5d64:	89 81       	ldd	r24, Y+1	; 0x01
    5d66:	9a 81       	ldd	r25, Y+2	; 0x02
    5d68:	8b 5b       	subi	r24, 0xBB	; 187
    5d6a:	9f 4f       	sbci	r25, 0xFF	; 255
    5d6c:	fc 01       	movw	r30, r24
    5d6e:	10 82       	st	Z, r1
    5d70:	11 82       	std	Z+1, r1	; 0x01
    5d72:	12 82       	std	Z+2, r1	; 0x02
    5d74:	13 82       	std	Z+3, r1	; 0x03
    5d76:	89 81       	ldd	r24, Y+1	; 0x01
    5d78:	9a 81       	ldd	r25, Y+2	; 0x02
    5d7a:	87 5b       	subi	r24, 0xB7	; 183
    5d7c:	9f 4f       	sbci	r25, 0xFF	; 255
    5d7e:	fc 01       	movw	r30, r24
    5d80:	10 82       	st	Z, r1
    5d82:	11 82       	std	Z+1, r1	; 0x01
    5d84:	12 82       	std	Z+2, r1	; 0x02
    5d86:	13 82       	std	Z+3, r1	; 0x03
    5d88:	89 81       	ldd	r24, Y+1	; 0x01
    5d8a:	9a 81       	ldd	r25, Y+2	; 0x02
    5d8c:	83 5b       	subi	r24, 0xB3	; 179
    5d8e:	9f 4f       	sbci	r25, 0xFF	; 255
    5d90:	fc 01       	movw	r30, r24
    5d92:	10 82       	st	Z, r1
    5d94:	11 82       	std	Z+1, r1	; 0x01
    5d96:	12 82       	std	Z+2, r1	; 0x02
    5d98:	13 82       	std	Z+3, r1	; 0x03
    5d9a:	89 81       	ldd	r24, Y+1	; 0x01
    5d9c:	9a 81       	ldd	r25, Y+2	; 0x02
    5d9e:	8f 5a       	subi	r24, 0xAF	; 175
    5da0:	9f 4f       	sbci	r25, 0xFF	; 255
    5da2:	fc 01       	movw	r30, r24
    5da4:	10 82       	st	Z, r1
    5da6:	11 82       	std	Z+1, r1	; 0x01
    5da8:	12 82       	std	Z+2, r1	; 0x02
    5daa:	13 82       	std	Z+3, r1	; 0x03
    5dac:	89 81       	ldd	r24, Y+1	; 0x01
    5dae:	9a 81       	ldd	r25, Y+2	; 0x02
    5db0:	8b 5a       	subi	r24, 0xAB	; 171
    5db2:	9f 4f       	sbci	r25, 0xFF	; 255
    5db4:	fc 01       	movw	r30, r24
    5db6:	10 82       	st	Z, r1
    5db8:	11 82       	std	Z+1, r1	; 0x01
    5dba:	12 82       	std	Z+2, r1	; 0x02
    5dbc:	13 82       	std	Z+3, r1	; 0x03
    5dbe:	89 81       	ldd	r24, Y+1	; 0x01
    5dc0:	9a 81       	ldd	r25, Y+2	; 0x02
    5dc2:	87 5a       	subi	r24, 0xA7	; 167
    5dc4:	9f 4f       	sbci	r25, 0xFF	; 255
    5dc6:	fc 01       	movw	r30, r24
    5dc8:	10 82       	st	Z, r1
    5dca:	11 82       	std	Z+1, r1	; 0x01
    5dcc:	12 82       	std	Z+2, r1	; 0x02
    5dce:	13 82       	std	Z+3, r1	; 0x03
    5dd0:	89 81       	ldd	r24, Y+1	; 0x01
    5dd2:	9a 81       	ldd	r25, Y+2	; 0x02
    5dd4:	83 5a       	subi	r24, 0xA3	; 163
    5dd6:	9f 4f       	sbci	r25, 0xFF	; 255
    5dd8:	fc 01       	movw	r30, r24
    5dda:	10 82       	st	Z, r1
    5ddc:	11 82       	std	Z+1, r1	; 0x01
    5dde:	12 82       	std	Z+2, r1	; 0x02
    5de0:	13 82       	std	Z+3, r1	; 0x03
    5de2:	89 81       	ldd	r24, Y+1	; 0x01
    5de4:	9a 81       	ldd	r25, Y+2	; 0x02
    5de6:	8f 59       	subi	r24, 0x9F	; 159
    5de8:	9f 4f       	sbci	r25, 0xFF	; 255
    5dea:	fc 01       	movw	r30, r24
    5dec:	10 82       	st	Z, r1
    5dee:	11 82       	std	Z+1, r1	; 0x01
    5df0:	12 82       	std	Z+2, r1	; 0x02
    5df2:	13 82       	std	Z+3, r1	; 0x03
    5df4:	89 81       	ldd	r24, Y+1	; 0x01
    5df6:	9a 81       	ldd	r25, Y+2	; 0x02
    5df8:	8b 59       	subi	r24, 0x9B	; 155
    5dfa:	9f 4f       	sbci	r25, 0xFF	; 255
    5dfc:	fc 01       	movw	r30, r24
    5dfe:	10 82       	st	Z, r1
    5e00:	11 82       	std	Z+1, r1	; 0x01
    5e02:	12 82       	std	Z+2, r1	; 0x02
    5e04:	13 82       	std	Z+3, r1	; 0x03
    5e06:	89 81       	ldd	r24, Y+1	; 0x01
    5e08:	9a 81       	ldd	r25, Y+2	; 0x02
    5e0a:	87 59       	subi	r24, 0x97	; 151
    5e0c:	9f 4f       	sbci	r25, 0xFF	; 255
    5e0e:	fc 01       	movw	r30, r24
    5e10:	10 82       	st	Z, r1
    5e12:	11 82       	std	Z+1, r1	; 0x01
    5e14:	12 82       	std	Z+2, r1	; 0x02
    5e16:	13 82       	std	Z+3, r1	; 0x03
    5e18:	89 81       	ldd	r24, Y+1	; 0x01
    5e1a:	9a 81       	ldd	r25, Y+2	; 0x02
    5e1c:	83 59       	subi	r24, 0x93	; 147
    5e1e:	9f 4f       	sbci	r25, 0xFF	; 255
    5e20:	fc 01       	movw	r30, r24
    5e22:	10 82       	st	Z, r1
    5e24:	11 82       	std	Z+1, r1	; 0x01
    5e26:	12 82       	std	Z+2, r1	; 0x02
    5e28:	13 82       	std	Z+3, r1	; 0x03
    5e2a:	89 81       	ldd	r24, Y+1	; 0x01
    5e2c:	9a 81       	ldd	r25, Y+2	; 0x02
    5e2e:	8f 58       	subi	r24, 0x8F	; 143
    5e30:	9f 4f       	sbci	r25, 0xFF	; 255
    5e32:	fc 01       	movw	r30, r24
    5e34:	10 82       	st	Z, r1
    5e36:	11 82       	std	Z+1, r1	; 0x01
    5e38:	12 82       	std	Z+2, r1	; 0x02
    5e3a:	13 82       	std	Z+3, r1	; 0x03
    5e3c:	89 81       	ldd	r24, Y+1	; 0x01
    5e3e:	9a 81       	ldd	r25, Y+2	; 0x02
    5e40:	8b 58       	subi	r24, 0x8B	; 139
    5e42:	9f 4f       	sbci	r25, 0xFF	; 255
    5e44:	fc 01       	movw	r30, r24
    5e46:	10 82       	st	Z, r1
    5e48:	11 82       	std	Z+1, r1	; 0x01
    5e4a:	12 82       	std	Z+2, r1	; 0x02
    5e4c:	13 82       	std	Z+3, r1	; 0x03
    5e4e:	89 81       	ldd	r24, Y+1	; 0x01
    5e50:	9a 81       	ldd	r25, Y+2	; 0x02
    5e52:	87 58       	subi	r24, 0x87	; 135
    5e54:	9f 4f       	sbci	r25, 0xFF	; 255
    5e56:	fc 01       	movw	r30, r24
    5e58:	10 82       	st	Z, r1
    5e5a:	11 82       	std	Z+1, r1	; 0x01
    5e5c:	12 82       	std	Z+2, r1	; 0x02
    5e5e:	13 82       	std	Z+3, r1	; 0x03
    5e60:	89 81       	ldd	r24, Y+1	; 0x01
    5e62:	9a 81       	ldd	r25, Y+2	; 0x02
    5e64:	83 58       	subi	r24, 0x83	; 131
    5e66:	9f 4f       	sbci	r25, 0xFF	; 255
    5e68:	fc 01       	movw	r30, r24
    5e6a:	10 82       	st	Z, r1
    5e6c:	11 82       	std	Z+1, r1	; 0x01
    5e6e:	12 82       	std	Z+2, r1	; 0x02
    5e70:	13 82       	std	Z+3, r1	; 0x03
    5e72:	89 81       	ldd	r24, Y+1	; 0x01
    5e74:	9a 81       	ldd	r25, Y+2	; 0x02
    5e76:	8f 57       	subi	r24, 0x7F	; 127
    5e78:	9f 4f       	sbci	r25, 0xFF	; 255
    5e7a:	fc 01       	movw	r30, r24
    5e7c:	10 82       	st	Z, r1
    5e7e:	11 82       	std	Z+1, r1	; 0x01
    5e80:	12 82       	std	Z+2, r1	; 0x02
    5e82:	13 82       	std	Z+3, r1	; 0x03
    5e84:	89 81       	ldd	r24, Y+1	; 0x01
    5e86:	9a 81       	ldd	r25, Y+2	; 0x02
    5e88:	8b 57       	subi	r24, 0x7B	; 123
    5e8a:	9f 4f       	sbci	r25, 0xFF	; 255
    5e8c:	fc 01       	movw	r30, r24
    5e8e:	10 82       	st	Z, r1
    5e90:	11 82       	std	Z+1, r1	; 0x01
    5e92:	12 82       	std	Z+2, r1	; 0x02
    5e94:	13 82       	std	Z+3, r1	; 0x03
    5e96:	89 81       	ldd	r24, Y+1	; 0x01
    5e98:	9a 81       	ldd	r25, Y+2	; 0x02
    5e9a:	87 57       	subi	r24, 0x77	; 119
    5e9c:	9f 4f       	sbci	r25, 0xFF	; 255
    5e9e:	fc 01       	movw	r30, r24
    5ea0:	10 82       	st	Z, r1
    5ea2:	11 82       	std	Z+1, r1	; 0x01
    5ea4:	12 82       	std	Z+2, r1	; 0x02
    5ea6:	13 82       	std	Z+3, r1	; 0x03
    5ea8:	89 81       	ldd	r24, Y+1	; 0x01
    5eaa:	9a 81       	ldd	r25, Y+2	; 0x02
    5eac:	83 57       	subi	r24, 0x73	; 115
    5eae:	9f 4f       	sbci	r25, 0xFF	; 255
    5eb0:	fc 01       	movw	r30, r24
    5eb2:	10 82       	st	Z, r1
    5eb4:	11 82       	std	Z+1, r1	; 0x01
    5eb6:	12 82       	std	Z+2, r1	; 0x02
    5eb8:	13 82       	std	Z+3, r1	; 0x03
    5eba:	89 81       	ldd	r24, Y+1	; 0x01
    5ebc:	9a 81       	ldd	r25, Y+2	; 0x02
    5ebe:	8f 56       	subi	r24, 0x6F	; 111
    5ec0:	9f 4f       	sbci	r25, 0xFF	; 255
    5ec2:	fc 01       	movw	r30, r24
    5ec4:	10 82       	st	Z, r1
    5ec6:	11 82       	std	Z+1, r1	; 0x01
    5ec8:	12 82       	std	Z+2, r1	; 0x02
    5eca:	13 82       	std	Z+3, r1	; 0x03
    5ecc:	89 81       	ldd	r24, Y+1	; 0x01
    5ece:	9a 81       	ldd	r25, Y+2	; 0x02
    5ed0:	8b 56       	subi	r24, 0x6B	; 107
    5ed2:	9f 4f       	sbci	r25, 0xFF	; 255
    5ed4:	fc 01       	movw	r30, r24
    5ed6:	10 82       	st	Z, r1
    5ed8:	11 82       	std	Z+1, r1	; 0x01
    5eda:	12 82       	std	Z+2, r1	; 0x02
    5edc:	13 82       	std	Z+3, r1	; 0x03
    5ede:	89 81       	ldd	r24, Y+1	; 0x01
    5ee0:	9a 81       	ldd	r25, Y+2	; 0x02
    5ee2:	87 56       	subi	r24, 0x67	; 103
    5ee4:	9f 4f       	sbci	r25, 0xFF	; 255
    5ee6:	fc 01       	movw	r30, r24
    5ee8:	10 82       	st	Z, r1
    5eea:	11 82       	std	Z+1, r1	; 0x01
    5eec:	12 82       	std	Z+2, r1	; 0x02
    5eee:	13 82       	std	Z+3, r1	; 0x03
    5ef0:	89 81       	ldd	r24, Y+1	; 0x01
    5ef2:	9a 81       	ldd	r25, Y+2	; 0x02
    5ef4:	83 56       	subi	r24, 0x63	; 99
    5ef6:	9f 4f       	sbci	r25, 0xFF	; 255
    5ef8:	fc 01       	movw	r30, r24
    5efa:	10 82       	st	Z, r1
    5efc:	11 82       	std	Z+1, r1	; 0x01
    5efe:	12 82       	std	Z+2, r1	; 0x02
    5f00:	13 82       	std	Z+3, r1	; 0x03
    5f02:	89 81       	ldd	r24, Y+1	; 0x01
    5f04:	9a 81       	ldd	r25, Y+2	; 0x02
    5f06:	8f 55       	subi	r24, 0x5F	; 95
    5f08:	9f 4f       	sbci	r25, 0xFF	; 255
    5f0a:	fc 01       	movw	r30, r24
    5f0c:	10 82       	st	Z, r1
    5f0e:	11 82       	std	Z+1, r1	; 0x01
    5f10:	12 82       	std	Z+2, r1	; 0x02
    5f12:	13 82       	std	Z+3, r1	; 0x03
    5f14:	89 81       	ldd	r24, Y+1	; 0x01
    5f16:	9a 81       	ldd	r25, Y+2	; 0x02
    5f18:	8b 55       	subi	r24, 0x5B	; 91
    5f1a:	9f 4f       	sbci	r25, 0xFF	; 255
    5f1c:	fc 01       	movw	r30, r24
    5f1e:	10 82       	st	Z, r1
    5f20:	11 82       	std	Z+1, r1	; 0x01
    5f22:	12 82       	std	Z+2, r1	; 0x02
    5f24:	13 82       	std	Z+3, r1	; 0x03
    5f26:	89 81       	ldd	r24, Y+1	; 0x01
    5f28:	9a 81       	ldd	r25, Y+2	; 0x02
    5f2a:	87 55       	subi	r24, 0x57	; 87
    5f2c:	9f 4f       	sbci	r25, 0xFF	; 255
    5f2e:	fc 01       	movw	r30, r24
    5f30:	10 82       	st	Z, r1
    5f32:	11 82       	std	Z+1, r1	; 0x01
    5f34:	12 82       	std	Z+2, r1	; 0x02
    5f36:	13 82       	std	Z+3, r1	; 0x03
    5f38:	89 81       	ldd	r24, Y+1	; 0x01
    5f3a:	9a 81       	ldd	r25, Y+2	; 0x02
    5f3c:	83 55       	subi	r24, 0x53	; 83
    5f3e:	9f 4f       	sbci	r25, 0xFF	; 255
    5f40:	fc 01       	movw	r30, r24
    5f42:	10 82       	st	Z, r1
    5f44:	11 82       	std	Z+1, r1	; 0x01
    5f46:	12 82       	std	Z+2, r1	; 0x02
    5f48:	13 82       	std	Z+3, r1	; 0x03
    5f4a:	89 81       	ldd	r24, Y+1	; 0x01
    5f4c:	9a 81       	ldd	r25, Y+2	; 0x02
    5f4e:	8f 54       	subi	r24, 0x4F	; 79
    5f50:	9f 4f       	sbci	r25, 0xFF	; 255
    5f52:	fc 01       	movw	r30, r24
    5f54:	10 82       	st	Z, r1
    5f56:	11 82       	std	Z+1, r1	; 0x01
    5f58:	12 82       	std	Z+2, r1	; 0x02
    5f5a:	13 82       	std	Z+3, r1	; 0x03
    5f5c:	89 81       	ldd	r24, Y+1	; 0x01
    5f5e:	9a 81       	ldd	r25, Y+2	; 0x02
    5f60:	8b 54       	subi	r24, 0x4B	; 75
    5f62:	9f 4f       	sbci	r25, 0xFF	; 255
    5f64:	fc 01       	movw	r30, r24
    5f66:	10 82       	st	Z, r1
    5f68:	11 82       	std	Z+1, r1	; 0x01
    5f6a:	12 82       	std	Z+2, r1	; 0x02
    5f6c:	13 82       	std	Z+3, r1	; 0x03
    5f6e:	89 81       	ldd	r24, Y+1	; 0x01
    5f70:	9a 81       	ldd	r25, Y+2	; 0x02
    5f72:	87 54       	subi	r24, 0x47	; 71
    5f74:	9f 4f       	sbci	r25, 0xFF	; 255
    5f76:	fc 01       	movw	r30, r24
    5f78:	10 82       	st	Z, r1
    5f7a:	11 82       	std	Z+1, r1	; 0x01
    5f7c:	12 82       	std	Z+2, r1	; 0x02
    5f7e:	13 82       	std	Z+3, r1	; 0x03
    5f80:	89 81       	ldd	r24, Y+1	; 0x01
    5f82:	9a 81       	ldd	r25, Y+2	; 0x02
    5f84:	83 54       	subi	r24, 0x43	; 67
    5f86:	9f 4f       	sbci	r25, 0xFF	; 255
    5f88:	fc 01       	movw	r30, r24
    5f8a:	10 82       	st	Z, r1
    5f8c:	11 82       	std	Z+1, r1	; 0x01
    5f8e:	12 82       	std	Z+2, r1	; 0x02
    5f90:	13 82       	std	Z+3, r1	; 0x03
    5f92:	89 81       	ldd	r24, Y+1	; 0x01
    5f94:	9a 81       	ldd	r25, Y+2	; 0x02
    5f96:	8f 53       	subi	r24, 0x3F	; 63
    5f98:	9f 4f       	sbci	r25, 0xFF	; 255
    5f9a:	fc 01       	movw	r30, r24
    5f9c:	10 82       	st	Z, r1
    5f9e:	11 82       	std	Z+1, r1	; 0x01
    5fa0:	12 82       	std	Z+2, r1	; 0x02
    5fa2:	13 82       	std	Z+3, r1	; 0x03
    5fa4:	89 81       	ldd	r24, Y+1	; 0x01
    5fa6:	9a 81       	ldd	r25, Y+2	; 0x02
    5fa8:	8b 53       	subi	r24, 0x3B	; 59
    5faa:	9f 4f       	sbci	r25, 0xFF	; 255
    5fac:	fc 01       	movw	r30, r24
    5fae:	10 82       	st	Z, r1
    5fb0:	11 82       	std	Z+1, r1	; 0x01
    5fb2:	12 82       	std	Z+2, r1	; 0x02
    5fb4:	13 82       	std	Z+3, r1	; 0x03
    5fb6:	89 81       	ldd	r24, Y+1	; 0x01
    5fb8:	9a 81       	ldd	r25, Y+2	; 0x02
    5fba:	87 53       	subi	r24, 0x37	; 55
    5fbc:	9f 4f       	sbci	r25, 0xFF	; 255
    5fbe:	fc 01       	movw	r30, r24
    5fc0:	10 82       	st	Z, r1
    5fc2:	11 82       	std	Z+1, r1	; 0x01
    5fc4:	12 82       	std	Z+2, r1	; 0x02
    5fc6:	13 82       	std	Z+3, r1	; 0x03
    5fc8:	89 81       	ldd	r24, Y+1	; 0x01
    5fca:	9a 81       	ldd	r25, Y+2	; 0x02
    5fcc:	83 53       	subi	r24, 0x33	; 51
    5fce:	9f 4f       	sbci	r25, 0xFF	; 255
    5fd0:	fc 01       	movw	r30, r24
    5fd2:	10 82       	st	Z, r1
    5fd4:	11 82       	std	Z+1, r1	; 0x01
    5fd6:	12 82       	std	Z+2, r1	; 0x02
    5fd8:	13 82       	std	Z+3, r1	; 0x03
    5fda:	89 81       	ldd	r24, Y+1	; 0x01
    5fdc:	9a 81       	ldd	r25, Y+2	; 0x02
    5fde:	8f 52       	subi	r24, 0x2F	; 47
    5fe0:	9f 4f       	sbci	r25, 0xFF	; 255
    5fe2:	fc 01       	movw	r30, r24
    5fe4:	10 82       	st	Z, r1
    5fe6:	11 82       	std	Z+1, r1	; 0x01
    5fe8:	12 82       	std	Z+2, r1	; 0x02
    5fea:	13 82       	std	Z+3, r1	; 0x03
    5fec:	89 81       	ldd	r24, Y+1	; 0x01
    5fee:	9a 81       	ldd	r25, Y+2	; 0x02
    5ff0:	8b 52       	subi	r24, 0x2B	; 43
    5ff2:	9f 4f       	sbci	r25, 0xFF	; 255
    5ff4:	fc 01       	movw	r30, r24
    5ff6:	10 82       	st	Z, r1
    5ff8:	11 82       	std	Z+1, r1	; 0x01
    5ffa:	12 82       	std	Z+2, r1	; 0x02
    5ffc:	13 82       	std	Z+3, r1	; 0x03
    5ffe:	89 81       	ldd	r24, Y+1	; 0x01
    6000:	9a 81       	ldd	r25, Y+2	; 0x02
    6002:	87 52       	subi	r24, 0x27	; 39
    6004:	9f 4f       	sbci	r25, 0xFF	; 255
    6006:	fc 01       	movw	r30, r24
    6008:	10 82       	st	Z, r1
    600a:	11 82       	std	Z+1, r1	; 0x01
    600c:	12 82       	std	Z+2, r1	; 0x02
    600e:	13 82       	std	Z+3, r1	; 0x03
    6010:	89 81       	ldd	r24, Y+1	; 0x01
    6012:	9a 81       	ldd	r25, Y+2	; 0x02
    6014:	83 52       	subi	r24, 0x23	; 35
    6016:	9f 4f       	sbci	r25, 0xFF	; 255
    6018:	fc 01       	movw	r30, r24
    601a:	10 82       	st	Z, r1
    601c:	11 82       	std	Z+1, r1	; 0x01
    601e:	12 82       	std	Z+2, r1	; 0x02
    6020:	13 82       	std	Z+3, r1	; 0x03
    6022:	89 81       	ldd	r24, Y+1	; 0x01
    6024:	9a 81       	ldd	r25, Y+2	; 0x02
    6026:	8f 51       	subi	r24, 0x1F	; 31
    6028:	9f 4f       	sbci	r25, 0xFF	; 255
    602a:	fc 01       	movw	r30, r24
    602c:	10 82       	st	Z, r1
    602e:	11 82       	std	Z+1, r1	; 0x01
    6030:	12 82       	std	Z+2, r1	; 0x02
    6032:	13 82       	std	Z+3, r1	; 0x03
    6034:	89 81       	ldd	r24, Y+1	; 0x01
    6036:	9a 81       	ldd	r25, Y+2	; 0x02
    6038:	8b 51       	subi	r24, 0x1B	; 27
    603a:	9f 4f       	sbci	r25, 0xFF	; 255
    603c:	fc 01       	movw	r30, r24
    603e:	10 82       	st	Z, r1
    6040:	11 82       	std	Z+1, r1	; 0x01
    6042:	12 82       	std	Z+2, r1	; 0x02
    6044:	13 82       	std	Z+3, r1	; 0x03
    6046:	89 81       	ldd	r24, Y+1	; 0x01
    6048:	9a 81       	ldd	r25, Y+2	; 0x02
    604a:	87 51       	subi	r24, 0x17	; 23
    604c:	9f 4f       	sbci	r25, 0xFF	; 255
    604e:	fc 01       	movw	r30, r24
    6050:	10 82       	st	Z, r1
    6052:	11 82       	std	Z+1, r1	; 0x01
    6054:	12 82       	std	Z+2, r1	; 0x02
    6056:	13 82       	std	Z+3, r1	; 0x03
				{
				
				}
    6058:	0f 90       	pop	r0
    605a:	0f 90       	pop	r0
    605c:	df 91       	pop	r29
    605e:	cf 91       	pop	r28
    6060:	08 95       	ret

00006062 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>:
			
				~SystemTelemetryMessage() {}
    6062:	cf 93       	push	r28
    6064:	df 93       	push	r29
    6066:	1f 92       	push	r1
    6068:	1f 92       	push	r1
    606a:	cd b7       	in	r28, 0x3d	; 61
    606c:	de b7       	in	r29, 0x3e	; 62
    606e:	9a 83       	std	Y+2, r25	; 0x02
    6070:	89 83       	std	Y+1, r24	; 0x01
    6072:	89 81       	ldd	r24, Y+1	; 0x01
    6074:	9a 81       	ldd	r25, Y+2	; 0x02
    6076:	2e e3       	ldi	r18, 0x3E	; 62
    6078:	32 e0       	ldi	r19, 0x02	; 2
    607a:	fc 01       	movw	r30, r24
    607c:	31 83       	std	Z+1, r19	; 0x01
    607e:	20 83       	st	Z, r18
    6080:	89 81       	ldd	r24, Y+1	; 0x01
    6082:	9a 81       	ldd	r25, Y+2	; 0x02
    6084:	0e 94 d7 28 	call	0x51ae	; 0x51ae <_ZN10helicopter8messages7MessageD1Ev>
    6088:	80 e0       	ldi	r24, 0x00	; 0
    608a:	90 e0       	ldi	r25, 0x00	; 0
    608c:	81 70       	andi	r24, 0x01	; 1
    608e:	99 27       	eor	r25, r25
    6090:	00 97       	sbiw	r24, 0x00	; 0
    6092:	21 f0       	breq	.+8      	; 0x609c <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev+0x3a>
    6094:	89 81       	ldd	r24, Y+1	; 0x01
    6096:	9a 81       	ldd	r25, Y+2	; 0x02
    6098:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    609c:	0f 90       	pop	r0
    609e:	0f 90       	pop	r0
    60a0:	df 91       	pop	r29
    60a2:	cf 91       	pop	r28
    60a4:	08 95       	ret

000060a6 <_ZN10helicopter8messages22SystemTelemetryMessageD0Ev>:
    60a6:	cf 93       	push	r28
    60a8:	df 93       	push	r29
    60aa:	1f 92       	push	r1
    60ac:	1f 92       	push	r1
    60ae:	cd b7       	in	r28, 0x3d	; 61
    60b0:	de b7       	in	r29, 0x3e	; 62
    60b2:	9a 83       	std	Y+2, r25	; 0x02
    60b4:	89 83       	std	Y+1, r24	; 0x01
    60b6:	89 81       	ldd	r24, Y+1	; 0x01
    60b8:	9a 81       	ldd	r25, Y+2	; 0x02
    60ba:	0e 94 31 30 	call	0x6062	; 0x6062 <_ZN10helicopter8messages22SystemTelemetryMessageD1Ev>
    60be:	89 81       	ldd	r24, Y+1	; 0x01
    60c0:	9a 81       	ldd	r25, Y+2	; 0x02
    60c2:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    60c6:	0f 90       	pop	r0
    60c8:	0f 90       	pop	r0
    60ca:	df 91       	pop	r29
    60cc:	cf 91       	pop	r28
    60ce:	08 95       	ret

000060d0 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv>:

using namespace helicopter::messages;


byte *SystemTelemetryMessage::getBytes()
{
    60d0:	cf 93       	push	r28
    60d2:	df 93       	push	r29
    60d4:	00 d0       	rcall	.+0      	; 0x60d6 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv+0x6>
    60d6:	00 d0       	rcall	.+0      	; 0x60d8 <_ZN10helicopter8messages22SystemTelemetryMessage8getBytesEv+0x8>
    60d8:	cd b7       	in	r28, 0x3d	; 61
    60da:	de b7       	in	r29, 0x3e	; 62
    60dc:	9e 83       	std	Y+6, r25	; 0x06
    60de:	8d 83       	std	Y+5, r24	; 0x05
	byte *msg = new byte[MessageSize];
    60e0:	89 ee       	ldi	r24, 0xE9	; 233
    60e2:	90 e0       	ldi	r25, 0x00	; 0
    60e4:	0e 94 14 45 	call	0x8a28	; 0x8a28 <_Znaj>
    60e8:	9a 83       	std	Y+2, r25	; 0x02
    60ea:	89 83       	std	Y+1, r24	; 0x01
	byte *msgPtr = msg;
    60ec:	89 81       	ldd	r24, Y+1	; 0x01
    60ee:	9a 81       	ldd	r25, Y+2	; 0x02
    60f0:	9c 83       	std	Y+4, r25	; 0x04
    60f2:	8b 83       	std	Y+3, r24	; 0x03
	
	encode (msgPtr, msgType);
    60f4:	8d 81       	ldd	r24, Y+5	; 0x05
    60f6:	9e 81       	ldd	r25, Y+6	; 0x06
    60f8:	ac 01       	movw	r20, r24
    60fa:	4e 5f       	subi	r20, 0xFE	; 254
    60fc:	5f 4f       	sbci	r21, 0xFF	; 255
    60fe:	8d 81       	ldd	r24, Y+5	; 0x05
    6100:	9e 81       	ldd	r25, Y+6	; 0x06
    6102:	9e 01       	movw	r18, r28
    6104:	2d 5f       	subi	r18, 0xFD	; 253
    6106:	3f 4f       	sbci	r19, 0xFF	; 255
    6108:	b9 01       	movw	r22, r18
    610a:	0e 94 53 2a 	call	0x54a6	; 0x54a6 <_ZN10helicopter8messages7Message6encodeERPhRh>
	encode (msgPtr, MagYaw);
    610e:	8d 81       	ldd	r24, Y+5	; 0x05
    6110:	9e 81       	ldd	r25, Y+6	; 0x06
    6112:	ac 01       	movw	r20, r24
    6114:	4b 5f       	subi	r20, 0xFB	; 251
    6116:	5f 4f       	sbci	r21, 0xFF	; 255
    6118:	8d 81       	ldd	r24, Y+5	; 0x05
    611a:	9e 81       	ldd	r25, Y+6	; 0x06
    611c:	9e 01       	movw	r18, r28
    611e:	2d 5f       	subi	r18, 0xFD	; 253
    6120:	3f 4f       	sbci	r19, 0xFF	; 255
    6122:	b9 01       	movw	r22, r18
    6124:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawVelocityDegreesPerSecond);
    6128:	8d 81       	ldd	r24, Y+5	; 0x05
    612a:	9e 81       	ldd	r25, Y+6	; 0x06
    612c:	ac 01       	movw	r20, r24
    612e:	47 5f       	subi	r20, 0xF7	; 247
    6130:	5f 4f       	sbci	r21, 0xFF	; 255
    6132:	8d 81       	ldd	r24, Y+5	; 0x05
    6134:	9e 81       	ldd	r25, Y+6	; 0x06
    6136:	9e 01       	movw	r18, r28
    6138:	2d 5f       	subi	r18, 0xFD	; 253
    613a:	3f 4f       	sbci	r19, 0xFF	; 255
    613c:	b9 01       	movw	r22, r18
    613e:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawIntegral);
    6142:	8d 81       	ldd	r24, Y+5	; 0x05
    6144:	9e 81       	ldd	r25, Y+6	; 0x06
    6146:	ac 01       	movw	r20, r24
    6148:	43 5f       	subi	r20, 0xF3	; 243
    614a:	5f 4f       	sbci	r21, 0xFF	; 255
    614c:	8d 81       	ldd	r24, Y+5	; 0x05
    614e:	9e 81       	ldd	r25, Y+6	; 0x06
    6150:	9e 01       	movw	r18, r28
    6152:	2d 5f       	subi	r18, 0xFD	; 253
    6154:	3f 4f       	sbci	r19, 0xFF	; 255
    6156:	b9 01       	movw	r22, r18
    6158:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawProportional);
    615c:	8d 81       	ldd	r24, Y+5	; 0x05
    615e:	9e 81       	ldd	r25, Y+6	; 0x06
    6160:	ac 01       	movw	r20, r24
    6162:	4f 5e       	subi	r20, 0xEF	; 239
    6164:	5f 4f       	sbci	r21, 0xFF	; 255
    6166:	8d 81       	ldd	r24, Y+5	; 0x05
    6168:	9e 81       	ldd	r25, Y+6	; 0x06
    616a:	9e 01       	movw	r18, r28
    616c:	2d 5f       	subi	r18, 0xFD	; 253
    616e:	3f 4f       	sbci	r19, 0xFF	; 255
    6170:	b9 01       	movw	r22, r18
    6172:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawDerivativeError);
    6176:	8d 81       	ldd	r24, Y+5	; 0x05
    6178:	9e 81       	ldd	r25, Y+6	; 0x06
    617a:	ac 01       	movw	r20, r24
    617c:	4b 5e       	subi	r20, 0xEB	; 235
    617e:	5f 4f       	sbci	r21, 0xFF	; 255
    6180:	8d 81       	ldd	r24, Y+5	; 0x05
    6182:	9e 81       	ldd	r25, Y+6	; 0x06
    6184:	9e 01       	movw	r18, r28
    6186:	2d 5f       	subi	r18, 0xFD	; 253
    6188:	3f 4f       	sbci	r19, 0xFF	; 255
    618a:	b9 01       	movw	r22, r18
    618c:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawControl);
    6190:	8d 81       	ldd	r24, Y+5	; 0x05
    6192:	9e 81       	ldd	r25, Y+6	; 0x06
    6194:	ac 01       	movw	r20, r24
    6196:	47 5e       	subi	r20, 0xE7	; 231
    6198:	5f 4f       	sbci	r21, 0xFF	; 255
    619a:	8d 81       	ldd	r24, Y+5	; 0x05
    619c:	9e 81       	ldd	r25, Y+6	; 0x06
    619e:	9e 01       	movw	r18, r28
    61a0:	2d 5f       	subi	r18, 0xFD	; 253
    61a2:	3f 4f       	sbci	r19, 0xFF	; 255
    61a4:	b9 01       	movw	r22, r18
    61a6:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawIntegralGain);
    61aa:	8d 81       	ldd	r24, Y+5	; 0x05
    61ac:	9e 81       	ldd	r25, Y+6	; 0x06
    61ae:	ac 01       	movw	r20, r24
    61b0:	43 5e       	subi	r20, 0xE3	; 227
    61b2:	5f 4f       	sbci	r21, 0xFF	; 255
    61b4:	8d 81       	ldd	r24, Y+5	; 0x05
    61b6:	9e 81       	ldd	r25, Y+6	; 0x06
    61b8:	9e 01       	movw	r18, r28
    61ba:	2d 5f       	subi	r18, 0xFD	; 253
    61bc:	3f 4f       	sbci	r19, 0xFF	; 255
    61be:	b9 01       	movw	r22, r18
    61c0:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawDerivativeGain);
    61c4:	8d 81       	ldd	r24, Y+5	; 0x05
    61c6:	9e 81       	ldd	r25, Y+6	; 0x06
    61c8:	ac 01       	movw	r20, r24
    61ca:	4f 5d       	subi	r20, 0xDF	; 223
    61cc:	5f 4f       	sbci	r21, 0xFF	; 255
    61ce:	8d 81       	ldd	r24, Y+5	; 0x05
    61d0:	9e 81       	ldd	r25, Y+6	; 0x06
    61d2:	9e 01       	movw	r18, r28
    61d4:	2d 5f       	subi	r18, 0xFD	; 253
    61d6:	3f 4f       	sbci	r19, 0xFF	; 255
    61d8:	b9 01       	movw	r22, r18
    61da:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawProportionalGain);
    61de:	8d 81       	ldd	r24, Y+5	; 0x05
    61e0:	9e 81       	ldd	r25, Y+6	; 0x06
    61e2:	ac 01       	movw	r20, r24
    61e4:	4b 5d       	subi	r20, 0xDB	; 219
    61e6:	5f 4f       	sbci	r21, 0xFF	; 255
    61e8:	8d 81       	ldd	r24, Y+5	; 0x05
    61ea:	9e 81       	ldd	r25, Y+6	; 0x06
    61ec:	9e 01       	movw	r18, r28
    61ee:	2d 5f       	subi	r18, 0xFD	; 253
    61f0:	3f 4f       	sbci	r19, 0xFF	; 255
    61f2:	b9 01       	movw	r22, r18
    61f4:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YawAntiWindupGain);
    61f8:	8d 81       	ldd	r24, Y+5	; 0x05
    61fa:	9e 81       	ldd	r25, Y+6	; 0x06
    61fc:	ac 01       	movw	r20, r24
    61fe:	47 5d       	subi	r20, 0xD7	; 215
    6200:	5f 4f       	sbci	r21, 0xFF	; 255
    6202:	8d 81       	ldd	r24, Y+5	; 0x05
    6204:	9e 81       	ldd	r25, Y+6	; 0x06
    6206:	9e 01       	movw	r18, r28
    6208:	2d 5f       	subi	r18, 0xFD	; 253
    620a:	3f 4f       	sbci	r19, 0xFF	; 255
    620c:	b9 01       	movw	r22, r18
    620e:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	


	encode (msgPtr, XNEDBodyFrame);
    6212:	8d 81       	ldd	r24, Y+5	; 0x05
    6214:	9e 81       	ldd	r25, Y+6	; 0x06
    6216:	ac 01       	movw	r20, r24
    6218:	43 5d       	subi	r20, 0xD3	; 211
    621a:	5f 4f       	sbci	r21, 0xFF	; 255
    621c:	8d 81       	ldd	r24, Y+5	; 0x05
    621e:	9e 81       	ldd	r25, Y+6	; 0x06
    6220:	9e 01       	movw	r18, r28
    6222:	2d 5f       	subi	r18, 0xFD	; 253
    6224:	3f 4f       	sbci	r19, 0xFF	; 255
    6226:	b9 01       	movw	r22, r18
    6228:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XVelocityMetersPerSecond);
    622c:	8d 81       	ldd	r24, Y+5	; 0x05
    622e:	9e 81       	ldd	r25, Y+6	; 0x06
    6230:	ac 01       	movw	r20, r24
    6232:	4f 5c       	subi	r20, 0xCF	; 207
    6234:	5f 4f       	sbci	r21, 0xFF	; 255
    6236:	8d 81       	ldd	r24, Y+5	; 0x05
    6238:	9e 81       	ldd	r25, Y+6	; 0x06
    623a:	9e 01       	movw	r18, r28
    623c:	2d 5f       	subi	r18, 0xFD	; 253
    623e:	3f 4f       	sbci	r19, 0xFF	; 255
    6240:	b9 01       	movw	r22, r18
    6242:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ThetaPitchDegrees);	
    6246:	8d 81       	ldd	r24, Y+5	; 0x05
    6248:	9e 81       	ldd	r25, Y+6	; 0x06
    624a:	ac 01       	movw	r20, r24
    624c:	4b 5c       	subi	r20, 0xCB	; 203
    624e:	5f 4f       	sbci	r21, 0xFF	; 255
    6250:	8d 81       	ldd	r24, Y+5	; 0x05
    6252:	9e 81       	ldd	r25, Y+6	; 0x06
    6254:	9e 01       	movw	r18, r28
    6256:	2d 5f       	subi	r18, 0xFD	; 253
    6258:	3f 4f       	sbci	r19, 0xFF	; 255
    625a:	b9 01       	movw	r22, r18
    625c:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XIntegral);
    6260:	8d 81       	ldd	r24, Y+5	; 0x05
    6262:	9e 81       	ldd	r25, Y+6	; 0x06
    6264:	ac 01       	movw	r20, r24
    6266:	47 5c       	subi	r20, 0xC7	; 199
    6268:	5f 4f       	sbci	r21, 0xFF	; 255
    626a:	8d 81       	ldd	r24, Y+5	; 0x05
    626c:	9e 81       	ldd	r25, Y+6	; 0x06
    626e:	9e 01       	movw	r18, r28
    6270:	2d 5f       	subi	r18, 0xFD	; 253
    6272:	3f 4f       	sbci	r19, 0xFF	; 255
    6274:	b9 01       	movw	r22, r18
    6276:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XProportional);
    627a:	8d 81       	ldd	r24, Y+5	; 0x05
    627c:	9e 81       	ldd	r25, Y+6	; 0x06
    627e:	ac 01       	movw	r20, r24
    6280:	43 5c       	subi	r20, 0xC3	; 195
    6282:	5f 4f       	sbci	r21, 0xFF	; 255
    6284:	8d 81       	ldd	r24, Y+5	; 0x05
    6286:	9e 81       	ldd	r25, Y+6	; 0x06
    6288:	9e 01       	movw	r18, r28
    628a:	2d 5f       	subi	r18, 0xFD	; 253
    628c:	3f 4f       	sbci	r19, 0xFF	; 255
    628e:	b9 01       	movw	r22, r18
    6290:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XDerivativeError);
    6294:	8d 81       	ldd	r24, Y+5	; 0x05
    6296:	9e 81       	ldd	r25, Y+6	; 0x06
    6298:	ac 01       	movw	r20, r24
    629a:	4f 5b       	subi	r20, 0xBF	; 191
    629c:	5f 4f       	sbci	r21, 0xFF	; 255
    629e:	8d 81       	ldd	r24, Y+5	; 0x05
    62a0:	9e 81       	ldd	r25, Y+6	; 0x06
    62a2:	9e 01       	movw	r18, r28
    62a4:	2d 5f       	subi	r18, 0xFD	; 253
    62a6:	3f 4f       	sbci	r19, 0xFF	; 255
    62a8:	b9 01       	movw	r22, r18
    62aa:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LongitudeControl);
    62ae:	8d 81       	ldd	r24, Y+5	; 0x05
    62b0:	9e 81       	ldd	r25, Y+6	; 0x06
    62b2:	ac 01       	movw	r20, r24
    62b4:	4b 5b       	subi	r20, 0xBB	; 187
    62b6:	5f 4f       	sbci	r21, 0xFF	; 255
    62b8:	8d 81       	ldd	r24, Y+5	; 0x05
    62ba:	9e 81       	ldd	r25, Y+6	; 0x06
    62bc:	9e 01       	movw	r18, r28
    62be:	2d 5f       	subi	r18, 0xFD	; 253
    62c0:	3f 4f       	sbci	r19, 0xFF	; 255
    62c2:	b9 01       	movw	r22, r18
    62c4:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XIntegralGain);
    62c8:	8d 81       	ldd	r24, Y+5	; 0x05
    62ca:	9e 81       	ldd	r25, Y+6	; 0x06
    62cc:	ac 01       	movw	r20, r24
    62ce:	47 5b       	subi	r20, 0xB7	; 183
    62d0:	5f 4f       	sbci	r21, 0xFF	; 255
    62d2:	8d 81       	ldd	r24, Y+5	; 0x05
    62d4:	9e 81       	ldd	r25, Y+6	; 0x06
    62d6:	9e 01       	movw	r18, r28
    62d8:	2d 5f       	subi	r18, 0xFD	; 253
    62da:	3f 4f       	sbci	r19, 0xFF	; 255
    62dc:	b9 01       	movw	r22, r18
    62de:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XDerivativeGain);
    62e2:	8d 81       	ldd	r24, Y+5	; 0x05
    62e4:	9e 81       	ldd	r25, Y+6	; 0x06
    62e6:	ac 01       	movw	r20, r24
    62e8:	43 5b       	subi	r20, 0xB3	; 179
    62ea:	5f 4f       	sbci	r21, 0xFF	; 255
    62ec:	8d 81       	ldd	r24, Y+5	; 0x05
    62ee:	9e 81       	ldd	r25, Y+6	; 0x06
    62f0:	9e 01       	movw	r18, r28
    62f2:	2d 5f       	subi	r18, 0xFD	; 253
    62f4:	3f 4f       	sbci	r19, 0xFF	; 255
    62f6:	b9 01       	movw	r22, r18
    62f8:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XProportionalGain);
    62fc:	8d 81       	ldd	r24, Y+5	; 0x05
    62fe:	9e 81       	ldd	r25, Y+6	; 0x06
    6300:	ac 01       	movw	r20, r24
    6302:	4f 5a       	subi	r20, 0xAF	; 175
    6304:	5f 4f       	sbci	r21, 0xFF	; 255
    6306:	8d 81       	ldd	r24, Y+5	; 0x05
    6308:	9e 81       	ldd	r25, Y+6	; 0x06
    630a:	9e 01       	movw	r18, r28
    630c:	2d 5f       	subi	r18, 0xFD	; 253
    630e:	3f 4f       	sbci	r19, 0xFF	; 255
    6310:	b9 01       	movw	r22, r18
    6312:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XAntiWindupGain);	
    6316:	8d 81       	ldd	r24, Y+5	; 0x05
    6318:	9e 81       	ldd	r25, Y+6	; 0x06
    631a:	ac 01       	movw	r20, r24
    631c:	4b 5a       	subi	r20, 0xAB	; 171
    631e:	5f 4f       	sbci	r21, 0xFF	; 255
    6320:	8d 81       	ldd	r24, Y+5	; 0x05
    6322:	9e 81       	ldd	r25, Y+6	; 0x06
    6324:	9e 01       	movw	r18, r28
    6326:	2d 5f       	subi	r18, 0xFD	; 253
    6328:	3f 4f       	sbci	r19, 0xFF	; 255
    632a:	b9 01       	movw	r22, r18
    632c:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LongitudeInnerLoopGain);	
    6330:	8d 81       	ldd	r24, Y+5	; 0x05
    6332:	9e 81       	ldd	r25, Y+6	; 0x06
    6334:	ac 01       	movw	r20, r24
    6336:	47 5a       	subi	r20, 0xA7	; 167
    6338:	5f 4f       	sbci	r21, 0xFF	; 255
    633a:	8d 81       	ldd	r24, Y+5	; 0x05
    633c:	9e 81       	ldd	r25, Y+6	; 0x06
    633e:	9e 01       	movw	r18, r28
    6340:	2d 5f       	subi	r18, 0xFD	; 253
    6342:	3f 4f       	sbci	r19, 0xFF	; 255
    6344:	b9 01       	movw	r22, r18
    6346:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, XLongitudeOuterLoopSetpoint);
    634a:	8d 81       	ldd	r24, Y+5	; 0x05
    634c:	9e 81       	ldd	r25, Y+6	; 0x06
    634e:	ac 01       	movw	r20, r24
    6350:	43 5a       	subi	r20, 0xA3	; 163
    6352:	5f 4f       	sbci	r21, 0xFF	; 255
    6354:	8d 81       	ldd	r24, Y+5	; 0x05
    6356:	9e 81       	ldd	r25, Y+6	; 0x06
    6358:	9e 01       	movw	r18, r28
    635a:	2d 5f       	subi	r18, 0xFD	; 253
    635c:	3f 4f       	sbci	r19, 0xFF	; 255
    635e:	b9 01       	movw	r22, r18
    6360:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, PitchAngularVelocityRadsPerSecond);
    6364:	8d 81       	ldd	r24, Y+5	; 0x05
    6366:	9e 81       	ldd	r25, Y+6	; 0x06
    6368:	ac 01       	movw	r20, r24
    636a:	4f 59       	subi	r20, 0x9F	; 159
    636c:	5f 4f       	sbci	r21, 0xFF	; 255
    636e:	8d 81       	ldd	r24, Y+5	; 0x05
    6370:	9e 81       	ldd	r25, Y+6	; 0x06
    6372:	9e 01       	movw	r18, r28
    6374:	2d 5f       	subi	r18, 0xFD	; 253
    6376:	3f 4f       	sbci	r19, 0xFF	; 255
    6378:	b9 01       	movw	r22, r18
    637a:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, PitchAngularVelocityGain);
    637e:	8d 81       	ldd	r24, Y+5	; 0x05
    6380:	9e 81       	ldd	r25, Y+6	; 0x06
    6382:	ac 01       	movw	r20, r24
    6384:	4b 59       	subi	r20, 0x9B	; 155
    6386:	5f 4f       	sbci	r21, 0xFF	; 255
    6388:	8d 81       	ldd	r24, Y+5	; 0x05
    638a:	9e 81       	ldd	r25, Y+6	; 0x06
    638c:	9e 01       	movw	r18, r28
    638e:	2d 5f       	subi	r18, 0xFD	; 253
    6390:	3f 4f       	sbci	r19, 0xFF	; 255
    6392:	b9 01       	movw	r22, r18
    6394:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	
	encode (msgPtr, YNEDBodyFrame);
    6398:	8d 81       	ldd	r24, Y+5	; 0x05
    639a:	9e 81       	ldd	r25, Y+6	; 0x06
    639c:	ac 01       	movw	r20, r24
    639e:	47 59       	subi	r20, 0x97	; 151
    63a0:	5f 4f       	sbci	r21, 0xFF	; 255
    63a2:	8d 81       	ldd	r24, Y+5	; 0x05
    63a4:	9e 81       	ldd	r25, Y+6	; 0x06
    63a6:	9e 01       	movw	r18, r28
    63a8:	2d 5f       	subi	r18, 0xFD	; 253
    63aa:	3f 4f       	sbci	r19, 0xFF	; 255
    63ac:	b9 01       	movw	r22, r18
    63ae:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YVelocityMetersPerSecond);
    63b2:	8d 81       	ldd	r24, Y+5	; 0x05
    63b4:	9e 81       	ldd	r25, Y+6	; 0x06
    63b6:	ac 01       	movw	r20, r24
    63b8:	43 59       	subi	r20, 0x93	; 147
    63ba:	5f 4f       	sbci	r21, 0xFF	; 255
    63bc:	8d 81       	ldd	r24, Y+5	; 0x05
    63be:	9e 81       	ldd	r25, Y+6	; 0x06
    63c0:	9e 01       	movw	r18, r28
    63c2:	2d 5f       	subi	r18, 0xFD	; 253
    63c4:	3f 4f       	sbci	r19, 0xFF	; 255
    63c6:	b9 01       	movw	r22, r18
    63c8:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, PhiRollDegrees);
    63cc:	8d 81       	ldd	r24, Y+5	; 0x05
    63ce:	9e 81       	ldd	r25, Y+6	; 0x06
    63d0:	ac 01       	movw	r20, r24
    63d2:	4f 58       	subi	r20, 0x8F	; 143
    63d4:	5f 4f       	sbci	r21, 0xFF	; 255
    63d6:	8d 81       	ldd	r24, Y+5	; 0x05
    63d8:	9e 81       	ldd	r25, Y+6	; 0x06
    63da:	9e 01       	movw	r18, r28
    63dc:	2d 5f       	subi	r18, 0xFD	; 253
    63de:	3f 4f       	sbci	r19, 0xFF	; 255
    63e0:	b9 01       	movw	r22, r18
    63e2:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YIntegral);
    63e6:	8d 81       	ldd	r24, Y+5	; 0x05
    63e8:	9e 81       	ldd	r25, Y+6	; 0x06
    63ea:	ac 01       	movw	r20, r24
    63ec:	4b 58       	subi	r20, 0x8B	; 139
    63ee:	5f 4f       	sbci	r21, 0xFF	; 255
    63f0:	8d 81       	ldd	r24, Y+5	; 0x05
    63f2:	9e 81       	ldd	r25, Y+6	; 0x06
    63f4:	9e 01       	movw	r18, r28
    63f6:	2d 5f       	subi	r18, 0xFD	; 253
    63f8:	3f 4f       	sbci	r19, 0xFF	; 255
    63fa:	b9 01       	movw	r22, r18
    63fc:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YProportional);
    6400:	8d 81       	ldd	r24, Y+5	; 0x05
    6402:	9e 81       	ldd	r25, Y+6	; 0x06
    6404:	ac 01       	movw	r20, r24
    6406:	47 58       	subi	r20, 0x87	; 135
    6408:	5f 4f       	sbci	r21, 0xFF	; 255
    640a:	8d 81       	ldd	r24, Y+5	; 0x05
    640c:	9e 81       	ldd	r25, Y+6	; 0x06
    640e:	9e 01       	movw	r18, r28
    6410:	2d 5f       	subi	r18, 0xFD	; 253
    6412:	3f 4f       	sbci	r19, 0xFF	; 255
    6414:	b9 01       	movw	r22, r18
    6416:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YDerivativeError);
    641a:	8d 81       	ldd	r24, Y+5	; 0x05
    641c:	9e 81       	ldd	r25, Y+6	; 0x06
    641e:	ac 01       	movw	r20, r24
    6420:	43 58       	subi	r20, 0x83	; 131
    6422:	5f 4f       	sbci	r21, 0xFF	; 255
    6424:	8d 81       	ldd	r24, Y+5	; 0x05
    6426:	9e 81       	ldd	r25, Y+6	; 0x06
    6428:	9e 01       	movw	r18, r28
    642a:	2d 5f       	subi	r18, 0xFD	; 253
    642c:	3f 4f       	sbci	r19, 0xFF	; 255
    642e:	b9 01       	movw	r22, r18
    6430:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LateralControl);
    6434:	8d 81       	ldd	r24, Y+5	; 0x05
    6436:	9e 81       	ldd	r25, Y+6	; 0x06
    6438:	ac 01       	movw	r20, r24
    643a:	4f 57       	subi	r20, 0x7F	; 127
    643c:	5f 4f       	sbci	r21, 0xFF	; 255
    643e:	8d 81       	ldd	r24, Y+5	; 0x05
    6440:	9e 81       	ldd	r25, Y+6	; 0x06
    6442:	9e 01       	movw	r18, r28
    6444:	2d 5f       	subi	r18, 0xFD	; 253
    6446:	3f 4f       	sbci	r19, 0xFF	; 255
    6448:	b9 01       	movw	r22, r18
    644a:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YIntegralGain);
    644e:	8d 81       	ldd	r24, Y+5	; 0x05
    6450:	9e 81       	ldd	r25, Y+6	; 0x06
    6452:	ac 01       	movw	r20, r24
    6454:	4b 57       	subi	r20, 0x7B	; 123
    6456:	5f 4f       	sbci	r21, 0xFF	; 255
    6458:	8d 81       	ldd	r24, Y+5	; 0x05
    645a:	9e 81       	ldd	r25, Y+6	; 0x06
    645c:	9e 01       	movw	r18, r28
    645e:	2d 5f       	subi	r18, 0xFD	; 253
    6460:	3f 4f       	sbci	r19, 0xFF	; 255
    6462:	b9 01       	movw	r22, r18
    6464:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YDerivativeGain);
    6468:	8d 81       	ldd	r24, Y+5	; 0x05
    646a:	9e 81       	ldd	r25, Y+6	; 0x06
    646c:	ac 01       	movw	r20, r24
    646e:	47 57       	subi	r20, 0x77	; 119
    6470:	5f 4f       	sbci	r21, 0xFF	; 255
    6472:	8d 81       	ldd	r24, Y+5	; 0x05
    6474:	9e 81       	ldd	r25, Y+6	; 0x06
    6476:	9e 01       	movw	r18, r28
    6478:	2d 5f       	subi	r18, 0xFD	; 253
    647a:	3f 4f       	sbci	r19, 0xFF	; 255
    647c:	b9 01       	movw	r22, r18
    647e:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YProportionalGain);
    6482:	8d 81       	ldd	r24, Y+5	; 0x05
    6484:	9e 81       	ldd	r25, Y+6	; 0x06
    6486:	ac 01       	movw	r20, r24
    6488:	43 57       	subi	r20, 0x73	; 115
    648a:	5f 4f       	sbci	r21, 0xFF	; 255
    648c:	8d 81       	ldd	r24, Y+5	; 0x05
    648e:	9e 81       	ldd	r25, Y+6	; 0x06
    6490:	9e 01       	movw	r18, r28
    6492:	2d 5f       	subi	r18, 0xFD	; 253
    6494:	3f 4f       	sbci	r19, 0xFF	; 255
    6496:	b9 01       	movw	r22, r18
    6498:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YAntiWindupGain);
    649c:	8d 81       	ldd	r24, Y+5	; 0x05
    649e:	9e 81       	ldd	r25, Y+6	; 0x06
    64a0:	ac 01       	movw	r20, r24
    64a2:	4f 56       	subi	r20, 0x6F	; 111
    64a4:	5f 4f       	sbci	r21, 0xFF	; 255
    64a6:	8d 81       	ldd	r24, Y+5	; 0x05
    64a8:	9e 81       	ldd	r25, Y+6	; 0x06
    64aa:	9e 01       	movw	r18, r28
    64ac:	2d 5f       	subi	r18, 0xFD	; 253
    64ae:	3f 4f       	sbci	r19, 0xFF	; 255
    64b0:	b9 01       	movw	r22, r18
    64b2:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, LateralInnerLoopGain);	
    64b6:	8d 81       	ldd	r24, Y+5	; 0x05
    64b8:	9e 81       	ldd	r25, Y+6	; 0x06
    64ba:	ac 01       	movw	r20, r24
    64bc:	4b 56       	subi	r20, 0x6B	; 107
    64be:	5f 4f       	sbci	r21, 0xFF	; 255
    64c0:	8d 81       	ldd	r24, Y+5	; 0x05
    64c2:	9e 81       	ldd	r25, Y+6	; 0x06
    64c4:	9e 01       	movw	r18, r28
    64c6:	2d 5f       	subi	r18, 0xFD	; 253
    64c8:	3f 4f       	sbci	r19, 0xFF	; 255
    64ca:	b9 01       	movw	r22, r18
    64cc:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, YLateralOuterLoopSetpoint);
    64d0:	8d 81       	ldd	r24, Y+5	; 0x05
    64d2:	9e 81       	ldd	r25, Y+6	; 0x06
    64d4:	ac 01       	movw	r20, r24
    64d6:	47 56       	subi	r20, 0x67	; 103
    64d8:	5f 4f       	sbci	r21, 0xFF	; 255
    64da:	8d 81       	ldd	r24, Y+5	; 0x05
    64dc:	9e 81       	ldd	r25, Y+6	; 0x06
    64de:	9e 01       	movw	r18, r28
    64e0:	2d 5f       	subi	r18, 0xFD	; 253
    64e2:	3f 4f       	sbci	r19, 0xFF	; 255
    64e4:	b9 01       	movw	r22, r18
    64e6:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, RollAngularVelocityRadsPerSecond);
    64ea:	8d 81       	ldd	r24, Y+5	; 0x05
    64ec:	9e 81       	ldd	r25, Y+6	; 0x06
    64ee:	ac 01       	movw	r20, r24
    64f0:	43 56       	subi	r20, 0x63	; 99
    64f2:	5f 4f       	sbci	r21, 0xFF	; 255
    64f4:	8d 81       	ldd	r24, Y+5	; 0x05
    64f6:	9e 81       	ldd	r25, Y+6	; 0x06
    64f8:	9e 01       	movw	r18, r28
    64fa:	2d 5f       	subi	r18, 0xFD	; 253
    64fc:	3f 4f       	sbci	r19, 0xFF	; 255
    64fe:	b9 01       	movw	r22, r18
    6500:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, RollAngularVelocityGain);
    6504:	8d 81       	ldd	r24, Y+5	; 0x05
    6506:	9e 81       	ldd	r25, Y+6	; 0x06
    6508:	ac 01       	movw	r20, r24
    650a:	4f 55       	subi	r20, 0x5F	; 95
    650c:	5f 4f       	sbci	r21, 0xFF	; 255
    650e:	8d 81       	ldd	r24, Y+5	; 0x05
    6510:	9e 81       	ldd	r25, Y+6	; 0x06
    6512:	9e 01       	movw	r18, r28
    6514:	2d 5f       	subi	r18, 0xFD	; 253
    6516:	3f 4f       	sbci	r19, 0xFF	; 255
    6518:	b9 01       	movw	r22, r18
    651a:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	

	encode (msgPtr, AltitudeFeetAgl);
    651e:	8d 81       	ldd	r24, Y+5	; 0x05
    6520:	9e 81       	ldd	r25, Y+6	; 0x06
    6522:	ac 01       	movw	r20, r24
    6524:	4b 55       	subi	r20, 0x5B	; 91
    6526:	5f 4f       	sbci	r21, 0xFF	; 255
    6528:	8d 81       	ldd	r24, Y+5	; 0x05
    652a:	9e 81       	ldd	r25, Y+6	; 0x06
    652c:	9e 01       	movw	r18, r28
    652e:	2d 5f       	subi	r18, 0xFD	; 253
    6530:	3f 4f       	sbci	r19, 0xFF	; 255
    6532:	b9 01       	movw	r22, r18
    6534:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZVelocityMetersPerSecond);
    6538:	8d 81       	ldd	r24, Y+5	; 0x05
    653a:	9e 81       	ldd	r25, Y+6	; 0x06
    653c:	ac 01       	movw	r20, r24
    653e:	47 55       	subi	r20, 0x57	; 87
    6540:	5f 4f       	sbci	r21, 0xFF	; 255
    6542:	8d 81       	ldd	r24, Y+5	; 0x05
    6544:	9e 81       	ldd	r25, Y+6	; 0x06
    6546:	9e 01       	movw	r18, r28
    6548:	2d 5f       	subi	r18, 0xFD	; 253
    654a:	3f 4f       	sbci	r19, 0xFF	; 255
    654c:	b9 01       	movw	r22, r18
    654e:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZIntegral);
    6552:	8d 81       	ldd	r24, Y+5	; 0x05
    6554:	9e 81       	ldd	r25, Y+6	; 0x06
    6556:	ac 01       	movw	r20, r24
    6558:	43 55       	subi	r20, 0x53	; 83
    655a:	5f 4f       	sbci	r21, 0xFF	; 255
    655c:	8d 81       	ldd	r24, Y+5	; 0x05
    655e:	9e 81       	ldd	r25, Y+6	; 0x06
    6560:	9e 01       	movw	r18, r28
    6562:	2d 5f       	subi	r18, 0xFD	; 253
    6564:	3f 4f       	sbci	r19, 0xFF	; 255
    6566:	b9 01       	movw	r22, r18
    6568:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZProportional);
    656c:	8d 81       	ldd	r24, Y+5	; 0x05
    656e:	9e 81       	ldd	r25, Y+6	; 0x06
    6570:	ac 01       	movw	r20, r24
    6572:	4f 54       	subi	r20, 0x4F	; 79
    6574:	5f 4f       	sbci	r21, 0xFF	; 255
    6576:	8d 81       	ldd	r24, Y+5	; 0x05
    6578:	9e 81       	ldd	r25, Y+6	; 0x06
    657a:	9e 01       	movw	r18, r28
    657c:	2d 5f       	subi	r18, 0xFD	; 253
    657e:	3f 4f       	sbci	r19, 0xFF	; 255
    6580:	b9 01       	movw	r22, r18
    6582:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZDerivativeError);
    6586:	8d 81       	ldd	r24, Y+5	; 0x05
    6588:	9e 81       	ldd	r25, Y+6	; 0x06
    658a:	ac 01       	movw	r20, r24
    658c:	4b 54       	subi	r20, 0x4B	; 75
    658e:	5f 4f       	sbci	r21, 0xFF	; 255
    6590:	8d 81       	ldd	r24, Y+5	; 0x05
    6592:	9e 81       	ldd	r25, Y+6	; 0x06
    6594:	9e 01       	movw	r18, r28
    6596:	2d 5f       	subi	r18, 0xFD	; 253
    6598:	3f 4f       	sbci	r19, 0xFF	; 255
    659a:	b9 01       	movw	r22, r18
    659c:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, MainRotorCollectiveControl);
    65a0:	8d 81       	ldd	r24, Y+5	; 0x05
    65a2:	9e 81       	ldd	r25, Y+6	; 0x06
    65a4:	ac 01       	movw	r20, r24
    65a6:	47 54       	subi	r20, 0x47	; 71
    65a8:	5f 4f       	sbci	r21, 0xFF	; 255
    65aa:	8d 81       	ldd	r24, Y+5	; 0x05
    65ac:	9e 81       	ldd	r25, Y+6	; 0x06
    65ae:	9e 01       	movw	r18, r28
    65b0:	2d 5f       	subi	r18, 0xFD	; 253
    65b2:	3f 4f       	sbci	r19, 0xFF	; 255
    65b4:	b9 01       	movw	r22, r18
    65b6:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZIntegralGain);
    65ba:	8d 81       	ldd	r24, Y+5	; 0x05
    65bc:	9e 81       	ldd	r25, Y+6	; 0x06
    65be:	ac 01       	movw	r20, r24
    65c0:	43 54       	subi	r20, 0x43	; 67
    65c2:	5f 4f       	sbci	r21, 0xFF	; 255
    65c4:	8d 81       	ldd	r24, Y+5	; 0x05
    65c6:	9e 81       	ldd	r25, Y+6	; 0x06
    65c8:	9e 01       	movw	r18, r28
    65ca:	2d 5f       	subi	r18, 0xFD	; 253
    65cc:	3f 4f       	sbci	r19, 0xFF	; 255
    65ce:	b9 01       	movw	r22, r18
    65d0:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZDerivativeGain);
    65d4:	8d 81       	ldd	r24, Y+5	; 0x05
    65d6:	9e 81       	ldd	r25, Y+6	; 0x06
    65d8:	ac 01       	movw	r20, r24
    65da:	4f 53       	subi	r20, 0x3F	; 63
    65dc:	5f 4f       	sbci	r21, 0xFF	; 255
    65de:	8d 81       	ldd	r24, Y+5	; 0x05
    65e0:	9e 81       	ldd	r25, Y+6	; 0x06
    65e2:	9e 01       	movw	r18, r28
    65e4:	2d 5f       	subi	r18, 0xFD	; 253
    65e6:	3f 4f       	sbci	r19, 0xFF	; 255
    65e8:	b9 01       	movw	r22, r18
    65ea:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZProportionalGain);
    65ee:	8d 81       	ldd	r24, Y+5	; 0x05
    65f0:	9e 81       	ldd	r25, Y+6	; 0x06
    65f2:	ac 01       	movw	r20, r24
    65f4:	4b 53       	subi	r20, 0x3B	; 59
    65f6:	5f 4f       	sbci	r21, 0xFF	; 255
    65f8:	8d 81       	ldd	r24, Y+5	; 0x05
    65fa:	9e 81       	ldd	r25, Y+6	; 0x06
    65fc:	9e 01       	movw	r18, r28
    65fe:	2d 5f       	subi	r18, 0xFD	; 253
    6600:	3f 4f       	sbci	r19, 0xFF	; 255
    6602:	b9 01       	movw	r22, r18
    6604:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZAntiWindupGain);
    6608:	8d 81       	ldd	r24, Y+5	; 0x05
    660a:	9e 81       	ldd	r25, Y+6	; 0x06
    660c:	ac 01       	movw	r20, r24
    660e:	47 53       	subi	r20, 0x37	; 55
    6610:	5f 4f       	sbci	r21, 0xFF	; 255
    6612:	8d 81       	ldd	r24, Y+5	; 0x05
    6614:	9e 81       	ldd	r25, Y+6	; 0x06
    6616:	9e 01       	movw	r18, r28
    6618:	2d 5f       	subi	r18, 0xFD	; 253
    661a:	3f 4f       	sbci	r19, 0xFF	; 255
    661c:	b9 01       	movw	r22, r18
    661e:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode (msgPtr, ZNEDBodyFrame);
    6622:	8d 81       	ldd	r24, Y+5	; 0x05
    6624:	9e 81       	ldd	r25, Y+6	; 0x06
    6626:	ac 01       	movw	r20, r24
    6628:	43 53       	subi	r20, 0x33	; 51
    662a:	5f 4f       	sbci	r21, 0xFF	; 255
    662c:	8d 81       	ldd	r24, Y+5	; 0x05
    662e:	9e 81       	ldd	r25, Y+6	; 0x06
    6630:	9e 01       	movw	r18, r28
    6632:	2d 5f       	subi	r18, 0xFD	; 253
    6634:	3f 4f       	sbci	r19, 0xFF	; 255
    6636:	b9 01       	movw	r22, r18
    6638:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
		
	
	encode(msgPtr, LatitudeDegrees);
    663c:	8d 81       	ldd	r24, Y+5	; 0x05
    663e:	9e 81       	ldd	r25, Y+6	; 0x06
    6640:	ac 01       	movw	r20, r24
    6642:	4f 52       	subi	r20, 0x2F	; 47
    6644:	5f 4f       	sbci	r21, 0xFF	; 255
    6646:	8d 81       	ldd	r24, Y+5	; 0x05
    6648:	9e 81       	ldd	r25, Y+6	; 0x06
    664a:	9e 01       	movw	r18, r28
    664c:	2d 5f       	subi	r18, 0xFD	; 253
    664e:	3f 4f       	sbci	r19, 0xFF	; 255
    6650:	b9 01       	movw	r22, r18
    6652:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	encode(msgPtr, LongitudeDegrees);
    6656:	8d 81       	ldd	r24, Y+5	; 0x05
    6658:	9e 81       	ldd	r25, Y+6	; 0x06
    665a:	ac 01       	movw	r20, r24
    665c:	4b 52       	subi	r20, 0x2B	; 43
    665e:	5f 4f       	sbci	r21, 0xFF	; 255
    6660:	8d 81       	ldd	r24, Y+5	; 0x05
    6662:	9e 81       	ldd	r25, Y+6	; 0x06
    6664:	9e 01       	movw	r18, r28
    6666:	2d 5f       	subi	r18, 0xFD	; 253
    6668:	3f 4f       	sbci	r19, 0xFF	; 255
    666a:	b9 01       	movw	r22, r18
    666c:	0e 94 25 2a 	call	0x544a	; 0x544a <_ZN10helicopter8messages7Message6encodeERPhRf>
	
	encode (msgPtr, Timeouts);
    6670:	8d 81       	ldd	r24, Y+5	; 0x05
    6672:	9e 81       	ldd	r25, Y+6	; 0x06
    6674:	ac 01       	movw	r20, r24
    6676:	47 52       	subi	r20, 0x27	; 39
    6678:	5f 4f       	sbci	r21, 0xFF	; 255
    667a:	8d 81       	ldd	r24, Y+5	; 0x05
    667c:	9e 81       	ldd	r25, Y+6	; 0x06
    667e:	9e 01       	movw	r18, r28
    6680:	2d 5f       	subi	r18, 0xFD	; 253
    6682:	3f 4f       	sbci	r19, 0xFF	; 255
    6684:	b9 01       	movw	r22, r18
    6686:	0e 94 f7 29 	call	0x53ee	; 0x53ee <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, UnrecognizedMsgTypes);
    668a:	8d 81       	ldd	r24, Y+5	; 0x05
    668c:	9e 81       	ldd	r25, Y+6	; 0x06
    668e:	ac 01       	movw	r20, r24
    6690:	43 52       	subi	r20, 0x23	; 35
    6692:	5f 4f       	sbci	r21, 0xFF	; 255
    6694:	8d 81       	ldd	r24, Y+5	; 0x05
    6696:	9e 81       	ldd	r25, Y+6	; 0x06
    6698:	9e 01       	movw	r18, r28
    669a:	2d 5f       	subi	r18, 0xFD	; 253
    669c:	3f 4f       	sbci	r19, 0xFF	; 255
    669e:	b9 01       	movw	r22, r18
    66a0:	0e 94 f7 29 	call	0x53ee	; 0x53ee <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, ChecksumErrors);
    66a4:	8d 81       	ldd	r24, Y+5	; 0x05
    66a6:	9e 81       	ldd	r25, Y+6	; 0x06
    66a8:	ac 01       	movw	r20, r24
    66aa:	4f 51       	subi	r20, 0x1F	; 31
    66ac:	5f 4f       	sbci	r21, 0xFF	; 255
    66ae:	8d 81       	ldd	r24, Y+5	; 0x05
    66b0:	9e 81       	ldd	r25, Y+6	; 0x06
    66b2:	9e 01       	movw	r18, r28
    66b4:	2d 5f       	subi	r18, 0xFD	; 253
    66b6:	3f 4f       	sbci	r19, 0xFF	; 255
    66b8:	b9 01       	movw	r22, r18
    66ba:	0e 94 f7 29 	call	0x53ee	; 0x53ee <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, NumOfBlownFrames);
    66be:	8d 81       	ldd	r24, Y+5	; 0x05
    66c0:	9e 81       	ldd	r25, Y+6	; 0x06
    66c2:	ac 01       	movw	r20, r24
    66c4:	4b 51       	subi	r20, 0x1B	; 27
    66c6:	5f 4f       	sbci	r21, 0xFF	; 255
    66c8:	8d 81       	ldd	r24, Y+5	; 0x05
    66ca:	9e 81       	ldd	r25, Y+6	; 0x06
    66cc:	9e 01       	movw	r18, r28
    66ce:	2d 5f       	subi	r18, 0xFD	; 253
    66d0:	3f 4f       	sbci	r19, 0xFF	; 255
    66d2:	b9 01       	movw	r22, r18
    66d4:	0e 94 f7 29 	call	0x53ee	; 0x53ee <_ZN10helicopter8messages7Message6encodeERPhRl>
	encode (msgPtr, SerialCommunicationBufferOverruns);
    66d8:	8d 81       	ldd	r24, Y+5	; 0x05
    66da:	9e 81       	ldd	r25, Y+6	; 0x06
    66dc:	ac 01       	movw	r20, r24
    66de:	47 51       	subi	r20, 0x17	; 23
    66e0:	5f 4f       	sbci	r21, 0xFF	; 255
    66e2:	8d 81       	ldd	r24, Y+5	; 0x05
    66e4:	9e 81       	ldd	r25, Y+6	; 0x06
    66e6:	9e 01       	movw	r18, r28
    66e8:	2d 5f       	subi	r18, 0xFD	; 253
    66ea:	3f 4f       	sbci	r19, 0xFF	; 255
    66ec:	b9 01       	movw	r22, r18
    66ee:	0e 94 f7 29 	call	0x53ee	; 0x53ee <_ZN10helicopter8messages7Message6encodeERPhRl>
				
	return msg;
    66f2:	89 81       	ldd	r24, Y+1	; 0x01
    66f4:	9a 81       	ldd	r25, Y+2	; 0x02
}
    66f6:	26 96       	adiw	r28, 0x06	; 6
    66f8:	0f b6       	in	r0, 0x3f	; 63
    66fa:	f8 94       	cli
    66fc:	de bf       	out	0x3e, r29	; 62
    66fe:	0f be       	out	0x3f, r0	; 63
    6700:	cd bf       	out	0x3d, r28	; 61
    6702:	df 91       	pop	r29
    6704:	cf 91       	pop	r28
    6706:	08 95       	ret

00006708 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh>:

void SystemTelemetryMessage::buildMessage(byte *message)
{
    6708:	cf 93       	push	r28
    670a:	df 93       	push	r29
    670c:	00 d0       	rcall	.+0      	; 0x670e <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x6>
    670e:	1f 92       	push	r1
    6710:	cd b7       	in	r28, 0x3d	; 61
    6712:	de b7       	in	r29, 0x3e	; 62
    6714:	9a 83       	std	Y+2, r25	; 0x02
    6716:	89 83       	std	Y+1, r24	; 0x01
    6718:	7c 83       	std	Y+4, r23	; 0x04
    671a:	6b 83       	std	Y+3, r22	; 0x03
	if (message != NULL)
    671c:	8b 81       	ldd	r24, Y+3	; 0x03
    671e:	9c 81       	ldd	r25, Y+4	; 0x04
    6720:	00 97       	sbiw	r24, 0x00	; 0
    6722:	09 f4       	brne	.+2      	; 0x6726 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x1e>
    6724:	ff c2       	rjmp	.+1534   	; 0x6d24 <_ZN10helicopter8messages22SystemTelemetryMessage12buildMessageEPh+0x61c>
	{
		decode (message,msgType);
    6726:	89 81       	ldd	r24, Y+1	; 0x01
    6728:	9a 81       	ldd	r25, Y+2	; 0x02
    672a:	ac 01       	movw	r20, r24
    672c:	4e 5f       	subi	r20, 0xFE	; 254
    672e:	5f 4f       	sbci	r21, 0xFF	; 255
    6730:	89 81       	ldd	r24, Y+1	; 0x01
    6732:	9a 81       	ldd	r25, Y+2	; 0x02
    6734:	9e 01       	movw	r18, r28
    6736:	2d 5f       	subi	r18, 0xFD	; 253
    6738:	3f 4f       	sbci	r19, 0xFF	; 255
    673a:	b9 01       	movw	r22, r18
    673c:	0e 94 80 2a 	call	0x5500	; 0x5500 <_ZN10helicopter8messages7Message6decodeERPhRh>
		decode (message,MagYaw);
    6740:	89 81       	ldd	r24, Y+1	; 0x01
    6742:	9a 81       	ldd	r25, Y+2	; 0x02
    6744:	ac 01       	movw	r20, r24
    6746:	4b 5f       	subi	r20, 0xFB	; 251
    6748:	5f 4f       	sbci	r21, 0xFF	; 255
    674a:	89 81       	ldd	r24, Y+1	; 0x01
    674c:	9a 81       	ldd	r25, Y+2	; 0x02
    674e:	9e 01       	movw	r18, r28
    6750:	2d 5f       	subi	r18, 0xFD	; 253
    6752:	3f 4f       	sbci	r19, 0xFF	; 255
    6754:	b9 01       	movw	r22, r18
    6756:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawVelocityDegreesPerSecond);
    675a:	89 81       	ldd	r24, Y+1	; 0x01
    675c:	9a 81       	ldd	r25, Y+2	; 0x02
    675e:	ac 01       	movw	r20, r24
    6760:	47 5f       	subi	r20, 0xF7	; 247
    6762:	5f 4f       	sbci	r21, 0xFF	; 255
    6764:	89 81       	ldd	r24, Y+1	; 0x01
    6766:	9a 81       	ldd	r25, Y+2	; 0x02
    6768:	9e 01       	movw	r18, r28
    676a:	2d 5f       	subi	r18, 0xFD	; 253
    676c:	3f 4f       	sbci	r19, 0xFF	; 255
    676e:	b9 01       	movw	r22, r18
    6770:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawIntegral);
    6774:	89 81       	ldd	r24, Y+1	; 0x01
    6776:	9a 81       	ldd	r25, Y+2	; 0x02
    6778:	ac 01       	movw	r20, r24
    677a:	43 5f       	subi	r20, 0xF3	; 243
    677c:	5f 4f       	sbci	r21, 0xFF	; 255
    677e:	89 81       	ldd	r24, Y+1	; 0x01
    6780:	9a 81       	ldd	r25, Y+2	; 0x02
    6782:	9e 01       	movw	r18, r28
    6784:	2d 5f       	subi	r18, 0xFD	; 253
    6786:	3f 4f       	sbci	r19, 0xFF	; 255
    6788:	b9 01       	movw	r22, r18
    678a:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawProportional);
    678e:	89 81       	ldd	r24, Y+1	; 0x01
    6790:	9a 81       	ldd	r25, Y+2	; 0x02
    6792:	ac 01       	movw	r20, r24
    6794:	4f 5e       	subi	r20, 0xEF	; 239
    6796:	5f 4f       	sbci	r21, 0xFF	; 255
    6798:	89 81       	ldd	r24, Y+1	; 0x01
    679a:	9a 81       	ldd	r25, Y+2	; 0x02
    679c:	9e 01       	movw	r18, r28
    679e:	2d 5f       	subi	r18, 0xFD	; 253
    67a0:	3f 4f       	sbci	r19, 0xFF	; 255
    67a2:	b9 01       	movw	r22, r18
    67a4:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawDerivativeError);	
    67a8:	89 81       	ldd	r24, Y+1	; 0x01
    67aa:	9a 81       	ldd	r25, Y+2	; 0x02
    67ac:	ac 01       	movw	r20, r24
    67ae:	4b 5e       	subi	r20, 0xEB	; 235
    67b0:	5f 4f       	sbci	r21, 0xFF	; 255
    67b2:	89 81       	ldd	r24, Y+1	; 0x01
    67b4:	9a 81       	ldd	r25, Y+2	; 0x02
    67b6:	9e 01       	movw	r18, r28
    67b8:	2d 5f       	subi	r18, 0xFD	; 253
    67ba:	3f 4f       	sbci	r19, 0xFF	; 255
    67bc:	b9 01       	movw	r22, r18
    67be:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawControl);	
    67c2:	89 81       	ldd	r24, Y+1	; 0x01
    67c4:	9a 81       	ldd	r25, Y+2	; 0x02
    67c6:	ac 01       	movw	r20, r24
    67c8:	47 5e       	subi	r20, 0xE7	; 231
    67ca:	5f 4f       	sbci	r21, 0xFF	; 255
    67cc:	89 81       	ldd	r24, Y+1	; 0x01
    67ce:	9a 81       	ldd	r25, Y+2	; 0x02
    67d0:	9e 01       	movw	r18, r28
    67d2:	2d 5f       	subi	r18, 0xFD	; 253
    67d4:	3f 4f       	sbci	r19, 0xFF	; 255
    67d6:	b9 01       	movw	r22, r18
    67d8:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawIntegralGain);
    67dc:	89 81       	ldd	r24, Y+1	; 0x01
    67de:	9a 81       	ldd	r25, Y+2	; 0x02
    67e0:	ac 01       	movw	r20, r24
    67e2:	43 5e       	subi	r20, 0xE3	; 227
    67e4:	5f 4f       	sbci	r21, 0xFF	; 255
    67e6:	89 81       	ldd	r24, Y+1	; 0x01
    67e8:	9a 81       	ldd	r25, Y+2	; 0x02
    67ea:	9e 01       	movw	r18, r28
    67ec:	2d 5f       	subi	r18, 0xFD	; 253
    67ee:	3f 4f       	sbci	r19, 0xFF	; 255
    67f0:	b9 01       	movw	r22, r18
    67f2:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawDerivativeGain);
    67f6:	89 81       	ldd	r24, Y+1	; 0x01
    67f8:	9a 81       	ldd	r25, Y+2	; 0x02
    67fa:	ac 01       	movw	r20, r24
    67fc:	4f 5d       	subi	r20, 0xDF	; 223
    67fe:	5f 4f       	sbci	r21, 0xFF	; 255
    6800:	89 81       	ldd	r24, Y+1	; 0x01
    6802:	9a 81       	ldd	r25, Y+2	; 0x02
    6804:	9e 01       	movw	r18, r28
    6806:	2d 5f       	subi	r18, 0xFD	; 253
    6808:	3f 4f       	sbci	r19, 0xFF	; 255
    680a:	b9 01       	movw	r22, r18
    680c:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawProportionalGain);
    6810:	89 81       	ldd	r24, Y+1	; 0x01
    6812:	9a 81       	ldd	r25, Y+2	; 0x02
    6814:	ac 01       	movw	r20, r24
    6816:	4b 5d       	subi	r20, 0xDB	; 219
    6818:	5f 4f       	sbci	r21, 0xFF	; 255
    681a:	89 81       	ldd	r24, Y+1	; 0x01
    681c:	9a 81       	ldd	r25, Y+2	; 0x02
    681e:	9e 01       	movw	r18, r28
    6820:	2d 5f       	subi	r18, 0xFD	; 253
    6822:	3f 4f       	sbci	r19, 0xFF	; 255
    6824:	b9 01       	movw	r22, r18
    6826:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YawAntiWindupGain);
    682a:	89 81       	ldd	r24, Y+1	; 0x01
    682c:	9a 81       	ldd	r25, Y+2	; 0x02
    682e:	ac 01       	movw	r20, r24
    6830:	47 5d       	subi	r20, 0xD7	; 215
    6832:	5f 4f       	sbci	r21, 0xFF	; 255
    6834:	89 81       	ldd	r24, Y+1	; 0x01
    6836:	9a 81       	ldd	r25, Y+2	; 0x02
    6838:	9e 01       	movw	r18, r28
    683a:	2d 5f       	subi	r18, 0xFD	; 253
    683c:	3f 4f       	sbci	r19, 0xFF	; 255
    683e:	b9 01       	movw	r22, r18
    6840:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		
		
		

		decode (message, XNEDBodyFrame);
    6844:	89 81       	ldd	r24, Y+1	; 0x01
    6846:	9a 81       	ldd	r25, Y+2	; 0x02
    6848:	ac 01       	movw	r20, r24
    684a:	43 5d       	subi	r20, 0xD3	; 211
    684c:	5f 4f       	sbci	r21, 0xFF	; 255
    684e:	89 81       	ldd	r24, Y+1	; 0x01
    6850:	9a 81       	ldd	r25, Y+2	; 0x02
    6852:	9e 01       	movw	r18, r28
    6854:	2d 5f       	subi	r18, 0xFD	; 253
    6856:	3f 4f       	sbci	r19, 0xFF	; 255
    6858:	b9 01       	movw	r22, r18
    685a:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XVelocityMetersPerSecond);
    685e:	89 81       	ldd	r24, Y+1	; 0x01
    6860:	9a 81       	ldd	r25, Y+2	; 0x02
    6862:	ac 01       	movw	r20, r24
    6864:	4f 5c       	subi	r20, 0xCF	; 207
    6866:	5f 4f       	sbci	r21, 0xFF	; 255
    6868:	89 81       	ldd	r24, Y+1	; 0x01
    686a:	9a 81       	ldd	r25, Y+2	; 0x02
    686c:	9e 01       	movw	r18, r28
    686e:	2d 5f       	subi	r18, 0xFD	; 253
    6870:	3f 4f       	sbci	r19, 0xFF	; 255
    6872:	b9 01       	movw	r22, r18
    6874:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ThetaPitchDegrees);
    6878:	89 81       	ldd	r24, Y+1	; 0x01
    687a:	9a 81       	ldd	r25, Y+2	; 0x02
    687c:	ac 01       	movw	r20, r24
    687e:	4b 5c       	subi	r20, 0xCB	; 203
    6880:	5f 4f       	sbci	r21, 0xFF	; 255
    6882:	89 81       	ldd	r24, Y+1	; 0x01
    6884:	9a 81       	ldd	r25, Y+2	; 0x02
    6886:	9e 01       	movw	r18, r28
    6888:	2d 5f       	subi	r18, 0xFD	; 253
    688a:	3f 4f       	sbci	r19, 0xFF	; 255
    688c:	b9 01       	movw	r22, r18
    688e:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XIntegral);
    6892:	89 81       	ldd	r24, Y+1	; 0x01
    6894:	9a 81       	ldd	r25, Y+2	; 0x02
    6896:	ac 01       	movw	r20, r24
    6898:	47 5c       	subi	r20, 0xC7	; 199
    689a:	5f 4f       	sbci	r21, 0xFF	; 255
    689c:	89 81       	ldd	r24, Y+1	; 0x01
    689e:	9a 81       	ldd	r25, Y+2	; 0x02
    68a0:	9e 01       	movw	r18, r28
    68a2:	2d 5f       	subi	r18, 0xFD	; 253
    68a4:	3f 4f       	sbci	r19, 0xFF	; 255
    68a6:	b9 01       	movw	r22, r18
    68a8:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XProportional);
    68ac:	89 81       	ldd	r24, Y+1	; 0x01
    68ae:	9a 81       	ldd	r25, Y+2	; 0x02
    68b0:	ac 01       	movw	r20, r24
    68b2:	43 5c       	subi	r20, 0xC3	; 195
    68b4:	5f 4f       	sbci	r21, 0xFF	; 255
    68b6:	89 81       	ldd	r24, Y+1	; 0x01
    68b8:	9a 81       	ldd	r25, Y+2	; 0x02
    68ba:	9e 01       	movw	r18, r28
    68bc:	2d 5f       	subi	r18, 0xFD	; 253
    68be:	3f 4f       	sbci	r19, 0xFF	; 255
    68c0:	b9 01       	movw	r22, r18
    68c2:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XDerivativeError);
    68c6:	89 81       	ldd	r24, Y+1	; 0x01
    68c8:	9a 81       	ldd	r25, Y+2	; 0x02
    68ca:	ac 01       	movw	r20, r24
    68cc:	4f 5b       	subi	r20, 0xBF	; 191
    68ce:	5f 4f       	sbci	r21, 0xFF	; 255
    68d0:	89 81       	ldd	r24, Y+1	; 0x01
    68d2:	9a 81       	ldd	r25, Y+2	; 0x02
    68d4:	9e 01       	movw	r18, r28
    68d6:	2d 5f       	subi	r18, 0xFD	; 253
    68d8:	3f 4f       	sbci	r19, 0xFF	; 255
    68da:	b9 01       	movw	r22, r18
    68dc:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LongitudeControl);
    68e0:	89 81       	ldd	r24, Y+1	; 0x01
    68e2:	9a 81       	ldd	r25, Y+2	; 0x02
    68e4:	ac 01       	movw	r20, r24
    68e6:	4b 5b       	subi	r20, 0xBB	; 187
    68e8:	5f 4f       	sbci	r21, 0xFF	; 255
    68ea:	89 81       	ldd	r24, Y+1	; 0x01
    68ec:	9a 81       	ldd	r25, Y+2	; 0x02
    68ee:	9e 01       	movw	r18, r28
    68f0:	2d 5f       	subi	r18, 0xFD	; 253
    68f2:	3f 4f       	sbci	r19, 0xFF	; 255
    68f4:	b9 01       	movw	r22, r18
    68f6:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XIntegralGain);
    68fa:	89 81       	ldd	r24, Y+1	; 0x01
    68fc:	9a 81       	ldd	r25, Y+2	; 0x02
    68fe:	ac 01       	movw	r20, r24
    6900:	47 5b       	subi	r20, 0xB7	; 183
    6902:	5f 4f       	sbci	r21, 0xFF	; 255
    6904:	89 81       	ldd	r24, Y+1	; 0x01
    6906:	9a 81       	ldd	r25, Y+2	; 0x02
    6908:	9e 01       	movw	r18, r28
    690a:	2d 5f       	subi	r18, 0xFD	; 253
    690c:	3f 4f       	sbci	r19, 0xFF	; 255
    690e:	b9 01       	movw	r22, r18
    6910:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XDerivativeGain);
    6914:	89 81       	ldd	r24, Y+1	; 0x01
    6916:	9a 81       	ldd	r25, Y+2	; 0x02
    6918:	ac 01       	movw	r20, r24
    691a:	43 5b       	subi	r20, 0xB3	; 179
    691c:	5f 4f       	sbci	r21, 0xFF	; 255
    691e:	89 81       	ldd	r24, Y+1	; 0x01
    6920:	9a 81       	ldd	r25, Y+2	; 0x02
    6922:	9e 01       	movw	r18, r28
    6924:	2d 5f       	subi	r18, 0xFD	; 253
    6926:	3f 4f       	sbci	r19, 0xFF	; 255
    6928:	b9 01       	movw	r22, r18
    692a:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XProportionalGain);
    692e:	89 81       	ldd	r24, Y+1	; 0x01
    6930:	9a 81       	ldd	r25, Y+2	; 0x02
    6932:	ac 01       	movw	r20, r24
    6934:	4f 5a       	subi	r20, 0xAF	; 175
    6936:	5f 4f       	sbci	r21, 0xFF	; 255
    6938:	89 81       	ldd	r24, Y+1	; 0x01
    693a:	9a 81       	ldd	r25, Y+2	; 0x02
    693c:	9e 01       	movw	r18, r28
    693e:	2d 5f       	subi	r18, 0xFD	; 253
    6940:	3f 4f       	sbci	r19, 0xFF	; 255
    6942:	b9 01       	movw	r22, r18
    6944:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XAntiWindupGain);
    6948:	89 81       	ldd	r24, Y+1	; 0x01
    694a:	9a 81       	ldd	r25, Y+2	; 0x02
    694c:	ac 01       	movw	r20, r24
    694e:	4b 5a       	subi	r20, 0xAB	; 171
    6950:	5f 4f       	sbci	r21, 0xFF	; 255
    6952:	89 81       	ldd	r24, Y+1	; 0x01
    6954:	9a 81       	ldd	r25, Y+2	; 0x02
    6956:	9e 01       	movw	r18, r28
    6958:	2d 5f       	subi	r18, 0xFD	; 253
    695a:	3f 4f       	sbci	r19, 0xFF	; 255
    695c:	b9 01       	movw	r22, r18
    695e:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LongitudeInnerLoopGain);
    6962:	89 81       	ldd	r24, Y+1	; 0x01
    6964:	9a 81       	ldd	r25, Y+2	; 0x02
    6966:	ac 01       	movw	r20, r24
    6968:	47 5a       	subi	r20, 0xA7	; 167
    696a:	5f 4f       	sbci	r21, 0xFF	; 255
    696c:	89 81       	ldd	r24, Y+1	; 0x01
    696e:	9a 81       	ldd	r25, Y+2	; 0x02
    6970:	9e 01       	movw	r18, r28
    6972:	2d 5f       	subi	r18, 0xFD	; 253
    6974:	3f 4f       	sbci	r19, 0xFF	; 255
    6976:	b9 01       	movw	r22, r18
    6978:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, XLongitudeOuterLoopSetpoint);
    697c:	89 81       	ldd	r24, Y+1	; 0x01
    697e:	9a 81       	ldd	r25, Y+2	; 0x02
    6980:	ac 01       	movw	r20, r24
    6982:	43 5a       	subi	r20, 0xA3	; 163
    6984:	5f 4f       	sbci	r21, 0xFF	; 255
    6986:	89 81       	ldd	r24, Y+1	; 0x01
    6988:	9a 81       	ldd	r25, Y+2	; 0x02
    698a:	9e 01       	movw	r18, r28
    698c:	2d 5f       	subi	r18, 0xFD	; 253
    698e:	3f 4f       	sbci	r19, 0xFF	; 255
    6990:	b9 01       	movw	r22, r18
    6992:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, PitchAngularVelocityRadsPerSecond);
    6996:	89 81       	ldd	r24, Y+1	; 0x01
    6998:	9a 81       	ldd	r25, Y+2	; 0x02
    699a:	ac 01       	movw	r20, r24
    699c:	4f 59       	subi	r20, 0x9F	; 159
    699e:	5f 4f       	sbci	r21, 0xFF	; 255
    69a0:	89 81       	ldd	r24, Y+1	; 0x01
    69a2:	9a 81       	ldd	r25, Y+2	; 0x02
    69a4:	9e 01       	movw	r18, r28
    69a6:	2d 5f       	subi	r18, 0xFD	; 253
    69a8:	3f 4f       	sbci	r19, 0xFF	; 255
    69aa:	b9 01       	movw	r22, r18
    69ac:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, PitchAngularVelocityGain);
    69b0:	89 81       	ldd	r24, Y+1	; 0x01
    69b2:	9a 81       	ldd	r25, Y+2	; 0x02
    69b4:	ac 01       	movw	r20, r24
    69b6:	4b 59       	subi	r20, 0x9B	; 155
    69b8:	5f 4f       	sbci	r21, 0xFF	; 255
    69ba:	89 81       	ldd	r24, Y+1	; 0x01
    69bc:	9a 81       	ldd	r25, Y+2	; 0x02
    69be:	9e 01       	movw	r18, r28
    69c0:	2d 5f       	subi	r18, 0xFD	; 253
    69c2:	3f 4f       	sbci	r19, 0xFF	; 255
    69c4:	b9 01       	movw	r22, r18
    69c6:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>

		decode (message, YNEDBodyFrame);
    69ca:	89 81       	ldd	r24, Y+1	; 0x01
    69cc:	9a 81       	ldd	r25, Y+2	; 0x02
    69ce:	ac 01       	movw	r20, r24
    69d0:	47 59       	subi	r20, 0x97	; 151
    69d2:	5f 4f       	sbci	r21, 0xFF	; 255
    69d4:	89 81       	ldd	r24, Y+1	; 0x01
    69d6:	9a 81       	ldd	r25, Y+2	; 0x02
    69d8:	9e 01       	movw	r18, r28
    69da:	2d 5f       	subi	r18, 0xFD	; 253
    69dc:	3f 4f       	sbci	r19, 0xFF	; 255
    69de:	b9 01       	movw	r22, r18
    69e0:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YVelocityMetersPerSecond);
    69e4:	89 81       	ldd	r24, Y+1	; 0x01
    69e6:	9a 81       	ldd	r25, Y+2	; 0x02
    69e8:	ac 01       	movw	r20, r24
    69ea:	43 59       	subi	r20, 0x93	; 147
    69ec:	5f 4f       	sbci	r21, 0xFF	; 255
    69ee:	89 81       	ldd	r24, Y+1	; 0x01
    69f0:	9a 81       	ldd	r25, Y+2	; 0x02
    69f2:	9e 01       	movw	r18, r28
    69f4:	2d 5f       	subi	r18, 0xFD	; 253
    69f6:	3f 4f       	sbci	r19, 0xFF	; 255
    69f8:	b9 01       	movw	r22, r18
    69fa:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, PhiRollDegrees);
    69fe:	89 81       	ldd	r24, Y+1	; 0x01
    6a00:	9a 81       	ldd	r25, Y+2	; 0x02
    6a02:	ac 01       	movw	r20, r24
    6a04:	4f 58       	subi	r20, 0x8F	; 143
    6a06:	5f 4f       	sbci	r21, 0xFF	; 255
    6a08:	89 81       	ldd	r24, Y+1	; 0x01
    6a0a:	9a 81       	ldd	r25, Y+2	; 0x02
    6a0c:	9e 01       	movw	r18, r28
    6a0e:	2d 5f       	subi	r18, 0xFD	; 253
    6a10:	3f 4f       	sbci	r19, 0xFF	; 255
    6a12:	b9 01       	movw	r22, r18
    6a14:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YIntegral);
    6a18:	89 81       	ldd	r24, Y+1	; 0x01
    6a1a:	9a 81       	ldd	r25, Y+2	; 0x02
    6a1c:	ac 01       	movw	r20, r24
    6a1e:	4b 58       	subi	r20, 0x8B	; 139
    6a20:	5f 4f       	sbci	r21, 0xFF	; 255
    6a22:	89 81       	ldd	r24, Y+1	; 0x01
    6a24:	9a 81       	ldd	r25, Y+2	; 0x02
    6a26:	9e 01       	movw	r18, r28
    6a28:	2d 5f       	subi	r18, 0xFD	; 253
    6a2a:	3f 4f       	sbci	r19, 0xFF	; 255
    6a2c:	b9 01       	movw	r22, r18
    6a2e:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YProportional);
    6a32:	89 81       	ldd	r24, Y+1	; 0x01
    6a34:	9a 81       	ldd	r25, Y+2	; 0x02
    6a36:	ac 01       	movw	r20, r24
    6a38:	47 58       	subi	r20, 0x87	; 135
    6a3a:	5f 4f       	sbci	r21, 0xFF	; 255
    6a3c:	89 81       	ldd	r24, Y+1	; 0x01
    6a3e:	9a 81       	ldd	r25, Y+2	; 0x02
    6a40:	9e 01       	movw	r18, r28
    6a42:	2d 5f       	subi	r18, 0xFD	; 253
    6a44:	3f 4f       	sbci	r19, 0xFF	; 255
    6a46:	b9 01       	movw	r22, r18
    6a48:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YDerivativeError);
    6a4c:	89 81       	ldd	r24, Y+1	; 0x01
    6a4e:	9a 81       	ldd	r25, Y+2	; 0x02
    6a50:	ac 01       	movw	r20, r24
    6a52:	43 58       	subi	r20, 0x83	; 131
    6a54:	5f 4f       	sbci	r21, 0xFF	; 255
    6a56:	89 81       	ldd	r24, Y+1	; 0x01
    6a58:	9a 81       	ldd	r25, Y+2	; 0x02
    6a5a:	9e 01       	movw	r18, r28
    6a5c:	2d 5f       	subi	r18, 0xFD	; 253
    6a5e:	3f 4f       	sbci	r19, 0xFF	; 255
    6a60:	b9 01       	movw	r22, r18
    6a62:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LateralControl);
    6a66:	89 81       	ldd	r24, Y+1	; 0x01
    6a68:	9a 81       	ldd	r25, Y+2	; 0x02
    6a6a:	ac 01       	movw	r20, r24
    6a6c:	4f 57       	subi	r20, 0x7F	; 127
    6a6e:	5f 4f       	sbci	r21, 0xFF	; 255
    6a70:	89 81       	ldd	r24, Y+1	; 0x01
    6a72:	9a 81       	ldd	r25, Y+2	; 0x02
    6a74:	9e 01       	movw	r18, r28
    6a76:	2d 5f       	subi	r18, 0xFD	; 253
    6a78:	3f 4f       	sbci	r19, 0xFF	; 255
    6a7a:	b9 01       	movw	r22, r18
    6a7c:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YIntegralGain);
    6a80:	89 81       	ldd	r24, Y+1	; 0x01
    6a82:	9a 81       	ldd	r25, Y+2	; 0x02
    6a84:	ac 01       	movw	r20, r24
    6a86:	4b 57       	subi	r20, 0x7B	; 123
    6a88:	5f 4f       	sbci	r21, 0xFF	; 255
    6a8a:	89 81       	ldd	r24, Y+1	; 0x01
    6a8c:	9a 81       	ldd	r25, Y+2	; 0x02
    6a8e:	9e 01       	movw	r18, r28
    6a90:	2d 5f       	subi	r18, 0xFD	; 253
    6a92:	3f 4f       	sbci	r19, 0xFF	; 255
    6a94:	b9 01       	movw	r22, r18
    6a96:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YDerivativeGain);
    6a9a:	89 81       	ldd	r24, Y+1	; 0x01
    6a9c:	9a 81       	ldd	r25, Y+2	; 0x02
    6a9e:	ac 01       	movw	r20, r24
    6aa0:	47 57       	subi	r20, 0x77	; 119
    6aa2:	5f 4f       	sbci	r21, 0xFF	; 255
    6aa4:	89 81       	ldd	r24, Y+1	; 0x01
    6aa6:	9a 81       	ldd	r25, Y+2	; 0x02
    6aa8:	9e 01       	movw	r18, r28
    6aaa:	2d 5f       	subi	r18, 0xFD	; 253
    6aac:	3f 4f       	sbci	r19, 0xFF	; 255
    6aae:	b9 01       	movw	r22, r18
    6ab0:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YProportionalGain);
    6ab4:	89 81       	ldd	r24, Y+1	; 0x01
    6ab6:	9a 81       	ldd	r25, Y+2	; 0x02
    6ab8:	ac 01       	movw	r20, r24
    6aba:	43 57       	subi	r20, 0x73	; 115
    6abc:	5f 4f       	sbci	r21, 0xFF	; 255
    6abe:	89 81       	ldd	r24, Y+1	; 0x01
    6ac0:	9a 81       	ldd	r25, Y+2	; 0x02
    6ac2:	9e 01       	movw	r18, r28
    6ac4:	2d 5f       	subi	r18, 0xFD	; 253
    6ac6:	3f 4f       	sbci	r19, 0xFF	; 255
    6ac8:	b9 01       	movw	r22, r18
    6aca:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YAntiWindupGain);
    6ace:	89 81       	ldd	r24, Y+1	; 0x01
    6ad0:	9a 81       	ldd	r25, Y+2	; 0x02
    6ad2:	ac 01       	movw	r20, r24
    6ad4:	4f 56       	subi	r20, 0x6F	; 111
    6ad6:	5f 4f       	sbci	r21, 0xFF	; 255
    6ad8:	89 81       	ldd	r24, Y+1	; 0x01
    6ada:	9a 81       	ldd	r25, Y+2	; 0x02
    6adc:	9e 01       	movw	r18, r28
    6ade:	2d 5f       	subi	r18, 0xFD	; 253
    6ae0:	3f 4f       	sbci	r19, 0xFF	; 255
    6ae2:	b9 01       	movw	r22, r18
    6ae4:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LateralInnerLoopGain);
    6ae8:	89 81       	ldd	r24, Y+1	; 0x01
    6aea:	9a 81       	ldd	r25, Y+2	; 0x02
    6aec:	ac 01       	movw	r20, r24
    6aee:	4b 56       	subi	r20, 0x6B	; 107
    6af0:	5f 4f       	sbci	r21, 0xFF	; 255
    6af2:	89 81       	ldd	r24, Y+1	; 0x01
    6af4:	9a 81       	ldd	r25, Y+2	; 0x02
    6af6:	9e 01       	movw	r18, r28
    6af8:	2d 5f       	subi	r18, 0xFD	; 253
    6afa:	3f 4f       	sbci	r19, 0xFF	; 255
    6afc:	b9 01       	movw	r22, r18
    6afe:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, YLateralOuterLoopSetpoint);
    6b02:	89 81       	ldd	r24, Y+1	; 0x01
    6b04:	9a 81       	ldd	r25, Y+2	; 0x02
    6b06:	ac 01       	movw	r20, r24
    6b08:	47 56       	subi	r20, 0x67	; 103
    6b0a:	5f 4f       	sbci	r21, 0xFF	; 255
    6b0c:	89 81       	ldd	r24, Y+1	; 0x01
    6b0e:	9a 81       	ldd	r25, Y+2	; 0x02
    6b10:	9e 01       	movw	r18, r28
    6b12:	2d 5f       	subi	r18, 0xFD	; 253
    6b14:	3f 4f       	sbci	r19, 0xFF	; 255
    6b16:	b9 01       	movw	r22, r18
    6b18:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, RollAngularVelocityRadsPerSecond);
    6b1c:	89 81       	ldd	r24, Y+1	; 0x01
    6b1e:	9a 81       	ldd	r25, Y+2	; 0x02
    6b20:	ac 01       	movw	r20, r24
    6b22:	43 56       	subi	r20, 0x63	; 99
    6b24:	5f 4f       	sbci	r21, 0xFF	; 255
    6b26:	89 81       	ldd	r24, Y+1	; 0x01
    6b28:	9a 81       	ldd	r25, Y+2	; 0x02
    6b2a:	9e 01       	movw	r18, r28
    6b2c:	2d 5f       	subi	r18, 0xFD	; 253
    6b2e:	3f 4f       	sbci	r19, 0xFF	; 255
    6b30:	b9 01       	movw	r22, r18
    6b32:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, RollAngularVelocityGain);
    6b36:	89 81       	ldd	r24, Y+1	; 0x01
    6b38:	9a 81       	ldd	r25, Y+2	; 0x02
    6b3a:	ac 01       	movw	r20, r24
    6b3c:	4f 55       	subi	r20, 0x5F	; 95
    6b3e:	5f 4f       	sbci	r21, 0xFF	; 255
    6b40:	89 81       	ldd	r24, Y+1	; 0x01
    6b42:	9a 81       	ldd	r25, Y+2	; 0x02
    6b44:	9e 01       	movw	r18, r28
    6b46:	2d 5f       	subi	r18, 0xFD	; 253
    6b48:	3f 4f       	sbci	r19, 0xFF	; 255
    6b4a:	b9 01       	movw	r22, r18
    6b4c:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		

		decode (message, AltitudeFeetAgl);
    6b50:	89 81       	ldd	r24, Y+1	; 0x01
    6b52:	9a 81       	ldd	r25, Y+2	; 0x02
    6b54:	ac 01       	movw	r20, r24
    6b56:	4b 55       	subi	r20, 0x5B	; 91
    6b58:	5f 4f       	sbci	r21, 0xFF	; 255
    6b5a:	89 81       	ldd	r24, Y+1	; 0x01
    6b5c:	9a 81       	ldd	r25, Y+2	; 0x02
    6b5e:	9e 01       	movw	r18, r28
    6b60:	2d 5f       	subi	r18, 0xFD	; 253
    6b62:	3f 4f       	sbci	r19, 0xFF	; 255
    6b64:	b9 01       	movw	r22, r18
    6b66:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZVelocityMetersPerSecond);
    6b6a:	89 81       	ldd	r24, Y+1	; 0x01
    6b6c:	9a 81       	ldd	r25, Y+2	; 0x02
    6b6e:	ac 01       	movw	r20, r24
    6b70:	47 55       	subi	r20, 0x57	; 87
    6b72:	5f 4f       	sbci	r21, 0xFF	; 255
    6b74:	89 81       	ldd	r24, Y+1	; 0x01
    6b76:	9a 81       	ldd	r25, Y+2	; 0x02
    6b78:	9e 01       	movw	r18, r28
    6b7a:	2d 5f       	subi	r18, 0xFD	; 253
    6b7c:	3f 4f       	sbci	r19, 0xFF	; 255
    6b7e:	b9 01       	movw	r22, r18
    6b80:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZIntegral);
    6b84:	89 81       	ldd	r24, Y+1	; 0x01
    6b86:	9a 81       	ldd	r25, Y+2	; 0x02
    6b88:	ac 01       	movw	r20, r24
    6b8a:	43 55       	subi	r20, 0x53	; 83
    6b8c:	5f 4f       	sbci	r21, 0xFF	; 255
    6b8e:	89 81       	ldd	r24, Y+1	; 0x01
    6b90:	9a 81       	ldd	r25, Y+2	; 0x02
    6b92:	9e 01       	movw	r18, r28
    6b94:	2d 5f       	subi	r18, 0xFD	; 253
    6b96:	3f 4f       	sbci	r19, 0xFF	; 255
    6b98:	b9 01       	movw	r22, r18
    6b9a:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZProportional);
    6b9e:	89 81       	ldd	r24, Y+1	; 0x01
    6ba0:	9a 81       	ldd	r25, Y+2	; 0x02
    6ba2:	ac 01       	movw	r20, r24
    6ba4:	4f 54       	subi	r20, 0x4F	; 79
    6ba6:	5f 4f       	sbci	r21, 0xFF	; 255
    6ba8:	89 81       	ldd	r24, Y+1	; 0x01
    6baa:	9a 81       	ldd	r25, Y+2	; 0x02
    6bac:	9e 01       	movw	r18, r28
    6bae:	2d 5f       	subi	r18, 0xFD	; 253
    6bb0:	3f 4f       	sbci	r19, 0xFF	; 255
    6bb2:	b9 01       	movw	r22, r18
    6bb4:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZDerivativeError);
    6bb8:	89 81       	ldd	r24, Y+1	; 0x01
    6bba:	9a 81       	ldd	r25, Y+2	; 0x02
    6bbc:	ac 01       	movw	r20, r24
    6bbe:	4b 54       	subi	r20, 0x4B	; 75
    6bc0:	5f 4f       	sbci	r21, 0xFF	; 255
    6bc2:	89 81       	ldd	r24, Y+1	; 0x01
    6bc4:	9a 81       	ldd	r25, Y+2	; 0x02
    6bc6:	9e 01       	movw	r18, r28
    6bc8:	2d 5f       	subi	r18, 0xFD	; 253
    6bca:	3f 4f       	sbci	r19, 0xFF	; 255
    6bcc:	b9 01       	movw	r22, r18
    6bce:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, MainRotorCollectiveControl);
    6bd2:	89 81       	ldd	r24, Y+1	; 0x01
    6bd4:	9a 81       	ldd	r25, Y+2	; 0x02
    6bd6:	ac 01       	movw	r20, r24
    6bd8:	47 54       	subi	r20, 0x47	; 71
    6bda:	5f 4f       	sbci	r21, 0xFF	; 255
    6bdc:	89 81       	ldd	r24, Y+1	; 0x01
    6bde:	9a 81       	ldd	r25, Y+2	; 0x02
    6be0:	9e 01       	movw	r18, r28
    6be2:	2d 5f       	subi	r18, 0xFD	; 253
    6be4:	3f 4f       	sbci	r19, 0xFF	; 255
    6be6:	b9 01       	movw	r22, r18
    6be8:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZIntegralGain);
    6bec:	89 81       	ldd	r24, Y+1	; 0x01
    6bee:	9a 81       	ldd	r25, Y+2	; 0x02
    6bf0:	ac 01       	movw	r20, r24
    6bf2:	43 54       	subi	r20, 0x43	; 67
    6bf4:	5f 4f       	sbci	r21, 0xFF	; 255
    6bf6:	89 81       	ldd	r24, Y+1	; 0x01
    6bf8:	9a 81       	ldd	r25, Y+2	; 0x02
    6bfa:	9e 01       	movw	r18, r28
    6bfc:	2d 5f       	subi	r18, 0xFD	; 253
    6bfe:	3f 4f       	sbci	r19, 0xFF	; 255
    6c00:	b9 01       	movw	r22, r18
    6c02:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZDerivativeGain);
    6c06:	89 81       	ldd	r24, Y+1	; 0x01
    6c08:	9a 81       	ldd	r25, Y+2	; 0x02
    6c0a:	ac 01       	movw	r20, r24
    6c0c:	4f 53       	subi	r20, 0x3F	; 63
    6c0e:	5f 4f       	sbci	r21, 0xFF	; 255
    6c10:	89 81       	ldd	r24, Y+1	; 0x01
    6c12:	9a 81       	ldd	r25, Y+2	; 0x02
    6c14:	9e 01       	movw	r18, r28
    6c16:	2d 5f       	subi	r18, 0xFD	; 253
    6c18:	3f 4f       	sbci	r19, 0xFF	; 255
    6c1a:	b9 01       	movw	r22, r18
    6c1c:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZProportionalGain);
    6c20:	89 81       	ldd	r24, Y+1	; 0x01
    6c22:	9a 81       	ldd	r25, Y+2	; 0x02
    6c24:	ac 01       	movw	r20, r24
    6c26:	4b 53       	subi	r20, 0x3B	; 59
    6c28:	5f 4f       	sbci	r21, 0xFF	; 255
    6c2a:	89 81       	ldd	r24, Y+1	; 0x01
    6c2c:	9a 81       	ldd	r25, Y+2	; 0x02
    6c2e:	9e 01       	movw	r18, r28
    6c30:	2d 5f       	subi	r18, 0xFD	; 253
    6c32:	3f 4f       	sbci	r19, 0xFF	; 255
    6c34:	b9 01       	movw	r22, r18
    6c36:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZAntiWindupGain);
    6c3a:	89 81       	ldd	r24, Y+1	; 0x01
    6c3c:	9a 81       	ldd	r25, Y+2	; 0x02
    6c3e:	ac 01       	movw	r20, r24
    6c40:	47 53       	subi	r20, 0x37	; 55
    6c42:	5f 4f       	sbci	r21, 0xFF	; 255
    6c44:	89 81       	ldd	r24, Y+1	; 0x01
    6c46:	9a 81       	ldd	r25, Y+2	; 0x02
    6c48:	9e 01       	movw	r18, r28
    6c4a:	2d 5f       	subi	r18, 0xFD	; 253
    6c4c:	3f 4f       	sbci	r19, 0xFF	; 255
    6c4e:	b9 01       	movw	r22, r18
    6c50:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, ZNEDBodyFrame);
    6c54:	89 81       	ldd	r24, Y+1	; 0x01
    6c56:	9a 81       	ldd	r25, Y+2	; 0x02
    6c58:	ac 01       	movw	r20, r24
    6c5a:	43 53       	subi	r20, 0x33	; 51
    6c5c:	5f 4f       	sbci	r21, 0xFF	; 255
    6c5e:	89 81       	ldd	r24, Y+1	; 0x01
    6c60:	9a 81       	ldd	r25, Y+2	; 0x02
    6c62:	9e 01       	movw	r18, r28
    6c64:	2d 5f       	subi	r18, 0xFD	; 253
    6c66:	3f 4f       	sbci	r19, 0xFF	; 255
    6c68:	b9 01       	movw	r22, r18
    6c6a:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		
	
		decode (message, LatitudeDegrees);
    6c6e:	89 81       	ldd	r24, Y+1	; 0x01
    6c70:	9a 81       	ldd	r25, Y+2	; 0x02
    6c72:	ac 01       	movw	r20, r24
    6c74:	4f 52       	subi	r20, 0x2F	; 47
    6c76:	5f 4f       	sbci	r21, 0xFF	; 255
    6c78:	89 81       	ldd	r24, Y+1	; 0x01
    6c7a:	9a 81       	ldd	r25, Y+2	; 0x02
    6c7c:	9e 01       	movw	r18, r28
    6c7e:	2d 5f       	subi	r18, 0xFD	; 253
    6c80:	3f 4f       	sbci	r19, 0xFF	; 255
    6c82:	b9 01       	movw	r22, r18
    6c84:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
		decode (message, LongitudeDegrees);
    6c88:	89 81       	ldd	r24, Y+1	; 0x01
    6c8a:	9a 81       	ldd	r25, Y+2	; 0x02
    6c8c:	ac 01       	movw	r20, r24
    6c8e:	4b 52       	subi	r20, 0x2B	; 43
    6c90:	5f 4f       	sbci	r21, 0xFF	; 255
    6c92:	89 81       	ldd	r24, Y+1	; 0x01
    6c94:	9a 81       	ldd	r25, Y+2	; 0x02
    6c96:	9e 01       	movw	r18, r28
    6c98:	2d 5f       	subi	r18, 0xFD	; 253
    6c9a:	3f 4f       	sbci	r19, 0xFF	; 255
    6c9c:	b9 01       	movw	r22, r18
    6c9e:	0e 94 db 2a 	call	0x55b6	; 0x55b6 <_ZN10helicopter8messages7Message6decodeERPhRf>
						
		decode (message, Timeouts);
    6ca2:	89 81       	ldd	r24, Y+1	; 0x01
    6ca4:	9a 81       	ldd	r25, Y+2	; 0x02
    6ca6:	ac 01       	movw	r20, r24
    6ca8:	47 52       	subi	r20, 0x27	; 39
    6caa:	5f 4f       	sbci	r21, 0xFF	; 255
    6cac:	89 81       	ldd	r24, Y+1	; 0x01
    6cae:	9a 81       	ldd	r25, Y+2	; 0x02
    6cb0:	9e 01       	movw	r18, r28
    6cb2:	2d 5f       	subi	r18, 0xFD	; 253
    6cb4:	3f 4f       	sbci	r19, 0xFF	; 255
    6cb6:	b9 01       	movw	r22, r18
    6cb8:	0e 94 ad 2a 	call	0x555a	; 0x555a <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, UnrecognizedMsgTypes);
    6cbc:	89 81       	ldd	r24, Y+1	; 0x01
    6cbe:	9a 81       	ldd	r25, Y+2	; 0x02
    6cc0:	ac 01       	movw	r20, r24
    6cc2:	43 52       	subi	r20, 0x23	; 35
    6cc4:	5f 4f       	sbci	r21, 0xFF	; 255
    6cc6:	89 81       	ldd	r24, Y+1	; 0x01
    6cc8:	9a 81       	ldd	r25, Y+2	; 0x02
    6cca:	9e 01       	movw	r18, r28
    6ccc:	2d 5f       	subi	r18, 0xFD	; 253
    6cce:	3f 4f       	sbci	r19, 0xFF	; 255
    6cd0:	b9 01       	movw	r22, r18
    6cd2:	0e 94 ad 2a 	call	0x555a	; 0x555a <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, ChecksumErrors);
    6cd6:	89 81       	ldd	r24, Y+1	; 0x01
    6cd8:	9a 81       	ldd	r25, Y+2	; 0x02
    6cda:	ac 01       	movw	r20, r24
    6cdc:	4f 51       	subi	r20, 0x1F	; 31
    6cde:	5f 4f       	sbci	r21, 0xFF	; 255
    6ce0:	89 81       	ldd	r24, Y+1	; 0x01
    6ce2:	9a 81       	ldd	r25, Y+2	; 0x02
    6ce4:	9e 01       	movw	r18, r28
    6ce6:	2d 5f       	subi	r18, 0xFD	; 253
    6ce8:	3f 4f       	sbci	r19, 0xFF	; 255
    6cea:	b9 01       	movw	r22, r18
    6cec:	0e 94 ad 2a 	call	0x555a	; 0x555a <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, NumOfBlownFrames);
    6cf0:	89 81       	ldd	r24, Y+1	; 0x01
    6cf2:	9a 81       	ldd	r25, Y+2	; 0x02
    6cf4:	ac 01       	movw	r20, r24
    6cf6:	4b 51       	subi	r20, 0x1B	; 27
    6cf8:	5f 4f       	sbci	r21, 0xFF	; 255
    6cfa:	89 81       	ldd	r24, Y+1	; 0x01
    6cfc:	9a 81       	ldd	r25, Y+2	; 0x02
    6cfe:	9e 01       	movw	r18, r28
    6d00:	2d 5f       	subi	r18, 0xFD	; 253
    6d02:	3f 4f       	sbci	r19, 0xFF	; 255
    6d04:	b9 01       	movw	r22, r18
    6d06:	0e 94 ad 2a 	call	0x555a	; 0x555a <_ZN10helicopter8messages7Message6decodeERPhRl>
		decode (message, SerialCommunicationBufferOverruns);
    6d0a:	89 81       	ldd	r24, Y+1	; 0x01
    6d0c:	9a 81       	ldd	r25, Y+2	; 0x02
    6d0e:	ac 01       	movw	r20, r24
    6d10:	47 51       	subi	r20, 0x17	; 23
    6d12:	5f 4f       	sbci	r21, 0xFF	; 255
    6d14:	89 81       	ldd	r24, Y+1	; 0x01
    6d16:	9a 81       	ldd	r25, Y+2	; 0x02
    6d18:	9e 01       	movw	r18, r28
    6d1a:	2d 5f       	subi	r18, 0xFD	; 253
    6d1c:	3f 4f       	sbci	r19, 0xFF	; 255
    6d1e:	b9 01       	movw	r22, r18
    6d20:	0e 94 ad 2a 	call	0x555a	; 0x555a <_ZN10helicopter8messages7Message6decodeERPhRl>
	}
}
    6d24:	0f 90       	pop	r0
    6d26:	0f 90       	pop	r0
    6d28:	0f 90       	pop	r0
    6d2a:	0f 90       	pop	r0
    6d2c:	df 91       	pop	r29
    6d2e:	cf 91       	pop	r28
    6d30:	08 95       	ret

00006d32 <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh>:

SystemTelemetryMessage* SystemTelemetryMessage::buildMessageSt(byte *message)
{
    6d32:	0f 93       	push	r16
    6d34:	1f 93       	push	r17
    6d36:	cf 93       	push	r28
    6d38:	df 93       	push	r29
    6d3a:	00 d0       	rcall	.+0      	; 0x6d3c <_ZN10helicopter8messages22SystemTelemetryMessage14buildMessageStEPh+0xa>
    6d3c:	1f 92       	push	r1
    6d3e:	cd b7       	in	r28, 0x3d	; 61
    6d40:	de b7       	in	r29, 0x3e	; 62
    6d42:	9c 83       	std	Y+4, r25	; 0x04
    6d44:	8b 83       	std	Y+3, r24	; 0x03
	SystemTelemetryMessage *msg = new SystemTelemetryMessage();
    6d46:	8d ee       	ldi	r24, 0xED	; 237
    6d48:	90 e0       	ldi	r25, 0x00	; 0
    6d4a:	0e 94 ee 44 	call	0x89dc	; 0x89dc <_Znwj>
    6d4e:	8c 01       	movw	r16, r24
    6d50:	c8 01       	movw	r24, r16
    6d52:	0e 94 29 2e 	call	0x5c52	; 0x5c52 <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>
    6d56:	1a 83       	std	Y+2, r17	; 0x02
    6d58:	09 83       	std	Y+1, r16	; 0x01
	msg->buildMessage(message);
    6d5a:	89 81       	ldd	r24, Y+1	; 0x01
    6d5c:	9a 81       	ldd	r25, Y+2	; 0x02
    6d5e:	fc 01       	movw	r30, r24
    6d60:	80 81       	ld	r24, Z
    6d62:	91 81       	ldd	r25, Z+1	; 0x01
    6d64:	06 96       	adiw	r24, 0x06	; 6
    6d66:	fc 01       	movw	r30, r24
    6d68:	20 81       	ld	r18, Z
    6d6a:	31 81       	ldd	r19, Z+1	; 0x01
    6d6c:	4b 81       	ldd	r20, Y+3	; 0x03
    6d6e:	5c 81       	ldd	r21, Y+4	; 0x04
    6d70:	89 81       	ldd	r24, Y+1	; 0x01
    6d72:	9a 81       	ldd	r25, Y+2	; 0x02
    6d74:	ba 01       	movw	r22, r20
    6d76:	f9 01       	movw	r30, r18
    6d78:	19 95       	eicall
	
	return msg;
    6d7a:	89 81       	ldd	r24, Y+1	; 0x01
    6d7c:	9a 81       	ldd	r25, Y+2	; 0x02
}
    6d7e:	0f 90       	pop	r0
    6d80:	0f 90       	pop	r0
    6d82:	0f 90       	pop	r0
    6d84:	0f 90       	pop	r0
    6d86:	df 91       	pop	r29
    6d88:	cf 91       	pop	r28
    6d8a:	1f 91       	pop	r17
    6d8c:	0f 91       	pop	r16
    6d8e:	08 95       	ret

00006d90 <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE>:

SystemTelemetryMessage * SystemTelemetryMessage::buildMessageFromModel(SystemModel *model)
{
    6d90:	0f 93       	push	r16
    6d92:	1f 93       	push	r17
    6d94:	cf 93       	push	r28
    6d96:	df 93       	push	r29
    6d98:	00 d0       	rcall	.+0      	; 0x6d9a <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE+0xa>
    6d9a:	1f 92       	push	r1
    6d9c:	cd b7       	in	r28, 0x3d	; 61
    6d9e:	de b7       	in	r29, 0x3e	; 62
    6da0:	9c 83       	std	Y+4, r25	; 0x04
    6da2:	8b 83       	std	Y+3, r24	; 0x03
	SystemTelemetryMessage *message = new SystemTelemetryMessage();
    6da4:	8d ee       	ldi	r24, 0xED	; 237
    6da6:	90 e0       	ldi	r25, 0x00	; 0
    6da8:	0e 94 ee 44 	call	0x89dc	; 0x89dc <_Znwj>
    6dac:	8c 01       	movw	r16, r24
    6dae:	c8 01       	movw	r24, r16
    6db0:	0e 94 29 2e 	call	0x5c52	; 0x5c52 <_ZN10helicopter8messages22SystemTelemetryMessageC1Ev>
    6db4:	1a 83       	std	Y+2, r17	; 0x02
    6db6:	09 83       	std	Y+1, r16	; 0x01
	
	message->MagYaw = model->MagYawDegrees();
    6db8:	8b 81       	ldd	r24, Y+3	; 0x03
    6dba:	9c 81       	ldd	r25, Y+4	; 0x04
    6dbc:	0e 94 37 01 	call	0x26e	; 0x26e <_ZNK10helicopter5model11SystemModel13MagYawDegreesEv>
    6dc0:	dc 01       	movw	r26, r24
    6dc2:	cb 01       	movw	r24, r22
    6dc4:	29 81       	ldd	r18, Y+1	; 0x01
    6dc6:	3a 81       	ldd	r19, Y+2	; 0x02
    6dc8:	f9 01       	movw	r30, r18
    6dca:	85 83       	std	Z+5, r24	; 0x05
    6dcc:	96 83       	std	Z+6, r25	; 0x06
    6dce:	a7 83       	std	Z+7, r26	; 0x07
    6dd0:	b0 87       	std	Z+8, r27	; 0x08
	message->YawDerivativeError = model->YawDerivativeError();
    6dd2:	8b 81       	ldd	r24, Y+3	; 0x03
    6dd4:	9c 81       	ldd	r25, Y+4	; 0x04
    6dd6:	0e 94 5f 2b 	call	0x56be	; 0x56be <_ZNK10helicopter5model11SystemModel18YawDerivativeErrorEv>
    6dda:	dc 01       	movw	r26, r24
    6ddc:	cb 01       	movw	r24, r22
    6dde:	29 81       	ldd	r18, Y+1	; 0x01
    6de0:	3a 81       	ldd	r19, Y+2	; 0x02
    6de2:	f9 01       	movw	r30, r18
    6de4:	85 8b       	std	Z+21, r24	; 0x15
    6de6:	96 8b       	std	Z+22, r25	; 0x16
    6de8:	a7 8b       	std	Z+23, r26	; 0x17
    6dea:	b0 8f       	std	Z+24, r27	; 0x18
	message->YawIntegral = model->YawIntegral();
    6dec:	8b 81       	ldd	r24, Y+3	; 0x03
    6dee:	9c 81       	ldd	r25, Y+4	; 0x04
    6df0:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_ZNK10helicopter5model11SystemModel11YawIntegralEv>
    6df4:	dc 01       	movw	r26, r24
    6df6:	cb 01       	movw	r24, r22
    6df8:	29 81       	ldd	r18, Y+1	; 0x01
    6dfa:	3a 81       	ldd	r19, Y+2	; 0x02
    6dfc:	f9 01       	movw	r30, r18
    6dfe:	85 87       	std	Z+13, r24	; 0x0d
    6e00:	96 87       	std	Z+14, r25	; 0x0e
    6e02:	a7 87       	std	Z+15, r26	; 0x0f
    6e04:	b0 8b       	std	Z+16, r27	; 0x10
	message->YawProportional = model->YawProportional();
    6e06:	8b 81       	ldd	r24, Y+3	; 0x03
    6e08:	9c 81       	ldd	r25, Y+4	; 0x04
    6e0a:	0e 94 49 2b 	call	0x5692	; 0x5692 <_ZNK10helicopter5model11SystemModel15YawProportionalEv>
    6e0e:	dc 01       	movw	r26, r24
    6e10:	cb 01       	movw	r24, r22
    6e12:	29 81       	ldd	r18, Y+1	; 0x01
    6e14:	3a 81       	ldd	r19, Y+2	; 0x02
    6e16:	f9 01       	movw	r30, r18
    6e18:	81 8b       	std	Z+17, r24	; 0x11
    6e1a:	92 8b       	std	Z+18, r25	; 0x12
    6e1c:	a3 8b       	std	Z+19, r26	; 0x13
    6e1e:	b4 8b       	std	Z+20, r27	; 0x14
	message->YawVelocityDegreesPerSecond = model->YawVelocityDegreesPerSecond();
    6e20:	8b 81       	ldd	r24, Y+3	; 0x03
    6e22:	9c 81       	ldd	r25, Y+4	; 0x04
    6e24:	0e 94 cf 01 	call	0x39e	; 0x39e <_ZNK10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEv>
    6e28:	dc 01       	movw	r26, r24
    6e2a:	cb 01       	movw	r24, r22
    6e2c:	29 81       	ldd	r18, Y+1	; 0x01
    6e2e:	3a 81       	ldd	r19, Y+2	; 0x02
    6e30:	f9 01       	movw	r30, r18
    6e32:	81 87       	std	Z+9, r24	; 0x09
    6e34:	92 87       	std	Z+10, r25	; 0x0a
    6e36:	a3 87       	std	Z+11, r26	; 0x0b
    6e38:	b4 87       	std	Z+12, r27	; 0x0c
	message->YawControl = model->YawControl();
    6e3a:	8b 81       	ldd	r24, Y+3	; 0x03
    6e3c:	9c 81       	ldd	r25, Y+4	; 0x04
    6e3e:	0e 94 63 01 	call	0x2c6	; 0x2c6 <_ZNK10helicopter5model11SystemModel10YawControlEv>
    6e42:	dc 01       	movw	r26, r24
    6e44:	cb 01       	movw	r24, r22
    6e46:	29 81       	ldd	r18, Y+1	; 0x01
    6e48:	3a 81       	ldd	r19, Y+2	; 0x02
    6e4a:	f9 01       	movw	r30, r18
    6e4c:	81 8f       	std	Z+25, r24	; 0x19
    6e4e:	92 8f       	std	Z+26, r25	; 0x1a
    6e50:	a3 8f       	std	Z+27, r26	; 0x1b
    6e52:	b4 8f       	std	Z+28, r27	; 0x1c
	

	message->ThetaPitchDegrees = model->ThetaPitchDegrees();
    6e54:	8b 81       	ldd	r24, Y+3	; 0x03
    6e56:	9c 81       	ldd	r25, Y+4	; 0x04
    6e58:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <_ZNK10helicopter5model11SystemModel17ThetaPitchDegreesEv>
    6e5c:	dc 01       	movw	r26, r24
    6e5e:	cb 01       	movw	r24, r22
    6e60:	29 81       	ldd	r18, Y+1	; 0x01
    6e62:	3a 81       	ldd	r19, Y+2	; 0x02
    6e64:	f9 01       	movw	r30, r18
    6e66:	85 ab       	std	Z+53, r24	; 0x35
    6e68:	96 ab       	std	Z+54, r25	; 0x36
    6e6a:	a7 ab       	std	Z+55, r26	; 0x37
    6e6c:	b0 af       	std	Z+56, r27	; 0x38
	message->XNEDBodyFrame = model->XNEDBodyFrame();
    6e6e:	8b 81       	ldd	r24, Y+3	; 0x03
    6e70:	9c 81       	ldd	r25, Y+4	; 0x04
    6e72:	0e 94 71 02 	call	0x4e2	; 0x4e2 <_ZNK10helicopter5model11SystemModel13XNEDBodyFrameEv>
    6e76:	dc 01       	movw	r26, r24
    6e78:	cb 01       	movw	r24, r22
    6e7a:	29 81       	ldd	r18, Y+1	; 0x01
    6e7c:	3a 81       	ldd	r19, Y+2	; 0x02
    6e7e:	f9 01       	movw	r30, r18
    6e80:	85 a7       	std	Z+45, r24	; 0x2d
    6e82:	96 a7       	std	Z+46, r25	; 0x2e
    6e84:	a7 a7       	std	Z+47, r26	; 0x2f
    6e86:	b0 ab       	std	Z+48, r27	; 0x30
	message->XDerivativeError = model->XDerivativeError();
    6e88:	8b 81       	ldd	r24, Y+3	; 0x03
    6e8a:	9c 81       	ldd	r25, Y+4	; 0x04
    6e8c:	0e 94 ad 2b 	call	0x575a	; 0x575a <_ZNK10helicopter5model11SystemModel16XDerivativeErrorEv>
    6e90:	dc 01       	movw	r26, r24
    6e92:	cb 01       	movw	r24, r22
    6e94:	29 81       	ldd	r18, Y+1	; 0x01
    6e96:	3a 81       	ldd	r19, Y+2	; 0x02
    6e98:	2f 5b       	subi	r18, 0xBF	; 191
    6e9a:	3f 4f       	sbci	r19, 0xFF	; 255
    6e9c:	f9 01       	movw	r30, r18
    6e9e:	80 83       	st	Z, r24
    6ea0:	91 83       	std	Z+1, r25	; 0x01
    6ea2:	a2 83       	std	Z+2, r26	; 0x02
    6ea4:	b3 83       	std	Z+3, r27	; 0x03
	message->XIntegral = model->XIntegral();
    6ea6:	8b 81       	ldd	r24, Y+3	; 0x03
    6ea8:	9c 81       	ldd	r25, Y+4	; 0x04
    6eaa:	0e 94 92 03 	call	0x724	; 0x724 <_ZNK10helicopter5model11SystemModel9XIntegralEv>
    6eae:	dc 01       	movw	r26, r24
    6eb0:	cb 01       	movw	r24, r22
    6eb2:	29 81       	ldd	r18, Y+1	; 0x01
    6eb4:	3a 81       	ldd	r19, Y+2	; 0x02
    6eb6:	f9 01       	movw	r30, r18
    6eb8:	81 af       	std	Z+57, r24	; 0x39
    6eba:	92 af       	std	Z+58, r25	; 0x3a
    6ebc:	a3 af       	std	Z+59, r26	; 0x3b
    6ebe:	b4 af       	std	Z+60, r27	; 0x3c
	message->XProportional = model->XProportional();
    6ec0:	8b 81       	ldd	r24, Y+3	; 0x03
    6ec2:	9c 81       	ldd	r25, Y+4	; 0x04
    6ec4:	0e 94 95 2b 	call	0x572a	; 0x572a <_ZNK10helicopter5model11SystemModel13XProportionalEv>
    6ec8:	dc 01       	movw	r26, r24
    6eca:	cb 01       	movw	r24, r22
    6ecc:	29 81       	ldd	r18, Y+1	; 0x01
    6ece:	3a 81       	ldd	r19, Y+2	; 0x02
    6ed0:	23 5c       	subi	r18, 0xC3	; 195
    6ed2:	3f 4f       	sbci	r19, 0xFF	; 255
    6ed4:	f9 01       	movw	r30, r18
    6ed6:	80 83       	st	Z, r24
    6ed8:	91 83       	std	Z+1, r25	; 0x01
    6eda:	a2 83       	std	Z+2, r26	; 0x02
    6edc:	b3 83       	std	Z+3, r27	; 0x03
	message->XVelocityMetersPerSecond = model->XVelocityMetersPerSecond();
    6ede:	8b 81       	ldd	r24, Y+3	; 0x03
    6ee0:	9c 81       	ldd	r25, Y+4	; 0x04
    6ee2:	0e 94 09 03 	call	0x612	; 0x612 <_ZNK10helicopter5model11SystemModel24XVelocityMetersPerSecondEv>
    6ee6:	dc 01       	movw	r26, r24
    6ee8:	cb 01       	movw	r24, r22
    6eea:	29 81       	ldd	r18, Y+1	; 0x01
    6eec:	3a 81       	ldd	r19, Y+2	; 0x02
    6eee:	f9 01       	movw	r30, r18
    6ef0:	81 ab       	std	Z+49, r24	; 0x31
    6ef2:	92 ab       	std	Z+50, r25	; 0x32
    6ef4:	a3 ab       	std	Z+51, r26	; 0x33
    6ef6:	b4 ab       	std	Z+52, r27	; 0x34
	message->LongitudeControl = model->LongitudeControl();
    6ef8:	8b 81       	ldd	r24, Y+3	; 0x03
    6efa:	9c 81       	ldd	r25, Y+4	; 0x04
    6efc:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZNK10helicopter5model11SystemModel16LongitudeControlEv>
    6f00:	dc 01       	movw	r26, r24
    6f02:	cb 01       	movw	r24, r22
    6f04:	29 81       	ldd	r18, Y+1	; 0x01
    6f06:	3a 81       	ldd	r19, Y+2	; 0x02
    6f08:	2b 5b       	subi	r18, 0xBB	; 187
    6f0a:	3f 4f       	sbci	r19, 0xFF	; 255
    6f0c:	f9 01       	movw	r30, r18
    6f0e:	80 83       	st	Z, r24
    6f10:	91 83       	std	Z+1, r25	; 0x01
    6f12:	a2 83       	std	Z+2, r26	; 0x02
    6f14:	b3 83       	std	Z+3, r27	; 0x03
	message->XLongitudeOuterLoopSetpoint = model->XLongitudeOuterLoopSetpoint();
    6f16:	8b 81       	ldd	r24, Y+3	; 0x03
    6f18:	9c 81       	ldd	r25, Y+4	; 0x04
    6f1a:	0e 94 35 03 	call	0x66a	; 0x66a <_ZNK10helicopter5model11SystemModel27XLongitudeOuterLoopSetpointEv>
    6f1e:	dc 01       	movw	r26, r24
    6f20:	cb 01       	movw	r24, r22
    6f22:	29 81       	ldd	r18, Y+1	; 0x01
    6f24:	3a 81       	ldd	r19, Y+2	; 0x02
    6f26:	23 5a       	subi	r18, 0xA3	; 163
    6f28:	3f 4f       	sbci	r19, 0xFF	; 255
    6f2a:	f9 01       	movw	r30, r18
    6f2c:	80 83       	st	Z, r24
    6f2e:	91 83       	std	Z+1, r25	; 0x01
    6f30:	a2 83       	std	Z+2, r26	; 0x02
    6f32:	b3 83       	std	Z+3, r27	; 0x03
	message->PitchAngularVelocityRadsPerSecond = model->PitchAngularVelocityRadsPerSecond();
    6f34:	8b 81       	ldd	r24, Y+3	; 0x03
    6f36:	9c 81       	ldd	r25, Y+4	; 0x04
    6f38:	0e 94 08 04 	call	0x810	; 0x810 <_ZNK10helicopter5model11SystemModel33PitchAngularVelocityRadsPerSecondEv>
    6f3c:	dc 01       	movw	r26, r24
    6f3e:	cb 01       	movw	r24, r22
    6f40:	29 81       	ldd	r18, Y+1	; 0x01
    6f42:	3a 81       	ldd	r19, Y+2	; 0x02
    6f44:	2f 59       	subi	r18, 0x9F	; 159
    6f46:	3f 4f       	sbci	r19, 0xFF	; 255
    6f48:	f9 01       	movw	r30, r18
    6f4a:	80 83       	st	Z, r24
    6f4c:	91 83       	std	Z+1, r25	; 0x01
    6f4e:	a2 83       	std	Z+2, r26	; 0x02
    6f50:	b3 83       	std	Z+3, r27	; 0x03

	
	message->PhiRollDegrees = model->PhiRollDegrees();
    6f52:	8b 81       	ldd	r24, Y+3	; 0x03
    6f54:	9c 81       	ldd	r25, Y+4	; 0x04
    6f56:	0e 94 b2 05 	call	0xb64	; 0xb64 <_ZNK10helicopter5model11SystemModel14PhiRollDegreesEv>
    6f5a:	dc 01       	movw	r26, r24
    6f5c:	cb 01       	movw	r24, r22
    6f5e:	29 81       	ldd	r18, Y+1	; 0x01
    6f60:	3a 81       	ldd	r19, Y+2	; 0x02
    6f62:	2f 58       	subi	r18, 0x8F	; 143
    6f64:	3f 4f       	sbci	r19, 0xFF	; 255
    6f66:	f9 01       	movw	r30, r18
    6f68:	80 83       	st	Z, r24
    6f6a:	91 83       	std	Z+1, r25	; 0x01
    6f6c:	a2 83       	std	Z+2, r26	; 0x02
    6f6e:	b3 83       	std	Z+3, r27	; 0x03
	message->YNEDBodyFrame = model->YNEDBodyFrame();
    6f70:	8b 81       	ldd	r24, Y+3	; 0x03
    6f72:	9c 81       	ldd	r25, Y+4	; 0x04
    6f74:	0e 94 20 04 	call	0x840	; 0x840 <_ZNK10helicopter5model11SystemModel13YNEDBodyFrameEv>
    6f78:	dc 01       	movw	r26, r24
    6f7a:	cb 01       	movw	r24, r22
    6f7c:	29 81       	ldd	r18, Y+1	; 0x01
    6f7e:	3a 81       	ldd	r19, Y+2	; 0x02
    6f80:	27 59       	subi	r18, 0x97	; 151
    6f82:	3f 4f       	sbci	r19, 0xFF	; 255
    6f84:	f9 01       	movw	r30, r18
    6f86:	80 83       	st	Z, r24
    6f88:	91 83       	std	Z+1, r25	; 0x01
    6f8a:	a2 83       	std	Z+2, r26	; 0x02
    6f8c:	b3 83       	std	Z+3, r27	; 0x03
	message->YDerivativeError = model->YDerivativeError();
    6f8e:	8b 81       	ldd	r24, Y+3	; 0x03
    6f90:	9c 81       	ldd	r25, Y+4	; 0x04
    6f92:	0e 94 46 2c 	call	0x588c	; 0x588c <_ZNK10helicopter5model11SystemModel16YDerivativeErrorEv>
    6f96:	dc 01       	movw	r26, r24
    6f98:	cb 01       	movw	r24, r22
    6f9a:	29 81       	ldd	r18, Y+1	; 0x01
    6f9c:	3a 81       	ldd	r19, Y+2	; 0x02
    6f9e:	23 58       	subi	r18, 0x83	; 131
    6fa0:	3f 4f       	sbci	r19, 0xFF	; 255
    6fa2:	f9 01       	movw	r30, r18
    6fa4:	80 83       	st	Z, r24
    6fa6:	91 83       	std	Z+1, r25	; 0x01
    6fa8:	a2 83       	std	Z+2, r26	; 0x02
    6faa:	b3 83       	std	Z+3, r27	; 0x03
	message->YIntegral = model->YIntegral();
    6fac:	8b 81       	ldd	r24, Y+3	; 0x03
    6fae:	9c 81       	ldd	r25, Y+4	; 0x04
    6fb0:	0e 94 54 05 	call	0xaa8	; 0xaa8 <_ZNK10helicopter5model11SystemModel9YIntegralEv>
    6fb4:	dc 01       	movw	r26, r24
    6fb6:	cb 01       	movw	r24, r22
    6fb8:	29 81       	ldd	r18, Y+1	; 0x01
    6fba:	3a 81       	ldd	r19, Y+2	; 0x02
    6fbc:	2b 58       	subi	r18, 0x8B	; 139
    6fbe:	3f 4f       	sbci	r19, 0xFF	; 255
    6fc0:	f9 01       	movw	r30, r18
    6fc2:	80 83       	st	Z, r24
    6fc4:	91 83       	std	Z+1, r25	; 0x01
    6fc6:	a2 83       	std	Z+2, r26	; 0x02
    6fc8:	b3 83       	std	Z+3, r27	; 0x03
	message->YProportional = model->YProportional();
    6fca:	8b 81       	ldd	r24, Y+3	; 0x03
    6fcc:	9c 81       	ldd	r25, Y+4	; 0x04
    6fce:	0e 94 2e 2c 	call	0x585c	; 0x585c <_ZNK10helicopter5model11SystemModel13YProportionalEv>
    6fd2:	dc 01       	movw	r26, r24
    6fd4:	cb 01       	movw	r24, r22
    6fd6:	29 81       	ldd	r18, Y+1	; 0x01
    6fd8:	3a 81       	ldd	r19, Y+2	; 0x02
    6fda:	27 58       	subi	r18, 0x87	; 135
    6fdc:	3f 4f       	sbci	r19, 0xFF	; 255
    6fde:	f9 01       	movw	r30, r18
    6fe0:	80 83       	st	Z, r24
    6fe2:	91 83       	std	Z+1, r25	; 0x01
    6fe4:	a2 83       	std	Z+2, r26	; 0x02
    6fe6:	b3 83       	std	Z+3, r27	; 0x03
	message->YVelocityMetersPerSecond = model->YVelocityMetersPerSecond();
    6fe8:	8b 81       	ldd	r24, Y+3	; 0x03
    6fea:	9c 81       	ldd	r25, Y+4	; 0x04
    6fec:	0e 94 c6 04 	call	0x98c	; 0x98c <_ZNK10helicopter5model11SystemModel24YVelocityMetersPerSecondEv>
    6ff0:	dc 01       	movw	r26, r24
    6ff2:	cb 01       	movw	r24, r22
    6ff4:	29 81       	ldd	r18, Y+1	; 0x01
    6ff6:	3a 81       	ldd	r19, Y+2	; 0x02
    6ff8:	23 59       	subi	r18, 0x93	; 147
    6ffa:	3f 4f       	sbci	r19, 0xFF	; 255
    6ffc:	f9 01       	movw	r30, r18
    6ffe:	80 83       	st	Z, r24
    7000:	91 83       	std	Z+1, r25	; 0x01
    7002:	a2 83       	std	Z+2, r26	; 0x02
    7004:	b3 83       	std	Z+3, r27	; 0x03
	message->LateralControl = model->LateralControl();
    7006:	8b 81       	ldd	r24, Y+3	; 0x03
    7008:	9c 81       	ldd	r25, Y+4	; 0x04
    700a:	0e 94 8b 04 	call	0x916	; 0x916 <_ZNK10helicopter5model11SystemModel14LateralControlEv>
    700e:	dc 01       	movw	r26, r24
    7010:	cb 01       	movw	r24, r22
    7012:	29 81       	ldd	r18, Y+1	; 0x01
    7014:	3a 81       	ldd	r19, Y+2	; 0x02
    7016:	2f 57       	subi	r18, 0x7F	; 127
    7018:	3f 4f       	sbci	r19, 0xFF	; 255
    701a:	f9 01       	movw	r30, r18
    701c:	80 83       	st	Z, r24
    701e:	91 83       	std	Z+1, r25	; 0x01
    7020:	a2 83       	std	Z+2, r26	; 0x02
    7022:	b3 83       	std	Z+3, r27	; 0x03
	message->YLateralOuterLoopSetpoint = model->YLateralOuterLoopSetpoint();
    7024:	8b 81       	ldd	r24, Y+3	; 0x03
    7026:	9c 81       	ldd	r25, Y+4	; 0x04
    7028:	0e 94 f6 04 	call	0x9ec	; 0x9ec <_ZNK10helicopter5model11SystemModel25YLateralOuterLoopSetpointEv>
    702c:	dc 01       	movw	r26, r24
    702e:	cb 01       	movw	r24, r22
    7030:	29 81       	ldd	r18, Y+1	; 0x01
    7032:	3a 81       	ldd	r19, Y+2	; 0x02
    7034:	27 56       	subi	r18, 0x67	; 103
    7036:	3f 4f       	sbci	r19, 0xFF	; 255
    7038:	f9 01       	movw	r30, r18
    703a:	80 83       	st	Z, r24
    703c:	91 83       	std	Z+1, r25	; 0x01
    703e:	a2 83       	std	Z+2, r26	; 0x02
    7040:	b3 83       	std	Z+3, r27	; 0x03
	message->RollAngularVelocityRadsPerSecond = model->RollAngularVelocityRadsPerSecond();	
    7042:	8b 81       	ldd	r24, Y+3	; 0x03
    7044:	9c 81       	ldd	r25, Y+4	; 0x04
    7046:	0e 94 ca 05 	call	0xb94	; 0xb94 <_ZNK10helicopter5model11SystemModel32RollAngularVelocityRadsPerSecondEv>
    704a:	dc 01       	movw	r26, r24
    704c:	cb 01       	movw	r24, r22
    704e:	29 81       	ldd	r18, Y+1	; 0x01
    7050:	3a 81       	ldd	r19, Y+2	; 0x02
    7052:	23 56       	subi	r18, 0x63	; 99
    7054:	3f 4f       	sbci	r19, 0xFF	; 255
    7056:	f9 01       	movw	r30, r18
    7058:	80 83       	st	Z, r24
    705a:	91 83       	std	Z+1, r25	; 0x01
    705c:	a2 83       	std	Z+2, r26	; 0x02
    705e:	b3 83       	std	Z+3, r27	; 0x03
	
	
	message->AltitudeFeetAgl = model->AltitudeFeetAgl();
    7060:	8b 81       	ldd	r24, Y+3	; 0x03
    7062:	9c 81       	ldd	r25, Y+4	; 0x04
    7064:	0e 94 81 19 	call	0x3302	; 0x3302 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    7068:	dc 01       	movw	r26, r24
    706a:	cb 01       	movw	r24, r22
    706c:	29 81       	ldd	r18, Y+1	; 0x01
    706e:	3a 81       	ldd	r19, Y+2	; 0x02
    7070:	2b 55       	subi	r18, 0x5B	; 91
    7072:	3f 4f       	sbci	r19, 0xFF	; 255
    7074:	f9 01       	movw	r30, r18
    7076:	80 83       	st	Z, r24
    7078:	91 83       	std	Z+1, r25	; 0x01
    707a:	a2 83       	std	Z+2, r26	; 0x02
    707c:	b3 83       	std	Z+3, r27	; 0x03
	message->ZDerivativeError = model->ZDerivativeError();
    707e:	8b 81       	ldd	r24, Y+3	; 0x03
    7080:	9c 81       	ldd	r25, Y+4	; 0x04
    7082:	0e 94 02 2d 	call	0x5a04	; 0x5a04 <_ZNK10helicopter5model11SystemModel16ZDerivativeErrorEv>
    7086:	dc 01       	movw	r26, r24
    7088:	cb 01       	movw	r24, r22
    708a:	29 81       	ldd	r18, Y+1	; 0x01
    708c:	3a 81       	ldd	r19, Y+2	; 0x02
    708e:	2b 54       	subi	r18, 0x4B	; 75
    7090:	3f 4f       	sbci	r19, 0xFF	; 255
    7092:	f9 01       	movw	r30, r18
    7094:	80 83       	st	Z, r24
    7096:	91 83       	std	Z+1, r25	; 0x01
    7098:	a2 83       	std	Z+2, r26	; 0x02
    709a:	b3 83       	std	Z+3, r27	; 0x03
	message->ZIntegral = model->ZIntegral();
    709c:	8b 81       	ldd	r24, Y+3	; 0x03
    709e:	9c 81       	ldd	r25, Y+4	; 0x04
    70a0:	0e 94 b8 06 	call	0xd70	; 0xd70 <_ZNK10helicopter5model11SystemModel9ZIntegralEv>
    70a4:	dc 01       	movw	r26, r24
    70a6:	cb 01       	movw	r24, r22
    70a8:	29 81       	ldd	r18, Y+1	; 0x01
    70aa:	3a 81       	ldd	r19, Y+2	; 0x02
    70ac:	23 55       	subi	r18, 0x53	; 83
    70ae:	3f 4f       	sbci	r19, 0xFF	; 255
    70b0:	f9 01       	movw	r30, r18
    70b2:	80 83       	st	Z, r24
    70b4:	91 83       	std	Z+1, r25	; 0x01
    70b6:	a2 83       	std	Z+2, r26	; 0x02
    70b8:	b3 83       	std	Z+3, r27	; 0x03
	message->ZProportional = model->ZProportional();
    70ba:	8b 81       	ldd	r24, Y+3	; 0x03
    70bc:	9c 81       	ldd	r25, Y+4	; 0x04
    70be:	0e 94 ea 2c 	call	0x59d4	; 0x59d4 <_ZNK10helicopter5model11SystemModel13ZProportionalEv>
    70c2:	dc 01       	movw	r26, r24
    70c4:	cb 01       	movw	r24, r22
    70c6:	29 81       	ldd	r18, Y+1	; 0x01
    70c8:	3a 81       	ldd	r19, Y+2	; 0x02
    70ca:	2f 54       	subi	r18, 0x4F	; 79
    70cc:	3f 4f       	sbci	r19, 0xFF	; 255
    70ce:	f9 01       	movw	r30, r18
    70d0:	80 83       	st	Z, r24
    70d2:	91 83       	std	Z+1, r25	; 0x01
    70d4:	a2 83       	std	Z+2, r26	; 0x02
    70d6:	b3 83       	std	Z+3, r27	; 0x03
	message->ZVelocityMetersPerSecond = (model->ZVelocityFeetPerSecond() / 3.2804f);
    70d8:	8b 81       	ldd	r24, Y+3	; 0x03
    70da:	9c 81       	ldd	r25, Y+4	; 0x04
    70dc:	0e 94 88 06 	call	0xd10	; 0xd10 <_ZNK10helicopter5model11SystemModel22ZVelocityFeetPerSecondEv>
    70e0:	dc 01       	movw	r26, r24
    70e2:	cb 01       	movw	r24, r22
    70e4:	23 e1       	ldi	r18, 0x13	; 19
    70e6:	32 ef       	ldi	r19, 0xF2	; 242
    70e8:	41 e5       	ldi	r20, 0x51	; 81
    70ea:	50 e4       	ldi	r21, 0x40	; 64
    70ec:	bc 01       	movw	r22, r24
    70ee:	cd 01       	movw	r24, r26
    70f0:	0e 94 5a 4b 	call	0x96b4	; 0x96b4 <__divsf3>
    70f4:	dc 01       	movw	r26, r24
    70f6:	cb 01       	movw	r24, r22
    70f8:	29 81       	ldd	r18, Y+1	; 0x01
    70fa:	3a 81       	ldd	r19, Y+2	; 0x02
    70fc:	27 55       	subi	r18, 0x57	; 87
    70fe:	3f 4f       	sbci	r19, 0xFF	; 255
    7100:	f9 01       	movw	r30, r18
    7102:	80 83       	st	Z, r24
    7104:	91 83       	std	Z+1, r25	; 0x01
    7106:	a2 83       	std	Z+2, r26	; 0x02
    7108:	b3 83       	std	Z+3, r27	; 0x03
	message->MainRotorCollectiveControl = model->MainRotorCollectiveControl();
    710a:	8b 81       	ldd	r24, Y+3	; 0x03
    710c:	9c 81       	ldd	r25, Y+4	; 0x04
    710e:	0e 94 12 06 	call	0xc24	; 0xc24 <_ZNK10helicopter5model11SystemModel26MainRotorCollectiveControlEv>
    7112:	dc 01       	movw	r26, r24
    7114:	cb 01       	movw	r24, r22
    7116:	29 81       	ldd	r18, Y+1	; 0x01
    7118:	3a 81       	ldd	r19, Y+2	; 0x02
    711a:	27 54       	subi	r18, 0x47	; 71
    711c:	3f 4f       	sbci	r19, 0xFF	; 255
    711e:	f9 01       	movw	r30, r18
    7120:	80 83       	st	Z, r24
    7122:	91 83       	std	Z+1, r25	; 0x01
    7124:	a2 83       	std	Z+2, r26	; 0x02
    7126:	b3 83       	std	Z+3, r27	; 0x03
	message->ZNEDBodyFrame = model->ZNEDBodyFrame();
    7128:	8b 81       	ldd	r24, Y+3	; 0x03
    712a:	9c 81       	ldd	r25, Y+4	; 0x04
    712c:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <_ZNK10helicopter5model11SystemModel13ZNEDBodyFrameEv>
    7130:	dc 01       	movw	r26, r24
    7132:	cb 01       	movw	r24, r22
    7134:	29 81       	ldd	r18, Y+1	; 0x01
    7136:	3a 81       	ldd	r19, Y+2	; 0x02
    7138:	23 53       	subi	r18, 0x33	; 51
    713a:	3f 4f       	sbci	r19, 0xFF	; 255
    713c:	f9 01       	movw	r30, r18
    713e:	80 83       	st	Z, r24
    7140:	91 83       	std	Z+1, r25	; 0x01
    7142:	a2 83       	std	Z+2, r26	; 0x02
    7144:	b3 83       	std	Z+3, r27	; 0x03
	
	
	
	message->ChecksumErrors = model->ChecksumErrors();
    7146:	8b 81       	ldd	r24, Y+3	; 0x03
    7148:	9c 81       	ldd	r25, Y+4	; 0x04
    714a:	0e 94 d6 2d 	call	0x5bac	; 0x5bac <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>
    714e:	dc 01       	movw	r26, r24
    7150:	cb 01       	movw	r24, r22
    7152:	29 81       	ldd	r18, Y+1	; 0x01
    7154:	3a 81       	ldd	r19, Y+2	; 0x02
    7156:	2f 51       	subi	r18, 0x1F	; 31
    7158:	3f 4f       	sbci	r19, 0xFF	; 255
    715a:	f9 01       	movw	r30, r18
    715c:	80 83       	st	Z, r24
    715e:	91 83       	std	Z+1, r25	; 0x01
    7160:	a2 83       	std	Z+2, r26	; 0x02
    7162:	b3 83       	std	Z+3, r27	; 0x03
	message->Timeouts = model->Timeouts();
    7164:	8b 81       	ldd	r24, Y+3	; 0x03
    7166:	9c 81       	ldd	r25, Y+4	; 0x04
    7168:	0e 94 60 2d 	call	0x5ac0	; 0x5ac0 <_ZNK10helicopter5model11SystemModel8TimeoutsEv>
    716c:	dc 01       	movw	r26, r24
    716e:	cb 01       	movw	r24, r22
    7170:	29 81       	ldd	r18, Y+1	; 0x01
    7172:	3a 81       	ldd	r19, Y+2	; 0x02
    7174:	27 52       	subi	r18, 0x27	; 39
    7176:	3f 4f       	sbci	r19, 0xFF	; 255
    7178:	f9 01       	movw	r30, r18
    717a:	80 83       	st	Z, r24
    717c:	91 83       	std	Z+1, r25	; 0x01
    717e:	a2 83       	std	Z+2, r26	; 0x02
    7180:	b3 83       	std	Z+3, r27	; 0x03
	message->UnrecognizedMsgTypes = model->UnrecognizedMsgTypes();
    7182:	8b 81       	ldd	r24, Y+3	; 0x03
    7184:	9c 81       	ldd	r25, Y+4	; 0x04
    7186:	0e 94 9b 2d 	call	0x5b36	; 0x5b36 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>
    718a:	dc 01       	movw	r26, r24
    718c:	cb 01       	movw	r24, r22
    718e:	29 81       	ldd	r18, Y+1	; 0x01
    7190:	3a 81       	ldd	r19, Y+2	; 0x02
    7192:	23 52       	subi	r18, 0x23	; 35
    7194:	3f 4f       	sbci	r19, 0xFF	; 255
    7196:	f9 01       	movw	r30, r18
    7198:	80 83       	st	Z, r24
    719a:	91 83       	std	Z+1, r25	; 0x01
    719c:	a2 83       	std	Z+2, r26	; 0x02
    719e:	b3 83       	std	Z+3, r27	; 0x03
	message->NumOfBlownFrames = model->BlownFrames();
    71a0:	8b 81       	ldd	r24, Y+3	; 0x03
    71a2:	9c 81       	ldd	r25, Y+4	; 0x04
    71a4:	0e 94 39 07 	call	0xe72	; 0xe72 <_ZNK10helicopter5model11SystemModel11BlownFramesEv>
    71a8:	dc 01       	movw	r26, r24
    71aa:	cb 01       	movw	r24, r22
    71ac:	29 81       	ldd	r18, Y+1	; 0x01
    71ae:	3a 81       	ldd	r19, Y+2	; 0x02
    71b0:	2b 51       	subi	r18, 0x1B	; 27
    71b2:	3f 4f       	sbci	r19, 0xFF	; 255
    71b4:	f9 01       	movw	r30, r18
    71b6:	80 83       	st	Z, r24
    71b8:	91 83       	std	Z+1, r25	; 0x01
    71ba:	a2 83       	std	Z+2, r26	; 0x02
    71bc:	b3 83       	std	Z+3, r27	; 0x03
	message->SerialCommunicationBufferOverruns = model->SerialCommunicationBufferOverruns();
    71be:	8b 81       	ldd	r24, Y+3	; 0x03
    71c0:	9c 81       	ldd	r25, Y+4	; 0x04
    71c2:	0e 94 11 2e 	call	0x5c22	; 0x5c22 <_ZNK10helicopter5model11SystemModel33SerialCommunicationBufferOverrunsEv>
    71c6:	dc 01       	movw	r26, r24
    71c8:	cb 01       	movw	r24, r22
    71ca:	29 81       	ldd	r18, Y+1	; 0x01
    71cc:	3a 81       	ldd	r19, Y+2	; 0x02
    71ce:	27 51       	subi	r18, 0x17	; 23
    71d0:	3f 4f       	sbci	r19, 0xFF	; 255
    71d2:	f9 01       	movw	r30, r18
    71d4:	80 83       	st	Z, r24
    71d6:	91 83       	std	Z+1, r25	; 0x01
    71d8:	a2 83       	std	Z+2, r26	; 0x02
    71da:	b3 83       	std	Z+3, r27	; 0x03
	
	return message;
    71dc:	89 81       	ldd	r24, Y+1	; 0x01
    71de:	9a 81       	ldd	r25, Y+2	; 0x02
}
    71e0:	0f 90       	pop	r0
    71e2:	0f 90       	pop	r0
    71e4:	0f 90       	pop	r0
    71e6:	0f 90       	pop	r0
    71e8:	df 91       	pop	r29
    71ea:	cf 91       	pop	r28
    71ec:	1f 91       	pop	r17
    71ee:	0f 91       	pop	r16
    71f0:	08 95       	ret

000071f2 <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE>:
	model->ChecksumErrors(this->ChecksumErrors);
	model->BlownFrames(this->NumOfBlownFrames);
}

void SystemTelemetryMessage::updateModelFromMessageFromSimulator (SystemModel *model)
{
    71f2:	cf 93       	push	r28
    71f4:	df 93       	push	r29
    71f6:	00 d0       	rcall	.+0      	; 0x71f8 <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE+0x6>
    71f8:	1f 92       	push	r1
    71fa:	cd b7       	in	r28, 0x3d	; 61
    71fc:	de b7       	in	r29, 0x3e	; 62
    71fe:	9a 83       	std	Y+2, r25	; 0x02
    7200:	89 83       	std	Y+1, r24	; 0x01
    7202:	7c 83       	std	Y+4, r23	; 0x04
    7204:	6b 83       	std	Y+3, r22	; 0x03
	//These values are sensor readings from the simulator that are used for flight
	//control calculations. The real helicopter algorithms will read these values
	//from actual sensors, but when running off of the simulator, these sensor
	//readings come from the simulator itself.
	
	model->MagYawDegrees(this->MagYaw);
    7206:	89 81       	ldd	r24, Y+1	; 0x01
    7208:	9a 81       	ldd	r25, Y+2	; 0x02
    720a:	fc 01       	movw	r30, r24
    720c:	85 81       	ldd	r24, Z+5	; 0x05
    720e:	96 81       	ldd	r25, Z+6	; 0x06
    7210:	a7 81       	ldd	r26, Z+7	; 0x07
    7212:	b0 85       	ldd	r27, Z+8	; 0x08
    7214:	2b 81       	ldd	r18, Y+3	; 0x03
    7216:	3c 81       	ldd	r19, Y+4	; 0x04
    7218:	ac 01       	movw	r20, r24
    721a:	bd 01       	movw	r22, r26
    721c:	c9 01       	movw	r24, r18
    721e:	0e 94 09 2b 	call	0x5612	; 0x5612 <_ZN10helicopter5model11SystemModel13MagYawDegreesEf>
	model->YawVelocityDegreesPerSecond(this->YawVelocityDegreesPerSecond);
    7222:	89 81       	ldd	r24, Y+1	; 0x01
    7224:	9a 81       	ldd	r25, Y+2	; 0x02
    7226:	fc 01       	movw	r30, r24
    7228:	81 85       	ldd	r24, Z+9	; 0x09
    722a:	92 85       	ldd	r25, Z+10	; 0x0a
    722c:	a3 85       	ldd	r26, Z+11	; 0x0b
    722e:	b4 85       	ldd	r27, Z+12	; 0x0c
    7230:	2b 81       	ldd	r18, Y+3	; 0x03
    7232:	3c 81       	ldd	r19, Y+4	; 0x04
    7234:	ac 01       	movw	r20, r24
    7236:	bd 01       	movw	r22, r26
    7238:	c9 01       	movw	r24, r18
    723a:	0e 94 29 2b 	call	0x5652	; 0x5652 <_ZN10helicopter5model11SystemModel27YawVelocityDegreesPerSecondEf>
	
	//model->XNEDBodyFrame((double) this->XNEDBodyFrame / 100);//not supposed to be here since this is a calculated value, not a sensor reading.
	model->XVelocityMetersPerSecond(this->XVelocityMetersPerSecond);
    723e:	89 81       	ldd	r24, Y+1	; 0x01
    7240:	9a 81       	ldd	r25, Y+2	; 0x02
    7242:	fc 01       	movw	r30, r24
    7244:	81 a9       	ldd	r24, Z+49	; 0x31
    7246:	92 a9       	ldd	r25, Z+50	; 0x32
    7248:	a3 a9       	ldd	r26, Z+51	; 0x33
    724a:	b4 a9       	ldd	r27, Z+52	; 0x34
    724c:	2b 81       	ldd	r18, Y+3	; 0x03
    724e:	3c 81       	ldd	r19, Y+4	; 0x04
    7250:	ac 01       	movw	r20, r24
    7252:	bd 01       	movw	r22, r26
    7254:	c9 01       	movw	r24, r18
    7256:	0e 94 75 2b 	call	0x56ea	; 0x56ea <_ZN10helicopter5model11SystemModel24XVelocityMetersPerSecondEf>
	model->ThetaPitchDegrees(this->ThetaPitchDegrees);
    725a:	89 81       	ldd	r24, Y+1	; 0x01
    725c:	9a 81       	ldd	r25, Y+2	; 0x02
    725e:	fc 01       	movw	r30, r24
    7260:	85 a9       	ldd	r24, Z+53	; 0x35
    7262:	96 a9       	ldd	r25, Z+54	; 0x36
    7264:	a7 a9       	ldd	r26, Z+55	; 0x37
    7266:	b0 ad       	ldd	r27, Z+56	; 0x38
    7268:	2b 81       	ldd	r18, Y+3	; 0x03
    726a:	3c 81       	ldd	r19, Y+4	; 0x04
    726c:	ac 01       	movw	r20, r24
    726e:	bd 01       	movw	r22, r26
    7270:	c9 01       	movw	r24, r18
    7272:	0e 94 c5 2b 	call	0x578a	; 0x578a <_ZN10helicopter5model11SystemModel17ThetaPitchDegreesEf>
	model->PitchAngularVelocityRadsPerSecond(this->PitchAngularVelocityRadsPerSecond);
    7276:	89 81       	ldd	r24, Y+1	; 0x01
    7278:	9a 81       	ldd	r25, Y+2	; 0x02
    727a:	8f 59       	subi	r24, 0x9F	; 159
    727c:	9f 4f       	sbci	r25, 0xFF	; 255
    727e:	fc 01       	movw	r30, r24
    7280:	80 81       	ld	r24, Z
    7282:	91 81       	ldd	r25, Z+1	; 0x01
    7284:	a2 81       	ldd	r26, Z+2	; 0x02
    7286:	b3 81       	ldd	r27, Z+3	; 0x03
    7288:	2b 81       	ldd	r18, Y+3	; 0x03
    728a:	3c 81       	ldd	r19, Y+4	; 0x04
    728c:	ac 01       	movw	r20, r24
    728e:	bd 01       	movw	r22, r26
    7290:	c9 01       	movw	r24, r18
    7292:	0e 94 e8 2b 	call	0x57d0	; 0x57d0 <_ZN10helicopter5model11SystemModel33PitchAngularVelocityRadsPerSecondEf>
	
	//model->YNEDBodyFrame((double) this->YNEDBodyFrame / 100);
	model->YVelocityMetersPerSecond(this->YVelocityMetersPerSecond);
    7296:	89 81       	ldd	r24, Y+1	; 0x01
    7298:	9a 81       	ldd	r25, Y+2	; 0x02
    729a:	83 59       	subi	r24, 0x93	; 147
    729c:	9f 4f       	sbci	r25, 0xFF	; 255
    729e:	fc 01       	movw	r30, r24
    72a0:	80 81       	ld	r24, Z
    72a2:	91 81       	ldd	r25, Z+1	; 0x01
    72a4:	a2 81       	ldd	r26, Z+2	; 0x02
    72a6:	b3 81       	ldd	r27, Z+3	; 0x03
    72a8:	2b 81       	ldd	r18, Y+3	; 0x03
    72aa:	3c 81       	ldd	r19, Y+4	; 0x04
    72ac:	ac 01       	movw	r20, r24
    72ae:	bd 01       	movw	r22, r26
    72b0:	c9 01       	movw	r24, r18
    72b2:	0e 94 0b 2c 	call	0x5816	; 0x5816 <_ZN10helicopter5model11SystemModel24YVelocityMetersPerSecondEf>
	model->PhiRollDegrees(this->PhiRollDegrees);
    72b6:	89 81       	ldd	r24, Y+1	; 0x01
    72b8:	9a 81       	ldd	r25, Y+2	; 0x02
    72ba:	8f 58       	subi	r24, 0x8F	; 143
    72bc:	9f 4f       	sbci	r25, 0xFF	; 255
    72be:	fc 01       	movw	r30, r24
    72c0:	80 81       	ld	r24, Z
    72c2:	91 81       	ldd	r25, Z+1	; 0x01
    72c4:	a2 81       	ldd	r26, Z+2	; 0x02
    72c6:	b3 81       	ldd	r27, Z+3	; 0x03
    72c8:	2b 81       	ldd	r18, Y+3	; 0x03
    72ca:	3c 81       	ldd	r19, Y+4	; 0x04
    72cc:	ac 01       	movw	r20, r24
    72ce:	bd 01       	movw	r22, r26
    72d0:	c9 01       	movw	r24, r18
    72d2:	0e 94 5e 2c 	call	0x58bc	; 0x58bc <_ZN10helicopter5model11SystemModel14PhiRollDegreesEf>
	model->RollAngularVelocityRadsPerSecond(this->RollAngularVelocityRadsPerSecond);
    72d6:	89 81       	ldd	r24, Y+1	; 0x01
    72d8:	9a 81       	ldd	r25, Y+2	; 0x02
    72da:	83 56       	subi	r24, 0x63	; 99
    72dc:	9f 4f       	sbci	r25, 0xFF	; 255
    72de:	fc 01       	movw	r30, r24
    72e0:	80 81       	ld	r24, Z
    72e2:	91 81       	ldd	r25, Z+1	; 0x01
    72e4:	a2 81       	ldd	r26, Z+2	; 0x02
    72e6:	b3 81       	ldd	r27, Z+3	; 0x03
    72e8:	2b 81       	ldd	r18, Y+3	; 0x03
    72ea:	3c 81       	ldd	r19, Y+4	; 0x04
    72ec:	ac 01       	movw	r20, r24
    72ee:	bd 01       	movw	r22, r26
    72f0:	c9 01       	movw	r24, r18
    72f2:	0e 94 81 2c 	call	0x5902	; 0x5902 <_ZN10helicopter5model11SystemModel32RollAngularVelocityRadsPerSecondEf>
	
	model->AltitudeFeetAgl(this->AltitudeFeetAgl);
    72f6:	89 81       	ldd	r24, Y+1	; 0x01
    72f8:	9a 81       	ldd	r25, Y+2	; 0x02
    72fa:	8b 55       	subi	r24, 0x5B	; 91
    72fc:	9f 4f       	sbci	r25, 0xFF	; 255
    72fe:	fc 01       	movw	r30, r24
    7300:	80 81       	ld	r24, Z
    7302:	91 81       	ldd	r25, Z+1	; 0x01
    7304:	a2 81       	ldd	r26, Z+2	; 0x02
    7306:	b3 81       	ldd	r27, Z+3	; 0x03
    7308:	2b 81       	ldd	r18, Y+3	; 0x03
    730a:	3c 81       	ldd	r19, Y+4	; 0x04
    730c:	ac 01       	movw	r20, r24
    730e:	bd 01       	movw	r22, r26
    7310:	c9 01       	movw	r24, r18
    7312:	0e 94 a4 2c 	call	0x5948	; 0x5948 <_ZN10helicopter5model11SystemModel15AltitudeFeetAglEf>
	
	//Convert from meters per sec, to foot per sec.
	
	model->ZVelocityFeetPerSecond(this->ZVelocityMetersPerSecond * 3.28084d); 
    7316:	89 81       	ldd	r24, Y+1	; 0x01
    7318:	9a 81       	ldd	r25, Y+2	; 0x02
    731a:	87 55       	subi	r24, 0x57	; 87
    731c:	9f 4f       	sbci	r25, 0xFF	; 255
    731e:	fc 01       	movw	r30, r24
    7320:	80 81       	ld	r24, Z
    7322:	91 81       	ldd	r25, Z+1	; 0x01
    7324:	a2 81       	ldd	r26, Z+2	; 0x02
    7326:	b3 81       	ldd	r27, Z+3	; 0x03
    7328:	28 e4       	ldi	r18, 0x48	; 72
    732a:	39 ef       	ldi	r19, 0xF9	; 249
    732c:	41 e5       	ldi	r20, 0x51	; 81
    732e:	50 e4       	ldi	r21, 0x40	; 64
    7330:	bc 01       	movw	r22, r24
    7332:	cd 01       	movw	r24, r26
    7334:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    7338:	dc 01       	movw	r26, r24
    733a:	cb 01       	movw	r24, r22
    733c:	2b 81       	ldd	r18, Y+3	; 0x03
    733e:	3c 81       	ldd	r19, Y+4	; 0x04
    7340:	ac 01       	movw	r20, r24
    7342:	bd 01       	movw	r22, r26
    7344:	c9 01       	movw	r24, r18
    7346:	0e 94 c7 2c 	call	0x598e	; 0x598e <_ZN10helicopter5model11SystemModel22ZVelocityFeetPerSecondEf>
	
	model->LatitudeDegrees(this->LatitudeDegrees);
    734a:	89 81       	ldd	r24, Y+1	; 0x01
    734c:	9a 81       	ldd	r25, Y+2	; 0x02
    734e:	8f 52       	subi	r24, 0x2F	; 47
    7350:	9f 4f       	sbci	r25, 0xFF	; 255
    7352:	fc 01       	movw	r30, r24
    7354:	80 81       	ld	r24, Z
    7356:	91 81       	ldd	r25, Z+1	; 0x01
    7358:	a2 81       	ldd	r26, Z+2	; 0x02
    735a:	b3 81       	ldd	r27, Z+3	; 0x03
    735c:	2b 81       	ldd	r18, Y+3	; 0x03
    735e:	3c 81       	ldd	r19, Y+4	; 0x04
    7360:	ac 01       	movw	r20, r24
    7362:	bd 01       	movw	r22, r26
    7364:	c9 01       	movw	r24, r18
    7366:	0e 94 1a 2d 	call	0x5a34	; 0x5a34 <_ZN10helicopter5model11SystemModel15LatitudeDegreesEf>
	model->LongitudeDegrees(this->LongitudeDegrees);
    736a:	89 81       	ldd	r24, Y+1	; 0x01
    736c:	9a 81       	ldd	r25, Y+2	; 0x02
    736e:	8b 52       	subi	r24, 0x2B	; 43
    7370:	9f 4f       	sbci	r25, 0xFF	; 255
    7372:	fc 01       	movw	r30, r24
    7374:	80 81       	ld	r24, Z
    7376:	91 81       	ldd	r25, Z+1	; 0x01
    7378:	a2 81       	ldd	r26, Z+2	; 0x02
    737a:	b3 81       	ldd	r27, Z+3	; 0x03
    737c:	2b 81       	ldd	r18, Y+3	; 0x03
    737e:	3c 81       	ldd	r19, Y+4	; 0x04
    7380:	ac 01       	movw	r20, r24
    7382:	bd 01       	movw	r22, r26
    7384:	c9 01       	movw	r24, r18
    7386:	0e 94 3d 2d 	call	0x5a7a	; 0x5a7a <_ZN10helicopter5model11SystemModel16LongitudeDegreesEf>
    738a:	0f 90       	pop	r0
    738c:	0f 90       	pop	r0
    738e:	0f 90       	pop	r0
    7390:	0f 90       	pop	r0
    7392:	df 91       	pop	r29
    7394:	cf 91       	pop	r28
    7396:	08 95       	ret

00007398 <_ZN10helicopter5tasks4Task8getDelayEv>:
				 * subclasses runTaskImpl to execute the actual task logic.
				 */
				virtual void runTask();
				
					
				int getDelay()
    7398:	cf 93       	push	r28
    739a:	df 93       	push	r29
    739c:	1f 92       	push	r1
    739e:	1f 92       	push	r1
    73a0:	cd b7       	in	r28, 0x3d	; 61
    73a2:	de b7       	in	r29, 0x3e	; 62
    73a4:	9a 83       	std	Y+2, r25	; 0x02
    73a6:	89 83       	std	Y+1, r24	; 0x01
				{
					return delay;
    73a8:	89 81       	ldd	r24, Y+1	; 0x01
    73aa:	9a 81       	ldd	r25, Y+2	; 0x02
    73ac:	fc 01       	movw	r30, r24
    73ae:	82 81       	ldd	r24, Z+2	; 0x02
    73b0:	93 81       	ldd	r25, Z+3	; 0x03
				}
    73b2:	0f 90       	pop	r0
    73b4:	0f 90       	pop	r0
    73b6:	df 91       	pop	r29
    73b8:	cf 91       	pop	r28
    73ba:	08 95       	ret

000073bc <_ZN10helicopter5tasks4Task9getPeriodEv>:
				
				int getPeriod()
    73bc:	cf 93       	push	r28
    73be:	df 93       	push	r29
    73c0:	1f 92       	push	r1
    73c2:	1f 92       	push	r1
    73c4:	cd b7       	in	r28, 0x3d	; 61
    73c6:	de b7       	in	r29, 0x3e	; 62
    73c8:	9a 83       	std	Y+2, r25	; 0x02
    73ca:	89 83       	std	Y+1, r24	; 0x01
				{
					return period;
    73cc:	89 81       	ldd	r24, Y+1	; 0x01
    73ce:	9a 81       	ldd	r25, Y+2	; 0x02
    73d0:	fc 01       	movw	r30, r24
    73d2:	84 81       	ldd	r24, Z+4	; 0x04
    73d4:	95 81       	ldd	r25, Z+5	; 0x05
				}
    73d6:	0f 90       	pop	r0
    73d8:	0f 90       	pop	r0
    73da:	df 91       	pop	r29
    73dc:	cf 91       	pop	r28
    73de:	08 95       	ret

000073e0 <_ZN10helicopter5tasks4Task8setDelayEi>:
				
				void setDelay(int delay)
    73e0:	cf 93       	push	r28
    73e2:	df 93       	push	r29
    73e4:	00 d0       	rcall	.+0      	; 0x73e6 <_ZN10helicopter5tasks4Task8setDelayEi+0x6>
    73e6:	1f 92       	push	r1
    73e8:	cd b7       	in	r28, 0x3d	; 61
    73ea:	de b7       	in	r29, 0x3e	; 62
    73ec:	9a 83       	std	Y+2, r25	; 0x02
    73ee:	89 83       	std	Y+1, r24	; 0x01
    73f0:	7c 83       	std	Y+4, r23	; 0x04
    73f2:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->delay = delay;
    73f4:	89 81       	ldd	r24, Y+1	; 0x01
    73f6:	9a 81       	ldd	r25, Y+2	; 0x02
    73f8:	2b 81       	ldd	r18, Y+3	; 0x03
    73fa:	3c 81       	ldd	r19, Y+4	; 0x04
    73fc:	fc 01       	movw	r30, r24
    73fe:	33 83       	std	Z+3, r19	; 0x03
    7400:	22 83       	std	Z+2, r18	; 0x02
				}
    7402:	0f 90       	pop	r0
    7404:	0f 90       	pop	r0
    7406:	0f 90       	pop	r0
    7408:	0f 90       	pop	r0
    740a:	df 91       	pop	r29
    740c:	cf 91       	pop	r28
    740e:	08 95       	ret

00007410 <_ZN10helicopter5tasks4Task15getIsReadyToRunEv>:
				
				bool getIsReadyToRun()
    7410:	cf 93       	push	r28
    7412:	df 93       	push	r29
    7414:	1f 92       	push	r1
    7416:	1f 92       	push	r1
    7418:	cd b7       	in	r28, 0x3d	; 61
    741a:	de b7       	in	r29, 0x3e	; 62
    741c:	9a 83       	std	Y+2, r25	; 0x02
    741e:	89 83       	std	Y+1, r24	; 0x01
				{
					return isReadyToRun;
    7420:	89 81       	ldd	r24, Y+1	; 0x01
    7422:	9a 81       	ldd	r25, Y+2	; 0x02
    7424:	fc 01       	movw	r30, r24
    7426:	86 81       	ldd	r24, Z+6	; 0x06
				}
    7428:	0f 90       	pop	r0
    742a:	0f 90       	pop	r0
    742c:	df 91       	pop	r29
    742e:	cf 91       	pop	r28
    7430:	08 95       	ret

00007432 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>:
				
				void setIsReadyToRun(bool isReadyToRun)
    7432:	cf 93       	push	r28
    7434:	df 93       	push	r29
    7436:	00 d0       	rcall	.+0      	; 0x7438 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb+0x6>
    7438:	cd b7       	in	r28, 0x3d	; 61
    743a:	de b7       	in	r29, 0x3e	; 62
    743c:	9a 83       	std	Y+2, r25	; 0x02
    743e:	89 83       	std	Y+1, r24	; 0x01
    7440:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->isReadyToRun = isReadyToRun;
    7442:	89 81       	ldd	r24, Y+1	; 0x01
    7444:	9a 81       	ldd	r25, Y+2	; 0x02
    7446:	2b 81       	ldd	r18, Y+3	; 0x03
    7448:	fc 01       	movw	r30, r24
    744a:	26 83       	std	Z+6, r18	; 0x06
				}
    744c:	0f 90       	pop	r0
    744e:	0f 90       	pop	r0
    7450:	0f 90       	pop	r0
    7452:	df 91       	pop	r29
    7454:	cf 91       	pop	r28
    7456:	08 95       	ret

00007458 <_ZN10helicopter5tasks4Task11reduceDelayEv>:
				
				/**
				 * Reduces the delay by one tick.
				 */
				void reduceDelay()
    7458:	cf 93       	push	r28
    745a:	df 93       	push	r29
    745c:	1f 92       	push	r1
    745e:	1f 92       	push	r1
    7460:	cd b7       	in	r28, 0x3d	; 61
    7462:	de b7       	in	r29, 0x3e	; 62
    7464:	9a 83       	std	Y+2, r25	; 0x02
    7466:	89 83       	std	Y+1, r24	; 0x01
				{
					delay--;
    7468:	89 81       	ldd	r24, Y+1	; 0x01
    746a:	9a 81       	ldd	r25, Y+2	; 0x02
    746c:	fc 01       	movw	r30, r24
    746e:	82 81       	ldd	r24, Z+2	; 0x02
    7470:	93 81       	ldd	r25, Z+3	; 0x03
    7472:	9c 01       	movw	r18, r24
    7474:	21 50       	subi	r18, 0x01	; 1
    7476:	31 09       	sbc	r19, r1
    7478:	89 81       	ldd	r24, Y+1	; 0x01
    747a:	9a 81       	ldd	r25, Y+2	; 0x02
    747c:	fc 01       	movw	r30, r24
    747e:	33 83       	std	Z+3, r19	; 0x03
    7480:	22 83       	std	Z+2, r18	; 0x02
				}
    7482:	0f 90       	pop	r0
    7484:	0f 90       	pop	r0
    7486:	df 91       	pop	r29
    7488:	cf 91       	pop	r28
    748a:	08 95       	ret

0000748c <_ZN10helicopter9scheduler9Scheduler13getNumOfTasksEv>:
			    /*
				* Starts the timer for determining which tasks are ready to run.
				*/
				void start();
				
				int getNumOfTasks()
    748c:	cf 93       	push	r28
    748e:	df 93       	push	r29
    7490:	1f 92       	push	r1
    7492:	1f 92       	push	r1
    7494:	cd b7       	in	r28, 0x3d	; 61
    7496:	de b7       	in	r29, 0x3e	; 62
    7498:	9a 83       	std	Y+2, r25	; 0x02
    749a:	89 83       	std	Y+1, r24	; 0x01
				{
					return numOfTasks;
    749c:	89 81       	ldd	r24, Y+1	; 0x01
    749e:	9a 81       	ldd	r25, Y+2	; 0x02
    74a0:	fc 01       	movw	r30, r24
    74a2:	84 89       	ldd	r24, Z+20	; 0x14
    74a4:	95 89       	ldd	r25, Z+21	; 0x15
				}
    74a6:	0f 90       	pop	r0
    74a8:	0f 90       	pop	r0
    74aa:	df 91       	pop	r29
    74ac:	cf 91       	pop	r28
    74ae:	08 95       	ret

000074b0 <_ZN10helicopter9scheduler9Scheduler8getTasksEv>:
				
				Task **getTasks()
    74b0:	cf 93       	push	r28
    74b2:	df 93       	push	r29
    74b4:	1f 92       	push	r1
    74b6:	1f 92       	push	r1
    74b8:	cd b7       	in	r28, 0x3d	; 61
    74ba:	de b7       	in	r29, 0x3e	; 62
    74bc:	9a 83       	std	Y+2, r25	; 0x02
    74be:	89 83       	std	Y+1, r24	; 0x01
				{
					return tasks;
    74c0:	89 81       	ldd	r24, Y+1	; 0x01
    74c2:	9a 81       	ldd	r25, Y+2	; 0x02
				}
    74c4:	0f 90       	pop	r0
    74c6:	0f 90       	pop	r0
    74c8:	df 91       	pop	r29
    74ca:	cf 91       	pop	r28
    74cc:	08 95       	ret

000074ce <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb>:
				/**
				 * Sets whether a blown frame was detected. (I.e. the dispatcher didn't finish before
				 * the scheduler timmer was triggered again)
				 * @param blownFrameDetected true if a frame was blown, false otherwise.
				 */
				void hasBlownFrame(bool blowFrameDetected)
    74ce:	cf 93       	push	r28
    74d0:	df 93       	push	r29
    74d2:	00 d0       	rcall	.+0      	; 0x74d4 <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb+0x6>
    74d4:	cd b7       	in	r28, 0x3d	; 61
    74d6:	de b7       	in	r29, 0x3e	; 62
    74d8:	9a 83       	std	Y+2, r25	; 0x02
    74da:	89 83       	std	Y+1, r24	; 0x01
    74dc:	6b 83       	std	Y+3, r22	; 0x03
				{
					this->blowFrameDetected = blowFrameDetected;
    74de:	89 81       	ldd	r24, Y+1	; 0x01
    74e0:	9a 81       	ldd	r25, Y+2	; 0x02
    74e2:	2b 81       	ldd	r18, Y+3	; 0x03
    74e4:	fc 01       	movw	r30, r24
    74e6:	22 8f       	std	Z+26, r18	; 0x1a
				}
    74e8:	0f 90       	pop	r0
    74ea:	0f 90       	pop	r0
    74ec:	0f 90       	pop	r0
    74ee:	df 91       	pop	r29
    74f0:	cf 91       	pop	r28
    74f2:	08 95       	ret

000074f4 <_ZN10helicopter9scheduler9Scheduler20hasCompletedDispatchEv>:
				/**
				 * Returns a flag indicating that the dispatch method has completed. This is for
				 * use by the scheduler to determine if the dispatcher blew a frame.
				 * @return true if the dispatch method completed, false otherwise. 
				 */
				bool hasCompletedDispatch()
    74f4:	cf 93       	push	r28
    74f6:	df 93       	push	r29
    74f8:	1f 92       	push	r1
    74fa:	1f 92       	push	r1
    74fc:	cd b7       	in	r28, 0x3d	; 61
    74fe:	de b7       	in	r29, 0x3e	; 62
    7500:	9a 83       	std	Y+2, r25	; 0x02
    7502:	89 83       	std	Y+1, r24	; 0x01
				{
					return completedDispatch;
    7504:	89 81       	ldd	r24, Y+1	; 0x01
    7506:	9a 81       	ldd	r25, Y+2	; 0x02
    7508:	fc 01       	movw	r30, r24
    750a:	83 8d       	ldd	r24, Z+27	; 0x1b
				}
    750c:	0f 90       	pop	r0
    750e:	0f 90       	pop	r0
    7510:	df 91       	pop	r29
    7512:	cf 91       	pop	r28
    7514:	08 95       	ret

00007516 <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>:
using namespace helicopter::scheduler;

Scheduler* Scheduler::scheduler = NULL;

Scheduler* Scheduler::getScheduler()
{
    7516:	ef 92       	push	r14
    7518:	ff 92       	push	r15
    751a:	0f 93       	push	r16
    751c:	1f 93       	push	r17
    751e:	cf 93       	push	r28
    7520:	df 93       	push	r29
    7522:	cd b7       	in	r28, 0x3d	; 61
    7524:	de b7       	in	r29, 0x3e	; 62
	if (scheduler == NULL)
    7526:	80 91 9c 02 	lds	r24, 0x029C
    752a:	90 91 9d 02 	lds	r25, 0x029D
    752e:	00 97       	sbiw	r24, 0x00	; 0
    7530:	a1 f4       	brne	.+40     	; 0x755a <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv+0x44>
	{
		scheduler = new Scheduler(F_CPU, PRESCALE_BY_SIXTYFOUR, SCHEDULER_TICK_FREQUENCY_HZ);
    7532:	8c e1       	ldi	r24, 0x1C	; 28
    7534:	90 e0       	ldi	r25, 0x00	; 0
    7536:	0e 94 ee 44 	call	0x89dc	; 0x89dc <_Znwj>
    753a:	7c 01       	movw	r14, r24
    753c:	06 e4       	ldi	r16, 0x46	; 70
    753e:	10 e0       	ldi	r17, 0x00	; 0
    7540:	20 e4       	ldi	r18, 0x40	; 64
    7542:	30 e0       	ldi	r19, 0x00	; 0
    7544:	40 e0       	ldi	r20, 0x00	; 0
    7546:	54 e2       	ldi	r21, 0x24	; 36
    7548:	64 ef       	ldi	r22, 0xF4	; 244
    754a:	70 e0       	ldi	r23, 0x00	; 0
    754c:	c7 01       	movw	r24, r14
    754e:	0e 94 b8 3a 	call	0x7570	; 0x7570 <_ZN10helicopter9scheduler9SchedulerC1Em9PRESCALERi>
    7552:	f0 92 9d 02 	sts	0x029D, r15
    7556:	e0 92 9c 02 	sts	0x029C, r14
	}

	return scheduler;
    755a:	80 91 9c 02 	lds	r24, 0x029C
    755e:	90 91 9d 02 	lds	r25, 0x029D
}
    7562:	df 91       	pop	r29
    7564:	cf 91       	pop	r28
    7566:	1f 91       	pop	r17
    7568:	0f 91       	pop	r16
    756a:	ff 90       	pop	r15
    756c:	ef 90       	pop	r14
    756e:	08 95       	ret

00007570 <_ZN10helicopter9scheduler9SchedulerC1Em9PRESCALERi>:

Scheduler::Scheduler(unsigned long cpuSpeed, PRESCALER prescaler, int schedulerTickFrequencyHz)
    7570:	0f 93       	push	r16
    7572:	1f 93       	push	r17
    7574:	cf 93       	push	r28
    7576:	df 93       	push	r29
    7578:	cd b7       	in	r28, 0x3d	; 61
    757a:	de b7       	in	r29, 0x3e	; 62
    757c:	2a 97       	sbiw	r28, 0x0a	; 10
    757e:	0f b6       	in	r0, 0x3f	; 63
    7580:	f8 94       	cli
    7582:	de bf       	out	0x3e, r29	; 62
    7584:	0f be       	out	0x3f, r0	; 63
    7586:	cd bf       	out	0x3d, r28	; 61
    7588:	9a 83       	std	Y+2, r25	; 0x02
    758a:	89 83       	std	Y+1, r24	; 0x01
    758c:	4b 83       	std	Y+3, r20	; 0x03
    758e:	5c 83       	std	Y+4, r21	; 0x04
    7590:	6d 83       	std	Y+5, r22	; 0x05
    7592:	7e 83       	std	Y+6, r23	; 0x06
    7594:	38 87       	std	Y+8, r19	; 0x08
    7596:	2f 83       	std	Y+7, r18	; 0x07
    7598:	1a 87       	std	Y+10, r17	; 0x0a
    759a:	09 87       	std	Y+9, r16	; 0x09
{
	targetTimerCount =  ((cpuSpeed / prescaler) / schedulerTickFrequencyHz);
    759c:	8f 81       	ldd	r24, Y+7	; 0x07
    759e:	98 85       	ldd	r25, Y+8	; 0x08
    75a0:	9c 01       	movw	r18, r24
    75a2:	44 27       	eor	r20, r20
    75a4:	37 fd       	sbrc	r19, 7
    75a6:	40 95       	com	r20
    75a8:	54 2f       	mov	r21, r20
    75aa:	8b 81       	ldd	r24, Y+3	; 0x03
    75ac:	9c 81       	ldd	r25, Y+4	; 0x04
    75ae:	ad 81       	ldd	r26, Y+5	; 0x05
    75b0:	be 81       	ldd	r27, Y+6	; 0x06
    75b2:	bc 01       	movw	r22, r24
    75b4:	cd 01       	movw	r24, r26
    75b6:	0e 94 63 4f 	call	0x9ec6	; 0x9ec6 <__udivmodsi4>
    75ba:	da 01       	movw	r26, r20
    75bc:	c9 01       	movw	r24, r18
    75be:	29 85       	ldd	r18, Y+9	; 0x09
    75c0:	3a 85       	ldd	r19, Y+10	; 0x0a
    75c2:	44 27       	eor	r20, r20
    75c4:	37 fd       	sbrc	r19, 7
    75c6:	40 95       	com	r20
    75c8:	54 2f       	mov	r21, r20
    75ca:	bc 01       	movw	r22, r24
    75cc:	cd 01       	movw	r24, r26
    75ce:	0e 94 63 4f 	call	0x9ec6	; 0x9ec6 <__udivmodsi4>
    75d2:	da 01       	movw	r26, r20
    75d4:	c9 01       	movw	r24, r18
    75d6:	9c 01       	movw	r18, r24
    75d8:	89 81       	ldd	r24, Y+1	; 0x01
    75da:	9a 81       	ldd	r25, Y+2	; 0x02
    75dc:	fc 01       	movw	r30, r24
    75de:	37 8b       	std	Z+23, r19	; 0x17
    75e0:	26 8b       	std	Z+22, r18	; 0x16
	
	//Calculate the timer value to achieve the desired frequency. 
	this->targetTimerCount = targetTimerCount;
    75e2:	89 81       	ldd	r24, Y+1	; 0x01
    75e4:	9a 81       	ldd	r25, Y+2	; 0x02
    75e6:	fc 01       	movw	r30, r24
    75e8:	26 89       	ldd	r18, Z+22	; 0x16
    75ea:	37 89       	ldd	r19, Z+23	; 0x17
    75ec:	89 81       	ldd	r24, Y+1	; 0x01
    75ee:	9a 81       	ldd	r25, Y+2	; 0x02
    75f0:	fc 01       	movw	r30, r24
    75f2:	37 8b       	std	Z+23, r19	; 0x17
    75f4:	26 8b       	std	Z+22, r18	; 0x16

	this->prescaler = prescaler;
    75f6:	89 81       	ldd	r24, Y+1	; 0x01
    75f8:	9a 81       	ldd	r25, Y+2	; 0x02
    75fa:	2f 81       	ldd	r18, Y+7	; 0x07
    75fc:	38 85       	ldd	r19, Y+8	; 0x08
    75fe:	fc 01       	movw	r30, r24
    7600:	31 8f       	std	Z+25, r19	; 0x19
    7602:	20 8f       	std	Z+24, r18	; 0x18
	
	numOfTasks = 0;
    7604:	89 81       	ldd	r24, Y+1	; 0x01
    7606:	9a 81       	ldd	r25, Y+2	; 0x02
    7608:	fc 01       	movw	r30, r24
    760a:	15 8a       	std	Z+21, r1	; 0x15
    760c:	14 8a       	std	Z+20, r1	; 0x14
	
	blowFrameDetected = false;
    760e:	89 81       	ldd	r24, Y+1	; 0x01
    7610:	9a 81       	ldd	r25, Y+2	; 0x02
    7612:	fc 01       	movw	r30, r24
    7614:	12 8e       	std	Z+26, r1	; 0x1a
	
	completedDispatch = true;
    7616:	89 81       	ldd	r24, Y+1	; 0x01
    7618:	9a 81       	ldd	r25, Y+2	; 0x02
    761a:	21 e0       	ldi	r18, 0x01	; 1
    761c:	fc 01       	movw	r30, r24
    761e:	23 8f       	std	Z+27, r18	; 0x1b
}
    7620:	2a 96       	adiw	r28, 0x0a	; 10
    7622:	0f b6       	in	r0, 0x3f	; 63
    7624:	f8 94       	cli
    7626:	de bf       	out	0x3e, r29	; 62
    7628:	0f be       	out	0x3f, r0	; 63
    762a:	cd bf       	out	0x3d, r28	; 61
    762c:	df 91       	pop	r29
    762e:	cf 91       	pop	r28
    7630:	1f 91       	pop	r17
    7632:	0f 91       	pop	r16
    7634:	08 95       	ret

00007636 <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE>:
	
	numOfTasks = 0;
}

int Scheduler::addTask(Task *task)
{
    7636:	cf 93       	push	r28
    7638:	df 93       	push	r29
    763a:	00 d0       	rcall	.+0      	; 0x763c <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x6>
    763c:	1f 92       	push	r1
    763e:	cd b7       	in	r28, 0x3d	; 61
    7640:	de b7       	in	r29, 0x3e	; 62
    7642:	9a 83       	std	Y+2, r25	; 0x02
    7644:	89 83       	std	Y+1, r24	; 0x01
    7646:	7c 83       	std	Y+4, r23	; 0x04
    7648:	6b 83       	std	Y+3, r22	; 0x03
	if (numOfTasks < MAXNUMOFTASKS)
    764a:	89 81       	ldd	r24, Y+1	; 0x01
    764c:	9a 81       	ldd	r25, Y+2	; 0x02
    764e:	fc 01       	movw	r30, r24
    7650:	84 89       	ldd	r24, Z+20	; 0x14
    7652:	95 89       	ldd	r25, Z+21	; 0x15
    7654:	8a 30       	cpi	r24, 0x0A	; 10
    7656:	91 05       	cpc	r25, r1
    7658:	04 f5       	brge	.+64     	; 0x769a <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x64>
	{
		tasks[numOfTasks] = task;
    765a:	89 81       	ldd	r24, Y+1	; 0x01
    765c:	9a 81       	ldd	r25, Y+2	; 0x02
    765e:	fc 01       	movw	r30, r24
    7660:	84 89       	ldd	r24, Z+20	; 0x14
    7662:	95 89       	ldd	r25, Z+21	; 0x15
    7664:	29 81       	ldd	r18, Y+1	; 0x01
    7666:	3a 81       	ldd	r19, Y+2	; 0x02
    7668:	88 0f       	add	r24, r24
    766a:	99 1f       	adc	r25, r25
    766c:	82 0f       	add	r24, r18
    766e:	93 1f       	adc	r25, r19
    7670:	2b 81       	ldd	r18, Y+3	; 0x03
    7672:	3c 81       	ldd	r19, Y+4	; 0x04
    7674:	fc 01       	movw	r30, r24
    7676:	31 83       	std	Z+1, r19	; 0x01
    7678:	20 83       	st	Z, r18
		numOfTasks++;
    767a:	89 81       	ldd	r24, Y+1	; 0x01
    767c:	9a 81       	ldd	r25, Y+2	; 0x02
    767e:	fc 01       	movw	r30, r24
    7680:	84 89       	ldd	r24, Z+20	; 0x14
    7682:	95 89       	ldd	r25, Z+21	; 0x15
    7684:	9c 01       	movw	r18, r24
    7686:	2f 5f       	subi	r18, 0xFF	; 255
    7688:	3f 4f       	sbci	r19, 0xFF	; 255
    768a:	89 81       	ldd	r24, Y+1	; 0x01
    768c:	9a 81       	ldd	r25, Y+2	; 0x02
    768e:	fc 01       	movw	r30, r24
    7690:	35 8b       	std	Z+21, r19	; 0x15
    7692:	24 8b       	std	Z+20, r18	; 0x14
		
		return 0;
    7694:	80 e0       	ldi	r24, 0x00	; 0
    7696:	90 e0       	ldi	r25, 0x00	; 0
    7698:	02 c0       	rjmp	.+4      	; 0x769e <_ZN10helicopter9scheduler9Scheduler7addTaskEPNS_5tasks4TaskE+0x68>
	}

	return -1;
    769a:	8f ef       	ldi	r24, 0xFF	; 255
    769c:	9f ef       	ldi	r25, 0xFF	; 255
}
    769e:	0f 90       	pop	r0
    76a0:	0f 90       	pop	r0
    76a2:	0f 90       	pop	r0
    76a4:	0f 90       	pop	r0
    76a6:	df 91       	pop	r29
    76a8:	cf 91       	pop	r28
    76aa:	08 95       	ret

000076ac <_ZN10helicopter9scheduler9Scheduler4initEv>:

void Scheduler::init()
{
    76ac:	cf 93       	push	r28
    76ae:	df 93       	push	r29
    76b0:	00 d0       	rcall	.+0      	; 0x76b2 <_ZN10helicopter9scheduler9Scheduler4initEv+0x6>
    76b2:	1f 92       	push	r1
    76b4:	cd b7       	in	r28, 0x3d	; 61
    76b6:	de b7       	in	r29, 0x3e	; 62
    76b8:	9c 83       	std	Y+4, r25	; 0x04
    76ba:	8b 83       	std	Y+3, r24	; 0x03
	for (int i = 0; i < numOfTasks; i++)
    76bc:	1a 82       	std	Y+2, r1	; 0x02
    76be:	19 82       	std	Y+1, r1	; 0x01
    76c0:	24 c0       	rjmp	.+72     	; 0x770a <_ZN10helicopter9scheduler9Scheduler4initEv+0x5e>
	{
		tasks[i]->init();
    76c2:	2b 81       	ldd	r18, Y+3	; 0x03
    76c4:	3c 81       	ldd	r19, Y+4	; 0x04
    76c6:	89 81       	ldd	r24, Y+1	; 0x01
    76c8:	9a 81       	ldd	r25, Y+2	; 0x02
    76ca:	88 0f       	add	r24, r24
    76cc:	99 1f       	adc	r25, r25
    76ce:	82 0f       	add	r24, r18
    76d0:	93 1f       	adc	r25, r19
    76d2:	fc 01       	movw	r30, r24
    76d4:	80 81       	ld	r24, Z
    76d6:	91 81       	ldd	r25, Z+1	; 0x01
    76d8:	fc 01       	movw	r30, r24
    76da:	80 81       	ld	r24, Z
    76dc:	91 81       	ldd	r25, Z+1	; 0x01
    76de:	06 96       	adiw	r24, 0x06	; 6
    76e0:	fc 01       	movw	r30, r24
    76e2:	20 81       	ld	r18, Z
    76e4:	31 81       	ldd	r19, Z+1	; 0x01
    76e6:	4b 81       	ldd	r20, Y+3	; 0x03
    76e8:	5c 81       	ldd	r21, Y+4	; 0x04
    76ea:	89 81       	ldd	r24, Y+1	; 0x01
    76ec:	9a 81       	ldd	r25, Y+2	; 0x02
    76ee:	88 0f       	add	r24, r24
    76f0:	99 1f       	adc	r25, r25
    76f2:	84 0f       	add	r24, r20
    76f4:	95 1f       	adc	r25, r21
    76f6:	fc 01       	movw	r30, r24
    76f8:	80 81       	ld	r24, Z
    76fa:	91 81       	ldd	r25, Z+1	; 0x01
    76fc:	f9 01       	movw	r30, r18
    76fe:	19 95       	eicall
	return -1;
}

void Scheduler::init()
{
	for (int i = 0; i < numOfTasks; i++)
    7700:	89 81       	ldd	r24, Y+1	; 0x01
    7702:	9a 81       	ldd	r25, Y+2	; 0x02
    7704:	01 96       	adiw	r24, 0x01	; 1
    7706:	9a 83       	std	Y+2, r25	; 0x02
    7708:	89 83       	std	Y+1, r24	; 0x01
    770a:	8b 81       	ldd	r24, Y+3	; 0x03
    770c:	9c 81       	ldd	r25, Y+4	; 0x04
    770e:	fc 01       	movw	r30, r24
    7710:	24 89       	ldd	r18, Z+20	; 0x14
    7712:	35 89       	ldd	r19, Z+21	; 0x15
    7714:	41 e0       	ldi	r20, 0x01	; 1
    7716:	89 81       	ldd	r24, Y+1	; 0x01
    7718:	9a 81       	ldd	r25, Y+2	; 0x02
    771a:	82 17       	cp	r24, r18
    771c:	93 07       	cpc	r25, r19
    771e:	0c f0       	brlt	.+2      	; 0x7722 <_ZN10helicopter9scheduler9Scheduler4initEv+0x76>
    7720:	40 e0       	ldi	r20, 0x00	; 0
    7722:	44 23       	and	r20, r20
    7724:	71 f6       	brne	.-100    	; 0x76c2 <_ZN10helicopter9scheduler9Scheduler4initEv+0x16>
	{
		tasks[i]->init();
	}
	
	//setup timer
	OCR1A = targetTimerCount; //Set Clear Timer on Compare (auto reset) (CTC)
    7726:	88 e8       	ldi	r24, 0x88	; 136
    7728:	90 e0       	ldi	r25, 0x00	; 0
    772a:	2b 81       	ldd	r18, Y+3	; 0x03
    772c:	3c 81       	ldd	r19, Y+4	; 0x04
    772e:	f9 01       	movw	r30, r18
    7730:	26 89       	ldd	r18, Z+22	; 0x16
    7732:	37 89       	ldd	r19, Z+23	; 0x17
    7734:	fc 01       	movw	r30, r24
    7736:	31 83       	std	Z+1, r19	; 0x01
    7738:	20 83       	st	Z, r18
		
	TCCR1B |= (1 << WGM12); //Configure timer 1 for ctc mode
    773a:	81 e8       	ldi	r24, 0x81	; 129
    773c:	90 e0       	ldi	r25, 0x00	; 0
    773e:	21 e8       	ldi	r18, 0x81	; 129
    7740:	30 e0       	ldi	r19, 0x00	; 0
    7742:	f9 01       	movw	r30, r18
    7744:	20 81       	ld	r18, Z
    7746:	28 60       	ori	r18, 0x08	; 8
    7748:	fc 01       	movw	r30, r24
    774a:	20 83       	st	Z, r18
		
	TIMSK1 |= (1 << OCIE1A); //enable ctc interrupt
    774c:	8f e6       	ldi	r24, 0x6F	; 111
    774e:	90 e0       	ldi	r25, 0x00	; 0
    7750:	2f e6       	ldi	r18, 0x6F	; 111
    7752:	30 e0       	ldi	r19, 0x00	; 0
    7754:	f9 01       	movw	r30, r18
    7756:	20 81       	ld	r18, Z
    7758:	22 60       	ori	r18, 0x02	; 2
    775a:	fc 01       	movw	r30, r24
    775c:	20 83       	st	Z, r18
		
	sei(); //Enable global interrupts
    775e:	78 94       	sei
}
    7760:	0f 90       	pop	r0
    7762:	0f 90       	pop	r0
    7764:	0f 90       	pop	r0
    7766:	0f 90       	pop	r0
    7768:	df 91       	pop	r29
    776a:	cf 91       	pop	r28
    776c:	08 95       	ret

0000776e <_ZN10helicopter9scheduler9Scheduler8dispatchEv>:

void Scheduler::dispatch()
{
    776e:	cf 93       	push	r28
    7770:	df 93       	push	r29
    7772:	00 d0       	rcall	.+0      	; 0x7774 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x6>
    7774:	00 d0       	rcall	.+0      	; 0x7776 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x8>
    7776:	cd b7       	in	r28, 0x3d	; 61
    7778:	de b7       	in	r29, 0x3e	; 62
    777a:	9e 83       	std	Y+6, r25	; 0x06
    777c:	8d 83       	std	Y+5, r24	; 0x05
	completedDispatch = false;
    777e:	8d 81       	ldd	r24, Y+5	; 0x05
    7780:	9e 81       	ldd	r25, Y+6	; 0x06
    7782:	fc 01       	movw	r30, r24
    7784:	13 8e       	std	Z+27, r1	; 0x1b
	blowFrameDetected = false;
    7786:	8d 81       	ldd	r24, Y+5	; 0x05
    7788:	9e 81       	ldd	r25, Y+6	; 0x06
    778a:	fc 01       	movw	r30, r24
    778c:	12 8e       	std	Z+26, r1	; 0x1a
	
	Task *task = NULL;
    778e:	1c 82       	std	Y+4, r1	; 0x04
    7790:	1b 82       	std	Y+3, r1	; 0x03
		
	for (int i = 0; i < numOfTasks; i++)
    7792:	1a 82       	std	Y+2, r1	; 0x02
    7794:	19 82       	std	Y+1, r1	; 0x01
    7796:	2a c0       	rjmp	.+84     	; 0x77ec <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x7e>
	{
		task = tasks[i];
    7798:	2d 81       	ldd	r18, Y+5	; 0x05
    779a:	3e 81       	ldd	r19, Y+6	; 0x06
    779c:	89 81       	ldd	r24, Y+1	; 0x01
    779e:	9a 81       	ldd	r25, Y+2	; 0x02
    77a0:	88 0f       	add	r24, r24
    77a2:	99 1f       	adc	r25, r25
    77a4:	82 0f       	add	r24, r18
    77a6:	93 1f       	adc	r25, r19
    77a8:	fc 01       	movw	r30, r24
    77aa:	80 81       	ld	r24, Z
    77ac:	91 81       	ldd	r25, Z+1	; 0x01
    77ae:	9c 83       	std	Y+4, r25	; 0x04
    77b0:	8b 83       	std	Y+3, r24	; 0x03
		
		if (task->getIsReadyToRun())
    77b2:	8b 81       	ldd	r24, Y+3	; 0x03
    77b4:	9c 81       	ldd	r25, Y+4	; 0x04
    77b6:	0e 94 08 3a 	call	0x7410	; 0x7410 <_ZN10helicopter5tasks4Task15getIsReadyToRunEv>
    77ba:	88 23       	and	r24, r24
    77bc:	91 f0       	breq	.+36     	; 0x77e2 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x74>
		{
			task->setIsReadyToRun(false);
    77be:	8b 81       	ldd	r24, Y+3	; 0x03
    77c0:	9c 81       	ldd	r25, Y+4	; 0x04
    77c2:	60 e0       	ldi	r22, 0x00	; 0
    77c4:	0e 94 19 3a 	call	0x7432	; 0x7432 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>
			task->runTask();
    77c8:	8b 81       	ldd	r24, Y+3	; 0x03
    77ca:	9c 81       	ldd	r25, Y+4	; 0x04
    77cc:	fc 01       	movw	r30, r24
    77ce:	80 81       	ld	r24, Z
    77d0:	91 81       	ldd	r25, Z+1	; 0x01
    77d2:	08 96       	adiw	r24, 0x08	; 8
    77d4:	fc 01       	movw	r30, r24
    77d6:	20 81       	ld	r18, Z
    77d8:	31 81       	ldd	r19, Z+1	; 0x01
    77da:	8b 81       	ldd	r24, Y+3	; 0x03
    77dc:	9c 81       	ldd	r25, Y+4	; 0x04
    77de:	f9 01       	movw	r30, r18
    77e0:	19 95       	eicall
	completedDispatch = false;
	blowFrameDetected = false;
	
	Task *task = NULL;
		
	for (int i = 0; i < numOfTasks; i++)
    77e2:	89 81       	ldd	r24, Y+1	; 0x01
    77e4:	9a 81       	ldd	r25, Y+2	; 0x02
    77e6:	01 96       	adiw	r24, 0x01	; 1
    77e8:	9a 83       	std	Y+2, r25	; 0x02
    77ea:	89 83       	std	Y+1, r24	; 0x01
    77ec:	8d 81       	ldd	r24, Y+5	; 0x05
    77ee:	9e 81       	ldd	r25, Y+6	; 0x06
    77f0:	fc 01       	movw	r30, r24
    77f2:	24 89       	ldd	r18, Z+20	; 0x14
    77f4:	35 89       	ldd	r19, Z+21	; 0x15
    77f6:	41 e0       	ldi	r20, 0x01	; 1
    77f8:	89 81       	ldd	r24, Y+1	; 0x01
    77fa:	9a 81       	ldd	r25, Y+2	; 0x02
    77fc:	82 17       	cp	r24, r18
    77fe:	93 07       	cpc	r25, r19
    7800:	0c f0       	brlt	.+2      	; 0x7804 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x96>
    7802:	40 e0       	ldi	r20, 0x00	; 0
    7804:	44 23       	and	r20, r20
    7806:	41 f6       	brne	.-112    	; 0x7798 <_ZN10helicopter9scheduler9Scheduler8dispatchEv+0x2a>
	/*if ((TIFR1 & (1<<OCF1A)) != 0)
	{
		model->SystemModel->
	}*/
	
	completedDispatch = true;
    7808:	8d 81       	ldd	r24, Y+5	; 0x05
    780a:	9e 81       	ldd	r25, Y+6	; 0x06
    780c:	21 e0       	ldi	r18, 0x01	; 1
    780e:	fc 01       	movw	r30, r24
    7810:	23 8f       	std	Z+27, r18	; 0x1b
	
	//tells the processor to goto sleep to conserve power since no more
	//tasks are scheduled to be run until after the next scheduler interrupt(tick)
	//which will then wake the processor back up.
	set_sleep_mode(SLEEP_MODE_IDLE);
    7812:	83 e5       	ldi	r24, 0x53	; 83
    7814:	90 e0       	ldi	r25, 0x00	; 0
    7816:	23 e5       	ldi	r18, 0x53	; 83
    7818:	30 e0       	ldi	r19, 0x00	; 0
    781a:	f9 01       	movw	r30, r18
    781c:	20 81       	ld	r18, Z
    781e:	21 7f       	andi	r18, 0xF1	; 241
    7820:	fc 01       	movw	r30, r24
    7822:	20 83       	st	Z, r18
	sleep_mode();
    7824:	83 e5       	ldi	r24, 0x53	; 83
    7826:	90 e0       	ldi	r25, 0x00	; 0
    7828:	23 e5       	ldi	r18, 0x53	; 83
    782a:	30 e0       	ldi	r19, 0x00	; 0
    782c:	f9 01       	movw	r30, r18
    782e:	20 81       	ld	r18, Z
    7830:	21 60       	ori	r18, 0x01	; 1
    7832:	fc 01       	movw	r30, r24
    7834:	20 83       	st	Z, r18
    7836:	88 95       	sleep
    7838:	83 e5       	ldi	r24, 0x53	; 83
    783a:	90 e0       	ldi	r25, 0x00	; 0
    783c:	23 e5       	ldi	r18, 0x53	; 83
    783e:	30 e0       	ldi	r19, 0x00	; 0
    7840:	f9 01       	movw	r30, r18
    7842:	20 81       	ld	r18, Z
    7844:	2e 7f       	andi	r18, 0xFE	; 254
    7846:	fc 01       	movw	r30, r24
    7848:	20 83       	st	Z, r18
}
    784a:	26 96       	adiw	r28, 0x06	; 6
    784c:	0f b6       	in	r0, 0x3f	; 63
    784e:	f8 94       	cli
    7850:	de bf       	out	0x3e, r29	; 62
    7852:	0f be       	out	0x3f, r0	; 63
    7854:	cd bf       	out	0x3d, r28	; 61
    7856:	df 91       	pop	r29
    7858:	cf 91       	pop	r28
    785a:	08 95       	ret

0000785c <_ZN10helicopter9scheduler9Scheduler5startEv>:

void Scheduler::start()
{
    785c:	cf 93       	push	r28
    785e:	df 93       	push	r29
    7860:	1f 92       	push	r1
    7862:	1f 92       	push	r1
    7864:	cd b7       	in	r28, 0x3d	; 61
    7866:	de b7       	in	r29, 0x3e	; 62
    7868:	9a 83       	std	Y+2, r25	; 0x02
    786a:	89 83       	std	Y+1, r24	; 0x01
	//Setting TCCR to a prescaler will start the timer.
	switch(this->prescaler)
    786c:	89 81       	ldd	r24, Y+1	; 0x01
    786e:	9a 81       	ldd	r25, Y+2	; 0x02
    7870:	fc 01       	movw	r30, r24
    7872:	80 8d       	ldd	r24, Z+24	; 0x18
    7874:	91 8d       	ldd	r25, Z+25	; 0x19
    7876:	80 34       	cpi	r24, 0x40	; 64
    7878:	91 05       	cpc	r25, r1
    787a:	39 f1       	breq	.+78     	; 0x78ca <_ZN10helicopter9scheduler9Scheduler5startEv+0x6e>
    787c:	81 34       	cpi	r24, 0x41	; 65
    787e:	91 05       	cpc	r25, r1
    7880:	3c f4       	brge	.+14     	; 0x7890 <_ZN10helicopter9scheduler9Scheduler5startEv+0x34>
    7882:	81 30       	cpi	r24, 0x01	; 1
    7884:	91 05       	cpc	r25, r1
    7886:	69 f0       	breq	.+26     	; 0x78a2 <_ZN10helicopter9scheduler9Scheduler5startEv+0x46>
    7888:	88 30       	cpi	r24, 0x08	; 8
    788a:	91 05       	cpc	r25, r1
    788c:	a1 f0       	breq	.+40     	; 0x78b6 <_ZN10helicopter9scheduler9Scheduler5startEv+0x5a>
    788e:	3b c0       	rjmp	.+118    	; 0x7906 <_ZN10helicopter9scheduler9Scheduler5startEv+0xaa>
    7890:	81 15       	cp	r24, r1
    7892:	f1 e0       	ldi	r31, 0x01	; 1
    7894:	9f 07       	cpc	r25, r31
    7896:	19 f1       	breq	.+70     	; 0x78de <_ZN10helicopter9scheduler9Scheduler5startEv+0x82>
    7898:	81 15       	cp	r24, r1
    789a:	24 e0       	ldi	r18, 0x04	; 4
    789c:	92 07       	cpc	r25, r18
    789e:	49 f1       	breq	.+82     	; 0x78f2 <_ZN10helicopter9scheduler9Scheduler5startEv+0x96>
    78a0:	32 c0       	rjmp	.+100    	; 0x7906 <_ZN10helicopter9scheduler9Scheduler5startEv+0xaa>
	{
		case 1:
			TCCR1B |= NoPrescaling;
    78a2:	81 e8       	ldi	r24, 0x81	; 129
    78a4:	90 e0       	ldi	r25, 0x00	; 0
    78a6:	21 e8       	ldi	r18, 0x81	; 129
    78a8:	30 e0       	ldi	r19, 0x00	; 0
    78aa:	f9 01       	movw	r30, r18
    78ac:	20 81       	ld	r18, Z
    78ae:	21 60       	ori	r18, 0x01	; 1
    78b0:	fc 01       	movw	r30, r24
    78b2:	20 83       	st	Z, r18
			break;
    78b4:	31 c0       	rjmp	.+98     	; 0x7918 <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 8:
			TCCR1B |= PrescaleByEight;
    78b6:	81 e8       	ldi	r24, 0x81	; 129
    78b8:	90 e0       	ldi	r25, 0x00	; 0
    78ba:	21 e8       	ldi	r18, 0x81	; 129
    78bc:	30 e0       	ldi	r19, 0x00	; 0
    78be:	f9 01       	movw	r30, r18
    78c0:	20 81       	ld	r18, Z
    78c2:	22 60       	ori	r18, 0x02	; 2
    78c4:	fc 01       	movw	r30, r24
    78c6:	20 83       	st	Z, r18
			break;
    78c8:	27 c0       	rjmp	.+78     	; 0x7918 <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 64:
			TCCR1B |= PrescaleBySixtyFour;
    78ca:	81 e8       	ldi	r24, 0x81	; 129
    78cc:	90 e0       	ldi	r25, 0x00	; 0
    78ce:	21 e8       	ldi	r18, 0x81	; 129
    78d0:	30 e0       	ldi	r19, 0x00	; 0
    78d2:	f9 01       	movw	r30, r18
    78d4:	20 81       	ld	r18, Z
    78d6:	23 60       	ori	r18, 0x03	; 3
    78d8:	fc 01       	movw	r30, r24
    78da:	20 83       	st	Z, r18
			break;
    78dc:	1d c0       	rjmp	.+58     	; 0x7918 <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 256:
			TCCR1B |= PrescaleByTwofiftysix;
    78de:	81 e8       	ldi	r24, 0x81	; 129
    78e0:	90 e0       	ldi	r25, 0x00	; 0
    78e2:	21 e8       	ldi	r18, 0x81	; 129
    78e4:	30 e0       	ldi	r19, 0x00	; 0
    78e6:	f9 01       	movw	r30, r18
    78e8:	20 81       	ld	r18, Z
    78ea:	24 60       	ori	r18, 0x04	; 4
    78ec:	fc 01       	movw	r30, r24
    78ee:	20 83       	st	Z, r18
			break;
    78f0:	13 c0       	rjmp	.+38     	; 0x7918 <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		case 1024:
			TCCR1B |= PrescaleByTentwentyfour;
    78f2:	81 e8       	ldi	r24, 0x81	; 129
    78f4:	90 e0       	ldi	r25, 0x00	; 0
    78f6:	21 e8       	ldi	r18, 0x81	; 129
    78f8:	30 e0       	ldi	r19, 0x00	; 0
    78fa:	f9 01       	movw	r30, r18
    78fc:	20 81       	ld	r18, Z
    78fe:	25 60       	ori	r18, 0x05	; 5
    7900:	fc 01       	movw	r30, r24
    7902:	20 83       	st	Z, r18
			break;
    7904:	09 c0       	rjmp	.+18     	; 0x7918 <_ZN10helicopter9scheduler9Scheduler5startEv+0xbc>
		default:
			TCCR1B |= NoPrescaling;	
    7906:	81 e8       	ldi	r24, 0x81	; 129
    7908:	90 e0       	ldi	r25, 0x00	; 0
    790a:	21 e8       	ldi	r18, 0x81	; 129
    790c:	30 e0       	ldi	r19, 0x00	; 0
    790e:	f9 01       	movw	r30, r18
    7910:	20 81       	ld	r18, Z
    7912:	21 60       	ori	r18, 0x01	; 1
    7914:	fc 01       	movw	r30, r24
    7916:	20 83       	st	Z, r18
	}
}
    7918:	0f 90       	pop	r0
    791a:	0f 90       	pop	r0
    791c:	df 91       	pop	r29
    791e:	cf 91       	pop	r28
    7920:	08 95       	ret

00007922 <__vector_17>:

/**
 * Interrupt service routine for determining when tasks are ready to execute.
 */
ISR(TIMER1_COMPA_vect)
{
    7922:	1f 92       	push	r1
    7924:	0f 92       	push	r0
    7926:	00 90 5f 00 	lds	r0, 0x005F
    792a:	0f 92       	push	r0
    792c:	11 24       	eor	r1, r1
    792e:	00 90 5b 00 	lds	r0, 0x005B
    7932:	0f 92       	push	r0
    7934:	2f 93       	push	r18
    7936:	3f 93       	push	r19
    7938:	4f 93       	push	r20
    793a:	5f 93       	push	r21
    793c:	6f 93       	push	r22
    793e:	7f 93       	push	r23
    7940:	8f 93       	push	r24
    7942:	9f 93       	push	r25
    7944:	af 93       	push	r26
    7946:	bf 93       	push	r27
    7948:	ef 93       	push	r30
    794a:	ff 93       	push	r31
    794c:	cf 93       	push	r28
    794e:	df 93       	push	r29
    7950:	00 d0       	rcall	.+0      	; 0x7952 <__vector_17+0x30>
    7952:	00 d0       	rcall	.+0      	; 0x7954 <__vector_17+0x32>
    7954:	cd b7       	in	r28, 0x3d	; 61
    7956:	de b7       	in	r29, 0x3e	; 62
	//TODO do we want to stop interrupts in this method?
	Scheduler *scheduler = Scheduler::getScheduler();
    7958:	0e 94 8b 3a 	call	0x7516	; 0x7516 <_ZN10helicopter9scheduler9Scheduler12getSchedulerEv>
    795c:	9c 83       	std	Y+4, r25	; 0x04
    795e:	8b 83       	std	Y+3, r24	; 0x03
	
	//Detect if the scheduler blew a frame
	if (!scheduler->hasCompletedDispatch())
    7960:	8b 81       	ldd	r24, Y+3	; 0x03
    7962:	9c 81       	ldd	r25, Y+4	; 0x04
    7964:	0e 94 7a 3a 	call	0x74f4	; 0x74f4 <_ZN10helicopter9scheduler9Scheduler20hasCompletedDispatchEv>
    7968:	98 2f       	mov	r25, r24
    796a:	81 e0       	ldi	r24, 0x01	; 1
    796c:	89 27       	eor	r24, r25
    796e:	88 23       	and	r24, r24
    7970:	29 f0       	breq	.+10     	; 0x797c <__vector_17+0x5a>
	{
		scheduler->hasBlownFrame(true);
    7972:	8b 81       	ldd	r24, Y+3	; 0x03
    7974:	9c 81       	ldd	r25, Y+4	; 0x04
    7976:	61 e0       	ldi	r22, 0x01	; 1
    7978:	0e 94 67 3a 	call	0x74ce	; 0x74ce <_ZN10helicopter9scheduler9Scheduler13hasBlownFrameEb>
	}
	
	Task *task = NULL;
    797c:	1e 82       	std	Y+6, r1	; 0x06
    797e:	1d 82       	std	Y+5, r1	; 0x05
	
	//iterate through all the tasks and decrement how many
	//'ticks' are left before the task is ready to execute.
	for (int i = 0; i < scheduler->getNumOfTasks(); i++)
    7980:	1a 82       	std	Y+2, r1	; 0x02
    7982:	19 82       	std	Y+1, r1	; 0x01
    7984:	33 c0       	rjmp	.+102    	; 0x79ec <__vector_17+0xca>
	{
		task = scheduler->getTasks()[i];
    7986:	8b 81       	ldd	r24, Y+3	; 0x03
    7988:	9c 81       	ldd	r25, Y+4	; 0x04
    798a:	0e 94 58 3a 	call	0x74b0	; 0x74b0 <_ZN10helicopter9scheduler9Scheduler8getTasksEv>
    798e:	9c 01       	movw	r18, r24
    7990:	89 81       	ldd	r24, Y+1	; 0x01
    7992:	9a 81       	ldd	r25, Y+2	; 0x02
    7994:	88 0f       	add	r24, r24
    7996:	99 1f       	adc	r25, r25
    7998:	82 0f       	add	r24, r18
    799a:	93 1f       	adc	r25, r19
    799c:	fc 01       	movw	r30, r24
    799e:	80 81       	ld	r24, Z
    79a0:	91 81       	ldd	r25, Z+1	; 0x01
    79a2:	9e 83       	std	Y+6, r25	; 0x06
    79a4:	8d 83       	std	Y+5, r24	; 0x05
		
		if (task->getDelay() == 0)
    79a6:	8d 81       	ldd	r24, Y+5	; 0x05
    79a8:	9e 81       	ldd	r25, Y+6	; 0x06
    79aa:	0e 94 cc 39 	call	0x7398	; 0x7398 <_ZN10helicopter5tasks4Task8getDelayEv>
    79ae:	21 e0       	ldi	r18, 0x01	; 1
    79b0:	00 97       	sbiw	r24, 0x00	; 0
    79b2:	09 f0       	breq	.+2      	; 0x79b6 <__vector_17+0x94>
    79b4:	20 e0       	ldi	r18, 0x00	; 0
    79b6:	22 23       	and	r18, r18
    79b8:	81 f0       	breq	.+32     	; 0x79da <__vector_17+0xb8>
		{
			//Mark the task as ready to run
			task->setIsReadyToRun(true);
    79ba:	8d 81       	ldd	r24, Y+5	; 0x05
    79bc:	9e 81       	ldd	r25, Y+6	; 0x06
    79be:	61 e0       	ldi	r22, 0x01	; 1
    79c0:	0e 94 19 3a 	call	0x7432	; 0x7432 <_ZN10helicopter5tasks4Task15setIsReadyToRunEb>
			task->setDelay(task->getPeriod());
    79c4:	8d 81       	ldd	r24, Y+5	; 0x05
    79c6:	9e 81       	ldd	r25, Y+6	; 0x06
    79c8:	0e 94 de 39 	call	0x73bc	; 0x73bc <_ZN10helicopter5tasks4Task9getPeriodEv>
    79cc:	9c 01       	movw	r18, r24
    79ce:	8d 81       	ldd	r24, Y+5	; 0x05
    79d0:	9e 81       	ldd	r25, Y+6	; 0x06
    79d2:	b9 01       	movw	r22, r18
    79d4:	0e 94 f0 39 	call	0x73e0	; 0x73e0 <_ZN10helicopter5tasks4Task8setDelayEi>
    79d8:	04 c0       	rjmp	.+8      	; 0x79e2 <__vector_17+0xc0>
		}else
		{
			task->reduceDelay();
    79da:	8d 81       	ldd	r24, Y+5	; 0x05
    79dc:	9e 81       	ldd	r25, Y+6	; 0x06
    79de:	0e 94 2c 3a 	call	0x7458	; 0x7458 <_ZN10helicopter5tasks4Task11reduceDelayEv>
	
	Task *task = NULL;
	
	//iterate through all the tasks and decrement how many
	//'ticks' are left before the task is ready to execute.
	for (int i = 0; i < scheduler->getNumOfTasks(); i++)
    79e2:	89 81       	ldd	r24, Y+1	; 0x01
    79e4:	9a 81       	ldd	r25, Y+2	; 0x02
    79e6:	01 96       	adiw	r24, 0x01	; 1
    79e8:	9a 83       	std	Y+2, r25	; 0x02
    79ea:	89 83       	std	Y+1, r24	; 0x01
    79ec:	8b 81       	ldd	r24, Y+3	; 0x03
    79ee:	9c 81       	ldd	r25, Y+4	; 0x04
    79f0:	0e 94 46 3a 	call	0x748c	; 0x748c <_ZN10helicopter9scheduler9Scheduler13getNumOfTasksEv>
    79f4:	9c 01       	movw	r18, r24
    79f6:	41 e0       	ldi	r20, 0x01	; 1
    79f8:	89 81       	ldd	r24, Y+1	; 0x01
    79fa:	9a 81       	ldd	r25, Y+2	; 0x02
    79fc:	82 17       	cp	r24, r18
    79fe:	93 07       	cpc	r25, r19
    7a00:	0c f0       	brlt	.+2      	; 0x7a04 <__vector_17+0xe2>
    7a02:	40 e0       	ldi	r20, 0x00	; 0
    7a04:	44 23       	and	r20, r20
    7a06:	09 f0       	breq	.+2      	; 0x7a0a <__vector_17+0xe8>
    7a08:	be cf       	rjmp	.-132    	; 0x7986 <__vector_17+0x64>
		}else
		{
			task->reduceDelay();
		}
	}
}
    7a0a:	26 96       	adiw	r28, 0x06	; 6
    7a0c:	0f b6       	in	r0, 0x3f	; 63
    7a0e:	f8 94       	cli
    7a10:	de bf       	out	0x3e, r29	; 62
    7a12:	0f be       	out	0x3f, r0	; 63
    7a14:	cd bf       	out	0x3d, r28	; 61
    7a16:	df 91       	pop	r29
    7a18:	cf 91       	pop	r28
    7a1a:	ff 91       	pop	r31
    7a1c:	ef 91       	pop	r30
    7a1e:	bf 91       	pop	r27
    7a20:	af 91       	pop	r26
    7a22:	9f 91       	pop	r25
    7a24:	8f 91       	pop	r24
    7a26:	7f 91       	pop	r23
    7a28:	6f 91       	pop	r22
    7a2a:	5f 91       	pop	r21
    7a2c:	4f 91       	pop	r20
    7a2e:	3f 91       	pop	r19
    7a30:	2f 91       	pop	r18
    7a32:	0f 90       	pop	r0
    7a34:	00 92 5b 00 	sts	0x005B, r0
    7a38:	0f 90       	pop	r0
    7a3a:	00 92 5f 00 	sts	0x005F, r0
    7a3e:	0f 90       	pop	r0
    7a40:	1f 90       	pop	r1
    7a42:	18 95       	reti

00007a44 <_ZN10helicopter5tasks4Task4initEv>:
				virtual ~Task(){}
				
				/**
				 * Function to initialize the task before execution.
				 */
				virtual void init(){;}
    7a44:	cf 93       	push	r28
    7a46:	df 93       	push	r29
    7a48:	1f 92       	push	r1
    7a4a:	1f 92       	push	r1
    7a4c:	cd b7       	in	r28, 0x3d	; 61
    7a4e:	de b7       	in	r29, 0x3e	; 62
    7a50:	9a 83       	std	Y+2, r25	; 0x02
    7a52:	89 83       	std	Y+1, r24	; 0x01
    7a54:	0f 90       	pop	r0
    7a56:	0f 90       	pop	r0
    7a58:	df 91       	pop	r29
    7a5a:	cf 91       	pop	r28
    7a5c:	08 95       	ret

00007a5e <_ZN10helicopter5tasks16PIDInnerLoopTaskC1EPNS_10controller13PIDControllerEii>:
 */ 
#include "PIDInnerLoopTask.h"

using namespace helicopter::tasks;

PIDInnerLoopTask::PIDInnerLoopTask (PIDController *pidController, int delay, int period) :
    7a5e:	cf 93       	push	r28
    7a60:	df 93       	push	r29
    7a62:	cd b7       	in	r28, 0x3d	; 61
    7a64:	de b7       	in	r29, 0x3e	; 62
    7a66:	28 97       	sbiw	r28, 0x08	; 8
    7a68:	0f b6       	in	r0, 0x3f	; 63
    7a6a:	f8 94       	cli
    7a6c:	de bf       	out	0x3e, r29	; 62
    7a6e:	0f be       	out	0x3f, r0	; 63
    7a70:	cd bf       	out	0x3d, r28	; 61
    7a72:	9a 83       	std	Y+2, r25	; 0x02
    7a74:	89 83       	std	Y+1, r24	; 0x01
    7a76:	7c 83       	std	Y+4, r23	; 0x04
    7a78:	6b 83       	std	Y+3, r22	; 0x03
    7a7a:	5e 83       	std	Y+6, r21	; 0x06
    7a7c:	4d 83       	std	Y+5, r20	; 0x05
    7a7e:	38 87       	std	Y+8, r19	; 0x08
    7a80:	2f 83       	std	Y+7, r18	; 0x07
Task(delay, period),
pidController(pidController)
    7a82:	89 81       	ldd	r24, Y+1	; 0x01
    7a84:	9a 81       	ldd	r25, Y+2	; 0x02
    7a86:	4f 81       	ldd	r20, Y+7	; 0x07
    7a88:	58 85       	ldd	r21, Y+8	; 0x08
    7a8a:	2d 81       	ldd	r18, Y+5	; 0x05
    7a8c:	3e 81       	ldd	r19, Y+6	; 0x06
    7a8e:	b9 01       	movw	r22, r18
    7a90:	0e 94 fc 43 	call	0x87f8	; 0x87f8 <_ZN10helicopter5tasks4TaskC1Eii>
    7a94:	89 81       	ldd	r24, Y+1	; 0x01
    7a96:	9a 81       	ldd	r25, Y+2	; 0x02
    7a98:	2a e4       	ldi	r18, 0x4A	; 74
    7a9a:	32 e0       	ldi	r19, 0x02	; 2
    7a9c:	fc 01       	movw	r30, r24
    7a9e:	31 83       	std	Z+1, r19	; 0x01
    7aa0:	20 83       	st	Z, r18
    7aa2:	89 81       	ldd	r24, Y+1	; 0x01
    7aa4:	9a 81       	ldd	r25, Y+2	; 0x02
    7aa6:	2b 81       	ldd	r18, Y+3	; 0x03
    7aa8:	3c 81       	ldd	r19, Y+4	; 0x04
    7aaa:	fc 01       	movw	r30, r24
    7aac:	30 87       	std	Z+8, r19	; 0x08
    7aae:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    7ab0:	28 96       	adiw	r28, 0x08	; 8
    7ab2:	0f b6       	in	r0, 0x3f	; 63
    7ab4:	f8 94       	cli
    7ab6:	de bf       	out	0x3e, r29	; 62
    7ab8:	0f be       	out	0x3f, r0	; 63
    7aba:	cd bf       	out	0x3d, r28	; 61
    7abc:	df 91       	pop	r29
    7abe:	cf 91       	pop	r28
    7ac0:	08 95       	ret

00007ac2 <_ZN10helicopter5tasks16PIDInnerLoopTask11runTaskImplEv>:

void PIDInnerLoopTask::runTaskImpl()
{
    7ac2:	cf 93       	push	r28
    7ac4:	df 93       	push	r29
    7ac6:	1f 92       	push	r1
    7ac8:	1f 92       	push	r1
    7aca:	cd b7       	in	r28, 0x3d	; 61
    7acc:	de b7       	in	r29, 0x3e	; 62
    7ace:	9a 83       	std	Y+2, r25	; 0x02
    7ad0:	89 83       	std	Y+1, r24	; 0x01
	pidController->cyclicLateralInnerLoopUpdate();
    7ad2:	89 81       	ldd	r24, Y+1	; 0x01
    7ad4:	9a 81       	ldd	r25, Y+2	; 0x02
    7ad6:	fc 01       	movw	r30, r24
    7ad8:	87 81       	ldd	r24, Z+7	; 0x07
    7ada:	90 85       	ldd	r25, Z+8	; 0x08
    7adc:	0e 94 b5 12 	call	0x256a	; 0x256a <_ZN10helicopter10controller13PIDController28cyclicLateralInnerLoopUpdateEv>
	pidController->cyclicLongitudeInnerLoopUpdate();
    7ae0:	89 81       	ldd	r24, Y+1	; 0x01
    7ae2:	9a 81       	ldd	r25, Y+2	; 0x02
    7ae4:	fc 01       	movw	r30, r24
    7ae6:	87 81       	ldd	r24, Z+7	; 0x07
    7ae8:	90 85       	ldd	r25, Z+8	; 0x08
    7aea:	0e 94 e5 11 	call	0x23ca	; 0x23ca <_ZN10helicopter10controller13PIDController30cyclicLongitudeInnerLoopUpdateEv>
}
    7aee:	0f 90       	pop	r0
    7af0:	0f 90       	pop	r0
    7af2:	df 91       	pop	r29
    7af4:	cf 91       	pop	r28
    7af6:	08 95       	ret

00007af8 <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class executes the outer loop of the PID controller
		 */
		class PIDInnerLoopTask : public Task
    7af8:	cf 93       	push	r28
    7afa:	df 93       	push	r29
    7afc:	1f 92       	push	r1
    7afe:	1f 92       	push	r1
    7b00:	cd b7       	in	r28, 0x3d	; 61
    7b02:	de b7       	in	r29, 0x3e	; 62
    7b04:	9a 83       	std	Y+2, r25	; 0x02
    7b06:	89 83       	std	Y+1, r24	; 0x01
    7b08:	89 81       	ldd	r24, Y+1	; 0x01
    7b0a:	9a 81       	ldd	r25, Y+2	; 0x02
    7b0c:	2a e4       	ldi	r18, 0x4A	; 74
    7b0e:	32 e0       	ldi	r19, 0x02	; 2
    7b10:	fc 01       	movw	r30, r24
    7b12:	31 83       	std	Z+1, r19	; 0x01
    7b14:	20 83       	st	Z, r18
    7b16:	89 81       	ldd	r24, Y+1	; 0x01
    7b18:	9a 81       	ldd	r25, Y+2	; 0x02
    7b1a:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <_ZN10helicopter5tasks4TaskD1Ev>
    7b1e:	80 e0       	ldi	r24, 0x00	; 0
    7b20:	90 e0       	ldi	r25, 0x00	; 0
    7b22:	81 70       	andi	r24, 0x01	; 1
    7b24:	99 27       	eor	r25, r25
    7b26:	00 97       	sbiw	r24, 0x00	; 0
    7b28:	21 f0       	breq	.+8      	; 0x7b32 <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev+0x3a>
    7b2a:	89 81       	ldd	r24, Y+1	; 0x01
    7b2c:	9a 81       	ldd	r25, Y+2	; 0x02
    7b2e:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    7b32:	0f 90       	pop	r0
    7b34:	0f 90       	pop	r0
    7b36:	df 91       	pop	r29
    7b38:	cf 91       	pop	r28
    7b3a:	08 95       	ret

00007b3c <_ZN10helicopter5tasks16PIDInnerLoopTaskD0Ev>:
    7b3c:	cf 93       	push	r28
    7b3e:	df 93       	push	r29
    7b40:	1f 92       	push	r1
    7b42:	1f 92       	push	r1
    7b44:	cd b7       	in	r28, 0x3d	; 61
    7b46:	de b7       	in	r29, 0x3e	; 62
    7b48:	9a 83       	std	Y+2, r25	; 0x02
    7b4a:	89 83       	std	Y+1, r24	; 0x01
    7b4c:	89 81       	ldd	r24, Y+1	; 0x01
    7b4e:	9a 81       	ldd	r25, Y+2	; 0x02
    7b50:	0e 94 7c 3d 	call	0x7af8	; 0x7af8 <_ZN10helicopter5tasks16PIDInnerLoopTaskD1Ev>
    7b54:	89 81       	ldd	r24, Y+1	; 0x01
    7b56:	9a 81       	ldd	r25, Y+2	; 0x02
    7b58:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    7b5c:	0f 90       	pop	r0
    7b5e:	0f 90       	pop	r0
    7b60:	df 91       	pop	r29
    7b62:	cf 91       	pop	r28
    7b64:	08 95       	ret

00007b66 <_ZN10helicopter5tasks16PIDOuterLoopTaskC1EPNS_10controller13PIDControllerEii>:
 */ 
#include "PIDOuterLoopTask.h"

using namespace helicopter::tasks;

PIDOuterLoopTask::PIDOuterLoopTask (PIDController *pidController, int delay, int period) :
    7b66:	cf 93       	push	r28
    7b68:	df 93       	push	r29
    7b6a:	cd b7       	in	r28, 0x3d	; 61
    7b6c:	de b7       	in	r29, 0x3e	; 62
    7b6e:	28 97       	sbiw	r28, 0x08	; 8
    7b70:	0f b6       	in	r0, 0x3f	; 63
    7b72:	f8 94       	cli
    7b74:	de bf       	out	0x3e, r29	; 62
    7b76:	0f be       	out	0x3f, r0	; 63
    7b78:	cd bf       	out	0x3d, r28	; 61
    7b7a:	9a 83       	std	Y+2, r25	; 0x02
    7b7c:	89 83       	std	Y+1, r24	; 0x01
    7b7e:	7c 83       	std	Y+4, r23	; 0x04
    7b80:	6b 83       	std	Y+3, r22	; 0x03
    7b82:	5e 83       	std	Y+6, r21	; 0x06
    7b84:	4d 83       	std	Y+5, r20	; 0x05
    7b86:	38 87       	std	Y+8, r19	; 0x08
    7b88:	2f 83       	std	Y+7, r18	; 0x07
Task(delay, period),
pidController(pidController)
    7b8a:	89 81       	ldd	r24, Y+1	; 0x01
    7b8c:	9a 81       	ldd	r25, Y+2	; 0x02
    7b8e:	4f 81       	ldd	r20, Y+7	; 0x07
    7b90:	58 85       	ldd	r21, Y+8	; 0x08
    7b92:	2d 81       	ldd	r18, Y+5	; 0x05
    7b94:	3e 81       	ldd	r19, Y+6	; 0x06
    7b96:	b9 01       	movw	r22, r18
    7b98:	0e 94 fc 43 	call	0x87f8	; 0x87f8 <_ZN10helicopter5tasks4TaskC1Eii>
    7b9c:	89 81       	ldd	r24, Y+1	; 0x01
    7b9e:	9a 81       	ldd	r25, Y+2	; 0x02
    7ba0:	28 e5       	ldi	r18, 0x58	; 88
    7ba2:	32 e0       	ldi	r19, 0x02	; 2
    7ba4:	fc 01       	movw	r30, r24
    7ba6:	31 83       	std	Z+1, r19	; 0x01
    7ba8:	20 83       	st	Z, r18
    7baa:	89 81       	ldd	r24, Y+1	; 0x01
    7bac:	9a 81       	ldd	r25, Y+2	; 0x02
    7bae:	2b 81       	ldd	r18, Y+3	; 0x03
    7bb0:	3c 81       	ldd	r19, Y+4	; 0x04
    7bb2:	fc 01       	movw	r30, r24
    7bb4:	30 87       	std	Z+8, r19	; 0x08
    7bb6:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    7bb8:	28 96       	adiw	r28, 0x08	; 8
    7bba:	0f b6       	in	r0, 0x3f	; 63
    7bbc:	f8 94       	cli
    7bbe:	de bf       	out	0x3e, r29	; 62
    7bc0:	0f be       	out	0x3f, r0	; 63
    7bc2:	cd bf       	out	0x3d, r28	; 61
    7bc4:	df 91       	pop	r29
    7bc6:	cf 91       	pop	r28
    7bc8:	08 95       	ret

00007bca <_ZN10helicopter5tasks16PIDOuterLoopTask11runTaskImplEv>:

void PIDOuterLoopTask::runTaskImpl()
{
    7bca:	cf 93       	push	r28
    7bcc:	df 93       	push	r29
    7bce:	1f 92       	push	r1
    7bd0:	1f 92       	push	r1
    7bd2:	cd b7       	in	r28, 0x3d	; 61
    7bd4:	de b7       	in	r29, 0x3e	; 62
    7bd6:	9a 83       	std	Y+2, r25	; 0x02
    7bd8:	89 83       	std	Y+1, r24	; 0x01
	pidController->mainRotorCollectiveOuterLoopUpdate();
    7bda:	89 81       	ldd	r24, Y+1	; 0x01
    7bdc:	9a 81       	ldd	r25, Y+2	; 0x02
    7bde:	fc 01       	movw	r30, r24
    7be0:	87 81       	ldd	r24, Z+7	; 0x07
    7be2:	90 85       	ldd	r25, Z+8	; 0x08
    7be4:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <_ZN10helicopter10controller13PIDController34mainRotorCollectiveOuterLoopUpdateEv>
	pidController->tailRotorCollectiveOuterLoopUpdate();
    7be8:	89 81       	ldd	r24, Y+1	; 0x01
    7bea:	9a 81       	ldd	r25, Y+2	; 0x02
    7bec:	fc 01       	movw	r30, r24
    7bee:	87 81       	ldd	r24, Z+7	; 0x07
    7bf0:	90 85       	ldd	r25, Z+8	; 0x08
    7bf2:	0e 94 1e 0c 	call	0x183c	; 0x183c <_ZN10helicopter10controller13PIDController34tailRotorCollectiveOuterLoopUpdateEv>
	pidController->cyclicLongitudeOuterLoopUpdate();
    7bf6:	89 81       	ldd	r24, Y+1	; 0x01
    7bf8:	9a 81       	ldd	r25, Y+2	; 0x02
    7bfa:	fc 01       	movw	r30, r24
    7bfc:	87 81       	ldd	r24, Z+7	; 0x07
    7bfe:	90 85       	ldd	r25, Z+8	; 0x08
    7c00:	0e 94 1b 0f 	call	0x1e36	; 0x1e36 <_ZN10helicopter10controller13PIDController30cyclicLongitudeOuterLoopUpdateEv>
	pidController->cyclicLateralOuterLoopUpdate();
    7c04:	89 81       	ldd	r24, Y+1	; 0x01
    7c06:	9a 81       	ldd	r25, Y+2	; 0x02
    7c08:	fc 01       	movw	r30, r24
    7c0a:	87 81       	ldd	r24, Z+7	; 0x07
    7c0c:	90 85       	ldd	r25, Z+8	; 0x08
    7c0e:	0e 94 7f 10 	call	0x20fe	; 0x20fe <_ZN10helicopter10controller13PIDController28cyclicLateralOuterLoopUpdateEv>
}
    7c12:	0f 90       	pop	r0
    7c14:	0f 90       	pop	r0
    7c16:	df 91       	pop	r29
    7c18:	cf 91       	pop	r28
    7c1a:	08 95       	ret

00007c1c <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class executes the outer loop of the PID controller
		 */
		class PIDOuterLoopTask : public Task
    7c1c:	cf 93       	push	r28
    7c1e:	df 93       	push	r29
    7c20:	1f 92       	push	r1
    7c22:	1f 92       	push	r1
    7c24:	cd b7       	in	r28, 0x3d	; 61
    7c26:	de b7       	in	r29, 0x3e	; 62
    7c28:	9a 83       	std	Y+2, r25	; 0x02
    7c2a:	89 83       	std	Y+1, r24	; 0x01
    7c2c:	89 81       	ldd	r24, Y+1	; 0x01
    7c2e:	9a 81       	ldd	r25, Y+2	; 0x02
    7c30:	28 e5       	ldi	r18, 0x58	; 88
    7c32:	32 e0       	ldi	r19, 0x02	; 2
    7c34:	fc 01       	movw	r30, r24
    7c36:	31 83       	std	Z+1, r19	; 0x01
    7c38:	20 83       	st	Z, r18
    7c3a:	89 81       	ldd	r24, Y+1	; 0x01
    7c3c:	9a 81       	ldd	r25, Y+2	; 0x02
    7c3e:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <_ZN10helicopter5tasks4TaskD1Ev>
    7c42:	80 e0       	ldi	r24, 0x00	; 0
    7c44:	90 e0       	ldi	r25, 0x00	; 0
    7c46:	81 70       	andi	r24, 0x01	; 1
    7c48:	99 27       	eor	r25, r25
    7c4a:	00 97       	sbiw	r24, 0x00	; 0
    7c4c:	21 f0       	breq	.+8      	; 0x7c56 <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev+0x3a>
    7c4e:	89 81       	ldd	r24, Y+1	; 0x01
    7c50:	9a 81       	ldd	r25, Y+2	; 0x02
    7c52:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    7c56:	0f 90       	pop	r0
    7c58:	0f 90       	pop	r0
    7c5a:	df 91       	pop	r29
    7c5c:	cf 91       	pop	r28
    7c5e:	08 95       	ret

00007c60 <_ZN10helicopter5tasks16PIDOuterLoopTaskD0Ev>:
    7c60:	cf 93       	push	r28
    7c62:	df 93       	push	r29
    7c64:	1f 92       	push	r1
    7c66:	1f 92       	push	r1
    7c68:	cd b7       	in	r28, 0x3d	; 61
    7c6a:	de b7       	in	r29, 0x3e	; 62
    7c6c:	9a 83       	std	Y+2, r25	; 0x02
    7c6e:	89 83       	std	Y+1, r24	; 0x01
    7c70:	89 81       	ldd	r24, Y+1	; 0x01
    7c72:	9a 81       	ldd	r25, Y+2	; 0x02
    7c74:	0e 94 0e 3e 	call	0x7c1c	; 0x7c1c <_ZN10helicopter5tasks16PIDOuterLoopTaskD1Ev>
    7c78:	89 81       	ldd	r24, Y+1	; 0x01
    7c7a:	9a 81       	ldd	r25, Y+2	; 0x02
    7c7c:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    7c80:	0f 90       	pop	r0
    7c82:	0f 90       	pop	r0
    7c84:	df 91       	pop	r29
    7c86:	cf 91       	pop	r28
    7c88:	08 95       	ret

00007c8a <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf>:
																							
		
		
		
			float XNEDBodyFrame() const {return xNEDBodyFrame;}
			void XNEDBodyFrame(float val) { xNEDBodyFrame = val;}
    7c8a:	cf 93       	push	r28
    7c8c:	df 93       	push	r29
    7c8e:	00 d0       	rcall	.+0      	; 0x7c90 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf+0x6>
    7c90:	00 d0       	rcall	.+0      	; 0x7c92 <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf+0x8>
    7c92:	cd b7       	in	r28, 0x3d	; 61
    7c94:	de b7       	in	r29, 0x3e	; 62
    7c96:	9a 83       	std	Y+2, r25	; 0x02
    7c98:	89 83       	std	Y+1, r24	; 0x01
    7c9a:	4b 83       	std	Y+3, r20	; 0x03
    7c9c:	5c 83       	std	Y+4, r21	; 0x04
    7c9e:	6d 83       	std	Y+5, r22	; 0x05
    7ca0:	7e 83       	std	Y+6, r23	; 0x06
    7ca2:	29 81       	ldd	r18, Y+1	; 0x01
    7ca4:	3a 81       	ldd	r19, Y+2	; 0x02
    7ca6:	8b 81       	ldd	r24, Y+3	; 0x03
    7ca8:	9c 81       	ldd	r25, Y+4	; 0x04
    7caa:	ad 81       	ldd	r26, Y+5	; 0x05
    7cac:	be 81       	ldd	r27, Y+6	; 0x06
    7cae:	f9 01       	movw	r30, r18
    7cb0:	85 a3       	std	Z+37, r24	; 0x25
    7cb2:	96 a3       	std	Z+38, r25	; 0x26
    7cb4:	a7 a3       	std	Z+39, r26	; 0x27
    7cb6:	b0 a7       	std	Z+40, r27	; 0x28
    7cb8:	26 96       	adiw	r28, 0x06	; 6
    7cba:	0f b6       	in	r0, 0x3f	; 63
    7cbc:	f8 94       	cli
    7cbe:	de bf       	out	0x3e, r29	; 62
    7cc0:	0f be       	out	0x3f, r0	; 63
    7cc2:	cd bf       	out	0x3d, r28	; 61
    7cc4:	df 91       	pop	r29
    7cc6:	cf 91       	pop	r28
    7cc8:	08 95       	ret

00007cca <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf>:
						
						


			float YNEDBodyFrame() const {return yNEDBodyFrame;}
			void YNEDBodyFrame(float val) { yNEDBodyFrame = val;}
    7cca:	cf 93       	push	r28
    7ccc:	df 93       	push	r29
    7cce:	00 d0       	rcall	.+0      	; 0x7cd0 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf+0x6>
    7cd0:	00 d0       	rcall	.+0      	; 0x7cd2 <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf+0x8>
    7cd2:	cd b7       	in	r28, 0x3d	; 61
    7cd4:	de b7       	in	r29, 0x3e	; 62
    7cd6:	9a 83       	std	Y+2, r25	; 0x02
    7cd8:	89 83       	std	Y+1, r24	; 0x01
    7cda:	4b 83       	std	Y+3, r20	; 0x03
    7cdc:	5c 83       	std	Y+4, r21	; 0x04
    7cde:	6d 83       	std	Y+5, r22	; 0x05
    7ce0:	7e 83       	std	Y+6, r23	; 0x06
    7ce2:	89 81       	ldd	r24, Y+1	; 0x01
    7ce4:	9a 81       	ldd	r25, Y+2	; 0x02
    7ce6:	9c 01       	movw	r18, r24
    7ce8:	2b 5a       	subi	r18, 0xAB	; 171
    7cea:	3f 4f       	sbci	r19, 0xFF	; 255
    7cec:	8b 81       	ldd	r24, Y+3	; 0x03
    7cee:	9c 81       	ldd	r25, Y+4	; 0x04
    7cf0:	ad 81       	ldd	r26, Y+5	; 0x05
    7cf2:	be 81       	ldd	r27, Y+6	; 0x06
    7cf4:	f9 01       	movw	r30, r18
    7cf6:	80 83       	st	Z, r24
    7cf8:	91 83       	std	Z+1, r25	; 0x01
    7cfa:	a2 83       	std	Z+2, r26	; 0x02
    7cfc:	b3 83       	std	Z+3, r27	; 0x03
    7cfe:	26 96       	adiw	r28, 0x06	; 6
    7d00:	0f b6       	in	r0, 0x3f	; 63
    7d02:	f8 94       	cli
    7d04:	de bf       	out	0x3e, r29	; 62
    7d06:	0f be       	out	0x3f, r0	; 63
    7d08:	cd bf       	out	0x3d, r28	; 61
    7d0a:	df 91       	pop	r29
    7d0c:	cf 91       	pop	r28
    7d0e:	08 95       	ret

00007d10 <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf>:

			float AltitudeFeetAgl() const { return altitudeFeetAgl; }
			void AltitudeFeetAgl(float val) { altitudeFeetAgl = val; }

			float ZNEDBodyFrame() const { return zNEDBodyFrame; }
			void ZNEDBodyFrame(float val) { zNEDBodyFrame = val; }
    7d10:	cf 93       	push	r28
    7d12:	df 93       	push	r29
    7d14:	00 d0       	rcall	.+0      	; 0x7d16 <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf+0x6>
    7d16:	00 d0       	rcall	.+0      	; 0x7d18 <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf+0x8>
    7d18:	cd b7       	in	r28, 0x3d	; 61
    7d1a:	de b7       	in	r29, 0x3e	; 62
    7d1c:	9a 83       	std	Y+2, r25	; 0x02
    7d1e:	89 83       	std	Y+1, r24	; 0x01
    7d20:	4b 83       	std	Y+3, r20	; 0x03
    7d22:	5c 83       	std	Y+4, r21	; 0x04
    7d24:	6d 83       	std	Y+5, r22	; 0x05
    7d26:	7e 83       	std	Y+6, r23	; 0x06
    7d28:	89 81       	ldd	r24, Y+1	; 0x01
    7d2a:	9a 81       	ldd	r25, Y+2	; 0x02
    7d2c:	9c 01       	movw	r18, r24
    7d2e:	27 57       	subi	r18, 0x77	; 119
    7d30:	3f 4f       	sbci	r19, 0xFF	; 255
    7d32:	8b 81       	ldd	r24, Y+3	; 0x03
    7d34:	9c 81       	ldd	r25, Y+4	; 0x04
    7d36:	ad 81       	ldd	r26, Y+5	; 0x05
    7d38:	be 81       	ldd	r27, Y+6	; 0x06
    7d3a:	f9 01       	movw	r30, r18
    7d3c:	80 83       	st	Z, r24
    7d3e:	91 83       	std	Z+1, r25	; 0x01
    7d40:	a2 83       	std	Z+2, r26	; 0x02
    7d42:	b3 83       	std	Z+3, r27	; 0x03
    7d44:	26 96       	adiw	r28, 0x06	; 6
    7d46:	0f b6       	in	r0, 0x3f	; 63
    7d48:	f8 94       	cli
    7d4a:	de bf       	out	0x3e, r29	; 62
    7d4c:	0f be       	out	0x3f, r0	; 63
    7d4e:	cd bf       	out	0x3d, r28	; 61
    7d50:	df 91       	pop	r29
    7d52:	cf 91       	pop	r28
    7d54:	08 95       	ret

00007d56 <_ZNK10helicopter5model11SystemModel20InitialXPositionEcefEv>:
			void BlownFrames( long val ) { numOfFramesBlown = val;}
				
			long SerialCommunicationBufferOverruns() const {return serialCommunicationBufferOverruns;}
			void SerialCommunicationBufferOverruns( long val ) { serialCommunicationBufferOverruns = val;}				

			long  InitialXPositionEcef() const {return initialXPositionEcef;}
    7d56:	cf 93       	push	r28
    7d58:	df 93       	push	r29
    7d5a:	1f 92       	push	r1
    7d5c:	1f 92       	push	r1
    7d5e:	cd b7       	in	r28, 0x3d	; 61
    7d60:	de b7       	in	r29, 0x3e	; 62
    7d62:	9a 83       	std	Y+2, r25	; 0x02
    7d64:	89 83       	std	Y+1, r24	; 0x01
    7d66:	89 81       	ldd	r24, Y+1	; 0x01
    7d68:	9a 81       	ldd	r25, Y+2	; 0x02
    7d6a:	87 53       	subi	r24, 0x37	; 55
    7d6c:	9f 4f       	sbci	r25, 0xFF	; 255
    7d6e:	fc 01       	movw	r30, r24
    7d70:	80 81       	ld	r24, Z
    7d72:	91 81       	ldd	r25, Z+1	; 0x01
    7d74:	a2 81       	ldd	r26, Z+2	; 0x02
    7d76:	b3 81       	ldd	r27, Z+3	; 0x03
    7d78:	bc 01       	movw	r22, r24
    7d7a:	cd 01       	movw	r24, r26
    7d7c:	0e 94 c2 4b 	call	0x9784	; 0x9784 <__fixsfsi>
    7d80:	dc 01       	movw	r26, r24
    7d82:	cb 01       	movw	r24, r22
    7d84:	bc 01       	movw	r22, r24
    7d86:	cd 01       	movw	r24, r26
    7d88:	0f 90       	pop	r0
    7d8a:	0f 90       	pop	r0
    7d8c:	df 91       	pop	r29
    7d8e:	cf 91       	pop	r28
    7d90:	08 95       	ret

00007d92 <_ZNK10helicopter5model11SystemModel20InitialYPositionEcefEv>:
			void InitialXPositionEcef( long val ) { initialXPositionEcef = val;}			

			long  InitialYPositionEcef() const {return initialYPositionEcef;}
    7d92:	cf 93       	push	r28
    7d94:	df 93       	push	r29
    7d96:	1f 92       	push	r1
    7d98:	1f 92       	push	r1
    7d9a:	cd b7       	in	r28, 0x3d	; 61
    7d9c:	de b7       	in	r29, 0x3e	; 62
    7d9e:	9a 83       	std	Y+2, r25	; 0x02
    7da0:	89 83       	std	Y+1, r24	; 0x01
    7da2:	89 81       	ldd	r24, Y+1	; 0x01
    7da4:	9a 81       	ldd	r25, Y+2	; 0x02
    7da6:	83 53       	subi	r24, 0x33	; 51
    7da8:	9f 4f       	sbci	r25, 0xFF	; 255
    7daa:	fc 01       	movw	r30, r24
    7dac:	80 81       	ld	r24, Z
    7dae:	91 81       	ldd	r25, Z+1	; 0x01
    7db0:	a2 81       	ldd	r26, Z+2	; 0x02
    7db2:	b3 81       	ldd	r27, Z+3	; 0x03
    7db4:	bc 01       	movw	r22, r24
    7db6:	cd 01       	movw	r24, r26
    7db8:	0e 94 c2 4b 	call	0x9784	; 0x9784 <__fixsfsi>
    7dbc:	dc 01       	movw	r26, r24
    7dbe:	cb 01       	movw	r24, r22
    7dc0:	bc 01       	movw	r22, r24
    7dc2:	cd 01       	movw	r24, r26
    7dc4:	0f 90       	pop	r0
    7dc6:	0f 90       	pop	r0
    7dc8:	df 91       	pop	r29
    7dca:	cf 91       	pop	r28
    7dcc:	08 95       	ret

00007dce <_ZNK10helicopter5model11SystemModel20InitialZPositionEcefEv>:
			void InitialYPositionEcef( long val ) { initialYPositionEcef = val;}

			long  InitialZPositionEcef() const {return initialZPositionEcef;}
    7dce:	cf 93       	push	r28
    7dd0:	df 93       	push	r29
    7dd2:	1f 92       	push	r1
    7dd4:	1f 92       	push	r1
    7dd6:	cd b7       	in	r28, 0x3d	; 61
    7dd8:	de b7       	in	r29, 0x3e	; 62
    7dda:	9a 83       	std	Y+2, r25	; 0x02
    7ddc:	89 83       	std	Y+1, r24	; 0x01
    7dde:	89 81       	ldd	r24, Y+1	; 0x01
    7de0:	9a 81       	ldd	r25, Y+2	; 0x02
    7de2:	8f 52       	subi	r24, 0x2F	; 47
    7de4:	9f 4f       	sbci	r25, 0xFF	; 255
    7de6:	fc 01       	movw	r30, r24
    7de8:	80 81       	ld	r24, Z
    7dea:	91 81       	ldd	r25, Z+1	; 0x01
    7dec:	a2 81       	ldd	r26, Z+2	; 0x02
    7dee:	b3 81       	ldd	r27, Z+3	; 0x03
    7df0:	bc 01       	movw	r22, r24
    7df2:	cd 01       	movw	r24, r26
    7df4:	0e 94 c2 4b 	call	0x9784	; 0x9784 <__fixsfsi>
    7df8:	dc 01       	movw	r26, r24
    7dfa:	cb 01       	movw	r24, r22
    7dfc:	bc 01       	movw	r22, r24
    7dfe:	cd 01       	movw	r24, r26
    7e00:	0f 90       	pop	r0
    7e02:	0f 90       	pop	r0
    7e04:	df 91       	pop	r29
    7e06:	cf 91       	pop	r28
    7e08:	08 95       	ret

00007e0a <_ZN10helicopter5tasks20SensorProcessingTaskC1EPNS_5model11SystemModelEii>:
#include "CoordinateUtil.h"

using namespace helicopter::tasks;
using namespace helicopter::util;

SensorProcessingTask::SensorProcessingTask (SystemModel *model, int delay, int period) :
    7e0a:	cf 93       	push	r28
    7e0c:	df 93       	push	r29
    7e0e:	cd b7       	in	r28, 0x3d	; 61
    7e10:	de b7       	in	r29, 0x3e	; 62
    7e12:	28 97       	sbiw	r28, 0x08	; 8
    7e14:	0f b6       	in	r0, 0x3f	; 63
    7e16:	f8 94       	cli
    7e18:	de bf       	out	0x3e, r29	; 62
    7e1a:	0f be       	out	0x3f, r0	; 63
    7e1c:	cd bf       	out	0x3d, r28	; 61
    7e1e:	9a 83       	std	Y+2, r25	; 0x02
    7e20:	89 83       	std	Y+1, r24	; 0x01
    7e22:	7c 83       	std	Y+4, r23	; 0x04
    7e24:	6b 83       	std	Y+3, r22	; 0x03
    7e26:	5e 83       	std	Y+6, r21	; 0x06
    7e28:	4d 83       	std	Y+5, r20	; 0x05
    7e2a:	38 87       	std	Y+8, r19	; 0x08
    7e2c:	2f 83       	std	Y+7, r18	; 0x07
	Task(delay, period),
	model(model)
    7e2e:	89 81       	ldd	r24, Y+1	; 0x01
    7e30:	9a 81       	ldd	r25, Y+2	; 0x02
    7e32:	4f 81       	ldd	r20, Y+7	; 0x07
    7e34:	58 85       	ldd	r21, Y+8	; 0x08
    7e36:	2d 81       	ldd	r18, Y+5	; 0x05
    7e38:	3e 81       	ldd	r19, Y+6	; 0x06
    7e3a:	b9 01       	movw	r22, r18
    7e3c:	0e 94 fc 43 	call	0x87f8	; 0x87f8 <_ZN10helicopter5tasks4TaskC1Eii>
    7e40:	89 81       	ldd	r24, Y+1	; 0x01
    7e42:	9a 81       	ldd	r25, Y+2	; 0x02
    7e44:	26 e6       	ldi	r18, 0x66	; 102
    7e46:	32 e0       	ldi	r19, 0x02	; 2
    7e48:	fc 01       	movw	r30, r24
    7e4a:	31 83       	std	Z+1, r19	; 0x01
    7e4c:	20 83       	st	Z, r18
    7e4e:	89 81       	ldd	r24, Y+1	; 0x01
    7e50:	9a 81       	ldd	r25, Y+2	; 0x02
    7e52:	2b 81       	ldd	r18, Y+3	; 0x03
    7e54:	3c 81       	ldd	r19, Y+4	; 0x04
    7e56:	fc 01       	movw	r30, r24
    7e58:	30 87       	std	Z+8, r19	; 0x08
    7e5a:	27 83       	std	Z+7, r18	; 0x07
{
	
}
    7e5c:	28 96       	adiw	r28, 0x08	; 8
    7e5e:	0f b6       	in	r0, 0x3f	; 63
    7e60:	f8 94       	cli
    7e62:	de bf       	out	0x3e, r29	; 62
    7e64:	0f be       	out	0x3f, r0	; 63
    7e66:	cd bf       	out	0x3d, r28	; 61
    7e68:	df 91       	pop	r29
    7e6a:	cf 91       	pop	r28
    7e6c:	08 95       	ret

00007e6e <_ZN10helicopter5tasks20SensorProcessingTask11runTaskImplEv>:

void SensorProcessingTask::runTaskImpl()
{
    7e6e:	4f 92       	push	r4
    7e70:	5f 92       	push	r5
    7e72:	6f 92       	push	r6
    7e74:	7f 92       	push	r7
    7e76:	8f 92       	push	r8
    7e78:	9f 92       	push	r9
    7e7a:	af 92       	push	r10
    7e7c:	bf 92       	push	r11
    7e7e:	cf 92       	push	r12
    7e80:	df 92       	push	r13
    7e82:	ef 92       	push	r14
    7e84:	ff 92       	push	r15
    7e86:	0f 93       	push	r16
    7e88:	1f 93       	push	r17
    7e8a:	cf 93       	push	r28
    7e8c:	df 93       	push	r29
    7e8e:	cd b7       	in	r28, 0x3d	; 61
    7e90:	de b7       	in	r29, 0x3e	; 62
    7e92:	66 97       	sbiw	r28, 0x16	; 22
    7e94:	0f b6       	in	r0, 0x3f	; 63
    7e96:	f8 94       	cli
    7e98:	de bf       	out	0x3e, r29	; 62
    7e9a:	0f be       	out	0x3f, r0	; 63
    7e9c:	cd bf       	out	0x3d, r28	; 61
    7e9e:	9e 87       	std	Y+14, r25	; 0x0e
    7ea0:	8d 87       	std	Y+13, r24	; 0x0d
	float localNEDX = 0;
    7ea2:	19 82       	std	Y+1, r1	; 0x01
    7ea4:	1a 82       	std	Y+2, r1	; 0x02
    7ea6:	1b 82       	std	Y+3, r1	; 0x03
    7ea8:	1c 82       	std	Y+4, r1	; 0x04
	float localNEDY = 0;
    7eaa:	1d 82       	std	Y+5, r1	; 0x05
    7eac:	1e 82       	std	Y+6, r1	; 0x06
    7eae:	1f 82       	std	Y+7, r1	; 0x07
    7eb0:	18 86       	std	Y+8, r1	; 0x08
	float localNEDZ = 0;
    7eb2:	19 86       	std	Y+9, r1	; 0x09
    7eb4:	1a 86       	std	Y+10, r1	; 0x0a
    7eb6:	1b 86       	std	Y+11, r1	; 0x0b
    7eb8:	1c 86       	std	Y+12, r1	; 0x0c
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
		localNEDX,localNEDY,localNEDZ);
    7eba:	8d 85       	ldd	r24, Y+13	; 0x0d
    7ebc:	9e 85       	ldd	r25, Y+14	; 0x0e
    7ebe:	fc 01       	movw	r30, r24
    7ec0:	87 81       	ldd	r24, Z+7	; 0x07
    7ec2:	90 85       	ldd	r25, Z+8	; 0x08
    7ec4:	8c 01       	movw	r16, r24
    7ec6:	0b 52       	subi	r16, 0x2B	; 43
    7ec8:	1f 4f       	sbci	r17, 0xFF	; 255
	float localNEDX = 0;
	float localNEDY = 0;
	float localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    7eca:	8d 85       	ldd	r24, Y+13	; 0x0d
    7ecc:	9e 85       	ldd	r25, Y+14	; 0x0e
    7ece:	fc 01       	movw	r30, r24
    7ed0:	87 81       	ldd	r24, Z+7	; 0x07
    7ed2:	90 85       	ldd	r25, Z+8	; 0x08
    7ed4:	0e 94 e7 3e 	call	0x7dce	; 0x7dce <_ZNK10helicopter5model11SystemModel20InitialZPositionEcefEv>
    7ed8:	dc 01       	movw	r26, r24
    7eda:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    7edc:	bc 01       	movw	r22, r24
    7ede:	cd 01       	movw	r24, r26
    7ee0:	0e 94 f5 4b 	call	0x97ea	; 0x97ea <__floatsisf>
    7ee4:	4b 01       	movw	r8, r22
    7ee6:	5c 01       	movw	r10, r24
	float localNEDX = 0;
	float localNEDY = 0;
	float localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    7ee8:	8d 85       	ldd	r24, Y+13	; 0x0d
    7eea:	9e 85       	ldd	r25, Y+14	; 0x0e
    7eec:	fc 01       	movw	r30, r24
    7eee:	87 81       	ldd	r24, Z+7	; 0x07
    7ef0:	90 85       	ldd	r25, Z+8	; 0x08
    7ef2:	0e 94 c9 3e 	call	0x7d92	; 0x7d92 <_ZNK10helicopter5model11SystemModel20InitialYPositionEcefEv>
    7ef6:	dc 01       	movw	r26, r24
    7ef8:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    7efa:	bc 01       	movw	r22, r24
    7efc:	cd 01       	movw	r24, r26
    7efe:	0e 94 f5 4b 	call	0x97ea	; 0x97ea <__floatsisf>
    7f02:	6b 01       	movw	r12, r22
    7f04:	7c 01       	movw	r14, r24
	float localNEDX = 0;
	float localNEDY = 0;
	float localNEDZ = 0;
	
	CoordinateUtil::ConvertFromGeodedicToLocalNED(model->LatitudeDegrees(), model->LongitudeDegrees(), model->AltitudeFeetAgl(), 
		model->InitialXPositionEcef(), model->InitialYPositionEcef(), model->InitialZPositionEcef(),model->EcefToLocalNEDRotationMatrix,
    7f06:	8d 85       	ldd	r24, Y+13	; 0x0d
    7f08:	9e 85       	ldd	r25, Y+14	; 0x0e
    7f0a:	fc 01       	movw	r30, r24
    7f0c:	87 81       	ldd	r24, Z+7	; 0x07
    7f0e:	90 85       	ldd	r25, Z+8	; 0x08
    7f10:	0e 94 ab 3e 	call	0x7d56	; 0x7d56 <_ZNK10helicopter5model11SystemModel20InitialXPositionEcefEv>
    7f14:	dc 01       	movw	r26, r24
    7f16:	cb 01       	movw	r24, r22
		localNEDX,localNEDY,localNEDZ);
    7f18:	bc 01       	movw	r22, r24
    7f1a:	cd 01       	movw	r24, r26
    7f1c:	0e 94 f5 4b 	call	0x97ea	; 0x97ea <__floatsisf>
    7f20:	6f 87       	std	Y+15, r22	; 0x0f
    7f22:	78 8b       	std	Y+16, r23	; 0x10
    7f24:	89 8b       	std	Y+17, r24	; 0x11
    7f26:	9a 8b       	std	Y+18, r25	; 0x12
    7f28:	8d 85       	ldd	r24, Y+13	; 0x0d
    7f2a:	9e 85       	ldd	r25, Y+14	; 0x0e
    7f2c:	fc 01       	movw	r30, r24
    7f2e:	87 81       	ldd	r24, Z+7	; 0x07
    7f30:	90 85       	ldd	r25, Z+8	; 0x08
    7f32:	0e 94 81 19 	call	0x3302	; 0x3302 <_ZNK10helicopter5model11SystemModel15AltitudeFeetAglEv>
    7f36:	6b 8b       	std	Y+19, r22	; 0x13
    7f38:	7c 8b       	std	Y+20, r23	; 0x14
    7f3a:	8d 8b       	std	Y+21, r24	; 0x15
    7f3c:	9e 8b       	std	Y+22, r25	; 0x16
    7f3e:	8d 85       	ldd	r24, Y+13	; 0x0d
    7f40:	9e 85       	ldd	r25, Y+14	; 0x0e
    7f42:	fc 01       	movw	r30, r24
    7f44:	87 81       	ldd	r24, Z+7	; 0x07
    7f46:	90 85       	ldd	r25, Z+8	; 0x08
    7f48:	0e 94 f7 19 	call	0x33ee	; 0x33ee <_ZNK10helicopter5model11SystemModel16LongitudeDegreesEv>
    7f4c:	2b 01       	movw	r4, r22
    7f4e:	3c 01       	movw	r6, r24
    7f50:	8d 85       	ldd	r24, Y+13	; 0x0d
    7f52:	9e 85       	ldd	r25, Y+14	; 0x0e
    7f54:	fc 01       	movw	r30, r24
    7f56:	87 81       	ldd	r24, Z+7	; 0x07
    7f58:	90 85       	ldd	r25, Z+8	; 0x08
    7f5a:	0e 94 df 19 	call	0x33be	; 0x33be <_ZNK10helicopter5model11SystemModel15LatitudeDegreesEv>
    7f5e:	dc 01       	movw	r26, r24
    7f60:	cb 01       	movw	r24, r22
    7f62:	9e 01       	movw	r18, r28
    7f64:	27 5f       	subi	r18, 0xF7	; 247
    7f66:	3f 4f       	sbci	r19, 0xFF	; 255
    7f68:	43 2f       	mov	r20, r19
    7f6a:	4f 93       	push	r20
    7f6c:	2f 93       	push	r18
    7f6e:	9e 01       	movw	r18, r28
    7f70:	2b 5f       	subi	r18, 0xFB	; 251
    7f72:	3f 4f       	sbci	r19, 0xFF	; 255
    7f74:	43 2f       	mov	r20, r19
    7f76:	4f 93       	push	r20
    7f78:	2f 93       	push	r18
    7f7a:	9e 01       	movw	r18, r28
    7f7c:	2f 5f       	subi	r18, 0xFF	; 255
    7f7e:	3f 4f       	sbci	r19, 0xFF	; 255
    7f80:	23 2f       	mov	r18, r19
    7f82:	2f 93       	push	r18
    7f84:	9e 01       	movw	r18, r28
    7f86:	2f 5f       	subi	r18, 0xFF	; 255
    7f88:	3f 4f       	sbci	r19, 0xFF	; 255
    7f8a:	2f 93       	push	r18
    7f8c:	21 2f       	mov	r18, r17
    7f8e:	2f 93       	push	r18
    7f90:	20 2f       	mov	r18, r16
    7f92:	2f 93       	push	r18
    7f94:	2b 2d       	mov	r18, r11
    7f96:	2f 93       	push	r18
    7f98:	2a 2d       	mov	r18, r10
    7f9a:	2f 93       	push	r18
    7f9c:	29 2d       	mov	r18, r9
    7f9e:	2f 93       	push	r18
    7fa0:	28 2d       	mov	r18, r8
    7fa2:	2f 93       	push	r18
    7fa4:	2f 2d       	mov	r18, r15
    7fa6:	2f 93       	push	r18
    7fa8:	2e 2d       	mov	r18, r14
    7faa:	2f 93       	push	r18
    7fac:	2d 2d       	mov	r18, r13
    7fae:	2f 93       	push	r18
    7fb0:	2c 2d       	mov	r18, r12
    7fb2:	2f 93       	push	r18
    7fb4:	af 84       	ldd	r10, Y+15	; 0x0f
    7fb6:	b8 88       	ldd	r11, Y+16	; 0x10
    7fb8:	c9 88       	ldd	r12, Y+17	; 0x11
    7fba:	da 88       	ldd	r13, Y+18	; 0x12
    7fbc:	eb 88       	ldd	r14, Y+19	; 0x13
    7fbe:	fc 88       	ldd	r15, Y+20	; 0x14
    7fc0:	0d 89       	ldd	r16, Y+21	; 0x15
    7fc2:	1e 89       	ldd	r17, Y+22	; 0x16
    7fc4:	a3 01       	movw	r20, r6
    7fc6:	92 01       	movw	r18, r4
    7fc8:	bc 01       	movw	r22, r24
    7fca:	cd 01       	movw	r24, r26
    7fcc:	0e 94 49 49 	call	0x9292	; 0x9292 <_ZN10helicopter4util14CoordinateUtil29ConvertFromGeodedicToLocalNEDEffffffPA3_fRfS4_S4_>
    7fd0:	8d b7       	in	r24, 0x3d	; 61
    7fd2:	9e b7       	in	r25, 0x3e	; 62
    7fd4:	40 96       	adiw	r24, 0x10	; 16
    7fd6:	0f b6       	in	r0, 0x3f	; 63
    7fd8:	f8 94       	cli
    7fda:	de bf       	out	0x3e, r29	; 62
    7fdc:	0f be       	out	0x3f, r0	; 63
    7fde:	cd bf       	out	0x3d, r28	; 61
		
		
	model->XNEDBodyFrame(localNEDX);
    7fe0:	89 81       	ldd	r24, Y+1	; 0x01
    7fe2:	9a 81       	ldd	r25, Y+2	; 0x02
    7fe4:	ab 81       	ldd	r26, Y+3	; 0x03
    7fe6:	bc 81       	ldd	r27, Y+4	; 0x04
    7fe8:	2d 85       	ldd	r18, Y+13	; 0x0d
    7fea:	3e 85       	ldd	r19, Y+14	; 0x0e
    7fec:	f9 01       	movw	r30, r18
    7fee:	27 81       	ldd	r18, Z+7	; 0x07
    7ff0:	30 85       	ldd	r19, Z+8	; 0x08
    7ff2:	ac 01       	movw	r20, r24
    7ff4:	bd 01       	movw	r22, r26
    7ff6:	c9 01       	movw	r24, r18
    7ff8:	0e 94 45 3e 	call	0x7c8a	; 0x7c8a <_ZN10helicopter5model11SystemModel13XNEDBodyFrameEf>
	model->YNEDBodyFrame(localNEDY);
    7ffc:	8d 81       	ldd	r24, Y+5	; 0x05
    7ffe:	9e 81       	ldd	r25, Y+6	; 0x06
    8000:	af 81       	ldd	r26, Y+7	; 0x07
    8002:	b8 85       	ldd	r27, Y+8	; 0x08
    8004:	2d 85       	ldd	r18, Y+13	; 0x0d
    8006:	3e 85       	ldd	r19, Y+14	; 0x0e
    8008:	f9 01       	movw	r30, r18
    800a:	27 81       	ldd	r18, Z+7	; 0x07
    800c:	30 85       	ldd	r19, Z+8	; 0x08
    800e:	ac 01       	movw	r20, r24
    8010:	bd 01       	movw	r22, r26
    8012:	c9 01       	movw	r24, r18
    8014:	0e 94 65 3e 	call	0x7cca	; 0x7cca <_ZN10helicopter5model11SystemModel13YNEDBodyFrameEf>
	model->ZNEDBodyFrame(localNEDZ);
    8018:	89 85       	ldd	r24, Y+9	; 0x09
    801a:	9a 85       	ldd	r25, Y+10	; 0x0a
    801c:	ab 85       	ldd	r26, Y+11	; 0x0b
    801e:	bc 85       	ldd	r27, Y+12	; 0x0c
    8020:	2d 85       	ldd	r18, Y+13	; 0x0d
    8022:	3e 85       	ldd	r19, Y+14	; 0x0e
    8024:	f9 01       	movw	r30, r18
    8026:	27 81       	ldd	r18, Z+7	; 0x07
    8028:	30 85       	ldd	r19, Z+8	; 0x08
    802a:	ac 01       	movw	r20, r24
    802c:	bd 01       	movw	r22, r26
    802e:	c9 01       	movw	r24, r18
    8030:	0e 94 88 3e 	call	0x7d10	; 0x7d10 <_ZN10helicopter5model11SystemModel13ZNEDBodyFrameEf>
}
    8034:	66 96       	adiw	r28, 0x16	; 22
    8036:	0f b6       	in	r0, 0x3f	; 63
    8038:	f8 94       	cli
    803a:	de bf       	out	0x3e, r29	; 62
    803c:	0f be       	out	0x3f, r0	; 63
    803e:	cd bf       	out	0x3d, r28	; 61
    8040:	df 91       	pop	r29
    8042:	cf 91       	pop	r28
    8044:	1f 91       	pop	r17
    8046:	0f 91       	pop	r16
    8048:	ff 90       	pop	r15
    804a:	ef 90       	pop	r14
    804c:	df 90       	pop	r13
    804e:	cf 90       	pop	r12
    8050:	bf 90       	pop	r11
    8052:	af 90       	pop	r10
    8054:	9f 90       	pop	r9
    8056:	8f 90       	pop	r8
    8058:	7f 90       	pop	r7
    805a:	6f 90       	pop	r6
    805c:	5f 90       	pop	r5
    805e:	4f 90       	pop	r4
    8060:	08 95       	ret

00008062 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>:
	{
		/**
		 * This class processes and transforms sensor data such as converting latitude/longitude into
		 * x,y,z coordinates
		 */
		class SensorProcessingTask : public Task
    8062:	cf 93       	push	r28
    8064:	df 93       	push	r29
    8066:	1f 92       	push	r1
    8068:	1f 92       	push	r1
    806a:	cd b7       	in	r28, 0x3d	; 61
    806c:	de b7       	in	r29, 0x3e	; 62
    806e:	9a 83       	std	Y+2, r25	; 0x02
    8070:	89 83       	std	Y+1, r24	; 0x01
    8072:	89 81       	ldd	r24, Y+1	; 0x01
    8074:	9a 81       	ldd	r25, Y+2	; 0x02
    8076:	26 e6       	ldi	r18, 0x66	; 102
    8078:	32 e0       	ldi	r19, 0x02	; 2
    807a:	fc 01       	movw	r30, r24
    807c:	31 83       	std	Z+1, r19	; 0x01
    807e:	20 83       	st	Z, r18
    8080:	89 81       	ldd	r24, Y+1	; 0x01
    8082:	9a 81       	ldd	r25, Y+2	; 0x02
    8084:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <_ZN10helicopter5tasks4TaskD1Ev>
    8088:	80 e0       	ldi	r24, 0x00	; 0
    808a:	90 e0       	ldi	r25, 0x00	; 0
    808c:	81 70       	andi	r24, 0x01	; 1
    808e:	99 27       	eor	r25, r25
    8090:	00 97       	sbiw	r24, 0x00	; 0
    8092:	21 f0       	breq	.+8      	; 0x809c <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev+0x3a>
    8094:	89 81       	ldd	r24, Y+1	; 0x01
    8096:	9a 81       	ldd	r25, Y+2	; 0x02
    8098:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    809c:	0f 90       	pop	r0
    809e:	0f 90       	pop	r0
    80a0:	df 91       	pop	r29
    80a2:	cf 91       	pop	r28
    80a4:	08 95       	ret

000080a6 <_ZN10helicopter5tasks20SensorProcessingTaskD0Ev>:
    80a6:	cf 93       	push	r28
    80a8:	df 93       	push	r29
    80aa:	1f 92       	push	r1
    80ac:	1f 92       	push	r1
    80ae:	cd b7       	in	r28, 0x3d	; 61
    80b0:	de b7       	in	r29, 0x3e	; 62
    80b2:	9a 83       	std	Y+2, r25	; 0x02
    80b4:	89 83       	std	Y+1, r24	; 0x01
    80b6:	89 81       	ldd	r24, Y+1	; 0x01
    80b8:	9a 81       	ldd	r25, Y+2	; 0x02
    80ba:	0e 94 31 40 	call	0x8062	; 0x8062 <_ZN10helicopter5tasks20SensorProcessingTaskD1Ev>
    80be:	89 81       	ldd	r24, Y+1	; 0x01
    80c0:	9a 81       	ldd	r25, Y+2	; 0x02
    80c2:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    80c6:	0f 90       	pop	r0
    80c8:	0f 90       	pop	r0
    80ca:	df 91       	pop	r29
    80cc:	cf 91       	pop	r28
    80ce:	08 95       	ret

000080d0 <_ZN10helicopter5model11SystemModel33SerialCommunicationBufferOverrunsEl>:
			
			long BlownFrames() const {return numOfFramesBlown;}
			void BlownFrames( long val ) { numOfFramesBlown = val;}
				
			long SerialCommunicationBufferOverruns() const {return serialCommunicationBufferOverruns;}
			void SerialCommunicationBufferOverruns( long val ) { serialCommunicationBufferOverruns = val;}				
    80d0:	cf 93       	push	r28
    80d2:	df 93       	push	r29
    80d4:	00 d0       	rcall	.+0      	; 0x80d6 <_ZN10helicopter5model11SystemModel33SerialCommunicationBufferOverrunsEl+0x6>
    80d6:	00 d0       	rcall	.+0      	; 0x80d8 <_ZN10helicopter5model11SystemModel33SerialCommunicationBufferOverrunsEl+0x8>
    80d8:	cd b7       	in	r28, 0x3d	; 61
    80da:	de b7       	in	r29, 0x3e	; 62
    80dc:	9a 83       	std	Y+2, r25	; 0x02
    80de:	89 83       	std	Y+1, r24	; 0x01
    80e0:	4b 83       	std	Y+3, r20	; 0x03
    80e2:	5c 83       	std	Y+4, r21	; 0x04
    80e4:	6d 83       	std	Y+5, r22	; 0x05
    80e6:	7e 83       	std	Y+6, r23	; 0x06
    80e8:	89 81       	ldd	r24, Y+1	; 0x01
    80ea:	9a 81       	ldd	r25, Y+2	; 0x02
    80ec:	9c 01       	movw	r18, r24
    80ee:	2b 53       	subi	r18, 0x3B	; 59
    80f0:	3f 4f       	sbci	r19, 0xFF	; 255
    80f2:	8b 81       	ldd	r24, Y+3	; 0x03
    80f4:	9c 81       	ldd	r25, Y+4	; 0x04
    80f6:	ad 81       	ldd	r26, Y+5	; 0x05
    80f8:	be 81       	ldd	r27, Y+6	; 0x06
    80fa:	f9 01       	movw	r30, r18
    80fc:	80 83       	st	Z, r24
    80fe:	91 83       	std	Z+1, r25	; 0x01
    8100:	a2 83       	std	Z+2, r26	; 0x02
    8102:	b3 83       	std	Z+3, r27	; 0x03
    8104:	26 96       	adiw	r28, 0x06	; 6
    8106:	0f b6       	in	r0, 0x3f	; 63
    8108:	f8 94       	cli
    810a:	de bf       	out	0x3e, r29	; 62
    810c:	0f be       	out	0x3f, r0	; 63
    810e:	cd bf       	out	0x3d, r28	; 61
    8110:	df 91       	pop	r29
    8112:	cf 91       	pop	r28
    8114:	08 95       	ret

00008116 <_ZN10helicopter10controller13PIDController16setZIntegralGainEf>:
				
				
				
				
				
				void setZIntegralGain(float val)
    8116:	cf 93       	push	r28
    8118:	df 93       	push	r29
    811a:	00 d0       	rcall	.+0      	; 0x811c <_ZN10helicopter10controller13PIDController16setZIntegralGainEf+0x6>
    811c:	00 d0       	rcall	.+0      	; 0x811e <_ZN10helicopter10controller13PIDController16setZIntegralGainEf+0x8>
    811e:	cd b7       	in	r28, 0x3d	; 61
    8120:	de b7       	in	r29, 0x3e	; 62
    8122:	9a 83       	std	Y+2, r25	; 0x02
    8124:	89 83       	std	Y+1, r24	; 0x01
    8126:	4b 83       	std	Y+3, r20	; 0x03
    8128:	5c 83       	std	Y+4, r21	; 0x04
    812a:	6d 83       	std	Y+5, r22	; 0x05
    812c:	7e 83       	std	Y+6, r23	; 0x06
				{
					zIntegralGain = val;
    812e:	89 81       	ldd	r24, Y+1	; 0x01
    8130:	9a 81       	ldd	r25, Y+2	; 0x02
    8132:	9c 01       	movw	r18, r24
    8134:	2e 5b       	subi	r18, 0xBE	; 190
    8136:	3f 4f       	sbci	r19, 0xFF	; 255
    8138:	8b 81       	ldd	r24, Y+3	; 0x03
    813a:	9c 81       	ldd	r25, Y+4	; 0x04
    813c:	ad 81       	ldd	r26, Y+5	; 0x05
    813e:	be 81       	ldd	r27, Y+6	; 0x06
    8140:	f9 01       	movw	r30, r18
    8142:	80 83       	st	Z, r24
    8144:	91 83       	std	Z+1, r25	; 0x01
    8146:	a2 83       	std	Z+2, r26	; 0x02
    8148:	b3 83       	std	Z+3, r27	; 0x03
				}
    814a:	26 96       	adiw	r28, 0x06	; 6
    814c:	0f b6       	in	r0, 0x3f	; 63
    814e:	f8 94       	cli
    8150:	de bf       	out	0x3e, r29	; 62
    8152:	0f be       	out	0x3f, r0	; 63
    8154:	cd bf       	out	0x3d, r28	; 61
    8156:	df 91       	pop	r29
    8158:	cf 91       	pop	r28
    815a:	08 95       	ret

0000815c <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf>:
				
				void setZDerivativeGain(float val)
    815c:	cf 93       	push	r28
    815e:	df 93       	push	r29
    8160:	00 d0       	rcall	.+0      	; 0x8162 <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf+0x6>
    8162:	00 d0       	rcall	.+0      	; 0x8164 <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf+0x8>
    8164:	cd b7       	in	r28, 0x3d	; 61
    8166:	de b7       	in	r29, 0x3e	; 62
    8168:	9a 83       	std	Y+2, r25	; 0x02
    816a:	89 83       	std	Y+1, r24	; 0x01
    816c:	4b 83       	std	Y+3, r20	; 0x03
    816e:	5c 83       	std	Y+4, r21	; 0x04
    8170:	6d 83       	std	Y+5, r22	; 0x05
    8172:	7e 83       	std	Y+6, r23	; 0x06
				{
					zDerivativeGain = val;
    8174:	89 81       	ldd	r24, Y+1	; 0x01
    8176:	9a 81       	ldd	r25, Y+2	; 0x02
    8178:	9c 01       	movw	r18, r24
    817a:	2a 5b       	subi	r18, 0xBA	; 186
    817c:	3f 4f       	sbci	r19, 0xFF	; 255
    817e:	8b 81       	ldd	r24, Y+3	; 0x03
    8180:	9c 81       	ldd	r25, Y+4	; 0x04
    8182:	ad 81       	ldd	r26, Y+5	; 0x05
    8184:	be 81       	ldd	r27, Y+6	; 0x06
    8186:	f9 01       	movw	r30, r18
    8188:	80 83       	st	Z, r24
    818a:	91 83       	std	Z+1, r25	; 0x01
    818c:	a2 83       	std	Z+2, r26	; 0x02
    818e:	b3 83       	std	Z+3, r27	; 0x03
				}
    8190:	26 96       	adiw	r28, 0x06	; 6
    8192:	0f b6       	in	r0, 0x3f	; 63
    8194:	f8 94       	cli
    8196:	de bf       	out	0x3e, r29	; 62
    8198:	0f be       	out	0x3f, r0	; 63
    819a:	cd bf       	out	0x3d, r28	; 61
    819c:	df 91       	pop	r29
    819e:	cf 91       	pop	r28
    81a0:	08 95       	ret

000081a2 <_ZN10helicopter10controller13PIDController20setZProportionalGainEf>:
				
				void setZProportionalGain(float val)
    81a2:	cf 93       	push	r28
    81a4:	df 93       	push	r29
    81a6:	00 d0       	rcall	.+0      	; 0x81a8 <_ZN10helicopter10controller13PIDController20setZProportionalGainEf+0x6>
    81a8:	00 d0       	rcall	.+0      	; 0x81aa <_ZN10helicopter10controller13PIDController20setZProportionalGainEf+0x8>
    81aa:	cd b7       	in	r28, 0x3d	; 61
    81ac:	de b7       	in	r29, 0x3e	; 62
    81ae:	9a 83       	std	Y+2, r25	; 0x02
    81b0:	89 83       	std	Y+1, r24	; 0x01
    81b2:	4b 83       	std	Y+3, r20	; 0x03
    81b4:	5c 83       	std	Y+4, r21	; 0x04
    81b6:	6d 83       	std	Y+5, r22	; 0x05
    81b8:	7e 83       	std	Y+6, r23	; 0x06
				{
					zProportionalGain = val;
    81ba:	89 81       	ldd	r24, Y+1	; 0x01
    81bc:	9a 81       	ldd	r25, Y+2	; 0x02
    81be:	9c 01       	movw	r18, r24
    81c0:	26 5b       	subi	r18, 0xB6	; 182
    81c2:	3f 4f       	sbci	r19, 0xFF	; 255
    81c4:	8b 81       	ldd	r24, Y+3	; 0x03
    81c6:	9c 81       	ldd	r25, Y+4	; 0x04
    81c8:	ad 81       	ldd	r26, Y+5	; 0x05
    81ca:	be 81       	ldd	r27, Y+6	; 0x06
    81cc:	f9 01       	movw	r30, r18
    81ce:	80 83       	st	Z, r24
    81d0:	91 83       	std	Z+1, r25	; 0x01
    81d2:	a2 83       	std	Z+2, r26	; 0x02
    81d4:	b3 83       	std	Z+3, r27	; 0x03
				}
    81d6:	26 96       	adiw	r28, 0x06	; 6
    81d8:	0f b6       	in	r0, 0x3f	; 63
    81da:	f8 94       	cli
    81dc:	de bf       	out	0x3e, r29	; 62
    81de:	0f be       	out	0x3f, r0	; 63
    81e0:	cd bf       	out	0x3d, r28	; 61
    81e2:	df 91       	pop	r29
    81e4:	cf 91       	pop	r28
    81e6:	08 95       	ret

000081e8 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf>:
				
				void setZAntiWindupGain(float val)
    81e8:	cf 93       	push	r28
    81ea:	df 93       	push	r29
    81ec:	00 d0       	rcall	.+0      	; 0x81ee <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf+0x6>
    81ee:	00 d0       	rcall	.+0      	; 0x81f0 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf+0x8>
    81f0:	cd b7       	in	r28, 0x3d	; 61
    81f2:	de b7       	in	r29, 0x3e	; 62
    81f4:	9a 83       	std	Y+2, r25	; 0x02
    81f6:	89 83       	std	Y+1, r24	; 0x01
    81f8:	4b 83       	std	Y+3, r20	; 0x03
    81fa:	5c 83       	std	Y+4, r21	; 0x04
    81fc:	6d 83       	std	Y+5, r22	; 0x05
    81fe:	7e 83       	std	Y+6, r23	; 0x06
				{
					zAntiWindupGain = val;
    8200:	89 81       	ldd	r24, Y+1	; 0x01
    8202:	9a 81       	ldd	r25, Y+2	; 0x02
    8204:	9c 01       	movw	r18, r24
    8206:	22 5b       	subi	r18, 0xB2	; 178
    8208:	3f 4f       	sbci	r19, 0xFF	; 255
    820a:	8b 81       	ldd	r24, Y+3	; 0x03
    820c:	9c 81       	ldd	r25, Y+4	; 0x04
    820e:	ad 81       	ldd	r26, Y+5	; 0x05
    8210:	be 81       	ldd	r27, Y+6	; 0x06
    8212:	f9 01       	movw	r30, r18
    8214:	80 83       	st	Z, r24
    8216:	91 83       	std	Z+1, r25	; 0x01
    8218:	a2 83       	std	Z+2, r26	; 0x02
    821a:	b3 83       	std	Z+3, r27	; 0x03
				}
    821c:	26 96       	adiw	r28, 0x06	; 6
    821e:	0f b6       	in	r0, 0x3f	; 63
    8220:	f8 94       	cli
    8222:	de bf       	out	0x3e, r29	; 62
    8224:	0f be       	out	0x3f, r0	; 63
    8226:	cd bf       	out	0x3d, r28	; 61
    8228:	df 91       	pop	r29
    822a:	cf 91       	pop	r28
    822c:	08 95       	ret

0000822e <_ZN10helicopter5tasks16SimTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEPNS_10controller13PIDControllerEii>:
#include "SyncMessage.h"

using namespace helicopter::tasks;
using namespace helicopter::messages;

SimTelemetryTask::SimTelemetryTask(GroundControlStationInterface *radioInterface, SystemModel *model, PIDController *pidController, int delay, int period) :
    822e:	ef 92       	push	r14
    8230:	ff 92       	push	r15
    8232:	0f 93       	push	r16
    8234:	1f 93       	push	r17
    8236:	cf 93       	push	r28
    8238:	df 93       	push	r29
    823a:	cd b7       	in	r28, 0x3d	; 61
    823c:	de b7       	in	r29, 0x3e	; 62
    823e:	2c 97       	sbiw	r28, 0x0c	; 12
    8240:	0f b6       	in	r0, 0x3f	; 63
    8242:	f8 94       	cli
    8244:	de bf       	out	0x3e, r29	; 62
    8246:	0f be       	out	0x3f, r0	; 63
    8248:	cd bf       	out	0x3d, r28	; 61
    824a:	9a 83       	std	Y+2, r25	; 0x02
    824c:	89 83       	std	Y+1, r24	; 0x01
    824e:	7c 83       	std	Y+4, r23	; 0x04
    8250:	6b 83       	std	Y+3, r22	; 0x03
    8252:	5e 83       	std	Y+6, r21	; 0x06
    8254:	4d 83       	std	Y+5, r20	; 0x05
    8256:	38 87       	std	Y+8, r19	; 0x08
    8258:	2f 83       	std	Y+7, r18	; 0x07
    825a:	1a 87       	std	Y+10, r17	; 0x0a
    825c:	09 87       	std	Y+9, r16	; 0x09
    825e:	fc 86       	std	Y+12, r15	; 0x0c
    8260:	eb 86       	std	Y+11, r14	; 0x0b
	Task(delay, period),
	radioInterface(radioInterface),
	model(model),
	pidController(pidController)
    8262:	89 81       	ldd	r24, Y+1	; 0x01
    8264:	9a 81       	ldd	r25, Y+2	; 0x02
    8266:	4b 85       	ldd	r20, Y+11	; 0x0b
    8268:	5c 85       	ldd	r21, Y+12	; 0x0c
    826a:	29 85       	ldd	r18, Y+9	; 0x09
    826c:	3a 85       	ldd	r19, Y+10	; 0x0a
    826e:	b9 01       	movw	r22, r18
    8270:	0e 94 fc 43 	call	0x87f8	; 0x87f8 <_ZN10helicopter5tasks4TaskC1Eii>
    8274:	89 81       	ldd	r24, Y+1	; 0x01
    8276:	9a 81       	ldd	r25, Y+2	; 0x02
    8278:	24 e7       	ldi	r18, 0x74	; 116
    827a:	32 e0       	ldi	r19, 0x02	; 2
    827c:	fc 01       	movw	r30, r24
    827e:	31 83       	std	Z+1, r19	; 0x01
    8280:	20 83       	st	Z, r18
    8282:	89 81       	ldd	r24, Y+1	; 0x01
    8284:	9a 81       	ldd	r25, Y+2	; 0x02
    8286:	2b 81       	ldd	r18, Y+3	; 0x03
    8288:	3c 81       	ldd	r19, Y+4	; 0x04
    828a:	fc 01       	movw	r30, r24
    828c:	30 87       	std	Z+8, r19	; 0x08
    828e:	27 83       	std	Z+7, r18	; 0x07
    8290:	89 81       	ldd	r24, Y+1	; 0x01
    8292:	9a 81       	ldd	r25, Y+2	; 0x02
    8294:	2d 81       	ldd	r18, Y+5	; 0x05
    8296:	3e 81       	ldd	r19, Y+6	; 0x06
    8298:	fc 01       	movw	r30, r24
    829a:	32 87       	std	Z+10, r19	; 0x0a
    829c:	21 87       	std	Z+9, r18	; 0x09
    829e:	89 81       	ldd	r24, Y+1	; 0x01
    82a0:	9a 81       	ldd	r25, Y+2	; 0x02
    82a2:	2f 81       	ldd	r18, Y+7	; 0x07
    82a4:	38 85       	ldd	r19, Y+8	; 0x08
    82a6:	fc 01       	movw	r30, r24
    82a8:	34 87       	std	Z+12, r19	; 0x0c
    82aa:	23 87       	std	Z+11, r18	; 0x0b
{
	
}
    82ac:	2c 96       	adiw	r28, 0x0c	; 12
    82ae:	0f b6       	in	r0, 0x3f	; 63
    82b0:	f8 94       	cli
    82b2:	de bf       	out	0x3e, r29	; 62
    82b4:	0f be       	out	0x3f, r0	; 63
    82b6:	cd bf       	out	0x3d, r28	; 61
    82b8:	df 91       	pop	r29
    82ba:	cf 91       	pop	r28
    82bc:	1f 91       	pop	r17
    82be:	0f 91       	pop	r16
    82c0:	ff 90       	pop	r15
    82c2:	ef 90       	pop	r14
    82c4:	08 95       	ret

000082c6 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv>:

void SimTelemetryTask::runTaskImpl() 
{
    82c6:	cf 93       	push	r28
    82c8:	df 93       	push	r29
    82ca:	cd b7       	in	r28, 0x3d	; 61
    82cc:	de b7       	in	r29, 0x3e	; 62
    82ce:	2d 97       	sbiw	r28, 0x0d	; 13
    82d0:	0f b6       	in	r0, 0x3f	; 63
    82d2:	f8 94       	cli
    82d4:	de bf       	out	0x3e, r29	; 62
    82d6:	0f be       	out	0x3f, r0	; 63
    82d8:	cd bf       	out	0x3d, r28	; 61
    82da:	9d 87       	std	Y+13, r25	; 0x0d
    82dc:	8c 87       	std	Y+12, r24	; 0x0c
	
	//Send sync message to indicate to the ground control station that we are ready to receive data.
	//Without this sync message, the GCS could send data while the FC is asleep, which would cause the data
	//to overflow the usart buffer.
	SyncMessage syncMsg;
    82de:	ce 01       	movw	r24, r28
    82e0:	05 96       	adiw	r24, 0x05	; 5
    82e2:	0e 94 63 29 	call	0x52c6	; 0x52c6 <_ZN10helicopter8messages11SyncMessageC1Ev>
	
	int status = radioInterface->transmit(&syncMsg);
    82e6:	8c 85       	ldd	r24, Y+12	; 0x0c
    82e8:	9d 85       	ldd	r25, Y+13	; 0x0d
    82ea:	fc 01       	movw	r30, r24
    82ec:	87 81       	ldd	r24, Z+7	; 0x07
    82ee:	90 85       	ldd	r25, Z+8	; 0x08
    82f0:	9e 01       	movw	r18, r28
    82f2:	2b 5f       	subi	r18, 0xFB	; 251
    82f4:	3f 4f       	sbci	r19, 0xFF	; 255
    82f6:	b9 01       	movw	r22, r18
    82f8:	0e 94 e7 22 	call	0x45ce	; 0x45ce <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>
    82fc:	9a 83       	std	Y+2, r25	; 0x02
    82fe:	89 83       	std	Y+1, r24	; 0x01
	
	if (status == 0)
    8300:	89 81       	ldd	r24, Y+1	; 0x01
    8302:	9a 81       	ldd	r25, Y+2	; 0x02
    8304:	00 97       	sbiw	r24, 0x00	; 0
    8306:	09 f0       	breq	.+2      	; 0x830a <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x44>
    8308:	ac c1       	rjmp	.+856    	; 0x8662 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x39c>
	{
	
		//Use the radio interface to get the telemetry message from the simulator
		Message *message = NULL;
    830a:	1b 86       	std	Y+11, r1	; 0x0b
    830c:	1a 86       	std	Y+10, r1	; 0x0a
	
		status = radioInterface->receive(message);
    830e:	8c 85       	ldd	r24, Y+12	; 0x0c
    8310:	9d 85       	ldd	r25, Y+13	; 0x0d
    8312:	fc 01       	movw	r30, r24
    8314:	87 81       	ldd	r24, Z+7	; 0x07
    8316:	90 85       	ldd	r25, Z+8	; 0x08
    8318:	9e 01       	movw	r18, r28
    831a:	26 5f       	subi	r18, 0xF6	; 246
    831c:	3f 4f       	sbci	r19, 0xFF	; 255
    831e:	b9 01       	movw	r22, r18
    8320:	0e 94 e5 23 	call	0x47ca	; 0x47ca <_ZN10helicopter10interfaces29GroundControlStationInterface7receiveERPNS_8messages7MessageE>
    8324:	9a 83       	std	Y+2, r25	; 0x02
    8326:	89 83       	std	Y+1, r24	; 0x01
	
		if (status == 0 && message != NULL)
    8328:	89 81       	ldd	r24, Y+1	; 0x01
    832a:	9a 81       	ldd	r25, Y+2	; 0x02
    832c:	00 97       	sbiw	r24, 0x00	; 0
    832e:	09 f0       	breq	.+2      	; 0x8332 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x6c>
    8330:	98 c1       	rjmp	.+816    	; 0x8662 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x39c>
    8332:	8a 85       	ldd	r24, Y+10	; 0x0a
    8334:	9b 85       	ldd	r25, Y+11	; 0x0b
    8336:	00 97       	sbiw	r24, 0x00	; 0
    8338:	09 f4       	brne	.+2      	; 0x833c <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x76>
    833a:	93 c1       	rjmp	.+806    	; 0x8662 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x39c>
		{
			SystemTelemetryMessage *telemMsg = (SystemTelemetryMessage*) message;
    833c:	8a 85       	ldd	r24, Y+10	; 0x0a
    833e:	9b 85       	ldd	r25, Y+11	; 0x0b
    8340:	9c 83       	std	Y+4, r25	; 0x04
    8342:	8b 83       	std	Y+3, r24	; 0x03
			
			//Update the model using the new data received from the simulator.
			telemMsg->updateModelFromMessageFromSimulator(model);
    8344:	8c 85       	ldd	r24, Y+12	; 0x0c
    8346:	9d 85       	ldd	r25, Y+13	; 0x0d
    8348:	fc 01       	movw	r30, r24
    834a:	21 85       	ldd	r18, Z+9	; 0x09
    834c:	32 85       	ldd	r19, Z+10	; 0x0a
    834e:	8b 81       	ldd	r24, Y+3	; 0x03
    8350:	9c 81       	ldd	r25, Y+4	; 0x04
    8352:	b9 01       	movw	r22, r18
    8354:	0e 94 f9 38 	call	0x71f2	; 0x71f2 <_ZN10helicopter8messages22SystemTelemetryMessage35updateModelFromMessageFromSimulatorEPNS_5model11SystemModelE>
			
			pidController->setYawIntegralGain(telemMsg->YawIntegralGain);
    8358:	8b 81       	ldd	r24, Y+3	; 0x03
    835a:	9c 81       	ldd	r25, Y+4	; 0x04
    835c:	fc 01       	movw	r30, r24
    835e:	85 8d       	ldd	r24, Z+29	; 0x1d
    8360:	96 8d       	ldd	r25, Z+30	; 0x1e
    8362:	a7 8d       	ldd	r26, Z+31	; 0x1f
    8364:	b0 a1       	ldd	r27, Z+32	; 0x20
    8366:	2c 85       	ldd	r18, Y+12	; 0x0c
    8368:	3d 85       	ldd	r19, Y+13	; 0x0d
    836a:	f9 01       	movw	r30, r18
    836c:	23 85       	ldd	r18, Z+11	; 0x0b
    836e:	34 85       	ldd	r19, Z+12	; 0x0c
    8370:	ac 01       	movw	r20, r24
    8372:	bd 01       	movw	r22, r26
    8374:	c9 01       	movw	r24, r18
    8376:	0e 94 82 1d 	call	0x3b04	; 0x3b04 <_ZN10helicopter10controller13PIDController18setYawIntegralGainEf>
			pidController->setYawDerivativeGain(telemMsg->YawDerivativeGain);
    837a:	8b 81       	ldd	r24, Y+3	; 0x03
    837c:	9c 81       	ldd	r25, Y+4	; 0x04
    837e:	fc 01       	movw	r30, r24
    8380:	81 a1       	ldd	r24, Z+33	; 0x21
    8382:	92 a1       	ldd	r25, Z+34	; 0x22
    8384:	a3 a1       	ldd	r26, Z+35	; 0x23
    8386:	b4 a1       	ldd	r27, Z+36	; 0x24
    8388:	2c 85       	ldd	r18, Y+12	; 0x0c
    838a:	3d 85       	ldd	r19, Y+13	; 0x0d
    838c:	f9 01       	movw	r30, r18
    838e:	23 85       	ldd	r18, Z+11	; 0x0b
    8390:	34 85       	ldd	r19, Z+12	; 0x0c
    8392:	ac 01       	movw	r20, r24
    8394:	bd 01       	movw	r22, r26
    8396:	c9 01       	movw	r24, r18
    8398:	0e 94 a2 1d 	call	0x3b44	; 0x3b44 <_ZN10helicopter10controller13PIDController20setYawDerivativeGainEf>
			pidController->setYawProportionalGain(telemMsg->YawProportionalGain);
    839c:	8b 81       	ldd	r24, Y+3	; 0x03
    839e:	9c 81       	ldd	r25, Y+4	; 0x04
    83a0:	fc 01       	movw	r30, r24
    83a2:	85 a1       	ldd	r24, Z+37	; 0x25
    83a4:	96 a1       	ldd	r25, Z+38	; 0x26
    83a6:	a7 a1       	ldd	r26, Z+39	; 0x27
    83a8:	b0 a5       	ldd	r27, Z+40	; 0x28
    83aa:	2c 85       	ldd	r18, Y+12	; 0x0c
    83ac:	3d 85       	ldd	r19, Y+13	; 0x0d
    83ae:	f9 01       	movw	r30, r18
    83b0:	23 85       	ldd	r18, Z+11	; 0x0b
    83b2:	34 85       	ldd	r19, Z+12	; 0x0c
    83b4:	ac 01       	movw	r20, r24
    83b6:	bd 01       	movw	r22, r26
    83b8:	c9 01       	movw	r24, r18
    83ba:	0e 94 62 1d 	call	0x3ac4	; 0x3ac4 <_ZN10helicopter10controller13PIDController22setYawProportionalGainEf>
			pidController->setYawAntiWindupGain(telemMsg->YawAntiWindupGain);
    83be:	8b 81       	ldd	r24, Y+3	; 0x03
    83c0:	9c 81       	ldd	r25, Y+4	; 0x04
    83c2:	fc 01       	movw	r30, r24
    83c4:	81 a5       	ldd	r24, Z+41	; 0x29
    83c6:	92 a5       	ldd	r25, Z+42	; 0x2a
    83c8:	a3 a5       	ldd	r26, Z+43	; 0x2b
    83ca:	b4 a5       	ldd	r27, Z+44	; 0x2c
    83cc:	2c 85       	ldd	r18, Y+12	; 0x0c
    83ce:	3d 85       	ldd	r19, Y+13	; 0x0d
    83d0:	f9 01       	movw	r30, r18
    83d2:	23 85       	ldd	r18, Z+11	; 0x0b
    83d4:	34 85       	ldd	r19, Z+12	; 0x0c
    83d6:	ac 01       	movw	r20, r24
    83d8:	bd 01       	movw	r22, r26
    83da:	c9 01       	movw	r24, r18
    83dc:	0e 94 e5 1d 	call	0x3bca	; 0x3bca <_ZN10helicopter10controller13PIDController20setYawAntiWindupGainEf>
		
			pidController->setXIntegralGain(telemMsg->XIntegralGain);
    83e0:	8b 81       	ldd	r24, Y+3	; 0x03
    83e2:	9c 81       	ldd	r25, Y+4	; 0x04
    83e4:	87 5b       	subi	r24, 0xB7	; 183
    83e6:	9f 4f       	sbci	r25, 0xFF	; 255
    83e8:	fc 01       	movw	r30, r24
    83ea:	80 81       	ld	r24, Z
    83ec:	91 81       	ldd	r25, Z+1	; 0x01
    83ee:	a2 81       	ldd	r26, Z+2	; 0x02
    83f0:	b3 81       	ldd	r27, Z+3	; 0x03
    83f2:	2c 85       	ldd	r18, Y+12	; 0x0c
    83f4:	3d 85       	ldd	r19, Y+13	; 0x0d
    83f6:	f9 01       	movw	r30, r18
    83f8:	23 85       	ldd	r18, Z+11	; 0x0b
    83fa:	34 85       	ldd	r19, Z+12	; 0x0c
    83fc:	ac 01       	movw	r20, r24
    83fe:	bd 01       	movw	r22, r26
    8400:	c9 01       	movw	r24, r18
    8402:	0e 94 81 1a 	call	0x3502	; 0x3502 <_ZN10helicopter10controller13PIDController16setXIntegralGainEf>
			pidController->setXDerivativeGain(telemMsg->XDerivativeGain);
    8406:	8b 81       	ldd	r24, Y+3	; 0x03
    8408:	9c 81       	ldd	r25, Y+4	; 0x04
    840a:	83 5b       	subi	r24, 0xB3	; 179
    840c:	9f 4f       	sbci	r25, 0xFF	; 255
    840e:	fc 01       	movw	r30, r24
    8410:	80 81       	ld	r24, Z
    8412:	91 81       	ldd	r25, Z+1	; 0x01
    8414:	a2 81       	ldd	r26, Z+2	; 0x02
    8416:	b3 81       	ldd	r27, Z+3	; 0x03
    8418:	2c 85       	ldd	r18, Y+12	; 0x0c
    841a:	3d 85       	ldd	r19, Y+13	; 0x0d
    841c:	f9 01       	movw	r30, r18
    841e:	23 85       	ldd	r18, Z+11	; 0x0b
    8420:	34 85       	ldd	r19, Z+12	; 0x0c
    8422:	ac 01       	movw	r20, r24
    8424:	bd 01       	movw	r22, r26
    8426:	c9 01       	movw	r24, r18
    8428:	0e 94 a1 1a 	call	0x3542	; 0x3542 <_ZN10helicopter10controller13PIDController18setXDerivativeGainEf>
			pidController->setXProportionalGain(telemMsg->XProportionalGain);
    842c:	8b 81       	ldd	r24, Y+3	; 0x03
    842e:	9c 81       	ldd	r25, Y+4	; 0x04
    8430:	8f 5a       	subi	r24, 0xAF	; 175
    8432:	9f 4f       	sbci	r25, 0xFF	; 255
    8434:	fc 01       	movw	r30, r24
    8436:	80 81       	ld	r24, Z
    8438:	91 81       	ldd	r25, Z+1	; 0x01
    843a:	a2 81       	ldd	r26, Z+2	; 0x02
    843c:	b3 81       	ldd	r27, Z+3	; 0x03
    843e:	2c 85       	ldd	r18, Y+12	; 0x0c
    8440:	3d 85       	ldd	r19, Y+13	; 0x0d
    8442:	f9 01       	movw	r30, r18
    8444:	23 85       	ldd	r18, Z+11	; 0x0b
    8446:	34 85       	ldd	r19, Z+12	; 0x0c
    8448:	ac 01       	movw	r20, r24
    844a:	bd 01       	movw	r22, r26
    844c:	c9 01       	movw	r24, r18
    844e:	0e 94 c1 1a 	call	0x3582	; 0x3582 <_ZN10helicopter10controller13PIDController20setXProportionalGainEf>
			pidController->setXAntiWindupGain(telemMsg->XAntiWindupGain);
    8452:	8b 81       	ldd	r24, Y+3	; 0x03
    8454:	9c 81       	ldd	r25, Y+4	; 0x04
    8456:	8b 5a       	subi	r24, 0xAB	; 171
    8458:	9f 4f       	sbci	r25, 0xFF	; 255
    845a:	fc 01       	movw	r30, r24
    845c:	80 81       	ld	r24, Z
    845e:	91 81       	ldd	r25, Z+1	; 0x01
    8460:	a2 81       	ldd	r26, Z+2	; 0x02
    8462:	b3 81       	ldd	r27, Z+3	; 0x03
    8464:	2c 85       	ldd	r18, Y+12	; 0x0c
    8466:	3d 85       	ldd	r19, Y+13	; 0x0d
    8468:	f9 01       	movw	r30, r18
    846a:	23 85       	ldd	r18, Z+11	; 0x0b
    846c:	34 85       	ldd	r19, Z+12	; 0x0c
    846e:	ac 01       	movw	r20, r24
    8470:	bd 01       	movw	r22, r26
    8472:	c9 01       	movw	r24, r18
    8474:	0e 94 e1 1a 	call	0x35c2	; 0x35c2 <_ZN10helicopter10controller13PIDController18setXAntiWindupGainEf>
			pidController->setLongitudeInnerLoopGain(telemMsg->LongitudeInnerLoopGain);
    8478:	8b 81       	ldd	r24, Y+3	; 0x03
    847a:	9c 81       	ldd	r25, Y+4	; 0x04
    847c:	87 5a       	subi	r24, 0xA7	; 167
    847e:	9f 4f       	sbci	r25, 0xFF	; 255
    8480:	fc 01       	movw	r30, r24
    8482:	80 81       	ld	r24, Z
    8484:	91 81       	ldd	r25, Z+1	; 0x01
    8486:	a2 81       	ldd	r26, Z+2	; 0x02
    8488:	b3 81       	ldd	r27, Z+3	; 0x03
    848a:	2c 85       	ldd	r18, Y+12	; 0x0c
    848c:	3d 85       	ldd	r19, Y+13	; 0x0d
    848e:	f9 01       	movw	r30, r18
    8490:	23 85       	ldd	r18, Z+11	; 0x0b
    8492:	34 85       	ldd	r19, Z+12	; 0x0c
    8494:	ac 01       	movw	r20, r24
    8496:	bd 01       	movw	r22, r26
    8498:	c9 01       	movw	r24, r18
    849a:	0e 94 01 1b 	call	0x3602	; 0x3602 <_ZN10helicopter10controller13PIDController25setLongitudeInnerLoopGainEf>
			pidController->setPitchAngularVelocityGain(telemMsg->PitchAngularVelocityGain);
    849e:	8b 81       	ldd	r24, Y+3	; 0x03
    84a0:	9c 81       	ldd	r25, Y+4	; 0x04
    84a2:	8b 59       	subi	r24, 0x9B	; 155
    84a4:	9f 4f       	sbci	r25, 0xFF	; 255
    84a6:	fc 01       	movw	r30, r24
    84a8:	80 81       	ld	r24, Z
    84aa:	91 81       	ldd	r25, Z+1	; 0x01
    84ac:	a2 81       	ldd	r26, Z+2	; 0x02
    84ae:	b3 81       	ldd	r27, Z+3	; 0x03
    84b0:	2c 85       	ldd	r18, Y+12	; 0x0c
    84b2:	3d 85       	ldd	r19, Y+13	; 0x0d
    84b4:	f9 01       	movw	r30, r18
    84b6:	23 85       	ldd	r18, Z+11	; 0x0b
    84b8:	34 85       	ldd	r19, Z+12	; 0x0c
    84ba:	ac 01       	movw	r20, r24
    84bc:	bd 01       	movw	r22, r26
    84be:	c9 01       	movw	r24, r18
    84c0:	0e 94 21 1b 	call	0x3642	; 0x3642 <_ZN10helicopter10controller13PIDController27setPitchAngularVelocityGainEf>
				
			pidController->setYIntegralGain(telemMsg->YIntegralGain);
    84c4:	8b 81       	ldd	r24, Y+3	; 0x03
    84c6:	9c 81       	ldd	r25, Y+4	; 0x04
    84c8:	8b 57       	subi	r24, 0x7B	; 123
    84ca:	9f 4f       	sbci	r25, 0xFF	; 255
    84cc:	fc 01       	movw	r30, r24
    84ce:	80 81       	ld	r24, Z
    84d0:	91 81       	ldd	r25, Z+1	; 0x01
    84d2:	a2 81       	ldd	r26, Z+2	; 0x02
    84d4:	b3 81       	ldd	r27, Z+3	; 0x03
    84d6:	2c 85       	ldd	r18, Y+12	; 0x0c
    84d8:	3d 85       	ldd	r19, Y+13	; 0x0d
    84da:	f9 01       	movw	r30, r18
    84dc:	23 85       	ldd	r18, Z+11	; 0x0b
    84de:	34 85       	ldd	r19, Z+12	; 0x0c
    84e0:	ac 01       	movw	r20, r24
    84e2:	bd 01       	movw	r22, r26
    84e4:	c9 01       	movw	r24, r18
    84e6:	0e 94 87 1b 	call	0x370e	; 0x370e <_ZN10helicopter10controller13PIDController16setYIntegralGainEf>
			pidController->setYDerivativeGain(telemMsg->YDerivativeGain);
    84ea:	8b 81       	ldd	r24, Y+3	; 0x03
    84ec:	9c 81       	ldd	r25, Y+4	; 0x04
    84ee:	87 57       	subi	r24, 0x77	; 119
    84f0:	9f 4f       	sbci	r25, 0xFF	; 255
    84f2:	fc 01       	movw	r30, r24
    84f4:	80 81       	ld	r24, Z
    84f6:	91 81       	ldd	r25, Z+1	; 0x01
    84f8:	a2 81       	ldd	r26, Z+2	; 0x02
    84fa:	b3 81       	ldd	r27, Z+3	; 0x03
    84fc:	2c 85       	ldd	r18, Y+12	; 0x0c
    84fe:	3d 85       	ldd	r19, Y+13	; 0x0d
    8500:	f9 01       	movw	r30, r18
    8502:	23 85       	ldd	r18, Z+11	; 0x0b
    8504:	34 85       	ldd	r19, Z+12	; 0x0c
    8506:	ac 01       	movw	r20, r24
    8508:	bd 01       	movw	r22, r26
    850a:	c9 01       	movw	r24, r18
    850c:	0e 94 a7 1b 	call	0x374e	; 0x374e <_ZN10helicopter10controller13PIDController18setYDerivativeGainEf>
			pidController->setYProportionalGain(telemMsg->YProportionalGain);
    8510:	8b 81       	ldd	r24, Y+3	; 0x03
    8512:	9c 81       	ldd	r25, Y+4	; 0x04
    8514:	83 57       	subi	r24, 0x73	; 115
    8516:	9f 4f       	sbci	r25, 0xFF	; 255
    8518:	fc 01       	movw	r30, r24
    851a:	80 81       	ld	r24, Z
    851c:	91 81       	ldd	r25, Z+1	; 0x01
    851e:	a2 81       	ldd	r26, Z+2	; 0x02
    8520:	b3 81       	ldd	r27, Z+3	; 0x03
    8522:	2c 85       	ldd	r18, Y+12	; 0x0c
    8524:	3d 85       	ldd	r19, Y+13	; 0x0d
    8526:	f9 01       	movw	r30, r18
    8528:	23 85       	ldd	r18, Z+11	; 0x0b
    852a:	34 85       	ldd	r19, Z+12	; 0x0c
    852c:	ac 01       	movw	r20, r24
    852e:	bd 01       	movw	r22, r26
    8530:	c9 01       	movw	r24, r18
    8532:	0e 94 c7 1b 	call	0x378e	; 0x378e <_ZN10helicopter10controller13PIDController20setYProportionalGainEf>
			pidController->setYAntiWindupGain(telemMsg->YAntiWindupGain);
    8536:	8b 81       	ldd	r24, Y+3	; 0x03
    8538:	9c 81       	ldd	r25, Y+4	; 0x04
    853a:	8f 56       	subi	r24, 0x6F	; 111
    853c:	9f 4f       	sbci	r25, 0xFF	; 255
    853e:	fc 01       	movw	r30, r24
    8540:	80 81       	ld	r24, Z
    8542:	91 81       	ldd	r25, Z+1	; 0x01
    8544:	a2 81       	ldd	r26, Z+2	; 0x02
    8546:	b3 81       	ldd	r27, Z+3	; 0x03
    8548:	2c 85       	ldd	r18, Y+12	; 0x0c
    854a:	3d 85       	ldd	r19, Y+13	; 0x0d
    854c:	f9 01       	movw	r30, r18
    854e:	23 85       	ldd	r18, Z+11	; 0x0b
    8550:	34 85       	ldd	r19, Z+12	; 0x0c
    8552:	ac 01       	movw	r20, r24
    8554:	bd 01       	movw	r22, r26
    8556:	c9 01       	movw	r24, r18
    8558:	0e 94 e7 1b 	call	0x37ce	; 0x37ce <_ZN10helicopter10controller13PIDController18setYAntiWindupGainEf>
			pidController->setLateralInnerLoopGain(telemMsg->LateralInnerLoopGain);
    855c:	8b 81       	ldd	r24, Y+3	; 0x03
    855e:	9c 81       	ldd	r25, Y+4	; 0x04
    8560:	8b 56       	subi	r24, 0x6B	; 107
    8562:	9f 4f       	sbci	r25, 0xFF	; 255
    8564:	fc 01       	movw	r30, r24
    8566:	80 81       	ld	r24, Z
    8568:	91 81       	ldd	r25, Z+1	; 0x01
    856a:	a2 81       	ldd	r26, Z+2	; 0x02
    856c:	b3 81       	ldd	r27, Z+3	; 0x03
    856e:	2c 85       	ldd	r18, Y+12	; 0x0c
    8570:	3d 85       	ldd	r19, Y+13	; 0x0d
    8572:	f9 01       	movw	r30, r18
    8574:	23 85       	ldd	r18, Z+11	; 0x0b
    8576:	34 85       	ldd	r19, Z+12	; 0x0c
    8578:	ac 01       	movw	r20, r24
    857a:	bd 01       	movw	r22, r26
    857c:	c9 01       	movw	r24, r18
    857e:	0e 94 07 1c 	call	0x380e	; 0x380e <_ZN10helicopter10controller13PIDController23setLateralInnerLoopGainEf>
			pidController->setRollAngularVelocityGain(telemMsg->RollAngularVelocityGain);
    8582:	8b 81       	ldd	r24, Y+3	; 0x03
    8584:	9c 81       	ldd	r25, Y+4	; 0x04
    8586:	8f 55       	subi	r24, 0x5F	; 95
    8588:	9f 4f       	sbci	r25, 0xFF	; 255
    858a:	fc 01       	movw	r30, r24
    858c:	80 81       	ld	r24, Z
    858e:	91 81       	ldd	r25, Z+1	; 0x01
    8590:	a2 81       	ldd	r26, Z+2	; 0x02
    8592:	b3 81       	ldd	r27, Z+3	; 0x03
    8594:	2c 85       	ldd	r18, Y+12	; 0x0c
    8596:	3d 85       	ldd	r19, Y+13	; 0x0d
    8598:	f9 01       	movw	r30, r18
    859a:	23 85       	ldd	r18, Z+11	; 0x0b
    859c:	34 85       	ldd	r19, Z+12	; 0x0c
    859e:	ac 01       	movw	r20, r24
    85a0:	bd 01       	movw	r22, r26
    85a2:	c9 01       	movw	r24, r18
    85a4:	0e 94 27 1c 	call	0x384e	; 0x384e <_ZN10helicopter10controller13PIDController26setRollAngularVelocityGainEf>
			
			pidController->setZIntegralGain(telemMsg->ZIntegralGain);
    85a8:	8b 81       	ldd	r24, Y+3	; 0x03
    85aa:	9c 81       	ldd	r25, Y+4	; 0x04
    85ac:	83 54       	subi	r24, 0x43	; 67
    85ae:	9f 4f       	sbci	r25, 0xFF	; 255
    85b0:	fc 01       	movw	r30, r24
    85b2:	80 81       	ld	r24, Z
    85b4:	91 81       	ldd	r25, Z+1	; 0x01
    85b6:	a2 81       	ldd	r26, Z+2	; 0x02
    85b8:	b3 81       	ldd	r27, Z+3	; 0x03
    85ba:	2c 85       	ldd	r18, Y+12	; 0x0c
    85bc:	3d 85       	ldd	r19, Y+13	; 0x0d
    85be:	f9 01       	movw	r30, r18
    85c0:	23 85       	ldd	r18, Z+11	; 0x0b
    85c2:	34 85       	ldd	r19, Z+12	; 0x0c
    85c4:	ac 01       	movw	r20, r24
    85c6:	bd 01       	movw	r22, r26
    85c8:	c9 01       	movw	r24, r18
    85ca:	0e 94 8b 40 	call	0x8116	; 0x8116 <_ZN10helicopter10controller13PIDController16setZIntegralGainEf>
			pidController->setZDerivativeGain(telemMsg->ZDerivativeGain);
    85ce:	8b 81       	ldd	r24, Y+3	; 0x03
    85d0:	9c 81       	ldd	r25, Y+4	; 0x04
    85d2:	8f 53       	subi	r24, 0x3F	; 63
    85d4:	9f 4f       	sbci	r25, 0xFF	; 255
    85d6:	fc 01       	movw	r30, r24
    85d8:	80 81       	ld	r24, Z
    85da:	91 81       	ldd	r25, Z+1	; 0x01
    85dc:	a2 81       	ldd	r26, Z+2	; 0x02
    85de:	b3 81       	ldd	r27, Z+3	; 0x03
    85e0:	2c 85       	ldd	r18, Y+12	; 0x0c
    85e2:	3d 85       	ldd	r19, Y+13	; 0x0d
    85e4:	f9 01       	movw	r30, r18
    85e6:	23 85       	ldd	r18, Z+11	; 0x0b
    85e8:	34 85       	ldd	r19, Z+12	; 0x0c
    85ea:	ac 01       	movw	r20, r24
    85ec:	bd 01       	movw	r22, r26
    85ee:	c9 01       	movw	r24, r18
    85f0:	0e 94 ae 40 	call	0x815c	; 0x815c <_ZN10helicopter10controller13PIDController18setZDerivativeGainEf>
			pidController->setZProportionalGain(telemMsg->ZProportionalGain);
    85f4:	8b 81       	ldd	r24, Y+3	; 0x03
    85f6:	9c 81       	ldd	r25, Y+4	; 0x04
    85f8:	8b 53       	subi	r24, 0x3B	; 59
    85fa:	9f 4f       	sbci	r25, 0xFF	; 255
    85fc:	fc 01       	movw	r30, r24
    85fe:	80 81       	ld	r24, Z
    8600:	91 81       	ldd	r25, Z+1	; 0x01
    8602:	a2 81       	ldd	r26, Z+2	; 0x02
    8604:	b3 81       	ldd	r27, Z+3	; 0x03
    8606:	2c 85       	ldd	r18, Y+12	; 0x0c
    8608:	3d 85       	ldd	r19, Y+13	; 0x0d
    860a:	f9 01       	movw	r30, r18
    860c:	23 85       	ldd	r18, Z+11	; 0x0b
    860e:	34 85       	ldd	r19, Z+12	; 0x0c
    8610:	ac 01       	movw	r20, r24
    8612:	bd 01       	movw	r22, r26
    8614:	c9 01       	movw	r24, r18
    8616:	0e 94 d1 40 	call	0x81a2	; 0x81a2 <_ZN10helicopter10controller13PIDController20setZProportionalGainEf>
			pidController->setZAntiWindupGain(telemMsg->ZAntiWindupGain);															
    861a:	8b 81       	ldd	r24, Y+3	; 0x03
    861c:	9c 81       	ldd	r25, Y+4	; 0x04
    861e:	87 53       	subi	r24, 0x37	; 55
    8620:	9f 4f       	sbci	r25, 0xFF	; 255
    8622:	fc 01       	movw	r30, r24
    8624:	80 81       	ld	r24, Z
    8626:	91 81       	ldd	r25, Z+1	; 0x01
    8628:	a2 81       	ldd	r26, Z+2	; 0x02
    862a:	b3 81       	ldd	r27, Z+3	; 0x03
    862c:	2c 85       	ldd	r18, Y+12	; 0x0c
    862e:	3d 85       	ldd	r19, Y+13	; 0x0d
    8630:	f9 01       	movw	r30, r18
    8632:	23 85       	ldd	r18, Z+11	; 0x0b
    8634:	34 85       	ldd	r19, Z+12	; 0x0c
    8636:	ac 01       	movw	r20, r24
    8638:	bd 01       	movw	r22, r26
    863a:	c9 01       	movw	r24, r18
    863c:	0e 94 f4 40 	call	0x81e8	; 0x81e8 <_ZN10helicopter10controller13PIDController18setZAntiWindupGainEf>
		
			delete message;
    8640:	8a 85       	ldd	r24, Y+10	; 0x0a
    8642:	9b 85       	ldd	r25, Y+11	; 0x0b
    8644:	00 97       	sbiw	r24, 0x00	; 0
    8646:	69 f0       	breq	.+26     	; 0x8662 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x39c>
    8648:	8a 85       	ldd	r24, Y+10	; 0x0a
    864a:	9b 85       	ldd	r25, Y+11	; 0x0b
    864c:	fc 01       	movw	r30, r24
    864e:	80 81       	ld	r24, Z
    8650:	91 81       	ldd	r25, Z+1	; 0x01
    8652:	02 96       	adiw	r24, 0x02	; 2
    8654:	fc 01       	movw	r30, r24
    8656:	20 81       	ld	r18, Z
    8658:	31 81       	ldd	r19, Z+1	; 0x01
    865a:	8a 85       	ldd	r24, Y+10	; 0x0a
    865c:	9b 85       	ldd	r25, Y+11	; 0x0b
    865e:	f9 01       	movw	r30, r18
    8660:	19 95       	eicall
		}
	}
	
	//Update instrumentation fields
	switch (status)
    8662:	89 81       	ldd	r24, Y+1	; 0x01
    8664:	9a 81       	ldd	r25, Y+2	; 0x02
    8666:	8e 3f       	cpi	r24, 0xFE	; 254
    8668:	ff ef       	ldi	r31, 0xFF	; 255
    866a:	9f 07       	cpc	r25, r31
    866c:	69 f1       	breq	.+90     	; 0x86c8 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x402>
    866e:	8f 3f       	cpi	r24, 0xFF	; 255
    8670:	2f ef       	ldi	r18, 0xFF	; 255
    8672:	92 07       	cpc	r25, r18
    8674:	54 f4       	brge	.+20     	; 0x868a <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x3c4>
    8676:	8c 3f       	cpi	r24, 0xFC	; 252
    8678:	ef ef       	ldi	r30, 0xFF	; 255
    867a:	9e 07       	cpc	r25, r30
    867c:	09 f4       	brne	.+2      	; 0x8680 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x3ba>
    867e:	52 c0       	rjmp	.+164    	; 0x8724 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x45e>
    8680:	8d 3f       	cpi	r24, 0xFD	; 253
    8682:	ff ef       	ldi	r31, 0xFF	; 255
    8684:	9f 07       	cpc	r25, r31
    8686:	b9 f1       	breq	.+110    	; 0x86f6 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x430>
    8688:	64 c0       	rjmp	.+200    	; 0x8752 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x48c>
    868a:	8f 3f       	cpi	r24, 0xFF	; 255
    868c:	2f ef       	ldi	r18, 0xFF	; 255
    868e:	92 07       	cpc	r25, r18
    8690:	21 f0       	breq	.+8      	; 0x869a <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x3d4>
    8692:	00 97       	sbiw	r24, 0x00	; 0
    8694:	09 f4       	brne	.+2      	; 0x8698 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x3d2>
    8696:	5e c0       	rjmp	.+188    	; 0x8754 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x48e>
    8698:	5c c0       	rjmp	.+184    	; 0x8752 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x48c>
	{
		case 0:
			break;
		case -1:
			model->Timeouts(model->Timeouts() + 1);
    869a:	8c 85       	ldd	r24, Y+12	; 0x0c
    869c:	9d 85       	ldd	r25, Y+13	; 0x0d
    869e:	fc 01       	movw	r30, r24
    86a0:	81 85       	ldd	r24, Z+9	; 0x09
    86a2:	92 85       	ldd	r25, Z+10	; 0x0a
    86a4:	0e 94 60 2d 	call	0x5ac0	; 0x5ac0 <_ZNK10helicopter5model11SystemModel8TimeoutsEv>
    86a8:	dc 01       	movw	r26, r24
    86aa:	cb 01       	movw	r24, r22
    86ac:	01 96       	adiw	r24, 0x01	; 1
    86ae:	a1 1d       	adc	r26, r1
    86b0:	b1 1d       	adc	r27, r1
    86b2:	2c 85       	ldd	r18, Y+12	; 0x0c
    86b4:	3d 85       	ldd	r19, Y+13	; 0x0d
    86b6:	f9 01       	movw	r30, r18
    86b8:	21 85       	ldd	r18, Z+9	; 0x09
    86ba:	32 85       	ldd	r19, Z+10	; 0x0a
    86bc:	ac 01       	movw	r20, r24
    86be:	bd 01       	movw	r22, r26
    86c0:	c9 01       	movw	r24, r18
    86c2:	0e 94 78 2d 	call	0x5af0	; 0x5af0 <_ZN10helicopter5model11SystemModel8TimeoutsEl>
			break;
    86c6:	47 c0       	rjmp	.+142    	; 0x8756 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x490>
		case -2:
			model->SerialCommunicationBufferOverruns(model->SerialCommunicationBufferOverruns() + 1);
    86c8:	8c 85       	ldd	r24, Y+12	; 0x0c
    86ca:	9d 85       	ldd	r25, Y+13	; 0x0d
    86cc:	fc 01       	movw	r30, r24
    86ce:	81 85       	ldd	r24, Z+9	; 0x09
    86d0:	92 85       	ldd	r25, Z+10	; 0x0a
    86d2:	0e 94 11 2e 	call	0x5c22	; 0x5c22 <_ZNK10helicopter5model11SystemModel33SerialCommunicationBufferOverrunsEv>
    86d6:	dc 01       	movw	r26, r24
    86d8:	cb 01       	movw	r24, r22
    86da:	01 96       	adiw	r24, 0x01	; 1
    86dc:	a1 1d       	adc	r26, r1
    86de:	b1 1d       	adc	r27, r1
    86e0:	2c 85       	ldd	r18, Y+12	; 0x0c
    86e2:	3d 85       	ldd	r19, Y+13	; 0x0d
    86e4:	f9 01       	movw	r30, r18
    86e6:	21 85       	ldd	r18, Z+9	; 0x09
    86e8:	32 85       	ldd	r19, Z+10	; 0x0a
    86ea:	ac 01       	movw	r20, r24
    86ec:	bd 01       	movw	r22, r26
    86ee:	c9 01       	movw	r24, r18
    86f0:	0e 94 68 40 	call	0x80d0	; 0x80d0 <_ZN10helicopter5model11SystemModel33SerialCommunicationBufferOverrunsEl>
			break;
    86f4:	30 c0       	rjmp	.+96     	; 0x8756 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x490>
		case -3:
			model->UnrecognizedMsgTypes(model->UnrecognizedMsgTypes() + 1);
    86f6:	8c 85       	ldd	r24, Y+12	; 0x0c
    86f8:	9d 85       	ldd	r25, Y+13	; 0x0d
    86fa:	fc 01       	movw	r30, r24
    86fc:	81 85       	ldd	r24, Z+9	; 0x09
    86fe:	92 85       	ldd	r25, Z+10	; 0x0a
    8700:	0e 94 9b 2d 	call	0x5b36	; 0x5b36 <_ZNK10helicopter5model11SystemModel20UnrecognizedMsgTypesEv>
    8704:	dc 01       	movw	r26, r24
    8706:	cb 01       	movw	r24, r22
    8708:	01 96       	adiw	r24, 0x01	; 1
    870a:	a1 1d       	adc	r26, r1
    870c:	b1 1d       	adc	r27, r1
    870e:	2c 85       	ldd	r18, Y+12	; 0x0c
    8710:	3d 85       	ldd	r19, Y+13	; 0x0d
    8712:	f9 01       	movw	r30, r18
    8714:	21 85       	ldd	r18, Z+9	; 0x09
    8716:	32 85       	ldd	r19, Z+10	; 0x0a
    8718:	ac 01       	movw	r20, r24
    871a:	bd 01       	movw	r22, r26
    871c:	c9 01       	movw	r24, r18
    871e:	0e 94 b3 2d 	call	0x5b66	; 0x5b66 <_ZN10helicopter5model11SystemModel20UnrecognizedMsgTypesEl>
			break;
    8722:	19 c0       	rjmp	.+50     	; 0x8756 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x490>
		case -4:
			model->ChecksumErrors(model->ChecksumErrors() + 1);
    8724:	8c 85       	ldd	r24, Y+12	; 0x0c
    8726:	9d 85       	ldd	r25, Y+13	; 0x0d
    8728:	fc 01       	movw	r30, r24
    872a:	81 85       	ldd	r24, Z+9	; 0x09
    872c:	92 85       	ldd	r25, Z+10	; 0x0a
    872e:	0e 94 d6 2d 	call	0x5bac	; 0x5bac <_ZNK10helicopter5model11SystemModel14ChecksumErrorsEv>
    8732:	dc 01       	movw	r26, r24
    8734:	cb 01       	movw	r24, r22
    8736:	01 96       	adiw	r24, 0x01	; 1
    8738:	a1 1d       	adc	r26, r1
    873a:	b1 1d       	adc	r27, r1
    873c:	2c 85       	ldd	r18, Y+12	; 0x0c
    873e:	3d 85       	ldd	r19, Y+13	; 0x0d
    8740:	f9 01       	movw	r30, r18
    8742:	21 85       	ldd	r18, Z+9	; 0x09
    8744:	32 85       	ldd	r19, Z+10	; 0x0a
    8746:	ac 01       	movw	r20, r24
    8748:	bd 01       	movw	r22, r26
    874a:	c9 01       	movw	r24, r18
    874c:	0e 94 ee 2d 	call	0x5bdc	; 0x5bdc <_ZN10helicopter5model11SystemModel14ChecksumErrorsEl>
		default:
			break;
    8750:	02 c0       	rjmp	.+4      	; 0x8756 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x490>
    8752:	01 c0       	rjmp	.+2      	; 0x8756 <_ZN10helicopter5tasks16SimTelemetryTask11runTaskImplEv+0x490>
	
	//Update instrumentation fields
	switch (status)
	{
		case 0:
			break;
    8754:	00 00       	nop
		case -4:
			model->ChecksumErrors(model->ChecksumErrors() + 1);
		default:
			break;
		
	}
    8756:	ce 01       	movw	r24, r28
    8758:	05 96       	adiw	r24, 0x05	; 5
    875a:	0e 94 7e 29 	call	0x52fc	; 0x52fc <_ZN10helicopter8messages11SyncMessageD1Ev>
}
    875e:	2d 96       	adiw	r28, 0x0d	; 13
    8760:	0f b6       	in	r0, 0x3f	; 63
    8762:	f8 94       	cli
    8764:	de bf       	out	0x3e, r29	; 62
    8766:	0f be       	out	0x3f, r0	; 63
    8768:	cd bf       	out	0x3d, r28	; 61
    876a:	df 91       	pop	r29
    876c:	cf 91       	pop	r28
    876e:	08 95       	ret

00008770 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>:
	namespace tasks
	{
		/**
		 * Task to receive simulator telemetry data from the ground control station.
		 */
		class SimTelemetryTask : public Task
    8770:	cf 93       	push	r28
    8772:	df 93       	push	r29
    8774:	1f 92       	push	r1
    8776:	1f 92       	push	r1
    8778:	cd b7       	in	r28, 0x3d	; 61
    877a:	de b7       	in	r29, 0x3e	; 62
    877c:	9a 83       	std	Y+2, r25	; 0x02
    877e:	89 83       	std	Y+1, r24	; 0x01
    8780:	89 81       	ldd	r24, Y+1	; 0x01
    8782:	9a 81       	ldd	r25, Y+2	; 0x02
    8784:	24 e7       	ldi	r18, 0x74	; 116
    8786:	32 e0       	ldi	r19, 0x02	; 2
    8788:	fc 01       	movw	r30, r24
    878a:	31 83       	std	Z+1, r19	; 0x01
    878c:	20 83       	st	Z, r18
    878e:	89 81       	ldd	r24, Y+1	; 0x01
    8790:	9a 81       	ldd	r25, Y+2	; 0x02
    8792:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <_ZN10helicopter5tasks4TaskD1Ev>
    8796:	80 e0       	ldi	r24, 0x00	; 0
    8798:	90 e0       	ldi	r25, 0x00	; 0
    879a:	81 70       	andi	r24, 0x01	; 1
    879c:	99 27       	eor	r25, r25
    879e:	00 97       	sbiw	r24, 0x00	; 0
    87a0:	21 f0       	breq	.+8      	; 0x87aa <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev+0x3a>
    87a2:	89 81       	ldd	r24, Y+1	; 0x01
    87a4:	9a 81       	ldd	r25, Y+2	; 0x02
    87a6:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    87aa:	0f 90       	pop	r0
    87ac:	0f 90       	pop	r0
    87ae:	df 91       	pop	r29
    87b0:	cf 91       	pop	r28
    87b2:	08 95       	ret

000087b4 <_ZN10helicopter5tasks16SimTelemetryTaskD0Ev>:
    87b4:	cf 93       	push	r28
    87b6:	df 93       	push	r29
    87b8:	1f 92       	push	r1
    87ba:	1f 92       	push	r1
    87bc:	cd b7       	in	r28, 0x3d	; 61
    87be:	de b7       	in	r29, 0x3e	; 62
    87c0:	9a 83       	std	Y+2, r25	; 0x02
    87c2:	89 83       	std	Y+1, r24	; 0x01
    87c4:	89 81       	ldd	r24, Y+1	; 0x01
    87c6:	9a 81       	ldd	r25, Y+2	; 0x02
    87c8:	0e 94 b8 43 	call	0x8770	; 0x8770 <_ZN10helicopter5tasks16SimTelemetryTaskD1Ev>
    87cc:	89 81       	ldd	r24, Y+1	; 0x01
    87ce:	9a 81       	ldd	r25, Y+2	; 0x02
    87d0:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    87d4:	0f 90       	pop	r0
    87d6:	0f 90       	pop	r0
    87d8:	df 91       	pop	r29
    87da:	cf 91       	pop	r28
    87dc:	08 95       	ret

000087de <_ZN10helicopter5tasks4Task11runTaskImplEv>:
				
			protected:
				/**
				* Implemented by subclasses for the actual logic to execute
				*/
				virtual void runTaskImpl(){;}
    87de:	cf 93       	push	r28
    87e0:	df 93       	push	r29
    87e2:	1f 92       	push	r1
    87e4:	1f 92       	push	r1
    87e6:	cd b7       	in	r28, 0x3d	; 61
    87e8:	de b7       	in	r29, 0x3e	; 62
    87ea:	9a 83       	std	Y+2, r25	; 0x02
    87ec:	89 83       	std	Y+1, r24	; 0x01
    87ee:	0f 90       	pop	r0
    87f0:	0f 90       	pop	r0
    87f2:	df 91       	pop	r29
    87f4:	cf 91       	pop	r28
    87f6:	08 95       	ret

000087f8 <_ZN10helicopter5tasks4TaskC1Eii>:
#include <avr/interrupt.h>
#include "Task.h"

using namespace helicopter::tasks;

Task::Task(int delay, int period)
    87f8:	cf 93       	push	r28
    87fa:	df 93       	push	r29
    87fc:	00 d0       	rcall	.+0      	; 0x87fe <_ZN10helicopter5tasks4TaskC1Eii+0x6>
    87fe:	00 d0       	rcall	.+0      	; 0x8800 <_ZN10helicopter5tasks4TaskC1Eii+0x8>
    8800:	cd b7       	in	r28, 0x3d	; 61
    8802:	de b7       	in	r29, 0x3e	; 62
    8804:	9a 83       	std	Y+2, r25	; 0x02
    8806:	89 83       	std	Y+1, r24	; 0x01
    8808:	7c 83       	std	Y+4, r23	; 0x04
    880a:	6b 83       	std	Y+3, r22	; 0x03
    880c:	5e 83       	std	Y+6, r21	; 0x06
    880e:	4d 83       	std	Y+5, r20	; 0x05
    8810:	89 81       	ldd	r24, Y+1	; 0x01
    8812:	9a 81       	ldd	r25, Y+2	; 0x02
    8814:	22 e8       	ldi	r18, 0x82	; 130
    8816:	32 e0       	ldi	r19, 0x02	; 2
    8818:	fc 01       	movw	r30, r24
    881a:	31 83       	std	Z+1, r19	; 0x01
    881c:	20 83       	st	Z, r18
{
	this->delay = delay;
    881e:	89 81       	ldd	r24, Y+1	; 0x01
    8820:	9a 81       	ldd	r25, Y+2	; 0x02
    8822:	2b 81       	ldd	r18, Y+3	; 0x03
    8824:	3c 81       	ldd	r19, Y+4	; 0x04
    8826:	fc 01       	movw	r30, r24
    8828:	33 83       	std	Z+3, r19	; 0x03
    882a:	22 83       	std	Z+2, r18	; 0x02
	this->period = period;
    882c:	89 81       	ldd	r24, Y+1	; 0x01
    882e:	9a 81       	ldd	r25, Y+2	; 0x02
    8830:	2d 81       	ldd	r18, Y+5	; 0x05
    8832:	3e 81       	ldd	r19, Y+6	; 0x06
    8834:	fc 01       	movw	r30, r24
    8836:	35 83       	std	Z+5, r19	; 0x05
    8838:	24 83       	std	Z+4, r18	; 0x04
	this->isReadyToRun = false;
    883a:	89 81       	ldd	r24, Y+1	; 0x01
    883c:	9a 81       	ldd	r25, Y+2	; 0x02
    883e:	fc 01       	movw	r30, r24
    8840:	16 82       	std	Z+6, r1	; 0x06
}
    8842:	26 96       	adiw	r28, 0x06	; 6
    8844:	0f b6       	in	r0, 0x3f	; 63
    8846:	f8 94       	cli
    8848:	de bf       	out	0x3e, r29	; 62
    884a:	0f be       	out	0x3f, r0	; 63
    884c:	cd bf       	out	0x3d, r28	; 61
    884e:	df 91       	pop	r29
    8850:	cf 91       	pop	r28
    8852:	08 95       	ret

00008854 <_ZN10helicopter5tasks4Task7runTaskEv>:

void Task::runTask()
{
    8854:	cf 93       	push	r28
    8856:	df 93       	push	r29
    8858:	1f 92       	push	r1
    885a:	1f 92       	push	r1
    885c:	cd b7       	in	r28, 0x3d	; 61
    885e:	de b7       	in	r29, 0x3e	; 62
    8860:	9a 83       	std	Y+2, r25	; 0x02
    8862:	89 83       	std	Y+1, r24	; 0x01
	//Disable interrupts 
	cli();
    8864:	f8 94       	cli
	
	//run task
	this->runTaskImpl();
    8866:	89 81       	ldd	r24, Y+1	; 0x01
    8868:	9a 81       	ldd	r25, Y+2	; 0x02
    886a:	fc 01       	movw	r30, r24
    886c:	80 81       	ld	r24, Z
    886e:	91 81       	ldd	r25, Z+1	; 0x01
    8870:	fc 01       	movw	r30, r24
    8872:	20 81       	ld	r18, Z
    8874:	31 81       	ldd	r19, Z+1	; 0x01
    8876:	89 81       	ldd	r24, Y+1	; 0x01
    8878:	9a 81       	ldd	r25, Y+2	; 0x02
    887a:	f9 01       	movw	r30, r18
    887c:	19 95       	eicall
	
	//Re-enable interrupts
	sei();
    887e:	78 94       	sei
    8880:	0f 90       	pop	r0
    8882:	0f 90       	pop	r0
    8884:	df 91       	pop	r29
    8886:	cf 91       	pop	r28
    8888:	08 95       	ret

0000888a <_ZN10helicopter5tasks21TransmitTelemetryTaskC1EPNS_10interfaces29GroundControlStationInterfaceEPNS_5model11SystemModelEii>:
#include "TransmitTelemetryTask.h"
#include "SystemTelemetryMessage.h"

using namespace helicopter::tasks;

TransmitTelemetryTask::TransmitTelemetryTask(GroundControlStationInterface *radioInterface, SystemModel *model, int delay, int period) :
    888a:	0f 93       	push	r16
    888c:	1f 93       	push	r17
    888e:	cf 93       	push	r28
    8890:	df 93       	push	r29
    8892:	cd b7       	in	r28, 0x3d	; 61
    8894:	de b7       	in	r29, 0x3e	; 62
    8896:	2a 97       	sbiw	r28, 0x0a	; 10
    8898:	0f b6       	in	r0, 0x3f	; 63
    889a:	f8 94       	cli
    889c:	de bf       	out	0x3e, r29	; 62
    889e:	0f be       	out	0x3f, r0	; 63
    88a0:	cd bf       	out	0x3d, r28	; 61
    88a2:	9a 83       	std	Y+2, r25	; 0x02
    88a4:	89 83       	std	Y+1, r24	; 0x01
    88a6:	7c 83       	std	Y+4, r23	; 0x04
    88a8:	6b 83       	std	Y+3, r22	; 0x03
    88aa:	5e 83       	std	Y+6, r21	; 0x06
    88ac:	4d 83       	std	Y+5, r20	; 0x05
    88ae:	38 87       	std	Y+8, r19	; 0x08
    88b0:	2f 83       	std	Y+7, r18	; 0x07
    88b2:	1a 87       	std	Y+10, r17	; 0x0a
    88b4:	09 87       	std	Y+9, r16	; 0x09
	Task(delay, period),
	radioInterface(radioInterface),
	model(model)
    88b6:	89 81       	ldd	r24, Y+1	; 0x01
    88b8:	9a 81       	ldd	r25, Y+2	; 0x02
    88ba:	49 85       	ldd	r20, Y+9	; 0x09
    88bc:	5a 85       	ldd	r21, Y+10	; 0x0a
    88be:	2f 81       	ldd	r18, Y+7	; 0x07
    88c0:	38 85       	ldd	r19, Y+8	; 0x08
    88c2:	b9 01       	movw	r22, r18
    88c4:	0e 94 fc 43 	call	0x87f8	; 0x87f8 <_ZN10helicopter5tasks4TaskC1Eii>
    88c8:	89 81       	ldd	r24, Y+1	; 0x01
    88ca:	9a 81       	ldd	r25, Y+2	; 0x02
    88cc:	20 e9       	ldi	r18, 0x90	; 144
    88ce:	32 e0       	ldi	r19, 0x02	; 2
    88d0:	fc 01       	movw	r30, r24
    88d2:	31 83       	std	Z+1, r19	; 0x01
    88d4:	20 83       	st	Z, r18
    88d6:	89 81       	ldd	r24, Y+1	; 0x01
    88d8:	9a 81       	ldd	r25, Y+2	; 0x02
    88da:	2b 81       	ldd	r18, Y+3	; 0x03
    88dc:	3c 81       	ldd	r19, Y+4	; 0x04
    88de:	fc 01       	movw	r30, r24
    88e0:	30 87       	std	Z+8, r19	; 0x08
    88e2:	27 83       	std	Z+7, r18	; 0x07
    88e4:	89 81       	ldd	r24, Y+1	; 0x01
    88e6:	9a 81       	ldd	r25, Y+2	; 0x02
    88e8:	2d 81       	ldd	r18, Y+5	; 0x05
    88ea:	3e 81       	ldd	r19, Y+6	; 0x06
    88ec:	fc 01       	movw	r30, r24
    88ee:	32 87       	std	Z+10, r19	; 0x0a
    88f0:	21 87       	std	Z+9, r18	; 0x09
{
	
}
    88f2:	2a 96       	adiw	r28, 0x0a	; 10
    88f4:	0f b6       	in	r0, 0x3f	; 63
    88f6:	f8 94       	cli
    88f8:	de bf       	out	0x3e, r29	; 62
    88fa:	0f be       	out	0x3f, r0	; 63
    88fc:	cd bf       	out	0x3d, r28	; 61
    88fe:	df 91       	pop	r29
    8900:	cf 91       	pop	r28
    8902:	1f 91       	pop	r17
    8904:	0f 91       	pop	r16
    8906:	08 95       	ret

00008908 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv>:


void TransmitTelemetryTask::runTaskImpl()
{
    8908:	cf 93       	push	r28
    890a:	df 93       	push	r29
    890c:	00 d0       	rcall	.+0      	; 0x890e <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv+0x6>
    890e:	1f 92       	push	r1
    8910:	cd b7       	in	r28, 0x3d	; 61
    8912:	de b7       	in	r29, 0x3e	; 62
    8914:	9c 83       	std	Y+4, r25	; 0x04
    8916:	8b 83       	std	Y+3, r24	; 0x03
	//SystemTelemetryMessage *message = model->CreateTelemetryMessage();
	SystemTelemetryMessage *message = SystemTelemetryMessage::buildMessageFromModel(model);
    8918:	8b 81       	ldd	r24, Y+3	; 0x03
    891a:	9c 81       	ldd	r25, Y+4	; 0x04
    891c:	fc 01       	movw	r30, r24
    891e:	81 85       	ldd	r24, Z+9	; 0x09
    8920:	92 85       	ldd	r25, Z+10	; 0x0a
    8922:	0e 94 c8 36 	call	0x6d90	; 0x6d90 <_ZN10helicopter8messages22SystemTelemetryMessage21buildMessageFromModelEPNS_5model11SystemModelE>
    8926:	9a 83       	std	Y+2, r25	; 0x02
    8928:	89 83       	std	Y+1, r24	; 0x01
	
	//TODO add some error handling in here
	radioInterface->transmit(message);
    892a:	8b 81       	ldd	r24, Y+3	; 0x03
    892c:	9c 81       	ldd	r25, Y+4	; 0x04
    892e:	fc 01       	movw	r30, r24
    8930:	87 81       	ldd	r24, Z+7	; 0x07
    8932:	90 85       	ldd	r25, Z+8	; 0x08
    8934:	29 81       	ldd	r18, Y+1	; 0x01
    8936:	3a 81       	ldd	r19, Y+2	; 0x02
    8938:	b9 01       	movw	r22, r18
    893a:	0e 94 e7 22 	call	0x45ce	; 0x45ce <_ZN10helicopter10interfaces29GroundControlStationInterface8transmitEPNS_8messages7MessageE>
	
	delete message;
    893e:	89 81       	ldd	r24, Y+1	; 0x01
    8940:	9a 81       	ldd	r25, Y+2	; 0x02
    8942:	00 97       	sbiw	r24, 0x00	; 0
    8944:	69 f0       	breq	.+26     	; 0x8960 <_ZN10helicopter5tasks21TransmitTelemetryTask11runTaskImplEv+0x58>
    8946:	89 81       	ldd	r24, Y+1	; 0x01
    8948:	9a 81       	ldd	r25, Y+2	; 0x02
    894a:	fc 01       	movw	r30, r24
    894c:	80 81       	ld	r24, Z
    894e:	91 81       	ldd	r25, Z+1	; 0x01
    8950:	02 96       	adiw	r24, 0x02	; 2
    8952:	fc 01       	movw	r30, r24
    8954:	20 81       	ld	r18, Z
    8956:	31 81       	ldd	r19, Z+1	; 0x01
    8958:	89 81       	ldd	r24, Y+1	; 0x01
    895a:	9a 81       	ldd	r25, Y+2	; 0x02
    895c:	f9 01       	movw	r30, r18
    895e:	19 95       	eicall
    8960:	0f 90       	pop	r0
    8962:	0f 90       	pop	r0
    8964:	0f 90       	pop	r0
    8966:	0f 90       	pop	r0
    8968:	df 91       	pop	r29
    896a:	cf 91       	pop	r28
    896c:	08 95       	ret

0000896e <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>:
	namespace tasks
	{
		/**
		 * This class transmits flight computer telemetry information to the ground control station.
		 */
		class TransmitTelemetryTask : public Task
    896e:	cf 93       	push	r28
    8970:	df 93       	push	r29
    8972:	1f 92       	push	r1
    8974:	1f 92       	push	r1
    8976:	cd b7       	in	r28, 0x3d	; 61
    8978:	de b7       	in	r29, 0x3e	; 62
    897a:	9a 83       	std	Y+2, r25	; 0x02
    897c:	89 83       	std	Y+1, r24	; 0x01
    897e:	89 81       	ldd	r24, Y+1	; 0x01
    8980:	9a 81       	ldd	r25, Y+2	; 0x02
    8982:	20 e9       	ldi	r18, 0x90	; 144
    8984:	32 e0       	ldi	r19, 0x02	; 2
    8986:	fc 01       	movw	r30, r24
    8988:	31 83       	std	Z+1, r19	; 0x01
    898a:	20 83       	st	Z, r18
    898c:	89 81       	ldd	r24, Y+1	; 0x01
    898e:	9a 81       	ldd	r25, Y+2	; 0x02
    8990:	0e 94 0b 15 	call	0x2a16	; 0x2a16 <_ZN10helicopter5tasks4TaskD1Ev>
    8994:	80 e0       	ldi	r24, 0x00	; 0
    8996:	90 e0       	ldi	r25, 0x00	; 0
    8998:	81 70       	andi	r24, 0x01	; 1
    899a:	99 27       	eor	r25, r25
    899c:	00 97       	sbiw	r24, 0x00	; 0
    899e:	21 f0       	breq	.+8      	; 0x89a8 <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev+0x3a>
    89a0:	89 81       	ldd	r24, Y+1	; 0x01
    89a2:	9a 81       	ldd	r25, Y+2	; 0x02
    89a4:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    89a8:	0f 90       	pop	r0
    89aa:	0f 90       	pop	r0
    89ac:	df 91       	pop	r29
    89ae:	cf 91       	pop	r28
    89b0:	08 95       	ret

000089b2 <_ZN10helicopter5tasks21TransmitTelemetryTaskD0Ev>:
    89b2:	cf 93       	push	r28
    89b4:	df 93       	push	r29
    89b6:	1f 92       	push	r1
    89b8:	1f 92       	push	r1
    89ba:	cd b7       	in	r28, 0x3d	; 61
    89bc:	de b7       	in	r29, 0x3e	; 62
    89be:	9a 83       	std	Y+2, r25	; 0x02
    89c0:	89 83       	std	Y+1, r24	; 0x01
    89c2:	89 81       	ldd	r24, Y+1	; 0x01
    89c4:	9a 81       	ldd	r25, Y+2	; 0x02
    89c6:	0e 94 b7 44 	call	0x896e	; 0x896e <_ZN10helicopter5tasks21TransmitTelemetryTaskD1Ev>
    89ca:	89 81       	ldd	r24, Y+1	; 0x01
    89cc:	9a 81       	ldd	r25, Y+2	; 0x02
    89ce:	0e 94 ff 44 	call	0x89fe	; 0x89fe <_ZdlPv>
    89d2:	0f 90       	pop	r0
    89d4:	0f 90       	pop	r0
    89d6:	df 91       	pop	r29
    89d8:	cf 91       	pop	r28
    89da:	08 95       	ret

000089dc <_Znwj>:
 *  Author: HP User
 */ 
#include <CommonHeader.h>

void * operator new(size_t size)
{
    89dc:	cf 93       	push	r28
    89de:	df 93       	push	r29
    89e0:	1f 92       	push	r1
    89e2:	1f 92       	push	r1
    89e4:	cd b7       	in	r28, 0x3d	; 61
    89e6:	de b7       	in	r29, 0x3e	; 62
    89e8:	9a 83       	std	Y+2, r25	; 0x02
    89ea:	89 83       	std	Y+1, r24	; 0x01
	return malloc(size);
    89ec:	89 81       	ldd	r24, Y+1	; 0x01
    89ee:	9a 81       	ldd	r25, Y+2	; 0x02
    89f0:	0e 94 99 4f 	call	0x9f32	; 0x9f32 <malloc>
}
    89f4:	0f 90       	pop	r0
    89f6:	0f 90       	pop	r0
    89f8:	df 91       	pop	r29
    89fa:	cf 91       	pop	r28
    89fc:	08 95       	ret

000089fe <_ZdlPv>:

void operator delete(void * ptr)
{
    89fe:	cf 93       	push	r28
    8a00:	df 93       	push	r29
    8a02:	1f 92       	push	r1
    8a04:	1f 92       	push	r1
    8a06:	cd b7       	in	r28, 0x3d	; 61
    8a08:	de b7       	in	r29, 0x3e	; 62
    8a0a:	9a 83       	std	Y+2, r25	; 0x02
    8a0c:	89 83       	std	Y+1, r24	; 0x01
	if (ptr != NULL)
    8a0e:	89 81       	ldd	r24, Y+1	; 0x01
    8a10:	9a 81       	ldd	r25, Y+2	; 0x02
    8a12:	00 97       	sbiw	r24, 0x00	; 0
    8a14:	21 f0       	breq	.+8      	; 0x8a1e <_ZdlPv+0x20>
	{
		free(ptr);
    8a16:	89 81       	ldd	r24, Y+1	; 0x01
    8a18:	9a 81       	ldd	r25, Y+2	; 0x02
    8a1a:	0e 94 34 50 	call	0xa068	; 0xa068 <free>
	}
}
    8a1e:	0f 90       	pop	r0
    8a20:	0f 90       	pop	r0
    8a22:	df 91       	pop	r29
    8a24:	cf 91       	pop	r28
    8a26:	08 95       	ret

00008a28 <_Znaj>:

void * operator new[](size_t size)
{
    8a28:	cf 93       	push	r28
    8a2a:	df 93       	push	r29
    8a2c:	1f 92       	push	r1
    8a2e:	1f 92       	push	r1
    8a30:	cd b7       	in	r28, 0x3d	; 61
    8a32:	de b7       	in	r29, 0x3e	; 62
    8a34:	9a 83       	std	Y+2, r25	; 0x02
    8a36:	89 83       	std	Y+1, r24	; 0x01
	return malloc(size);
    8a38:	89 81       	ldd	r24, Y+1	; 0x01
    8a3a:	9a 81       	ldd	r25, Y+2	; 0x02
    8a3c:	0e 94 99 4f 	call	0x9f32	; 0x9f32 <malloc>
}
    8a40:	0f 90       	pop	r0
    8a42:	0f 90       	pop	r0
    8a44:	df 91       	pop	r29
    8a46:	cf 91       	pop	r28
    8a48:	08 95       	ret

00008a4a <_ZdaPv>:

void operator delete[](void * ptr)
{
    8a4a:	cf 93       	push	r28
    8a4c:	df 93       	push	r29
    8a4e:	1f 92       	push	r1
    8a50:	1f 92       	push	r1
    8a52:	cd b7       	in	r28, 0x3d	; 61
    8a54:	de b7       	in	r29, 0x3e	; 62
    8a56:	9a 83       	std	Y+2, r25	; 0x02
    8a58:	89 83       	std	Y+1, r24	; 0x01
	if(ptr != NULL)
    8a5a:	89 81       	ldd	r24, Y+1	; 0x01
    8a5c:	9a 81       	ldd	r25, Y+2	; 0x02
    8a5e:	00 97       	sbiw	r24, 0x00	; 0
    8a60:	21 f0       	breq	.+8      	; 0x8a6a <_ZdaPv+0x20>
	{
		free(ptr);
    8a62:	89 81       	ldd	r24, Y+1	; 0x01
    8a64:	9a 81       	ldd	r25, Y+2	; 0x02
    8a66:	0e 94 34 50 	call	0xa068	; 0xa068 <free>
	}
	
    8a6a:	0f 90       	pop	r0
    8a6c:	0f 90       	pop	r0
    8a6e:	df 91       	pop	r29
    8a70:	cf 91       	pop	r28
    8a72:	08 95       	ret

00008a74 <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>:


using namespace helicopter::util;

float CoordinateUtil::DegreesToRad(float valueDegrees)
{
    8a74:	cf 93       	push	r28
    8a76:	df 93       	push	r29
    8a78:	00 d0       	rcall	.+0      	; 0x8a7a <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf+0x6>
    8a7a:	1f 92       	push	r1
    8a7c:	cd b7       	in	r28, 0x3d	; 61
    8a7e:	de b7       	in	r29, 0x3e	; 62
    8a80:	69 83       	std	Y+1, r22	; 0x01
    8a82:	7a 83       	std	Y+2, r23	; 0x02
    8a84:	8b 83       	std	Y+3, r24	; 0x03
    8a86:	9c 83       	std	Y+4, r25	; 0x04
	return valueDegrees * (M_PI / 180.0);
    8a88:	25 e3       	ldi	r18, 0x35	; 53
    8a8a:	3a ef       	ldi	r19, 0xFA	; 250
    8a8c:	4e e8       	ldi	r20, 0x8E	; 142
    8a8e:	5c e3       	ldi	r21, 0x3C	; 60
    8a90:	69 81       	ldd	r22, Y+1	; 0x01
    8a92:	7a 81       	ldd	r23, Y+2	; 0x02
    8a94:	8b 81       	ldd	r24, Y+3	; 0x03
    8a96:	9c 81       	ldd	r25, Y+4	; 0x04
    8a98:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    8a9c:	dc 01       	movw	r26, r24
    8a9e:	cb 01       	movw	r24, r22
}
    8aa0:	bc 01       	movw	r22, r24
    8aa2:	cd 01       	movw	r24, r26
    8aa4:	0f 90       	pop	r0
    8aa6:	0f 90       	pop	r0
    8aa8:	0f 90       	pop	r0
    8aaa:	0f 90       	pop	r0
    8aac:	df 91       	pop	r29
    8aae:	cf 91       	pop	r28
    8ab0:	08 95       	ret

00008ab2 <_ZN10helicopter4util14CoordinateUtil37CalculateECEFToLocalNEDRotationMatrixEffPA3_f>:

void CoordinateUtil::CalculateECEFToLocalNEDRotationMatrix(float latitudeDegrees, float longitudeDegrees, float  ecefToLocalNEDRotationMatrix[][3])
{
    8ab2:	cf 92       	push	r12
    8ab4:	df 92       	push	r13
    8ab6:	ef 92       	push	r14
    8ab8:	ff 92       	push	r15
    8aba:	0f 93       	push	r16
    8abc:	1f 93       	push	r17
    8abe:	cf 93       	push	r28
    8ac0:	df 93       	push	r29
    8ac2:	cd b7       	in	r28, 0x3d	; 61
    8ac4:	de b7       	in	r29, 0x3e	; 62
    8ac6:	62 97       	sbiw	r28, 0x12	; 18
    8ac8:	0f b6       	in	r0, 0x3f	; 63
    8aca:	f8 94       	cli
    8acc:	de bf       	out	0x3e, r29	; 62
    8ace:	0f be       	out	0x3f, r0	; 63
    8ad0:	cd bf       	out	0x3d, r28	; 61
    8ad2:	69 87       	std	Y+9, r22	; 0x09
    8ad4:	7a 87       	std	Y+10, r23	; 0x0a
    8ad6:	8b 87       	std	Y+11, r24	; 0x0b
    8ad8:	9c 87       	std	Y+12, r25	; 0x0c
    8ada:	2d 87       	std	Y+13, r18	; 0x0d
    8adc:	3e 87       	std	Y+14, r19	; 0x0e
    8ade:	4f 87       	std	Y+15, r20	; 0x0f
    8ae0:	58 8b       	std	Y+16, r21	; 0x10
    8ae2:	1a 8b       	std	Y+18, r17	; 0x12
    8ae4:	09 8b       	std	Y+17, r16	; 0x11
	float radLat = DegreesToRad(latitudeDegrees);
    8ae6:	89 85       	ldd	r24, Y+9	; 0x09
    8ae8:	9a 85       	ldd	r25, Y+10	; 0x0a
    8aea:	ab 85       	ldd	r26, Y+11	; 0x0b
    8aec:	bc 85       	ldd	r27, Y+12	; 0x0c
    8aee:	bc 01       	movw	r22, r24
    8af0:	cd 01       	movw	r24, r26
    8af2:	0e 94 3a 45 	call	0x8a74	; 0x8a74 <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    8af6:	dc 01       	movw	r26, r24
    8af8:	cb 01       	movw	r24, r22
    8afa:	89 83       	std	Y+1, r24	; 0x01
    8afc:	9a 83       	std	Y+2, r25	; 0x02
    8afe:	ab 83       	std	Y+3, r26	; 0x03
    8b00:	bc 83       	std	Y+4, r27	; 0x04
	float radLong = DegreesToRad(longitudeDegrees);
    8b02:	8d 85       	ldd	r24, Y+13	; 0x0d
    8b04:	9e 85       	ldd	r25, Y+14	; 0x0e
    8b06:	af 85       	ldd	r26, Y+15	; 0x0f
    8b08:	b8 89       	ldd	r27, Y+16	; 0x10
    8b0a:	bc 01       	movw	r22, r24
    8b0c:	cd 01       	movw	r24, r26
    8b0e:	0e 94 3a 45 	call	0x8a74	; 0x8a74 <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    8b12:	dc 01       	movw	r26, r24
    8b14:	cb 01       	movw	r24, r22
    8b16:	8d 83       	std	Y+5, r24	; 0x05
    8b18:	9e 83       	std	Y+6, r25	; 0x06
    8b1a:	af 83       	std	Y+7, r26	; 0x07
    8b1c:	b8 87       	std	Y+8, r27	; 0x08

	
	ecefToLocalNEDRotationMatrix[0][0] = -1 * sin(radLat) * cos(radLong);
    8b1e:	89 81       	ldd	r24, Y+1	; 0x01
    8b20:	9a 81       	ldd	r25, Y+2	; 0x02
    8b22:	ab 81       	ldd	r26, Y+3	; 0x03
    8b24:	bc 81       	ldd	r27, Y+4	; 0x04
    8b26:	bc 01       	movw	r22, r24
    8b28:	cd 01       	movw	r24, r26
    8b2a:	0e 94 e4 4d 	call	0x9bc8	; 0x9bc8 <sin>
    8b2e:	dc 01       	movw	r26, r24
    8b30:	cb 01       	movw	r24, r22
    8b32:	6c 01       	movw	r12, r24
    8b34:	7d 01       	movw	r14, r26
    8b36:	f7 fa       	bst	r15, 7
    8b38:	f0 94       	com	r15
    8b3a:	f7 f8       	bld	r15, 7
    8b3c:	f0 94       	com	r15
    8b3e:	8d 81       	ldd	r24, Y+5	; 0x05
    8b40:	9e 81       	ldd	r25, Y+6	; 0x06
    8b42:	af 81       	ldd	r26, Y+7	; 0x07
    8b44:	b8 85       	ldd	r27, Y+8	; 0x08
    8b46:	bc 01       	movw	r22, r24
    8b48:	cd 01       	movw	r24, r26
    8b4a:	0e 94 57 4b 	call	0x96ae	; 0x96ae <cos>
    8b4e:	dc 01       	movw	r26, r24
    8b50:	cb 01       	movw	r24, r22
    8b52:	9c 01       	movw	r18, r24
    8b54:	ad 01       	movw	r20, r26
    8b56:	c7 01       	movw	r24, r14
    8b58:	b6 01       	movw	r22, r12
    8b5a:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    8b5e:	dc 01       	movw	r26, r24
    8b60:	cb 01       	movw	r24, r22
    8b62:	29 89       	ldd	r18, Y+17	; 0x11
    8b64:	3a 89       	ldd	r19, Y+18	; 0x12
    8b66:	f9 01       	movw	r30, r18
    8b68:	80 83       	st	Z, r24
    8b6a:	91 83       	std	Z+1, r25	; 0x01
    8b6c:	a2 83       	std	Z+2, r26	; 0x02
    8b6e:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[0][1] = -1 * sin(radLat) * sin(radLong);
    8b70:	89 81       	ldd	r24, Y+1	; 0x01
    8b72:	9a 81       	ldd	r25, Y+2	; 0x02
    8b74:	ab 81       	ldd	r26, Y+3	; 0x03
    8b76:	bc 81       	ldd	r27, Y+4	; 0x04
    8b78:	bc 01       	movw	r22, r24
    8b7a:	cd 01       	movw	r24, r26
    8b7c:	0e 94 e4 4d 	call	0x9bc8	; 0x9bc8 <sin>
    8b80:	dc 01       	movw	r26, r24
    8b82:	cb 01       	movw	r24, r22
    8b84:	6c 01       	movw	r12, r24
    8b86:	7d 01       	movw	r14, r26
    8b88:	f7 fa       	bst	r15, 7
    8b8a:	f0 94       	com	r15
    8b8c:	f7 f8       	bld	r15, 7
    8b8e:	f0 94       	com	r15
    8b90:	8d 81       	ldd	r24, Y+5	; 0x05
    8b92:	9e 81       	ldd	r25, Y+6	; 0x06
    8b94:	af 81       	ldd	r26, Y+7	; 0x07
    8b96:	b8 85       	ldd	r27, Y+8	; 0x08
    8b98:	bc 01       	movw	r22, r24
    8b9a:	cd 01       	movw	r24, r26
    8b9c:	0e 94 e4 4d 	call	0x9bc8	; 0x9bc8 <sin>
    8ba0:	dc 01       	movw	r26, r24
    8ba2:	cb 01       	movw	r24, r22
    8ba4:	9c 01       	movw	r18, r24
    8ba6:	ad 01       	movw	r20, r26
    8ba8:	c7 01       	movw	r24, r14
    8baa:	b6 01       	movw	r22, r12
    8bac:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    8bb0:	dc 01       	movw	r26, r24
    8bb2:	cb 01       	movw	r24, r22
    8bb4:	29 89       	ldd	r18, Y+17	; 0x11
    8bb6:	3a 89       	ldd	r19, Y+18	; 0x12
    8bb8:	f9 01       	movw	r30, r18
    8bba:	84 83       	std	Z+4, r24	; 0x04
    8bbc:	95 83       	std	Z+5, r25	; 0x05
    8bbe:	a6 83       	std	Z+6, r26	; 0x06
    8bc0:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[0][2] = cos(radLat);
    8bc2:	89 81       	ldd	r24, Y+1	; 0x01
    8bc4:	9a 81       	ldd	r25, Y+2	; 0x02
    8bc6:	ab 81       	ldd	r26, Y+3	; 0x03
    8bc8:	bc 81       	ldd	r27, Y+4	; 0x04
    8bca:	bc 01       	movw	r22, r24
    8bcc:	cd 01       	movw	r24, r26
    8bce:	0e 94 57 4b 	call	0x96ae	; 0x96ae <cos>
    8bd2:	dc 01       	movw	r26, r24
    8bd4:	cb 01       	movw	r24, r22
    8bd6:	29 89       	ldd	r18, Y+17	; 0x11
    8bd8:	3a 89       	ldd	r19, Y+18	; 0x12
    8bda:	f9 01       	movw	r30, r18
    8bdc:	80 87       	std	Z+8, r24	; 0x08
    8bde:	91 87       	std	Z+9, r25	; 0x09
    8be0:	a2 87       	std	Z+10, r26	; 0x0a
    8be2:	b3 87       	std	Z+11, r27	; 0x0b
	ecefToLocalNEDRotationMatrix[1][0] = -1 * sin (radLong);
    8be4:	89 89       	ldd	r24, Y+17	; 0x11
    8be6:	9a 89       	ldd	r25, Y+18	; 0x12
    8be8:	8c 01       	movw	r16, r24
    8bea:	04 5f       	subi	r16, 0xF4	; 244
    8bec:	1f 4f       	sbci	r17, 0xFF	; 255
    8bee:	8d 81       	ldd	r24, Y+5	; 0x05
    8bf0:	9e 81       	ldd	r25, Y+6	; 0x06
    8bf2:	af 81       	ldd	r26, Y+7	; 0x07
    8bf4:	b8 85       	ldd	r27, Y+8	; 0x08
    8bf6:	bc 01       	movw	r22, r24
    8bf8:	cd 01       	movw	r24, r26
    8bfa:	0e 94 e4 4d 	call	0x9bc8	; 0x9bc8 <sin>
    8bfe:	dc 01       	movw	r26, r24
    8c00:	cb 01       	movw	r24, r22
    8c02:	b0 58       	subi	r27, 0x80	; 128
    8c04:	f8 01       	movw	r30, r16
    8c06:	80 83       	st	Z, r24
    8c08:	91 83       	std	Z+1, r25	; 0x01
    8c0a:	a2 83       	std	Z+2, r26	; 0x02
    8c0c:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[1][1] = cos(radLong);
    8c0e:	89 89       	ldd	r24, Y+17	; 0x11
    8c10:	9a 89       	ldd	r25, Y+18	; 0x12
    8c12:	8c 01       	movw	r16, r24
    8c14:	04 5f       	subi	r16, 0xF4	; 244
    8c16:	1f 4f       	sbci	r17, 0xFF	; 255
    8c18:	8d 81       	ldd	r24, Y+5	; 0x05
    8c1a:	9e 81       	ldd	r25, Y+6	; 0x06
    8c1c:	af 81       	ldd	r26, Y+7	; 0x07
    8c1e:	b8 85       	ldd	r27, Y+8	; 0x08
    8c20:	bc 01       	movw	r22, r24
    8c22:	cd 01       	movw	r24, r26
    8c24:	0e 94 57 4b 	call	0x96ae	; 0x96ae <cos>
    8c28:	dc 01       	movw	r26, r24
    8c2a:	cb 01       	movw	r24, r22
    8c2c:	f8 01       	movw	r30, r16
    8c2e:	84 83       	std	Z+4, r24	; 0x04
    8c30:	95 83       	std	Z+5, r25	; 0x05
    8c32:	a6 83       	std	Z+6, r26	; 0x06
    8c34:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[1][2] = 0;
    8c36:	89 89       	ldd	r24, Y+17	; 0x11
    8c38:	9a 89       	ldd	r25, Y+18	; 0x12
    8c3a:	0c 96       	adiw	r24, 0x0c	; 12
    8c3c:	fc 01       	movw	r30, r24
    8c3e:	10 86       	std	Z+8, r1	; 0x08
    8c40:	11 86       	std	Z+9, r1	; 0x09
    8c42:	12 86       	std	Z+10, r1	; 0x0a
    8c44:	13 86       	std	Z+11, r1	; 0x0b
	ecefToLocalNEDRotationMatrix[2][0] = -1 * cos(radLat) * cos(radLong);
    8c46:	89 89       	ldd	r24, Y+17	; 0x11
    8c48:	9a 89       	ldd	r25, Y+18	; 0x12
    8c4a:	8c 01       	movw	r16, r24
    8c4c:	08 5e       	subi	r16, 0xE8	; 232
    8c4e:	1f 4f       	sbci	r17, 0xFF	; 255
    8c50:	89 81       	ldd	r24, Y+1	; 0x01
    8c52:	9a 81       	ldd	r25, Y+2	; 0x02
    8c54:	ab 81       	ldd	r26, Y+3	; 0x03
    8c56:	bc 81       	ldd	r27, Y+4	; 0x04
    8c58:	bc 01       	movw	r22, r24
    8c5a:	cd 01       	movw	r24, r26
    8c5c:	0e 94 57 4b 	call	0x96ae	; 0x96ae <cos>
    8c60:	dc 01       	movw	r26, r24
    8c62:	cb 01       	movw	r24, r22
    8c64:	6c 01       	movw	r12, r24
    8c66:	7d 01       	movw	r14, r26
    8c68:	f7 fa       	bst	r15, 7
    8c6a:	f0 94       	com	r15
    8c6c:	f7 f8       	bld	r15, 7
    8c6e:	f0 94       	com	r15
    8c70:	8d 81       	ldd	r24, Y+5	; 0x05
    8c72:	9e 81       	ldd	r25, Y+6	; 0x06
    8c74:	af 81       	ldd	r26, Y+7	; 0x07
    8c76:	b8 85       	ldd	r27, Y+8	; 0x08
    8c78:	bc 01       	movw	r22, r24
    8c7a:	cd 01       	movw	r24, r26
    8c7c:	0e 94 57 4b 	call	0x96ae	; 0x96ae <cos>
    8c80:	dc 01       	movw	r26, r24
    8c82:	cb 01       	movw	r24, r22
    8c84:	9c 01       	movw	r18, r24
    8c86:	ad 01       	movw	r20, r26
    8c88:	c7 01       	movw	r24, r14
    8c8a:	b6 01       	movw	r22, r12
    8c8c:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    8c90:	dc 01       	movw	r26, r24
    8c92:	cb 01       	movw	r24, r22
    8c94:	f8 01       	movw	r30, r16
    8c96:	80 83       	st	Z, r24
    8c98:	91 83       	std	Z+1, r25	; 0x01
    8c9a:	a2 83       	std	Z+2, r26	; 0x02
    8c9c:	b3 83       	std	Z+3, r27	; 0x03
	ecefToLocalNEDRotationMatrix[2][1] = -1 * cos(radLat)*sin(radLong);
    8c9e:	89 89       	ldd	r24, Y+17	; 0x11
    8ca0:	9a 89       	ldd	r25, Y+18	; 0x12
    8ca2:	8c 01       	movw	r16, r24
    8ca4:	08 5e       	subi	r16, 0xE8	; 232
    8ca6:	1f 4f       	sbci	r17, 0xFF	; 255
    8ca8:	89 81       	ldd	r24, Y+1	; 0x01
    8caa:	9a 81       	ldd	r25, Y+2	; 0x02
    8cac:	ab 81       	ldd	r26, Y+3	; 0x03
    8cae:	bc 81       	ldd	r27, Y+4	; 0x04
    8cb0:	bc 01       	movw	r22, r24
    8cb2:	cd 01       	movw	r24, r26
    8cb4:	0e 94 57 4b 	call	0x96ae	; 0x96ae <cos>
    8cb8:	dc 01       	movw	r26, r24
    8cba:	cb 01       	movw	r24, r22
    8cbc:	6c 01       	movw	r12, r24
    8cbe:	7d 01       	movw	r14, r26
    8cc0:	f7 fa       	bst	r15, 7
    8cc2:	f0 94       	com	r15
    8cc4:	f7 f8       	bld	r15, 7
    8cc6:	f0 94       	com	r15
    8cc8:	8d 81       	ldd	r24, Y+5	; 0x05
    8cca:	9e 81       	ldd	r25, Y+6	; 0x06
    8ccc:	af 81       	ldd	r26, Y+7	; 0x07
    8cce:	b8 85       	ldd	r27, Y+8	; 0x08
    8cd0:	bc 01       	movw	r22, r24
    8cd2:	cd 01       	movw	r24, r26
    8cd4:	0e 94 e4 4d 	call	0x9bc8	; 0x9bc8 <sin>
    8cd8:	dc 01       	movw	r26, r24
    8cda:	cb 01       	movw	r24, r22
    8cdc:	9c 01       	movw	r18, r24
    8cde:	ad 01       	movw	r20, r26
    8ce0:	c7 01       	movw	r24, r14
    8ce2:	b6 01       	movw	r22, r12
    8ce4:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    8ce8:	dc 01       	movw	r26, r24
    8cea:	cb 01       	movw	r24, r22
    8cec:	f8 01       	movw	r30, r16
    8cee:	84 83       	std	Z+4, r24	; 0x04
    8cf0:	95 83       	std	Z+5, r25	; 0x05
    8cf2:	a6 83       	std	Z+6, r26	; 0x06
    8cf4:	b7 83       	std	Z+7, r27	; 0x07
	ecefToLocalNEDRotationMatrix[2][2] = -1 * sin(radLat);
    8cf6:	89 89       	ldd	r24, Y+17	; 0x11
    8cf8:	9a 89       	ldd	r25, Y+18	; 0x12
    8cfa:	8c 01       	movw	r16, r24
    8cfc:	08 5e       	subi	r16, 0xE8	; 232
    8cfe:	1f 4f       	sbci	r17, 0xFF	; 255
    8d00:	89 81       	ldd	r24, Y+1	; 0x01
    8d02:	9a 81       	ldd	r25, Y+2	; 0x02
    8d04:	ab 81       	ldd	r26, Y+3	; 0x03
    8d06:	bc 81       	ldd	r27, Y+4	; 0x04
    8d08:	bc 01       	movw	r22, r24
    8d0a:	cd 01       	movw	r24, r26
    8d0c:	0e 94 e4 4d 	call	0x9bc8	; 0x9bc8 <sin>
    8d10:	dc 01       	movw	r26, r24
    8d12:	cb 01       	movw	r24, r22
    8d14:	b0 58       	subi	r27, 0x80	; 128
    8d16:	f8 01       	movw	r30, r16
    8d18:	80 87       	std	Z+8, r24	; 0x08
    8d1a:	91 87       	std	Z+9, r25	; 0x09
    8d1c:	a2 87       	std	Z+10, r26	; 0x0a
    8d1e:	b3 87       	std	Z+11, r27	; 0x0b
}
    8d20:	62 96       	adiw	r28, 0x12	; 18
    8d22:	0f b6       	in	r0, 0x3f	; 63
    8d24:	f8 94       	cli
    8d26:	de bf       	out	0x3e, r29	; 62
    8d28:	0f be       	out	0x3f, r0	; 63
    8d2a:	cd bf       	out	0x3d, r28	; 61
    8d2c:	df 91       	pop	r29
    8d2e:	cf 91       	pop	r28
    8d30:	1f 91       	pop	r17
    8d32:	0f 91       	pop	r16
    8d34:	ff 90       	pop	r15
    8d36:	ef 90       	pop	r14
    8d38:	df 90       	pop	r13
    8d3a:	cf 90       	pop	r12
    8d3c:	08 95       	ret

00008d3e <_ZN10helicopter4util14CoordinateUtil11calculateNeEff>:

float CoordinateUtil::calculateNe(float E, float latitudeRads)
{
    8d3e:	cf 92       	push	r12
    8d40:	df 92       	push	r13
    8d42:	ef 92       	push	r14
    8d44:	ff 92       	push	r15
    8d46:	cf 93       	push	r28
    8d48:	df 93       	push	r29
    8d4a:	cd b7       	in	r28, 0x3d	; 61
    8d4c:	de b7       	in	r29, 0x3e	; 62
    8d4e:	28 97       	sbiw	r28, 0x08	; 8
    8d50:	0f b6       	in	r0, 0x3f	; 63
    8d52:	f8 94       	cli
    8d54:	de bf       	out	0x3e, r29	; 62
    8d56:	0f be       	out	0x3f, r0	; 63
    8d58:	cd bf       	out	0x3d, r28	; 61
    8d5a:	69 83       	std	Y+1, r22	; 0x01
    8d5c:	7a 83       	std	Y+2, r23	; 0x02
    8d5e:	8b 83       	std	Y+3, r24	; 0x03
    8d60:	9c 83       	std	Y+4, r25	; 0x04
    8d62:	2d 83       	std	Y+5, r18	; 0x05
    8d64:	3e 83       	std	Y+6, r19	; 0x06
    8d66:	4f 83       	std	Y+7, r20	; 0x07
    8d68:	58 87       	std	Y+8, r21	; 0x08
	return Rea / sqrt(1 - pow(E, 2) * pow(sin(latitudeRads), 2));
    8d6a:	89 81       	ldd	r24, Y+1	; 0x01
    8d6c:	9a 81       	ldd	r25, Y+2	; 0x02
    8d6e:	ab 81       	ldd	r26, Y+3	; 0x03
    8d70:	bc 81       	ldd	r27, Y+4	; 0x04
    8d72:	20 e0       	ldi	r18, 0x00	; 0
    8d74:	30 e0       	ldi	r19, 0x00	; 0
    8d76:	40 e0       	ldi	r20, 0x00	; 0
    8d78:	50 e4       	ldi	r21, 0x40	; 64
    8d7a:	bc 01       	movw	r22, r24
    8d7c:	cd 01       	movw	r24, r26
    8d7e:	0e 94 98 4d 	call	0x9b30	; 0x9b30 <pow>
    8d82:	6b 01       	movw	r12, r22
    8d84:	7c 01       	movw	r14, r24
    8d86:	8d 81       	ldd	r24, Y+5	; 0x05
    8d88:	9e 81       	ldd	r25, Y+6	; 0x06
    8d8a:	af 81       	ldd	r26, Y+7	; 0x07
    8d8c:	b8 85       	ldd	r27, Y+8	; 0x08
    8d8e:	bc 01       	movw	r22, r24
    8d90:	cd 01       	movw	r24, r26
    8d92:	0e 94 e4 4d 	call	0x9bc8	; 0x9bc8 <sin>
    8d96:	dc 01       	movw	r26, r24
    8d98:	cb 01       	movw	r24, r22
    8d9a:	20 e0       	ldi	r18, 0x00	; 0
    8d9c:	30 e0       	ldi	r19, 0x00	; 0
    8d9e:	40 e0       	ldi	r20, 0x00	; 0
    8da0:	50 e4       	ldi	r21, 0x40	; 64
    8da2:	bc 01       	movw	r22, r24
    8da4:	cd 01       	movw	r24, r26
    8da6:	0e 94 98 4d 	call	0x9b30	; 0x9b30 <pow>
    8daa:	dc 01       	movw	r26, r24
    8dac:	cb 01       	movw	r24, r22
    8dae:	9c 01       	movw	r18, r24
    8db0:	ad 01       	movw	r20, r26
    8db2:	c7 01       	movw	r24, r14
    8db4:	b6 01       	movw	r22, r12
    8db6:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    8dba:	dc 01       	movw	r26, r24
    8dbc:	cb 01       	movw	r24, r22
    8dbe:	9c 01       	movw	r18, r24
    8dc0:	ad 01       	movw	r20, r26
    8dc2:	60 e0       	ldi	r22, 0x00	; 0
    8dc4:	70 e0       	ldi	r23, 0x00	; 0
    8dc6:	80 e8       	ldi	r24, 0x80	; 128
    8dc8:	9f e3       	ldi	r25, 0x3F	; 63
    8dca:	0e 94 ee 4a 	call	0x95dc	; 0x95dc <__subsf3>
    8dce:	dc 01       	movw	r26, r24
    8dd0:	cb 01       	movw	r24, r22
    8dd2:	bc 01       	movw	r22, r24
    8dd4:	cd 01       	movw	r24, r26
    8dd6:	0e 94 ee 4d 	call	0x9bdc	; 0x9bdc <sqrt>
    8dda:	dc 01       	movw	r26, r24
    8ddc:	cb 01       	movw	r24, r22
    8dde:	9c 01       	movw	r18, r24
    8de0:	ad 01       	movw	r20, r26
    8de2:	62 e3       	ldi	r22, 0x32	; 50
    8de4:	75 ea       	ldi	r23, 0xA5	; 165
    8de6:	82 ec       	ldi	r24, 0xC2	; 194
    8de8:	9a e4       	ldi	r25, 0x4A	; 74
    8dea:	0e 94 5a 4b 	call	0x96b4	; 0x96b4 <__divsf3>
    8dee:	dc 01       	movw	r26, r24
    8df0:	cb 01       	movw	r24, r22
}
    8df2:	bc 01       	movw	r22, r24
    8df4:	cd 01       	movw	r24, r26
    8df6:	28 96       	adiw	r28, 0x08	; 8
    8df8:	0f b6       	in	r0, 0x3f	; 63
    8dfa:	f8 94       	cli
    8dfc:	de bf       	out	0x3e, r29	; 62
    8dfe:	0f be       	out	0x3f, r0	; 63
    8e00:	cd bf       	out	0x3d, r28	; 61
    8e02:	df 91       	pop	r29
    8e04:	cf 91       	pop	r28
    8e06:	ff 90       	pop	r15
    8e08:	ef 90       	pop	r14
    8e0a:	df 90       	pop	r13
    8e0c:	cf 90       	pop	r12
    8e0e:	08 95       	ret

00008e10 <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEfffRfS2_S2_>:
/**
 * A description of the variables used to convert lat/long to ecef can be found on page 25 of 
 * Unmanned Rotor Craft Systems
 */
void CoordinateUtil::ConvertFromGeodeticToECEF(float latitudeDegrees, float longitudeDegrees, float altitudeFeetAgl, float &ecefX, float &ecefY, float &ecefZ)
{
    8e10:	8f 92       	push	r8
    8e12:	9f 92       	push	r9
    8e14:	af 92       	push	r10
    8e16:	bf 92       	push	r11
    8e18:	cf 92       	push	r12
    8e1a:	df 92       	push	r13
    8e1c:	ef 92       	push	r14
    8e1e:	ff 92       	push	r15
    8e20:	0f 93       	push	r16
    8e22:	1f 93       	push	r17
    8e24:	cf 93       	push	r28
    8e26:	df 93       	push	r29
    8e28:	cd b7       	in	r28, 0x3d	; 61
    8e2a:	de b7       	in	r29, 0x3e	; 62
    8e2c:	6e 97       	sbiw	r28, 0x1e	; 30
    8e2e:	0f b6       	in	r0, 0x3f	; 63
    8e30:	f8 94       	cli
    8e32:	de bf       	out	0x3e, r29	; 62
    8e34:	0f be       	out	0x3f, r0	; 63
    8e36:	cd bf       	out	0x3d, r28	; 61
    8e38:	6d 87       	std	Y+13, r22	; 0x0d
    8e3a:	7e 87       	std	Y+14, r23	; 0x0e
    8e3c:	8f 87       	std	Y+15, r24	; 0x0f
    8e3e:	98 8b       	std	Y+16, r25	; 0x10
    8e40:	29 8b       	std	Y+17, r18	; 0x11
    8e42:	3a 8b       	std	Y+18, r19	; 0x12
    8e44:	4b 8b       	std	Y+19, r20	; 0x13
    8e46:	5c 8b       	std	Y+20, r21	; 0x14
    8e48:	ed 8a       	std	Y+21, r14	; 0x15
    8e4a:	fe 8a       	std	Y+22, r15	; 0x16
    8e4c:	0f 8b       	std	Y+23, r16	; 0x17
    8e4e:	18 8f       	std	Y+24, r17	; 0x18
    8e50:	da 8e       	std	Y+26, r13	; 0x1a
    8e52:	c9 8e       	std	Y+25, r12	; 0x19
    8e54:	bc 8e       	std	Y+28, r11	; 0x1c
    8e56:	ab 8e       	std	Y+27, r10	; 0x1b
    8e58:	9e 8e       	std	Y+30, r9	; 0x1e
    8e5a:	8d 8e       	std	Y+29, r8	; 0x1d
	float radLat = DegreesToRad(latitudeDegrees);
    8e5c:	8d 85       	ldd	r24, Y+13	; 0x0d
    8e5e:	9e 85       	ldd	r25, Y+14	; 0x0e
    8e60:	af 85       	ldd	r26, Y+15	; 0x0f
    8e62:	b8 89       	ldd	r27, Y+16	; 0x10
    8e64:	bc 01       	movw	r22, r24
    8e66:	cd 01       	movw	r24, r26
    8e68:	0e 94 3a 45 	call	0x8a74	; 0x8a74 <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    8e6c:	dc 01       	movw	r26, r24
    8e6e:	cb 01       	movw	r24, r22
    8e70:	89 83       	std	Y+1, r24	; 0x01
    8e72:	9a 83       	std	Y+2, r25	; 0x02
    8e74:	ab 83       	std	Y+3, r26	; 0x03
    8e76:	bc 83       	std	Y+4, r27	; 0x04
	float radLong = DegreesToRad(longitudeDegrees);
    8e78:	89 89       	ldd	r24, Y+17	; 0x11
    8e7a:	9a 89       	ldd	r25, Y+18	; 0x12
    8e7c:	ab 89       	ldd	r26, Y+19	; 0x13
    8e7e:	bc 89       	ldd	r27, Y+20	; 0x14
    8e80:	bc 01       	movw	r22, r24
    8e82:	cd 01       	movw	r24, r26
    8e84:	0e 94 3a 45 	call	0x8a74	; 0x8a74 <_ZN10helicopter4util14CoordinateUtil12DegreesToRadEf>
    8e88:	dc 01       	movw	r26, r24
    8e8a:	cb 01       	movw	r24, r22
    8e8c:	8d 83       	std	Y+5, r24	; 0x05
    8e8e:	9e 83       	std	Y+6, r25	; 0x06
    8e90:	af 83       	std	Y+7, r26	; 0x07
    8e92:	b8 87       	std	Y+8, r27	; 0x08
	

	float Ne = calculateNe(E, radLat);
    8e94:	89 81       	ldd	r24, Y+1	; 0x01
    8e96:	9a 81       	ldd	r25, Y+2	; 0x02
    8e98:	ab 81       	ldd	r26, Y+3	; 0x03
    8e9a:	bc 81       	ldd	r27, Y+4	; 0x04
    8e9c:	9c 01       	movw	r18, r24
    8e9e:	ad 01       	movw	r20, r26
    8ea0:	62 ed       	ldi	r22, 0xD2	; 210
    8ea2:	70 e9       	ldi	r23, 0x90	; 144
    8ea4:	87 ea       	ldi	r24, 0xA7	; 167
    8ea6:	9d e3       	ldi	r25, 0x3D	; 61
    8ea8:	0e 94 9f 46 	call	0x8d3e	; 0x8d3e <_ZN10helicopter4util14CoordinateUtil11calculateNeEff>
    8eac:	dc 01       	movw	r26, r24
    8eae:	cb 01       	movw	r24, r22
    8eb0:	89 87       	std	Y+9, r24	; 0x09
    8eb2:	9a 87       	std	Y+10, r25	; 0x0a
    8eb4:	ab 87       	std	Y+11, r26	; 0x0b
    8eb6:	bc 87       	std	Y+12, r27	; 0x0c
	
	ecefX = (Ne + altitudeFeetAgl) * cos(radLat) * cos(radLong);
    8eb8:	2d 89       	ldd	r18, Y+21	; 0x15
    8eba:	3e 89       	ldd	r19, Y+22	; 0x16
    8ebc:	4f 89       	ldd	r20, Y+23	; 0x17
    8ebe:	58 8d       	ldd	r21, Y+24	; 0x18
    8ec0:	69 85       	ldd	r22, Y+9	; 0x09
    8ec2:	7a 85       	ldd	r23, Y+10	; 0x0a
    8ec4:	8b 85       	ldd	r24, Y+11	; 0x0b
    8ec6:	9c 85       	ldd	r25, Y+12	; 0x0c
    8ec8:	0e 94 ef 4a 	call	0x95de	; 0x95de <__addsf3>
    8ecc:	dc 01       	movw	r26, r24
    8ece:	cb 01       	movw	r24, r22
    8ed0:	6c 01       	movw	r12, r24
    8ed2:	7d 01       	movw	r14, r26
    8ed4:	89 81       	ldd	r24, Y+1	; 0x01
    8ed6:	9a 81       	ldd	r25, Y+2	; 0x02
    8ed8:	ab 81       	ldd	r26, Y+3	; 0x03
    8eda:	bc 81       	ldd	r27, Y+4	; 0x04
    8edc:	bc 01       	movw	r22, r24
    8ede:	cd 01       	movw	r24, r26
    8ee0:	0e 94 57 4b 	call	0x96ae	; 0x96ae <cos>
    8ee4:	dc 01       	movw	r26, r24
    8ee6:	cb 01       	movw	r24, r22
    8ee8:	9c 01       	movw	r18, r24
    8eea:	ad 01       	movw	r20, r26
    8eec:	c7 01       	movw	r24, r14
    8eee:	b6 01       	movw	r22, r12
    8ef0:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    8ef4:	dc 01       	movw	r26, r24
    8ef6:	cb 01       	movw	r24, r22
    8ef8:	6c 01       	movw	r12, r24
    8efa:	7d 01       	movw	r14, r26
    8efc:	8d 81       	ldd	r24, Y+5	; 0x05
    8efe:	9e 81       	ldd	r25, Y+6	; 0x06
    8f00:	af 81       	ldd	r26, Y+7	; 0x07
    8f02:	b8 85       	ldd	r27, Y+8	; 0x08
    8f04:	bc 01       	movw	r22, r24
    8f06:	cd 01       	movw	r24, r26
    8f08:	0e 94 57 4b 	call	0x96ae	; 0x96ae <cos>
    8f0c:	dc 01       	movw	r26, r24
    8f0e:	cb 01       	movw	r24, r22
    8f10:	9c 01       	movw	r18, r24
    8f12:	ad 01       	movw	r20, r26
    8f14:	c7 01       	movw	r24, r14
    8f16:	b6 01       	movw	r22, r12
    8f18:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    8f1c:	dc 01       	movw	r26, r24
    8f1e:	cb 01       	movw	r24, r22
    8f20:	29 8d       	ldd	r18, Y+25	; 0x19
    8f22:	3a 8d       	ldd	r19, Y+26	; 0x1a
    8f24:	f9 01       	movw	r30, r18
    8f26:	80 83       	st	Z, r24
    8f28:	91 83       	std	Z+1, r25	; 0x01
    8f2a:	a2 83       	std	Z+2, r26	; 0x02
    8f2c:	b3 83       	std	Z+3, r27	; 0x03
	ecefY = (Ne + altitudeFeetAgl) * cos(radLat) * sin(radLong);
    8f2e:	2d 89       	ldd	r18, Y+21	; 0x15
    8f30:	3e 89       	ldd	r19, Y+22	; 0x16
    8f32:	4f 89       	ldd	r20, Y+23	; 0x17
    8f34:	58 8d       	ldd	r21, Y+24	; 0x18
    8f36:	69 85       	ldd	r22, Y+9	; 0x09
    8f38:	7a 85       	ldd	r23, Y+10	; 0x0a
    8f3a:	8b 85       	ldd	r24, Y+11	; 0x0b
    8f3c:	9c 85       	ldd	r25, Y+12	; 0x0c
    8f3e:	0e 94 ef 4a 	call	0x95de	; 0x95de <__addsf3>
    8f42:	dc 01       	movw	r26, r24
    8f44:	cb 01       	movw	r24, r22
    8f46:	6c 01       	movw	r12, r24
    8f48:	7d 01       	movw	r14, r26
    8f4a:	89 81       	ldd	r24, Y+1	; 0x01
    8f4c:	9a 81       	ldd	r25, Y+2	; 0x02
    8f4e:	ab 81       	ldd	r26, Y+3	; 0x03
    8f50:	bc 81       	ldd	r27, Y+4	; 0x04
    8f52:	bc 01       	movw	r22, r24
    8f54:	cd 01       	movw	r24, r26
    8f56:	0e 94 57 4b 	call	0x96ae	; 0x96ae <cos>
    8f5a:	dc 01       	movw	r26, r24
    8f5c:	cb 01       	movw	r24, r22
    8f5e:	9c 01       	movw	r18, r24
    8f60:	ad 01       	movw	r20, r26
    8f62:	c7 01       	movw	r24, r14
    8f64:	b6 01       	movw	r22, r12
    8f66:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    8f6a:	dc 01       	movw	r26, r24
    8f6c:	cb 01       	movw	r24, r22
    8f6e:	6c 01       	movw	r12, r24
    8f70:	7d 01       	movw	r14, r26
    8f72:	8d 81       	ldd	r24, Y+5	; 0x05
    8f74:	9e 81       	ldd	r25, Y+6	; 0x06
    8f76:	af 81       	ldd	r26, Y+7	; 0x07
    8f78:	b8 85       	ldd	r27, Y+8	; 0x08
    8f7a:	bc 01       	movw	r22, r24
    8f7c:	cd 01       	movw	r24, r26
    8f7e:	0e 94 e4 4d 	call	0x9bc8	; 0x9bc8 <sin>
    8f82:	dc 01       	movw	r26, r24
    8f84:	cb 01       	movw	r24, r22
    8f86:	9c 01       	movw	r18, r24
    8f88:	ad 01       	movw	r20, r26
    8f8a:	c7 01       	movw	r24, r14
    8f8c:	b6 01       	movw	r22, r12
    8f8e:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    8f92:	dc 01       	movw	r26, r24
    8f94:	cb 01       	movw	r24, r22
    8f96:	2b 8d       	ldd	r18, Y+27	; 0x1b
    8f98:	3c 8d       	ldd	r19, Y+28	; 0x1c
    8f9a:	f9 01       	movw	r30, r18
    8f9c:	80 83       	st	Z, r24
    8f9e:	91 83       	std	Z+1, r25	; 0x01
    8fa0:	a2 83       	std	Z+2, r26	; 0x02
    8fa2:	b3 83       	std	Z+3, r27	; 0x03
	ecefZ = ((Ne * (1 - pow(E, 2))) + altitudeFeetAgl) * sin(radLat);
    8fa4:	27 e4       	ldi	r18, 0x47	; 71
    8fa6:	39 e4       	ldi	r19, 0x49	; 73
    8fa8:	4e e7       	ldi	r20, 0x7E	; 126
    8faa:	5f e3       	ldi	r21, 0x3F	; 63
    8fac:	69 85       	ldd	r22, Y+9	; 0x09
    8fae:	7a 85       	ldd	r23, Y+10	; 0x0a
    8fb0:	8b 85       	ldd	r24, Y+11	; 0x0b
    8fb2:	9c 85       	ldd	r25, Y+12	; 0x0c
    8fb4:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    8fb8:	dc 01       	movw	r26, r24
    8fba:	cb 01       	movw	r24, r22
    8fbc:	2d 89       	ldd	r18, Y+21	; 0x15
    8fbe:	3e 89       	ldd	r19, Y+22	; 0x16
    8fc0:	4f 89       	ldd	r20, Y+23	; 0x17
    8fc2:	58 8d       	ldd	r21, Y+24	; 0x18
    8fc4:	bc 01       	movw	r22, r24
    8fc6:	cd 01       	movw	r24, r26
    8fc8:	0e 94 ef 4a 	call	0x95de	; 0x95de <__addsf3>
    8fcc:	dc 01       	movw	r26, r24
    8fce:	cb 01       	movw	r24, r22
    8fd0:	6c 01       	movw	r12, r24
    8fd2:	7d 01       	movw	r14, r26
    8fd4:	89 81       	ldd	r24, Y+1	; 0x01
    8fd6:	9a 81       	ldd	r25, Y+2	; 0x02
    8fd8:	ab 81       	ldd	r26, Y+3	; 0x03
    8fda:	bc 81       	ldd	r27, Y+4	; 0x04
    8fdc:	bc 01       	movw	r22, r24
    8fde:	cd 01       	movw	r24, r26
    8fe0:	0e 94 e4 4d 	call	0x9bc8	; 0x9bc8 <sin>
    8fe4:	dc 01       	movw	r26, r24
    8fe6:	cb 01       	movw	r24, r22
    8fe8:	9c 01       	movw	r18, r24
    8fea:	ad 01       	movw	r20, r26
    8fec:	c7 01       	movw	r24, r14
    8fee:	b6 01       	movw	r22, r12
    8ff0:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    8ff4:	dc 01       	movw	r26, r24
    8ff6:	cb 01       	movw	r24, r22
    8ff8:	2d 8d       	ldd	r18, Y+29	; 0x1d
    8ffa:	3e 8d       	ldd	r19, Y+30	; 0x1e
    8ffc:	f9 01       	movw	r30, r18
    8ffe:	80 83       	st	Z, r24
    9000:	91 83       	std	Z+1, r25	; 0x01
    9002:	a2 83       	std	Z+2, r26	; 0x02
    9004:	b3 83       	std	Z+3, r27	; 0x03
}
    9006:	6e 96       	adiw	r28, 0x1e	; 30
    9008:	0f b6       	in	r0, 0x3f	; 63
    900a:	f8 94       	cli
    900c:	de bf       	out	0x3e, r29	; 62
    900e:	0f be       	out	0x3f, r0	; 63
    9010:	cd bf       	out	0x3d, r28	; 61
    9012:	df 91       	pop	r29
    9014:	cf 91       	pop	r28
    9016:	1f 91       	pop	r17
    9018:	0f 91       	pop	r16
    901a:	ff 90       	pop	r15
    901c:	ef 90       	pop	r14
    901e:	df 90       	pop	r13
    9020:	cf 90       	pop	r12
    9022:	bf 90       	pop	r11
    9024:	af 90       	pop	r10
    9026:	9f 90       	pop	r9
    9028:	8f 90       	pop	r8
    902a:	08 95       	ret

0000902c <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_>:

void CoordinateUtil::ConvertFromECEFToLocalNED(float ecefReferenceX, float ecefReferenceY, float ecefReferenceZ,
	float ecefX, float ecefY, float ecefZ, float ecefToLocalNEDRotationMatrix[][3],
	float &localNEDX, float &localNEDY, float &localNEDZ)
{
    902c:	af 92       	push	r10
    902e:	bf 92       	push	r11
    9030:	cf 92       	push	r12
    9032:	df 92       	push	r13
    9034:	ef 92       	push	r14
    9036:	ff 92       	push	r15
    9038:	0f 93       	push	r16
    903a:	1f 93       	push	r17
    903c:	cf 93       	push	r28
    903e:	df 93       	push	r29
    9040:	cd b7       	in	r28, 0x3d	; 61
    9042:	de b7       	in	r29, 0x3e	; 62
    9044:	e8 97       	sbiw	r28, 0x38	; 56
    9046:	0f b6       	in	r0, 0x3f	; 63
    9048:	f8 94       	cli
    904a:	de bf       	out	0x3e, r29	; 62
    904c:	0f be       	out	0x3f, r0	; 63
    904e:	cd bf       	out	0x3d, r28	; 61
    9050:	69 a7       	std	Y+41, r22	; 0x29
    9052:	7a a7       	std	Y+42, r23	; 0x2a
    9054:	8b a7       	std	Y+43, r24	; 0x2b
    9056:	9c a7       	std	Y+44, r25	; 0x2c
    9058:	2d a7       	std	Y+45, r18	; 0x2d
    905a:	3e a7       	std	Y+46, r19	; 0x2e
    905c:	4f a7       	std	Y+47, r20	; 0x2f
    905e:	58 ab       	std	Y+48, r21	; 0x30
    9060:	e9 aa       	std	Y+49, r14	; 0x31
    9062:	fa aa       	std	Y+50, r15	; 0x32
    9064:	0b ab       	std	Y+51, r16	; 0x33
    9066:	1c ab       	std	Y+52, r17	; 0x34
    9068:	ad aa       	std	Y+53, r10	; 0x35
    906a:	be aa       	std	Y+54, r11	; 0x36
    906c:	cf aa       	std	Y+55, r12	; 0x37
    906e:	d8 ae       	std	Y+56, r13	; 0x38
	//Get the current helicopters position relative to it's starting point in ecef.
	float differenceXECEF = ecefX - ecefReferenceX;
    9070:	29 a5       	ldd	r18, Y+41	; 0x29
    9072:	3a a5       	ldd	r19, Y+42	; 0x2a
    9074:	4b a5       	ldd	r20, Y+43	; 0x2b
    9076:	5c a5       	ldd	r21, Y+44	; 0x2c
    9078:	6d a9       	ldd	r22, Y+53	; 0x35
    907a:	7e a9       	ldd	r23, Y+54	; 0x36
    907c:	8f a9       	ldd	r24, Y+55	; 0x37
    907e:	98 ad       	ldd	r25, Y+56	; 0x38
    9080:	0e 94 ee 4a 	call	0x95dc	; 0x95dc <__subsf3>
    9084:	dc 01       	movw	r26, r24
    9086:	cb 01       	movw	r24, r22
    9088:	8d 83       	std	Y+5, r24	; 0x05
    908a:	9e 83       	std	Y+6, r25	; 0x06
    908c:	af 83       	std	Y+7, r26	; 0x07
    908e:	b8 87       	std	Y+8, r27	; 0x08
	float differenceYECEF = ecefY - ecefReferenceY;
    9090:	2d a5       	ldd	r18, Y+45	; 0x2d
    9092:	3e a5       	ldd	r19, Y+46	; 0x2e
    9094:	4f a5       	ldd	r20, Y+47	; 0x2f
    9096:	58 a9       	ldd	r21, Y+48	; 0x30
    9098:	2a 96       	adiw	r28, 0x0a	; 10
    909a:	6c ad       	ldd	r22, Y+60	; 0x3c
    909c:	7d ad       	ldd	r23, Y+61	; 0x3d
    909e:	8e ad       	ldd	r24, Y+62	; 0x3e
    90a0:	9f ad       	ldd	r25, Y+63	; 0x3f
    90a2:	2a 97       	sbiw	r28, 0x0a	; 10
    90a4:	0e 94 ee 4a 	call	0x95dc	; 0x95dc <__subsf3>
    90a8:	dc 01       	movw	r26, r24
    90aa:	cb 01       	movw	r24, r22
    90ac:	89 87       	std	Y+9, r24	; 0x09
    90ae:	9a 87       	std	Y+10, r25	; 0x0a
    90b0:	ab 87       	std	Y+11, r26	; 0x0b
    90b2:	bc 87       	std	Y+12, r27	; 0x0c
	float differenceZECEF = ecefZ - ecefReferenceZ;
    90b4:	29 a9       	ldd	r18, Y+49	; 0x31
    90b6:	3a a9       	ldd	r19, Y+50	; 0x32
    90b8:	4b a9       	ldd	r20, Y+51	; 0x33
    90ba:	5c a9       	ldd	r21, Y+52	; 0x34
    90bc:	2e 96       	adiw	r28, 0x0e	; 14
    90be:	6c ad       	ldd	r22, Y+60	; 0x3c
    90c0:	7d ad       	ldd	r23, Y+61	; 0x3d
    90c2:	8e ad       	ldd	r24, Y+62	; 0x3e
    90c4:	9f ad       	ldd	r25, Y+63	; 0x3f
    90c6:	2e 97       	sbiw	r28, 0x0e	; 14
    90c8:	0e 94 ee 4a 	call	0x95dc	; 0x95dc <__subsf3>
    90cc:	dc 01       	movw	r26, r24
    90ce:	cb 01       	movw	r24, r22
    90d0:	8d 87       	std	Y+13, r24	; 0x0d
    90d2:	9e 87       	std	Y+14, r25	; 0x0e
    90d4:	af 87       	std	Y+15, r26	; 0x0f
    90d6:	b8 8b       	std	Y+16, r27	; 0x10
	
	float rotatedMatrix[3] = {};
    90d8:	2c e0       	ldi	r18, 0x0C	; 12
    90da:	ce 01       	movw	r24, r28
    90dc:	41 96       	adiw	r24, 0x11	; 17
    90de:	fc 01       	movw	r30, r24
    90e0:	32 2f       	mov	r19, r18
    90e2:	11 92       	st	Z+, r1
    90e4:	3a 95       	dec	r19
    90e6:	e9 f7       	brne	.-6      	; 0x90e2 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0xb6>
	float positionMatrix[3] = {differenceXECEF, differenceYECEF, differenceZECEF};
    90e8:	8d 81       	ldd	r24, Y+5	; 0x05
    90ea:	9e 81       	ldd	r25, Y+6	; 0x06
    90ec:	af 81       	ldd	r26, Y+7	; 0x07
    90ee:	b8 85       	ldd	r27, Y+8	; 0x08
    90f0:	8d 8f       	std	Y+29, r24	; 0x1d
    90f2:	9e 8f       	std	Y+30, r25	; 0x1e
    90f4:	af 8f       	std	Y+31, r26	; 0x1f
    90f6:	b8 a3       	std	Y+32, r27	; 0x20
    90f8:	89 85       	ldd	r24, Y+9	; 0x09
    90fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    90fc:	ab 85       	ldd	r26, Y+11	; 0x0b
    90fe:	bc 85       	ldd	r27, Y+12	; 0x0c
    9100:	89 a3       	std	Y+33, r24	; 0x21
    9102:	9a a3       	std	Y+34, r25	; 0x22
    9104:	ab a3       	std	Y+35, r26	; 0x23
    9106:	bc a3       	std	Y+36, r27	; 0x24
    9108:	8d 85       	ldd	r24, Y+13	; 0x0d
    910a:	9e 85       	ldd	r25, Y+14	; 0x0e
    910c:	af 85       	ldd	r26, Y+15	; 0x0f
    910e:	b8 89       	ldd	r27, Y+16	; 0x10
    9110:	8d a3       	std	Y+37, r24	; 0x25
    9112:	9e a3       	std	Y+38, r25	; 0x26
    9114:	af a3       	std	Y+39, r26	; 0x27
    9116:	b8 a7       	std	Y+40, r27	; 0x28
	
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
    9118:	1a 82       	std	Y+2, r1	; 0x02
    911a:	19 82       	std	Y+1, r1	; 0x01
    911c:	78 c0       	rjmp	.+240    	; 0x920e <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1e2>
	{
		//iterate through the columns of the rotation matrix
		for (int j = 0; j < 3; j++)
    911e:	1c 82       	std	Y+4, r1	; 0x04
    9120:	1b 82       	std	Y+3, r1	; 0x03
    9122:	66 c0       	rjmp	.+204    	; 0x91f0 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1c4>
		{
			rotatedMatrix[i] += ecefToLocalNEDRotationMatrix[i] [j] * positionMatrix[j];
    9124:	89 81       	ldd	r24, Y+1	; 0x01
    9126:	9a 81       	ldd	r25, Y+2	; 0x02
    9128:	88 0f       	add	r24, r24
    912a:	99 1f       	adc	r25, r25
    912c:	88 0f       	add	r24, r24
    912e:	99 1f       	adc	r25, r25
    9130:	9e 01       	movw	r18, r28
    9132:	2f 5f       	subi	r18, 0xFF	; 255
    9134:	3f 4f       	sbci	r19, 0xFF	; 255
    9136:	82 0f       	add	r24, r18
    9138:	93 1f       	adc	r25, r19
    913a:	40 96       	adiw	r24, 0x10	; 16
    913c:	fc 01       	movw	r30, r24
    913e:	c0 80       	ld	r12, Z
    9140:	d1 80       	ldd	r13, Z+1	; 0x01
    9142:	e2 80       	ldd	r14, Z+2	; 0x02
    9144:	f3 80       	ldd	r15, Z+3	; 0x03
    9146:	29 81       	ldd	r18, Y+1	; 0x01
    9148:	3a 81       	ldd	r19, Y+2	; 0x02
    914a:	c9 01       	movw	r24, r18
    914c:	88 0f       	add	r24, r24
    914e:	99 1f       	adc	r25, r25
    9150:	82 0f       	add	r24, r18
    9152:	93 1f       	adc	r25, r19
    9154:	88 0f       	add	r24, r24
    9156:	99 1f       	adc	r25, r25
    9158:	88 0f       	add	r24, r24
    915a:	99 1f       	adc	r25, r25
    915c:	60 96       	adiw	r28, 0x10	; 16
    915e:	2e ad       	ldd	r18, Y+62	; 0x3e
    9160:	3f ad       	ldd	r19, Y+63	; 0x3f
    9162:	60 97       	sbiw	r28, 0x10	; 16
    9164:	28 0f       	add	r18, r24
    9166:	39 1f       	adc	r19, r25
    9168:	8b 81       	ldd	r24, Y+3	; 0x03
    916a:	9c 81       	ldd	r25, Y+4	; 0x04
    916c:	88 0f       	add	r24, r24
    916e:	99 1f       	adc	r25, r25
    9170:	88 0f       	add	r24, r24
    9172:	99 1f       	adc	r25, r25
    9174:	82 0f       	add	r24, r18
    9176:	93 1f       	adc	r25, r19
    9178:	fc 01       	movw	r30, r24
    917a:	80 81       	ld	r24, Z
    917c:	91 81       	ldd	r25, Z+1	; 0x01
    917e:	a2 81       	ldd	r26, Z+2	; 0x02
    9180:	b3 81       	ldd	r27, Z+3	; 0x03
    9182:	2b 81       	ldd	r18, Y+3	; 0x03
    9184:	3c 81       	ldd	r19, Y+4	; 0x04
    9186:	22 0f       	add	r18, r18
    9188:	33 1f       	adc	r19, r19
    918a:	22 0f       	add	r18, r18
    918c:	33 1f       	adc	r19, r19
    918e:	ae 01       	movw	r20, r28
    9190:	4f 5f       	subi	r20, 0xFF	; 255
    9192:	5f 4f       	sbci	r21, 0xFF	; 255
    9194:	24 0f       	add	r18, r20
    9196:	35 1f       	adc	r19, r21
    9198:	24 5e       	subi	r18, 0xE4	; 228
    919a:	3f 4f       	sbci	r19, 0xFF	; 255
    919c:	f9 01       	movw	r30, r18
    919e:	20 81       	ld	r18, Z
    91a0:	31 81       	ldd	r19, Z+1	; 0x01
    91a2:	42 81       	ldd	r20, Z+2	; 0x02
    91a4:	53 81       	ldd	r21, Z+3	; 0x03
    91a6:	bc 01       	movw	r22, r24
    91a8:	cd 01       	movw	r24, r26
    91aa:	0e 94 35 4d 	call	0x9a6a	; 0x9a6a <__mulsf3>
    91ae:	dc 01       	movw	r26, r24
    91b0:	cb 01       	movw	r24, r22
    91b2:	9c 01       	movw	r18, r24
    91b4:	ad 01       	movw	r20, r26
    91b6:	c7 01       	movw	r24, r14
    91b8:	b6 01       	movw	r22, r12
    91ba:	0e 94 ef 4a 	call	0x95de	; 0x95de <__addsf3>
    91be:	dc 01       	movw	r26, r24
    91c0:	cb 01       	movw	r24, r22
    91c2:	29 81       	ldd	r18, Y+1	; 0x01
    91c4:	3a 81       	ldd	r19, Y+2	; 0x02
    91c6:	22 0f       	add	r18, r18
    91c8:	33 1f       	adc	r19, r19
    91ca:	22 0f       	add	r18, r18
    91cc:	33 1f       	adc	r19, r19
    91ce:	ae 01       	movw	r20, r28
    91d0:	4f 5f       	subi	r20, 0xFF	; 255
    91d2:	5f 4f       	sbci	r21, 0xFF	; 255
    91d4:	24 0f       	add	r18, r20
    91d6:	35 1f       	adc	r19, r21
    91d8:	20 5f       	subi	r18, 0xF0	; 240
    91da:	3f 4f       	sbci	r19, 0xFF	; 255
    91dc:	f9 01       	movw	r30, r18
    91de:	80 83       	st	Z, r24
    91e0:	91 83       	std	Z+1, r25	; 0x01
    91e2:	a2 83       	std	Z+2, r26	; 0x02
    91e4:	b3 83       	std	Z+3, r27	; 0x03
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
	{
		//iterate through the columns of the rotation matrix
		for (int j = 0; j < 3; j++)
    91e6:	8b 81       	ldd	r24, Y+3	; 0x03
    91e8:	9c 81       	ldd	r25, Y+4	; 0x04
    91ea:	01 96       	adiw	r24, 0x01	; 1
    91ec:	9c 83       	std	Y+4, r25	; 0x04
    91ee:	8b 83       	std	Y+3, r24	; 0x03
    91f0:	21 e0       	ldi	r18, 0x01	; 1
    91f2:	8b 81       	ldd	r24, Y+3	; 0x03
    91f4:	9c 81       	ldd	r25, Y+4	; 0x04
    91f6:	83 30       	cpi	r24, 0x03	; 3
    91f8:	91 05       	cpc	r25, r1
    91fa:	0c f0       	brlt	.+2      	; 0x91fe <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1d2>
    91fc:	20 e0       	ldi	r18, 0x00	; 0
    91fe:	22 23       	and	r18, r18
    9200:	09 f0       	breq	.+2      	; 0x9204 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1d8>
    9202:	90 cf       	rjmp	.-224    	; 0x9124 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0xf8>
	float rotatedMatrix[3] = {};
	float positionMatrix[3] = {differenceXECEF, differenceYECEF, differenceZECEF};
	
	//Rotate the current ecef position from earth centered earth fixed (ECEF) into North-East-Down(NED).
	//Iterate through the rows of the rotation matrix
	for (int i = 0; i < 3; i++)
    9204:	89 81       	ldd	r24, Y+1	; 0x01
    9206:	9a 81       	ldd	r25, Y+2	; 0x02
    9208:	01 96       	adiw	r24, 0x01	; 1
    920a:	9a 83       	std	Y+2, r25	; 0x02
    920c:	89 83       	std	Y+1, r24	; 0x01
    920e:	21 e0       	ldi	r18, 0x01	; 1
    9210:	89 81       	ldd	r24, Y+1	; 0x01
    9212:	9a 81       	ldd	r25, Y+2	; 0x02
    9214:	83 30       	cpi	r24, 0x03	; 3
    9216:	91 05       	cpc	r25, r1
    9218:	0c f0       	brlt	.+2      	; 0x921c <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1f0>
    921a:	20 e0       	ldi	r18, 0x00	; 0
    921c:	22 23       	and	r18, r18
    921e:	09 f0       	breq	.+2      	; 0x9222 <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0x1f6>
    9220:	7e cf       	rjmp	.-260    	; 0x911e <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_+0xf2>
		{
			rotatedMatrix[i] += ecefToLocalNEDRotationMatrix[i] [j] * positionMatrix[j];
		}
	}
	
	localNEDX = rotatedMatrix[0];
    9222:	89 89       	ldd	r24, Y+17	; 0x11
    9224:	9a 89       	ldd	r25, Y+18	; 0x12
    9226:	ab 89       	ldd	r26, Y+19	; 0x13
    9228:	bc 89       	ldd	r27, Y+20	; 0x14
    922a:	62 96       	adiw	r28, 0x12	; 18
    922c:	2e ad       	ldd	r18, Y+62	; 0x3e
    922e:	3f ad       	ldd	r19, Y+63	; 0x3f
    9230:	62 97       	sbiw	r28, 0x12	; 18
    9232:	f9 01       	movw	r30, r18
    9234:	80 83       	st	Z, r24
    9236:	91 83       	std	Z+1, r25	; 0x01
    9238:	a2 83       	std	Z+2, r26	; 0x02
    923a:	b3 83       	std	Z+3, r27	; 0x03
	localNEDY = rotatedMatrix[1];
    923c:	8d 89       	ldd	r24, Y+21	; 0x15
    923e:	9e 89       	ldd	r25, Y+22	; 0x16
    9240:	af 89       	ldd	r26, Y+23	; 0x17
    9242:	b8 8d       	ldd	r27, Y+24	; 0x18
    9244:	64 96       	adiw	r28, 0x14	; 20
    9246:	2e ad       	ldd	r18, Y+62	; 0x3e
    9248:	3f ad       	ldd	r19, Y+63	; 0x3f
    924a:	64 97       	sbiw	r28, 0x14	; 20
    924c:	f9 01       	movw	r30, r18
    924e:	80 83       	st	Z, r24
    9250:	91 83       	std	Z+1, r25	; 0x01
    9252:	a2 83       	std	Z+2, r26	; 0x02
    9254:	b3 83       	std	Z+3, r27	; 0x03
	localNEDZ = rotatedMatrix[2];
    9256:	89 8d       	ldd	r24, Y+25	; 0x19
    9258:	9a 8d       	ldd	r25, Y+26	; 0x1a
    925a:	ab 8d       	ldd	r26, Y+27	; 0x1b
    925c:	bc 8d       	ldd	r27, Y+28	; 0x1c
    925e:	66 96       	adiw	r28, 0x16	; 22
    9260:	2e ad       	ldd	r18, Y+62	; 0x3e
    9262:	3f ad       	ldd	r19, Y+63	; 0x3f
    9264:	66 97       	sbiw	r28, 0x16	; 22
    9266:	f9 01       	movw	r30, r18
    9268:	80 83       	st	Z, r24
    926a:	91 83       	std	Z+1, r25	; 0x01
    926c:	a2 83       	std	Z+2, r26	; 0x02
    926e:	b3 83       	std	Z+3, r27	; 0x03
}
    9270:	e8 96       	adiw	r28, 0x38	; 56
    9272:	0f b6       	in	r0, 0x3f	; 63
    9274:	f8 94       	cli
    9276:	de bf       	out	0x3e, r29	; 62
    9278:	0f be       	out	0x3f, r0	; 63
    927a:	cd bf       	out	0x3d, r28	; 61
    927c:	df 91       	pop	r29
    927e:	cf 91       	pop	r28
    9280:	1f 91       	pop	r17
    9282:	0f 91       	pop	r16
    9284:	ff 90       	pop	r15
    9286:	ef 90       	pop	r14
    9288:	df 90       	pop	r13
    928a:	cf 90       	pop	r12
    928c:	bf 90       	pop	r11
    928e:	af 90       	pop	r10
    9290:	08 95       	ret

00009292 <_ZN10helicopter4util14CoordinateUtil29ConvertFromGeodedicToLocalNEDEffffffPA3_fRfS4_S4_>:

void CoordinateUtil::ConvertFromGeodedicToLocalNED(
	float geodedicLatitude, float geodedicLongitude, float altitudeFeetAgl,
	float ecefReferenceX, float ecefReferenceY, float ecefReferenceZ, float ecefToLocalNEDRotationMatrix[][3],
	float &localNEDX,float &localNEDY,float &localNEDZ)
{
    9292:	2f 92       	push	r2
    9294:	3f 92       	push	r3
    9296:	4f 92       	push	r4
    9298:	5f 92       	push	r5
    929a:	6f 92       	push	r6
    929c:	7f 92       	push	r7
    929e:	8f 92       	push	r8
    92a0:	9f 92       	push	r9
    92a2:	af 92       	push	r10
    92a4:	bf 92       	push	r11
    92a6:	cf 92       	push	r12
    92a8:	df 92       	push	r13
    92aa:	ef 92       	push	r14
    92ac:	ff 92       	push	r15
    92ae:	0f 93       	push	r16
    92b0:	1f 93       	push	r17
    92b2:	cf 93       	push	r28
    92b4:	df 93       	push	r29
    92b6:	cd b7       	in	r28, 0x3d	; 61
    92b8:	de b7       	in	r29, 0x3e	; 62
    92ba:	6c 97       	sbiw	r28, 0x1c	; 28
    92bc:	0f b6       	in	r0, 0x3f	; 63
    92be:	f8 94       	cli
    92c0:	de bf       	out	0x3e, r29	; 62
    92c2:	0f be       	out	0x3f, r0	; 63
    92c4:	cd bf       	out	0x3d, r28	; 61
    92c6:	6d 87       	std	Y+13, r22	; 0x0d
    92c8:	7e 87       	std	Y+14, r23	; 0x0e
    92ca:	8f 87       	std	Y+15, r24	; 0x0f
    92cc:	98 8b       	std	Y+16, r25	; 0x10
    92ce:	29 8b       	std	Y+17, r18	; 0x11
    92d0:	3a 8b       	std	Y+18, r19	; 0x12
    92d2:	4b 8b       	std	Y+19, r20	; 0x13
    92d4:	5c 8b       	std	Y+20, r21	; 0x14
    92d6:	ed 8a       	std	Y+21, r14	; 0x15
    92d8:	fe 8a       	std	Y+22, r15	; 0x16
    92da:	0f 8b       	std	Y+23, r16	; 0x17
    92dc:	18 8f       	std	Y+24, r17	; 0x18
    92de:	a9 8e       	std	Y+25, r10	; 0x19
    92e0:	ba 8e       	std	Y+26, r11	; 0x1a
    92e2:	cb 8e       	std	Y+27, r12	; 0x1b
    92e4:	dc 8e       	std	Y+28, r13	; 0x1c
	float ecefX = 0;
    92e6:	19 82       	std	Y+1, r1	; 0x01
    92e8:	1a 82       	std	Y+2, r1	; 0x02
    92ea:	1b 82       	std	Y+3, r1	; 0x03
    92ec:	1c 82       	std	Y+4, r1	; 0x04
	float ecefY = 0;
    92ee:	1d 82       	std	Y+5, r1	; 0x05
    92f0:	1e 82       	std	Y+6, r1	; 0x06
    92f2:	1f 82       	std	Y+7, r1	; 0x07
    92f4:	18 86       	std	Y+8, r1	; 0x08
	float ecefZ = 0;
    92f6:	19 86       	std	Y+9, r1	; 0x09
    92f8:	1a 86       	std	Y+10, r1	; 0x0a
    92fa:	1b 86       	std	Y+11, r1	; 0x0b
    92fc:	1c 86       	std	Y+12, r1	; 0x0c
	
	ConvertFromGeodeticToECEF(geodedicLatitude, geodedicLongitude, altitudeFeetAgl, ecefX, ecefY, ecefZ);
    92fe:	fe 01       	movw	r30, r28
    9300:	39 96       	adiw	r30, 0x09	; 9
    9302:	be 01       	movw	r22, r28
    9304:	6b 5f       	subi	r22, 0xFB	; 251
    9306:	7f 4f       	sbci	r23, 0xFF	; 255
    9308:	ed 88       	ldd	r14, Y+21	; 0x15
    930a:	fe 88       	ldd	r15, Y+22	; 0x16
    930c:	0f 89       	ldd	r16, Y+23	; 0x17
    930e:	18 8d       	ldd	r17, Y+24	; 0x18
    9310:	29 89       	ldd	r18, Y+17	; 0x11
    9312:	3a 89       	ldd	r19, Y+18	; 0x12
    9314:	4b 89       	ldd	r20, Y+19	; 0x13
    9316:	5c 89       	ldd	r21, Y+20	; 0x14
    9318:	8d 85       	ldd	r24, Y+13	; 0x0d
    931a:	9e 85       	ldd	r25, Y+14	; 0x0e
    931c:	af 85       	ldd	r26, Y+15	; 0x0f
    931e:	b8 89       	ldd	r27, Y+16	; 0x10
    9320:	4f 01       	movw	r8, r30
    9322:	5b 01       	movw	r10, r22
    9324:	be 01       	movw	r22, r28
    9326:	6f 5f       	subi	r22, 0xFF	; 255
    9328:	7f 4f       	sbci	r23, 0xFF	; 255
    932a:	6b 01       	movw	r12, r22
    932c:	bc 01       	movw	r22, r24
    932e:	cd 01       	movw	r24, r26
    9330:	0e 94 08 47 	call	0x8e10	; 0x8e10 <_ZN10helicopter4util14CoordinateUtil25ConvertFromGeodeticToECEFEfffRfS2_S2_>
	
	ConvertFromECEFToLocalNED(ecefReferenceX, ecefReferenceY, ecefReferenceZ,
		ecefX, ecefY, ecefZ, ecefToLocalNEDRotationMatrix,
		localNEDX, localNEDY, localNEDZ);
    9334:	29 85       	ldd	r18, Y+9	; 0x09
    9336:	3a 85       	ldd	r19, Y+10	; 0x0a
    9338:	4b 85       	ldd	r20, Y+11	; 0x0b
    933a:	5c 85       	ldd	r21, Y+12	; 0x0c
    933c:	8d 81       	ldd	r24, Y+5	; 0x05
    933e:	9e 81       	ldd	r25, Y+6	; 0x06
    9340:	af 81       	ldd	r26, Y+7	; 0x07
    9342:	b8 85       	ldd	r27, Y+8	; 0x08
    9344:	a9 80       	ldd	r10, Y+1	; 0x01
    9346:	ba 80       	ldd	r11, Y+2	; 0x02
    9348:	cb 80       	ldd	r12, Y+3	; 0x03
    934a:	dc 80       	ldd	r13, Y+4	; 0x04
    934c:	ee a8       	ldd	r14, Y+54	; 0x36
    934e:	ff a8       	ldd	r15, Y+55	; 0x37
    9350:	08 ad       	ldd	r16, Y+56	; 0x38
    9352:	19 ad       	ldd	r17, Y+57	; 0x39
    9354:	2a a8       	ldd	r2, Y+50	; 0x32
    9356:	3b a8       	ldd	r3, Y+51	; 0x33
    9358:	4c a8       	ldd	r4, Y+52	; 0x34
    935a:	5d a8       	ldd	r5, Y+53	; 0x35
    935c:	69 8c       	ldd	r6, Y+25	; 0x19
    935e:	7a 8c       	ldd	r7, Y+26	; 0x1a
    9360:	8b 8c       	ldd	r8, Y+27	; 0x1b
    9362:	9c 8c       	ldd	r9, Y+28	; 0x1c
    9364:	22 96       	adiw	r28, 0x02	; 2
    9366:	6f ad       	ldd	r22, Y+63	; 0x3f
    9368:	22 97       	sbiw	r28, 0x02	; 2
    936a:	6f 93       	push	r22
    936c:	21 96       	adiw	r28, 0x01	; 1
    936e:	6f ad       	ldd	r22, Y+63	; 0x3f
    9370:	21 97       	sbiw	r28, 0x01	; 1
    9372:	6f 93       	push	r22
    9374:	6f ad       	ldd	r22, Y+63	; 0x3f
    9376:	6f 93       	push	r22
    9378:	6e ad       	ldd	r22, Y+62	; 0x3e
    937a:	6f 93       	push	r22
    937c:	6d ad       	ldd	r22, Y+61	; 0x3d
    937e:	6f 93       	push	r22
    9380:	6c ad       	ldd	r22, Y+60	; 0x3c
    9382:	6f 93       	push	r22
    9384:	6b ad       	ldd	r22, Y+59	; 0x3b
    9386:	6f 93       	push	r22
    9388:	6a ad       	ldd	r22, Y+58	; 0x3a
    938a:	6f 93       	push	r22
    938c:	65 2f       	mov	r22, r21
    938e:	6f 93       	push	r22
    9390:	64 2f       	mov	r22, r20
    9392:	6f 93       	push	r22
    9394:	63 2f       	mov	r22, r19
    9396:	6f 93       	push	r22
    9398:	2f 93       	push	r18
    939a:	2b 2f       	mov	r18, r27
    939c:	2f 93       	push	r18
    939e:	2a 2f       	mov	r18, r26
    93a0:	2f 93       	push	r18
    93a2:	29 2f       	mov	r18, r25
    93a4:	2f 93       	push	r18
    93a6:	8f 93       	push	r24
    93a8:	a2 01       	movw	r20, r4
    93aa:	91 01       	movw	r18, r2
    93ac:	c4 01       	movw	r24, r8
    93ae:	b3 01       	movw	r22, r6
    93b0:	0e 94 16 48 	call	0x902c	; 0x902c <_ZN10helicopter4util14CoordinateUtil25ConvertFromECEFToLocalNEDEffffffPA3_fRfS4_S4_>
    93b4:	8d b7       	in	r24, 0x3d	; 61
    93b6:	9e b7       	in	r25, 0x3e	; 62
    93b8:	40 96       	adiw	r24, 0x10	; 16
    93ba:	0f b6       	in	r0, 0x3f	; 63
    93bc:	f8 94       	cli
    93be:	de bf       	out	0x3e, r29	; 62
    93c0:	0f be       	out	0x3f, r0	; 63
    93c2:	cd bf       	out	0x3d, r28	; 61
    93c4:	6c 96       	adiw	r28, 0x1c	; 28
    93c6:	0f b6       	in	r0, 0x3f	; 63
    93c8:	f8 94       	cli
    93ca:	de bf       	out	0x3e, r29	; 62
    93cc:	0f be       	out	0x3f, r0	; 63
    93ce:	cd bf       	out	0x3d, r28	; 61
    93d0:	df 91       	pop	r29
    93d2:	cf 91       	pop	r28
    93d4:	1f 91       	pop	r17
    93d6:	0f 91       	pop	r16
    93d8:	ff 90       	pop	r15
    93da:	ef 90       	pop	r14
    93dc:	df 90       	pop	r13
    93de:	cf 90       	pop	r12
    93e0:	bf 90       	pop	r11
    93e2:	af 90       	pop	r10
    93e4:	9f 90       	pop	r9
    93e6:	8f 90       	pop	r8
    93e8:	7f 90       	pop	r7
    93ea:	6f 90       	pop	r6
    93ec:	5f 90       	pop	r5
    93ee:	4f 90       	pop	r4
    93f0:	3f 90       	pop	r3
    93f2:	2f 90       	pop	r2
    93f4:	08 95       	ret

000093f6 <_ZN10helicopter4util5Timer10startTimerEv>:
#include "Timer.h"

using namespace helicopter::util;

void Timer::startTimer()
{
    93f6:	0f 93       	push	r16
    93f8:	1f 93       	push	r17
    93fa:	cf 93       	push	r28
    93fc:	df 93       	push	r29
    93fe:	00 d0       	rcall	.+0      	; 0x9400 <_ZN10helicopter4util5Timer10startTimerEv+0xa>
    9400:	1f 92       	push	r1
    9402:	cd b7       	in	r28, 0x3d	; 61
    9404:	de b7       	in	r29, 0x3e	; 62
    9406:	9c 83       	std	Y+4, r25	; 0x04
    9408:	8b 83       	std	Y+3, r24	; 0x03
	//stop timer in case it was already started.
	stopTimer();
    940a:	8b 81       	ldd	r24, Y+3	; 0x03
    940c:	9c 81       	ldd	r25, Y+4	; 0x04
    940e:	0e 94 cf 4a 	call	0x959e	; 0x959e <_ZN10helicopter4util5Timer9stopTimerEv>
	
	int frequency = 0;
    9412:	1a 82       	std	Y+2, r1	; 0x02
    9414:	19 82       	std	Y+1, r1	; 0x01
	
	if (timeoutMilliseconds > 1000) 
    9416:	8b 81       	ldd	r24, Y+3	; 0x03
    9418:	9c 81       	ldd	r25, Y+4	; 0x04
    941a:	fc 01       	movw	r30, r24
    941c:	86 81       	ldd	r24, Z+6	; 0x06
    941e:	97 81       	ldd	r25, Z+7	; 0x07
    9420:	89 3e       	cpi	r24, 0xE9	; 233
    9422:	f3 e0       	ldi	r31, 0x03	; 3
    9424:	9f 07       	cpc	r25, r31
    9426:	2c f0       	brlt	.+10     	; 0x9432 <_ZN10helicopter4util5Timer10startTimerEv+0x3c>
	{
		frequency = 1;
    9428:	81 e0       	ldi	r24, 0x01	; 1
    942a:	90 e0       	ldi	r25, 0x00	; 0
    942c:	9a 83       	std	Y+2, r25	; 0x02
    942e:	89 83       	std	Y+1, r24	; 0x01
    9430:	0d c0       	rjmp	.+26     	; 0x944c <_ZN10helicopter4util5Timer10startTimerEv+0x56>
	}else
	{
		frequency = 1000 / timeoutMilliseconds;
    9432:	8b 81       	ldd	r24, Y+3	; 0x03
    9434:	9c 81       	ldd	r25, Y+4	; 0x04
    9436:	fc 01       	movw	r30, r24
    9438:	26 81       	ldd	r18, Z+6	; 0x06
    943a:	37 81       	ldd	r19, Z+7	; 0x07
    943c:	88 ee       	ldi	r24, 0xE8	; 232
    943e:	93 e0       	ldi	r25, 0x03	; 3
    9440:	b9 01       	movw	r22, r18
    9442:	0e 94 4f 4f 	call	0x9e9e	; 0x9e9e <__divmodhi4>
    9446:	9b 01       	movw	r18, r22
    9448:	3a 83       	std	Y+2, r19	; 0x02
    944a:	29 83       	std	Y+1, r18	; 0x01
	}

	//setup timer.
	//set the output compare register so that when the Timer Counter (TCNT) matches this output register
	//it indicates that the timer has timed out.
	OCR3A = ((cpuSpeed /  timerPrescaler) / frequency); 
    944c:	08 e9       	ldi	r16, 0x98	; 152
    944e:	10 e0       	ldi	r17, 0x00	; 0
    9450:	8b 81       	ldd	r24, Y+3	; 0x03
    9452:	9c 81       	ldd	r25, Y+4	; 0x04
    9454:	fc 01       	movw	r30, r24
    9456:	80 81       	ld	r24, Z
    9458:	91 81       	ldd	r25, Z+1	; 0x01
    945a:	a2 81       	ldd	r26, Z+2	; 0x02
    945c:	b3 81       	ldd	r27, Z+3	; 0x03
    945e:	2b 81       	ldd	r18, Y+3	; 0x03
    9460:	3c 81       	ldd	r19, Y+4	; 0x04
    9462:	f9 01       	movw	r30, r18
    9464:	24 81       	ldd	r18, Z+4	; 0x04
    9466:	35 81       	ldd	r19, Z+5	; 0x05
    9468:	44 27       	eor	r20, r20
    946a:	37 fd       	sbrc	r19, 7
    946c:	40 95       	com	r20
    946e:	54 2f       	mov	r21, r20
    9470:	bc 01       	movw	r22, r24
    9472:	cd 01       	movw	r24, r26
    9474:	0e 94 63 4f 	call	0x9ec6	; 0x9ec6 <__udivmodsi4>
    9478:	da 01       	movw	r26, r20
    947a:	c9 01       	movw	r24, r18
    947c:	29 81       	ldd	r18, Y+1	; 0x01
    947e:	3a 81       	ldd	r19, Y+2	; 0x02
    9480:	44 27       	eor	r20, r20
    9482:	37 fd       	sbrc	r19, 7
    9484:	40 95       	com	r20
    9486:	54 2f       	mov	r21, r20
    9488:	bc 01       	movw	r22, r24
    948a:	cd 01       	movw	r24, r26
    948c:	0e 94 63 4f 	call	0x9ec6	; 0x9ec6 <__udivmodsi4>
    9490:	da 01       	movw	r26, r20
    9492:	c9 01       	movw	r24, r18
    9494:	f8 01       	movw	r30, r16
    9496:	91 83       	std	Z+1, r25	; 0x01
    9498:	80 83       	st	Z, r24
		
	TCCR3B |= (1 << WGM32); //Configure timer 1 for Clear on Timer Compare (CTC) mode so that if there is a match, the TCNT goes back to 0.
    949a:	81 e9       	ldi	r24, 0x91	; 145
    949c:	90 e0       	ldi	r25, 0x00	; 0
    949e:	21 e9       	ldi	r18, 0x91	; 145
    94a0:	30 e0       	ldi	r19, 0x00	; 0
    94a2:	f9 01       	movw	r30, r18
    94a4:	20 81       	ld	r18, Z
    94a6:	28 60       	ori	r18, 0x08	; 8
    94a8:	fc 01       	movw	r30, r24
    94aa:	20 83       	st	Z, r18
		
	//Set the Timer Counter Control Register (TCCR) with the appropriate prescaller
	//which causes the timer counter to start (i.e. the timer starts).
	switch(timerPrescaler)
    94ac:	8b 81       	ldd	r24, Y+3	; 0x03
    94ae:	9c 81       	ldd	r25, Y+4	; 0x04
    94b0:	fc 01       	movw	r30, r24
    94b2:	84 81       	ldd	r24, Z+4	; 0x04
    94b4:	95 81       	ldd	r25, Z+5	; 0x05
    94b6:	80 34       	cpi	r24, 0x40	; 64
    94b8:	91 05       	cpc	r25, r1
    94ba:	39 f1       	breq	.+78     	; 0x950a <_ZN10helicopter4util5Timer10startTimerEv+0x114>
    94bc:	81 34       	cpi	r24, 0x41	; 65
    94be:	91 05       	cpc	r25, r1
    94c0:	3c f4       	brge	.+14     	; 0x94d0 <_ZN10helicopter4util5Timer10startTimerEv+0xda>
    94c2:	81 30       	cpi	r24, 0x01	; 1
    94c4:	91 05       	cpc	r25, r1
    94c6:	69 f0       	breq	.+26     	; 0x94e2 <_ZN10helicopter4util5Timer10startTimerEv+0xec>
    94c8:	88 30       	cpi	r24, 0x08	; 8
    94ca:	91 05       	cpc	r25, r1
    94cc:	a1 f0       	breq	.+40     	; 0x94f6 <_ZN10helicopter4util5Timer10startTimerEv+0x100>
    94ce:	3b c0       	rjmp	.+118    	; 0x9546 <_ZN10helicopter4util5Timer10startTimerEv+0x150>
    94d0:	81 15       	cp	r24, r1
    94d2:	f1 e0       	ldi	r31, 0x01	; 1
    94d4:	9f 07       	cpc	r25, r31
    94d6:	19 f1       	breq	.+70     	; 0x951e <_ZN10helicopter4util5Timer10startTimerEv+0x128>
    94d8:	81 15       	cp	r24, r1
    94da:	24 e0       	ldi	r18, 0x04	; 4
    94dc:	92 07       	cpc	r25, r18
    94de:	49 f1       	breq	.+82     	; 0x9532 <_ZN10helicopter4util5Timer10startTimerEv+0x13c>
    94e0:	32 c0       	rjmp	.+100    	; 0x9546 <_ZN10helicopter4util5Timer10startTimerEv+0x150>
	{
		case NO_PRESCALER:
		TCCR3B |= NoPrescaling;
    94e2:	81 e9       	ldi	r24, 0x91	; 145
    94e4:	90 e0       	ldi	r25, 0x00	; 0
    94e6:	21 e9       	ldi	r18, 0x91	; 145
    94e8:	30 e0       	ldi	r19, 0x00	; 0
    94ea:	f9 01       	movw	r30, r18
    94ec:	20 81       	ld	r18, Z
    94ee:	21 60       	ori	r18, 0x01	; 1
    94f0:	fc 01       	movw	r30, r24
    94f2:	20 83       	st	Z, r18
		break;
    94f4:	31 c0       	rjmp	.+98     	; 0x9558 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_EIGHT:
		TCCR3B |= PrescaleByEight;
    94f6:	81 e9       	ldi	r24, 0x91	; 145
    94f8:	90 e0       	ldi	r25, 0x00	; 0
    94fa:	21 e9       	ldi	r18, 0x91	; 145
    94fc:	30 e0       	ldi	r19, 0x00	; 0
    94fe:	f9 01       	movw	r30, r18
    9500:	20 81       	ld	r18, Z
    9502:	22 60       	ori	r18, 0x02	; 2
    9504:	fc 01       	movw	r30, r24
    9506:	20 83       	st	Z, r18
		break;
    9508:	27 c0       	rjmp	.+78     	; 0x9558 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_SIXTYFOUR:
		TCCR3B |= PrescaleBySixtyFour;
    950a:	81 e9       	ldi	r24, 0x91	; 145
    950c:	90 e0       	ldi	r25, 0x00	; 0
    950e:	21 e9       	ldi	r18, 0x91	; 145
    9510:	30 e0       	ldi	r19, 0x00	; 0
    9512:	f9 01       	movw	r30, r18
    9514:	20 81       	ld	r18, Z
    9516:	23 60       	ori	r18, 0x03	; 3
    9518:	fc 01       	movw	r30, r24
    951a:	20 83       	st	Z, r18
		break;
    951c:	1d c0       	rjmp	.+58     	; 0x9558 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_TWOFIFTYSIX:
		TCCR3B |= PrescaleByTwofiftysix;
    951e:	81 e9       	ldi	r24, 0x91	; 145
    9520:	90 e0       	ldi	r25, 0x00	; 0
    9522:	21 e9       	ldi	r18, 0x91	; 145
    9524:	30 e0       	ldi	r19, 0x00	; 0
    9526:	f9 01       	movw	r30, r18
    9528:	20 81       	ld	r18, Z
    952a:	24 60       	ori	r18, 0x04	; 4
    952c:	fc 01       	movw	r30, r24
    952e:	20 83       	st	Z, r18
		break;
    9530:	13 c0       	rjmp	.+38     	; 0x9558 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		case PRESCALE_BY_TENTWENTYFOUR:
		TCCR3B |= PrescaleByTentwentyfour;
    9532:	81 e9       	ldi	r24, 0x91	; 145
    9534:	90 e0       	ldi	r25, 0x00	; 0
    9536:	21 e9       	ldi	r18, 0x91	; 145
    9538:	30 e0       	ldi	r19, 0x00	; 0
    953a:	f9 01       	movw	r30, r18
    953c:	20 81       	ld	r18, Z
    953e:	25 60       	ori	r18, 0x05	; 5
    9540:	fc 01       	movw	r30, r24
    9542:	20 83       	st	Z, r18
		break;
    9544:	09 c0       	rjmp	.+18     	; 0x9558 <_ZN10helicopter4util5Timer10startTimerEv+0x162>
		default:
		TCCR3B |= NoPrescaling;
    9546:	81 e9       	ldi	r24, 0x91	; 145
    9548:	90 e0       	ldi	r25, 0x00	; 0
    954a:	21 e9       	ldi	r18, 0x91	; 145
    954c:	30 e0       	ldi	r19, 0x00	; 0
    954e:	f9 01       	movw	r30, r18
    9550:	20 81       	ld	r18, Z
    9552:	21 60       	ori	r18, 0x01	; 1
    9554:	fc 01       	movw	r30, r24
    9556:	20 83       	st	Z, r18
	}
}
    9558:	0f 90       	pop	r0
    955a:	0f 90       	pop	r0
    955c:	0f 90       	pop	r0
    955e:	0f 90       	pop	r0
    9560:	df 91       	pop	r29
    9562:	cf 91       	pop	r28
    9564:	1f 91       	pop	r17
    9566:	0f 91       	pop	r16
    9568:	08 95       	ret

0000956a <_ZN10helicopter4util5Timer11hasTimedoutEv>:

bool Timer::hasTimedout()
{
    956a:	cf 93       	push	r28
    956c:	df 93       	push	r29
    956e:	1f 92       	push	r1
    9570:	1f 92       	push	r1
    9572:	cd b7       	in	r28, 0x3d	; 61
    9574:	de b7       	in	r29, 0x3e	; 62
    9576:	9a 83       	std	Y+2, r25	; 0x02
    9578:	89 83       	std	Y+1, r24	; 0x01
	//Check the Timer Interrupt Flags Register (TIFR) to determine if the flag was set indicating
	//that the timer has timed out.
	return (TIFR3 & (1<<OCF3A)) != 0;
    957a:	88 e3       	ldi	r24, 0x38	; 56
    957c:	90 e0       	ldi	r25, 0x00	; 0
    957e:	fc 01       	movw	r30, r24
    9580:	80 81       	ld	r24, Z
    9582:	88 2f       	mov	r24, r24
    9584:	90 e0       	ldi	r25, 0x00	; 0
    9586:	82 70       	andi	r24, 0x02	; 2
    9588:	99 27       	eor	r25, r25
    958a:	21 e0       	ldi	r18, 0x01	; 1
    958c:	00 97       	sbiw	r24, 0x00	; 0
    958e:	09 f4       	brne	.+2      	; 0x9592 <_ZN10helicopter4util5Timer11hasTimedoutEv+0x28>
    9590:	20 e0       	ldi	r18, 0x00	; 0
    9592:	82 2f       	mov	r24, r18
}
    9594:	0f 90       	pop	r0
    9596:	0f 90       	pop	r0
    9598:	df 91       	pop	r29
    959a:	cf 91       	pop	r28
    959c:	08 95       	ret

0000959e <_ZN10helicopter4util5Timer9stopTimerEv>:

void Timer::stopTimer()
{
    959e:	cf 93       	push	r28
    95a0:	df 93       	push	r29
    95a2:	1f 92       	push	r1
    95a4:	1f 92       	push	r1
    95a6:	cd b7       	in	r28, 0x3d	; 61
    95a8:	de b7       	in	r29, 0x3e	; 62
    95aa:	9a 83       	std	Y+2, r25	; 0x02
    95ac:	89 83       	std	Y+1, r24	; 0x01
	//stop the timer
	TCCR3B = 0;
    95ae:	81 e9       	ldi	r24, 0x91	; 145
    95b0:	90 e0       	ldi	r25, 0x00	; 0
    95b2:	fc 01       	movw	r30, r24
    95b4:	10 82       	st	Z, r1
	
	//Then clear the timer counter (sets the count back to 0 so when the timer starts again, it starts from 0). 
	//Clear after stopping in order to avoid missing a compare match.
	TCNT3 = 0;
    95b6:	84 e9       	ldi	r24, 0x94	; 148
    95b8:	90 e0       	ldi	r25, 0x00	; 0
    95ba:	fc 01       	movw	r30, r24
    95bc:	11 82       	std	Z+1, r1	; 0x01
    95be:	10 82       	st	Z, r1
	
	//clear the timeout flag.
	TIFR3 |= (1<<OCF3A);
    95c0:	88 e3       	ldi	r24, 0x38	; 56
    95c2:	90 e0       	ldi	r25, 0x00	; 0
    95c4:	28 e3       	ldi	r18, 0x38	; 56
    95c6:	30 e0       	ldi	r19, 0x00	; 0
    95c8:	f9 01       	movw	r30, r18
    95ca:	20 81       	ld	r18, Z
    95cc:	22 60       	ori	r18, 0x02	; 2
    95ce:	fc 01       	movw	r30, r24
    95d0:	20 83       	st	Z, r18
    95d2:	0f 90       	pop	r0
    95d4:	0f 90       	pop	r0
    95d6:	df 91       	pop	r29
    95d8:	cf 91       	pop	r28
    95da:	08 95       	ret

000095dc <__subsf3>:
    95dc:	50 58       	subi	r21, 0x80	; 128

000095de <__addsf3>:
    95de:	bb 27       	eor	r27, r27
    95e0:	aa 27       	eor	r26, r26
    95e2:	0e d0       	rcall	.+28     	; 0x9600 <__addsf3x>
    95e4:	dc c1       	rjmp	.+952    	; 0x999e <__fp_round>
    95e6:	a5 d1       	rcall	.+842    	; 0x9932 <__fp_pscA>
    95e8:	30 f0       	brcs	.+12     	; 0x95f6 <__addsf3+0x18>
    95ea:	aa d1       	rcall	.+852    	; 0x9940 <__fp_pscB>
    95ec:	20 f0       	brcs	.+8      	; 0x95f6 <__addsf3+0x18>
    95ee:	31 f4       	brne	.+12     	; 0x95fc <__addsf3+0x1e>
    95f0:	9f 3f       	cpi	r25, 0xFF	; 255
    95f2:	11 f4       	brne	.+4      	; 0x95f8 <__addsf3+0x1a>
    95f4:	1e f4       	brtc	.+6      	; 0x95fc <__addsf3+0x1e>
    95f6:	9a c1       	rjmp	.+820    	; 0x992c <__fp_nan>
    95f8:	0e f4       	brtc	.+2      	; 0x95fc <__addsf3+0x1e>
    95fa:	e0 95       	com	r30
    95fc:	e7 fb       	bst	r30, 7
    95fe:	67 c1       	rjmp	.+718    	; 0x98ce <__fp_inf>

00009600 <__addsf3x>:
    9600:	e9 2f       	mov	r30, r25
    9602:	ef d1       	rcall	.+990    	; 0x99e2 <__fp_split3>
    9604:	80 f3       	brcs	.-32     	; 0x95e6 <__addsf3+0x8>
    9606:	ba 17       	cp	r27, r26
    9608:	62 07       	cpc	r22, r18
    960a:	73 07       	cpc	r23, r19
    960c:	84 07       	cpc	r24, r20
    960e:	95 07       	cpc	r25, r21
    9610:	18 f0       	brcs	.+6      	; 0x9618 <__addsf3x+0x18>
    9612:	71 f4       	brne	.+28     	; 0x9630 <__addsf3x+0x30>
    9614:	9e f5       	brtc	.+102    	; 0x967c <__addsf3x+0x7c>
    9616:	1e c2       	rjmp	.+1084   	; 0x9a54 <__fp_zero>
    9618:	0e f4       	brtc	.+2      	; 0x961c <__addsf3x+0x1c>
    961a:	e0 95       	com	r30
    961c:	0b 2e       	mov	r0, r27
    961e:	ba 2f       	mov	r27, r26
    9620:	a0 2d       	mov	r26, r0
    9622:	0b 01       	movw	r0, r22
    9624:	b9 01       	movw	r22, r18
    9626:	90 01       	movw	r18, r0
    9628:	0c 01       	movw	r0, r24
    962a:	ca 01       	movw	r24, r20
    962c:	a0 01       	movw	r20, r0
    962e:	11 24       	eor	r1, r1
    9630:	ff 27       	eor	r31, r31
    9632:	59 1b       	sub	r21, r25
    9634:	99 f0       	breq	.+38     	; 0x965c <__addsf3x+0x5c>
    9636:	59 3f       	cpi	r21, 0xF9	; 249
    9638:	50 f4       	brcc	.+20     	; 0x964e <__addsf3x+0x4e>
    963a:	50 3e       	cpi	r21, 0xE0	; 224
    963c:	68 f1       	brcs	.+90     	; 0x9698 <__addsf3x+0x98>
    963e:	1a 16       	cp	r1, r26
    9640:	f0 40       	sbci	r31, 0x00	; 0
    9642:	a2 2f       	mov	r26, r18
    9644:	23 2f       	mov	r18, r19
    9646:	34 2f       	mov	r19, r20
    9648:	44 27       	eor	r20, r20
    964a:	58 5f       	subi	r21, 0xF8	; 248
    964c:	f3 cf       	rjmp	.-26     	; 0x9634 <__addsf3x+0x34>
    964e:	46 95       	lsr	r20
    9650:	37 95       	ror	r19
    9652:	27 95       	ror	r18
    9654:	a7 95       	ror	r26
    9656:	f0 40       	sbci	r31, 0x00	; 0
    9658:	53 95       	inc	r21
    965a:	c9 f7       	brne	.-14     	; 0x964e <__addsf3x+0x4e>
    965c:	7e f4       	brtc	.+30     	; 0x967c <__addsf3x+0x7c>
    965e:	1f 16       	cp	r1, r31
    9660:	ba 0b       	sbc	r27, r26
    9662:	62 0b       	sbc	r22, r18
    9664:	73 0b       	sbc	r23, r19
    9666:	84 0b       	sbc	r24, r20
    9668:	ba f0       	brmi	.+46     	; 0x9698 <__addsf3x+0x98>
    966a:	91 50       	subi	r25, 0x01	; 1
    966c:	a1 f0       	breq	.+40     	; 0x9696 <__addsf3x+0x96>
    966e:	ff 0f       	add	r31, r31
    9670:	bb 1f       	adc	r27, r27
    9672:	66 1f       	adc	r22, r22
    9674:	77 1f       	adc	r23, r23
    9676:	88 1f       	adc	r24, r24
    9678:	c2 f7       	brpl	.-16     	; 0x966a <__addsf3x+0x6a>
    967a:	0e c0       	rjmp	.+28     	; 0x9698 <__addsf3x+0x98>
    967c:	ba 0f       	add	r27, r26
    967e:	62 1f       	adc	r22, r18
    9680:	73 1f       	adc	r23, r19
    9682:	84 1f       	adc	r24, r20
    9684:	48 f4       	brcc	.+18     	; 0x9698 <__addsf3x+0x98>
    9686:	87 95       	ror	r24
    9688:	77 95       	ror	r23
    968a:	67 95       	ror	r22
    968c:	b7 95       	ror	r27
    968e:	f7 95       	ror	r31
    9690:	9e 3f       	cpi	r25, 0xFE	; 254
    9692:	08 f0       	brcs	.+2      	; 0x9696 <__addsf3x+0x96>
    9694:	b3 cf       	rjmp	.-154    	; 0x95fc <__addsf3+0x1e>
    9696:	93 95       	inc	r25
    9698:	88 0f       	add	r24, r24
    969a:	08 f0       	brcs	.+2      	; 0x969e <__addsf3x+0x9e>
    969c:	99 27       	eor	r25, r25
    969e:	ee 0f       	add	r30, r30
    96a0:	97 95       	ror	r25
    96a2:	87 95       	ror	r24
    96a4:	08 95       	ret

000096a6 <__cmpsf2>:
    96a6:	ef d0       	rcall	.+478    	; 0x9886 <__fp_cmp>
    96a8:	08 f4       	brcc	.+2      	; 0x96ac <__cmpsf2+0x6>
    96aa:	81 e0       	ldi	r24, 0x01	; 1
    96ac:	08 95       	ret

000096ae <cos>:
    96ae:	50 d1       	rcall	.+672    	; 0x9950 <__fp_rempio2>
    96b0:	e3 95       	inc	r30
    96b2:	86 c1       	rjmp	.+780    	; 0x99c0 <__fp_sinus>

000096b4 <__divsf3>:
    96b4:	0c d0       	rcall	.+24     	; 0x96ce <__divsf3x>
    96b6:	73 c1       	rjmp	.+742    	; 0x999e <__fp_round>
    96b8:	43 d1       	rcall	.+646    	; 0x9940 <__fp_pscB>
    96ba:	40 f0       	brcs	.+16     	; 0x96cc <__divsf3+0x18>
    96bc:	3a d1       	rcall	.+628    	; 0x9932 <__fp_pscA>
    96be:	30 f0       	brcs	.+12     	; 0x96cc <__divsf3+0x18>
    96c0:	21 f4       	brne	.+8      	; 0x96ca <__divsf3+0x16>
    96c2:	5f 3f       	cpi	r21, 0xFF	; 255
    96c4:	19 f0       	breq	.+6      	; 0x96cc <__divsf3+0x18>
    96c6:	03 c1       	rjmp	.+518    	; 0x98ce <__fp_inf>
    96c8:	51 11       	cpse	r21, r1
    96ca:	c5 c1       	rjmp	.+906    	; 0x9a56 <__fp_szero>
    96cc:	2f c1       	rjmp	.+606    	; 0x992c <__fp_nan>

000096ce <__divsf3x>:
    96ce:	89 d1       	rcall	.+786    	; 0x99e2 <__fp_split3>
    96d0:	98 f3       	brcs	.-26     	; 0x96b8 <__divsf3+0x4>

000096d2 <__divsf3_pse>:
    96d2:	99 23       	and	r25, r25
    96d4:	c9 f3       	breq	.-14     	; 0x96c8 <__divsf3+0x14>
    96d6:	55 23       	and	r21, r21
    96d8:	b1 f3       	breq	.-20     	; 0x96c6 <__divsf3+0x12>
    96da:	95 1b       	sub	r25, r21
    96dc:	55 0b       	sbc	r21, r21
    96de:	bb 27       	eor	r27, r27
    96e0:	aa 27       	eor	r26, r26
    96e2:	62 17       	cp	r22, r18
    96e4:	73 07       	cpc	r23, r19
    96e6:	84 07       	cpc	r24, r20
    96e8:	38 f0       	brcs	.+14     	; 0x96f8 <__divsf3_pse+0x26>
    96ea:	9f 5f       	subi	r25, 0xFF	; 255
    96ec:	5f 4f       	sbci	r21, 0xFF	; 255
    96ee:	22 0f       	add	r18, r18
    96f0:	33 1f       	adc	r19, r19
    96f2:	44 1f       	adc	r20, r20
    96f4:	aa 1f       	adc	r26, r26
    96f6:	a9 f3       	breq	.-22     	; 0x96e2 <__divsf3_pse+0x10>
    96f8:	33 d0       	rcall	.+102    	; 0x9760 <__divsf3_pse+0x8e>
    96fa:	0e 2e       	mov	r0, r30
    96fc:	3a f0       	brmi	.+14     	; 0x970c <__divsf3_pse+0x3a>
    96fe:	e0 e8       	ldi	r30, 0x80	; 128
    9700:	30 d0       	rcall	.+96     	; 0x9762 <__divsf3_pse+0x90>
    9702:	91 50       	subi	r25, 0x01	; 1
    9704:	50 40       	sbci	r21, 0x00	; 0
    9706:	e6 95       	lsr	r30
    9708:	00 1c       	adc	r0, r0
    970a:	ca f7       	brpl	.-14     	; 0x96fe <__divsf3_pse+0x2c>
    970c:	29 d0       	rcall	.+82     	; 0x9760 <__divsf3_pse+0x8e>
    970e:	fe 2f       	mov	r31, r30
    9710:	27 d0       	rcall	.+78     	; 0x9760 <__divsf3_pse+0x8e>
    9712:	66 0f       	add	r22, r22
    9714:	77 1f       	adc	r23, r23
    9716:	88 1f       	adc	r24, r24
    9718:	bb 1f       	adc	r27, r27
    971a:	26 17       	cp	r18, r22
    971c:	37 07       	cpc	r19, r23
    971e:	48 07       	cpc	r20, r24
    9720:	ab 07       	cpc	r26, r27
    9722:	b0 e8       	ldi	r27, 0x80	; 128
    9724:	09 f0       	breq	.+2      	; 0x9728 <__divsf3_pse+0x56>
    9726:	bb 0b       	sbc	r27, r27
    9728:	80 2d       	mov	r24, r0
    972a:	bf 01       	movw	r22, r30
    972c:	ff 27       	eor	r31, r31
    972e:	93 58       	subi	r25, 0x83	; 131
    9730:	5f 4f       	sbci	r21, 0xFF	; 255
    9732:	2a f0       	brmi	.+10     	; 0x973e <__divsf3_pse+0x6c>
    9734:	9e 3f       	cpi	r25, 0xFE	; 254
    9736:	51 05       	cpc	r21, r1
    9738:	68 f0       	brcs	.+26     	; 0x9754 <__divsf3_pse+0x82>
    973a:	c9 c0       	rjmp	.+402    	; 0x98ce <__fp_inf>
    973c:	8c c1       	rjmp	.+792    	; 0x9a56 <__fp_szero>
    973e:	5f 3f       	cpi	r21, 0xFF	; 255
    9740:	ec f3       	brlt	.-6      	; 0x973c <__divsf3_pse+0x6a>
    9742:	98 3e       	cpi	r25, 0xE8	; 232
    9744:	dc f3       	brlt	.-10     	; 0x973c <__divsf3_pse+0x6a>
    9746:	86 95       	lsr	r24
    9748:	77 95       	ror	r23
    974a:	67 95       	ror	r22
    974c:	b7 95       	ror	r27
    974e:	f7 95       	ror	r31
    9750:	9f 5f       	subi	r25, 0xFF	; 255
    9752:	c9 f7       	brne	.-14     	; 0x9746 <__divsf3_pse+0x74>
    9754:	88 0f       	add	r24, r24
    9756:	91 1d       	adc	r25, r1
    9758:	96 95       	lsr	r25
    975a:	87 95       	ror	r24
    975c:	97 f9       	bld	r25, 7
    975e:	08 95       	ret
    9760:	e1 e0       	ldi	r30, 0x01	; 1
    9762:	66 0f       	add	r22, r22
    9764:	77 1f       	adc	r23, r23
    9766:	88 1f       	adc	r24, r24
    9768:	bb 1f       	adc	r27, r27
    976a:	62 17       	cp	r22, r18
    976c:	73 07       	cpc	r23, r19
    976e:	84 07       	cpc	r24, r20
    9770:	ba 07       	cpc	r27, r26
    9772:	20 f0       	brcs	.+8      	; 0x977c <__divsf3_pse+0xaa>
    9774:	62 1b       	sub	r22, r18
    9776:	73 0b       	sbc	r23, r19
    9778:	84 0b       	sbc	r24, r20
    977a:	ba 0b       	sbc	r27, r26
    977c:	ee 1f       	adc	r30, r30
    977e:	88 f7       	brcc	.-30     	; 0x9762 <__divsf3_pse+0x90>
    9780:	e0 95       	com	r30
    9782:	08 95       	ret

00009784 <__fixsfsi>:
    9784:	04 d0       	rcall	.+8      	; 0x978e <__fixunssfsi>
    9786:	68 94       	set
    9788:	b1 11       	cpse	r27, r1
    978a:	65 c1       	rjmp	.+714    	; 0x9a56 <__fp_szero>
    978c:	08 95       	ret

0000978e <__fixunssfsi>:
    978e:	31 d1       	rcall	.+610    	; 0x99f2 <__fp_splitA>
    9790:	88 f0       	brcs	.+34     	; 0x97b4 <__fixunssfsi+0x26>
    9792:	9f 57       	subi	r25, 0x7F	; 127
    9794:	90 f0       	brcs	.+36     	; 0x97ba <__fixunssfsi+0x2c>
    9796:	b9 2f       	mov	r27, r25
    9798:	99 27       	eor	r25, r25
    979a:	b7 51       	subi	r27, 0x17	; 23
    979c:	a0 f0       	brcs	.+40     	; 0x97c6 <__fixunssfsi+0x38>
    979e:	d1 f0       	breq	.+52     	; 0x97d4 <__fixunssfsi+0x46>
    97a0:	66 0f       	add	r22, r22
    97a2:	77 1f       	adc	r23, r23
    97a4:	88 1f       	adc	r24, r24
    97a6:	99 1f       	adc	r25, r25
    97a8:	1a f0       	brmi	.+6      	; 0x97b0 <__fixunssfsi+0x22>
    97aa:	ba 95       	dec	r27
    97ac:	c9 f7       	brne	.-14     	; 0x97a0 <__fixunssfsi+0x12>
    97ae:	12 c0       	rjmp	.+36     	; 0x97d4 <__fixunssfsi+0x46>
    97b0:	b1 30       	cpi	r27, 0x01	; 1
    97b2:	81 f0       	breq	.+32     	; 0x97d4 <__fixunssfsi+0x46>
    97b4:	4f d1       	rcall	.+670    	; 0x9a54 <__fp_zero>
    97b6:	b1 e0       	ldi	r27, 0x01	; 1
    97b8:	08 95       	ret
    97ba:	4c c1       	rjmp	.+664    	; 0x9a54 <__fp_zero>
    97bc:	67 2f       	mov	r22, r23
    97be:	78 2f       	mov	r23, r24
    97c0:	88 27       	eor	r24, r24
    97c2:	b8 5f       	subi	r27, 0xF8	; 248
    97c4:	39 f0       	breq	.+14     	; 0x97d4 <__fixunssfsi+0x46>
    97c6:	b9 3f       	cpi	r27, 0xF9	; 249
    97c8:	cc f3       	brlt	.-14     	; 0x97bc <__fixunssfsi+0x2e>
    97ca:	86 95       	lsr	r24
    97cc:	77 95       	ror	r23
    97ce:	67 95       	ror	r22
    97d0:	b3 95       	inc	r27
    97d2:	d9 f7       	brne	.-10     	; 0x97ca <__fixunssfsi+0x3c>
    97d4:	3e f4       	brtc	.+14     	; 0x97e4 <__fixunssfsi+0x56>
    97d6:	90 95       	com	r25
    97d8:	80 95       	com	r24
    97da:	70 95       	com	r23
    97dc:	61 95       	neg	r22
    97de:	7f 4f       	sbci	r23, 0xFF	; 255
    97e0:	8f 4f       	sbci	r24, 0xFF	; 255
    97e2:	9f 4f       	sbci	r25, 0xFF	; 255
    97e4:	08 95       	ret

000097e6 <__floatunsisf>:
    97e6:	e8 94       	clt
    97e8:	09 c0       	rjmp	.+18     	; 0x97fc <__floatsisf+0x12>

000097ea <__floatsisf>:
    97ea:	97 fb       	bst	r25, 7
    97ec:	3e f4       	brtc	.+14     	; 0x97fc <__floatsisf+0x12>
    97ee:	90 95       	com	r25
    97f0:	80 95       	com	r24
    97f2:	70 95       	com	r23
    97f4:	61 95       	neg	r22
    97f6:	7f 4f       	sbci	r23, 0xFF	; 255
    97f8:	8f 4f       	sbci	r24, 0xFF	; 255
    97fa:	9f 4f       	sbci	r25, 0xFF	; 255
    97fc:	99 23       	and	r25, r25
    97fe:	a9 f0       	breq	.+42     	; 0x982a <__floatsisf+0x40>
    9800:	f9 2f       	mov	r31, r25
    9802:	96 e9       	ldi	r25, 0x96	; 150
    9804:	bb 27       	eor	r27, r27
    9806:	93 95       	inc	r25
    9808:	f6 95       	lsr	r31
    980a:	87 95       	ror	r24
    980c:	77 95       	ror	r23
    980e:	67 95       	ror	r22
    9810:	b7 95       	ror	r27
    9812:	f1 11       	cpse	r31, r1
    9814:	f8 cf       	rjmp	.-16     	; 0x9806 <__floatsisf+0x1c>
    9816:	fa f4       	brpl	.+62     	; 0x9856 <__floatsisf+0x6c>
    9818:	bb 0f       	add	r27, r27
    981a:	11 f4       	brne	.+4      	; 0x9820 <__floatsisf+0x36>
    981c:	60 ff       	sbrs	r22, 0
    981e:	1b c0       	rjmp	.+54     	; 0x9856 <__floatsisf+0x6c>
    9820:	6f 5f       	subi	r22, 0xFF	; 255
    9822:	7f 4f       	sbci	r23, 0xFF	; 255
    9824:	8f 4f       	sbci	r24, 0xFF	; 255
    9826:	9f 4f       	sbci	r25, 0xFF	; 255
    9828:	16 c0       	rjmp	.+44     	; 0x9856 <__floatsisf+0x6c>
    982a:	88 23       	and	r24, r24
    982c:	11 f0       	breq	.+4      	; 0x9832 <__floatsisf+0x48>
    982e:	96 e9       	ldi	r25, 0x96	; 150
    9830:	11 c0       	rjmp	.+34     	; 0x9854 <__floatsisf+0x6a>
    9832:	77 23       	and	r23, r23
    9834:	21 f0       	breq	.+8      	; 0x983e <__floatsisf+0x54>
    9836:	9e e8       	ldi	r25, 0x8E	; 142
    9838:	87 2f       	mov	r24, r23
    983a:	76 2f       	mov	r23, r22
    983c:	05 c0       	rjmp	.+10     	; 0x9848 <__floatsisf+0x5e>
    983e:	66 23       	and	r22, r22
    9840:	71 f0       	breq	.+28     	; 0x985e <__floatsisf+0x74>
    9842:	96 e8       	ldi	r25, 0x86	; 134
    9844:	86 2f       	mov	r24, r22
    9846:	70 e0       	ldi	r23, 0x00	; 0
    9848:	60 e0       	ldi	r22, 0x00	; 0
    984a:	2a f0       	brmi	.+10     	; 0x9856 <__floatsisf+0x6c>
    984c:	9a 95       	dec	r25
    984e:	66 0f       	add	r22, r22
    9850:	77 1f       	adc	r23, r23
    9852:	88 1f       	adc	r24, r24
    9854:	da f7       	brpl	.-10     	; 0x984c <__floatsisf+0x62>
    9856:	88 0f       	add	r24, r24
    9858:	96 95       	lsr	r25
    985a:	87 95       	ror	r24
    985c:	97 f9       	bld	r25, 7
    985e:	08 95       	ret

00009860 <floor>:
    9860:	e2 d0       	rcall	.+452    	; 0x9a26 <__fp_trunc>
    9862:	80 f0       	brcs	.+32     	; 0x9884 <floor+0x24>
    9864:	9f 37       	cpi	r25, 0x7F	; 127
    9866:	40 f4       	brcc	.+16     	; 0x9878 <floor+0x18>
    9868:	91 11       	cpse	r25, r1
    986a:	0e f0       	brts	.+2      	; 0x986e <floor+0xe>
    986c:	f4 c0       	rjmp	.+488    	; 0x9a56 <__fp_szero>
    986e:	60 e0       	ldi	r22, 0x00	; 0
    9870:	70 e0       	ldi	r23, 0x00	; 0
    9872:	80 e8       	ldi	r24, 0x80	; 128
    9874:	9f eb       	ldi	r25, 0xBF	; 191
    9876:	08 95       	ret
    9878:	26 f4       	brtc	.+8      	; 0x9882 <floor+0x22>
    987a:	1b 16       	cp	r1, r27
    987c:	61 1d       	adc	r22, r1
    987e:	71 1d       	adc	r23, r1
    9880:	81 1d       	adc	r24, r1
    9882:	2b c0       	rjmp	.+86     	; 0x98da <__fp_mintl>
    9884:	45 c0       	rjmp	.+138    	; 0x9910 <__fp_mpack>

00009886 <__fp_cmp>:
    9886:	99 0f       	add	r25, r25
    9888:	00 08       	sbc	r0, r0
    988a:	55 0f       	add	r21, r21
    988c:	aa 0b       	sbc	r26, r26
    988e:	e0 e8       	ldi	r30, 0x80	; 128
    9890:	fe ef       	ldi	r31, 0xFE	; 254
    9892:	16 16       	cp	r1, r22
    9894:	17 06       	cpc	r1, r23
    9896:	e8 07       	cpc	r30, r24
    9898:	f9 07       	cpc	r31, r25
    989a:	c0 f0       	brcs	.+48     	; 0x98cc <__fp_cmp+0x46>
    989c:	12 16       	cp	r1, r18
    989e:	13 06       	cpc	r1, r19
    98a0:	e4 07       	cpc	r30, r20
    98a2:	f5 07       	cpc	r31, r21
    98a4:	98 f0       	brcs	.+38     	; 0x98cc <__fp_cmp+0x46>
    98a6:	62 1b       	sub	r22, r18
    98a8:	73 0b       	sbc	r23, r19
    98aa:	84 0b       	sbc	r24, r20
    98ac:	95 0b       	sbc	r25, r21
    98ae:	39 f4       	brne	.+14     	; 0x98be <__fp_cmp+0x38>
    98b0:	0a 26       	eor	r0, r26
    98b2:	61 f0       	breq	.+24     	; 0x98cc <__fp_cmp+0x46>
    98b4:	23 2b       	or	r18, r19
    98b6:	24 2b       	or	r18, r20
    98b8:	25 2b       	or	r18, r21
    98ba:	21 f4       	brne	.+8      	; 0x98c4 <__fp_cmp+0x3e>
    98bc:	08 95       	ret
    98be:	0a 26       	eor	r0, r26
    98c0:	09 f4       	brne	.+2      	; 0x98c4 <__fp_cmp+0x3e>
    98c2:	a1 40       	sbci	r26, 0x01	; 1
    98c4:	a6 95       	lsr	r26
    98c6:	8f ef       	ldi	r24, 0xFF	; 255
    98c8:	81 1d       	adc	r24, r1
    98ca:	81 1d       	adc	r24, r1
    98cc:	08 95       	ret

000098ce <__fp_inf>:
    98ce:	97 f9       	bld	r25, 7
    98d0:	9f 67       	ori	r25, 0x7F	; 127
    98d2:	80 e8       	ldi	r24, 0x80	; 128
    98d4:	70 e0       	ldi	r23, 0x00	; 0
    98d6:	60 e0       	ldi	r22, 0x00	; 0
    98d8:	08 95       	ret

000098da <__fp_mintl>:
    98da:	88 23       	and	r24, r24
    98dc:	71 f4       	brne	.+28     	; 0x98fa <__fp_mintl+0x20>
    98de:	77 23       	and	r23, r23
    98e0:	21 f0       	breq	.+8      	; 0x98ea <__fp_mintl+0x10>
    98e2:	98 50       	subi	r25, 0x08	; 8
    98e4:	87 2b       	or	r24, r23
    98e6:	76 2f       	mov	r23, r22
    98e8:	07 c0       	rjmp	.+14     	; 0x98f8 <__fp_mintl+0x1e>
    98ea:	66 23       	and	r22, r22
    98ec:	11 f4       	brne	.+4      	; 0x98f2 <__fp_mintl+0x18>
    98ee:	99 27       	eor	r25, r25
    98f0:	0d c0       	rjmp	.+26     	; 0x990c <__fp_mintl+0x32>
    98f2:	90 51       	subi	r25, 0x10	; 16
    98f4:	86 2b       	or	r24, r22
    98f6:	70 e0       	ldi	r23, 0x00	; 0
    98f8:	60 e0       	ldi	r22, 0x00	; 0
    98fa:	2a f0       	brmi	.+10     	; 0x9906 <__fp_mintl+0x2c>
    98fc:	9a 95       	dec	r25
    98fe:	66 0f       	add	r22, r22
    9900:	77 1f       	adc	r23, r23
    9902:	88 1f       	adc	r24, r24
    9904:	da f7       	brpl	.-10     	; 0x98fc <__fp_mintl+0x22>
    9906:	88 0f       	add	r24, r24
    9908:	96 95       	lsr	r25
    990a:	87 95       	ror	r24
    990c:	97 f9       	bld	r25, 7
    990e:	08 95       	ret

00009910 <__fp_mpack>:
    9910:	9f 3f       	cpi	r25, 0xFF	; 255
    9912:	31 f0       	breq	.+12     	; 0x9920 <__fp_mpack_finite+0xc>

00009914 <__fp_mpack_finite>:
    9914:	91 50       	subi	r25, 0x01	; 1
    9916:	20 f4       	brcc	.+8      	; 0x9920 <__fp_mpack_finite+0xc>
    9918:	87 95       	ror	r24
    991a:	77 95       	ror	r23
    991c:	67 95       	ror	r22
    991e:	b7 95       	ror	r27
    9920:	88 0f       	add	r24, r24
    9922:	91 1d       	adc	r25, r1
    9924:	96 95       	lsr	r25
    9926:	87 95       	ror	r24
    9928:	97 f9       	bld	r25, 7
    992a:	08 95       	ret

0000992c <__fp_nan>:
    992c:	9f ef       	ldi	r25, 0xFF	; 255
    992e:	80 ec       	ldi	r24, 0xC0	; 192
    9930:	08 95       	ret

00009932 <__fp_pscA>:
    9932:	00 24       	eor	r0, r0
    9934:	0a 94       	dec	r0
    9936:	16 16       	cp	r1, r22
    9938:	17 06       	cpc	r1, r23
    993a:	18 06       	cpc	r1, r24
    993c:	09 06       	cpc	r0, r25
    993e:	08 95       	ret

00009940 <__fp_pscB>:
    9940:	00 24       	eor	r0, r0
    9942:	0a 94       	dec	r0
    9944:	12 16       	cp	r1, r18
    9946:	13 06       	cpc	r1, r19
    9948:	14 06       	cpc	r1, r20
    994a:	05 06       	cpc	r0, r21
    994c:	08 95       	ret
    994e:	ee cf       	rjmp	.-36     	; 0x992c <__fp_nan>

00009950 <__fp_rempio2>:
    9950:	50 d0       	rcall	.+160    	; 0x99f2 <__fp_splitA>
    9952:	e8 f3       	brcs	.-6      	; 0x994e <__fp_pscB+0xe>
    9954:	e8 94       	clt
    9956:	e0 e0       	ldi	r30, 0x00	; 0
    9958:	bb 27       	eor	r27, r27
    995a:	9f 57       	subi	r25, 0x7F	; 127
    995c:	f0 f0       	brcs	.+60     	; 0x999a <__fp_rempio2+0x4a>
    995e:	2a ed       	ldi	r18, 0xDA	; 218
    9960:	3f e0       	ldi	r19, 0x0F	; 15
    9962:	49 ec       	ldi	r20, 0xC9	; 201
    9964:	06 c0       	rjmp	.+12     	; 0x9972 <__fp_rempio2+0x22>
    9966:	ee 0f       	add	r30, r30
    9968:	bb 0f       	add	r27, r27
    996a:	66 1f       	adc	r22, r22
    996c:	77 1f       	adc	r23, r23
    996e:	88 1f       	adc	r24, r24
    9970:	28 f0       	brcs	.+10     	; 0x997c <__fp_rempio2+0x2c>
    9972:	b2 3a       	cpi	r27, 0xA2	; 162
    9974:	62 07       	cpc	r22, r18
    9976:	73 07       	cpc	r23, r19
    9978:	84 07       	cpc	r24, r20
    997a:	28 f0       	brcs	.+10     	; 0x9986 <__fp_rempio2+0x36>
    997c:	b2 5a       	subi	r27, 0xA2	; 162
    997e:	62 0b       	sbc	r22, r18
    9980:	73 0b       	sbc	r23, r19
    9982:	84 0b       	sbc	r24, r20
    9984:	e3 95       	inc	r30
    9986:	9a 95       	dec	r25
    9988:	72 f7       	brpl	.-36     	; 0x9966 <__fp_rempio2+0x16>
    998a:	80 38       	cpi	r24, 0x80	; 128
    998c:	30 f4       	brcc	.+12     	; 0x999a <__fp_rempio2+0x4a>
    998e:	9a 95       	dec	r25
    9990:	bb 0f       	add	r27, r27
    9992:	66 1f       	adc	r22, r22
    9994:	77 1f       	adc	r23, r23
    9996:	88 1f       	adc	r24, r24
    9998:	d2 f7       	brpl	.-12     	; 0x998e <__fp_rempio2+0x3e>
    999a:	90 48       	sbci	r25, 0x80	; 128
    999c:	bb cf       	rjmp	.-138    	; 0x9914 <__fp_mpack_finite>

0000999e <__fp_round>:
    999e:	09 2e       	mov	r0, r25
    99a0:	03 94       	inc	r0
    99a2:	00 0c       	add	r0, r0
    99a4:	11 f4       	brne	.+4      	; 0x99aa <__fp_round+0xc>
    99a6:	88 23       	and	r24, r24
    99a8:	52 f0       	brmi	.+20     	; 0x99be <__fp_round+0x20>
    99aa:	bb 0f       	add	r27, r27
    99ac:	40 f4       	brcc	.+16     	; 0x99be <__fp_round+0x20>
    99ae:	bf 2b       	or	r27, r31
    99b0:	11 f4       	brne	.+4      	; 0x99b6 <__fp_round+0x18>
    99b2:	60 ff       	sbrs	r22, 0
    99b4:	04 c0       	rjmp	.+8      	; 0x99be <__fp_round+0x20>
    99b6:	6f 5f       	subi	r22, 0xFF	; 255
    99b8:	7f 4f       	sbci	r23, 0xFF	; 255
    99ba:	8f 4f       	sbci	r24, 0xFF	; 255
    99bc:	9f 4f       	sbci	r25, 0xFF	; 255
    99be:	08 95       	ret

000099c0 <__fp_sinus>:
    99c0:	ef 93       	push	r30
    99c2:	e0 ff       	sbrs	r30, 0
    99c4:	06 c0       	rjmp	.+12     	; 0x99d2 <__fp_sinus+0x12>
    99c6:	a2 ea       	ldi	r26, 0xA2	; 162
    99c8:	2a ed       	ldi	r18, 0xDA	; 218
    99ca:	3f e0       	ldi	r19, 0x0F	; 15
    99cc:	49 ec       	ldi	r20, 0xC9	; 201
    99ce:	5f eb       	ldi	r21, 0xBF	; 191
    99d0:	17 de       	rcall	.-978    	; 0x9600 <__addsf3x>
    99d2:	e5 df       	rcall	.-54     	; 0x999e <__fp_round>
    99d4:	0f 90       	pop	r0
    99d6:	03 94       	inc	r0
    99d8:	01 fc       	sbrc	r0, 1
    99da:	90 58       	subi	r25, 0x80	; 128
    99dc:	e4 ee       	ldi	r30, 0xE4	; 228
    99de:	f0 e0       	ldi	r31, 0x00	; 0
    99e0:	98 c1       	rjmp	.+816    	; 0x9d12 <__fp_powsodd>

000099e2 <__fp_split3>:
    99e2:	57 fd       	sbrc	r21, 7
    99e4:	90 58       	subi	r25, 0x80	; 128
    99e6:	44 0f       	add	r20, r20
    99e8:	55 1f       	adc	r21, r21
    99ea:	59 f0       	breq	.+22     	; 0x9a02 <__fp_splitA+0x10>
    99ec:	5f 3f       	cpi	r21, 0xFF	; 255
    99ee:	71 f0       	breq	.+28     	; 0x9a0c <__fp_splitA+0x1a>
    99f0:	47 95       	ror	r20

000099f2 <__fp_splitA>:
    99f2:	88 0f       	add	r24, r24
    99f4:	97 fb       	bst	r25, 7
    99f6:	99 1f       	adc	r25, r25
    99f8:	61 f0       	breq	.+24     	; 0x9a12 <__fp_splitA+0x20>
    99fa:	9f 3f       	cpi	r25, 0xFF	; 255
    99fc:	79 f0       	breq	.+30     	; 0x9a1c <__fp_splitA+0x2a>
    99fe:	87 95       	ror	r24
    9a00:	08 95       	ret
    9a02:	12 16       	cp	r1, r18
    9a04:	13 06       	cpc	r1, r19
    9a06:	14 06       	cpc	r1, r20
    9a08:	55 1f       	adc	r21, r21
    9a0a:	f2 cf       	rjmp	.-28     	; 0x99f0 <__fp_split3+0xe>
    9a0c:	46 95       	lsr	r20
    9a0e:	f1 df       	rcall	.-30     	; 0x99f2 <__fp_splitA>
    9a10:	08 c0       	rjmp	.+16     	; 0x9a22 <__fp_splitA+0x30>
    9a12:	16 16       	cp	r1, r22
    9a14:	17 06       	cpc	r1, r23
    9a16:	18 06       	cpc	r1, r24
    9a18:	99 1f       	adc	r25, r25
    9a1a:	f1 cf       	rjmp	.-30     	; 0x99fe <__fp_splitA+0xc>
    9a1c:	86 95       	lsr	r24
    9a1e:	71 05       	cpc	r23, r1
    9a20:	61 05       	cpc	r22, r1
    9a22:	08 94       	sec
    9a24:	08 95       	ret

00009a26 <__fp_trunc>:
    9a26:	e5 df       	rcall	.-54     	; 0x99f2 <__fp_splitA>
    9a28:	a0 f0       	brcs	.+40     	; 0x9a52 <__fp_trunc+0x2c>
    9a2a:	be e7       	ldi	r27, 0x7E	; 126
    9a2c:	b9 17       	cp	r27, r25
    9a2e:	88 f4       	brcc	.+34     	; 0x9a52 <__fp_trunc+0x2c>
    9a30:	bb 27       	eor	r27, r27
    9a32:	9f 38       	cpi	r25, 0x8F	; 143
    9a34:	60 f4       	brcc	.+24     	; 0x9a4e <__fp_trunc+0x28>
    9a36:	16 16       	cp	r1, r22
    9a38:	b1 1d       	adc	r27, r1
    9a3a:	67 2f       	mov	r22, r23
    9a3c:	78 2f       	mov	r23, r24
    9a3e:	88 27       	eor	r24, r24
    9a40:	98 5f       	subi	r25, 0xF8	; 248
    9a42:	f7 cf       	rjmp	.-18     	; 0x9a32 <__fp_trunc+0xc>
    9a44:	86 95       	lsr	r24
    9a46:	77 95       	ror	r23
    9a48:	67 95       	ror	r22
    9a4a:	b1 1d       	adc	r27, r1
    9a4c:	93 95       	inc	r25
    9a4e:	96 39       	cpi	r25, 0x96	; 150
    9a50:	c8 f3       	brcs	.-14     	; 0x9a44 <__fp_trunc+0x1e>
    9a52:	08 95       	ret

00009a54 <__fp_zero>:
    9a54:	e8 94       	clt

00009a56 <__fp_szero>:
    9a56:	bb 27       	eor	r27, r27
    9a58:	66 27       	eor	r22, r22
    9a5a:	77 27       	eor	r23, r23
    9a5c:	cb 01       	movw	r24, r22
    9a5e:	97 f9       	bld	r25, 7
    9a60:	08 95       	ret

00009a62 <__gesf2>:
    9a62:	11 df       	rcall	.-478    	; 0x9886 <__fp_cmp>
    9a64:	08 f4       	brcc	.+2      	; 0x9a68 <__gesf2+0x6>
    9a66:	8f ef       	ldi	r24, 0xFF	; 255
    9a68:	08 95       	ret

00009a6a <__mulsf3>:
    9a6a:	0b d0       	rcall	.+22     	; 0x9a82 <__mulsf3x>
    9a6c:	98 cf       	rjmp	.-208    	; 0x999e <__fp_round>
    9a6e:	61 df       	rcall	.-318    	; 0x9932 <__fp_pscA>
    9a70:	28 f0       	brcs	.+10     	; 0x9a7c <__mulsf3+0x12>
    9a72:	66 df       	rcall	.-308    	; 0x9940 <__fp_pscB>
    9a74:	18 f0       	brcs	.+6      	; 0x9a7c <__mulsf3+0x12>
    9a76:	95 23       	and	r25, r21
    9a78:	09 f0       	breq	.+2      	; 0x9a7c <__mulsf3+0x12>
    9a7a:	29 cf       	rjmp	.-430    	; 0x98ce <__fp_inf>
    9a7c:	57 cf       	rjmp	.-338    	; 0x992c <__fp_nan>
    9a7e:	11 24       	eor	r1, r1
    9a80:	ea cf       	rjmp	.-44     	; 0x9a56 <__fp_szero>

00009a82 <__mulsf3x>:
    9a82:	af df       	rcall	.-162    	; 0x99e2 <__fp_split3>
    9a84:	a0 f3       	brcs	.-24     	; 0x9a6e <__mulsf3+0x4>

00009a86 <__mulsf3_pse>:
    9a86:	95 9f       	mul	r25, r21
    9a88:	d1 f3       	breq	.-12     	; 0x9a7e <__mulsf3+0x14>
    9a8a:	95 0f       	add	r25, r21
    9a8c:	50 e0       	ldi	r21, 0x00	; 0
    9a8e:	55 1f       	adc	r21, r21
    9a90:	62 9f       	mul	r22, r18
    9a92:	f0 01       	movw	r30, r0
    9a94:	72 9f       	mul	r23, r18
    9a96:	bb 27       	eor	r27, r27
    9a98:	f0 0d       	add	r31, r0
    9a9a:	b1 1d       	adc	r27, r1
    9a9c:	63 9f       	mul	r22, r19
    9a9e:	aa 27       	eor	r26, r26
    9aa0:	f0 0d       	add	r31, r0
    9aa2:	b1 1d       	adc	r27, r1
    9aa4:	aa 1f       	adc	r26, r26
    9aa6:	64 9f       	mul	r22, r20
    9aa8:	66 27       	eor	r22, r22
    9aaa:	b0 0d       	add	r27, r0
    9aac:	a1 1d       	adc	r26, r1
    9aae:	66 1f       	adc	r22, r22
    9ab0:	82 9f       	mul	r24, r18
    9ab2:	22 27       	eor	r18, r18
    9ab4:	b0 0d       	add	r27, r0
    9ab6:	a1 1d       	adc	r26, r1
    9ab8:	62 1f       	adc	r22, r18
    9aba:	73 9f       	mul	r23, r19
    9abc:	b0 0d       	add	r27, r0
    9abe:	a1 1d       	adc	r26, r1
    9ac0:	62 1f       	adc	r22, r18
    9ac2:	83 9f       	mul	r24, r19
    9ac4:	a0 0d       	add	r26, r0
    9ac6:	61 1d       	adc	r22, r1
    9ac8:	22 1f       	adc	r18, r18
    9aca:	74 9f       	mul	r23, r20
    9acc:	33 27       	eor	r19, r19
    9ace:	a0 0d       	add	r26, r0
    9ad0:	61 1d       	adc	r22, r1
    9ad2:	23 1f       	adc	r18, r19
    9ad4:	84 9f       	mul	r24, r20
    9ad6:	60 0d       	add	r22, r0
    9ad8:	21 1d       	adc	r18, r1
    9ada:	82 2f       	mov	r24, r18
    9adc:	76 2f       	mov	r23, r22
    9ade:	6a 2f       	mov	r22, r26
    9ae0:	11 24       	eor	r1, r1
    9ae2:	9f 57       	subi	r25, 0x7F	; 127
    9ae4:	50 40       	sbci	r21, 0x00	; 0
    9ae6:	8a f0       	brmi	.+34     	; 0x9b0a <__mulsf3_pse+0x84>
    9ae8:	e1 f0       	breq	.+56     	; 0x9b22 <__mulsf3_pse+0x9c>
    9aea:	88 23       	and	r24, r24
    9aec:	4a f0       	brmi	.+18     	; 0x9b00 <__mulsf3_pse+0x7a>
    9aee:	ee 0f       	add	r30, r30
    9af0:	ff 1f       	adc	r31, r31
    9af2:	bb 1f       	adc	r27, r27
    9af4:	66 1f       	adc	r22, r22
    9af6:	77 1f       	adc	r23, r23
    9af8:	88 1f       	adc	r24, r24
    9afa:	91 50       	subi	r25, 0x01	; 1
    9afc:	50 40       	sbci	r21, 0x00	; 0
    9afe:	a9 f7       	brne	.-22     	; 0x9aea <__mulsf3_pse+0x64>
    9b00:	9e 3f       	cpi	r25, 0xFE	; 254
    9b02:	51 05       	cpc	r21, r1
    9b04:	70 f0       	brcs	.+28     	; 0x9b22 <__mulsf3_pse+0x9c>
    9b06:	e3 ce       	rjmp	.-570    	; 0x98ce <__fp_inf>
    9b08:	a6 cf       	rjmp	.-180    	; 0x9a56 <__fp_szero>
    9b0a:	5f 3f       	cpi	r21, 0xFF	; 255
    9b0c:	ec f3       	brlt	.-6      	; 0x9b08 <__mulsf3_pse+0x82>
    9b0e:	98 3e       	cpi	r25, 0xE8	; 232
    9b10:	dc f3       	brlt	.-10     	; 0x9b08 <__mulsf3_pse+0x82>
    9b12:	86 95       	lsr	r24
    9b14:	77 95       	ror	r23
    9b16:	67 95       	ror	r22
    9b18:	b7 95       	ror	r27
    9b1a:	f7 95       	ror	r31
    9b1c:	e7 95       	ror	r30
    9b1e:	9f 5f       	subi	r25, 0xFF	; 255
    9b20:	c1 f7       	brne	.-16     	; 0x9b12 <__mulsf3_pse+0x8c>
    9b22:	fe 2b       	or	r31, r30
    9b24:	88 0f       	add	r24, r24
    9b26:	91 1d       	adc	r25, r1
    9b28:	96 95       	lsr	r25
    9b2a:	87 95       	ror	r24
    9b2c:	97 f9       	bld	r25, 7
    9b2e:	08 95       	ret

00009b30 <pow>:
    9b30:	fa 01       	movw	r30, r20
    9b32:	ee 0f       	add	r30, r30
    9b34:	ff 1f       	adc	r31, r31
    9b36:	30 96       	adiw	r30, 0x00	; 0
    9b38:	21 05       	cpc	r18, r1
    9b3a:	31 05       	cpc	r19, r1
    9b3c:	99 f1       	breq	.+102    	; 0x9ba4 <pow+0x74>
    9b3e:	61 15       	cp	r22, r1
    9b40:	71 05       	cpc	r23, r1
    9b42:	61 f4       	brne	.+24     	; 0x9b5c <pow+0x2c>
    9b44:	80 38       	cpi	r24, 0x80	; 128
    9b46:	bf e3       	ldi	r27, 0x3F	; 63
    9b48:	9b 07       	cpc	r25, r27
    9b4a:	49 f1       	breq	.+82     	; 0x9b9e <pow+0x6e>
    9b4c:	68 94       	set
    9b4e:	90 38       	cpi	r25, 0x80	; 128
    9b50:	81 05       	cpc	r24, r1
    9b52:	61 f0       	breq	.+24     	; 0x9b6c <pow+0x3c>
    9b54:	80 38       	cpi	r24, 0x80	; 128
    9b56:	bf ef       	ldi	r27, 0xFF	; 255
    9b58:	9b 07       	cpc	r25, r27
    9b5a:	41 f0       	breq	.+16     	; 0x9b6c <pow+0x3c>
    9b5c:	99 23       	and	r25, r25
    9b5e:	42 f5       	brpl	.+80     	; 0x9bb0 <pow+0x80>
    9b60:	ff 3f       	cpi	r31, 0xFF	; 255
    9b62:	e1 05       	cpc	r30, r1
    9b64:	31 05       	cpc	r19, r1
    9b66:	21 05       	cpc	r18, r1
    9b68:	11 f1       	breq	.+68     	; 0x9bae <pow+0x7e>
    9b6a:	e8 94       	clt
    9b6c:	08 94       	sec
    9b6e:	e7 95       	ror	r30
    9b70:	d9 01       	movw	r26, r18
    9b72:	aa 23       	and	r26, r26
    9b74:	29 f4       	brne	.+10     	; 0x9b80 <pow+0x50>
    9b76:	ab 2f       	mov	r26, r27
    9b78:	be 2f       	mov	r27, r30
    9b7a:	f8 5f       	subi	r31, 0xF8	; 248
    9b7c:	d0 f3       	brcs	.-12     	; 0x9b72 <pow+0x42>
    9b7e:	10 c0       	rjmp	.+32     	; 0x9ba0 <pow+0x70>
    9b80:	ff 5f       	subi	r31, 0xFF	; 255
    9b82:	70 f4       	brcc	.+28     	; 0x9ba0 <pow+0x70>
    9b84:	a6 95       	lsr	r26
    9b86:	e0 f7       	brcc	.-8      	; 0x9b80 <pow+0x50>
    9b88:	f7 39       	cpi	r31, 0x97	; 151
    9b8a:	50 f0       	brcs	.+20     	; 0x9ba0 <pow+0x70>
    9b8c:	19 f0       	breq	.+6      	; 0x9b94 <pow+0x64>
    9b8e:	ff 3a       	cpi	r31, 0xAF	; 175
    9b90:	38 f4       	brcc	.+14     	; 0x9ba0 <pow+0x70>
    9b92:	9f 77       	andi	r25, 0x7F	; 127
    9b94:	9f 93       	push	r25
    9b96:	0c d0       	rcall	.+24     	; 0x9bb0 <pow+0x80>
    9b98:	0f 90       	pop	r0
    9b9a:	07 fc       	sbrc	r0, 7
    9b9c:	90 58       	subi	r25, 0x80	; 128
    9b9e:	08 95       	ret
    9ba0:	3e f0       	brts	.+14     	; 0x9bb0 <pow+0x80>
    9ba2:	c4 ce       	rjmp	.-632    	; 0x992c <__fp_nan>
    9ba4:	60 e0       	ldi	r22, 0x00	; 0
    9ba6:	70 e0       	ldi	r23, 0x00	; 0
    9ba8:	80 e8       	ldi	r24, 0x80	; 128
    9baa:	9f e3       	ldi	r25, 0x3F	; 63
    9bac:	08 95       	ret
    9bae:	4f e7       	ldi	r20, 0x7F	; 127
    9bb0:	9f 77       	andi	r25, 0x7F	; 127
    9bb2:	5f 93       	push	r21
    9bb4:	4f 93       	push	r20
    9bb6:	3f 93       	push	r19
    9bb8:	2f 93       	push	r18
    9bba:	fe d0       	rcall	.+508    	; 0x9db8 <log>
    9bbc:	2f 91       	pop	r18
    9bbe:	3f 91       	pop	r19
    9bc0:	4f 91       	pop	r20
    9bc2:	5f 91       	pop	r21
    9bc4:	52 df       	rcall	.-348    	; 0x9a6a <__mulsf3>
    9bc6:	4d c0       	rjmp	.+154    	; 0x9c62 <exp>

00009bc8 <sin>:
    9bc8:	9f 93       	push	r25
    9bca:	c2 de       	rcall	.-636    	; 0x9950 <__fp_rempio2>
    9bcc:	0f 90       	pop	r0
    9bce:	07 fc       	sbrc	r0, 7
    9bd0:	ee 5f       	subi	r30, 0xFE	; 254
    9bd2:	f6 ce       	rjmp	.-532    	; 0x99c0 <__fp_sinus>
    9bd4:	11 f4       	brne	.+4      	; 0x9bda <sin+0x12>
    9bd6:	0e f4       	brtc	.+2      	; 0x9bda <sin+0x12>
    9bd8:	a9 ce       	rjmp	.-686    	; 0x992c <__fp_nan>
    9bda:	9a ce       	rjmp	.-716    	; 0x9910 <__fp_mpack>

00009bdc <sqrt>:
    9bdc:	0a df       	rcall	.-492    	; 0x99f2 <__fp_splitA>
    9bde:	d0 f3       	brcs	.-12     	; 0x9bd4 <sin+0xc>
    9be0:	99 23       	and	r25, r25
    9be2:	d9 f3       	breq	.-10     	; 0x9bda <sin+0x12>
    9be4:	ce f3       	brts	.-14     	; 0x9bd8 <sin+0x10>
    9be6:	9f 57       	subi	r25, 0x7F	; 127
    9be8:	55 0b       	sbc	r21, r21
    9bea:	87 ff       	sbrs	r24, 7
    9bec:	66 d0       	rcall	.+204    	; 0x9cba <__fp_norm2>
    9bee:	00 24       	eor	r0, r0
    9bf0:	a0 e6       	ldi	r26, 0x60	; 96
    9bf2:	40 ea       	ldi	r20, 0xA0	; 160
    9bf4:	90 01       	movw	r18, r0
    9bf6:	80 58       	subi	r24, 0x80	; 128
    9bf8:	56 95       	lsr	r21
    9bfa:	97 95       	ror	r25
    9bfc:	28 f4       	brcc	.+10     	; 0x9c08 <sqrt+0x2c>
    9bfe:	80 5c       	subi	r24, 0xC0	; 192
    9c00:	66 0f       	add	r22, r22
    9c02:	77 1f       	adc	r23, r23
    9c04:	88 1f       	adc	r24, r24
    9c06:	20 f0       	brcs	.+8      	; 0x9c10 <sqrt+0x34>
    9c08:	26 17       	cp	r18, r22
    9c0a:	37 07       	cpc	r19, r23
    9c0c:	48 07       	cpc	r20, r24
    9c0e:	30 f4       	brcc	.+12     	; 0x9c1c <sqrt+0x40>
    9c10:	62 1b       	sub	r22, r18
    9c12:	73 0b       	sbc	r23, r19
    9c14:	84 0b       	sbc	r24, r20
    9c16:	20 29       	or	r18, r0
    9c18:	31 29       	or	r19, r1
    9c1a:	4a 2b       	or	r20, r26
    9c1c:	a6 95       	lsr	r26
    9c1e:	17 94       	ror	r1
    9c20:	07 94       	ror	r0
    9c22:	20 25       	eor	r18, r0
    9c24:	31 25       	eor	r19, r1
    9c26:	4a 27       	eor	r20, r26
    9c28:	58 f7       	brcc	.-42     	; 0x9c00 <sqrt+0x24>
    9c2a:	66 0f       	add	r22, r22
    9c2c:	77 1f       	adc	r23, r23
    9c2e:	88 1f       	adc	r24, r24
    9c30:	20 f0       	brcs	.+8      	; 0x9c3a <sqrt+0x5e>
    9c32:	26 17       	cp	r18, r22
    9c34:	37 07       	cpc	r19, r23
    9c36:	48 07       	cpc	r20, r24
    9c38:	30 f4       	brcc	.+12     	; 0x9c46 <sqrt+0x6a>
    9c3a:	62 0b       	sbc	r22, r18
    9c3c:	73 0b       	sbc	r23, r19
    9c3e:	84 0b       	sbc	r24, r20
    9c40:	20 0d       	add	r18, r0
    9c42:	31 1d       	adc	r19, r1
    9c44:	41 1d       	adc	r20, r1
    9c46:	a0 95       	com	r26
    9c48:	81 f7       	brne	.-32     	; 0x9c2a <sqrt+0x4e>
    9c4a:	b9 01       	movw	r22, r18
    9c4c:	84 2f       	mov	r24, r20
    9c4e:	91 58       	subi	r25, 0x81	; 129
    9c50:	88 0f       	add	r24, r24
    9c52:	96 95       	lsr	r25
    9c54:	87 95       	ror	r24
    9c56:	08 95       	ret
    9c58:	19 f4       	brne	.+6      	; 0x9c60 <sqrt+0x84>
    9c5a:	0e f0       	brts	.+2      	; 0x9c5e <sqrt+0x82>
    9c5c:	38 ce       	rjmp	.-912    	; 0x98ce <__fp_inf>
    9c5e:	fa ce       	rjmp	.-524    	; 0x9a54 <__fp_zero>
    9c60:	65 ce       	rjmp	.-822    	; 0x992c <__fp_nan>

00009c62 <exp>:
    9c62:	c7 de       	rcall	.-626    	; 0x99f2 <__fp_splitA>
    9c64:	c8 f3       	brcs	.-14     	; 0x9c58 <sqrt+0x7c>
    9c66:	96 38       	cpi	r25, 0x86	; 134
    9c68:	c0 f7       	brcc	.-16     	; 0x9c5a <sqrt+0x7e>
    9c6a:	07 f8       	bld	r0, 7
    9c6c:	0f 92       	push	r0
    9c6e:	e8 94       	clt
    9c70:	2b e3       	ldi	r18, 0x3B	; 59
    9c72:	3a ea       	ldi	r19, 0xAA	; 170
    9c74:	48 eb       	ldi	r20, 0xB8	; 184
    9c76:	5f e7       	ldi	r21, 0x7F	; 127
    9c78:	06 df       	rcall	.-500    	; 0x9a86 <__mulsf3_pse>
    9c7a:	0f 92       	push	r0
    9c7c:	0f 92       	push	r0
    9c7e:	0f 92       	push	r0
    9c80:	4d b7       	in	r20, 0x3d	; 61
    9c82:	5e b7       	in	r21, 0x3e	; 62
    9c84:	0f 92       	push	r0
    9c86:	d8 d0       	rcall	.+432    	; 0x9e38 <modf>
    9c88:	e2 e0       	ldi	r30, 0x02	; 2
    9c8a:	f1 e0       	ldi	r31, 0x01	; 1
    9c8c:	1d d0       	rcall	.+58     	; 0x9cc8 <__fp_powser>
    9c8e:	4f 91       	pop	r20
    9c90:	5f 91       	pop	r21
    9c92:	ef 91       	pop	r30
    9c94:	ff 91       	pop	r31
    9c96:	e5 95       	asr	r30
    9c98:	ee 1f       	adc	r30, r30
    9c9a:	ff 1f       	adc	r31, r31
    9c9c:	49 f0       	breq	.+18     	; 0x9cb0 <exp+0x4e>
    9c9e:	fe 57       	subi	r31, 0x7E	; 126
    9ca0:	e0 68       	ori	r30, 0x80	; 128
    9ca2:	44 27       	eor	r20, r20
    9ca4:	ee 0f       	add	r30, r30
    9ca6:	44 1f       	adc	r20, r20
    9ca8:	fa 95       	dec	r31
    9caa:	e1 f7       	brne	.-8      	; 0x9ca4 <exp+0x42>
    9cac:	41 95       	neg	r20
    9cae:	55 0b       	sbc	r21, r21
    9cb0:	4a d0       	rcall	.+148    	; 0x9d46 <ldexp>
    9cb2:	0f 90       	pop	r0
    9cb4:	07 fe       	sbrs	r0, 7
    9cb6:	3e c0       	rjmp	.+124    	; 0x9d34 <inverse>
    9cb8:	08 95       	ret

00009cba <__fp_norm2>:
    9cba:	91 50       	subi	r25, 0x01	; 1
    9cbc:	50 40       	sbci	r21, 0x00	; 0
    9cbe:	66 0f       	add	r22, r22
    9cc0:	77 1f       	adc	r23, r23
    9cc2:	88 1f       	adc	r24, r24
    9cc4:	d2 f7       	brpl	.-12     	; 0x9cba <__fp_norm2>
    9cc6:	08 95       	ret

00009cc8 <__fp_powser>:
    9cc8:	df 93       	push	r29
    9cca:	cf 93       	push	r28
    9ccc:	1f 93       	push	r17
    9cce:	0f 93       	push	r16
    9cd0:	ff 92       	push	r15
    9cd2:	ef 92       	push	r14
    9cd4:	df 92       	push	r13
    9cd6:	7b 01       	movw	r14, r22
    9cd8:	8c 01       	movw	r16, r24
    9cda:	68 94       	set
    9cdc:	05 c0       	rjmp	.+10     	; 0x9ce8 <__fp_powser+0x20>
    9cde:	da 2e       	mov	r13, r26
    9ce0:	ef 01       	movw	r28, r30
    9ce2:	cf de       	rcall	.-610    	; 0x9a82 <__mulsf3x>
    9ce4:	fe 01       	movw	r30, r28
    9ce6:	e8 94       	clt
    9ce8:	a5 91       	lpm	r26, Z+
    9cea:	25 91       	lpm	r18, Z+
    9cec:	35 91       	lpm	r19, Z+
    9cee:	45 91       	lpm	r20, Z+
    9cf0:	55 91       	lpm	r21, Z+
    9cf2:	ae f3       	brts	.-22     	; 0x9cde <__fp_powser+0x16>
    9cf4:	ef 01       	movw	r28, r30
    9cf6:	84 dc       	rcall	.-1784   	; 0x9600 <__addsf3x>
    9cf8:	fe 01       	movw	r30, r28
    9cfa:	97 01       	movw	r18, r14
    9cfc:	a8 01       	movw	r20, r16
    9cfe:	da 94       	dec	r13
    9d00:	79 f7       	brne	.-34     	; 0x9ce0 <__fp_powser+0x18>
    9d02:	df 90       	pop	r13
    9d04:	ef 90       	pop	r14
    9d06:	ff 90       	pop	r15
    9d08:	0f 91       	pop	r16
    9d0a:	1f 91       	pop	r17
    9d0c:	cf 91       	pop	r28
    9d0e:	df 91       	pop	r29
    9d10:	08 95       	ret

00009d12 <__fp_powsodd>:
    9d12:	9f 93       	push	r25
    9d14:	8f 93       	push	r24
    9d16:	7f 93       	push	r23
    9d18:	6f 93       	push	r22
    9d1a:	ff 93       	push	r31
    9d1c:	ef 93       	push	r30
    9d1e:	9b 01       	movw	r18, r22
    9d20:	ac 01       	movw	r20, r24
    9d22:	a3 de       	rcall	.-698    	; 0x9a6a <__mulsf3>
    9d24:	ef 91       	pop	r30
    9d26:	ff 91       	pop	r31
    9d28:	cf df       	rcall	.-98     	; 0x9cc8 <__fp_powser>
    9d2a:	2f 91       	pop	r18
    9d2c:	3f 91       	pop	r19
    9d2e:	4f 91       	pop	r20
    9d30:	5f 91       	pop	r21
    9d32:	9b ce       	rjmp	.-714    	; 0x9a6a <__mulsf3>

00009d34 <inverse>:
    9d34:	9b 01       	movw	r18, r22
    9d36:	ac 01       	movw	r20, r24
    9d38:	60 e0       	ldi	r22, 0x00	; 0
    9d3a:	70 e0       	ldi	r23, 0x00	; 0
    9d3c:	80 e8       	ldi	r24, 0x80	; 128
    9d3e:	9f e3       	ldi	r25, 0x3F	; 63
    9d40:	b9 cc       	rjmp	.-1678   	; 0x96b4 <__divsf3>
    9d42:	c5 cd       	rjmp	.-1142   	; 0x98ce <__fp_inf>
    9d44:	e5 cd       	rjmp	.-1078   	; 0x9910 <__fp_mpack>

00009d46 <ldexp>:
    9d46:	55 de       	rcall	.-854    	; 0x99f2 <__fp_splitA>
    9d48:	e8 f3       	brcs	.-6      	; 0x9d44 <inverse+0x10>
    9d4a:	99 23       	and	r25, r25
    9d4c:	d9 f3       	breq	.-10     	; 0x9d44 <inverse+0x10>
    9d4e:	94 0f       	add	r25, r20
    9d50:	51 1d       	adc	r21, r1
    9d52:	bb f3       	brvs	.-18     	; 0x9d42 <inverse+0xe>
    9d54:	91 50       	subi	r25, 0x01	; 1
    9d56:	50 40       	sbci	r21, 0x00	; 0
    9d58:	94 f0       	brlt	.+36     	; 0x9d7e <ldexp+0x38>
    9d5a:	59 f0       	breq	.+22     	; 0x9d72 <ldexp+0x2c>
    9d5c:	88 23       	and	r24, r24
    9d5e:	32 f0       	brmi	.+12     	; 0x9d6c <ldexp+0x26>
    9d60:	66 0f       	add	r22, r22
    9d62:	77 1f       	adc	r23, r23
    9d64:	88 1f       	adc	r24, r24
    9d66:	91 50       	subi	r25, 0x01	; 1
    9d68:	50 40       	sbci	r21, 0x00	; 0
    9d6a:	c1 f7       	brne	.-16     	; 0x9d5c <ldexp+0x16>
    9d6c:	9e 3f       	cpi	r25, 0xFE	; 254
    9d6e:	51 05       	cpc	r21, r1
    9d70:	44 f7       	brge	.-48     	; 0x9d42 <inverse+0xe>
    9d72:	88 0f       	add	r24, r24
    9d74:	91 1d       	adc	r25, r1
    9d76:	96 95       	lsr	r25
    9d78:	87 95       	ror	r24
    9d7a:	97 f9       	bld	r25, 7
    9d7c:	08 95       	ret
    9d7e:	5f 3f       	cpi	r21, 0xFF	; 255
    9d80:	ac f0       	brlt	.+42     	; 0x9dac <ldexp+0x66>
    9d82:	98 3e       	cpi	r25, 0xE8	; 232
    9d84:	9c f0       	brlt	.+38     	; 0x9dac <ldexp+0x66>
    9d86:	bb 27       	eor	r27, r27
    9d88:	86 95       	lsr	r24
    9d8a:	77 95       	ror	r23
    9d8c:	67 95       	ror	r22
    9d8e:	b7 95       	ror	r27
    9d90:	08 f4       	brcc	.+2      	; 0x9d94 <ldexp+0x4e>
    9d92:	b1 60       	ori	r27, 0x01	; 1
    9d94:	93 95       	inc	r25
    9d96:	c1 f7       	brne	.-16     	; 0x9d88 <ldexp+0x42>
    9d98:	bb 0f       	add	r27, r27
    9d9a:	58 f7       	brcc	.-42     	; 0x9d72 <ldexp+0x2c>
    9d9c:	11 f4       	brne	.+4      	; 0x9da2 <ldexp+0x5c>
    9d9e:	60 ff       	sbrs	r22, 0
    9da0:	e8 cf       	rjmp	.-48     	; 0x9d72 <ldexp+0x2c>
    9da2:	6f 5f       	subi	r22, 0xFF	; 255
    9da4:	7f 4f       	sbci	r23, 0xFF	; 255
    9da6:	8f 4f       	sbci	r24, 0xFF	; 255
    9da8:	9f 4f       	sbci	r25, 0xFF	; 255
    9daa:	e3 cf       	rjmp	.-58     	; 0x9d72 <ldexp+0x2c>
    9dac:	54 ce       	rjmp	.-856    	; 0x9a56 <__fp_szero>
    9dae:	0e f0       	brts	.+2      	; 0x9db2 <ldexp+0x6c>
    9db0:	af cd       	rjmp	.-1186   	; 0x9910 <__fp_mpack>
    9db2:	bc cd       	rjmp	.-1160   	; 0x992c <__fp_nan>
    9db4:	68 94       	set
    9db6:	8b cd       	rjmp	.-1258   	; 0x98ce <__fp_inf>

00009db8 <log>:
    9db8:	1c de       	rcall	.-968    	; 0x99f2 <__fp_splitA>
    9dba:	c8 f3       	brcs	.-14     	; 0x9dae <ldexp+0x68>
    9dbc:	99 23       	and	r25, r25
    9dbe:	d1 f3       	breq	.-12     	; 0x9db4 <ldexp+0x6e>
    9dc0:	c6 f3       	brts	.-16     	; 0x9db2 <ldexp+0x6c>
    9dc2:	df 93       	push	r29
    9dc4:	cf 93       	push	r28
    9dc6:	1f 93       	push	r17
    9dc8:	0f 93       	push	r16
    9dca:	ff 92       	push	r15
    9dcc:	c9 2f       	mov	r28, r25
    9dce:	dd 27       	eor	r29, r29
    9dd0:	88 23       	and	r24, r24
    9dd2:	2a f0       	brmi	.+10     	; 0x9dde <log+0x26>
    9dd4:	21 97       	sbiw	r28, 0x01	; 1
    9dd6:	66 0f       	add	r22, r22
    9dd8:	77 1f       	adc	r23, r23
    9dda:	88 1f       	adc	r24, r24
    9ddc:	da f7       	brpl	.-10     	; 0x9dd4 <log+0x1c>
    9dde:	20 e0       	ldi	r18, 0x00	; 0
    9de0:	30 e0       	ldi	r19, 0x00	; 0
    9de2:	40 e8       	ldi	r20, 0x80	; 128
    9de4:	5f eb       	ldi	r21, 0xBF	; 191
    9de6:	9f e3       	ldi	r25, 0x3F	; 63
    9de8:	88 39       	cpi	r24, 0x98	; 152
    9dea:	20 f0       	brcs	.+8      	; 0x9df4 <log+0x3c>
    9dec:	80 3e       	cpi	r24, 0xE0	; 224
    9dee:	30 f0       	brcs	.+12     	; 0x9dfc <log+0x44>
    9df0:	21 96       	adiw	r28, 0x01	; 1
    9df2:	8f 77       	andi	r24, 0x7F	; 127
    9df4:	f4 db       	rcall	.-2072   	; 0x95de <__addsf3>
    9df6:	ea e2       	ldi	r30, 0x2A	; 42
    9df8:	f1 e0       	ldi	r31, 0x01	; 1
    9dfa:	03 c0       	rjmp	.+6      	; 0x9e02 <log+0x4a>
    9dfc:	f0 db       	rcall	.-2080   	; 0x95de <__addsf3>
    9dfe:	e7 e5       	ldi	r30, 0x57	; 87
    9e00:	f1 e0       	ldi	r31, 0x01	; 1
    9e02:	62 df       	rcall	.-316    	; 0x9cc8 <__fp_powser>
    9e04:	8b 01       	movw	r16, r22
    9e06:	be 01       	movw	r22, r28
    9e08:	ec 01       	movw	r28, r24
    9e0a:	fb 2e       	mov	r15, r27
    9e0c:	6f 57       	subi	r22, 0x7F	; 127
    9e0e:	71 09       	sbc	r23, r1
    9e10:	75 95       	asr	r23
    9e12:	77 1f       	adc	r23, r23
    9e14:	88 0b       	sbc	r24, r24
    9e16:	99 0b       	sbc	r25, r25
    9e18:	e8 dc       	rcall	.-1584   	; 0x97ea <__floatsisf>
    9e1a:	28 e1       	ldi	r18, 0x18	; 24
    9e1c:	32 e7       	ldi	r19, 0x72	; 114
    9e1e:	41 e3       	ldi	r20, 0x31	; 49
    9e20:	5f e3       	ldi	r21, 0x3F	; 63
    9e22:	2f de       	rcall	.-930    	; 0x9a82 <__mulsf3x>
    9e24:	af 2d       	mov	r26, r15
    9e26:	98 01       	movw	r18, r16
    9e28:	ae 01       	movw	r20, r28
    9e2a:	ff 90       	pop	r15
    9e2c:	0f 91       	pop	r16
    9e2e:	1f 91       	pop	r17
    9e30:	cf 91       	pop	r28
    9e32:	df 91       	pop	r29
    9e34:	e5 db       	rcall	.-2102   	; 0x9600 <__addsf3x>
    9e36:	b3 cd       	rjmp	.-1178   	; 0x999e <__fp_round>

00009e38 <modf>:
    9e38:	fa 01       	movw	r30, r20
    9e3a:	dc 01       	movw	r26, r24
    9e3c:	aa 0f       	add	r26, r26
    9e3e:	bb 1f       	adc	r27, r27
    9e40:	9b 01       	movw	r18, r22
    9e42:	ac 01       	movw	r20, r24
    9e44:	bf 57       	subi	r27, 0x7F	; 127
    9e46:	28 f4       	brcc	.+10     	; 0x9e52 <modf+0x1a>
    9e48:	22 27       	eor	r18, r18
    9e4a:	33 27       	eor	r19, r19
    9e4c:	44 27       	eor	r20, r20
    9e4e:	50 78       	andi	r21, 0x80	; 128
    9e50:	1f c0       	rjmp	.+62     	; 0x9e90 <modf+0x58>
    9e52:	b7 51       	subi	r27, 0x17	; 23
    9e54:	88 f4       	brcc	.+34     	; 0x9e78 <modf+0x40>
    9e56:	ab 2f       	mov	r26, r27
    9e58:	00 24       	eor	r0, r0
    9e5a:	46 95       	lsr	r20
    9e5c:	37 95       	ror	r19
    9e5e:	27 95       	ror	r18
    9e60:	01 1c       	adc	r0, r1
    9e62:	a3 95       	inc	r26
    9e64:	d2 f3       	brmi	.-12     	; 0x9e5a <modf+0x22>
    9e66:	00 20       	and	r0, r0
    9e68:	69 f0       	breq	.+26     	; 0x9e84 <modf+0x4c>
    9e6a:	22 0f       	add	r18, r18
    9e6c:	33 1f       	adc	r19, r19
    9e6e:	44 1f       	adc	r20, r20
    9e70:	b3 95       	inc	r27
    9e72:	da f3       	brmi	.-10     	; 0x9e6a <modf+0x32>
    9e74:	0d d0       	rcall	.+26     	; 0x9e90 <modf+0x58>
    9e76:	b2 cb       	rjmp	.-2204   	; 0x95dc <__subsf3>
    9e78:	61 30       	cpi	r22, 0x01	; 1
    9e7a:	71 05       	cpc	r23, r1
    9e7c:	a0 e8       	ldi	r26, 0x80	; 128
    9e7e:	8a 07       	cpc	r24, r26
    9e80:	b9 46       	sbci	r27, 0x69	; 105
    9e82:	30 f4       	brcc	.+12     	; 0x9e90 <modf+0x58>
    9e84:	9b 01       	movw	r18, r22
    9e86:	ac 01       	movw	r20, r24
    9e88:	66 27       	eor	r22, r22
    9e8a:	77 27       	eor	r23, r23
    9e8c:	88 27       	eor	r24, r24
    9e8e:	90 78       	andi	r25, 0x80	; 128
    9e90:	30 96       	adiw	r30, 0x00	; 0
    9e92:	21 f0       	breq	.+8      	; 0x9e9c <modf+0x64>
    9e94:	20 83       	st	Z, r18
    9e96:	31 83       	std	Z+1, r19	; 0x01
    9e98:	42 83       	std	Z+2, r20	; 0x02
    9e9a:	53 83       	std	Z+3, r21	; 0x03
    9e9c:	08 95       	ret

00009e9e <__divmodhi4>:
    9e9e:	97 fb       	bst	r25, 7
    9ea0:	07 2e       	mov	r0, r23
    9ea2:	16 f4       	brtc	.+4      	; 0x9ea8 <__divmodhi4+0xa>
    9ea4:	00 94       	com	r0
    9ea6:	07 d0       	rcall	.+14     	; 0x9eb6 <__divmodhi4_neg1>
    9ea8:	77 fd       	sbrc	r23, 7
    9eaa:	09 d0       	rcall	.+18     	; 0x9ebe <__divmodhi4_neg2>
    9eac:	0e 94 85 4f 	call	0x9f0a	; 0x9f0a <__udivmodhi4>
    9eb0:	07 fc       	sbrc	r0, 7
    9eb2:	05 d0       	rcall	.+10     	; 0x9ebe <__divmodhi4_neg2>
    9eb4:	3e f4       	brtc	.+14     	; 0x9ec4 <__divmodhi4_exit>

00009eb6 <__divmodhi4_neg1>:
    9eb6:	90 95       	com	r25
    9eb8:	81 95       	neg	r24
    9eba:	9f 4f       	sbci	r25, 0xFF	; 255
    9ebc:	08 95       	ret

00009ebe <__divmodhi4_neg2>:
    9ebe:	70 95       	com	r23
    9ec0:	61 95       	neg	r22
    9ec2:	7f 4f       	sbci	r23, 0xFF	; 255

00009ec4 <__divmodhi4_exit>:
    9ec4:	08 95       	ret

00009ec6 <__udivmodsi4>:
    9ec6:	a1 e2       	ldi	r26, 0x21	; 33
    9ec8:	1a 2e       	mov	r1, r26
    9eca:	aa 1b       	sub	r26, r26
    9ecc:	bb 1b       	sub	r27, r27
    9ece:	fd 01       	movw	r30, r26
    9ed0:	0d c0       	rjmp	.+26     	; 0x9eec <__udivmodsi4_ep>

00009ed2 <__udivmodsi4_loop>:
    9ed2:	aa 1f       	adc	r26, r26
    9ed4:	bb 1f       	adc	r27, r27
    9ed6:	ee 1f       	adc	r30, r30
    9ed8:	ff 1f       	adc	r31, r31
    9eda:	a2 17       	cp	r26, r18
    9edc:	b3 07       	cpc	r27, r19
    9ede:	e4 07       	cpc	r30, r20
    9ee0:	f5 07       	cpc	r31, r21
    9ee2:	20 f0       	brcs	.+8      	; 0x9eec <__udivmodsi4_ep>
    9ee4:	a2 1b       	sub	r26, r18
    9ee6:	b3 0b       	sbc	r27, r19
    9ee8:	e4 0b       	sbc	r30, r20
    9eea:	f5 0b       	sbc	r31, r21

00009eec <__udivmodsi4_ep>:
    9eec:	66 1f       	adc	r22, r22
    9eee:	77 1f       	adc	r23, r23
    9ef0:	88 1f       	adc	r24, r24
    9ef2:	99 1f       	adc	r25, r25
    9ef4:	1a 94       	dec	r1
    9ef6:	69 f7       	brne	.-38     	; 0x9ed2 <__udivmodsi4_loop>
    9ef8:	60 95       	com	r22
    9efa:	70 95       	com	r23
    9efc:	80 95       	com	r24
    9efe:	90 95       	com	r25
    9f00:	9b 01       	movw	r18, r22
    9f02:	ac 01       	movw	r20, r24
    9f04:	bd 01       	movw	r22, r26
    9f06:	cf 01       	movw	r24, r30
    9f08:	08 95       	ret

00009f0a <__udivmodhi4>:
    9f0a:	aa 1b       	sub	r26, r26
    9f0c:	bb 1b       	sub	r27, r27
    9f0e:	51 e1       	ldi	r21, 0x11	; 17
    9f10:	07 c0       	rjmp	.+14     	; 0x9f20 <__udivmodhi4_ep>

00009f12 <__udivmodhi4_loop>:
    9f12:	aa 1f       	adc	r26, r26
    9f14:	bb 1f       	adc	r27, r27
    9f16:	a6 17       	cp	r26, r22
    9f18:	b7 07       	cpc	r27, r23
    9f1a:	10 f0       	brcs	.+4      	; 0x9f20 <__udivmodhi4_ep>
    9f1c:	a6 1b       	sub	r26, r22
    9f1e:	b7 0b       	sbc	r27, r23

00009f20 <__udivmodhi4_ep>:
    9f20:	88 1f       	adc	r24, r24
    9f22:	99 1f       	adc	r25, r25
    9f24:	5a 95       	dec	r21
    9f26:	a9 f7       	brne	.-22     	; 0x9f12 <__udivmodhi4_loop>
    9f28:	80 95       	com	r24
    9f2a:	90 95       	com	r25
    9f2c:	bc 01       	movw	r22, r24
    9f2e:	cd 01       	movw	r24, r26
    9f30:	08 95       	ret

00009f32 <malloc>:
    9f32:	0f 93       	push	r16
    9f34:	1f 93       	push	r17
    9f36:	cf 93       	push	r28
    9f38:	df 93       	push	r29
    9f3a:	82 30       	cpi	r24, 0x02	; 2
    9f3c:	91 05       	cpc	r25, r1
    9f3e:	10 f4       	brcc	.+4      	; 0x9f44 <malloc+0x12>
    9f40:	82 e0       	ldi	r24, 0x02	; 2
    9f42:	90 e0       	ldi	r25, 0x00	; 0
    9f44:	e0 91 a0 02 	lds	r30, 0x02A0
    9f48:	f0 91 a1 02 	lds	r31, 0x02A1
    9f4c:	20 e0       	ldi	r18, 0x00	; 0
    9f4e:	30 e0       	ldi	r19, 0x00	; 0
    9f50:	c0 e0       	ldi	r28, 0x00	; 0
    9f52:	d0 e0       	ldi	r29, 0x00	; 0
    9f54:	23 c0       	rjmp	.+70     	; 0x9f9c <malloc+0x6a>
    9f56:	40 81       	ld	r20, Z
    9f58:	51 81       	ldd	r21, Z+1	; 0x01
    9f5a:	48 17       	cp	r20, r24
    9f5c:	59 07       	cpc	r21, r25
    9f5e:	a8 f0       	brcs	.+42     	; 0x9f8a <malloc+0x58>
    9f60:	48 17       	cp	r20, r24
    9f62:	59 07       	cpc	r21, r25
    9f64:	61 f4       	brne	.+24     	; 0x9f7e <malloc+0x4c>
    9f66:	82 81       	ldd	r24, Z+2	; 0x02
    9f68:	93 81       	ldd	r25, Z+3	; 0x03
    9f6a:	20 97       	sbiw	r28, 0x00	; 0
    9f6c:	19 f0       	breq	.+6      	; 0x9f74 <malloc+0x42>
    9f6e:	9b 83       	std	Y+3, r25	; 0x03
    9f70:	8a 83       	std	Y+2, r24	; 0x02
    9f72:	2e c0       	rjmp	.+92     	; 0x9fd0 <malloc+0x9e>
    9f74:	90 93 a1 02 	sts	0x02A1, r25
    9f78:	80 93 a0 02 	sts	0x02A0, r24
    9f7c:	29 c0       	rjmp	.+82     	; 0x9fd0 <malloc+0x9e>
    9f7e:	21 15       	cp	r18, r1
    9f80:	31 05       	cpc	r19, r1
    9f82:	29 f0       	breq	.+10     	; 0x9f8e <malloc+0x5c>
    9f84:	42 17       	cp	r20, r18
    9f86:	53 07       	cpc	r21, r19
    9f88:	10 f0       	brcs	.+4      	; 0x9f8e <malloc+0x5c>
    9f8a:	a9 01       	movw	r20, r18
    9f8c:	02 c0       	rjmp	.+4      	; 0x9f92 <malloc+0x60>
    9f8e:	be 01       	movw	r22, r28
    9f90:	df 01       	movw	r26, r30
    9f92:	02 81       	ldd	r16, Z+2	; 0x02
    9f94:	13 81       	ldd	r17, Z+3	; 0x03
    9f96:	ef 01       	movw	r28, r30
    9f98:	9a 01       	movw	r18, r20
    9f9a:	f8 01       	movw	r30, r16
    9f9c:	30 97       	sbiw	r30, 0x00	; 0
    9f9e:	d9 f6       	brne	.-74     	; 0x9f56 <malloc+0x24>
    9fa0:	21 15       	cp	r18, r1
    9fa2:	31 05       	cpc	r19, r1
    9fa4:	09 f1       	breq	.+66     	; 0x9fe8 <malloc+0xb6>
    9fa6:	28 1b       	sub	r18, r24
    9fa8:	39 0b       	sbc	r19, r25
    9faa:	24 30       	cpi	r18, 0x04	; 4
    9fac:	31 05       	cpc	r19, r1
    9fae:	90 f4       	brcc	.+36     	; 0x9fd4 <malloc+0xa2>
    9fb0:	12 96       	adiw	r26, 0x02	; 2
    9fb2:	8d 91       	ld	r24, X+
    9fb4:	9c 91       	ld	r25, X
    9fb6:	13 97       	sbiw	r26, 0x03	; 3
    9fb8:	61 15       	cp	r22, r1
    9fba:	71 05       	cpc	r23, r1
    9fbc:	21 f0       	breq	.+8      	; 0x9fc6 <malloc+0x94>
    9fbe:	fb 01       	movw	r30, r22
    9fc0:	93 83       	std	Z+3, r25	; 0x03
    9fc2:	82 83       	std	Z+2, r24	; 0x02
    9fc4:	04 c0       	rjmp	.+8      	; 0x9fce <malloc+0x9c>
    9fc6:	90 93 a1 02 	sts	0x02A1, r25
    9fca:	80 93 a0 02 	sts	0x02A0, r24
    9fce:	fd 01       	movw	r30, r26
    9fd0:	32 96       	adiw	r30, 0x02	; 2
    9fd2:	44 c0       	rjmp	.+136    	; 0xa05c <malloc+0x12a>
    9fd4:	fd 01       	movw	r30, r26
    9fd6:	e2 0f       	add	r30, r18
    9fd8:	f3 1f       	adc	r31, r19
    9fda:	81 93       	st	Z+, r24
    9fdc:	91 93       	st	Z+, r25
    9fde:	22 50       	subi	r18, 0x02	; 2
    9fe0:	31 09       	sbc	r19, r1
    9fe2:	2d 93       	st	X+, r18
    9fe4:	3c 93       	st	X, r19
    9fe6:	3a c0       	rjmp	.+116    	; 0xa05c <malloc+0x12a>
    9fe8:	20 91 9e 02 	lds	r18, 0x029E
    9fec:	30 91 9f 02 	lds	r19, 0x029F
    9ff0:	23 2b       	or	r18, r19
    9ff2:	41 f4       	brne	.+16     	; 0xa004 <malloc+0xd2>
    9ff4:	20 91 02 02 	lds	r18, 0x0202
    9ff8:	30 91 03 02 	lds	r19, 0x0203
    9ffc:	30 93 9f 02 	sts	0x029F, r19
    a000:	20 93 9e 02 	sts	0x029E, r18
    a004:	20 91 00 02 	lds	r18, 0x0200
    a008:	30 91 01 02 	lds	r19, 0x0201
    a00c:	21 15       	cp	r18, r1
    a00e:	31 05       	cpc	r19, r1
    a010:	41 f4       	brne	.+16     	; 0xa022 <malloc+0xf0>
    a012:	2d b7       	in	r18, 0x3d	; 61
    a014:	3e b7       	in	r19, 0x3e	; 62
    a016:	40 91 04 02 	lds	r20, 0x0204
    a01a:	50 91 05 02 	lds	r21, 0x0205
    a01e:	24 1b       	sub	r18, r20
    a020:	35 0b       	sbc	r19, r21
    a022:	e0 91 9e 02 	lds	r30, 0x029E
    a026:	f0 91 9f 02 	lds	r31, 0x029F
    a02a:	e2 17       	cp	r30, r18
    a02c:	f3 07       	cpc	r31, r19
    a02e:	a0 f4       	brcc	.+40     	; 0xa058 <malloc+0x126>
    a030:	2e 1b       	sub	r18, r30
    a032:	3f 0b       	sbc	r19, r31
    a034:	28 17       	cp	r18, r24
    a036:	39 07       	cpc	r19, r25
    a038:	78 f0       	brcs	.+30     	; 0xa058 <malloc+0x126>
    a03a:	ac 01       	movw	r20, r24
    a03c:	4e 5f       	subi	r20, 0xFE	; 254
    a03e:	5f 4f       	sbci	r21, 0xFF	; 255
    a040:	24 17       	cp	r18, r20
    a042:	35 07       	cpc	r19, r21
    a044:	48 f0       	brcs	.+18     	; 0xa058 <malloc+0x126>
    a046:	4e 0f       	add	r20, r30
    a048:	5f 1f       	adc	r21, r31
    a04a:	50 93 9f 02 	sts	0x029F, r21
    a04e:	40 93 9e 02 	sts	0x029E, r20
    a052:	81 93       	st	Z+, r24
    a054:	91 93       	st	Z+, r25
    a056:	02 c0       	rjmp	.+4      	; 0xa05c <malloc+0x12a>
    a058:	e0 e0       	ldi	r30, 0x00	; 0
    a05a:	f0 e0       	ldi	r31, 0x00	; 0
    a05c:	cf 01       	movw	r24, r30
    a05e:	df 91       	pop	r29
    a060:	cf 91       	pop	r28
    a062:	1f 91       	pop	r17
    a064:	0f 91       	pop	r16
    a066:	08 95       	ret

0000a068 <free>:
    a068:	ef 92       	push	r14
    a06a:	ff 92       	push	r15
    a06c:	0f 93       	push	r16
    a06e:	1f 93       	push	r17
    a070:	cf 93       	push	r28
    a072:	df 93       	push	r29
    a074:	00 97       	sbiw	r24, 0x00	; 0
    a076:	09 f4       	brne	.+2      	; 0xa07a <free+0x12>
    a078:	8f c0       	rjmp	.+286    	; 0xa198 <free+0x130>
    a07a:	dc 01       	movw	r26, r24
    a07c:	12 97       	sbiw	r26, 0x02	; 2
    a07e:	13 96       	adiw	r26, 0x03	; 3
    a080:	1c 92       	st	X, r1
    a082:	1e 92       	st	-X, r1
    a084:	12 97       	sbiw	r26, 0x02	; 2
    a086:	e0 90 a0 02 	lds	r14, 0x02A0
    a08a:	f0 90 a1 02 	lds	r15, 0x02A1
    a08e:	e1 14       	cp	r14, r1
    a090:	f1 04       	cpc	r15, r1
    a092:	89 f4       	brne	.+34     	; 0xa0b6 <free+0x4e>
    a094:	2d 91       	ld	r18, X+
    a096:	3c 91       	ld	r19, X
    a098:	11 97       	sbiw	r26, 0x01	; 1
    a09a:	28 0f       	add	r18, r24
    a09c:	39 1f       	adc	r19, r25
    a09e:	80 91 9e 02 	lds	r24, 0x029E
    a0a2:	90 91 9f 02 	lds	r25, 0x029F
    a0a6:	82 17       	cp	r24, r18
    a0a8:	93 07       	cpc	r25, r19
    a0aa:	89 f5       	brne	.+98     	; 0xa10e <free+0xa6>
    a0ac:	b0 93 9f 02 	sts	0x029F, r27
    a0b0:	a0 93 9e 02 	sts	0x029E, r26
    a0b4:	71 c0       	rjmp	.+226    	; 0xa198 <free+0x130>
    a0b6:	e7 01       	movw	r28, r14
    a0b8:	20 e0       	ldi	r18, 0x00	; 0
    a0ba:	30 e0       	ldi	r19, 0x00	; 0
    a0bc:	01 c0       	rjmp	.+2      	; 0xa0c0 <free+0x58>
    a0be:	ea 01       	movw	r28, r20
    a0c0:	ca 17       	cp	r28, r26
    a0c2:	db 07       	cpc	r29, r27
    a0c4:	38 f4       	brcc	.+14     	; 0xa0d4 <free+0x6c>
    a0c6:	4a 81       	ldd	r20, Y+2	; 0x02
    a0c8:	5b 81       	ldd	r21, Y+3	; 0x03
    a0ca:	9e 01       	movw	r18, r28
    a0cc:	41 15       	cp	r20, r1
    a0ce:	51 05       	cpc	r21, r1
    a0d0:	b1 f7       	brne	.-20     	; 0xa0be <free+0x56>
    a0d2:	22 c0       	rjmp	.+68     	; 0xa118 <free+0xb0>
    a0d4:	bc 01       	movw	r22, r24
    a0d6:	62 50       	subi	r22, 0x02	; 2
    a0d8:	71 09       	sbc	r23, r1
    a0da:	fb 01       	movw	r30, r22
    a0dc:	d3 83       	std	Z+3, r29	; 0x03
    a0de:	c2 83       	std	Z+2, r28	; 0x02
    a0e0:	00 81       	ld	r16, Z
    a0e2:	11 81       	ldd	r17, Z+1	; 0x01
    a0e4:	ac 01       	movw	r20, r24
    a0e6:	40 0f       	add	r20, r16
    a0e8:	51 1f       	adc	r21, r17
    a0ea:	4c 17       	cp	r20, r28
    a0ec:	5d 07       	cpc	r21, r29
    a0ee:	61 f4       	brne	.+24     	; 0xa108 <free+0xa0>
    a0f0:	48 81       	ld	r20, Y
    a0f2:	59 81       	ldd	r21, Y+1	; 0x01
    a0f4:	40 0f       	add	r20, r16
    a0f6:	51 1f       	adc	r21, r17
    a0f8:	4e 5f       	subi	r20, 0xFE	; 254
    a0fa:	5f 4f       	sbci	r21, 0xFF	; 255
    a0fc:	51 83       	std	Z+1, r21	; 0x01
    a0fe:	40 83       	st	Z, r20
    a100:	4a 81       	ldd	r20, Y+2	; 0x02
    a102:	5b 81       	ldd	r21, Y+3	; 0x03
    a104:	53 83       	std	Z+3, r21	; 0x03
    a106:	42 83       	std	Z+2, r20	; 0x02
    a108:	21 15       	cp	r18, r1
    a10a:	31 05       	cpc	r19, r1
    a10c:	29 f4       	brne	.+10     	; 0xa118 <free+0xb0>
    a10e:	b0 93 a1 02 	sts	0x02A1, r27
    a112:	a0 93 a0 02 	sts	0x02A0, r26
    a116:	40 c0       	rjmp	.+128    	; 0xa198 <free+0x130>
    a118:	f9 01       	movw	r30, r18
    a11a:	b3 83       	std	Z+3, r27	; 0x03
    a11c:	a2 83       	std	Z+2, r26	; 0x02
    a11e:	e9 01       	movw	r28, r18
    a120:	69 91       	ld	r22, Y+
    a122:	79 91       	ld	r23, Y+
    a124:	c6 0f       	add	r28, r22
    a126:	d7 1f       	adc	r29, r23
    a128:	ac 17       	cp	r26, r28
    a12a:	bd 07       	cpc	r27, r29
    a12c:	79 f4       	brne	.+30     	; 0xa14c <free+0xe4>
    a12e:	dc 01       	movw	r26, r24
    a130:	5e 91       	ld	r21, -X
    a132:	4e 91       	ld	r20, -X
    a134:	46 0f       	add	r20, r22
    a136:	57 1f       	adc	r21, r23
    a138:	4e 5f       	subi	r20, 0xFE	; 254
    a13a:	5f 4f       	sbci	r21, 0xFF	; 255
    a13c:	51 83       	std	Z+1, r21	; 0x01
    a13e:	40 83       	st	Z, r20
    a140:	12 96       	adiw	r26, 0x02	; 2
    a142:	8d 91       	ld	r24, X+
    a144:	9c 91       	ld	r25, X
    a146:	13 97       	sbiw	r26, 0x03	; 3
    a148:	93 83       	std	Z+3, r25	; 0x03
    a14a:	82 83       	std	Z+2, r24	; 0x02
    a14c:	a0 e0       	ldi	r26, 0x00	; 0
    a14e:	b0 e0       	ldi	r27, 0x00	; 0
    a150:	02 c0       	rjmp	.+4      	; 0xa156 <free+0xee>
    a152:	d7 01       	movw	r26, r14
    a154:	7c 01       	movw	r14, r24
    a156:	f7 01       	movw	r30, r14
    a158:	82 81       	ldd	r24, Z+2	; 0x02
    a15a:	93 81       	ldd	r25, Z+3	; 0x03
    a15c:	00 97       	sbiw	r24, 0x00	; 0
    a15e:	c9 f7       	brne	.-14     	; 0xa152 <free+0xea>
    a160:	c7 01       	movw	r24, r14
    a162:	02 96       	adiw	r24, 0x02	; 2
    a164:	20 81       	ld	r18, Z
    a166:	31 81       	ldd	r19, Z+1	; 0x01
    a168:	82 0f       	add	r24, r18
    a16a:	93 1f       	adc	r25, r19
    a16c:	20 91 9e 02 	lds	r18, 0x029E
    a170:	30 91 9f 02 	lds	r19, 0x029F
    a174:	28 17       	cp	r18, r24
    a176:	39 07       	cpc	r19, r25
    a178:	79 f4       	brne	.+30     	; 0xa198 <free+0x130>
    a17a:	10 97       	sbiw	r26, 0x00	; 0
    a17c:	29 f4       	brne	.+10     	; 0xa188 <free+0x120>
    a17e:	10 92 a1 02 	sts	0x02A1, r1
    a182:	10 92 a0 02 	sts	0x02A0, r1
    a186:	04 c0       	rjmp	.+8      	; 0xa190 <free+0x128>
    a188:	13 96       	adiw	r26, 0x03	; 3
    a18a:	1c 92       	st	X, r1
    a18c:	1e 92       	st	-X, r1
    a18e:	12 97       	sbiw	r26, 0x02	; 2
    a190:	f0 92 9f 02 	sts	0x029F, r15
    a194:	e0 92 9e 02 	sts	0x029E, r14
    a198:	df 91       	pop	r29
    a19a:	cf 91       	pop	r28
    a19c:	1f 91       	pop	r17
    a19e:	0f 91       	pop	r16
    a1a0:	ff 90       	pop	r15
    a1a2:	ef 90       	pop	r14
    a1a4:	08 95       	ret

0000a1a6 <memcpy>:
    a1a6:	fb 01       	movw	r30, r22
    a1a8:	dc 01       	movw	r26, r24
    a1aa:	02 c0       	rjmp	.+4      	; 0xa1b0 <memcpy+0xa>
    a1ac:	01 90       	ld	r0, Z+
    a1ae:	0d 92       	st	X+, r0
    a1b0:	41 50       	subi	r20, 0x01	; 1
    a1b2:	50 40       	sbci	r21, 0x00	; 0
    a1b4:	d8 f7       	brcc	.-10     	; 0xa1ac <memcpy+0x6>
    a1b6:	08 95       	ret

0000a1b8 <memset>:
    a1b8:	dc 01       	movw	r26, r24
    a1ba:	01 c0       	rjmp	.+2      	; 0xa1be <memset+0x6>
    a1bc:	6d 93       	st	X+, r22
    a1be:	41 50       	subi	r20, 0x01	; 1
    a1c0:	50 40       	sbci	r21, 0x00	; 0
    a1c2:	e0 f7       	brcc	.-8      	; 0xa1bc <memset+0x4>
    a1c4:	08 95       	ret

0000a1c6 <_exit>:
    a1c6:	f8 94       	cli

0000a1c8 <__stop_program>:
    a1c8:	ff cf       	rjmp	.-2      	; 0xa1c8 <__stop_program>
